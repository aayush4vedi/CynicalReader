ID,Source,Tag_Code,Tag_Name,Title,Url,ProcessdedTitle,WeightedContent,Content
1,Lobsters,visualization,Data Visualization,Plants and Soil Sensors,https://battlepenguin.com/tech/plants-and-soil-sensors,plant soil sensor,bigsense scala senseflux docker flask waitress vegehub review additional software wifi router chronograf influxdb previous sensor network project conclusion senseflux,year back work sensor network startup since always lookout new sensor hardware tool moved new apartment discovered vegehub searching soil moisture sensor use flower box vegehub support sending data online storage provider aka cloud custom web service considered adding support bigsense sensor web service wrote scala instead decided would good time experiment time series database wrote small python flask application called senseflux store vegehub data influxdb post show setup senseflux influxdb using docker graph sensor data using chronograf get started flower box soil moisture temperature sensor web interface allows set custom web service endpoint api key channel id channel id senseflux use identify sensor data store influxdb senseflux also use api key validation screenshot vegehub configuration web application senseflux python application us flask application framework waitress web server accept data vegehub sent createvghub endpoint data stored influxdb viewed using tool like chronograf easiest way get started run component docker container following establishes docker network creates appropriate container influxdb senseflux exposing senseflux port host machine docker network create sensenet docker run name influxsf network sensenet e influxdbuserinflux e influxdbuserpassword securepassword v influxstate varlibinfluxdb influxdb docker run name sensefluxsf network sensenet p e sfapikeytestkey e influxdbhostinfluxsf e influxdbuserinflux e influxdbpassword securepassword battlepenguinsenseflux e e e e e example create secure password securepassword set field input appropriate sensor type ensure sfapikey matched configured vegehub field defined default type voltage scaling range volt number sensor graph july august vegehub review setup purchased usd including individual sensor shipping part part cost usd soil temperature sensor relative humidity sensor meter power cable vegehub channel wifi sensor hub relay rain resistant battery box battery holder battery holder aa vgdark darkness sensor soil moisture sensor meter cable shipping â total usd â vegehub wifi expensive component setup come firmware web interface configuration general purpose device software closed source proprietary comparison raspberry pi beagle bone would depending model single board computer sbcs general purpose device would need additional software configuration become sensor relay sbcs also consume considerably power would run nearly long similar battery additional hardware would needed turn device regular interval read sensor data order conserve battery embedded hardware like arduino might comparable device come storage power consumption inside vegehub wifi module built wifi unable see wireless access point must wifi router support either dual configuration range wifi good move router meter closer balcony vegehub could make reliable connection sometimes would stop reporting hour open case could establish reliable signal live apartment may noise interference issue store sample per channel event communicate senseflux use default sample rate minute cache five half hour worth sample vegehub support transmitting data ssltls appears certificate major hosting provider support could get vegehub send data instance senseflux secured letsencrypt certificate suspect limited storage vegehub allow many standard certificate authority found operating system web browser website instruction flashing certificate via usb interface however attempt vegehub wifi battery box sensor vegehub minimal setup start logging data one supported cloud provider right box provide easy way collect sensor however software lack useful error message via web interface making suggestion vegehub engineer suggest following feature set next release external waterproof wifi antenna onboard storage better diagnostics via web interface include standard ssl certificate even limitation vegehub still okay solution sure powerful wifi access point close device change default higher refresh interval order minimize data loss chronograf use following launch chronograf container read graph data influxdb docker run name chronografsf network sensenet p v chronografstate varlibchronograf e influxdburlhttp e influxdbusernameinflux e influxdbpassword securepassword chronograf expose web interface port used create graph dashboard following dashboard created vegehub sensor sensor graph july august soil temperature humidity light saturation sensor returned reasonable data pretty much work expected battery sensor fewer data point recorded whenever vegehub sends data assuming simple voltage sensor vary due temperature battery first soil moisture sensor seemed continually send voltage turned reading recording flower box thought may short repositioning sensor started get reading another soil moisture sensor compare sure accurate reading influxdb previous sensor network project created web service could use either mysql postgres microsoft sql data storage backend senseflux first attempt using time series database early bug senseflux caused data stored string instead float influxdb allow changing schema casing string back numeric type ended export entire database write script reload data development process discovered following influxdb limitation schema modified created ability delete specific old invalid record old data deleted configured expire influxdb specific use case reading measure hundred thousand sensor high interval commonly found devops application monitoring data virtual machine cpu disk space usage also used storing reading sensor data center cabinet temperature network switch throughput work well situation old data need expire regular interval may best tool measuring input environmental sensor tend much lower sample rate influxdb may better suited large deployment agriculture sensor conclusion fun project got try new device write code create pretty graph hesitant recommend vegehub point due wifi connectivity firmware limitation data transmission issue however think device good idea consumer need product allow data processed variety service well ability keep host data senseflux simple example write middleware transform sensor data stored viewed variety existing open source tool
2,Lobsters,visualization,Data Visualization,"An Architecture for Community Contribution, Speed and Modularity",https://jponline.github.io/looset-landing/an-architecture/,architecture community contribution speed modularity,main page art unix programming wiki architect let option open clean architecture kickstarter campaign backend babashka lezer frontend reagent redux flux reframe treating ui finite state machine test given gherkin syntax puppeteer devcards storybook speed kickstarter looset main page video demo tool kickstarter campaign,tell opinion software architecture plan looset watch source file change show real time dependency diagram code block viewer independent filesystem check main page started work looset yet thought bit architecture believe building metaphor bad talking software prefer grow metaphor think software living organism need constant care make better decision lot rule around create software use design pattern write test first tdd model according domain first ddd behavior first bdd solid hexagonal onion architecture layer module etc value mentioned prefer understand principle reflect direction like art unix programming summary principle stated wiki influenced two idea first heard martin fowler opposing statement architect responsible making big important initial decision said something architect let option open second got reading clean architecture uncle bob point farther module business rule module work plugin ie framework database work plugins started think decision let open structure plugin maybe system maybe programming language see project becoming reality contribute kickstarter campaign asking need able work free open source software general goal writing software extensibility accretion feature become slow dangerous existent feature project grow big readability easy read understand maintainability flexibility testability decoupling way change module break system different place robust handle well unexpected error looset specific goal community contribution speed modularity backend working clojure time constant match personal development philosophy community philosophy understand people might personal preference use different stack work better specific domain reason decided write looset module independent script program called using bash instance write basic analyzer clojure using babashka let open language specific analyzer written script language could seen sort micro service architecture one could decide use python write analyzer c even integrate project lezer clojure data map part philosophy data need shared across different language even front end make sense write clojure edn extensible data notation thinking general adoption write data file json also inspired git work frontend people would agree making decision frontend different making decision backend still want maximize community contribution modularity still letting option open decided write looset view independent web component used basic html page instance write component using clojurescript reagent let open language framework support exporting web component one could decide use angular vuejs write new functionality already created web app scratch without state management system redux flux reframe know important would say important library idea main point app state global change firing event subscribe component change still investigating going use way available web component framework decision structure app state also need done like normalized possible splitting domain entity basically would write database ui model component state also computing little possible rendering phase treating ui finite state machine test like test driven development approach good test structuring dependency testable way tend write bdd style using given gherkin syntax mostly write unit test backend think unit test valuable frontend already used puppeteer write endtoend test clicking button taking screenshots etc looset use basically production like environment firing event checking result app state another strategy sometimes viewed test use way develop prototype devcards use visualize component multiple state developing tweaking app state storybook seems good alternative work web component speed project performance top priority expect work huge amount data different project main concern fast going interact big project generating large graph address problem web worker background process generating cache visualization kickstarter created campaign validate interest also able invest amount time project requires campaign asks one time contribution amount nothing changed end month reach goal looset main page video demo tool kickstarter campaign last update aug
3,Lobsters,visualization,Data Visualization,Non-Euclidean Geometry Explained,https://www.youtube.com/watch?v=zQo_S3yNa2w,noneuclidean geometry explained,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature noneuclidean geometry explained hyperbolica devlog youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature noneuclidean geometry explained hyperbolica devlog youtube
4,Lobsters,visualization,Data Visualization,How GPT3 Works - Visualizations and Animations,https://jalammar.github.io/how-gpt3-works-visualizations-animations/,work visualization animation,hacker news point comment reddit rmachinelearning point comment german chinese simplified abuzz intro ai youtube vector list number representing word illustrated sparse selfattention layer react code generation example,discussion hacker news point comment reddit rmachinelearning point comment translation german chinese simplified tech world abuzz hype massive language model like starting surprise u ability yet completely reliable business put front customer model showing spark cleverness sure accelerate march automation possibility intelligent computer system let remove aura mystery around learn trained work trained language model generates text optionally pas text input influence output output generated model learned training period scanned vast amount text training process exposing model lot text process completed experiment see one trained model estimated cost gpu year cost dataset billion token text used generate training example model example three training example generated one sentence top see slide window across text make lot example model presented example show feature ask predict next word model prediction wrong calculate error prediction update model next time make better prediction repeat million time let look step bit detail actually generates output one token time let assume token word please note description work discussion novel mainly ridiculously large scale architecture transformer decoder model based paper http massive encodes learns training billion number called parameter number used calculate token generate run untrained model start random parameter training find value lead better prediction number part hundred matrix inside model prediction mostly lot matrix multiplication intro ai youtube showed simple ml model one parameter good start unpack monstrosity shed light parameter distributed used need open model look inside token wide context window mean track along token processed let follow purple track system process word robotics produce highlevel step convert word vector list number representing word compute prediction convert resulting vector word important calculation occur inside stack transformer decoder layer see layer depth deep learning layer parameter make calculation magic happens highlevel view process see detailed explanation everything inside decoder blog post illustrated difference alternating dense sparse selfattention layer xray input response okay human within notice every token flow entire layer stack care output first word input done start caring output feed every word back model react code generation example description would input prompt green addition couple example description code believe react code would generated like pink token token token assumption priming example description appended input specific token separating example result fed model impressive work like wait finetuning rolled possibility even amazing finetuning actually update model weight make model better certain task
5,Lobsters,visualization,Data Visualization,ShiViz: gene­r­ate­ comm­uni­ca­tion graphs from dis­tri­but­ed sys­tem exe­cut­ion logs,http://bestchai.bitbucket.io/shiviz/,shiviz graph log,shiviz shiviz graph log looking dag process timeline event happenedbefore interact visualization show process name event info hide process timeline filter communication process e expandcollapse noncommunicating event search keywords subgraphs show hide difference execution explore execution cluster search network motif tool useful understanding communication graph reasoning ordering concurrent distributed setting analyzing activity process matter execution comparison differencing input log format tool j regexp tester generate log use shiviz library information,shiviz shiviz graph log try shiviz looking visualization time flow top bottom left panel show log middle panel display dag partially ordered vector timestamps recorded input log vertical line box top process timeline represents single thread execution eg process circle process timeline event executed process diagonal line connecting two event represent happenedbefore relation event higher two event happened second event dashed line represent transitive communication edge appear process hidden two process hidden communicated indirectly process larger circle represent merged local event number inside indicating number event represent radiating line fade represent communication edge process currently hidden view process associated unique color log entry left column corresponding process color default log entry sorted order entry appear graph interact visualization visualization support following action show process name event info click process box event circle hide process timeline click process box select hide remove process timeline view hide one process filter communication process e click process box select filter graph filtered show processesevents communicate filtered process filter one process expandcollapse noncommunicating event shiviz collapse adjacent process event incident communication edge larger circle click one node select expand undo collapsing search keywords subgraphs shiviz support keyword search across parsed field search support logical connective regular expression also search subgraphs communication topology interest search predefined structure like broadcast requestresponse define search custom structure show hide difference execution viewing two execution sidebyside click show difference highlight difference two execution host common execution represented rhombus process present execution event compared event capture group different event drawn rhombus explore execution cluster log multiple execution click cluster tab separate execution different group based chosen metric cluster number process group execution midpoint smallest largest number process cluster execution comparison see overview execution differ selected base search network motif click motif tab find frequently occurring communication pattern within across execution search motif occur least execution appear least time within single execution tool useful four usecases shiviz help support understanding communication graph quickly scan graph identify presence absence certain communication pattern reasoning ordering concurrent distributed setting visualize concurrency happenedbefore relation understand two event occurred concurrently one happened analyzing activity process matter hide process log line focused visualization filter communication process see event process likely influenced execution process care execution comparison differencing use shiviz process log containing multiple execution compare execution pairwise sidebyside use shiviz highlight event host difference two execution understand execution diverge input log format tool specify log format using regular expression input page regular expression must contain following three named capture group event description event host name process thread host executed event clock vector clock associated event json format also specify capture group event capture field date ip priority shown sidebar hovering event visualization field unless subgroup event group displayed part event message example log entry like pm event processn timen might parser regexp like date dddddd dd dd ampm event n host w clock capture group shiviz standard regexp syntax recommend using plain j regexp tester regular capture group develop expression name capture group afterwards generate log use shiviz developed several shivizcompatible vectorclock instrumentation library ccjavago system general study execution system produce log format parsed using regexp mechanism information
6,Lobsters,visualization,Data Visualization,treevis.net - A Visual Bibliography of Tree Visualization,https://treevis.net/,treevisnet visual bibliography tree visualization,hansjörg schulz,treevisnet visual bibliography tree visualization hansjörg schulz check survey biological visualization cartograms dynamic graph visualization financial visualization group graph visualization highdimensional visualization literature visualization multifaceted visualization performance visualization predictive visual analytics sentiment visualization set visualization spacetimecube visualization sparkline visualization text visualization time visualization timeline visualization
7,Lobsters,visualization,Data Visualization,Texthero – Python module to quickly analyze text datasets,https://github.com/jbesomi/texthero,texthero python module quickly analyze text datasets,zero hero installation getting started example api faq contribution zero hero well documented hablas español आप issue beta version contributing installation getting started getting started example text cleaning tfidf representation visualization text preprocessing tfidf kmeans visualization simple pipeline text cleaning api preprocessingpy nlppy representationpy visualizationpy preprocessing scope text preprocessing nlp scope nlp representation scope representation clustering dimensionality reduction representation visualization scope visualization faq contribution nlp expert open issue good creating website open issue sphinx template good writing adding faq page website create custom pipeline good python open issue contributor chronological order,text preprocessing representation visualization zero hero zero hero installation getting started example api faq contribution zero hero texthero python toolkit work textbased dataset quickly effortlessly texthero simple learn designed used top panda texthero expressiveness power panda extensively documented texthero modern conceived programmer decade little knowledge linguistic think texthero tool help understand work textbased dataset given tabular dataset easy grasp main concept instead given text dataset harder quick insight underline data texthero preprocessing text data mapping vector visualizing obtained vector space take couple line texthero include tool preprocess text data offer outofthebox solution also flexible customsolutions natural language processing keyphrases keywords extraction named entity recognition text representation tfidf term frequency custom wordembeddings wip vector space analysis clustering kmeans meanshift dbscan hierarchical topic modeling wip interpretation text visualization vector space visualization place localization map wip texthero free opensource well documented love way hope find pleasure working texthero development hablas español आप texthero developed whole nlp community know hard deal different nlp tool nltk spacy gensim textblob sklearn developed texthero simplify thing next main milestone provide multilingual support big step need help español sie sprechen deutsch fala português parli italiano вы говорите порусски yes speak another language mentioned might help u develop multilingual support even nt contributed started nlp contact u open github issue always first time promise learn lot know might help find new job nlpdeveloper improving python toolkit provide even better experience aid feedback crucial problem suggestion please open github issue glad support help beta version texthero community growing fast texthero though still beta version soon faster better version released bring major change instance give granular control pipeline starting next version preprocessing function require argument already tokenized text major change released stable version texthero backward compatibility respected point backward compatibility present weaker want part fastgrowing movement hesitate contribute contributing installation install texthero via pip hood texthero make use multiple nlp machine learning toolkits gensim nltk spacy scikitlearn nt need install separately pip take care faster performance make sure installed spacy version also make sure recent version python higher best getting started best way learn texthero getting started doc case advanced python user help texthero work example text cleaning tfidf representation visualization import texthero hero import panda pd df pdreadcsv http githubcomjbesomitextherorawmasterdatasetbbcsportcsv df pca df text pipe heroclean pipe herotfidf pipe heropca heroscatterplot df pca colortopic title pca bbc sport news text preprocessing tfidf kmeans visualization import texthero hero import panda pd df pdreadcsv http githubcomjbesomitextherorawmasterdatasetbbcsportcsv df tfidf df text pipe heroclean pipe herotfidf df kmeanslabels df tfidf pipe herokmeans astype str df pca df tfidf pipe heropca heroscatterplot df pca colorkmeanslabels title kmeans bbc sport news simple pipeline text cleaning import texthero hero import panda pd text sèntencé need ok cleaned pdseries text sèntencé need ok cleane dtype object remove digit heroremovedigits sèntencé need ok cleaned dtype object remove digit replaces block digit digit string removed want remove digit need set onlyblocks false remove type bracket content heroremovebrackets sèntencé need cleaned dtype object remove diacritic heroremovediacritics sentence need cleaned dtype object remove punctuation heroremovepunctuation sentence need cleaned dtype object remove extra whitespaces heroremovewhitespace sentence need cleaned dtype object sometimes also want get rid stopwords heroremovestopwords sentence need cleaned dtype object api texthero composed four module preprocessingpy nlppy representationpy visualizationpy preprocessing scope prepare text data analysis full documentation preprocessing nlp scope provide classic natural language processing tool namedentity nounphrases full documentation nlp representation scope map text data vector dimensionality reduction supported representation algorithm term frequency count term frequencyinverse document frequency tfidf supported clustering algorithm kmeans kmeans densitybased spatial clustering application noise dbscan meanshift meanshift supported dimensionality reduction algorithm principal component analysis pca tdistributed stochastic neighbor embedding tsne nonnegative matrix factorization nmf full documentation representation visualization scope summarize main fact regarding text data visualize module opinionable handy anyone need quick solution visualize screen text data instance text exploratory data analysis eda supported function text scatterplot scatterplot common word topwords full documentation visualization faq texthero sometimes want thing done right texthero help help make thing easier give developer time focus custom requirement believe cleaning text take minute finding important part text representing pragmatic way texthero one goal make developer spare time working text data pain case default pipeline quite good start always time come back improve previous work contribution texthero developed member nlp community whole nlpcommunity texthero u nlpdevelopers continue exist precious contribution community level expertise python nlp matter anyone help anyone welcome contribute nlp expert open issue tell u like dislike texthero better good creating website website soon moved docusaurus sphinx read open issue good news website look like average news need webdevelopment adapt sphinx template need help u good writing probably important piece missing texthero tutorial getting started guide good writing help u nt start adding faq page website explain create custom pipeline need help good python lot open issue techie guy one choose question inquiry drop line jonathanbesomiatgmailcom contributor chronological order mit license mit copyright c texthero permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
8,Lobsters,visualization,Data Visualization,Looset - A promise to improve documentation and code knowledge,https://www.google.com/url?q=https://youtu.be/ktVpk1UukKA&sa=D&ust=1593688146969000&usg=AFQjCNH-hzZgVz-r-OetlQd-EIyQiXlxrA,looset promise improve documentation code knowledge,,
9,Lobsters,visualization,Data Visualization,Eye Computer: Turning Vision into a Programmable Computer,https://humanfactorylab.com/uploads/8/3/4/4/83445868/changizi_eyecomputer_presspiece.pdf,eye computer turning vision programmable computer,,obj linearized l h e n endobj obj type xref length filter flatedecode decodeparms column predictor w index info r root r size prev id stream b r endstream endobj obj page r type catalog endobj obj filter flatedecode length stream b endstream endobj obj content r mediabox parent r resource extgstate r font r r r r r procsets pdf text imageb imagec imagei structparents type page endobj obj filter flatedecode length stream q l r j l q u v j jѡ b q q hmg w n endobj obj filter flatedecode length stream yk b ލs v v e h c oƅ oƅ w h e k ri ɡ j u db
10,Lobsters,visualization,Data Visualization,Gallery of Concept Visualization,http://conceptviz.github.io/,gallery concept visualization,,
11,Lobsters,visualization,Data Visualization,Measuring discrepancies in Airbnb guest acceptance rates using anonymized demographic data,https://news.airbnb.com/wp-content/uploads/sites/4/2020/06/Project-Lighthouse-Airbnb-2020-06-12.pdf,measuring discrepancy airbnb guest acceptance rate using anonymized demographic data,,obj endobj xref n n n n n n n n n n n n n n n n n n n n n n n trailer prev startxref eof obj stream l p tcp g g eif endstream endobj obj endobj obj endobj obj lastmodifiednumberofpages pagewidthlist resource extgstate font procset pdftextimagec xobject rotate rtrimbox typepage endobj obj endobj obj endobj obj iccbased r endobj obj stream b endstream endobj obj endobj obj stream xmy ƛf j ep endstream endobj obj endobj obj endobj obj stream mҭ gvd p p p p p p x endstream endobj obj extgstate subtypeform stream endstream endobj obj stream f c cf w դ v pw
12,Lobsters,visualization,Data Visualization,A dynamic multilevel Bayesian model to predict US presidential elections,https://github.com/TheEconomist/us-potus-model,dynamic multilevel bayesian model predict u presidential election,state national presidential election forecasting model implementation linzer file dictionary model performance map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance prediction state map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance prediction state map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance prediction state cumulative chart calibration plot licence economist mit licence creative common attribution international license,state national presidential election forecasting model last update wednesday august edt code dynamic multilevel bayesian model predict u presidential election written r stan improving pierre kremp implementation drew linzer dynamic linear model election forecasting linzer add correction partisan nonresponse survey mode survey population use informative statelevel prior update throughout election year specify empirical statelevel correlation political demographic variable see model prediction read work file dictionary term useful file pay attention script u presidential election located scriptsmodel directory three r script import data run model parse result different stan script run different version polling aggregate election forecasting model final model use presidential election model remove correction partisan nonresponse bias poll adjustment mode survey conducted live phone online population adult likely voter registered voter model performance graphical summary model performance map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance outlet evwtdbrier unwtdbrier statescorrect economist backtest prediction state state mean low high prob se nc mo fl ar oh va mt ga nv wv az co la m tx sd nh sc nd pa tn wi ky mn nm ia mi k wa ak nj al ne de ca ct md ok il wy ny id vt ut hi ri dc map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance outlet evwtdbrier unwtdbrier statescorrect linzer na na wangferguson na na na na jackmanpollster na na desartholbrook na na economist backtest intrade na na entenmargin error na na prediction state state mean low high prob se va fl co oh nh nc ia nv wi pa mn mi mo nm mt az ga nj sc wa ct sd nd m tn wv ca tx ne la il ky de k md ri ar al ny ak vt hi id ok wy ut dc map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance outlet evwtdbrier unwtdbrier statescorrect economist backtest pollsplus pollsonly princeton nyt upshot krempslate pollsavvy predictwise market predictwise overall desart holbrook daily ko huffpost prediction state state mean low high prob se fl nc nv pa nh oh co mi wi ia va mn az ga nm sc tx mo m ct wa de ak nj il la mt ri tn k sd nd ny ne al ar ca ut ky md wv id ok vt hi wy dc cumulative chart calibration plot licence software published economist mit licence data generated economist available creative common attribution international license licence include data software authored economist cover economist content thirdparty data content made available using software information licensing syndication copyright economist content found
13,Lobsters,visualization,Data Visualization,Highly Configurable Terminal Dashboard for Developers,https://github.com/Phantas0s/devdash,highly configurable terminal dashboard developer,using devdash menu installation latest released binary file linux script manual installation work example documentation complete devdash documentation acknowledgement marialetta bug idea contribute making wrote article blog licence apache licence showcase,devdash highly configurable terminal dashboard developer want choose display uptodate metric need one place using devdash pull data display cool diagram widget using yaml json config computer script command line remote computer via ssh github travis google analytics google search console feedly huge amount flexibility compared terminal dashboard choose widget want place widget want choose data want display color want use lot thing widget nt want personalize everything nt overwrite default unlimited amount different dashboard different configuration data refreshed automatically via time tick via keyboard shortcut ctrl r default menu installation simply grab latest released binary file download version need depending o linux script simple way download devdash move usrlocalbin order able use devdash everywhere easily curl lo http sh linuxsh rm linuxsh manual installation need clone repository build binary go build devdashgo work nutshell run devdash without giving dashboard configuration create display default dashboard defaultyml located xdgconfighomedevdash homeconfigdevdash get used dashboard configuration many example help getting started run dashboard created two filepaths mentioned need execute dashboard c mysuperdashboard configuration file called mysuperdashboardyml use json well well run dashboard anywhere give absolute relative path thriving make devdash easier configure yet flexible customizable next update go direction documentation complete devdash documentation find acknowledgement thanks marialetta awesome beautiful gopher pack made used logo top devdash inspired open source project bug idea would happy read new idea fix bug opening issue way go contribute first thanks lot want contribute devdash want implement new feature let speak first decide fit devdash scope making anybody interested managed develop devdash side full time job organized time kept motivation wrote article blog licence apache licence showcase
14,Lobsters,visualization,Data Visualization,Interactive map of Linux kernel,https://makelinux.github.io/kernel/map/,interactive map linux kernel,,log interactive map linux kernel
15,Lobsters,visualization,Data Visualization,"GLTR, a tool to detect automatically generated text",http://gltr.io/,gltr tool detect automatically generated text,try demo catching unicorn gltr tool detect automatically generated text mitibm watson ai lab harvardnlp check live demo find source code github read acl demo track paper nominated best demo language model generate text larger larger gltr g iant l anguage model est r oom gltr gltr example analysis unicorn gre text scientific abstract gltr realworld aiwritten article see gltr proof concept sampled text language model used testing idea check live demo henstr sgehrmann harvardnlp citation discussion gltr gltr acknowledgment gltr,try demo catching unicorn gltr tool detect automatically generated text hendrik strobelt sebastian gehrmann reviewed alexander rush collaboration mitibm watson ai lab harvardnlp introduce gltr inspect visual footprint automatically generated tex enables forensic analysis likely automatic system generated text check live demo find source code github read acl demo track paper nominated best demo language model generate text recent year natural language processing community seen development increasingly larger larger language model language model machine learning model trained predict next word given input context model generate text generating one word time prediction even extent constrained humanprovided input control model writes due modeling power large language model potential generate textual output indistinguishable humanwritten text nonexpert reader language model achieve incredibly accurate distributional estimate word may follow given context generation system us language model predicts likely next word generation look similar word human would picked similar situation despite much knowledge context open path malicious actor use tool generate fake review comment news article influence public opinion prevent happening need develop forensic technique detect automatically generated text make assumption computer generated text fool human sticking likely word position trick fool human contrast natural writing actually frequently selects unpredictable word make sense domain mean detect whether text actually look likely human writer gltr represents visually forensic tool detect text automatically generated large language model giant language model test room aim gltr take model used generated fake text tool detection gltr access language model openai one largest publicly available model use textual input analyze would predicted position since output ranking word model know compute observed following word rank use positional information overlay colored mask text corresponds position ranking word rank within likely word highlighted green top yellow top red top rest word purple thus get direct visual indication likely word model possible paste text tool provided example fake real text notice fraction red purple word ie unlikely prediction increase move real text moreover found informative snippet within text almost always appear red purple since surprising term carry message text hovering word display small box present top predicted word associated probability well position following word fun exercise look model would predicted finally tool show three different histogram aggregate information whole text first one demonstrates many word category appear text second one illustrates ratio probability top predicted word following word last histogram show distribution entropy prediction low uncertainty implies model confident prediction whereas high uncertainty implies uncertainty observe academic text input uncertainty generally higher sample model example analysis unicorn first example investigate famous generated text unicorn sample unreleased model developed openai first sentence prompt given model rest text entirely generated text look realistic hard detect reading whether written algorithm human see single purple word red word throughout text word green yellow strong indicator generated text looking histogram see additional hint automatic generation strong indication model generally assigned high probability correct word moreover uncertainty often low indicates overall low level surprise model note detect text artificial even without access real model since use smaller version model actually generated text access real underlying model would likely strengthen detected signal gre text begin analysis real text example text gre copied gre test reading comprehension reasonably high level thus expect higher percentage complex unexpected word upon visual inspection observe many unexpected purple red word high uncertainty observation strong indicator humanwritten text scientific abstract next show gltr scientific abstract taken paper predicting crisproutcomes published nature tool show remarkably high fraction red purple word suggests humanwritten text moreover uncertainty histogram rightskewed yet another indicator upon consultation first author work confirmed abstract fact written human realworld aiwritten article use tool analysize automatic text generation system isntance washington post utilizes algorithm report sporting event election see show gltr output showing one article remarkably almost everything named entity player team green yellow even though access underlying model visual footprint look article written autonomously semiautonomously algorithm proof concept sampled text language model used testing used model produce nonconditioned text sampling top prediction image show clear picture model detect text pretty well green yellow idea onto effect detect tool check live demo find u twitter henstr sgehrmann harvardnlp let u know email info gltrio citation inproceedings title gltr statistical detection visualization generated text author gehrmann sebastian strobelt hendrik rush alexander booktitle proceeding annual meeting association computational linguistics system demonstration month jul year address florence italy publisher association computational linguistics doi page abstract rapid improvement language model raised specter abuse text generation system progress motivates development simple method detecting generated text used nonexperts work introduce gltr tool support human detecting whether text generated model gltr applies suite baseline statistical method detect generation artifact across multiple sampling scheme humansubjects study show annotation scheme provided gltr improves human detectionrate fake text without prior training gltr opensource publicly deployed already widely used detect generated output discussion obviously gltr perfect main limitation limited scale wo nt able automatically detect largescale abuse individual case moreover requires least advanced knowledge language know whether uncommon word make sense position assumption also limited assumes simple sampling scheme adversary might change sampling parameter per word sentence make look similar language trying imitate however speculate adversarial sampling scheme would lead worse text model would forced generate word deemed unlikely would lead detectable property text therefore despite limitation believe gltr spark development similar idea work greater scale acknowledgment grateful ken arnold david bau david cox barbara grosz robert steve ross yonatan belinkov trying gltr finding example discussing tool finally thank thomas wolf huggingface pytorch port model use
16,Lobsters,visualization,Data Visualization,Maze Algorithms,https://www.jamisbuck.org/mazes/,maze algorithm,maze algorithm maze programmer http githubcomjamiscsmazes recursive backtracking parallel seed blobby recursive subdivision algorithm houston algorithm growing binary tree algorithm,maze algorithm interested maze algorithm written book subject maze programmer check source code demo freely available http githubcomjamiscsmazes recursive backtracking parallel seed blobby recursive subdivision algorithm threshold small medium large houston algorithm combine aldousbroder wilson get best performance sadly guaranteed uniform like two faster run aldousbroder minimum number cell visited switch wilson eg commadelimited combination must click reset maze recognize change growing binary tree algorithm eg commadelimited combination
17,Lobsters,visualization,Data Visualization,Measuring Fairness,https://pair.withgoogle.com/explorables/measuring-fairness/,measuring fairness,measuring fairness measuring fairness ground truth model prediction model mistake never miss disease avoid overcalling subgroup analysis base rate imbalanced metric conclusion hidden bias explorable reading make ai fairer judge attacking discrimination smarter machine learning fairness indicator whatif tool fairness tool fairness metric pair guidebook glossary appendix encompass gap technical description algorithm social context deployed credit propublica wee people,measuring fairness multiple way measure accuracy matter build model accuracy across measure vary applied different group people measuring fairness make sure model work equally well different group people turn many situation harder might think problem different way measure accuracy model often mathematically impossible equal across group illustrate happens creating fake medical model screen people disease ground truth half people actually disease half nt b model prediction perfect world sick people would test positive disease healthy people would test negative model mistake model test nt perfect model might make mistake mark sick person healthy c opposite marking healthy person sick f never miss disease simple followup test could model aggressively call close case rarely miss disease quantify measuring percentage sick people test positive g avoid overcalling hand nt secondary test treatment us drug limited supply might care percentage people positive test actually sick g issue tradeoff model optimization nt new brought focus ability finetune exactly aggressively disease diagnosed try adjusting aggressive model diagnosing disease subgroup analysis thing get even complicated check model treat different group fairly whatever decide term tradeoff metric probably like roughly even across different group people trying evenly allocate resource model miss case child adult would bad base rate look carefully see disease prevalent child base rate disease different across group fact base rate different make situation surprisingly tricky one thing even though test catch percentage sick adult sick child adult test positive le likely disease child test positive imbalanced metric disparity diagnosing child adult higher proportion well adult mistake test cause well adult marked positive well child similarly mistaken negative fix could model take age account try adjusting slider make model grade adult le aggressively child allows u align one metric adult disease le likely diagnosed matter move slider wo nt able make metric fair turn inevitable time base rate different test nt perfect multiple way define fairness mathematically usually nt possible satisfy conclusion thankfully notion fairness choose satisfy depend context model may possible satisfy every definition fairness focus notion fairness make sense use case even fairness along every dimension nt possible nt stop checking bias hidden bias explorable outline different way human bias feed ml model reading context setting different threshold different population might acceptable make ai fairer judge explores algorithm send people jail lot different metric might use determine algorithm fair attacking discrimination smarter machine learning show several work using fairness indicator conjunction whatif tool fairness tool test model commonly used fairness metric machine learning practitioner use word like describe percentage sick people test positive checkout pair guidebook glossary learn learn talk people building model appendix essay us academic mathematical standard fairness nt encompass everything might include colloquial meaning fairness gap technical description algorithm social context deployed sometimes might care different error mode different population treatment riskier child probably want model le aggressive diagnosing example assumes model sort score people based likely sick complete control model exact rate overdiagnosing group actually possible align metric discussed far try tweaking model get line adding third metric percentage well people test negative e make perfect fairness impossible see three metric wo nt align unless base rate disease population drag adjust model accuracy adjust occurrence disease credit adam pearce may thanks carey radebaugh dan nanas david weinberger emily denton emily reif fernanda hal abelson james wexler kristen olson lucas dixon mahima pushkarna martin wattenberg michael terry rebecca salois timnit gebru tulsee doshi yannick assogba yoni halpern zan armstrong colleague google help piece silhouette propublica wee people
18,Lobsters,visualization,Data Visualization,How to draw block diagrams,https://johnwickerson.wordpress.com/2019/08/08/block-diagrams/,draw block diagram,asplos bipartite graph,huge number academic paper particularly field computer systemsarchitecture use sort block diagram give reader overview solution presented instance two third paper presented year asplos contained least one diagram usually towards start paper shown block diagram typically consist block represent action arrow labelled input output passed around action quite eyecatching often appear rather easy understand explains used widely blog post explore guideline drawing diagram really easy understand first worth noting block diagram form directed bipartite graph seen graph two type vertex action vertex data vertex edge graph connects action vertex data vertex vice versa edge action action data data lead u first way draw block diagram explicitly bipartite graph following diagram simple compiler note importance clearly distinguishing two different type vertex asplos diagram make unnecessarily hard understand second way remove action vertex instead action appear label arrow data vertex shown advantage representation longer need two different style vertex third way remove data vertex instead data appear label arrow action vertex shown style also avoids need two different style vertex though slight disadvantage one never quite sure whether first last label drawn arrow done beyond tip style diagram chosen may depend whether one wish emphasise sequence action system take data operates problem latter two representation scale well complicated design instance suppose start following diagram complicated compiler try draw diagram dataoriented style becomes tricky place label action consume multiple piece data see instance awkward frontend label picture hand try draw diagram actionoriented style becomes tricky deal piece data consumed produced multiple action ir data picture conclude actionoriented dataoriented block diagram fine simple case lead simpler diagram make bipartite structure explicit bifurcation control flow data flow system may better resort explicit bipartite representation
19,Lobsters,visualization,Data Visualization,Harnessing Vision for Computation (2008),https://www.gwern.net/docs/cs/2008-changizi.pdf,harnessing vision computation,,obj resource r rotate type page content r parent r mediabox cropbox endobj obj font r r r r procset pdf text extgstate r r endobj obj filter flatedecode length stream p n k r ߐɘnc c xli cc il l ā v v j ν iơdzҹ wr n j uy ǎw x v k ݢgi w x u v ɢ w گ k p נ h yl c v n r җzx l k rtd g q ajgr g љh le z w u q hr dn waf kæ z u궰 k vgl ch k gh z ym β p ly r eqg e j q h k v
20,Lobsters,visualization,Data Visualization,Inside curved spaces,https://www.youtube.com/watch?v=s_PNYf4qVKc,inside curved space,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature inside curved space youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature inside curved space youtube
21,Lobsters,visualization,Data Visualization,Profiling 2019 NFL Offenses with nflscrapR Data and Clustering,https://comfortablynumb-ers.blogspot.com/2020/04/profiling-2019-nfl-offenses-with.html,profiling nfl offense nflscrapr data clustering,,project overview used nflscrapr season data organize team playcalling normalized relative proportion used clustering algorithm categorize team one five group analysis report kevin kraege found twitter cluster number generated arbitrarily according specific order clustering may seem odd refer team city instead team name tried remain consistent analysis data charted graphed project tend gloss detail mathematics method used principal component agglomerative clustering silhouette method epa advise research find someone qualified explain contact twitter wish help data specification play recorded fit one group group combination three type run end guard tackle three type pass deep short middle two type formation shotgun center understand nfl play much deeper categorization intention play may recorded result data limitation simplicity used first reason used specification data available nflscrapr nfl database record outcome every play season record personnel grouping field route specification formation even specify pistol shotgun specify left right outcome play decided unnecessary specify analyzing team direction play likely defensive formation injury matchup etc worth splitting play group instead arbitrary decision though risked potentially worse analysis simplifying data short deep mutually exclusive group neither mutually exclusive middle unedited nflscrapr data instead attributed middle every pas recorded middle nflscrapr data regardless deep short attributed deep short every respective pas middle created three mutually exclusive pas type merit since total number short pass considered considered middle roughly likewise deep pass totaled middle pass roughly felt making distinction worth adding third pas type including middle pass separate depth strategic merit since pass middle come route concept like slant post seam in crossers especially slot pass middle come out flat corner go comeback especially boundary distinction seems consistent enough route distinction used important caveat analysis include sack issue data know qb would tried throw ball also case fumble qb taking dropback going bias quantity pass depth intended target playcalling perspective since qb likely sacked longer wait throw thankfully incomplete pass interception included well corresponding epa location pas attempt recorded data filtered couple situation team simplify relevant strategy particularly situation high low chance winning former case team tend run ball often center run inside lower chance negative yard latter situation team tend pas shotgun aim deeper ironically including data likely converges playcalling tendency since team run ball often tend start losing passing compensate team pas tend opposite instead wanted find difference team neutral situation highlight constraint play included one team calculated win probability realize seems le limiting others decide use somewhat arbitrary decision find something like win probability start excluding play team two score early second quarter situation believe significantly change play calling tendency enough exclude play score differential greater equal point think situation would nt completely redundant previous constraint security case nt play score differential greater equal le quarter remaining situation likely redundant first constraint well another situation believe impact playcalling enough worth excluding play yard go play yard likely pas likely considered short one since distinction nflscrapr pas yard even yard go greater often team take checkdowns set field goal lower risk turnover another situation trying find team often get stuck long even yard may biased favor pass arbitrary decision likely conclusive clustering used agglomerative hierarchical clustering algorithm try identifies similar team creates cluster closest team one entire cluster created advantage allows anybody decide many cluster prefer graph dendrograph allows someone make horizontal slice separate team cluster may seem certain team close together especially bottom necessarily case team close together complete bottom actually seperate earlier farther may seem indianapolis philadelphia close new england new orleans would actually split sooner end dendrographthe first cut top separate cluster includes baltimore arizona kansa city every team next cut creates cluster includes minnesota previous two cluster third cut separate largest cluster two one atlanta new orleans buffalo philadelphia fourth cut separate baltimore arizona kansa city bringing u five cluster decided investigatehow many cluster would ideal obvious endpoint either one large cluster separate cluster neither lead interesting result one tool silhouette method determining effectively object clustered consistency within cluster graph show optimal number cluster according method used two determined first cut along dendrograph seem interesting enough report chose five cluster instead second optimal number according silhouette method common way visualize cluster simple scatterplot problem though graph scatterplot data twelve dimension instead ax replaced principal component find direction project data onto two dimension lead scatterplot spread still leaf difficult understand difference team formational play calling tendency make significantly easier allowing u visualize always difficult clustering used begin easily seen minnesota baltimore quite distance away team arizona kansa city sit together away two central cluster important remember data twelve dimension three miami appears left central cluster actually sitting behindin front cluster depending orientation also important remember distance interpreted well graph general green bay separate cluster cincinnati seattle philadelphia indianapolis seattle dendrograph bottom right cluster much later jacksonville appear closer scatterplot bottom corner leftmost central cluster according simplified perspective sit along particular axis interpreting result see play type used leaguewide expected point added per play highest epa pas shotgun middle field highest epa pas center deep likely driven playaction move linebacker safety fact passing center effective per depth category shotgun likely play action well running center higher epa end barely tackle run lower guard could guard run higher epa shotgun driven rpos draw play next several chart showing tendency per cluster epa per play grouped team averaging unless specified top chart proportion playcalls grouped cluster second chart proportion play cluster categorized along descriptive stats season effectiveness epa averaged grouping cluster third chart epa cluster split play type chart show team proportion playcalls including grouped formation play type chart playcalls normalized percentile epa playcall including grouped formation play type first cluster cut first cut yielded cluster arizona kansa city baltimore immediately create suspicion wondering team passed league grouped closely team ran league answer lie formational use weight formation lower play type difference baltimore shotgun formation astounding neutral situation play closest team shotgun usage arizona five team range including kansa city stark contrast minnesota played almost entirely center yet ran anybody else league except seattle baltimore first shotgun rush guard tackle tied shotgun end run arizona led league shotgun end rush percentage ironically since lead league passing percentage baltimore league shotgun pass middle yet among average league shotgun passing middle kansa city arizona among average shotgun pass middle yet first second respectively shotgun pass outside cluster mostly driven shotgun formation thus baltimore severed cluster third cut second cluster cut help explain minnesota first team removed cluster barely played shotgun neutral game scenario play center play center run specifically second highest usage center los angeles ram almost every team range rushed time tied seattle second baltimore league relative playcalling lead league every type rushing center pass across middle center well either least second least play type shotgun formation since rarely anything unconventional play design like baltimore strong evidence second unique offense league virtue playcalling tendency arizona kansa city likely still beat play design uniqueness would hard keep minnesota top unique offense least third cluster cut much need said nt already baltimore separate kansa city arizona cluster driven team rushing league would different enough team lead league passing percentage fourth cluster cut finally two remaining cluster cluster atlanta los angeles ram denver detroit oakland san francisco tennessee tampa bay dallas miami washington new england new orleans cluster buffalo cleveland new york jet jacksonville chicago houston pittsburgh la angeles charger new york giant carolina seattle cincinnati green bay indianapolis philadelphia seems primary separation cluster playing shotgun center versus cluster playing shotgun center despite split passing rushing percentage ironically despite shotgun considered common formation passing cluster playing center higher passing epa play type rushing epa play type average win epa per play epa per play per team epa either play center shotgun cluster best team san francisco tennessee new england new orleans cluster best team buffalo houston seattle green bay discrepancy best team cluster favor cluster despite discrepancy average win per cluster similar suggesting cluster strategy boom bust offensive style cluster cluster playing center despite passing percentage along leaguewide result showing passing center effective shotgun lead implication play action least passing run formation best passing team league yield success last visualization project spider plot radar chart draw quite ire analytics data visualization crowd since interpreting circular space unintuitive make hard compare value different team despite fun make look cool nerd need relax truth told trying find intricacy individual value individual playcalls seem frivolous lot playcalling also driven opponent game situation injury etc interested clustering see team similar well primary strategy team would argue difficult reduce twelve dimension data team form advantage polar plotting space see category team median category median shrunk thus focus graph another advantage polar plotting one easily separate graph quarter half better interpret category nt mutually exclusive see oclock shotgun rush oclock center rush oclock shotgun pass oclock pass center oclock rush play oclock passing play oclock oclock shotgun formation oclock oclock center first team plot categorized division colored cluster plot colored team color want thank benbbaldwin friscojosh statron especially leesharpenfl wonderful work nflscrapr awesome guide dvoa pythagorean win data footballoutsiderscom game data nflscrapr package r http http githubcomleesharpenfldatablobmasterrstudiointromd http githubcomleesharpenfldatablobmasterwpchartsmd http githubcomleesharpenfldatablobmastercolorsinrmd http githubcommaksimhorowitznflscraprblobmasterrepwpcalculatorr http githubcommaksimhorowitznflscrapr http analysis report kevin kraege found twitter
22,Lobsters,visualization,Data Visualization,Using Decision Trees for charting ill-behaved datasets,https://vvvvalvalval.github.io/posts/2020-05-15_Using-Decision-Trees-for-charting-ill-behaved-datasets.html,using decision tree charting illbehaved datasets,information content information content xx entropy h x entropy probability distribution binary entropy function conditional entropy h yx given x mutual information x mackay,information content random event measured bit defined frac mathbb p right understood amount surprise get observing certain mathbb p surprise observing information content zero impossible mathbb p information content infinite eventuality need consider never happen particular x discrete random variable x particular value x might take information content xx frac mathbb p xx right entropy h x x defined expected information content observing x h x mathbb e xleft frac mathbb p x right right sumx mathbb p xx frac mathbb p xx right equivalently define entropy probability distribution rather random variable h x mapsto p x sumx p x frac p x right entropy h x thought additive measure information lack x unpredictable particular entropy never negative zero x fully deterministic ie x take particular value probability special case binary variable x ie one follows bernouilli distribution entropy expressed using binary entropy function h x mathbb p xx x one two value taken x p p frac p right frac right given two discrete random variable x x random variable entropy denote h x particular outcome xx observed consider entropy conditioned probability distribution h yxx h mapsto mathbb p yy xx sumy mathbb p yyxx frac mathbb p yyxx right thought amount uncertainty remains know xx conditional entropy h yx given x expected value quantity h yx mathbb e x sim x left h yxx right sumx mathbb p x x h yxx thought average remaining uncertainty observe x particular leq h yx leq h h yx fully determined x function f f x h yx h x independent mutual information x x defined x h h yx mutual information understood amount information gain equivalently amount uncertainty lose hence formula access x mutual information several intuitive property x x independent x x x leq h equality fully determined x magic information theory translate informal notion uncertainty number add quantity defined enjoy many additive relation summarized figure courtesy mackay
23,Lobsters,visualization,Data Visualization,Visualizing Density,https://calebkruse.com/10-projects/schlieren/,visualizing density,pivlab,method backgroundoriented schlieren textured background placed behind subject imaged camera background stationary disturbance background would appear identical frame frame however density difference introduced light traveling background sensor bent area pressure change image appear background shiftedwarped area density disturbance frame sequence image processed find direction magnitude background movement motion reveal density difference test created pattern random dot sheet paper background contrast dot make easy see background shifted visualize density difference air held flame camera background subject background seen camera took fps video moving flame front background extracted frame image analyzed pivlab pivlab fluid dynamic tool meant tracking motion particle particle image velocimetry ca nt recommend highly though requires matlab use quality free software package amazing piv software wellsuited purpose background appears particle need find relative motion frame removed region lighter hand captured interfered analysis
25,Lobsters,visualization,Data Visualization,Clograms tries to close the gap between code and diagrams,https://github.com/jpmonettas/clograms,clograms try close gap code diagram,clograms clograms clograms clograms look feature scan index draw project entity draw shape link search explore project browser source code navigation multimethod implementation function spec function xreferences protocol multimethods reframe aware hot code reload save share see demo give try clograms prerequisite index clojure project index clojurescript project http micro manual search node shape source code node shape node link function var node discover interesting project thing coloring saving diagram clograms developer info clindex build ui prerequisite run doc exported pdf related work framework roadmap,clograms clograms explore document clojure clojurescript project drawing diagram clograms try close gap code diagram creating diagram tool aware code diagram code helpful lot situation like reverse engeneering unknown code base document project high level architecture planning redesign clograms try help task combining visualization capability diagram application navigationexploration feature ides look feature scan index lein depsedn project draw diagram using project entity project namespaces var spec etc draw shape document explain part system link entity express relation quickly search system entity add diagram explore system dependency using project browser easily add entity using clograms source code navigation quickly figure multimethod implementation function spec function xreferences protocol multimethods one click away identify uncalled funcitions library help discover intended api reframe aware quickly explore subscription event fxs cofxs hot code reload change clj cljs cljc file project indexing change flow ui automagically save share diagram edn file see demo screencast coming stay tuned give try clograms available maven artifact clojars latest released version prerequisite index clojure project clj sdeps deps clograms mvnversion clogramsserver platform clj clojureprojectfolder index clojurescript project clj sdeps deps clograms mvnversion clogramsserver platform cljs clojurescriptprojectfolder indexing finish point browser http wait little bit load need transfer entire index browser also run browser app mode like googlechrome apphttp supported option try clj sdeps deps clograms mvnversion clogramsserver help micro manual search add node diagram using top bar search remember name function namespace project spec whatever type select option node added center diagram node multiple type node use diagram drag right side bar node support least remove context menu option filtered using input top right side bar multiple node selected holding ctrl key multiple node selected dragging drag selected node currently supported node shape circle rectangle database group user source code node project namespaces var spec reframe event sub fxs cofxs shape node shape also support edit text context menu use change shape label also resizable dragging bottom right corner link link created dragging one node port another node port arrow direction changed using arrow control top creating link link also support label edition using edit text context menu removed like node function var node clicking function call link add another function node front find function call reference using find reference context menu double clicking funcition reference automatically add node behind discover interesting project thing right click project node use find project protocol find project multimethods discover protocol multimethods inside project also right click project use find unreferenced function discover function definition referenced inside project useful two thing library help find function intended called user non library project help identify unused function coloring color node project namespace belong using context menu source code node current selected color used saving diagram current diagram save functionality ideal save restore diagram edn file click save button ui clograms create diagramedn file inside folder running read every time load ui also save diagram pdf file using browser print functionality hide toolbars print diagram developer info clograms based clindex clojure script source code indexer build ui prerequisite cd clograms make watchui start shadowcljs watch ui open browser http make watchcss watch garden file build cs file run index project runnning clj clogramsserver someprojectfolder clj also use cljs index clojurescript project doc find diagramedn file repo document aspect clograms also exported pdf related work framework framework authoring publishing maintaining software architecture diagram roadmap check
26,Lobsters,visualization,Data Visualization,Plants and Soil Sensors,https://battlepenguin.com/tech/plants-and-soil-sensors,plant soil sensor,bigsense scala senseflux docker flask waitress vegehub review additional software wifi router chronograf influxdb previous sensor network project conclusion senseflux,year back work sensor network startup since always lookout new sensor hardware tool moved new apartment discovered vegehub searching soil moisture sensor use flower box vegehub support sending data online storage provider aka cloud custom web service considered adding support bigsense sensor web service wrote scala instead decided would good time experiment time series database wrote small python flask application called senseflux store vegehub data influxdb post show setup senseflux influxdb using docker graph sensor data using chronograf get started flower box soil moisture temperature sensor web interface allows set custom web service endpoint api key channel id channel id senseflux use identify sensor data store influxdb senseflux also use api key validation screenshot vegehub configuration web application senseflux python application us flask application framework waitress web server accept data vegehub sent createvghub endpoint data stored influxdb viewed using tool like chronograf easiest way get started run component docker container following establishes docker network creates appropriate container influxdb senseflux exposing senseflux port host machine docker network create sensenet docker run name influxsf network sensenet e influxdbuserinflux e influxdbuserpassword securepassword v influxstate varlibinfluxdb influxdb docker run name sensefluxsf network sensenet p e sfapikeytestkey e influxdbhostinfluxsf e influxdbuserinflux e influxdbpassword securepassword battlepenguinsenseflux e e e e e example create secure password securepassword set field input appropriate sensor type ensure sfapikey matched configured vegehub field defined default type voltage scaling range volt number sensor graph july august vegehub review setup purchased usd including individual sensor shipping part part cost usd soil temperature sensor relative humidity sensor meter power cable vegehub channel wifi sensor hub relay rain resistant battery box battery holder battery holder aa vgdark darkness sensor soil moisture sensor meter cable shipping â total usd â vegehub wifi expensive component setup come firmware web interface configuration general purpose device software closed source proprietary comparison raspberry pi beagle bone would depending model single board computer sbcs general purpose device would need additional software configuration become sensor relay sbcs also consume considerably power would run nearly long similar battery additional hardware would needed turn device regular interval read sensor data order conserve battery embedded hardware like arduino might comparable device come storage power consumption inside vegehub wifi module built wifi unable see wireless access point must wifi router support either dual configuration range wifi good move router meter closer balcony vegehub could make reliable connection sometimes would stop reporting hour open case could establish reliable signal live apartment may noise interference issue store sample per channel event communicate senseflux use default sample rate minute cache five half hour worth sample vegehub support transmitting data ssltls appears certificate major hosting provider support could get vegehub send data instance senseflux secured letsencrypt certificate suspect limited storage vegehub allow many standard certificate authority found operating system web browser website instruction flashing certificate via usb interface however attempt vegehub wifi battery box sensor vegehub minimal setup start logging data one supported cloud provider right box provide easy way collect sensor however software lack useful error message via web interface making suggestion vegehub engineer suggest following feature set next release external waterproof wifi antenna onboard storage better diagnostics via web interface include standard ssl certificate even limitation vegehub still okay solution sure powerful wifi access point close device change default higher refresh interval order minimize data loss chronograf use following launch chronograf container read graph data influxdb docker run name chronografsf network sensenet p v chronografstate varlibchronograf e influxdburlhttp e influxdbusernameinflux e influxdbpassword securepassword chronograf expose web interface port used create graph dashboard following dashboard created vegehub sensor sensor graph july august soil temperature humidity light saturation sensor returned reasonable data pretty much work expected battery sensor fewer data point recorded whenever vegehub sends data assuming simple voltage sensor vary due temperature battery first soil moisture sensor seemed continually send voltage turned reading recording flower box thought may short repositioning sensor started get reading another soil moisture sensor compare sure accurate reading influxdb previous sensor network project created web service could use either mysql postgres microsoft sql data storage backend senseflux first attempt using time series database early bug senseflux caused data stored string instead float influxdb allow changing schema casing string back numeric type ended export entire database write script reload data development process discovered following influxdb limitation schema modified created ability delete specific old invalid record old data deleted configured expire influxdb specific use case reading measure hundred thousand sensor high interval commonly found devops application monitoring data virtual machine cpu disk space usage also used storing reading sensor data center cabinet temperature network switch throughput work well situation old data need expire regular interval may best tool measuring input environmental sensor tend much lower sample rate influxdb may better suited large deployment agriculture sensor conclusion fun project got try new device write code create pretty graph hesitant recommend vegehub point due wifi connectivity firmware limitation data transmission issue however think device good idea consumer need product allow data processed variety service well ability keep host data senseflux simple example write middleware transform sensor data stored viewed variety existing open source tool
27,Lobsters,visualization,Data Visualization,"An Architecture for Community Contribution, Speed and Modularity",https://jponline.github.io/looset-landing/an-architecture/,architecture community contribution speed modularity,main page art unix programming wiki architect let option open clean architecture kickstarter campaign backend babashka lezer frontend reagent redux flux reframe treating ui finite state machine test given gherkin syntax puppeteer devcards storybook speed kickstarter looset main page video demo tool kickstarter campaign,tell opinion software architecture plan looset watch source file change show real time dependency diagram code block viewer independent filesystem check main page started work looset yet thought bit architecture believe building metaphor bad talking software prefer grow metaphor think software living organism need constant care make better decision lot rule around create software use design pattern write test first tdd model according domain first ddd behavior first bdd solid hexagonal onion architecture layer module etc value mentioned prefer understand principle reflect direction like art unix programming summary principle stated wiki influenced two idea first heard martin fowler opposing statement architect responsible making big important initial decision said something architect let option open second got reading clean architecture uncle bob point farther module business rule module work plugin ie framework database work plugins started think decision let open structure plugin maybe system maybe programming language see project becoming reality contribute kickstarter campaign asking need able work free open source software general goal writing software extensibility accretion feature become slow dangerous existent feature project grow big readability easy read understand maintainability flexibility testability decoupling way change module break system different place robust handle well unexpected error looset specific goal community contribution speed modularity backend working clojure time constant match personal development philosophy community philosophy understand people might personal preference use different stack work better specific domain reason decided write looset module independent script program called using bash instance write basic analyzer clojure using babashka let open language specific analyzer written script language could seen sort micro service architecture one could decide use python write analyzer c even integrate project lezer clojure data map part philosophy data need shared across different language even front end make sense write clojure edn extensible data notation thinking general adoption write data file json also inspired git work frontend people would agree making decision frontend different making decision backend still want maximize community contribution modularity still letting option open decided write looset view independent web component used basic html page instance write component using clojurescript reagent let open language framework support exporting web component one could decide use angular vuejs write new functionality already created web app scratch without state management system redux flux reframe know important would say important library idea main point app state global change firing event subscribe component change still investigating going use way available web component framework decision structure app state also need done like normalized possible splitting domain entity basically would write database ui model component state also computing little possible rendering phase treating ui finite state machine test like test driven development approach good test structuring dependency testable way tend write bdd style using given gherkin syntax mostly write unit test backend think unit test valuable frontend already used puppeteer write endtoend test clicking button taking screenshots etc looset use basically production like environment firing event checking result app state another strategy sometimes viewed test use way develop prototype devcards use visualize component multiple state developing tweaking app state storybook seems good alternative work web component speed project performance top priority expect work huge amount data different project main concern fast going interact big project generating large graph address problem web worker background process generating cache visualization kickstarter created campaign validate interest also able invest amount time project requires campaign asks one time contribution amount nothing changed end month reach goal looset main page video demo tool kickstarter campaign last update aug
28,Lobsters,visualization,Data Visualization,Non-Euclidean Geometry Explained,https://www.youtube.com/watch?v=zQo_S3yNa2w,noneuclidean geometry explained,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature noneuclidean geometry explained hyperbolica devlog youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature noneuclidean geometry explained hyperbolica devlog youtube
29,Lobsters,visualization,Data Visualization,How GPT3 Works - Visualizations and Animations,https://jalammar.github.io/how-gpt3-works-visualizations-animations/,work visualization animation,hacker news point comment reddit rmachinelearning point comment german chinese simplified abuzz intro ai youtube vector list number representing word illustrated sparse selfattention layer react code generation example,discussion hacker news point comment reddit rmachinelearning point comment translation german chinese simplified tech world abuzz hype massive language model like starting surprise u ability yet completely reliable business put front customer model showing spark cleverness sure accelerate march automation possibility intelligent computer system let remove aura mystery around learn trained work trained language model generates text optionally pas text input influence output output generated model learned training period scanned vast amount text training process exposing model lot text process completed experiment see one trained model estimated cost gpu year cost dataset billion token text used generate training example model example three training example generated one sentence top see slide window across text make lot example model presented example show feature ask predict next word model prediction wrong calculate error prediction update model next time make better prediction repeat million time let look step bit detail actually generates output one token time let assume token word please note description work discussion novel mainly ridiculously large scale architecture transformer decoder model based paper http massive encodes learns training billion number called parameter number used calculate token generate run untrained model start random parameter training find value lead better prediction number part hundred matrix inside model prediction mostly lot matrix multiplication intro ai youtube showed simple ml model one parameter good start unpack monstrosity shed light parameter distributed used need open model look inside token wide context window mean track along token processed let follow purple track system process word robotics produce highlevel step convert word vector list number representing word compute prediction convert resulting vector word important calculation occur inside stack transformer decoder layer see layer depth deep learning layer parameter make calculation magic happens highlevel view process see detailed explanation everything inside decoder blog post illustrated difference alternating dense sparse selfattention layer xray input response okay human within notice every token flow entire layer stack care output first word input done start caring output feed every word back model react code generation example description would input prompt green addition couple example description code believe react code would generated like pink token token token assumption priming example description appended input specific token separating example result fed model impressive work like wait finetuning rolled possibility even amazing finetuning actually update model weight make model better certain task
30,Lobsters,visualization,Data Visualization,ShiViz: gene­r­ate­ comm­uni­ca­tion graphs from dis­tri­but­ed sys­tem exe­cut­ion logs,http://bestchai.bitbucket.io/shiviz/,shiviz graph log,shiviz shiviz graph log looking dag process timeline event happenedbefore interact visualization show process name event info hide process timeline filter communication process e expandcollapse noncommunicating event search keywords subgraphs show hide difference execution explore execution cluster search network motif tool useful understanding communication graph reasoning ordering concurrent distributed setting analyzing activity process matter execution comparison differencing input log format tool j regexp tester generate log use shiviz library information,shiviz shiviz graph log try shiviz looking visualization time flow top bottom left panel show log middle panel display dag partially ordered vector timestamps recorded input log vertical line box top process timeline represents single thread execution eg process circle process timeline event executed process diagonal line connecting two event represent happenedbefore relation event higher two event happened second event dashed line represent transitive communication edge appear process hidden two process hidden communicated indirectly process larger circle represent merged local event number inside indicating number event represent radiating line fade represent communication edge process currently hidden view process associated unique color log entry left column corresponding process color default log entry sorted order entry appear graph interact visualization visualization support following action show process name event info click process box event circle hide process timeline click process box select hide remove process timeline view hide one process filter communication process e click process box select filter graph filtered show processesevents communicate filtered process filter one process expandcollapse noncommunicating event shiviz collapse adjacent process event incident communication edge larger circle click one node select expand undo collapsing search keywords subgraphs shiviz support keyword search across parsed field search support logical connective regular expression also search subgraphs communication topology interest search predefined structure like broadcast requestresponse define search custom structure show hide difference execution viewing two execution sidebyside click show difference highlight difference two execution host common execution represented rhombus process present execution event compared event capture group different event drawn rhombus explore execution cluster log multiple execution click cluster tab separate execution different group based chosen metric cluster number process group execution midpoint smallest largest number process cluster execution comparison see overview execution differ selected base search network motif click motif tab find frequently occurring communication pattern within across execution search motif occur least execution appear least time within single execution tool useful four usecases shiviz help support understanding communication graph quickly scan graph identify presence absence certain communication pattern reasoning ordering concurrent distributed setting visualize concurrency happenedbefore relation understand two event occurred concurrently one happened analyzing activity process matter hide process log line focused visualization filter communication process see event process likely influenced execution process care execution comparison differencing use shiviz process log containing multiple execution compare execution pairwise sidebyside use shiviz highlight event host difference two execution understand execution diverge input log format tool specify log format using regular expression input page regular expression must contain following three named capture group event description event host name process thread host executed event clock vector clock associated event json format also specify capture group event capture field date ip priority shown sidebar hovering event visualization field unless subgroup event group displayed part event message example log entry like pm event processn timen might parser regexp like date dddddd dd dd ampm event n host w clock capture group shiviz standard regexp syntax recommend using plain j regexp tester regular capture group develop expression name capture group afterwards generate log use shiviz developed several shivizcompatible vectorclock instrumentation library ccjavago system general study execution system produce log format parsed using regexp mechanism information
31,Lobsters,visualization,Data Visualization,treevis.net - A Visual Bibliography of Tree Visualization,https://treevis.net/,treevisnet visual bibliography tree visualization,hansjörg schulz,treevisnet visual bibliography tree visualization hansjörg schulz check survey biological visualization cartograms dynamic graph visualization financial visualization group graph visualization highdimensional visualization literature visualization multifaceted visualization performance visualization predictive visual analytics sentiment visualization set visualization spacetimecube visualization sparkline visualization text visualization time visualization timeline visualization
32,Lobsters,visualization,Data Visualization,Texthero – Python module to quickly analyze text datasets,https://github.com/jbesomi/texthero,texthero python module quickly analyze text datasets,zero hero installation getting started example api faq contribution zero hero well documented hablas español आप issue beta version contributing installation getting started getting started example text cleaning tfidf representation visualization text preprocessing tfidf kmeans visualization simple pipeline text cleaning api preprocessingpy nlppy representationpy visualizationpy preprocessing scope text preprocessing nlp scope nlp representation scope representation clustering dimensionality reduction representation visualization scope visualization faq contribution nlp expert open issue good creating website open issue sphinx template good writing adding faq page website create custom pipeline good python open issue contributor chronological order,text preprocessing representation visualization zero hero zero hero installation getting started example api faq contribution zero hero texthero python toolkit work textbased dataset quickly effortlessly texthero simple learn designed used top panda texthero expressiveness power panda extensively documented texthero modern conceived programmer decade little knowledge linguistic think texthero tool help understand work textbased dataset given tabular dataset easy grasp main concept instead given text dataset harder quick insight underline data texthero preprocessing text data mapping vector visualizing obtained vector space take couple line texthero include tool preprocess text data offer outofthebox solution also flexible customsolutions natural language processing keyphrases keywords extraction named entity recognition text representation tfidf term frequency custom wordembeddings wip vector space analysis clustering kmeans meanshift dbscan hierarchical topic modeling wip interpretation text visualization vector space visualization place localization map wip texthero free opensource well documented love way hope find pleasure working texthero development hablas español आप texthero developed whole nlp community know hard deal different nlp tool nltk spacy gensim textblob sklearn developed texthero simplify thing next main milestone provide multilingual support big step need help español sie sprechen deutsch fala português parli italiano вы говорите порусски yes speak another language mentioned might help u develop multilingual support even nt contributed started nlp contact u open github issue always first time promise learn lot know might help find new job nlpdeveloper improving python toolkit provide even better experience aid feedback crucial problem suggestion please open github issue glad support help beta version texthero community growing fast texthero though still beta version soon faster better version released bring major change instance give granular control pipeline starting next version preprocessing function require argument already tokenized text major change released stable version texthero backward compatibility respected point backward compatibility present weaker want part fastgrowing movement hesitate contribute contributing installation install texthero via pip hood texthero make use multiple nlp machine learning toolkits gensim nltk spacy scikitlearn nt need install separately pip take care faster performance make sure installed spacy version also make sure recent version python higher best getting started best way learn texthero getting started doc case advanced python user help texthero work example text cleaning tfidf representation visualization import texthero hero import panda pd df pdreadcsv http githubcomjbesomitextherorawmasterdatasetbbcsportcsv df pca df text pipe heroclean pipe herotfidf pipe heropca heroscatterplot df pca colortopic title pca bbc sport news text preprocessing tfidf kmeans visualization import texthero hero import panda pd df pdreadcsv http githubcomjbesomitextherorawmasterdatasetbbcsportcsv df tfidf df text pipe heroclean pipe herotfidf df kmeanslabels df tfidf pipe herokmeans astype str df pca df tfidf pipe heropca heroscatterplot df pca colorkmeanslabels title kmeans bbc sport news simple pipeline text cleaning import texthero hero import panda pd text sèntencé need ok cleaned pdseries text sèntencé need ok cleane dtype object remove digit heroremovedigits sèntencé need ok cleaned dtype object remove digit replaces block digit digit string removed want remove digit need set onlyblocks false remove type bracket content heroremovebrackets sèntencé need cleaned dtype object remove diacritic heroremovediacritics sentence need cleaned dtype object remove punctuation heroremovepunctuation sentence need cleaned dtype object remove extra whitespaces heroremovewhitespace sentence need cleaned dtype object sometimes also want get rid stopwords heroremovestopwords sentence need cleaned dtype object api texthero composed four module preprocessingpy nlppy representationpy visualizationpy preprocessing scope prepare text data analysis full documentation preprocessing nlp scope provide classic natural language processing tool namedentity nounphrases full documentation nlp representation scope map text data vector dimensionality reduction supported representation algorithm term frequency count term frequencyinverse document frequency tfidf supported clustering algorithm kmeans kmeans densitybased spatial clustering application noise dbscan meanshift meanshift supported dimensionality reduction algorithm principal component analysis pca tdistributed stochastic neighbor embedding tsne nonnegative matrix factorization nmf full documentation representation visualization scope summarize main fact regarding text data visualize module opinionable handy anyone need quick solution visualize screen text data instance text exploratory data analysis eda supported function text scatterplot scatterplot common word topwords full documentation visualization faq texthero sometimes want thing done right texthero help help make thing easier give developer time focus custom requirement believe cleaning text take minute finding important part text representing pragmatic way texthero one goal make developer spare time working text data pain case default pipeline quite good start always time come back improve previous work contribution texthero developed member nlp community whole nlpcommunity texthero u nlpdevelopers continue exist precious contribution community level expertise python nlp matter anyone help anyone welcome contribute nlp expert open issue tell u like dislike texthero better good creating website website soon moved docusaurus sphinx read open issue good news website look like average news need webdevelopment adapt sphinx template need help u good writing probably important piece missing texthero tutorial getting started guide good writing help u nt start adding faq page website explain create custom pipeline need help good python lot open issue techie guy one choose question inquiry drop line jonathanbesomiatgmailcom contributor chronological order mit license mit copyright c texthero permission hereby granted free charge person obtaining copy software associated documentation file software deal software without restriction including without limitation right use copy modify merge publish distribute sublicense andor sell copy software permit person software furnished subject following condition copyright notice permission notice shall included copy substantial portion software software provided without warranty kind express implied including limited warranty merchantability fitness particular purpose noninfringement event shall author copyright holder liable claim damage liability whether action contract tort otherwise arising connection software use dealing software
33,Lobsters,visualization,Data Visualization,Looset - A promise to improve documentation and code knowledge,https://www.google.com/url?q=https://youtu.be/ktVpk1UukKA&sa=D&ust=1593688146969000&usg=AFQjCNH-hzZgVz-r-OetlQd-EIyQiXlxrA,looset promise improve documentation code knowledge,,
34,Lobsters,visualization,Data Visualization,Eye Computer: Turning Vision into a Programmable Computer,https://humanfactorylab.com/uploads/8/3/4/4/83445868/changizi_eyecomputer_presspiece.pdf,eye computer turning vision programmable computer,,obj linearized l h e n endobj obj type xref length filter flatedecode decodeparms column predictor w index info r root r size prev id stream b r endstream endobj obj page r type catalog endobj obj filter flatedecode length stream b endstream endobj obj content r mediabox parent r resource extgstate r font r r r r r procsets pdf text imageb imagec imagei structparents type page endobj obj filter flatedecode length stream q l r j l q u v j jѡ b q q hmg w n endobj obj filter flatedecode length stream yk b ލs v v e h c oƅ oƅ w h e k ri ɡ j u db
35,Lobsters,visualization,Data Visualization,Gallery of Concept Visualization,http://conceptviz.github.io/,gallery concept visualization,,
36,Lobsters,visualization,Data Visualization,Measuring discrepancies in Airbnb guest acceptance rates using anonymized demographic data,https://news.airbnb.com/wp-content/uploads/sites/4/2020/06/Project-Lighthouse-Airbnb-2020-06-12.pdf,measuring discrepancy airbnb guest acceptance rate using anonymized demographic data,,obj endobj xref n n n n n n n n n n n n n n n n n n n n n n n trailer prev startxref eof obj stream l p tcp g g eif endstream endobj obj endobj obj endobj obj lastmodifiednumberofpages pagewidthlist resource extgstate font procset pdftextimagec xobject rotate rtrimbox typepage endobj obj endobj obj endobj obj iccbased r endobj obj stream b endstream endobj obj endobj obj stream xmy ƛf j ep endstream endobj obj endobj obj endobj obj stream mҭ gvd p p p p p p x endstream endobj obj extgstate subtypeform stream endstream endobj obj stream f c cf w դ v pw
37,Lobsters,visualization,Data Visualization,A dynamic multilevel Bayesian model to predict US presidential elections,https://github.com/TheEconomist/us-potus-model,dynamic multilevel bayesian model predict u presidential election,state national presidential election forecasting model implementation linzer file dictionary model performance map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance prediction state map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance prediction state map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance prediction state cumulative chart calibration plot licence economist mit licence creative common attribution international license,state national presidential election forecasting model last update wednesday august edt code dynamic multilevel bayesian model predict u presidential election written r stan improving pierre kremp implementation drew linzer dynamic linear model election forecasting linzer add correction partisan nonresponse survey mode survey population use informative statelevel prior update throughout election year specify empirical statelevel correlation political demographic variable see model prediction read work file dictionary term useful file pay attention script u presidential election located scriptsmodel directory three r script import data run model parse result different stan script run different version polling aggregate election forecasting model final model use presidential election model remove correction partisan nonresponse bias poll adjustment mode survey conducted live phone online population adult likely voter registered voter model performance graphical summary model performance map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance outlet evwtdbrier unwtdbrier statescorrect economist backtest prediction state state mean low high prob se nc mo fl ar oh va mt ga nv wv az co la m tx sd nh sc nd pa tn wi ky mn nm ia mi k wa ak nj al ne de ca ct md ok il wy ny id vt ut hi ri dc map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance outlet evwtdbrier unwtdbrier statescorrect linzer na na wangferguson na na na na jackmanpollster na na desartholbrook na na economist backtest intrade na na entenmargin error na na prediction state state mean low high prob se va fl co oh nh nc ia nv wi pa mn mi mo nm mt az ga nj sc wa ct sd nd m tn wv ca tx ne la il ky de k md ri ar al ny ak vt hi id ok wy ut dc map final electoral college histogram national state poll electoral college time state v national delta time model result v poll v prior performance outlet evwtdbrier unwtdbrier statescorrect economist backtest pollsplus pollsonly princeton nyt upshot krempslate pollsavvy predictwise market predictwise overall desart holbrook daily ko huffpost prediction state state mean low high prob se fl nc nv pa nh oh co mi wi ia va mn az ga nm sc tx mo m ct wa de ak nj il la mt ri tn k sd nd ny ne al ar ca ut ky md wv id ok vt hi wy dc cumulative chart calibration plot licence software published economist mit licence data generated economist available creative common attribution international license licence include data software authored economist cover economist content thirdparty data content made available using software information licensing syndication copyright economist content found
38,Lobsters,visualization,Data Visualization,Highly Configurable Terminal Dashboard for Developers,https://github.com/Phantas0s/devdash,highly configurable terminal dashboard developer,using devdash menu installation latest released binary file linux script manual installation work example documentation complete devdash documentation acknowledgement marialetta bug idea contribute making wrote article blog licence apache licence showcase,devdash highly configurable terminal dashboard developer want choose display uptodate metric need one place using devdash pull data display cool diagram widget using yaml json config computer script command line remote computer via ssh github travis google analytics google search console feedly huge amount flexibility compared terminal dashboard choose widget want place widget want choose data want display color want use lot thing widget nt want personalize everything nt overwrite default unlimited amount different dashboard different configuration data refreshed automatically via time tick via keyboard shortcut ctrl r default menu installation simply grab latest released binary file download version need depending o linux script simple way download devdash move usrlocalbin order able use devdash everywhere easily curl lo http sh linuxsh rm linuxsh manual installation need clone repository build binary go build devdashgo work nutshell run devdash without giving dashboard configuration create display default dashboard defaultyml located xdgconfighomedevdash homeconfigdevdash get used dashboard configuration many example help getting started run dashboard created two filepaths mentioned need execute dashboard c mysuperdashboard configuration file called mysuperdashboardyml use json well well run dashboard anywhere give absolute relative path thriving make devdash easier configure yet flexible customizable next update go direction documentation complete devdash documentation find acknowledgement thanks marialetta awesome beautiful gopher pack made used logo top devdash inspired open source project bug idea would happy read new idea fix bug opening issue way go contribute first thanks lot want contribute devdash want implement new feature let speak first decide fit devdash scope making anybody interested managed develop devdash side full time job organized time kept motivation wrote article blog licence apache licence showcase
39,Lobsters,visualization,Data Visualization,Interactive map of Linux kernel,https://makelinux.github.io/kernel/map/,interactive map linux kernel,,log interactive map linux kernel
40,Lobsters,visualization,Data Visualization,"GLTR, a tool to detect automatically generated text",http://gltr.io/,gltr tool detect automatically generated text,try demo catching unicorn gltr tool detect automatically generated text mitibm watson ai lab harvardnlp check live demo find source code github read acl demo track paper nominated best demo language model generate text larger larger gltr g iant l anguage model est r oom gltr gltr example analysis unicorn gre text scientific abstract gltr realworld aiwritten article see gltr proof concept sampled text language model used testing idea check live demo henstr sgehrmann harvardnlp citation discussion gltr gltr acknowledgment gltr,try demo catching unicorn gltr tool detect automatically generated text hendrik strobelt sebastian gehrmann reviewed alexander rush collaboration mitibm watson ai lab harvardnlp introduce gltr inspect visual footprint automatically generated tex enables forensic analysis likely automatic system generated text check live demo find source code github read acl demo track paper nominated best demo language model generate text recent year natural language processing community seen development increasingly larger larger language model language model machine learning model trained predict next word given input context model generate text generating one word time prediction even extent constrained humanprovided input control model writes due modeling power large language model potential generate textual output indistinguishable humanwritten text nonexpert reader language model achieve incredibly accurate distributional estimate word may follow given context generation system us language model predicts likely next word generation look similar word human would picked similar situation despite much knowledge context open path malicious actor use tool generate fake review comment news article influence public opinion prevent happening need develop forensic technique detect automatically generated text make assumption computer generated text fool human sticking likely word position trick fool human contrast natural writing actually frequently selects unpredictable word make sense domain mean detect whether text actually look likely human writer gltr represents visually forensic tool detect text automatically generated large language model giant language model test room aim gltr take model used generated fake text tool detection gltr access language model openai one largest publicly available model use textual input analyze would predicted position since output ranking word model know compute observed following word rank use positional information overlay colored mask text corresponds position ranking word rank within likely word highlighted green top yellow top red top rest word purple thus get direct visual indication likely word model possible paste text tool provided example fake real text notice fraction red purple word ie unlikely prediction increase move real text moreover found informative snippet within text almost always appear red purple since surprising term carry message text hovering word display small box present top predicted word associated probability well position following word fun exercise look model would predicted finally tool show three different histogram aggregate information whole text first one demonstrates many word category appear text second one illustrates ratio probability top predicted word following word last histogram show distribution entropy prediction low uncertainty implies model confident prediction whereas high uncertainty implies uncertainty observe academic text input uncertainty generally higher sample model example analysis unicorn first example investigate famous generated text unicorn sample unreleased model developed openai first sentence prompt given model rest text entirely generated text look realistic hard detect reading whether written algorithm human see single purple word red word throughout text word green yellow strong indicator generated text looking histogram see additional hint automatic generation strong indication model generally assigned high probability correct word moreover uncertainty often low indicates overall low level surprise model note detect text artificial even without access real model since use smaller version model actually generated text access real underlying model would likely strengthen detected signal gre text begin analysis real text example text gre copied gre test reading comprehension reasonably high level thus expect higher percentage complex unexpected word upon visual inspection observe many unexpected purple red word high uncertainty observation strong indicator humanwritten text scientific abstract next show gltr scientific abstract taken paper predicting crisproutcomes published nature tool show remarkably high fraction red purple word suggests humanwritten text moreover uncertainty histogram rightskewed yet another indicator upon consultation first author work confirmed abstract fact written human realworld aiwritten article use tool analysize automatic text generation system isntance washington post utilizes algorithm report sporting event election see show gltr output showing one article remarkably almost everything named entity player team green yellow even though access underlying model visual footprint look article written autonomously semiautonomously algorithm proof concept sampled text language model used testing used model produce nonconditioned text sampling top prediction image show clear picture model detect text pretty well green yellow idea onto effect detect tool check live demo find u twitter henstr sgehrmann harvardnlp let u know email info gltrio citation inproceedings title gltr statistical detection visualization generated text author gehrmann sebastian strobelt hendrik rush alexander booktitle proceeding annual meeting association computational linguistics system demonstration month jul year address florence italy publisher association computational linguistics doi page abstract rapid improvement language model raised specter abuse text generation system progress motivates development simple method detecting generated text used nonexperts work introduce gltr tool support human detecting whether text generated model gltr applies suite baseline statistical method detect generation artifact across multiple sampling scheme humansubjects study show annotation scheme provided gltr improves human detectionrate fake text without prior training gltr opensource publicly deployed already widely used detect generated output discussion obviously gltr perfect main limitation limited scale wo nt able automatically detect largescale abuse individual case moreover requires least advanced knowledge language know whether uncommon word make sense position assumption also limited assumes simple sampling scheme adversary might change sampling parameter per word sentence make look similar language trying imitate however speculate adversarial sampling scheme would lead worse text model would forced generate word deemed unlikely would lead detectable property text therefore despite limitation believe gltr spark development similar idea work greater scale acknowledgment grateful ken arnold david bau david cox barbara grosz robert steve ross yonatan belinkov trying gltr finding example discussing tool finally thank thomas wolf huggingface pytorch port model use
41,Lobsters,visualization,Data Visualization,Maze Algorithms,https://www.jamisbuck.org/mazes/,maze algorithm,maze algorithm maze programmer http githubcomjamiscsmazes recursive backtracking parallel seed blobby recursive subdivision algorithm houston algorithm growing binary tree algorithm,maze algorithm interested maze algorithm written book subject maze programmer check source code demo freely available http githubcomjamiscsmazes recursive backtracking parallel seed blobby recursive subdivision algorithm threshold small medium large houston algorithm combine aldousbroder wilson get best performance sadly guaranteed uniform like two faster run aldousbroder minimum number cell visited switch wilson eg commadelimited combination must click reset maze recognize change growing binary tree algorithm eg commadelimited combination
42,Lobsters,visualization,Data Visualization,Measuring Fairness,https://pair.withgoogle.com/explorables/measuring-fairness/,measuring fairness,measuring fairness measuring fairness ground truth model prediction model mistake never miss disease avoid overcalling subgroup analysis base rate imbalanced metric conclusion hidden bias explorable reading make ai fairer judge attacking discrimination smarter machine learning fairness indicator whatif tool fairness tool fairness metric pair guidebook glossary appendix encompass gap technical description algorithm social context deployed credit propublica wee people,measuring fairness multiple way measure accuracy matter build model accuracy across measure vary applied different group people measuring fairness make sure model work equally well different group people turn many situation harder might think problem different way measure accuracy model often mathematically impossible equal across group illustrate happens creating fake medical model screen people disease ground truth half people actually disease half nt b model prediction perfect world sick people would test positive disease healthy people would test negative model mistake model test nt perfect model might make mistake mark sick person healthy c opposite marking healthy person sick f never miss disease simple followup test could model aggressively call close case rarely miss disease quantify measuring percentage sick people test positive g avoid overcalling hand nt secondary test treatment us drug limited supply might care percentage people positive test actually sick g issue tradeoff model optimization nt new brought focus ability finetune exactly aggressively disease diagnosed try adjusting aggressive model diagnosing disease subgroup analysis thing get even complicated check model treat different group fairly whatever decide term tradeoff metric probably like roughly even across different group people trying evenly allocate resource model miss case child adult would bad base rate look carefully see disease prevalent child base rate disease different across group fact base rate different make situation surprisingly tricky one thing even though test catch percentage sick adult sick child adult test positive le likely disease child test positive imbalanced metric disparity diagnosing child adult higher proportion well adult mistake test cause well adult marked positive well child similarly mistaken negative fix could model take age account try adjusting slider make model grade adult le aggressively child allows u align one metric adult disease le likely diagnosed matter move slider wo nt able make metric fair turn inevitable time base rate different test nt perfect multiple way define fairness mathematically usually nt possible satisfy conclusion thankfully notion fairness choose satisfy depend context model may possible satisfy every definition fairness focus notion fairness make sense use case even fairness along every dimension nt possible nt stop checking bias hidden bias explorable outline different way human bias feed ml model reading context setting different threshold different population might acceptable make ai fairer judge explores algorithm send people jail lot different metric might use determine algorithm fair attacking discrimination smarter machine learning show several work using fairness indicator conjunction whatif tool fairness tool test model commonly used fairness metric machine learning practitioner use word like describe percentage sick people test positive checkout pair guidebook glossary learn learn talk people building model appendix essay us academic mathematical standard fairness nt encompass everything might include colloquial meaning fairness gap technical description algorithm social context deployed sometimes might care different error mode different population treatment riskier child probably want model le aggressive diagnosing example assumes model sort score people based likely sick complete control model exact rate overdiagnosing group actually possible align metric discussed far try tweaking model get line adding third metric percentage well people test negative e make perfect fairness impossible see three metric wo nt align unless base rate disease population drag adjust model accuracy adjust occurrence disease credit adam pearce may thanks carey radebaugh dan nanas david weinberger emily denton emily reif fernanda hal abelson james wexler kristen olson lucas dixon mahima pushkarna martin wattenberg michael terry rebecca salois timnit gebru tulsee doshi yannick assogba yoni halpern zan armstrong colleague google help piece silhouette propublica wee people
43,Lobsters,visualization,Data Visualization,How to draw block diagrams,https://johnwickerson.wordpress.com/2019/08/08/block-diagrams/,draw block diagram,asplos bipartite graph,huge number academic paper particularly field computer systemsarchitecture use sort block diagram give reader overview solution presented instance two third paper presented year asplos contained least one diagram usually towards start paper shown block diagram typically consist block represent action arrow labelled input output passed around action quite eyecatching often appear rather easy understand explains used widely blog post explore guideline drawing diagram really easy understand first worth noting block diagram form directed bipartite graph seen graph two type vertex action vertex data vertex edge graph connects action vertex data vertex vice versa edge action action data data lead u first way draw block diagram explicitly bipartite graph following diagram simple compiler note importance clearly distinguishing two different type vertex asplos diagram make unnecessarily hard understand second way remove action vertex instead action appear label arrow data vertex shown advantage representation longer need two different style vertex third way remove data vertex instead data appear label arrow action vertex shown style also avoids need two different style vertex though slight disadvantage one never quite sure whether first last label drawn arrow done beyond tip style diagram chosen may depend whether one wish emphasise sequence action system take data operates problem latter two representation scale well complicated design instance suppose start following diagram complicated compiler try draw diagram dataoriented style becomes tricky place label action consume multiple piece data see instance awkward frontend label picture hand try draw diagram actionoriented style becomes tricky deal piece data consumed produced multiple action ir data picture conclude actionoriented dataoriented block diagram fine simple case lead simpler diagram make bipartite structure explicit bifurcation control flow data flow system may better resort explicit bipartite representation
44,Lobsters,visualization,Data Visualization,Harnessing Vision for Computation (2008),https://www.gwern.net/docs/cs/2008-changizi.pdf,harnessing vision computation,,obj resource r rotate type page content r parent r mediabox cropbox endobj obj font r r r r procset pdf text extgstate r r endobj obj filter flatedecode length stream p n k r ߐɘnc c xli cc il l ā v v j ν iơdzҹ wr n j uy ǎw x v k ݢgi w x u v ɢ w گ k p נ h yl c v n r җzx l k rtd g q ajgr g љh le z w u q hr dn waf kæ z u궰 k vgl ch k gh z ym β p ly r eqg e j q h k v
45,Lobsters,visualization,Data Visualization,Inside curved spaces,https://www.youtube.com/watch?v=s_PNYf4qVKc,inside curved space,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature inside curved space youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature inside curved space youtube
46,Lobsters,visualization,Data Visualization,Profiling 2019 NFL Offenses with nflscrapR Data and Clustering,https://comfortablynumb-ers.blogspot.com/2020/04/profiling-2019-nfl-offenses-with.html,profiling nfl offense nflscrapr data clustering,,project overview used nflscrapr season data organize team playcalling normalized relative proportion used clustering algorithm categorize team one five group analysis report kevin kraege found twitter cluster number generated arbitrarily according specific order clustering may seem odd refer team city instead team name tried remain consistent analysis data charted graphed project tend gloss detail mathematics method used principal component agglomerative clustering silhouette method epa advise research find someone qualified explain contact twitter wish help data specification play recorded fit one group group combination three type run end guard tackle three type pass deep short middle two type formation shotgun center understand nfl play much deeper categorization intention play may recorded result data limitation simplicity used first reason used specification data available nflscrapr nfl database record outcome every play season record personnel grouping field route specification formation even specify pistol shotgun specify left right outcome play decided unnecessary specify analyzing team direction play likely defensive formation injury matchup etc worth splitting play group instead arbitrary decision though risked potentially worse analysis simplifying data short deep mutually exclusive group neither mutually exclusive middle unedited nflscrapr data instead attributed middle every pas recorded middle nflscrapr data regardless deep short attributed deep short every respective pas middle created three mutually exclusive pas type merit since total number short pass considered considered middle roughly likewise deep pass totaled middle pass roughly felt making distinction worth adding third pas type including middle pass separate depth strategic merit since pass middle come route concept like slant post seam in crossers especially slot pass middle come out flat corner go comeback especially boundary distinction seems consistent enough route distinction used important caveat analysis include sack issue data know qb would tried throw ball also case fumble qb taking dropback going bias quantity pass depth intended target playcalling perspective since qb likely sacked longer wait throw thankfully incomplete pass interception included well corresponding epa location pas attempt recorded data filtered couple situation team simplify relevant strategy particularly situation high low chance winning former case team tend run ball often center run inside lower chance negative yard latter situation team tend pas shotgun aim deeper ironically including data likely converges playcalling tendency since team run ball often tend start losing passing compensate team pas tend opposite instead wanted find difference team neutral situation highlight constraint play included one team calculated win probability realize seems le limiting others decide use somewhat arbitrary decision find something like win probability start excluding play team two score early second quarter situation believe significantly change play calling tendency enough exclude play score differential greater equal point think situation would nt completely redundant previous constraint security case nt play score differential greater equal le quarter remaining situation likely redundant first constraint well another situation believe impact playcalling enough worth excluding play yard go play yard likely pas likely considered short one since distinction nflscrapr pas yard even yard go greater often team take checkdowns set field goal lower risk turnover another situation trying find team often get stuck long even yard may biased favor pass arbitrary decision likely conclusive clustering used agglomerative hierarchical clustering algorithm try identifies similar team creates cluster closest team one entire cluster created advantage allows anybody decide many cluster prefer graph dendrograph allows someone make horizontal slice separate team cluster may seem certain team close together especially bottom necessarily case team close together complete bottom actually seperate earlier farther may seem indianapolis philadelphia close new england new orleans would actually split sooner end dendrographthe first cut top separate cluster includes baltimore arizona kansa city every team next cut creates cluster includes minnesota previous two cluster third cut separate largest cluster two one atlanta new orleans buffalo philadelphia fourth cut separate baltimore arizona kansa city bringing u five cluster decided investigatehow many cluster would ideal obvious endpoint either one large cluster separate cluster neither lead interesting result one tool silhouette method determining effectively object clustered consistency within cluster graph show optimal number cluster according method used two determined first cut along dendrograph seem interesting enough report chose five cluster instead second optimal number according silhouette method common way visualize cluster simple scatterplot problem though graph scatterplot data twelve dimension instead ax replaced principal component find direction project data onto two dimension lead scatterplot spread still leaf difficult understand difference team formational play calling tendency make significantly easier allowing u visualize always difficult clustering used begin easily seen minnesota baltimore quite distance away team arizona kansa city sit together away two central cluster important remember data twelve dimension three miami appears left central cluster actually sitting behindin front cluster depending orientation also important remember distance interpreted well graph general green bay separate cluster cincinnati seattle philadelphia indianapolis seattle dendrograph bottom right cluster much later jacksonville appear closer scatterplot bottom corner leftmost central cluster according simplified perspective sit along particular axis interpreting result see play type used leaguewide expected point added per play highest epa pas shotgun middle field highest epa pas center deep likely driven playaction move linebacker safety fact passing center effective per depth category shotgun likely play action well running center higher epa end barely tackle run lower guard could guard run higher epa shotgun driven rpos draw play next several chart showing tendency per cluster epa per play grouped team averaging unless specified top chart proportion playcalls grouped cluster second chart proportion play cluster categorized along descriptive stats season effectiveness epa averaged grouping cluster third chart epa cluster split play type chart show team proportion playcalls including grouped formation play type chart playcalls normalized percentile epa playcall including grouped formation play type first cluster cut first cut yielded cluster arizona kansa city baltimore immediately create suspicion wondering team passed league grouped closely team ran league answer lie formational use weight formation lower play type difference baltimore shotgun formation astounding neutral situation play closest team shotgun usage arizona five team range including kansa city stark contrast minnesota played almost entirely center yet ran anybody else league except seattle baltimore first shotgun rush guard tackle tied shotgun end run arizona led league shotgun end rush percentage ironically since lead league passing percentage baltimore league shotgun pass middle yet among average league shotgun passing middle kansa city arizona among average shotgun pass middle yet first second respectively shotgun pass outside cluster mostly driven shotgun formation thus baltimore severed cluster third cut second cluster cut help explain minnesota first team removed cluster barely played shotgun neutral game scenario play center play center run specifically second highest usage center los angeles ram almost every team range rushed time tied seattle second baltimore league relative playcalling lead league every type rushing center pass across middle center well either least second least play type shotgun formation since rarely anything unconventional play design like baltimore strong evidence second unique offense league virtue playcalling tendency arizona kansa city likely still beat play design uniqueness would hard keep minnesota top unique offense least third cluster cut much need said nt already baltimore separate kansa city arizona cluster driven team rushing league would different enough team lead league passing percentage fourth cluster cut finally two remaining cluster cluster atlanta los angeles ram denver detroit oakland san francisco tennessee tampa bay dallas miami washington new england new orleans cluster buffalo cleveland new york jet jacksonville chicago houston pittsburgh la angeles charger new york giant carolina seattle cincinnati green bay indianapolis philadelphia seems primary separation cluster playing shotgun center versus cluster playing shotgun center despite split passing rushing percentage ironically despite shotgun considered common formation passing cluster playing center higher passing epa play type rushing epa play type average win epa per play epa per play per team epa either play center shotgun cluster best team san francisco tennessee new england new orleans cluster best team buffalo houston seattle green bay discrepancy best team cluster favor cluster despite discrepancy average win per cluster similar suggesting cluster strategy boom bust offensive style cluster cluster playing center despite passing percentage along leaguewide result showing passing center effective shotgun lead implication play action least passing run formation best passing team league yield success last visualization project spider plot radar chart draw quite ire analytics data visualization crowd since interpreting circular space unintuitive make hard compare value different team despite fun make look cool nerd need relax truth told trying find intricacy individual value individual playcalls seem frivolous lot playcalling also driven opponent game situation injury etc interested clustering see team similar well primary strategy team would argue difficult reduce twelve dimension data team form advantage polar plotting space see category team median category median shrunk thus focus graph another advantage polar plotting one easily separate graph quarter half better interpret category nt mutually exclusive see oclock shotgun rush oclock center rush oclock shotgun pass oclock pass center oclock rush play oclock passing play oclock oclock shotgun formation oclock oclock center first team plot categorized division colored cluster plot colored team color want thank benbbaldwin friscojosh statron especially leesharpenfl wonderful work nflscrapr awesome guide dvoa pythagorean win data footballoutsiderscom game data nflscrapr package r http http githubcomleesharpenfldatablobmasterrstudiointromd http githubcomleesharpenfldatablobmasterwpchartsmd http githubcomleesharpenfldatablobmastercolorsinrmd http githubcommaksimhorowitznflscraprblobmasterrepwpcalculatorr http githubcommaksimhorowitznflscrapr http analysis report kevin kraege found twitter
47,Lobsters,visualization,Data Visualization,Using Decision Trees for charting ill-behaved datasets,https://vvvvalvalval.github.io/posts/2020-05-15_Using-Decision-Trees-for-charting-ill-behaved-datasets.html,using decision tree charting illbehaved datasets,information content information content xx entropy h x entropy probability distribution binary entropy function conditional entropy h yx given x mutual information x mackay,information content random event measured bit defined frac mathbb p right understood amount surprise get observing certain mathbb p surprise observing information content zero impossible mathbb p information content infinite eventuality need consider never happen particular x discrete random variable x particular value x might take information content xx frac mathbb p xx right entropy h x x defined expected information content observing x h x mathbb e xleft frac mathbb p x right right sumx mathbb p xx frac mathbb p xx right equivalently define entropy probability distribution rather random variable h x mapsto p x sumx p x frac p x right entropy h x thought additive measure information lack x unpredictable particular entropy never negative zero x fully deterministic ie x take particular value probability special case binary variable x ie one follows bernouilli distribution entropy expressed using binary entropy function h x mathbb p xx x one two value taken x p p frac p right frac right given two discrete random variable x x random variable entropy denote h x particular outcome xx observed consider entropy conditioned probability distribution h yxx h mapsto mathbb p yy xx sumy mathbb p yyxx frac mathbb p yyxx right thought amount uncertainty remains know xx conditional entropy h yx given x expected value quantity h yx mathbb e x sim x left h yxx right sumx mathbb p x x h yxx thought average remaining uncertainty observe x particular leq h yx leq h h yx fully determined x function f f x h yx h x independent mutual information x x defined x h h yx mutual information understood amount information gain equivalently amount uncertainty lose hence formula access x mutual information several intuitive property x x independent x x x leq h equality fully determined x magic information theory translate informal notion uncertainty number add quantity defined enjoy many additive relation summarized figure courtesy mackay
48,Lobsters,visualization,Data Visualization,Visualizing Density,https://calebkruse.com/10-projects/schlieren/,visualizing density,pivlab,method backgroundoriented schlieren textured background placed behind subject imaged camera background stationary disturbance background would appear identical frame frame however density difference introduced light traveling background sensor bent area pressure change image appear background shiftedwarped area density disturbance frame sequence image processed find direction magnitude background movement motion reveal density difference test created pattern random dot sheet paper background contrast dot make easy see background shifted visualize density difference air held flame camera background subject background seen camera took fps video moving flame front background extracted frame image analyzed pivlab pivlab fluid dynamic tool meant tracking motion particle particle image velocimetry ca nt recommend highly though requires matlab use quality free software package amazing piv software wellsuited purpose background appears particle need find relative motion frame removed region lighter hand captured interfered analysis
50,Lobsters,visualization,Data Visualization,Clograms tries to close the gap between code and diagrams,https://github.com/jpmonettas/clograms,clograms try close gap code diagram,clograms clograms clograms clograms look feature scan index draw project entity draw shape link search explore project browser source code navigation multimethod implementation function spec function xreferences protocol multimethods reframe aware hot code reload save share see demo give try clograms prerequisite index clojure project index clojurescript project http micro manual search node shape source code node shape node link function var node discover interesting project thing coloring saving diagram clograms developer info clindex build ui prerequisite run doc exported pdf related work framework roadmap,clograms clograms explore document clojure clojurescript project drawing diagram clograms try close gap code diagram creating diagram tool aware code diagram code helpful lot situation like reverse engeneering unknown code base document project high level architecture planning redesign clograms try help task combining visualization capability diagram application navigationexploration feature ides look feature scan index lein depsedn project draw diagram using project entity project namespaces var spec etc draw shape document explain part system link entity express relation quickly search system entity add diagram explore system dependency using project browser easily add entity using clograms source code navigation quickly figure multimethod implementation function spec function xreferences protocol multimethods one click away identify uncalled funcitions library help discover intended api reframe aware quickly explore subscription event fxs cofxs hot code reload change clj cljs cljc file project indexing change flow ui automagically save share diagram edn file see demo screencast coming stay tuned give try clograms available maven artifact clojars latest released version prerequisite index clojure project clj sdeps deps clograms mvnversion clogramsserver platform clj clojureprojectfolder index clojurescript project clj sdeps deps clograms mvnversion clogramsserver platform cljs clojurescriptprojectfolder indexing finish point browser http wait little bit load need transfer entire index browser also run browser app mode like googlechrome apphttp supported option try clj sdeps deps clograms mvnversion clogramsserver help micro manual search add node diagram using top bar search remember name function namespace project spec whatever type select option node added center diagram node multiple type node use diagram drag right side bar node support least remove context menu option filtered using input top right side bar multiple node selected holding ctrl key multiple node selected dragging drag selected node currently supported node shape circle rectangle database group user source code node project namespaces var spec reframe event sub fxs cofxs shape node shape also support edit text context menu use change shape label also resizable dragging bottom right corner link link created dragging one node port another node port arrow direction changed using arrow control top creating link link also support label edition using edit text context menu removed like node function var node clicking function call link add another function node front find function call reference using find reference context menu double clicking funcition reference automatically add node behind discover interesting project thing right click project node use find project protocol find project multimethods discover protocol multimethods inside project also right click project use find unreferenced function discover function definition referenced inside project useful two thing library help find function intended called user non library project help identify unused function coloring color node project namespace belong using context menu source code node current selected color used saving diagram current diagram save functionality ideal save restore diagram edn file click save button ui clograms create diagramedn file inside folder running read every time load ui also save diagram pdf file using browser print functionality hide toolbars print diagram developer info clograms based clindex clojure script source code indexer build ui prerequisite cd clograms make watchui start shadowcljs watch ui open browser http make watchcss watch garden file build cs file run index project runnning clj clogramsserver someprojectfolder clj also use cljs index clojurescript project doc find diagramedn file repo document aspect clograms also exported pdf related work framework framework authoring publishing maintaining software architecture diagram roadmap check
51,Lobsters,visualization,Data Visualization,What I learned after applying for 100 jobs,https://dev.to/shushugah/what-i-learned-after-applying-to-100-jobs-125g,learned applying job,democracyworks ruby user group berlin wealljs sharenow image courtesy wikimedia common,august july applied job like people find job hunting incredibly stressful yet also extremely passionate roof head able purchase food necessity within capitalist society initially good motivating apply job decided approach methodically document progress using simple spreadsheet google sheet tracked following field location company url role date applied interview depending whether interview active rejected awaiting response color coded green red chart breakdown number job applied year info interview process source code image found completing month web development bootcamp flatiron school college degree boot landed first freelance contract data analyst democracyworks brooklyn new york relocated netherlands shortly berlin germany moving europe great mental health disrupted momentum rebuild network familiarize new environment different professional norm eu citizen really privileged otherwise lack university education let alone high school diploma would obstacle obtaining visa terrified getting rejected applied paltry four job surprising rejected four barely feedback loop learn time however wasted went traveling year saving also explored programming language technology also got involved different meetups slack user group particular ruby user group berlin wealljs barely applied job six total got lucky accepted two one short term contract longerterm job wonderful company called dawanda worked month went bankrupt got bold applied job landed screening interview secondarythird interview accepting job curated shopping group also flown interview two separate occasion used opportunity visit family one github headquarters san francisco interview company forbidden naming due nondisclosure agreement nda fired two week probation period ended usually month germany two week notice find job quickly following month applied another job resulted interview different company accepted offer mobility sharing company called sharenow formed merger daimler bmw drivenow currently working office heart berlin gorgeous view image courtesy wikimedia common key finding third company got back least screening interview took day others especially larger company took month two occasion interviewed interviewer twice two different company year apart exception larger company eg babbel github thoughtbot company interviewed made decision two interview le including screening interview company quite disorganized company try filter candidate difficult application process automated iq test online challenge others buzzword driven interview best one took time read resume get know person shortest interview cycle day longest month applied job multiple time got interview process second time short nt afraid apply job really want remember fun mostly crap shoot advice many job applied
52,Lobsters,visualization,Data Visualization,What port numbers do programmers like to use?,https://notes.rolandcrosby.com/posts/github-ports/,port number programmer like use,little program observable,couple day ago working web server got stuck tell server listen step using port local development meaningless arbitrary choice got wondering port number others choose use developing software anyone would situation decided search github reference localhost n possible value n wrote little program get number github search result localhost n possible port number made interactive heatmap see diagram sentence like see detail full graphic observable note obviously really noisy data look popularity port example likely artifact caused search query matching localhost people like round number repeating digit data took day collect github let issue search api request per minute practice throttled scraper request even aggressively due apparentlysuspicious activity fair enough
53,Lobsters,visualization,Data Visualization,Reverse Engineering Uber and Lyft Surge Pricing in Chicago,https://toddwschneider.com/posts/chicago-ridehail-surge-pricing/,reverse engineering uber lyft surge pricing chicago,triplevel data uber lyft data methodology available github concert soldier field click view map full screen mobile device modified zscores uber lyft anatomy major surge pricing event rolling stone filter tour setlist encore ticket price already averaging look pretty much two soldier field date night one night two bear game show le evidence postgame surge pricing big caveat double doink similar pattern peak surge seems like major surge event citywide occurred april november postmumford son surge pricing posttravis scott head github geographically widespread surge pricing event rained heavily morning blackout wednesday surge pricing seasonality location time week robust regression methodology estimate historical surge price uber lyft mass package uber lyft surge price high story may lyft first day uber ipo additional caveat challenge report protect rider driver company privacy privacy measure fare rounded nearest multiple uber lyft pickup drop timestamps rounded interval pickup drop geography imprecise sometimes redacted city block census tract vary size community area see github market share november known market share new york new ridehail tax note shared ride shared trip section future work surge pricing model public taxi include tip agentbased approach appendix robust regression simulation intuition available github,city chicago publishes triplevel data every ridehail trip taken since november chicago first major u city make ridehailing trip data publicly york published uber lyft data since chicago dataset includes additional field notably fare amount provide new insight ridehailing landscape particular although dataset explicitly indicate highdemand surge pricing effect used available field reverse engineer historical surge pricing map based robust regression model come methodology along challenge caveat code used post available github write march dataset includes million trip november december scheduled update quarterly future play around map see estimated surge pricing multiplier time neighborhood highlighted notable event elevated pickup activity andor surge pricing example conclusion rolling stone concert soldier field june fare expensive usual click view map full screen mobile device turn javascript click r use interactive map addition estimated surge multiplier map show modified zscores represent pickup activity area compared median time day day week positive zscores mean pickup normal example area near soldier field saw pickup midnight stone concert median wednesday midnight see pickup median absolute deviation number produce large modified zscore meaning way pickup normal modified part modified zscore refers use median median absolute deviation instead mean standard deviation reduces impact outlier often interesting compare map surge multiplier map modified zscores since uber lyft state surge pricing go effect rider driver area dataset explicitly tell u many driver available given moment seems like reasonable assumption sudden demand spike higherthannormal pickup activity would often coincide rider demand outstripping driver supply anatomy major surge pricing event rolling stone filter tour conclusion aforementioned rolling stone filter tour show june appears one severe surge pricing event dataset isolated trip began near soldier field near south side compared surge price pickup count interval graph show surge price pickup activity started increase around pm peak surge occurred midnight coincided largest number pickup find exact time played song setlist guess encore gim shelter get satisfaction began midnight pm pickup peak represents people tried beat traffic skipped encore larger pickup peak includes folk stuck around end pm departure paid significantly lower average surge compared crowd though ticket price already averaging sure would major consideration june show stone second soldier field date kicked north american tour night earlier june ridehailing activity pattern look pretty much first show saw bit pickup activity second show slightly lower peak surge rate nextmost severe soldier field surge pricing event belonged another major concert tour though one perhaps catered different audience stone kpop supergroup bts played two soldier field date may part love speak world tour average postconcert surge price night one night two reached high bear game show le evidence postgame surge pricing big caveat soldier field home nfl chicago bear strangely enough bear game show much evidence surge pricing compared rolling stone bts concert even though bear game exhibit similar demand spike conclusion game representative graph ridehail activity immediately following bear home game apology bear fan eagle fan must confess look back fondly double doink none bear home game dataset appear produced major spike surge pricing biggest postgame pickup spike pair regular season thursday night game packer cowboy show similar pattern eagle game large spike postgame pickup small corresponding increase surge price biggest postgame surge could find occurred december sunday night game chief peak surge still significantly lower rate seen stone bts concert one possibility driver somehow aware bear game concert likely make available vicinity soldier field bear game concert excess supply car prevents surge pricing kicking dataset provide information many driver available area given time would difficult idea test might creative way get also know many people tried hail ride whatever reason example though pickup peaked around per minute stone concert eagle game maybe people trying hail ride concert plenty theory could come explain bearsstones discrepancy guess likely explanation major caveat run throughout entire post seems like major surge event citywide occurred march june much make wonder error hidden bias dataset bias regardless whether data error change surge pricing algorithm something else mayjune concert might severe surge pricing bear game due hidden variable underlying truth concert produce higher surge price football game united center tell similar story located near west side host nba bull nhl blackhawks number major concert ariana grande travis scott oneoff event like ufc michelle obama book reading much like soldier field highest surge pricing rate seem come conclusion concert concerned bias neither bull blackhawks made respective league playoff many nbanhl game took place aprilmayjune game took place april show significant surge pricing compared game took place month example bull hosted knicks april november game tuesday night saw similar number postgame pickup yet april game significant surge pricing two biggest united center concert measured spike total pickup belonged mumford son march travis scott december concert similarsized spike pickup postmumford son surge pricing reached posttravis scott peaked mild though march beginning period elevated surge pricing citywide possible hidden bias account elevated surge course cherrypicked example fit narrative head github see surge pricing graph every date united center event calendar geographically widespread surge pricing event concert sporting event obvious candidate surge pricing involve large group people trying leave place time could easily overwhelm supply available driver also example geographically diffuse surge pricing event often coinciding holiday inclement weather one biggest citywide surge incident occurred morning monday april rained heavily morning surge price reached across city north side rush hour peaked around rider stretching lake view hyde park paying time normal fare surge died fare back normal sorry browser support embedded video look map zscores april surge demand somewhat elevated compared typical monday morning dramatically certainly severely big concert know exactly many driver available morning possible bad weather initially made driver le inclined work led high surge price incentivize driver become available event caused elevated demand across entire city include new year eve super bowl liii saint patrick day parade pride parade late night hour thanksgiving unfortunatelytitled blackout wednesday list pride parade look generated highest surge pricing occurred era generally elevated surge pricing could artifact opposed something meaningful surge pricing seasonality location time week unexplained discrepancy make difficult say anything meaningful general surge pricing trend seems like pattern look certain region time week example north generally affluent area high rider demand weekday morning people commute central surge price tend highest morning magnitude severe period hour appears expensive throughout year north side also see lot pickup weekday afternoon surge price significantly lower afternoon compared morning one possibility car available afternoon weekday afternoon route central chicago north side common maybe produce surplus available driver north side turn drive fare afternoon rider getting picked north side dig idea deeper could make interesting follow central chicago demand highest weekday afternoon people head home work surge price highest afternoon rush hour west side demand generally highest weekend evening surge price highest late night weekend hour robust regression methodology estimate historical surge price dataset explicitly tell u surge pricing effect provides field allow u estimate trip distance travel time fare amount uber lyft say exactly determine fare indicate website uber lyft fare based combination distance time first calibrated robust regression model fare linear combination distance time estimated surge multiplier trip actual fare divided baseline predicted fare example trip actual fare baseline model predicted fare estimated surge multiplier trip estimated multiplier trip bucketed pickup census tract timestamp rounded minute took simple unweighted average surge multiplier within bucket case tractlevel info available aggregated larger community area geography naive temptation baseline model might fit linear regression via ordinary least square example using r lm function however case think right way fit baseline model ols linear regression find parameter make average predicted fare equal average actual fare want fit baseline model fare rather want fit notion typical fare excluding surge pricing abnormality like discount present circular logic problem want establish baseline fare model figure fare differ baseline want exclude abnormal fare determining baseline model know fare abnormal established baseline model robust regression method designed address circular problem chose rlm function r mass package mm option us iterative process find coefficient linear model determine outlier based coefficient downweight even remove outlier entirely find new coefficient repeat convergence criterion met found coefficient robust model implied base fare lower implied ols model period lower period robust coefficient also aligned closely indicative rate card posted uber lyft website provides reassurance robust methodology reasonable estimate nonsurge fare surge price high period march june appears contain disproportionate number major surge pricing event compared rest dataset first thought maybe uber andor lyft changed base fare rate time period split dataset three pricing calibrated separate robust regression model regime resulting model coefficient time period intercept fare per mile fare per minute coefficient distance time nearly identical regime cent per mile plus cent per minute intercept regime around cent higher period amount bit average fare fact robust regression coefficient drastically different period argues prove base fare rate different period best guess one uber lyft made change resulted aggressive surge pricing reverted change around july still wary though could data reporting error interesting see happens trip data published future possibility consider eg maybe spring seasonal effect perhaps due elevated rider demand following long cold winter unfortunately hard know much timeofyear seasonality since one year data available particularly abrupt apparent surge pricing decrease july argues seasonal effect suggests something like algorithm change data reporting error story may driver washington dc attempting manipulate surge pricing algorithm simultaneously turning apps create appearance driver shortage particular insight strategy existence effectiveness presence chicago suppose possible story led uber lyft changing surge pricing algorithm sure could confirm algorithm change uber lyft seem likely reveal secret sauce anytime soon worth march first day elevated surge also lyft first day publiclytraded company uber ipo followed week later may suppose least possible increased surge rate around effort demonstrate revenue growth wall street strike unlikely given coordination required additional caveat challenge surge pricing one many factor beyond time distance impact single trip fare dataset provide explicit info additional factor made oversimplification assumption worth noting uber lyft offer array vehicle luxury suv different base rate dataset include vehicle class trip model assumes fare base rate know true robust regression model tend fit baseline typical fare might include standard vehicle tier case say trip central business district likely request luxury vehicle could appear cbd higher surge price reality higher price driven least part corporate rider tendency request luxurious vehicle surge pricing make fare expensive normal uber lyft sometimes offer promotional discount make fare cheaper normal hopeful robust regression methodology handle discount roughly correctly identifying outlier downweighting easy way confirm report company trying cut back discount could make appear surge pricing increasing time even though underlying reality decrease discount opposed increase surge pricing uber lyft provide upfront price based expected time distance turn presumably based routing algorithm take account factor like traffic weather trip actual time distance end differing expectation baked upfront price methodology might incorrectly interpret fare either surge discount company say revise upfront fare trip materially deviate expectation hopefully mitigates concern could try control hidden factor baseline model example adding explanatory variable based geography time week without actual data isolates effect surge pricing discount vehicle class upfront pricing worry result would end mishmash essentially existing baseline model already city chicago take measure protect rider driver company privacy data much support privacy measure overall make somewhat harder estimate surge pricing particular dataset following privacyoriented limitation fare rounded nearest multiple reduces precision surge multiplier estimate especially smaller fare example trip baseline expected fare surge effect actual fare surge never show data round attempted control excluding shorter trip calculating average surge multiplier specifically restricted fare least mile minute one nice reassurance baseline model coefficient happen align closely standard vehicle rate posted uber lyft website pickup drop timestamps rounded interval looking trip area pm pm know one etc surge pricing went effect minute surge trip would get averaged trip minute interval resulting smoothedout average surge multiplier additionally timestamps refer time pickup might relevant know timestamp rider submitted ride request imagine trigger surge pricing algorithm pickup drop geography imprecise sometimes redacted surge pricing go effect localized region small city block chicago dataset provides pickup drop location census tract census tract vary size almost always larger city block surge go effect subregion tract tractlevel aggregate smoothedout additionally census tract deliberately dropped case enough pickup drop offs window case location aggregated community area level reduces precision surge pricing estimate census tractlevel data available trip dataset use community area general caveat beyond potential hidden factor privacy measure described trip record contain obvious junk data eg fare trip applied heuristic remove row thought data error see github exact logic dataset provide info ridehail company provided trip obvious way tell uber lyft significantly different surge pricing behavior march three company registered business chicago uber lyft via third party estimate market share november uber lyft via far known market share new york note new york dataset include company associated trip nyc provide fare info way estimate surge pricing nyc addition fare amount trip dataset also includes tip additional charge cover tax fee toll made assumption surge multiplier affect fare component seems consistent data though doubt result would change much used fare additional charge dependent variable instead fare chicago added new ridehail tax early yet reflected data interesting see happens dataset grows note shared ride shared ride present another challenge clear establish baseline fare inconvenient route shared trip increase time distance might make fare cheaper since rider might need incentive accept longer route third shared trip request get matched another important factor determining fare calibrated robust regression sharerequested fare using time distance whether trip matched might make sense use expected timedistance following direct route instead actuals would want research investigation feeling confident shared trip pricing making matter confusing seems like change way shared trip distance reported starting november average shared trip distance increased dramatically purpose post excluded trip share request estimating surge multiplier included trip share request measuring rider demand eg modified zscores pickup count various graph trip dataset include share request get pooled shared trip going unmatched seems like shared trip become le popular time month toward beginning dataset higher percentage share request higher match rate trip include share request share request get matched see shared trip section ridehailing dashboard latest data future work surge pricing model lot interesting work could done comparing chicago public taxi ridehail datasets december baseline private ridehail trip cheaper taxi look like breakeven surge around meaning thax ridehail trip cheaper taxi long surge rate lower take tip account breakeven closer since taxi trip private ridehail trip include tip city instituted new ridehail tax january presumably lower breakeven interesting see rider preference shift favor taxi experimented bit regression model predict surge pricing combination modified zscores sudden demand spike variable resulting model fit data particularly well feel useful many independent variable known anybody real time might clever additional variable include particular maybe way estimate supply driver time agentbased approach take account rider driver company incentive strike potentially satisfying option would also much harder formulate calibrate appendix robust regression simulation intuition something sanity check robust regression methodology simulated trip following assumption trip distance distributed uniformly mile average speed distributed uniformly mile per hour implies travel time minute base fare mile minute chance surge pricing surge pricing applies multiplier distributed uniformly chance discount discount applies uniform subject max actual fare base fare surge multiplier discount fit linear model actual fare function distance time via ordinary least square robust method robust model recovered exact base fare parameter ols model fit parameter average simulated trip mile minute ols model predicts fare higher fare predicted robust model circumstance ols model might useful example knew take trip simulated world ols model represents expected value going pay trying decompose payment base fare surge multiplier discount robust model closer underlying truth course case know underlying truth created real life luxury see trendlines ols model pulled outlier surge price want generate similar simulated data r code library tidyverse setseed numtrips simulatedtrips tibble mile runif numtrips mph runif numtrips minute mile mph basefare mile minute hassurge runif numtrips hasdiscount runif numtrips surgemultiplier hassurge runif numtrips discountdollars pmin hasdiscount runif numtrips basefare surgemultiplier fare basefare surgemultiplier discountdollars olsmodel lm fare minute mile data simulatedtrips robustmodel mass rlm fare minute mile data simulatedtrips method mm init lts broom tidy olsmodel broom tidy robustmodel code used post available github
54,Lobsters,visualization,Data Visualization,OpenAI Microscope,https://microscope.openai.com/models,openai microscope,,need enable javascript run app
55,Lobsters,visualization,Data Visualization,VPC design studio to help you calculate CIDRs with best practices,https://houqp.github.io/vpcstudio/,vpc design studio help calculate cidrs best practice,vpc design studio specify cidr range express desired design sit back enjoy cup,vpc design studio specify cidr range express desired design sit back enjoy cup
56,Lobsters,visualization,Data Visualization,Create a gauge in React.js,https://wattenberger.com/blog/gauge,create gauge reactjs,,need enable javascript run app
57,Lobsters,visualization,Data Visualization,Why pie charts often suck (2016),https://medium.com/the-mission/to-pie-charts-3b1f57bcb34a,pie chart often suck,pie chart often suck better plenty literature penny visualizing spending pro pie chart con pie chart good fit penny alternative bar chart yet another alternative horizontal bar chart,pie chart often suckand betterpie chart ubiquitous easy make seem like obvious way segment data still incredibly popular possibly default chart powerpoint excelunfortunately also sucka chart primary purpose faithfully communicate set data case pie chart thishow long take extract meaningful information plenty literature pie chart suck penny wanted better given goal making finance easier understand clear visualization amazing way accomplish goalin post like share journey pie chart better visualization classic financial visualization problem breaking spending categoriesvisualizing spendinghere problem visualize table common instinct reach pie chart evaluate whether good fit well one right chart use chart make thing easier others harder chart good fit chart strong suit align message want conveya chart good fit chart strong suit align message want conveyso pie chart good fit let start examining pro conspros pie chartwhat easy see pie chart first glance huge orange swath represents bill leap bill constitute huge part person budget little great message user category dominating spending chart hammer point homecons pie chartthere several issue pie chart like focus three comparing slice ordering category estimating percentagescomparing two slice difficult especially blue green category separated angled differently also harder grasp ordering eye dart back forth green red blue compare relative sizesin addition hard get feel slice fraction whole three smaller one look like around easy estimate ironically pie chart invite eye estimate percent actually make difficult human good estimating uncommon angle especially poor estimating small angle graph tiny sliver sliver difficult tellironically pie chart invite eye estimate percent actually make difficult sois good fit problem acceptable use case answering question product decision visualization decision unordered category pie chart communicate point rough estimate slice percent communicate point answer penny may differ neither unordered category hinder comprehension biggest category knowing percent ie food spending feel useful surface le direct absolute number spending month food simpler message spending food user response former might wow lot whereas response latter might lot reason looked better alternativesan alternative bar chartone alternative found bar chart another common chart data represented bar chart form expected bar chart emphasizes bill largest category useful see bar sorted order easy sidebyside comparison human much better gauging length area angle easy observe relative size data aligned right angle lends sense structure graph eas comprehensionso far working better pie chartunfortunately bar chart make difficult estimate percent breakdown category fact better table purpose discussed happy eschewing percent breakdown favor absolute breakdownyet another alternative horizontal bar chartswe start building bar chart explored yet another alternative horizontal bar chartyup sideways however horizontal bar chart one main advantage label easier readwhen eye take horizontal bar chart axis label bar data label flow direction left right contrast vertical bar chart need visual gymnastics understand axis data label flow left right bar flow vertical bar chart try fix rotating axis label worsens readability read sideways
58,Lobsters,visualization,Data Visualization,Ervy live demo is available – Bring charts to terminal,https://www.chunqiuyiyu.com/ervy/#demo,ervy live demo available bring chart terminal,installation usage demo example document,installation npm install ervy usage const ervy require ervy const bar pie bullet donut gauge scatter ervy const data key value key b value key c value consolelog bar data option demo example need detail check document
59,Lobsters,visualization,Data Visualization,Big Project Build Times–Chromium,https://randomascii.wordpress.com/2020/03/30/big-project-build-times-chromium/,big project build,build time sourcefile size lot small source file causing much build time last buildtimes post anybody replicate october version chromium code nacl blink enough talk let see data live diagram countcostspy windowsdefaultcsv ninja excellent job scheduling pattern want pattern live diagram hertzsprungrussell diagram live version available structure precompiled header precompilecorecc precompilecoreh change landed reduce includes buildsummarizing script countcostspy windowsdefaultcsv countcostspy windowspchfixcsv live diagram countcostspy fewer source unity build daniel bratell jumbofilemergelimit countcostspy countcostspy goma build turned fix two name conflict reductio ad absurdum landed change long initial twitter guess qed work area excellent post thakis january document ftimetrace option clang created clangbuildanalyzer chromium script ninjatracing postbuildninjasummarypy summarizing arbitrary output pattern unityjumbo build webkit great detail reproducing work script data created blog post web page source live page follow instruction testoldbuildbat testnewbuildbat patch change clone repo let know issue found writing conclusion like,twitter discussion build time sourcefile size got interested analysis chromium build time idea would find lot small source file causing much build time inevitably found quirk well landing improvement learned use create pretty picture animation great new tool always blog mine speak google opinion grateful many brilliant coworkers creating everything made possible chromium build tool make fairly easy investigation much easier last buildtimes post since open source anybody replicate test build took hour fourcore laptop time could analyze result test october version chromium code gave flexibility build option use used debug component multidll faster linking build nacl disabled full debug information reduced debug information blink chromium rendering engine base build word build argument used targetcpu build maybe faster isdebug true extra check minimal optimizationsiscomponentbuild true many different dlls default debug enablenacl false disable nacl symbollevel full debug information default windowsblinksymbollevel reduced symbol information blink good set option developing chromium give full debuggability together fast turnaround incremental build source file modified build enough talk let see data let start pretty picture graph show relationship number line code source file long took compile clamped reallybig reallyslow file zoomed make easier see pattern live diagram diagram one follow color represent build file compiled blue file happening first green red file happening last csv file generated build wealth data easily explorable supplied script python countcostspy file took hr build line dependent line bit analysis show make sense correlation sourcefile length compile time compile step tracked consumed total million line source code primary source file however header file included source file added additional billion line source code processed main source file represent line code processed chromium billion line source code header file included multiple source file get processed multiple time redundant processing vast majority c compilation time come disk io repeated processing preprocessing parsing lexing codegen etc million line code note cpu usage maintained build due ninja excellent job scheduling precompiled header file used reduce overhead header file well turn chromium use precompiled header file area billion line number saving factored later pattern want pattern let create another chart one showing relationship line code includefile dependency compile time got pattern live diagram look like distorted version classic hertzsprungrussell diagram stellar luminosity versus temperature moving looking graph see least four pattern numbered bottom chart show thick band point curving right mostly red color appear main sequence area clearly show line dependency generally lead longer compile time bottom band curve gradually looking like almost equation least minimum cost although average maximum cost look closer linear starting second mark yaxis green significant set file minimum compile time four second regardless include size many file region whose sourcefiles plus includes le line yet take second longer compile odd vertical structure line includes greenish blue also perfectly straight vertical line point line includes around second compile time digit green colorful graph compile time live version available interactive mean identifying file associated pattern simple moving mouse around area structure precompiled header turn structure related precompiled header file structure set file use precompiled header file lead minimum compile cost second loading precompiled header file clangcl fairly expensive low dependency line count apparently header precompiled count dependency context vertical line structure four creating precompiled header pch file perfectly vertical every one precompilations compiling exactly set header precompilecorecc includes commandline magic precompilecoreh reason file get compiled time time creating mb pch file got even worse mitigated see short precompiled header helpful come cost case second redundantly build pch file second load large pch file time plus additional dependency note disable precompiled header entirely build get slightly slower main source file go line code processed previously reported due omission system header file includes adding billion line code march number copy blink pch file grown one mb ran experiment shrinking blink precompiled header file found reduced precompilecoreh dramatically could cut almost cost creating pch file cut almost gb size pch file slightly lower average compile time blink source file reduce accidental dependency translation unit depending header need improvement good enough able get change landed reduce precompilecoreh includes got costreduction number buildsummarizing script wrote created graph creation tool blog post made sense apply change better visualize improvement patched precompiled header change old chromium build realized could animate compiletimes number include line target make movie showing transition old new reality change jump one state showing motion make easier see pattern video show source file blink reduce noise see file create precompiledheader file pattern moving left including fewer file compiling faster also see many file consume precompiled header file pattern moving right header file consume recall precompiled header counted moving longer shorter compiles video animation make crystal clear change help blink source file got slower might try using original precompilecoreh file blog post sure trigger lot work addition visualizing saving use one script measure instance beforeafter cost creating precompiled header file python countcostspy windowsdefaultcsv file took hr build line dependent linespython countcostspy windowspchfixcsv file took hr build line dependent line full result change patched old build look like live diagram two precompilerelated pattern gone leaf u main sequence bluishgreen tower pattern past include line bit spelunking show tower mostly file especially source file generated build include expensivetocompile header file general generated source file consume much compilation time hope make improvement wait blog post python countcostspy gen file took hr build line dependent line fewer source original belief fewer source file would improve build time reducing redundant processing header file nice way test turn classic technique treat cpp file like include file instead compiling ten cpp file individually generate cpp file includes compile generated file technique sometimes called unity build generated file look something like include navigatorpermissionscc include permissionscc include permissionstatuscc include permissionutilscc include workernavigatorpermissionscc included c file share significant number header file usually case file related significant amount work avoided people argued pointing include source file one incremental build time get worse well yeah lot middle ground compiling everything separately compiling everything one translation unit chromium option called jumbo build created daniel bratell system defaulted trying include source file generated file subject constraint configurable jumbo build significantly reduced time full rebuilds chromium machine processor incremental build massively parallel build benefit jumbo build lower decided three different jumbo build jumbofilemergelimit set three different value would done small number failed due commandline limit feel like addressing graph show four point left right merge amount default build graph show total number hour compile time go number translation unit compiled reduced downwards curve graph suggests reduce number translation unit compile time hit zero would advise reader trust extrapolation one common complaint jumbounity build glomming many file together make individual compiles take longer let examine python countcostspy file took hr build line dependent linesaverages line second k dependent line per file compiled default compile take average second per source file jumbo build five c file per compilation python countcostspy file took hr build line dependent linesaverages line second k dependent line per file compiled uh wait minute almost cut number file compiled half average compile time dropped error happens jumbo applied mostly expensivetocompile file since cost header file combining barely increased compile cost since fewer expensive file average cost drop miracle turn go percentile file take longer compile even expensive file take longer compile thing free lunch addition jumbo linking may faster due reduced redundant debug information look great problem main one include bunch source file together compiler treat one translation unit one anonymous namespace programmer writing code see sourcefile independent cause obscure compiler error chromium identically named local function variable conflicted jumbo configuration jumbo build effectively meant programming odd dialect c surprising rule around global namespaces jumbo build taken excess also make incremental build slower compiletimes large batch source file nontrivial tweak needed work around even though average better bunch percentile file take longer compile especially jumbofilemergelimit set high jumbo build also creates additional coupling link time unused source file get linked require dependency well without care lead shipping binary bloated test code surprising link error additionally google massively parallel goma build never benefited jumbo jumbo build deemed much hack turned able use post syncing commit disabled fix two name conflict anonymous namespaces get chromium compile reductio ad absurdum logical extension source file little code lot header file would source file zero code lot header file surely file would never exist right working noticed compiling source file generated mojo chromium ipc system took quite poking found generated c file total contained code due size header file nocode c file collectively taking twenty minute cpu time build landed change detected situation removed includes code detected simple change reduces chromium build time significantly absolute term four five minute elapsed time fourcore laptop percentage barely move needle script needed create video show compiletime improvement figured might well animate one well see sourcefiles racing towards origin tested march repo long initial twitter guess build time grow roughly proportion square number translation unit assume large project n class separate cc file h file number compile step n header file used often indirectly cc file compile cost n n qed work area far first person try hand investigating chromium build timesthis hardly surprising chromium build time always daunting different visualization often reveal different opportunity color coding scheme basis graphing code used plot come excellent post thakis much recently alternate denominator token instead line code proposed january document chose stick line code everyone know measure correlation chromium similar understanding individual source file take long time compile excellent ftimetrace option clang emits flame chart showing time went flag set chromium build setting compilertiming true gn args done json file created file compiled loaded chrome tracing programmatically analyzed particular author created clangbuildanalyzer bulk analysis result chromium script look expensive header file chromium repo could potentially combined precise measurement ninjatracing convert last ninja build buildstep timing json file suitable loading chrome tracing file visualize parallelism build postbuildninjasummarypy designed give twenty line summary time went ninja build ninjasummarizebuild environment variable set autoninja automatically run script build well displaying buildperformance diagnostics script enhanced recently allow summarizing arbitrary output pattern ongoing project improve chromium build time making use mojom forward declaration instead full definition wherever possible tracked acm paper temporary freely accessible discussing unityjumbo build webkit great detail reproducing work script data created blog post github simply leverage ninja gn result create csv file allow easy query csv file web page source available live page click point graph save png hover see detail individual source file science unless people reproduce result order follow along need get chromium repo trivial task possible follow instruction need run one supplied batch file consider running manually since step may error prone take hour consume dozen gb disk space testoldbuildbat batch file check old version chromium source patch jumbo work build chromium five different setting expect take hour fourcore machine lot memory fast drive testnewbuildbat batch file assumes synced recent version chromium source patch change system header tracked build chromium incremental build without mojo emptyfile fix expect take hour fourcore machine lot memory fast drive test build use j option ninja fourway build parallelism laptop four core eight logical processor ninja would default tenway parallelism wanted compile process core minimize interference adjust setting based particular machine scientific interest using logical processor j instead j make build run time fast want spend hour getting chromium repo building multiple variant still chromium buildtime analysis clone repo run countcostspy various csv file varying filter see file worst find anything interesting let know want fix issue chromium open source issue found writing conclusion precompiled header file tricky tradeoff difficult ass chromium average sourcefile size smaller line expected creating large project build time important important thing prohibit small source file reddit discussion mostly twitter discussion various place like like loading related
60,Lobsters,visualization,Data Visualization,A pandemic of bubble maps,https://timr.co/a-pandemic-of-bubble-maps,pandemic bubble map,expert guardian daily mail citation tufte p croxton f e stein h graphic comparison bar square circle cube journal american statistical association useful map visualisation serverside rendering thiel truth go interface tricky part,besides outbreak bubble map failing communicate data effectively obviously overlapping absurdly unreadable even fixed expert eg tufte agree circle poor way communicate relative magnitude firstly suck judging difference value encoded area shape secondly especially suck judging relative area circle attempting communicate important data rather designing attractive wall art please use colour ramp ideally scaled population one dimensional encoding one dimensional data much easier judge compare following chart communicates case occured london journalist would better simply republishing wikipedia image building guardian daily mail sorry say evidence suggests daily mail better understands communicate data citation use two three varying dimension show onedimensional data weak inefficient technique capable handling small data set often error design ambiguity perception design cause many problem avoided tufte p bar figure give accurate comparison circle square le accurate croxton f e stein h graphic comparison bar square circle cube journal american statistical association useful map visualisation next serverside rendering thiel truth previous go interface tricky part
61,Lobsters,visualization,Data Visualization,Simulated Losses to a Covid-19 Outbreak in the US Congress,https://www.dolthub.com/blog/2020-03-27-whos-at-risk-of-covid19-in-congress/,simulated loss outbreak u congress,overview result simulation introduction coronavirus dataset individual case detail available le reliable crowdsourced report kind elderly appears deadlier men well raw number almost twice deadly men woman simulating outbreak u congress poor taste u senator two member house simulation parameter age sex legislative representative percentage population get infected imperial college london mortality disease age bracket sex congressional demographic senate house representative dolt uscongress dataset propublica congress dataset one oldest male modeling percentage population infected infection rate nearly iran parliament reportedly infected modeling fatality rate age sex widelycirculated medium article dolt italian patient march simulation run getting input simulation simulation script simulation result discussion health care system completely overwhelmed doctor decide get ventilated without conclusion dolthub data set let u know dolt dolt dolt dolt,overview blog post discus approach simulating outbreak u congress long technical article data set epidemiology simulation feel free jump straight result simulation introduction dolthub tracking case several month coronavirus dataset addition pulling countrylevel aggregate source like john hopkins also aggregating individual case detail available several different source case detail government publication also put le reliable crowdsourced report nonmaster branch repository case detail interesting allow u break fatality rate virus age sex aware kind elderly le well known fact appears deadlier men well much deadly raw number case detail able collect doltsql select mortalityratebyagesex agerange null agerange agerange sex case death mortalityrate f f f f f f f f agerange decade corresponding patient age example corresponds patient year old see disease much deadlier older people especially older men italy far almost twice deadly men woman also worth pointing much worse disease seems men death italy time bulletin men diagnosed case male italian boy illness none died time bulletin male fatality aged female age also worth pointing definitely worse older people fatality rate pretty bad middleaged people simulating outbreak u congress knowing disease especially unkind older men obvious question ask would happen outbreak occurred place dominated older men example u congress poor taste tricky subject discus one hand speculating might die pandemic ghoulish morbid matter approach nt game poor taste discus like hand exercise nt idle thought experiment one u senator two member house already diagnosed likely others follow coming day week importantly legislative representative currently drafting debating legislation national response pandemic affect life hundred million american many thousand american decision literally matter life death important understand exactly risk disease pose american especially older american even talking make u uncomfortable even best medical care available outlook older people grim important legislator understand personally great risk counting make sensible policy choice crucial time skin game quantify much simulation parameter simulation run depends three input age sex legislative representative factor important predictor mortality percentage population get infected estimate many people immunologically naive population infected new disease range around imperial college london population reacts matter different behavior social distancing reduce number dramatically mortality disease age bracket sex see multiple competing estimate information first input independent variable simulation vary second two input give u idea outbreak might play different circumstance congressional demographic obtained wikipedia page senate house representative wrote quick dirty perl script parse text imported result dolt browse uscongress dataset online wikipedia nt include entry sex member congress keyed hand work discovered propublica congress dataset would much easier use live learn update u congress dataset come propublica current congress old congress tend relatively old compared general population one oldest oldest member senate congress old also male male doltsql select sex count senate group sex count f doltsql select sex count house group sex count f two factor put congress much greater risk general population represent modeling percentage population infected pure mathematical model estimate virus spread majority population running new host imperial college london predicts infection rate course epidemic public response including social distancing health care response hygiene practice could change number dramatically hand politician might among atrisk people planet owing nature job frequent facetoface interaction many different people well frequent air travel nearly iran parliament reportedly infected three week ago truth one know percentage people expect become infected point simply many variable account uncertainty run simulation three time three different estimate spread modeling fatality rate age sex fatality difficult estimate epidemic progress take week kill new case growing exponentially mean early estimate fatality might low case new patient eventually die nt yet succumbed disease might mean estimate high serious case diagnosed many milder case nt book tomas pueyo explored difficulty getting good estimate fatality widelycirculated medium article earlier month illustration estimated fatality rate changed time several country observed thing coronavirus data additional case reported observed fatality rate change dolt versioned query capability make easy see two query observed fatality rate day apart doltsql select mortalityratebyagesex agerange agerange sex case death mortalityrate f f f f f f f f doltsql select mortalityratebyagesex datesub interval day agerange agerange sex case death mortalityrate f f f f f f f f depending reading mortality estimate probably changed yet wo nt fully stabilize new case stop coming difficult find mortality estimate accurately broken age sex essential part analysis much uncertainty figure also run simulation three time mortality dimension twice using two mortality snapshot observed case detail published world government different point pandemic using information published aggregate form italy based italian patient march italy number similar one computed based individual case detail agerange sex case death mortalityrate f f f f f f f simulation run three different experimental value two independent input total nine simulated scenario one estimate many member major party house congress expect lose condition simulated getting input simulation get input simulation need generate datasets operate join across repository still work progress exported data coronavirus dataset import uscongress dataset easiest way exporting result csv file using r csv option dolt sql dolt sql r csv q select mortalityratebyagesex datesub interval day dolt sql r csv q select mortalityratebyagesex mortalityratesbyagesexcsv next created new branch uscongress dataset one different mortality rate estimate use simulation different branch different content mortalityratebyagesex table corresponding three different mortality rate estimate table cd uscongress dolt checkout b mortalitycasedetails dolt table import u mortalityratebyagesex mortalityratesbyagesexcsv dolt add dolt commit mortality rate dolt checkout master dolt checkout b dolt table import u mortalityratebyagesex dolt add dolt commit mortality rate one week ago dolt checkout master dolt checkout b mortalityitaly dolt table import u mortalityratebyagesex mortalityitalycsv dolt add dolt commit mortality rate italy dolt checkout master dolt branch master mortalitycasedetails mortalityitaly next need run couple query branch data set joining mortality rate estimate representative age sex note use select appropriate branch table join let keep master branch checked query table branch created doltsql select lastname state party ssex birthdate age mmortalityrate senate join mortalityratebyagesex mortalitycasedetails sbirthdate magerange ssex msex order mortalityrate desc age desc limit lastname state party sex age mortalityrate grassley iowa republican inhofe oklahoma republican shelby alabama republican robert kansa republican alexander tennessee republican leahy vermont democratic sander vermont independent mcconnell kentucky republican cardin maryland democratic risch idaho republican doltsql select firstname lastname state district hsex age party mortalityrate house h join mortalityratebyagesex mortalitycasedetails hsex msex floor magerange order mortalityrate desc limit firstname lastname state district sex age party mortalityrate young ak al republican alcee hastings fl democratic john lewis ga democratic hal rogers ky republican steny hoyer md democratic david price nc democratic bill pascrell nj democratic jim clyburn sc democratic tom ohalleran az democratic raul grijalva az democratic get final input simulation need full join representative mortality rate two chamber congress three mortality estimate total six input file simulation script want data csv form use r csv option dolt sql dolt sql r csv q select firstname lastname state district hsex age party mortalityrate house h join mortalityratebyagesex mortalitycasedetails hsex msex floor magerange order mortalityrate desc housecasedetailscsv dolt sql r csv q select lastname state party ssex birthdate age mmortalityrate senate join mortalityratebyagesex mortalitycasedetails sbirthdate magerange ssex msex order mortalityrate desc age desc senatecasedetailscsv dolt sql r csv q select firstname lastname state district hsex age party mortalityrate house h join mortalityratebyagesex hsex msex floor magerange order mortalityrate desc dolt sql r csv q select lastname state party ssex birthdate age mmortalityrate senate join mortality ratebyagesex sbirthdate magerange ssex msex order mortalityrate desc age desc dolt sql r csv q select firstname lastname state district hsex age party mortalityrate house h join mortalityratebyagesex mortalityitaly hsex msex floor magerange order mortalityrate desc houseitalycsv dolt sql r csv q select lastname state party ssex birthdate age mmortalityrate senate join mortalityratebyagesex mortalityitaly sbirthdate magerange ssex msex order mortalityrate desc age desc senateitalycsv produced input simulation script need run file three simulated spread f l csv simulationpl f f sout done done simulation script simulation iterates congressional representative expected mortality rate based age sex run decides whether particular representative lost u based spread disease expected chance recovery take median outcome simulated run two major party produce output relatively short perl script use warning use strict use parse csv use getopt long spread getoptions spreadsf spread die error command line args open fh encoding die numsims csv parse csv new handle fh name rep line csv fetch line loss push rep line loss republican democratic independent foreach numsims loss foreach rep rep rand spread rand rep mortalityrate rep loss push loss rep party losscount loss partylosses grep party eq party loss push losscount scalar partylosses party losscount loss sortedlosses sort losscount medianlosses sortedlosses numsims print party party lost median medianlosses representativesn finally used output produce diagram placing x appropriate side aisle simulation scenario simulation result discussion simulation demonstrate even conservative estimate spread fatality expect lose member congress worst case expect lose tragic number scenario number representative seriously ill therefore unable perform duty always higher number lose altogether nt nodebased simulation nt account representative spending time close contact one another account known diagnosis among legislator three date straightforward application stastical mortality rate applied evenly entire congress based age sex age sex distribution two party mean average republican risk senate democrat risk house virus nt care political ideology government response must rise division successfully fight important note reason believe thing wo nt bad even mildest simulation result italy mortality number bad least part health care system completely overwhelmed doctor decide get ventilated without report ground doctor often choosing ventilate patient better chance survival inflating already terrible fatality number elderly whatever happens pandemic tend believe every member congress highranking government official receive highest standard care substantially improve outcome relative general population still even caveat result chilling conclusion hope result demonstrate concisely seriously elected official taking threat pandemic endangering life countless ordinary american demographic characteristic legislative representative put disproportionate risk relative general population dolthub aggregating data set hope someone make use assist effort control ultimately end pandemic know data set please let u know better yet download dolt today clone data improve send update u pull request built dolt make easy collaborate data collaborate source code launched first beta year ago never imagined would spending much time compiling data global pandemic believe dolt best way produce distribute data set biggest hope effort contribute small way mitigating terrible effect pandemic would like help please download dolt join u building comprehensively useful dataset internet
62,Lobsters,visualization,Data Visualization,Idyll: A toolkit for creating data-driven stories and explorable explanations,https://idyll-lang.org/,idyll toolkit creating datadriven story explorable explanation,,idyll markup language toolkit writing interactive article idyll reactive document model standard component library decrease amount code needed create high quality multimedia narrative idyll us web standard produce output load quickly web browser fully extensibleidyll enables collaboration programmer journalist researcher designer familiar javascript write custom component using tool like reactidyll supported interactive data lab university washington oreilly medium rhizome eutopia foundation
63,Lobsters,visualization,Data Visualization,COVID19 data in the REPL,http://www.appliedscience.studio/articles/covid19.html,data repl,,provincestate nil countryregion afghanistan lat long provincestate nil countryregion albania lat long
64,Lobsters,visualization,Data Visualization,Neo4j Graph Data Science and Rule-Based Graph Data Visualization,https://medium.com/neo4j/hands-on-with-the-neo4j-graph-data-science-sandbox-7b780be5a44f,graph data science rulebased graph data visualization,handson graph data science sandbox using graph data science library rulebased graph data visualization bloom sandbox graph data science library doc bloom doc bloom landing page sandbox sandbox graph data science project create sandbox instance dataset creating graph data science graph call finding influential node pagerank documentation computing pagerank graph data science call yield return order desc limit call yield match return order desc limit call rulebased node size bloom perspective community detection documentation call call rulebased node color node similarity documentation call call rulebased relationship size match return putting together match exists exists order desc limit match order desc collect return,handson graph data science sandboxusing graph data science library rulebased graph data visualization bloomin post explore use graph algorithm available graph data science library along bloom graph visualization tool show run graph algorithm use result style graph visualization bloom sandboxthe graph data science graph data science library provides efficiently implemented parallel version common graph algorithm exposed cypher procedure type algorithm available include centrality community detection similarity pathfinding link prediction read graph data science bloom graph exploration application visually interacting graph data read bloom doc bloom landing pagethe many feature sandboxthe different project available sandbox great free way try without downloading installing anything locally give access database bloom plugins like graph data science hosted online private sign choose project spin project contains different dataset guided experience show query dataset using cypher driver private hosted environmenttoday interested graph data science project start create sandbox instance open browser see friendly interactive guide embedded query image walking u process using graph data science librarythe guide explores use pagerank label propagation weakly connected component wcc louvain node similaritythe datasetthe graph data science sandbox come loaded dataset game throne character interaction across many book fantasy series interaction derived text book two character name appearing within word one another counted interactionthe graph throne data modelthe dataset partly based following work network throne song math westeros research dr andrew beveridgea beveridge j network throne math horizon magazine vol pp throne explore death battle fantasy world myles neill http wwwkagglecomgame throne tomaz bratanic github repositorycreating graph data science graphsthe gd algorithm run subgraph projected graph specified based label relationship cypher query may create projected graph one exist database first example use person interacts person subgraph load graph using gdsgraphcreate procedurecall gdsgraphcreate gotinteractions person interacts orientation undirected finding influential node pageranka common question working graph data ask influential node network centrality algorithm used determine importance node network graph data science library includes several centrality algorithm including pagerank articlerank betweenness closeness degree eigenvector centralitythe pagerank algorithmpagerank measure transitive influence connectivity node find influential node graph result score node certain weighted average score direct neighborspagerank iterative algorithm iteration every node propagates score evenly divided neighboursyou read pagerank centrality algorithm documentationcomputing pagerank graph data sciencewhen running algorithm graph data science procedure option streaming result back writing value graph node relationship propertieshere compute pagerank interaction subgraph showing top node highest pagerank scorecall gdspagerankstream gotinteractions yield nodeid scorereturn gdsutilasnode nodeid name name scoreorder score desc limit name score jon snow tyrion lannister cersei lannister jaime lannister stannis baratheon daenerys targaryen arya stark robb stark eddard stark catelyn stark centrality measure include degree centrality weighted degree easily compute cyphercall gdspagerankstream gotinteractions yield nodeid score pagerankwith gdsutilasnode nodeid n pagerankmatch n interacts return nname name pagerank count degree sum iweight weighteddegreeorder pagerank desc limit name pagerank degree weighteddegree jon snow tyrion lannister cersei lannister jaime lannister stannis baratheon daenerys targaryen arya stark robb stark eddard stark catelyn stark streaming result back write graph stored node property value compute pagerank person node projected graph write value back pagerank node propertycall gdspagerankwrite gotinteractions writeproperty pagerank writing value graph useful use value stored realtime query data visualizationsrulebased node size bloomnow computed pagerank let switch bloom start exploring graph visually bloom perspective configuration visualization environment perspective defines node label relationship property icon size color use also define search phrase perspective enable powerful natural language like searching functionality exposing parameterized cypher querieschoosing perspective first starting bloomin perspective also define rulebased styling take account value node relationship property styling visualization example computed pagerank person node let create styling rule node higher pagerank score appear larger visualization select person category legend panel create new rulebased stylecreating rulebased style scale node size relative pagerank valuenow query person category see node size scaled pagerank score node allows u immediately determine node important visually examining scenenode size scale relative computed pagerank valuecommunity detectionnext apply label propagation algorithm find community graph community detection algorithm used determine group node graph clustered also tendency cluster partition break apart graph data science library currently includes following community detection algorithm louvain label propagation weakly connected component coloring modularity optimization strong connected component triangle counting clustering coefficientlabel propagation fast algorithm finding community graph propagates label throughout graph form community node based influencelabel propagation iterative algorithm first iteration unique community label assigned node iteration label assigned common label among node neighbor densely connected node quickly spread label across graph detail see documentationsince label propagation weighted algorithm take account relationship weight need create new interaction subgraph includes relationship weight call gdsgraphcreate gotinteractionsweighted person interacts orientation undirected property weight let run algorithm writing assigned community back graph property called community since label propagation iterative algorithm take iteration converge stable community assignment specify maximum number iteration procedure callcall gdslabelpropagationwrite gotinteractionsweighted relationshipweightproperty weight maxiterations writeproperty community rulebased node colornow assigned node community want visualization bloom use result algorithm coloring node community assignment add new rulebased styling perspective legend panelconfiguring rulebased style color node according communitynow bloom scene see node size styled pagerank color determined community node assignednext explore node similarity algorithmnode similarityjaccard similarity size intersection two set divided size unionthe node similarity algorithm used compute similarity score pair node graph similarity two node based respective set neighbor obtain similarity measure two set compute jaccard similarity neighboring node node similar node neighbor either node fact neighbor typically node similarity used bipartite graph example containing people like relationship item node similarity used find pair people similar sense mostly like item information see documentationlet create new subgraph person book house culture node relationship connecting themcall gdsgraphcreate gotcharacterrelatedentities person book house culture run node similarity algorithm subgraph create weighted similarity relationship graph storing jaccard similarity node pair property charactersimilarity call gdsnodesimilaritywrite gotcharacterrelatedentities writerelationshiptype similarity writeproperty charactersimilarity rulebased relationship sizewe use similarity score style graph bloom making thickness relationship scale relative similarity score two node node similar thicker relationship connecting add new rulebased style similarity relationship specifying size node determined charactersimilarity relationship property valuestyling similarity relationship relative node similarity score legend panelhaving added style rule use bloom natural language like querying search character similar character search barperson name daenerys targaryen similarity personthe equivalent cypher query search would something like match person name daenerys targaryen r similarity person return visualization see relationship connecting character similar daenerys thickerwe verify inspecting relationship connected daenerys card list see barristan selmy indeed similar daenerysputting togetherlet say want visualize top character defined pagerank see interacted could write cypher query like give u result match p person exists ppagerank exists pcommunity take top pagerankwith p order ppagerank desc limit find interaction charactersmatch interactpath p r interacts order number interactionswith interactpath p r order rweight desc take top ten interaction per person collect interactpath topinteractions p return topinteractionsbut visualize result cypher query bloom create search phrase bloom perspective drawer search phrase allow u define parameterized cypher query used natural language like search bloom user via search baradding search phrase perspective drawernow easily search top character defined pagerank character see top character interacted simply using search phrase search bartop character connectionsthe value passed parameterized cypher query defined search phrase numcharacters numconnections
65,Lobsters,visualization,Data Visualization,Random L-Systems Visualizer,https://ehrenjn.github.io/LSystems/,random lsystems visualizer,random lsystems visualizer use site brief explanation lsystems growing lsystem seed rule visualizing lsystem turtle,random lsystems visualizer click seizure warning example generated use site clicking anywhere visualization bring menu bunch slider use change lsystems generated clicking menu make disppear using menu control following parameter fade time time take line completely fade away line length length shortest possible straight line distance turtle move told move forward line width width line drawn line per frame number line drawn every frame time per frame often frame drawn angle randomness angle randomness mean angle randomly chosen angle randomness mean angle chosen pool around nice looking angle etc maximum system length length grow system string switching new system remaining parameter explained following diagram complete lsystem want share current setting click save setting url button bottom menu change url page one includes current parameter brief explanation lsystems growing lsystem lsystem string rewriting system generate fractal tree like structure consist seed string set rule grow seed complex string rule operates single character string replaces character another string example consider following seed rule seed abc rule cc c ba applying rule seed yield string ccbba rule applied new string grow system even ccbba becomes bababbcc bababbcc becomes bccbccbbbaba etc visualizing lsystem lsystems visualized many different way common method involves using turtle first come lsystem well arbitrary angle associate lsystem grow lsystem string applying rule seed numerous time draw lsystem using turtle interpret every character grown string instruction turtle lsystems visualizer including one use following character set f move turtle forward turn turtle degree clockwise turn turtle degree counterclockwise push current position turtle onto stack pop position stack move turtle position character ignored turtle
66,Lobsters,visualization,Data Visualization,Sharding the LDBC Social Network,https://neo4j.com/blog/sharding-the-ldbc-social-network/,sharding ldbc social network,fabric ldbc social network benchmark graph overview ldbc social network benchmark data model specification sharding data model test result query ldbc snb specification measurement setup latency measurement throughput measurement result conclusion want take skill notch take online training class learn scale world leading graph database unprecedented level take class,release come exciting new feature called fabric operational principle fabric essence quite simple provides way issue cypher query target one graph database capability used number interesting way including data federation analysis across separate database horizontal scaling data storage processing different hybrid deployment series blog post starting one explore use fabric achieve horizontal scaling ie sharding wellknown challenging ldbc social network benchmark graph sharding graph data notoriously hard problem show achieve sharding using fabric store shard separate disjoint graph meaning relationship span shard relationship instead modeled using call proxy node correlating id value rely knowledge data model query running want optimize create sharded data model specific use case finally show fabric improve query performance comparing query time throughput sharded nonsharded version overview ldbc social network benchmark ldbc social network benchmark supply data model specification along data generator set query specification important note using benchmark workload specified benchmark rather borrowing data model query different kind exercise test demonstrate difference sharded nonsharded configuration explore consideration graph sharding present industry benchmark data model full description ldbc snb data model found specification provide simplified overview expressed way schema look imported model contains component consisting person friendship relationship forming core social network largest part graph term data size message board component model forum containing post comment reply chain person related number different way forum post comment forum post comment tag person set tag representing interest tag categorized class person located city part country post comment also created country full model contains entity university company continent leave description sharding data model sharding data model always complex problem universal solution deciding relationship cut depends model also data distribution expected query execution pattern sharding based country region might seem like natural candidate sharding scheme based assumption user likely know interact people country beyond scope post discus detail sharding scheme optimal case simplified explanation typical query would make many jump across shard considering number option decided sharding scheme described chosen sharding scheme heterogenous meaning shard contain kind data person data related kept single shard forum post comment distributed remaining shard geographical data tag structure duplicated onto every shard forum shard contain stripped proxy node representation person original id property retained sharding scheme two advantage first allows efficient querying relationship person vital many query second since forum essentially form forest distributed across remaining shard without important relationship broken across shard boundary placing person single shard problem order magnitude message comment person theory social network grew much person graph could efficiently fit single machine could sharded even similarly duplicating tag city country shard problem data quite small static test result envision number test scenario evaluate performance sharded model described particular interested comparison nonsharded setup performance property change number shard grows scenario focus look read performance scale split dataset across increasing number eversmaller shard would like stress borrow data model data generator query ldbc social network benchmark goal methodology test execution different query ldbc snb specifies number query grouped several category chosen four query query query query query interactive complex read category feel representative workload demonstrate result definition query found ldbc snb specification fabric cypher implementation query found future post hope share result query well interesting test scenario measurement setup dataset generated using ldbc snb data generator scale factor sf contains roughly billion node csv file created data generator weigh imported generated data four different configuration shard proxy monolithic reference shard person shard forum shard shard person shard forum shard shard person shard forum shard shard deployed running separate aws instance memory limit configured keep total available amount across shard constant memory limit instance default setting latency measurement query latency measured executing single query time backtoback recording time submission complete consumption result query query parameter supplied query execution sequence appear ldbc parameter file initial set query execution considered warmup excluded statistic fabric proxy deployed single separate instance type throughput measurement maximum query throughput measured increasing number concurrently issued query time error rate latency start falling outside defined parameter fabric proxy deployed single separate instance type result result show much heavier see heavy query get significant decrease latency increase number shard note plot logarithmic scale lighter workload latency increase expected due communication overhead becoming dominant still manage maintain low millisecond latency taking closer look heavy query see achieves speedup shard speedup shard excellent result show fabric achieves almost linear speedup type workload number shard reasonable workload parallelized indefinitely speedup shard achieved speedup result promising showing parallelizing execution fabric far greater impact latency communication coordination overhead latency measurement run single query time though following graph show concurrent throughput capability ie measured maximum number executed query per second see impressive performance gain going single instance shard interestingly increase max throughput increase number added processor core go single instance shard explained fact using machine add processor core also increase resource total memory bandwidth since good way limit number available core shard machine balance total amount computing power following plot show max qps normalized total hourly cost entire setup aws conclusion experience show carefully designed manual sharding scheme knowledge data distribution query access pattern taken account achieve great performance gain test show using fabric achieve impressive performance gain complex query read query query latency total read query throughput lighter query fabric maintains low query latency want take skill notch take online training class production learn scale world leading graph database unprecedented level take class
67,Lobsters,visualization,Data Visualization,Visual explanations of mathematics,https://agilescientific.com/blog/2020/2/25/visual-explanations-of-mathematics,visual explanation mathematics,nicholas rougeur beautiful interactive version edward tufte whole book often equation example myriad equation volume geophysics elucidate indeed barely even illustrate case worse obfuscate might think mathematics dry steeped convention way equation byrne showed u better daniel fleisch book maxwell equation,like look even cooler nicholas rougeur beautiful interactive versionthis classic example edward tufte modern saint visualization call visual explanation wrote whole book subject written subject example see evan post graphic repay careful study figure chart merely illustrate elucidatetoo often equation example myriad equation volume geophysics elucidate indeed barely even illustrate case worse obfuscate might think mathematics dry steeped convention way equation byrne showed u bettera year ago attempt broaden geophysical knowledge bought copy daniel fleisch book maxwell equation excellent others series good especially liked annotated equation lightened annotation version put separate visual layer
68,Lobsters,visualization,Data Visualization,"Mapping coronavirus, responsibly",https://www.esri.com/arcgis-blog/products/product/mapping/mapping-coronavirus-responsibly/,mapping coronavirus responsibly,projection wizard previous blog author,live amazing time far cartography concerned technology allows actively support rapid democratized mapping data compiled published near realtime actual realtime encourages people get hand dirty see make medium outlet rush provide audience fast visible content social medium drive sharing map breathtaking pace throw developing human health story ingredient ripe map take centre stage become ongoing coronavirus outbreak let take look map help shape narrative concern fear grows map data responsibly coronavirus date february infected chinese citizen mostly hubei province since first identified december far spread country claimed life declared global emergency world health organisation focus data china following series map designed look like small map might find news medium web site relatively simple basic fact many issue note equally applicable whether making small static map interactive web map first job making map determine projection going use region china data thematic map population data work map use equalarea projection good choice china albers equal area web mercator support map purpose distortion lead people underestimating size area relative one another effect propagating people impression le exaggeration part map due simply projection projection wizard great tool help work good projection data making map suitable projection easy desktop gi also easy making web map using arcgis previous blog explained comparison map look scale million albers equal area web mercator quite different identified appropriate projection map get mapped way consistency support comparison within map map default thematic mapping technique goto technique technique people familiar choropleth graduated colour map great technique used properly used poorly capability really misguide people reasonable looking choropleth map coronavirus data february date use map spolier alert make map look deceptive fact look okay hiding dark secret aware fact even get noticed map using total absolute value raw data golden rule cartography one map total using choropleth thematic mapping technique reason simple area map different size different number people inherently unequal character first deal make sense data innate characteristic thematic map mean simply compare like like across choropleth map label tell u hubei region case coronavirus sound lot hubei people possibly people living neighbour similar number people living far le way knowing comparison map theme across map impossible simply know actually le consistent baseline comparison get total number may well use table classification scheme used map seems case used key break point province highest category assumption must similarly high number right way see actually going look data distribution bar chart number case chinese province hubei province massive outlier really massive outlier map properly reflect region way level using break point case poor choice conflates hubei four nearest neighbour term data value despite nowhere near one thing might point actually consider using bar chart rather map clearly show empirical geographical dimension without hiding behind map need careful interpretation either way take knowledge map much better version exactly data changed red colour scheme blueygreen colour scheme people like red map well may true certainly attentiongrabbing consider dataset mapping human health tragedy may get way worse subsides really want map screaming bright red red emotive colour meaning easily connotate danger death still statistically extremely rare coronavirus still make map reveal message without sensationalist colour choice simple lightdark colour scheme job people ass le big difference map corrected use total use rate instead map normalized support accurate visual comparison case city fundamentally different situation town hubei case per every region le case per significantly fewer classification data map supporting legend reflects large disparity using rate consistent baseline compare see one place another across map colour muted class except hubei allow stand little make obvious outlier additional label support story help lead reader crucial aspect map choropleth technique useful blog place full exposition every possible alternative simple choice might make show data first dot density map use total rather rate technique automatically render data visual density dot size aid comparison map one dot equal case dot positioned randomly emphasizes large outlier hubei downside might infer dot locates individual case always useful include note clarify potential confusion read map symbol large range data almost impossible get dot value accommodate low count time highest count hubei seems completely overwhelmed may map showing comparison surrounding area another really useful thematic map type proportional symbol map map type take total input data us data value calculate area symbol circle proportional comparable one another anyone noticed choropleth dot density map impossible see hong kong macau national scale large country inevitable small area get overlooked could use inset rely multiscale characteristic web map proportional symbol map allows see smaller area virtue symbol except large outlier scale symbol linearly region bar hubei small symbol size alternatively might use graduated symbol range value snapped set symbol specific size graduated symbol could modify way proportional symbol scaled using logarithmic scale instead linear scale map legend really important whenever something ordinary processing data accommodate aspect data distribution certainly gain far variation symbol size across map approach though visually run risk overemphasizing small value comparison large outlier proportional symbol map avoiding overlapping symbol vital repositioning help multiscale web map symbol disaggregate decluster zoom one approach would make hybrid map perhaps using dot density area except hubei get proportional symbol let end couple example map easy make mean firstly socalled heat map sort map really interpolated surface using data value point represent area map drawback chinese province quite large geometric centre necessarily best place pin data value could position point using populationweighted technique even coronavirus data location specific using interpolator assume sort gradual variation adjacent data point far apart represent highly generalised geography helpful present picture data distribution neither data geography really support top map actually show hubei epicentre overgeneralised colour really poor choice veers sensationalist territory china look allconsumed ectoplasmic virus simply case let make map like okay people love time place really useful way encode thematic data zaxis make something useful extruding hubei compared rest area work data gratuitous add nothing really hard make sense relative amount even deal foreshortening occlusion talking briefly scene bring back idea interaction back web map web map fantastic way map share rapidly vital component way people share data offer many useful capability static map pan zoom click event drive popups useful come set potential issue instance proportional symbol map fixed sized symbol zoomed coalesces symbol blob zoomed far easy people assume symbol view represents precise location rather geometric centre much larger area abstractly represents zoom choropleth map far fill screen single colour implying totality removing surrounding context zoom dot density map far end people thinking single dot happens randomly positioned near house someone actually life message map suggesting therefore really important restrict zoom level avoid extreme situation small large scale data support granularity different detailed data switch zoom larger scale using proportional symbol dot density symbol rescale different zoom level overcome problem associated fixedscale symbology remember data like province country aggregation coronavirus average entire region impossible derive insight local circumstance outbreak cluster data support analysis restrict map implying meaningful design choice obfuscate reality limit data also critical remain critical reading sort map smarter see map help identify seeing pattern much product map mediating message data caveat emptor applies much reading map buying house map might look stunning attractive step inside may find manner structural defect limit practical use buy house suffering collapsed foundation termite infested wall despite fresh lick paint smell walk able identify flaw seeing regardless authoritative definitive think told map help smarter consumer information rapid runthrough idea help map data coronavirus outbreak responsibly also spot map perhaps responsible could communicating something map consumer often simplest technique done well provide sound cartographic approach key informing work data imbue misguided sensationalist data processing symbology deal cartographic problem different technique known key point february hubei case per people population everywhere else china le case per people country reporting case rate even lower map mediate message greater lesser extent appear wellintentioned often unhelpful maybe word needed going make map think key aspect pick technique support telling story process data choose symbol suitable avoid making map misguides misinforms potential go viral example cartofail map would make symbol log scaled light dark colour scheme accentuate symbol alternatively might put proportional label map simply use table graph instead map author ken professional cartonerd bachelor cartography phd gi health geography former academic uk since talk writes cartography teach occasionally make map esri far sunnier clime presented published awful lot demand panellist keynote blog cartonerdcom tweet kennethfield past editor cartographic journal current chair ica map design commission mapdesignicaciorg award map pedagogy kitchen tile design author bestselling book cartography recently taught mooc cartography people interested making better map snowboard drum build lego support nottingham forest
69,Lobsters,visualization,Data Visualization,Introduction to Sorting Networks,https://hoytech.github.io/sorting-networks/,introduction sorting network,,mov rdi edx mov rdi cmp edx mov edx rsp temp jge maybe goto mov rdi mov rsp mov edx mov rdi temp jge conditional jump address cause timing leak system mov rdi edx mov rdi ecx cmp edx ecx diff setge al mov ecx rsp temp mov edx rsp temp mov eax edx xor edx movslq edx rdx mov rsp edx mov edx rsp temp diff cltq mov rsp eax mov eax rsp temp diff mov rdi jump editedreordered clarity
70,Lobsters,visualization,Data Visualization,The iOS Developer Community Survey [2019],https://iosdevsurvey.com/2019/,io developer community survey,,
71,Lobsters,visualization,Data Visualization,Color Spaces,https://ciechanow.ski/color-spaces/,color space,cmyk quite flawed response cell color picker white yellow normalized range intensity mismatch floating point number jpeg png srgb make background black make background bright dci prophoto primary difference exact match primary matched fit perfectly perfect match let mixing thing grassmann law primary seeing matrix parallelepiped set back negative value matrix seeing inverse matrix breaking boundary represent one space rule cie cie xyz color space light electromagnetic radiation visible spectrum spectral color cone exception trichromacy color matching experiment xyz space useful property chromaticity luminance xy chromaticity diagram exist line purple much smaller chromaticity diagram gamut gamut white point white point drag slider right bruce lindbloom website chromatic adaptation srgb color space described author first color picker specification wikipedia international color consortium tone response curve chromaticity white point coordinate x rec standard illuminant reading color hexcodes eyeball set page first post collection great article completely painless programmer guide xyz rgb icc xyy trcs four part series color imaging fundamental application final word,february longest time pay lot attention way talk color modern display technology capable showing vivid shade better worse changed rule game esoteric idea like gamut color space becoming increasingly important color described many different way could use word list amount cmyk printer ink enumerate quite flawed hsl hsv value even quantify response cell human retina notion useful context going focus article dedicated entirely rgb value rgb color space may seem fairly restrictive considering domination display medium color presentation pragmatic approach ultimately prevent u describing everything see dry definition color space good way kick thing instead start playing one common tool used specify color color picker probably seen rgb color picker usually look like dragging slider right create white color lot red green little blue produce shade yellow color picker way specify color try using one gist behavior new picker red slider control red component green slider affect green component blue slider act blue component set slider minimum value maximum value however shade intensity create quite different compare color slider position side side plate top half show color first picker bottom half contains color second picker color look pure black none color match despite value red green blue may wondering half plate wrong truth correct come different rgb color space soon explain cause difference eventually see defines color space important lesson numeric value red green blue component meaning color space assigns meaning numeric value shown extreme example almost everything two color space different course next paragraph looking simpler example help u get feel different aspect color space mean discus aspect make quick detour revisit component rgb color described normalized range dealing rgb color often see specified range equivalent hexadecimal form ff using range convenient especially specifying color web tie description color specific depth actually want express percentage maximum intensity red green blue component represent discourse use called normalized range minimum value still maximum value calculating normalized value range easy divide source number form may feel le familiar let u talk value without care kind discrete encoding scheme eventually use intensity mismatch let continue playing color picker upgrading show two color time top half see color obtained rgb value interpreted one color space bottom half show color obtained rgb value interpreted another color space playing slider may noticed something peculiar slider minimum maximum color look otherwise comparison color different slider value color space specify numeric value red green blue component map intensity corresponding light source word position slider may equal intensity light slider control color space bottom half us simple linear encoding intensity value encoded value light shining maximum intensity encoded number top color space us encoding fixed exponent intensity value encoded value light shining maximum intensity encoded may seem like pointless transformation good reason nonlinear mapping human eye simple detector power incoming light response nonlinear twofold increase emitted number photon per second perceived twice bright light encode color using floating point number need nonlinear encoding function would diminished however numeric value color often encoded using familiar bit per component eg common configuration jpeg png file using nonlinear tone response curve trc short let u maintain le perceptual uniformity use chunky quantized range keep detail darker part first representable value bit encoding linearly increasing amount light probably tell brightness difference perceive first two pane much larger last two pane first representable linear shade gray bit encoding extremely common srgb color space employ nonlinear trc make better use human visual perception first representable value bit encoding output srgb value may need ramp display brightness see maybe even make background blackmake background bright first representable srgb shade gray bit encoding notice hollow circle first last color none shade gray would representable bit format use straightforward linear encoding actually need range bit per component represent dark shade srgb gray without using tone response curve situation end spectrum difficult visualize since image website use srgb color space least show white shade linear color space shown upper part picture get darker slowly corresponding white shade srgb bottom last representable linear top srgb bottom shade gray bit encoding linear encoding precision light intensity everywhere accounting nonlinear perception end quickly increasing brightness dark end slowly decreasing darkness bright end different color space use different trcs like dci use simple power function fixed exponent others like prophoto employ piecewise combination linear segment power segment magnitude exponent differs color space unanimous opinion constitutes best encoding finally color space use special encoding represent component value linear fashion trcs useful encoding intensity storage crucial thing remember mathematical operation light make sense done linear value represent actual intensity light actually fairly easy visualize gradual mix pure red pure green notice top half use nonlinear encoding color get darker middle bottom linear half progression look balanced discussed section first component typical rgb display color space say one defining property color space set tone response curve red green blue component encoding essential nonetheless technical part color space specification actual color usually care primary difference let look different example two color space color picker make thing simpler half operate linear intensity notice grayscale color match perfectly however color bottom half clearly subdued numeric value symbolize red green blue value top half small bar top letter rgb value bottom half use bar bottom rgb may wondering despite rather different behavior possible make color match word knowing rgb value like express color using rgb value notion may seem contrived underlying idea important understanding color described many different triplet value see scenario action fix bottom half picker let slider control top color trial error may get pretty close perhaps even achieve exact match unless quite skilled task probably trivial trying manual work every possible color would daunting endeavor consistent reproduction color crucial realizing design want carefully selected shade pastel beige look like ripe orange seen device dire need better approach trying make color look despite different meaning value rgb component primary matched reproducing arbitrary color different color space difficult try simplify thing little trying match pure red green blue color seeing get u let start matching red bottom plate making border two half disappear may take tweaking eventually agree value fit perfectly step right direction since dealing linear value express much single unit r contribute rgb component instance recreate rgb color need use unit r unit g unit b put result equation color rgb space green blue amount red could use following formula see color top plate r g b repeat experiment pure g decided perfect match write impact g rgb component r g b left repeat experiment pure b still tired dragging slider let result written r g b provided equation apply rgb half show amount red amount green amount blue limited nonzero value one component get u far create diverse set color need way finding mix basic component rgb affect value rgb mixing thing thankfully grassmann law come rescue empirical rule tell u two colored light match addition another set matching light source overlap sum also match sum two matching set colored light also match result three matchings r g b separately combine result one set instance obtain final r value rgb need sum contribution r r contribution g r contribution b r repeating trick two component yield following set equation r g b matching primary red green blue color one color space another equation hand finally recreate math behind matching beige first example plugging original rgb value calculate value exact match r g b seeing matrix look closely three equation governing conversion rgb rgb may notice coefficient form grid actually matrix defines conversion rgb rgb familiar matrix vector might already realized transformation plain old matrix time vector multiplication matrix particularly interesting transformation visualized following interactive diagram outer cube defines rgb space inner skewed cube parallelepiped defines rgb space drag cube around see different angle control rgb color indicator using slider experiment encourage set red green component play blue slider able see movement along pure blue color rgb space requires shift red green rgb notice rgb parallelepiped fit completely inside rgb cube mean one recreate every single rgb color using rgb space inverse however true back example background top half set pure r maximum intensity may try really hard combination value rgb cause seam two half disappear ignore issue minute treat problem algebraically solve system equation looking pure r output detail evaluation boring let present solution r plus g b three value outside range clear indication unreachability color rgb space value larger straightforward explanation r beyond range intensity r could say r strong enough le intense value r contribute r within limit example r requires r negative value slightly trickier imaginary still reason quite easily negative value let try think experiment tasked matching light right side combination red green blue light left side mixing light obtain color right tuning may realize even green blue light color still match left patch light continues look bit orangey indicating much green left patch still green decrease green light left side anymore become creative could say left side green could say right side green enough since care making color match could try adding green light side adding green light target side right side green adjust added amount eventually make color look match right amount green let try write achieved equation maximum amount red green blue left side right side target color green light added target feel little mischievous wanted match pure target color without addition let try rearrange equation moving added green light right left side target equivalent equation tell u getting exact match starting target color requires using negative amount green light left side naturally something physical world mathematically however match saturated red right side really requires removing green light left side still convinced consider would happen somehow able create left side show picture imaginary situation show would happen added side exactly image since scenario equivalent recall grassmann law adding amount light side maintains color match indeed imaginary left side must made look like original unmodified saturated red right side may somehow unsatisfying however step away physical restriction think light number quite literally add matrix seeing go back quest obtaining rgb value rgb color repeat system equation trick two component combine result using grassmann law end full set equation r plus g plus b set coefficient presented matrix solved system linear equation may realized inverse matrix original rgb rgb transformation useful property establishing conversion one linear color space another need figure coefficient matrix one direction matrix direction inverse one time visualize transformation matrix performs time rgb perfect cube rgb outer skewed cube easily see much bigger rgb space indeed let u express color rgb breaking boundary far whenever numeric value color space outside range clip representable limit let try see happens remove restriction modify slider allow range try match pure r approach actually represent pure r using rgb color space since number care entire thing work often called unbounded extended range actually see rgb color represented using extended range rgb color display capable showing rgb color first place otherwise would get physically clamped display put differently transformation value color space extended range native color space display end value standard range unbounded value flexible two important caveat one consider dealing first since range value unlimited possible create color truly physical meaning eg additionally storing value type limited range may possible decide use bit per component encode range range able represent value outside normalized range since simply fit one space rule color transformation performed somewhat contrived two color space analyzed defined relation immutable attachment physical world red green blue whatever ended seeing screen way knowing color would look another device master color space derived physical quantity could solve problem finding transformation color space common connection space luckily color space specified cie resulted known cie xyz color space discus space defined need take quick look physic human visual system light ground discussion color perception real world establish term light part electromagnetic radiation visible human eye visible spectrum approximated typical display color specific wavelength look roughly like visible spectrum wavelength shown nanometer color corresponding single wavelength called spectral color example light wavelength nm would produce pure spectral yellow notice boundary color soft single spectral red wavelength need describe spectral color accurately human eye simple wavelength detector perception color created many different way yellow color created using light wavelength around nm mixture green red light since human retina three different type photoreceptive cone color sensation matched using three fixed color varying intensity mean color recreated using additive mix three color discussed sometimes one two color negative weight added target color instead algebraically however need three primary color represent everything human perceive rare exception property human visual system called trichromacy exploited various display technology present broad spectrum color using three rgb primary color matching experiment beginning century david wright john guild independently conducted experiment human observer test subject tried match spectral color nm increment combination red green blue light source experiment fairly similar slider trying match target color combination three color result experiment standardized rgb color matching function presented graph cie rgb color matching function notice presence negative value spectral color could achieved combination selected rgb value yet negative value mean color added target value cie standardized reference r experiment monochromatic light wavelength nm reference g nm reference b nm specific ratio relative intensity critical step discussion color finally grounded physically measurable property let look yellow wavelength nm reading color matching plot tell color match required unit r unit g unit b set three rgb coordinate begs three dimensional presentation read color matching value every wavelength obtain following plot may wonder spectrum curve go pure red green blue endpoint cie rgb cube simply result normalization scaling applied color matching function committee within reasonable limit light source constructed powerful needed constitutes always defined somehow arbitrarily xyz space cie rgb color space rooted concrete physical property monochromatic light could use define color sensation however committee strived create derived space would useful property two worth noting negative coordinate spectral color separation chromaticity hue colorfulness luminance visual perception brightness deliberation following set equation created x z factor may seem arbitrary sense simply yet another mapping value one space another similar rgb rgb transformation component chosen luminance component x z define chromaticity visualize cie xyz space inside cie rgb space see xyz space designed around spectrum curve make sure fit positive octant smaller size really concern scaling make thing convenient work making sure perceptually brightest wavelength nm value final step show xyz space spectral color since cie xyz space derived cie rgb also grounded measurable physical quantity xyz color space base color space used conversion matrixbased rgb display color space mapping two color space done common cie xyz intermediate simplifies color transformation since need know convert color two arbitrary color space need able convert xyz space xy chromaticity diagram three dimensional diagram fun play often particularly practical plot often easier work reason since component xyz space devoid colorfulness hue left two component affect chromaticity color perform three operation intended reduce dimensionality space x x x z x z z z x z distinction lower upper case important x x seemingly arbitrary equation simple visual explanation projection onto triangle spanned xyz coordinate notice x z add drop last component since redundant always recreate subtracting x rejection z equivalent flat projection onto xy plane repeat step every combination spectral color finally present plot known cie xy chromaticity diagram full glory may seen horseshoe shape cie xy chromaticity diagram rgb display technology capable presenting color human see many one shown picture actually result clamping representable range srgb color space color inside plot combination spectral color color outside plot exist notice straight diagonal line connecting end point red blue area every point outline horseshoe shape corresponding spectral wavelength color line purple wavelength light look like magenta purple simply human brain interprets mix red blue light ultimately different shade perception every color happens head important mention xy chromaticity diagram perceptually uniform area plot one move relatively far away chosen color notice difference chromaticity area distance change much smaller time cie developed uniform chromaticity diagram since xy diagram easily obtained xyz space continues used discussion rgb color space gamut chromaticity diagram useful visualizing gamut color space extent color color space represent necessary note gamut three dimensional construct projection onto image somehow contrarily present full picture nonetheless useful tool employed comparison color space finally present chromaticity primary rgb rgb color space single graph discus meaning little cross middle soon important fact triangle depicts representable chromaticity color space notice rgb triangle smaller rgb triangle showing u yet latter represent color diagram summarizes long journey took define second component defines every rgb color space location red green blue primary cie xy chromaticity diagram simulation drag slider see extent chromaticity triangle corresponds representable color base value image srgb color space converted space reduced gamut clamped range finally converted back srgb display clicktap image change browser nt support webgl required demo case color clamping pretty severe image snowy mountain change minimal almost black white picture little chromaticity therefore reduced gamut almost effect white point last aspect color space discus related little cross middle rgb rgb gamut visualization similarly different color space assign different color pure red defined white point color space defines color white represented color three component one color picker half rgb primary different white point see happens drag slider right color space form bottom half defines white slightly different color top color space visualization show two interesting property firstly ax inner outer cube collinear scaled differently secondly far endpoint cube longer overlap since whitepoints different white point last piece color space puzzle say color space also defined location white point cie xy chromaticity diagram xy coordinate red green blue primary xy coordinate white point one evaluate rgb xyz transformation given color space detail computation critical discussion read many place online eg bruce lindbloom website necessary correct calculation rgb xyz transformation practice may difficult notice two color space different whitepoints color conversion operation undergo chromatic adaptation color source color space mapped destination color space srgb color space finish discussion showcase srgb color space described author standard default color space internet ever specifying rgb color extremely likely component assumed come srgb color space fact color space used first color picker article srgb specification free wikipedia international color consortium provide information need describe tone response curve let look plot tone response curve srgb color space light intensity value vertical axis symbolized sun icon encoded value horizontal axis symbolized binary code tone response curve srgb curve may look like single power function range actually linear segment intensity value encoded value encoded value larger intensity value indeed defined slightly nudged power function exponent intensity value encoded value transition two part continuous marked location plot little bump curve designed roughly correspond response curve crt display thus extent minimizing need color management convenience unfortunate consequence creating widespread confusion binding two separate idea one general case purpose tone response curve make best use available space storing color information format limited bit depth nonlinear response electron gun crt display separate loosely related concept chromaticity white point coordinate chromaticity coordinate red green blue white pair x value put table red green blue white x probably agree form particularly exciting thing look much nicer xy chromaticity diagram chromaticity white point coordinate srgb technical note worth mentioning primary share location rec standard hdtv additionally white point location corresponds standard illuminant representation average daylight srgb capable representing vivid shade clearly contain color human see served purpose standard color space graphic remarkably well reading web filled interesting gem related color good dissection many major component pathway hex color end perceiving eye suggest reading jamie wong color hexcodes eyeball especially like approachable explanation spectral distribution bruce macevoy set page color vision amazing resource various aspect color highly recommend first post series author describes fascinating detail biophysics human visual system elle stone authored extensive collection great article color space calibration image editing different take touched upon article see completely painless programmer guide xyz rgb icc xyy trcs think enjoy deep dive optimization process creating minimal srgb icc profile clinton ingram got covered four part series pragmatic approach problem provides entertaining read finally resource traditional form recommend book color imaging fundamental application cover vast selection topic related color reproduction readable form final word many concept discussed developed decade ago despite age even old idea continue incredibly useful science behind expanded day color one area seemingly infinite depth complexity hopefully showed complexity actually scary look need shine light
72,Lobsters,visualization,Data Visualization,The Glitch Gallery: an online exhibition of pretty software bugs,https://glitchgallery.org/,glitch gallery online exhibition pretty software bug,gtfs data public transport association vbb,wanted use gtfs data public transport association vbb create art berlin public transport system extracted latitude longitude traffic stop use create path svg file stop berlin lie around could drop first three char use next three char coordinate grid poured data svg generator image result pointed illustrates exactly berlin traffic feel like later found messed substring throwing away first four char using next three char point svg
73,Lobsters,visualization,Data Visualization,Reducing Colors In An Image -> Dithering,https://shihn.ca/posts/2020/dithering/,reducing color image dithering,finding closest color cielab palette mapping enough dithering error diffusion dithering dithering dithering color formalize algorithm demo good sir got epilogue legrajs cielabdither twitter,image rendered computer screen using million color traditional bitmap every pixel represented rgb value red green blue channel value color vary mean million possible color million color disposal think older device printer printing press making giant poster favorite movie may also want reduce color palette reduce memory usage need sort mapping map pixel million possible color say possible color intuitively best approach would figure color similar pixel color use similarity mapping finding closest color let start simple case binary image pixel either black white grayscale image pixel value binary image value closer white use white else black play game color imagine r g b color value along ax cartesian coordinate color similarity measured distance two point cartesian space sqrt human though perceive red green blue shade way color usually weighted better match human vision red green blue better yet use cielab color space describes color closer human perceive color δe sqrt distance cielab space would accurately depict closeness two color palette mapping enough take moment try interactive demo top page dithering notice output quite attractive onetoone mapping color job lose character image better believe adding noise image dithering approximated color one palette another difference color introduced pixel called quantization error dithering applying noise image distribute quantization error take simple example gray rectangle grayscale value mapping rectangle binary every pixel rectangle turn black le instead turn pixel black white density average gray level maintained least human eye looked distance error diffusion dithering two common way dithering ordered error diffusion ordered dithering based fixed matrix localized pixel value influence dithering surrounding pixel read error diffusion dithering quantization error pixel distributed surrounding pixel unlike ordered dithering error diffusion work color palette main reason focus popular version error diffusion dithering dithering algorithm go one pixel time left right top bottom pixel distribute quantization error surrounding pixel processed yet suggests error distributed fraction clockwise direction let work example keeping simple first grayscale image binary let say current pixel value get resolved binary quantization error pixel error distributed surrounding pixel using fraction defined moving next pixel pixel right previous one value pixel say also error previous pixel effective value pixel also approximates quantization error distributed following pixel dithering color algorithm easily extrapolated cielab color space quantization error number anymore tuple individual difference lab color δl δa δb distributing error value tuple multiplied associated fraction note since writing people suggested dithering would work better rgb space causing le hue shift finding closest color using cielab color space distribute quantization error rgb tested color boundary look better image brightness seems affected well working binary image though certain image created banding effect around color boundary appear cielab space formalize algorithm dithering explained formalized follows top bottom x left right oldpixel pixel x newpixel findclosestpalettecolor oldpixel pixel x newpixel quanterror oldpixel newpixel pixel x pixel x quanterror pixel x pixel x quanterror pixel x pixel x quanterror pixel x pixel x quanterror demo good sir take moment play interactive demo dithering yes one top post got epilogue trying solve problem could map image created legrajs actual available lego piece figure lego piece one would need color led image color reduction dithering since discovered dithering right solution use case later fascinating discover process aware dithering never got around actually implementing code typescript implementation wrote found cielabdither repo interactive demo page used implementation run algorithm webworker wrapped demo webcomponent drop element wherever needed blog post ditherview ditherview feel free reach twitter feedback comment cheer
74,Lobsters,visualization,Data Visualization,Visualizations of x86/x64 SIMD Instruction List (SSE to AVX512),https://www.officedaytime.com/simd512e/,visualization simd instruction list sse,simd instruction list sse japanese simd instruction list sse memo http softwareintelcomenusarticlesintelsdm feedback form move movdqa movdqu movapd movupd movaps movups movhpd movhps movhlps movlhps movq movlpd movlps movq movd movq movsd movss tip vpbroadcastq tip vpbroadcastd tip vpbroadcastw vpbroadcastb tip movddup tip vbroadcastss vpbroadcastq vpbroadcastd vpbroadcastw vpbroadcastb vbroadcastsd vbroadcastss tip tip tip pextrq pextrd pextrw pextrw pextrb movhpd movlpd extractps pinsrq pinsrd pinsrw pinsrb movhpd movlpd insertps punpckhqdq punpcklqdq punpckhdq punpckldq punpckhwd punpcklwd punpckhbw punpcklbw unpckhpd unpcklpd unpckhps unpcklps vpermq pshufd vpermd pshufhw pshuflw vpermw pshufb shufpd vpermilpd vpermpd shufps vpermilps vpermps vpblendmq vpblendd vpblendmd pblendw vpblendmw pblendvb vpblendmb blendpd blendvpd vblendmpd blendps blendvps vblendmps movddup movshdup movsldup vpmaskmovq vpmaskmovd vmaskmovpd vmaskmovps pmovmskb movmskpd movmskps vpgatherdq vpgatherqq vpgatherdd vpgatherqd vgatherdpd vgatherqpd vgatherdps vgatherqps vpscatterdq vpscatterqq vpscatterdd vpscatterqd vscatterdpd vscatterqpd vscatterdps vscatterqps vpcompressq vpcompressd vcompresspd vcompressps vexpandq vexpandd vexpandpd vexpandps valignq valignd palignr conversion arithmetic operation compare comisd ucomisd comiss ucomiss bitwise logical operation pand andpd andps vpandq vpandd pandn andnpd andnps vpandnq vpandnd por orpd orps vporq vpord pxor xorpd xorps vpxorq vpxord ptest vtestpd vtestps vptestmq vptestnmq vptestmd vptestnmd vptestmw vptestnmw vptestmb vptestnmb vpternlogq vpternlogd bit shift rotate psllq pslld psllw vpsllvq vpsllvd vpsllvw psrlq psrld psrlw vpsrlvq vpsrlvd vpsrlvw vpsraq psrad psraw vpsravq vpsravd vpsravw vprolq vprold vprolvq vprolvd vprorq vprord vprorvq vprorvd byte shift pslldq psrldq palignr compare string pcmpestri pcmpistri pcmpestrm pcmpistrm others ldmxcsr stmxcsr psadbw mpsadbw vdbpsadbw pmulhrsw phminposuw vpconflictq vpconflictd vplzcntq vplzcntd vfixupimmpd vfixupimmps vfpclasspd vfpclasssd vrangepd vrangeps aesdec aesdeclast aesenc aesenclast aesimc aeskeygenassist pclmulqdq tip tip zero clear tip copy lowest element element xmm register pshufd tip integer sign extension zero extension pxor punpcklwd punpckhwd pxor pcmpgtb punpcklbw punpckhbw tip absolute value integer pxor pcmpgtw pxor psubw tip absolute value floatingpoints andps mmandnotps tip lacking integer mul instruction tip max min pcmpgtd pand pandn por tip set bit,ï simd instruction list sse english japanese simd instruction list sse mmx register instruction omitted instruction marked become scalar instruction lowest element calculated pspddq changed sssdsi cc intrinsic name written instruction blue add prefix v change sse instruction name avx instruction name fp avx instruction operation ymm register integer avx instruction use ymm register use intrinsics change prefix mm suffix using ymm register requires support o window update later required ymm register basically separated lane upper lower operates within lane horizontal operation unpacks shuffle horizontal calculation byte shift conversion anomalous check manual carefully instruction noted used cpuid flag instruction noted xx used cpuid flag set flag also set using instruction requires support o feature common instruction z er sae bcst mentioned instruction see memo opmask register instruction document intended find correct instruction name sure make possible search manual refer manual coding intel manual http softwareintelcomenusarticlesintelsdm find error something please post feedback form email address bottom page highlighter sse avx sse avx color green yellow pink orange make default bookmark page clicking move mm xmm ymm zmm integer floatingpoint ymm lane qword dword word byte double single half mm whole mmmem movdqa movdqu movapd mmloadpd mmloadrpd mmstorepd mmstorerpd movupd mmloadupd mmstoreupd movaps mmloadps mmloadrps mmstoreps mmstorerps movups mmloadups mmstoreups xmm upper half mem movhpd mmloadhpd mmstorehpd movhps mmloadhpi mmstorehpi xmm upper half xmm lower half movhlps mmmovehlps movlhps mmmovelhps xmm lower half mem movq movlpd mmloadlpd mmstorelpd movlps mmloadlpi mmstorelpi xmm lowest elem rm movq movd xmm lowest elem xmmmem movq movsd mmloadsd mmstoresd mmmovesd movss mmloadss mmstoress mmmovess xmm whole elem tip vpbroadcastq tip vpbroadcastd tip vpbroadcastw vpbroadcastb tip movddup mmmoveduppd mmloadduppd tip vbroadcastss mem xmm mmbroadcastss ymm zmm whole elem vpbroadcastq vpbroadcastd vpbroadcastw vpbroadcastb vbroadcastsd mem xmm vbroadcastss mem xmm ymm zmm whole elems mm multiple elems mmsetpd mmsetrpd mmsetps mmsetrps mm whole zero tip tip mmsetzeropd tip mmsetzerops extract pextrq pextrd pextrw r pextrw rm pextrb movhpd mmloadhpd mmstorehpd movlpd mmloadlpd mmstorelpd extractps mmextractps insert pinsrq pinsrd pinsrw pinsrb movhpd mmloadhpd mmstorehpd movlpd mmloadlpd mmstorelpd insertps mminsertps unpack punpckhqdq punpcklqdq punpckhdq punpckldq punpckhwd punpcklwd punpckhbw punpcklbw unpckhpd mmunpackhipd unpcklpd mmunpacklopd unpckhps mmunpackhips unpcklps mmunpacklops shufflepermute vpermq pshufd vpermd pshufhw pshuflw vpermw pshufb shufpd mmshufflepd vpermilpd mmpermutepd mmpermutevarpd vpermpd shufps mmshuffleps vpermilps mmpermuteps mmpermutevarps vpermps blend vpblendmq vpblendd vpblendmd pblendw vpblendmw pblendvb vpblendmb blendpd mmblendpd blendvpd mmblendvpd vblendmpd mmmaskblendpd blendps mmblendps blendvps mmblendvps vblendmps mmmaskblendps move duplicate movddup mmmoveduppd mmloadduppd movshdup mmmovehdupps movsldup mmmoveldupps mask move vpmaskmovq vpmaskmovd vmaskmovpd mmmaskloadpd mmmaskstorepd vmaskmovps mmmaskloadps mmmaskstoreps extract highest bit pmovmskb movmskpd mmmovemaskpd movmskps mmmovemaskps gather vpgatherdq vpgatherqq vpgatherdd vpgatherqd vgatherdpd vgatherqpd vgatherdps vgatherqps scatter vpscatterdq vpscatterqq vpscatterdd vpscatterqd vscatterdpd vscatterqpd vscatterdps vscatterqps compress vpcompressq vpcompressd vcompresspd mmmaskcompresspdmmmaskcompressstoreupd vcompressps mmmaskcompresspsmmmaskcompressstoreups expand vexpandq vexpandd vexpandpd mmmaskexpandpdmmmaskexpandloadupd vexpandps mmmaskexpandpsmmmaskexpandloadups align right valignq valignd palignr expand opmask bit conversion arithmetic operation compare floatingpoint double single half compare scalar value set flag register comisd mmcomieqsd mmcomiltsd mmcomilesd mmcomigtsd mmcomigesd mmcomineqsd ucomisd mmucomieqsd mmucomiltsd mmucomilesd mmucomigtsd mmucomigesd mmucomineqsd comiss mmcomieqss mmcomiltss mmcomiless mmcomigtss mmcomigess mmcomineqss ucomiss mmucomieqss mmucomiltss mmucomiless mmucomigtss mmucomigess mmucomineqss bitwise logical operation integer floatingpoint qword dword word byte double single half pand andpd mmandpd andps mmandps vpandq vpandd pandn andnpd mmandnotpd andnps mmandnotps vpandnq vpandnd por orpd mmorpd orps mmorps vporq vpord xor pxor xorpd mmxorpd xorps mmxorps vpxorq vpxord test ptest vtestpd mmtestzpd mmtestcpd mmtestnzcpd vtestps mmtestzps mmtestcps mmtestnzcps vptestmq vptestnmq vptestmd vptestnmd vptestmw vptestnmw vptestmb vptestnmb ternary operation vpternlogq vpternlogd bit shift rotate integer qword dword word byte shift left logical psllq pslld psllw vpsllvq vpsllvd vpsllvw shift right logical psrlq psrld psrlw vpsrlvq vpsrlvd vpsrlvw shift right arithmetic vpsraq psrad psraw vpsravq vpsravd vpsravw rotate left vprolq vprold vprolvq vprolvd rotate right vprorq vprord vprorvq vprorvd byte shift shift left logical pslldq shift right logical psrldq packed align right palignr compare string explicit length implicit length return index pcmpestri mmcmpestri mmcmpestra mmcmpestrc mmcmpestro mmcmpestrs mmcmpestrz pcmpistri mmcmpistri mmcmpistra mmcmpistrc mmcmpistro mmcmpistrs mmcmpistrz return mask pcmpestrm mmcmpestrm mmcmpestra mmcmpestrc mmcmpestro mmcmpestrs mmcmpestrz pcmpistrm mmcmpistrm mmcmpistra mmcmpistrc mmcmpistro mmcmpistrs mmcmpistrz others ldmxcsr mmsetcsr load mxcsr register stmxcsr mmgetcsr save mxcsr register state psadbw compute sum absolute difference mpsadbw performs eight wide sum absolute difference operation produce eight word integer vdbpsadbw double block packed sumabsolutedifferences sad unsigned byte pmulhrsw packed multiply high round scale phminposuw find value location minimum unsigned word one horizontally packed unsigned word resulting value location offset within source packed low dword destination xmm register vpconflictq vpconflictd detect conflict within vector packed dwordqword value dense memory register vplzcntq vplzcntd count number leading zero bit packed dword packed qword value vfixupimmpd vfixupimmps fix special packed value vfpclasspd vfpclasssd test type packed value vrangepd mmrangepd vrangeps mmrangepd range restriction calculation packed pair value vgetexppd vgetexpps convert exponent packed dpsp fp value fp value vgetmantpd vgetmantps extract vector normalized mantissa vector aesdec aesni perform aes decryption round using state round key aesdeclast aesni perform last aes decryption round using state round key aesenc aesni perform aes encryption round using state round key aesenclast aesni perform last aes encryption round using state round key aesimc aesni perform inverse mix column transformation primitive aeskeygenassist aesni assist creation round key key expansion schedule pclmulqdq pclmulqdq perform carryless multiplication two number sha perform four round operation sha calculate state variable e four round sha perform intermediate calculation next four message dwords sha perform final calculation next four message dwords sha perform two round operation sha perform intermediate calculation next four message sha perform final calculation next four message dwords vzeroall zero ymm register vzeroupper zero upper bit ymm register movntps mmstreamps nontemporal store four packed singleprecision floatingpoint value xmm register memory maskmovdqu nontemporal store selected byte xmm register memory movntpd mmstreampd nontemporal store two packed doubleprecision floatingpoint value xmm register memory movntdq nontemporal store double quadword xmm register memory lddqu special unaligned load designed avoid cache line split movntdqa provides nontemporal hint cause adjacent item within aligned region streaming line fetched held small set temporary buffer streaming load buffer subsequent streaming load aligned item streaming line may supplied streaming load buffer improve throughput vgatherpfxdps vgatherpfxqps vgatherpfxdpd vgatherpfxqpd sparse prefetch packed spdp data value signed dword signed qword index using hint vscatterpfxdps vscatterpfxqps vscatterpfxdpd vscatterpfxqpd sparse prefetch packed spdp data value signed dword signed qword index using hint intent write tip tip zero clear xor instruction integer floatingpoint example zero qwords dwords word byte example set float example set double tip copy lowest element element xmm register shuffle instruction example copy lowest float element element example copy lowest word element element example copy lower qword element upper element pshufd b better tip integer sign extension zero extension unpack instruction example zero extend word dwords lower upper movdqa src data word pxor upper attach word punpcklwd lower dwords punpckhwd upper dwords example sign extend byte word lower upper pxor movdqa pcmpgtb upper attach byte src punpcklbw lower word punpckhbw upper word example intrinsics sign extend word variable dwords lower upper tip absolute value integer integer value positive zero already abosoute value else adding complementing bit make absolute value example set absolute value signed word src positive src negative pxor pcmpgtw pxor xor nothing xor complement bit psubw subtract nothing subtract add example intrinsics set abosolute value dwords variable tip absolute value floatingpoints floatingpoints complemented clearing sign highest bit make absolute value example set absolute value float data align signoffmask dd dup mask clearing highest bit code andps xmmword ptr signoffmask example intrinsics set absolute value float variable const signmask mmandnotps signmask tip lacking integer mul instruction signedunsigned make difference calculation upper part fot lower part instruction used signed unsigned unsigned word unsigned word upper word pmulhuw lower word pmullw singed word signed word upper word pmulhw lower word pmullw tip max min bitwise operation getting mask compararison example compare signed dword set smaller one b b movdqa pcmpgtd pand pandn por example intrinsics compare signed byte variable b set larger one maxab tip set bit pcmpeqx instruction example set qwords dwords word byte ver
75,Lobsters,visualization,Data Visualization,"Separate your filters! Separability, SVD and low-rank approximation of 2D image processing filters",https://bartwronski.com/2020/02/03/separate-your-filters-svd-and-low-rank-approximation-of-image-filters/,separate filter separability svd lowrank approximation image processing filter,separable convolutional image filter singular value decomposition bokeh note followup post post update olli niemitalo fast bokeh effect using lowrank linear filter followup post intro motivation separable filter feature sequence two filter different direction simplest analytical filter box filter gaussian filter b numerical arbitrary filter linear algebra rescue product two matrix linearly dependent matrix rank lowrank approximation singular value decomposition wikipedia page singular value decomposition unitary matrix rectangular diagonal matrix orthonormal wikipedia u v e e singular value original matrix separable rank single singular value note simple separable example singular value one singular value fully separable nonseparable filter interesting filter exponentiallaplace distribution bandpass filter nothing like original one lowish rank approximation separable first singular value density function circular hexagonal filter need many independent note note lowrank approximation practice performance cost n additional memory cost exact accuracy component bad visual effect lowrank approximation boookeh kodak dataset amplify filter problemsartifacts negative ringing artifact conclusion note wrote blog post limitation horizontalvertical separability strictly horizontalvertical separability anisotropic gaussians fast hexagonal blur filter covariance principal component automatic linear algebra machinery ml replacement careful engineering using domain knowledge bonus filter denoising mostly robust noise filter denoising efficacy depend filter type higher rank approximation add noise biasvariance tradeoff concept left middle right significantly le noise conclusion image filterkernel separability singular value decomposition higher rank approximation approximated despite noise numerical imprecision computationally way cheaper nonseparable filter parallelizes perfectlytrivially simple implementationwise past referenced smart solution olli niemitalo like,blog post explore concept around separable convolutional image filter check filter like convolution blur sharpening feature detector separable compute separable approximation arbitrary filter represented numerical matrix form covering genuinely new research think really cool fun visual interesting practical topic mostly unknown computer graphic community throughout post explore basic use singular value decomposition one common powerful linear algebra concept used subfields computer science said image processing recommendation system ml ranking web page search engine see used analyze image processing filter check separable approximate nonseparable one demonstrate use separable juicy bokeh note post turned part one miniseries followup post sure check post update using separable filter bokeh approxmation new idea olli niemitalo pointed paper fast bokeh effect using lowrank linear filter necessarily feature detail technique valuable timingsperformancequality comparison stochastic sampling interested using practice check along followup post intro motivation separable filter one useful tool image processing turn algorithm theoretical expensive practical computational constraint case ability use separable filter tipping point make interactive offline technique realtime instead let say want filter image sharpen blur maybe detect edge feature given image filter size mxn computing filter would require mxn independent sequential memory access often called tap accompanied mxn multiplyadd operation large filter get easily prohibitively expensive get quadratic scaling filter spatial separable filter come rescue filter separable decompose filter sequence two filter different direction usually horizontal vertical pas filter filter first second pas n tap total mn operation requires storing intermediate result either memory locally line buffering tiled local memory optimization pay cost storing intermediate result synchronizing pass get linear quadratic scaling therefore typically filter size larger depends hardware implementation etc using separable filter going significantly faster naive nonseparable approach find separable filter simplest analytical filter two simplest filter bread butter image processing box filter gaussian filter separable box filter seems relatively straightforward two way thinking intuitively think happens smear value across horizontal vertical axis get box b mathematically two condition value filter two condition dimension independent f x select ab x extentx ab extenty v f x select ab x extentx v select ab extenty last product equation separability function product horizontal vertical function gaussian interesting one immediately obvious normal distribution separability let write math simplicity use nonnormalized gaussian function usually need renormalize discretization anyway assume standard deviation disappears denominator f x exp sqrt sqrt distance filtered pixel f x exp filter center f x exp f x exp exp last step follows definition exponential exponential sum product exponential afterwards see filter product two gaussian filter gaussian filter matrix numerical arbitrary filter started two trivial analytical filter arbitrary filter given u numerical form matrix full number plot analyze check given filter separable try separate maybe least approximately filter make filter separable spoiler yes gaussian tell linear algebra rescue let rephrase problem term linear algebra given matrix mxn would like express product two matrix let redraw initial diagram way looking problem roughly equivalent writing help build intuition would like find row replicated different multiplier n time giving u original matrix another way saying would like mxn filter matrix rowscolumns linearly dependent would like source matrix matrix rank one impossible would like get lowrank approximation matrix mxn solve problem use one common useful linear algebra tool singular value decomposition proving give good result optimal leastsquarest sense least norm beyond scope post curious check proof wikipedia page singular value decomposition specifically singular value decomposition real complex matrix factorization form real complex unitary matrix rectangular diagonal matrix nonnegative real number diagonal real complex unitary matrix real real orthonormal matriceswikipedia svd help u look final matrix sum many matrix multiplication single rowcolumn u v matrix multiplied diagonal entry matrix e svd diagonal matrix e contains entry called singular value diagonal sorted highest value lowest look final matrix sum different rank matrix weighted singular value singular value correspond proportion energy information original matrix content svd decomposes matrix three matrix middle one purely diagonal one product value diagonal columnsrows matrix create multiple matrix add together going get source matrix back original matrix separable rank single singular value even zero significantly smaller truncate coefficient except first one get separable approximation original filter matrix note svd concept type matrix factorization decomposition algorithm compute one computing svd efficiently numerically stable generally difficult requires lot careful consideration going cover almost every linear algebra package library implemented assume use one simple separable example let start two simple example know separable box gaussian filter using python numpy matplotlib warmup feel free skip two trivial case jump next section import numpy np import matplotlibpyplot plt import scipyndimage pltstyleuse seabornwhitegrid x npmeshgrid nplinspace nplinspace box nparray nplogicaland npabs x npabs gauss npexp x x pltmatshow nphstack gauss box cmapplasma pltcolorbar let see svd box filter matrix print singular value u e row column associated first singular value u e v nplinalgsvd box print e print u print v great get one singular value mean rank matrix fully separable hand fact column vector negative bit peculiar implementation dependent sign negate simply multiply also get rid singular value embed filter example bymultiplying sqrt make comparable value apart cute get exactly separable filter would expect gaussian filter matrix arrive following take outer product using function npouter two vector arrive filter almost exactly original numerical imprecision difference gaussian approximation unsurprisingly look exactly nonseparable filter oh took filter know separable fed complicated linear algebra machinery verified yes separable waste time might think right demonstration concept far much practical value let look interesting filter one know separable maybe almost separable picked four example circular hexagon exponentiallaplace distribution difference gaussians circular hexagon interesting useful bokeh exponentiallaplace somewhat similar longtailed brdf like ggx used glare veil type effect difference gaussians laplacian gaussians commonly used bandpass filter well used busy donut type bokeh circle nparray x xy exponential npexp npsqrt x xy hexagon nparray nplogicaland nplogicaland nplogicaland nplogicaland nplogicaland nplogicaland nplogicaland xy npsqrt xy npsqrt xy npsqrt xy npsqrt x x differenceofgaussians npexp x xy npexp x xy differenceofgaussians npmax differenceofgaussians pltmatshow npvstack nphstack circle hexagon nphstack exponential differenceofgaussians cmapplasma pltcolorbar try rank approximation taking first singular value end result looking like look terrible nothing like original one ok know separable concludes blog obviously kidding let explore good approximation make better lowish rank approximation mentioned singular value represent percentage energy information original filter filter separable energy first singular value distributed among multiple singular value plot magnitude singular value normalized plot integrate like density function depend bright filter see going two plot singular value cumulative reaching mean original filter preserved singular value matrix point reach zero truncated plot second plot informative tell u expect low rank approximation reconstruct fully original filter difference gaussians need two rank matrix surprising dog difference two gaussians separable rank filter laplacian get close rank matrix hand circular hexagonal filter need many reach accuracy need filter get accurate higher rank approximation look like think sum n independent separable filter independent vertical horizontal pass practice would probably implement single horizontal pas produce n output followed vertical one consumes multiplies appropriate vertical filter produce single output image note general case sharper like immediate transition hex circle le symmetric filter difficult approximate way similar common decomposition like fourier transform note might wonder dog expressed sum two trivially separable gaussians svd rank approximation look like one gaussians answer single gaussian resulting filter different source separable weird pattern svd decomposes progressive low rank decomposition optimal sense case mean adding two nonintuitive weird separable pattern together second one contributes le first one lowrank approximation practice rank n approximation mxm filter would performance cost n additional memory cost n original image storage common optimization like line buffering localtiled storage need approximate filter even taking component could theoretically worth much larger filter would also worth practice still faster le problematic fft based approach one thing worth noting case presented filter reach exact accuracy component opposed full singular value let look practical component approximation def lowrankapprox rank u e v nplinalgsvd mn npzeroslike score range rank mn e npouter u v score e print approximation percentage score npsum e return mn even maximum four component see clear diminishing return effect difference get smaller component compared surprising since singular value sorted descending every next approximation add le information looking result might actually bad see blockiness even worse negative value ringing would perform real image visual effect lowrank approximation boookeh demonstrate goodbad work practice use filter blur image kodak dataset ldr image effect visible convert fake hdr applying strong gamma function filtering inverse gamma emulate tonemapping hdr job also greatly amplify filter problemsartifacts want analysis approximation often want understand average also worst case left source image middle image blurred circular kernel gamma right image blurred kernel fakehdr space emphasize filter shape def faketonemap x return nppower npclip x def fakeinvtonemap x return nppower npclip x def filter img x re npzeroslike img c range note normalize filter preserve image brightness re c faketonemap scipyndimageconvolve fakeinvtonemap img c xnpsum x return re def lowrankfilter img x rank finalres npzeroslike img u e v nplinalgsvd x npsum x c range tmd fakeinvtonemap img c range rank finalres c e scipyndimageconvolve scipyndimageconvolve tmd u npnewaxis nptranspose v npnewaxis finalres c faketonemap finalres c return finalres without ado result unsurprisingly difference gaussians exponential distribution two component enough get identical filtered result close hexagon circle even component show negative ringing artifact bottom image one need get artifactfree approximation time using extreme gamma show shape emphasize artifact would matter practice would approximation useful usually depends context filter image content processing etc put together thought recommendation conclusion section careful reader might ask clamp filter negative reason low rank approximation often locally overshoot add energy certain region next rank approximation component need remove since separably accumulate filtered result whole point low rank approximation know sum locally negative could try find different guaranteed nonnegative decomposition nphard problem approximation heuristic optimizationbased solution exist note actually wrote blog post using optimization solve least minimize issue followup sure check limitation horizontalvertical separability conclude post wanted touch two related topic one disadvantage svdbased decomposition one beneficial sideeffect starting disadvantage lowrank approximation context limited filter represented matrix strictly horizontalvertical separability limited real practical important application covered let analyze two usecases oriented orthogonal separability nonorthogonal separability anisotropic gaussians trivially separable two orthogonal filter along principal direction perpendicular similarly skewed box blur filter separable case need blur two nonorthogonal direction note separability basis classic technique fast hexagonal blur developed john white colin barrebrisebois filtering done superfast gpu often almost fast horizontalvertical separation depending using texture sampler compute shaders local memory yet svd factorization able find let look low rank horizontalvertical approximation accumulation singular value look like left right original overall approximation pretty bad consider trivially separable different direction could significantly improve finding filter covariance principal component rotate axis aligned approximation requires filter resampling complicates whole something always keep mind automatic linear algebra machinery ml replacement careful engineering using domain knowledge bonus filter denoising post already bit long hint interesting effect advantage sfv svd mostly robust noise used filter denoising take pretty noisy gaussian gaussian maximum noise standard deviation simple decomposition get significantly cleaner representation albeit horizontal vertical streak approximation denoising efficacy depend filter type example take original circular filter saw pretty difficult approximate result going great component would normally add detail add noise back well approximation noisy circular filter original component add noise come back therefore exists point higher rank approximation add noise compared adding back informationdetails closely related biasvariance tradeoff concept machine learning see behavior following plot showing normalized sum squared error noisy circular filter next rank approximation error computed ground truth nonnoisy filter add next rank approximation noisy filter initially observe error decreasing start increase add information original structure noise interesting see plot cutoff point case around rank component enough perfectly reconstruct nonnoisy version filter left clear circular filter middle circular filter noise added right rank approximation noisy circular filter notice perfect circle shape significantly le noise middle one overall property svd used denoising algorithm however decomposed matrix patch image instead usually mxn matrix flattened image patch representing pixel vector n corresponds n different often neighboring similar image patch super interesting technique way outside topic post conclusion conclude blog post looked image filterkernel separability computational benefit simple analytical example shown way analyzing filter converted separable rank representation singular value decomposition encountered example nonseparable filter analyzed higher rank approximation compute sum many separable filter look like apply image filtering using example bokeh love scientific analytical approach also engineer heart leave blog post without answering practical would someone want use take another tool toolbox immediate practical us include analyzing understanding data checking nontrivial filter separable approximated despite noise numerical imprecision finally evaluate good approximation nonseparable filter low rank approximation rank higher one often pretty good component think practical usable example rank approximation bokeh filter perfect artifact computationally way cheaper nonseparable filter parallelizes perfectlytrivially simple implementationwise past referenced smart solution olli niemitalo approximate circular bokeh using complex phasors lowrank approximation real domain covered blog post simpler interesting alternative similarly might produce perfect hexagonal blur like one constructed using multiple skewed box filter cost would similar implementation much simpler worth giving try hope post inspiring future exploration understanding problem separability able find interesting practical usecases like like loading
76,Lobsters,visualization,Data Visualization,Using GitHub Data to Construct a Software Development Activity Map of the World,https://medium.com/@shayanakbar1990/using-github-data-to-construct-a-software-development-activity-map-of-the-world-6e8a1886f0cb,using github data construct software development activity map world,location information disclaimer octoverse developer distributed across planet u china india canada germany brazil france russia uk ukraine country gdp country correlate number software developer present country data gdp country obtained world bank north america asia europe south america africa oceania antarctica antarctica around developer country generate traffic github github archive u china hungary germany canada uk india france brazil japan ddos famous ddos attack github hat programming language popular around globe programming language javascript python java html php ruby c cs c c topic trending world software development latent dirichlet allocation lda gensim programming language educational material technology web application framework computer network security signal processing data science miscellaneous really tell paper markovtsev et al technology signal processing data science miscellaneous web application framework programming language educational material computer network security really tell lie ahead project topic modeling short text access dataset code author webpage linkedin scholar,scrape data million developer construct map perform scraping wrote python script automatically downloads html file github process file extract location information along useful thing discus later postscraping data github processing took month complete disclaimer author post associated github provide statistic post third party entity github provides statistic regarding issue discussed article statistic provided github refer reader octoverse statistic provided github however used construct detailed map worldhow developer distributed across planet using location data extracted html file downloaded github cluster developer together based country belong distribution software developer around different country world shown distribution software developer across different country world map show u far leading country term number software developer opensource software development github access map linkthe map constructed using around million developer githubfrom map observe u far number software developer top country term number developer u data country world key insight draw map follows canada list number developer canada also least population among country list aboveukraine rank number developer pretty cool relatively small country brazil country south america top listnone african oceanian country made list top arab emirate rank number developer shown top list gdp country correlate number software developer present countryyes gdp gross domestic product defines economic performance country correlate number developer present countrymore number developer would mean country performing better economically evident correlation gdp number developersbelow show chart comparing gdp number developer show correlation number developer country gdp country plot u top performing country economically well term software development u followed china number developer gdp data gdp country obtained world bankwhen looking continentwise distribution software developer see north america far number developer world developer distributed across continent follows north america america key insight draw antarctica continent permanent resident get thousand visitor around developersnorth america population world contributes software development continentsafrica world population oceania world population similar number developerswhich country generate traffic github addition number software developer different country world also present map active software developer country world data generate map obtained github archive map shown map world based commits data extracted github notice map similar one shown number developer earlier post u still far active software development measured number commitstraffic githubthe map commitsbased activity software developer around world show similar statistic number developer map showed earlier post top country term generating commit traffic github u make following key observation map number commits activity github commit traffic github generated usthe developer india pakistan bangladesh south asian country commit code le frequently rest worldhungary developer active github generated surprisingly large number traffic github still unresolved mystery ddos attack github evident datayes commit traffic data reflects famous ddos attack github analysed traffic data github exploratory study noticed account github generated surprisingly large traffic year name account ended string bot bot opened profile page account mostly empty account repository account deleted therefore discard account commitswe plot histogram user based commits made github year shown histogram developer based number commits make githubthe following key observation made plot developer github annually make le commitsthe average number commits developer make annually github median meaning average developer make two commits per weekmany account github dormant account ie account generate almost trafficwhile github many software developer platform developer dormant commit infrequentlywhat programming language popular around globe process html profile page developer downloaded github extract location information also extract information software repository publicly posted developer githubin particular extract name software repository short description usually attached name well programming language used write code software repositorieswe notice programming language developer used write code github ten popular programming language along number software repository github use language given javascript key insight drawn study follows go relatively new language repository rank popular languageskotlin another fairly new language repository rank popular languageswe still see quite repository use lisp dialectsfortran still software repository githubwhich topic trending world software development remember extract software repository name short description usually attached repository name html file github profile page developer use apply popular topic modeling technique called latent dirichlet allocation lda extract important topic around million github repository datatopic modeling work following manner provide large amount text data algorithm algorithm par text generates topic dominant text corpus generate topic document present corpus way obtain number document belong certain topicthe document case repository name short description attached name around million repository used generate topic model total number unique token repository provide repository data input lda algorithm generate topic model software repository use multiprocessing implementation lda provided popular gensim library algorithm took day finish execution intel quadcore machine workerswe generated topic using lda model topic divided following category manual examinationprogramming language material application framework network security processing data science really tell division inspired topic categorization described paper markovtsev et al however adopt slightly different categorization one mentioned paperthe programming language category contains topic different programming language noticed lda topic model processing repository data created topic programming language topic category swift javascript kotlin topic really tell much since already know programming language used repository github see previous section notice several topic exact related educational material topic include final project course code udacity leetcode interview question repository mainly written student either preparing interview posted course project githubthe technology category cover topic technology general largest topic category model topic category prominent topic graphql ansible arduino robot app mongodb npmthe web application framework could placed inside technology category wanted give separate status web development world unto see topic category rest api react native frontend html cssthe category computer network security topic related computer network system security aspect software engineering topic category mobile bot blockchain cryptocurrency cryptography email tcp ipin category called signal processing data science include topic related data science signal processing machine deep learning topic category deep learning rnn nlp neural network pytorch tensorflowthe miscellaneous category one topic related software engineering development rather topic general purpose belong everyday life topic include personal portfolio content font theme style guide love career exercise blog postthe final category really tell include topic category could place either mentioned category topic mostly language english consider valid topicsthe order popularity mentioned super category topic covered github repository follows technology processing data science application framework language material network security really tell following important point drawn discussion technology category repository lead number repository race githubsignal processing data science category includes topic deep machine learning number repository computer network security implies developer belonging deep machine learning related domain active opensource software development github cybersecurity folkshowever conclusively establish deep learning hotter area cybersecurity may due discrete nature software development cybersecurity developer like publish code opensource platformsthere lot repository miscellaneous category mean lot people like share repository github anything software developmentas far opensource repository github concerned deep learning much hotter area cybersecuritywhat lie ahead project recently quite advancement field topic modeling would good see topic modeling result obtained using novel model especially progress field topic modeling short textsgithub obviously platform active opensource software developer would interesting see data source like github explored construct richer map worldit would good see collaboration map software developer across different country world software developer different country world collaborate would interesting seethe granularity map countrylevel would interesting see developer distributed across city worldif interested extending project please let know access dataset code dataset generate map code used scrape github well process scraped data provided link author several year experience data mining machine learning computer vision information retrieval recently working mining software repository find webpage linkedin scholar
77,Lobsters,visualization,Data Visualization,Draw all roads in any city at once,https://anvaka.github.io/city-roads/,draw road city,,
78,Lobsters,visualization,Data Visualization,Algorithm for Drawing Trees,https://rachel53461.wordpress.com/2014/04/20/algorithm-for-drawing-trees/,algorithm drawing tree,reingoldtilford algorithm example journal article dr dobbs introduction algorithm mod first traversal tree initial drawing tree assigning initial x value mod property positioning child node parent checking node conflict contour fixing middle tree resolving conflict second traversal tree third final traversal final result final thought like uncategorized r leave response trackback post navigation previous post,recently wanted take hierarchy item draw nice tree structure example family tree time thought easy google algorithm determine x position node something draw node screen turn googling simple easytofollow algorithm drawing nice tree hard initial google attempt lead reingoldtilford algorithm sounded exactly like wanted however lot trouble understanding algorithm could convert language choice c every article found seemed written much smarter person difficulty following converting logic c much time spent going research paper browsing sample code think finally understand attempt explaining algorithm drawing tree aesthetically pleasing way using simple term example going use example tree journal article dr dobbs found article easiest understand work way would probably worthwhile read looking drawing nice tree also contains detail considered aesthetically pleasing tree talk detail easy find online needed sample tree article using look like introduction algorithm determining position node easy going go detail main trouble determining appropriate x position node brief overview logic used determine appropriate x position node could probably take figure get x value whatever language want go step detail later postorder traversal tree assign x value node leftmost node leftsiblingx parent node want node centered child would midway point first child x position last child x position parent left sibling change x value midpoint value left sibling going store another node property calling property mod see called example mod property used determine much modify child x value order center parent node used done calculates determine final x value node actually set parentx middleofchildrenx determine correct amount shift child check tree conflict previous sibling tree adjust mod property needed mean looping level current node checking rightmost x value sibling left node cross leftmost x value child current node second walk tree determine child drawn offscreen adjust mod property needed happen mod property negative third walk tree determine final x value node x node plus sum mod value parent node node let go step detail first traversal tree going preorder traversal tree first walk meaning draw tree bottom going left right see initial drawing tree node letter order postorder traversal process node iteration tree broken step assign x value node leftsiblingx leftsibling move child node parent node verify child conflict tree assigning initial x value first step calculate local x value value node x value within set child x value node step would look like code use follows private void calculateinitialx treenode node foreach var child nodechildren calculateinitialx child previous sibling set set x prevous sibling designated distance nodeisleftmost nodex nodegetprevioussibling x else first node set set x nodex course actually drew node x value would overlap able see tree hierarchy next step position child node parent mod property continuing explain mod property rest step involve shifting node child sometimes multiple time would normally loop node subtree increase x value however bad performance especially larger tree avoid using mod property tell node far need shift child end second walk tree determine ultimate x position node shift node child iteration increase x mod property however much want positioning child node parent next step center child node parent node actually pretty easy first find x value would center node child child desired x value child x value one child get first child x last child x find midway point two next check see parent node sibling left checking node parent see node equal first node parent child first node parent child set x value equal desired x value center parent child assign mod value node nodex desiredx shift child parent third tree traversal done calculate final x value node correctly position child underneath parent node however stop tree overlapping see node b c h tree checking node conflict come far step bad sound basic logic node child need loop level child ensure none x value assigned child conflict x value assigned previously positioned child level loop child current node value record minimum x position sibling left node loop child record maximum x position google told fancy term tree contour time node n blue processed left contour right contour node e green keep mind check us final x node calculated far local x assigned initially see first second level overlap need shift node n far enough left contour longer conflict node e right contour case largest overlapping distance two contour want add extra make sure node drawn top shift node n place fixing middle tree resolving conflict previous step fixed issue overlapping node however end result leaf lot empty whitespace middle tree note position node f tree shifted node n conflicted e need take distance apply evenly across sibling node two conflicting node divide distance shifted number node two conflicting node shift middle node value case shifted node node f node e n need shift f result sure cause conflict shifting middle node need check conflict end result tree slightly larger absolutely necessary however generated nicely conflicting node uneven amount whitespace anywhere second traversal tree node negative mod value position final x child node negative value render screen example shift node n positioned instead get result node h x value could check mod value time calculated ensure negative however would shift current node could resulting undesired extra whitespace sibling node example take look space node g tree best way fix problem shift root node enough none final x value negative get right contour root node find smallest x value negative shift root node amount remember shift subtree adjust x value mod value whatever amount shifting code look private void checkallchildrenonscreen treenode rootnode var nodecontour new dictionary int float getleftcontour rootnode ref nodecontour float shiftamount foreach var nodecontourkeys nodecontour shiftamount shiftamount nodecontour shiftamount rootnodex shiftamount rootnodemod shiftamount private void getleftcontour treenode node float modsum ref dictionary int float value valuescontainskey nodey valuesadd nodey nodex modsum else value nodey mathmin value nodey nodex modsum modsum nodemod foreach var child nodechildren getleftcontour child modsum ref value tree look shifted fit node screen third final traversal third tree traversal calculates final x position node adding mod value parent node x value use simple recursive function private void calculatefinalx treenode node float modsum nodex modsum modsum nodemod foreach var child nodechildren calculatefinalpositions child modsum image final tree x value look final x value decimal number positing node space apart make math easier follow determining midpoint often resulted decimal final result left take tree object x coordinate draw somewhere final thought algorithm perfect tested could sure still bug found one writing post understand supposed work debugfix issue come needed sample code using project downloaded may optimized since done demonstration purpose could missing thing thoroughly tested used kind production environment like like loading related entry posted sunday april pm filed uncategorized follow response entry r feed leave response trackback site post navigation previous post
79,Lobsters,visualization,Data Visualization,Trellis Plots,https://www.stat.auckland.ac.nz/~ihaka/787/lectures-trellis.pdf,trellis plot,,obj goto section endobj obj lecture trellis plot endobj obj goto section endobj obj trellis graphic endobj obj goto section endobj obj trellis graphic r endobj obj goto section endobj obj using trellis graphic r endobj obj goto section endobj obj conditioning endobj obj goto section endobj obj example earthquake location endobj obj goto section endobj obj figure tonga quake endobj obj goto section endobj obj problem presentation endobj obj goto section endobj obj trellis plot endobj obj goto section endobj obj figure trellis example endobj obj goto section endobj obj explanation endobj obj goto section endobj obj intepretation endobj obj goto section endobj obj example barley yield endobj obj goto section endobj obj trellis plot endobj obj goto section endobj obj figure barley example endobj obj goto section endobj obj trellis technology endobj obj goto section endobj obj terminology endobj obj goto section endobj obj shingle endobj obj goto section endobj obj shingle endobj obj goto section endobj obj figure shingle plot endobj obj goto section endobj obj producing plot endobj obj goto section endobj obj figure trellis example endobj obj goto section endobj obj plot formula endobj obj goto section endobj obj unconditional plot endobj obj goto section endobj obj figure unconditional plot endobj obj goto section endobj obj barley yield plot endobj obj goto section endobj obj first attempt endobj obj goto section endobj obj figure barley endobj obj goto section endobj obj second attempt endobj obj goto section endobj obj figure barley endobj obj goto section endobj obj third attempt endobj obj goto section endobj obj figure barley endobj obj goto section endobj obj fourth attempt endobj obj goto section endobj obj figure barley endobj obj goto section endobj obj choice colour scheme endobj obj goto section endobj obj figure colour choice endobj obj goto section endobj obj title axis annotation endobj obj goto section endobj obj figure annotation endobj obj goto section endobj obj layout control endobj obj goto section endobj obj figure layout control endobj obj goto section endobj obj aspect ratio control endobj obj goto section endobj obj figure aspect ratio endobj obj goto section endobj obj trellis example endobj obj goto section endobj obj death rate gender location endobj obj goto section endobj obj data manipulation endobj obj goto section endobj obj dotchart endobj obj goto section endobj obj figure dotchart endobj obj goto section endobj obj dotchart endobj obj goto section endobj obj figure dotchart endobj obj goto section endobj obj dotchart endobj obj goto section endobj obj figure dotchart endobj obj goto section endobj obj alternative display endobj obj goto section endobj obj figure alternative endobj obj goto section endobj obj height singer endobj obj goto section endobj obj figure box plot endobj obj goto section endobj obj figure qq plot endobj obj goto section endobj obj measurement exhaust burning ethanol endobj obj goto section endobj obj exploring relationship endobj obj goto section endobj obj figure ethanol endobj obj goto section endobj obj complex plot endobj obj goto section endobj obj figure ethanol endobj obj goto r fit endobj obj length filter flatedecode stream g endobj obj type page content r resource r mediabox parent r endobj obj type xobject subtype form formtype ptexfilename overlaypdf ptexpagenumber ptexinfodict r matrix bbox resource procset pdf extgstate r length r filter flatedecode stream pə gendstream endobj obj producer gnu ghostscript endobj obj type extgstate name tr identity opm sm endobj obj endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj font r xobject r procset pdf text endobj obj length filter flatedecode stream ϑ g cbthe endobj obj type page content r resource r mediabox parent r endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj font r r r r xobject r procset pdf text endobj obj length filter flatedecode stream xڭv endobj obj type page content r resource r mediabox parent r endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj font r r r xobject r procset pdf text endobj obj length filter flatedecode stream h r endstream endobj obj type page content r resource r mediabox parent r endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj font r r r r xobject r procset pdf text endobj obj length filter flatedecode stream x r endobj obj type page content r resource r mediabox parent r endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj font r r r r xobject r procset pdf text endobj obj length filter flatedecode stream igo n e endobj obj type page content r resource r mediabox parent r endobj obj r xyz null endobj obj r xyz null endobj obj r xyz null endobj obj font r r r r xobject r procset pdf text endobj obj length filter flatedecode stream c ڥendstream endobj obj type page content r resource r mediabox parent r endobj obj type xobject subtype image width height bitspercomponent length colorspace devicergb filter dctdecode stream jfif ycreator xv version rev png patch quality smoothing c w
80,Lobsters,visualization,Data Visualization,"Analyze, visualize and share Postgres Query Plans",https://explain.dalibo.com,analyze visualize share postgres query plan,,best result use explain analyze cost verbose buffer format json psql user export plan file using psql xqat f explainsql analyzejson submitted plan posted stored explicitely click share button
81,Lobsters,visualization,Data Visualization,Lucidity – an interactive program-state visualizer,http://symbolflux.com/luciditystory.html,lucidity interactive programstate visualizer,tiled text developed rsi kant lakoff johnson another example previous section art prolog,year wrapping tiled text project moving berkeley colorado grew working parttime small startup producing new impractical idea breakneck pace probably developed idea prior lucidity programming language impudently naming ia intellagent lucidity came determination would need order build ia lot could said ia sum project came tiled text project wellreceived reinforcing idea might something important try spotty eclectic knowledge subject c overly lacking connection ai programming language fact teenager read society mind couple others tried eg writing java program agi since developed ingrained habit observing thinking feedback handful topic cognition refining model interested thinking work thought might unique insight fact developed rsi prevented viewing computer programming something would reliably able career forcing explore wider range subject particular time absorbed topic within philosophy general linguistics part new friend making around berkeley result unsurprisingly ambitious almost certainly doomed fail concept based heady mixture idea could individually categorized interesting b mistaken c already wellestablished ignorance notwithstanding analogy first number builtin type used bootstrap cognition using set innate relation including relation course partially inspired questionable interpretation kant lakoff johnson idea behind definition analogy generalize reparticularize original away structure stay though thing related structure allowed change two block prefixed one list parameter add thing type whereas second block purpose remove thing via constraint mean first block provides stone second carves produced page handwritten note full modeling trial syntax experiment general fairly detailed design language runtime expressed primarily term algorithm pile interesting data structure parse operation going parse generate thing nt necessarily sequence since one type relation perstructure node fsm related allowing complex constraint parameter type eg quantification chair must leg prior experience methodological preference writing program another example appeared main problem settling design runtime need mean visualizing dynamic state wide range data structure would monumental task build visualization utility could create general system captured requirement problem might become managable lucidity supposed general system image mind bear strong resemblence story previous section though using get easyrich feedback indevelopment algorithm rather learn new system scratch ia project important realization ambitious intellectual working outside academic institution set apparently beautiful idea much larger set beautiful idea real value easy judge idea valuable mark feel something important critical step practical verification completed realized couple year later reading art prolog idea liked best language probably poor approximation prolog plenty unique still bet odds significance originally imagined optimistic
82,Lobsters,visualization,Data Visualization,"Graph Databases for Beginners: Wait, What Do You Mean by ""Graph""?",https://neo4j.com/blog/graph-databases-for-beginners-wait-what-do-you-mean-by-graph/,graph database beginner wait mean graph,college mathematics class traveling salesman problem example traveling salesman problem navigating shortest path various city france first thing first graph v chart graph source graph bar graph pie graph source area also graph radar still definitely graph wow finally real graph actually graph wait node lonely node relationship node relationship graph create context basic graph theory graph theory leonhard euler already written seven bridge könisberg common challenge find path crossed bridge euler used graph theory prove impossible find path source putting graph database relational database model relational database bunch swedish math nerd database data model graph data model using node relationship connected data blog post maybe even series conclusion ready dive deeper world graph database learn apply graph technology realworld problem reilly book click get free copy definitive book graph database technology,college mathematics class given traveling salesman problem first time classic problem asks given list destination distance one shortest possible path salesman could take visit city return home see example image example traveling salesman problem navigating shortest path various city france never math person seeing mere quadratic equation instills wish dig hole get never come back problem different told find shortest route traveling salesman go every city end spot beat math nerd class first time seen actual graph realized math could interesting graph database beginner blog series take basic graph technology assuming little background space week start defining graph actually discussing way literally anyone use mental model first thing first graph v chart word graph mean think study mathematics computer science university fault defining graph wrong mainstream culture us word entirely different way let deconstruct definition bit someone say word graph first thing may come mind algebra class back plot variable along line using x coordinate something like graph source actually graph computer science technology sense working within lot people word graph might conjure something look like graph image graph either although commonly called line graph kind graph talking today line graph actually another kind chart like one bar chart graph one pie chart graph source one area chart also graph even one radar chart still definitely graph none image graph kind data chart chart graphical representation data often statistical nature includes line graph bar chart pie chart radar chart heat map graph look like real graph look like wow finally real graph actually graph graph context simply network entity relate graph made two basic unit node relationship wait node node represent entity ie people place thing system stuff noun simplest possible graph single node like one lonely node graph consists single node lionel messi right graph relationship node connected complex richly interconnected structure relationship graph relationship sometimes called edge connects two node relationship connect organize node structure giving context node bridge relationship allow graph resemble list tree map compound entity doublehelix dna strand moneylaundering ring corporate org wait getting ahead example lionel messi graph make lot sense add node relationship node relationship graph create context see node relationship link create highly contextual model simple understand basic graph theory graph theory mathematical study graph ie network node relationship whole branch mathematics related node connection discovered leonhard euler swiss mathematician solved königsberg bridge problem lot already written classic graph problem brief city königsberg pictured citizen posed challenge finding path city crossed seven bridge power math euler proved path exists result discovered first theorem graph theory seven bridge könisberg common challenge find path crossed bridge euler used graph theory prove impossible find path source today application graph theory used area one might think computer scientist use graph model develop algorithm program chemist use graph model chemical structure practitioner social science use graph study social interaction relationship people via social network analysis fact graph theory even used recreational purpose lot puzzle game simply graph problem lot game producer profit creating eulerian hamiltonian graph puzzle course one powerful application graph database management putting graph graph database people use word database first thing usually think set table like image relational database model reason picture table since database world revolved around relational data model watch relational algebra term nothing relationship let admit mathematician good naming thing database equal table forget traditional relational database model thanks bunch swedish math nerd database tap graph data model instead default relational model graph allow backend developer architect model data way flexible efficient connectionsoriented query thus graph database modeling data graph easy draw node represent person object place category piece data connect data point line show one entity relates another boom data model graph data model using node relationship end get diagram simple even child understand early tech giant like google facebook linkedin paypal tapped power graph data model build business empire secret used graph database technology harness power connected data course brief summary graph database defining diving whole new world graph database technology requires blog post maybe even series conclusion last three century graph theory adopted tool study model wide range subject one distinct field mathematics need good solving number equation excel however graph theory picked database model century literally year constantly evolving world place premium innovation connection simplicity graph technology agility flexibility performance future end day mean use term graph mean everything connected ready dive deeper world graph database learn apply graph technology realworld problem reilly graph database book click get free copy definitive book graph database technology catch rest graph database beginner series
83,Lobsters,visualization,Data Visualization,Browsing my genome,https://jameshfisher.com/2019/12/30/browsing-my-genome/,browsing genome,browsing genome human build reference sequence fasta format singlenucleotide polymorphism snp genotyping snp array say global screening array product sold illumina report likely blue green eye guanine official snp database managed ncbi adenine vidrio jim programming bioinformatics found error edit page,browsing genome back feb spat tube put post april looked dna tube recently discovered could download raw report follow along browse genome gave zip file contains text file file look like data file generated mon dec file contains raw genotype data including data used report data undergone general quality review however subset marker individually validated accuracy data suitable research educational informational use medical use text version data field tabseparated line corresponds single snp snp provide identifier rsid internal id location reference human genome genotype call oriented respect plus strand human reference sequence using reference human assembly build also known annotation release note possible data downloaded different time may different due ongoing improvement ability call genotype information change found http information reference human assembly build http rsid chromosome position genotype tt aa mt mt mt g mt g first thing noticed file look like dna expecting see string like ctcatctctcttg famous nucleic acid file link genome reference consortium human build sound awfully scifi site download reference chromosome example chromosome reference sequence page select send choose file format fasta serve file sequencefasta file look like homo sapiens chromosome primary assembly ccttgtagaggccccctggatggcaccaagatcggccctggcaagtaggtgaccctgacttcagagccct tgcctgagggcctggcctggcagctctgctgttagaagcaggaggtgtgcagggggtggggagcagccca gcctctgtgatcttctccatggcaggatctcccagcaggtagagcagagccggagccaggtgcaggccat tggagagaaggtctccttggcccaggccaagattgagaagatcaagggcagcaagaaggccatcaaggta gtccccatacccctgtgtcctgaggctactgggcagtccctccatttccccgtgcctctgaggctgccca gtctctgccctgctgcccacctgtaccttgagctttcttctcgcccaggcttccaactccaccctctcct look like dna file fasta format generally show full sequence nucleic acid file gave full dna sequence instead line snp singlenucleotide polymorphism substitution single nucleotide occurs specific position genome genome file patch applied reference genome obtain full genome give list snp rather raw sequence like fasta file one reason size raw reference chromosome megabyte list snp chromosome megabyte fundamental reason give raw sequence sequence dna instead snp genotyping using snp array piece hardware detects presence absence chosen set snp particular say dna tested version genotyping chip global screening array product sold illumina chip detects around snp indeed number line genome file wc l let take single example file report likely blue green eye correct say eye blue report base report one snp see result file grep gg line following meaning take chromosome rather two copy chromosome since chromosome come pair look position report say chromosome position find guanine string rsid reference snp cluster id see snp official snp database managed ncbi see around chromosome globally adenine position let see javascript highlight position downloaded sequencefasta chromosome const f require f const e require eventstream const target const startprintingat const stopprintingat let position position fscreatereadstream sequencefasta pipe essplit pipe esmapsync line linestartswith return ignore fasta comment const nextposition positionlinelength position startprintingat position stopprintingat consolelog line position target target nextposition consolelog repeat targetposition position nextposition action node highlightpositionjs acaggaacaaagaatttgttcttcatggctctctgtgtctgatccaagaggcgaggccagtttcatttga gcattaaatgtcaagttctgcacgctatcatcatcaggggccgaggcttctctttgtttttaattaattg tttttaactgtgagtttatatacacttgaagcagtatacatttagaaatggtctacttgtcgtttctttg attactacccatgagacagtattagtaattctggcctatgaaattggcaaagaaaactaccagtggtggg sure enough highlight adenine commonly found position released vidrio free app macos window make screensharing awesomely holographic vidrio show webcam video screen like mirror share record screen zoom quicktime app vidrio make presentation effortlessly engaging showing gesture gaze expression product hunt available macos window jim tagged programming bioinformatics content copyright james fisher post associated employer found error edit page
84,Lobsters,visualization,Data Visualization,Lengthy subject matter — email subject lines do seem to be getting longer,https://www.oblomovka.com/wp/2016/02/17/are-email-subject-lines-getting-longer/,lengthy subject matter email subject line seem getting longer,surprising terseness subject code used create graph mbox maildir notmuchmail matplotlib download torrent subject line length make difference email open rate browser screen resolution dataset lieu social medium rssatom,spent little time weekend pursuing theory email subject line grown longer time based surprising terseness subject observed old inbox message two ginormous corpus outgoing incoming email one fade one picking slack onwards total contain message measured subject line length message threw database along date plotted average length every day corpus ta da trend line suggests subject line indeed lengthening average character year since going email correspondent getting longwinded make mistake curious check working try email code used create graph email archive measure speak little python code slurp email mbox maildir format notmuchmail database plot result using matplotlib also try different process conclusion sqlite database subject line length available download torrent potential explanation mulling could artifact growth mailing list traffic whose subject line prefixed mailing list name ie mylist hello everyone could check removing square bracket mail mailing list header could rise marketing email though probably spam might different characteristic artisanallycrafted individual email literature survey time people send mass marketing email really care subject line length least people market email marketer like write run thing write one study analysed million email let drop average length million email sent february character seems suggest marketing mail moment time match average maybe slightly shorter conscientious marketing marketeers incidentally conclude subject line length make difference email open rate might related growing screen size horizontal space type subject line might tend stuff compare browser screen resolution dataset statcounter hard make causal connection rising time may discontinuity average screen size might correlate example whatever weirdness happening subject line could weird data though monitor size factor surprising rise mobile slowed curve though maybe could filter mobile message see shorter finally could people say email subject line day sure check specific factor would good confirm say word length going also odd consistent process though theory entry posted wednesday february pm filed lieu social medium follow response entry rssatom feed comment ping currently closed
85,Lobsters,visualization,Data Visualization,"Building a Fashion Knowledge Graph, Carrefour Basket Dataset Challenge, Community detection on Game",https://neo4j.com/blog/this-week-in-neo4j-building-a-fashion-knowledge-graph-carrefour-basket-dataset-challenge-community-detection-on-game-of-thrones-analysing-network-traffic/,building fashion knowledge graph carrefour basket dataset challenge community detection game,node conference polley wong viuspace wecreategroup polley wong week featured community member planning stream live coding node depends frequent answer modelling question node game throne community detection time using seed property analysing network traffic new neosemantics release decision tree alex woolford short video aaron fenwick script parse file graph jesús barrasa neosemantics deploy grandstack application aura manoj mahalingam thepill quickgraph fashion knowledge graph inferencing ontology carrefour graph part playing shopping receipt github gist,much content produced week fit worry though cover rest next week week video node conference luanne misquitta explains popular graph modeling advice depends tomaz bratanic demonstrates seed property feature community algorithm alex woolford analysis traffic home network jesus barrasa build fashion knowledge graph finally rik started series blog post exploring data carrefour basket data challenge mark needham karin wolok developer relation team featured community member week polley wong cto swade inc viuspace cofounder ceo wecreategroup cofounder polley using cool combination technology company including go node graphql hyperledger polley wong week featured community member hooked since beginning year love stack much developed teaching class recently first group student woman finished session course openupsummit weekend polley also joined speaker program present power graph conference also planning stream live coding graphql graph excited thanks much polley spreading graph love node depends frequent answer modelling question week video node conference luanne misquitta graph data modelling video talk luanne show four different way modelling movie graph ship luanne go model explaining use case model would make sense concludes handy cheat sheet modeling advice game throne community detection time using seed property latest post explains use seed property parameter supported community detection algorithm help game throne graph analysing network traffic new neosemantics release decision tree really enjoyed alex woolford short video showing use zeek kafka analyse traffic home network certainly given idea new weekend project aaron fenwick using scapy visualise pcap network traffic file aaron shared github gist contains script parse file graph jesús barrasa released version neosemantics plugin enables use rdf release includes number additional procedure function including utility method others complete existing importdelete capability rdf passed aspayload instead byreference created new developer guide week showing deploy grandstack application onto aura fullymanaged cloud database developed people built came across manoj mahalingam thepill decision tree evaluation plugin latest release add support step step traversal tree quickgraph fashion knowledge graph inferencing ontology latest post jesus barrasa popular quickgraph series learn build fashion knowledge graph post jesus show build graph containing product catalogue popular uk retailer clothing material ontology connecting two graph jesus teach u run multilingual semantic search product catalogue carrefour graph part playing shopping receipt first post rik explains wrangled data shape provides step step instruction using various apoc procedure import data script used blog post available github gist
86,Lobsters,visualization,Data Visualization,Alternative for Graphviz with better automatic node placement for large graphs? [2014],https://softwarerecs.stackexchange.com/questions/40/alternative-for-graphviz-with-better-automatic-node-placement-for-large-graphs,alternative graphviz better automatic node placement large graph,yfiles tom sawyer software,sorry disappointment graphviz could better many way point prospect nt great nt supporting work much past author like left seek work looking people want take let u know impressed yfiles also try tom sawyer software lot engineering talent lot work advanced layout method interactive tool may need spend free trial seems discontinued question say specific layout tool option tried big large network clear suggest large mean maybe hundred node try neato goverlapfalse avoid node text label overlap possibly gmodelsubset try better clustering option default data analysis eg bioinformatics straight md embedding give accurate rendering distance underlying network large mean thousand node perhaps many thousand use sfdp instead neato goverlapfalse subset distance model nt available sfdp clear handle variable edge length merging edge hierarchical solver see good example node graph wasted space problem case disconnected component see also pack packmode attribute solution problem obvious basically trying optimally pack irregular shape additional constraint sometimes scale whatever people consider large subquadratic algorithm needed connected graph experiment goverlap option suggestion excuse explanation someone calling avalanche effect also called layout instability respect minor change input graph property almost batch graph layout program constraint solver look interactive tool like spring embedder layout tim dwyer lot great work microsoft maybe someday graph layout toolkit agl adopt interactive constraint method observation researcher programmer attempted attack scale interactivity aesthetic time choose styling issue also good one nt timeenergy tackle since graph generated automatically could apply style preprocessing tool script also considered graph static parse tree graph read style sheet attribute object style applied changed graph must written correctly way still preserve original structure much possible insurmountable detail thought carefully bug reported wwwgraphvizorg bug issue tracking global edge routing smooth curve hard problem note lot cool looking layout tool use curved edge draw everything else way think added feature graphviz also think chi infovis paper showing curved edge actually little harder read correctly straight line crossing local optimization might possible sure tool used easy point specific example layout could better harder invent effective solution minimum number crossing would actually make thing worse general note directly affiliated graphviz
87,Lobsters,visualization,Data Visualization,Experiments in Constraint-based Graphic Design,https://www.anishathalye.com/2019/12/12/constraint-based-graphic-design/,experiment constraintbased graphic design,experiment constraintbased graphic design hacker news lobster reddit twitter tikz diagram smt solver paper presentation philosophy case study gradient descent philosophy specifying drawing term relationship constraint circ circle rect rectangle circboundscenter bgboundscenter circradius rectboundscenter circboundscenter rectwidth rectheight rectwidth circradius think term relationship express specification drawing figure supporting abstraction constraint simply merged together constraint assembly language case study adversarial turtle figure paper code python code basalt code robust ml logo ashay robust ml notary architecture figure tikz code paper notary soc illustration paper terrible notary architecture animation presentation beamer notary noninterference figure build presentation previous figure dfscq log figure paper figure discussion solving constraint linear program theorem prover mixed integer linear programming mixed integer linear program cbc google ortools gradient descent tensorflow uniqueness solution next step racket tej chajed sketchpad conclusion tej chajed ashay athalye kevin kwok curtis northcutt,experiment constraintbased graphic design dec min read shared hacker news lobster reddit twitter standard guibased graphic design tool support limited snap guide style positioning basic object grouping system implement primitive functionality aligning distributing object way remembering constraint relationship object way defining reusing abstraction dissatisfied existing tool design particular creating figure diagram working new system called basalt match way think term relationship abstraction basalt implemented domainspecific language dsl quite different guibased design tool like illustrator keynote also pretty different librarieslanguages like tikz diagram core basalt based constraint designer specifies figure term relationship compile constraint solved automatically using smt solver produce final output allows designer specify drawing term relationship like object distributed horizontally ratio space constraint also key aspect basalt support abstraction constraint compose nicely experimenting concept last couple year basalt far complete exploration yielded interesting result already prototype usable enough made figure latest research paper presentation want read core idea behind basalt take look philosophy section want hear experience using basalt design real figure skip ahead case study section want see gradient descent used solve figure go gradient descent section philosophy basalt programming model follows designer write program produce figure described term relationship relationship compiled constraint solved automatically basalt dsl embedded generalpurpose programming language inherits support functional abstraction class constraintbased approach key supporting abstraction compose nicely specifying drawing term relationship basalt programming model allows drawing specified term relationship object standard guibased tool graphic design support limited snap guide style positioning plus basic object grouping system basic functionality aligning distributing object encode figure term primitive object constraint instead action like aligning object imperatively update position underlying representation store cad tool support constraint meant graphic design consider figure following description light grey canvas center blue circle diameter half canvas width circumscribed circle red square picture look like without using constraint code generate figure basalt look like width height bg rectangle width height stylestyle propertyfill rgb circ circle stylestyle propertystroke rgb propertyfillopacity rect rectangle stylestyle propertystroke rgb propertyfillopacity g group bg circ rect c canvas g widthwidth heightheight designer figure everything go manually computing anchor point size instead constraint designer write relationship shape tool solve figure width height bg rectangle width height stylestyle propertyfill rgb circ circle stylestyle propertystroke rgb propertyfillopacity rect rectangle stylestyle propertystroke rgb propertyfillopacity group constructor take two argument first list object second list additional constraint equation relate object one another g group bg circ rect circle centered circboundscenter bgboundscenter circle diameter canvas width circradius rectangle centered circle rectboundscenter circboundscenter rectangle square rectwidth rectheight rectangle circumscribed rectwidth circradius c canvas g widthwidth heightheight every primitive shape know calculate bound based internal attribute example circle bound group bound defined term minmax individual element bound attribute well bound allowed symbolic expression eg code circle given concrete center radius attribute automatically initialized fresh variable bound depend variable assigned concrete value constraint solver run basalt constraintbased approach allows designer think term relationship express specification drawing rather implicit manually solved designer figure could feasibly drawn illustrator though might require taking pencil paper calculate position object manually solving implicit constraint designer mind encoded tool designer currently existing program painful scalable figure design changed slightly example circle inscribed rectangle illustrator requires recomputing position hand basalt change one line code rectangle circumscribed rectwidth circradius circle inscribed rectwidth circradius simple figure making change hand might feasible figure hundred object illustrator would get hand manually position object precisely need go based constraint designer mind basalt constraint solver difficult job determining exact position object scale well example figure hundred object supporting abstraction constraint lead natural way supporting abstraction another key aspect necessary designing sophisticated figure subcomponents specified term part internal constraint component instantiated use toplevel figure higherlevel component constraint simply merged together suppose wanted abstraction circumscribed square four arranged grid fill canvas first define abstraction group consisting circle rectangle internal constraint def circumscribedsquare circ circle stylestyle propertystroke rgb propertyfillopacity rect rectangle stylestyle propertystroke rgb propertyfillopacity return group circ rect rectangle centered circle rectboundscenter circboundscenter rectangle square rectwidth rectheight rectangle circumscribed rectwidth circradius instantiate multiple time add constraint arranged grid size circumscribedsquare circumscribedsquare circumscribedsquare circumscribedsquare g group arranged like size finally express constraint figure fill canvas width height bg rectangle width height stylestyle propertyfill rgb top group bg g figure centered gboundscenter bgboundscenter fill canvas gboundsheight bgboundsheight c canvas top widthwidth heightheight rendered code produce following figure constraint assembly language constraint necessarily endusers write directly constraint make nice assembly language easy express higherlevel geometric concept term basalt constraint example expressing set object topaligned simple def alignedtop element top variable unknown value return set iboundstop top element concept like object horizontally vertically distributed width height inset inside another object also compiled constraint basalt provides higherlevel geometric primitive user define case study adversarial turtle figure figure made paper figure recreated basalt figure show number image along classification image given border color laid grid basalt code figure defines two abstraction composed make figure def borderedimage source str bordercolor borderradius image image source border rectangle stylestyle propertyfill bordercolor return group border image inset image border borderradius borderradius def grid element list list element spacing row group element return group row element size samesize row row rowelements element row distributed horizontally set distributedhorizontally row spacing row row aligned vertically set alignedmiddle row row row row distributed vertically set distributedvertically row spacing aligned horizontally alignedcenter row figure simple enough would possible draw traditional tool like illustrator benefit drawing programmatically beyond avoiding annoyance manually laying figure guibased tool paper figure style varying image size using code allowed u parameterize work designing figure furthermore figure meant go paper fairly restricted format example width figure fixed needed decide figure parameter grid dimension border size image size would make figure readable code generate figure made easy explore parameter space original figure paper actually made without basalt basalt exist time instead wrote python code directly painted pixel output image basalt code much nicer robust ml logo brother ashay designed logo robust ml starting general idea shield neural network ashay drew couple sketch paper next sketched logo illustrator even basic idea logo took ton iteration figure detail including choosing number layer neural network number node layer spacing node given layer certain change easy like tweaking color using illustrator recolor artwork feature change extremely painful example adding node required lot manual labor required moving node line well creating positioning new node many new line cumulatively dozen iteration logo spent couple hour moving shape around illustrator since remade logo basalt exploring parameter space much easier help live preview tool final output look like notary architecture figure figure made tikz draft recent paper code tikz figure us lot hardcoded position command like draw boxed rectangle difficult get figure look particularly pretty using tikz published version paper figure designed figure using basalt also changing styling bit process figure defines make use number new abstraction built top basalt primitive including component box text centered inside peripheral box rounded corner text centered inside wiring bunch line segment optional arrowhead connecting two point optional label text describing abstraction using many time made pleasant figure design experience example wiring defined instantiated time figure course entire figure specified relationally concept like kernel domain text centered within area easy express code make use many geometric primitive expressing concept component inputsoutputs evenly spaced along edge notary soc illustration another figure paper figure figure paper share abstraction consistent look figure make use component wiring abstraction previous figure constraintbased design especially helpful designing certain aspect figure spacing arrow bottom example arrow spaced evenly along entire width box look pretty terrible easy test requiring small change io arrow abstraction distributedhorizontally arrowselements periphiospacing arrowsboundscenterx periphboundscenterx distributedhorizontally arrowselements arrowsboundsleft periphboundsleft arrowsboundsright periphboundsright constraintbased design along basalt live preview tool made easy select parameter looked good final figure implementing figure code also made easy thing like matching font size figure text paper designing figure external tool graphic often scaled afterwards fit paper mess effective font size basalt easy design overall figure size appropriately could included paper without rescaling finally tweak figure parameter could use font size paper notary architecture animation needed make simplified version notary architecture figure presentation furthermore needed animate figure multiple slide highlight explain different aspect started implementing presentation figure keynote designing figure keynote bit pain due overlapping object well detail varying phase build tried everything one slide ran limitation keynote animation system example possible make object appear disappear appear tried duplicating object work around issue quickly got hand even keynote object list tried splitting build multiple slide making global edits became annoying finally switched using basalt figure switched presentation beamer straightforward design figure detail varied depending build phase aspect changed based build phase took advantage build variable resetcolor red build else black build variable set via environment variable build osenviron build different version figure could rendered setting eg rendering figure notary noninterference figure build presentation another figure built series slide us build variable approach previous figure encode aspect changed based build phase delimiters along bottom figure label build labelsappend agent run build labelsappend deterministic start build labelsappend agent b run build label deterministic start delim labeleddelimiters label render different phase build figure rendered different setting variable eg figure designed match visual language set previous figure easy achieve sharing abstraction previous figure instantiated slightly different parameter lower wire count basalt live preview tool helpful choosing figure parameter figure looked good font size matched figure presentation dfscq log figure wanted try recreate complex figure paper figure write original made inkscape one author paper goal basalt version create pixelperfect recreation use basalt approach building abstraction see scale complex figure sidebyside comparison showing basalt capable replicating figure inkscape figure large collection manually positioned object presumably made bunch copypasting basalt figure hand defines us number abstraction implemented class build top basalt primitive layer one stacked horizontal box various content eg logapi block sequence colored rectangle eg block right activetxn label bracket shape blocklist list block consisting open bracket sequence block separated comma close bracket eg content right committedtxns label us block bracket labeleddelimiters label corresponding part something eg disk log abstraction also used notary noninterference figure disklog content disk log eg right disk log label us block explode pair dotted line showing one part figure exploded connecting subpart certain stacked layer eg disklog applier layer arrowfan arrow fanning eg applier layer figure took effort implement basalt live preview tool immensely helpful working figure seeing update figure immediately changing code essential building complex figure slider also somewhat helpful getting layout match original playing around parameter seeing figure redraw maintaining general structure pretty neat discussion solving constraint basalt allows designer specify diagram term relationship constraint boil equation real variable basalt place many restriction equation give great flexibility user make underlying implementation challenging solve equation automatically basalt equation thing like conjunction disjunction minmax term productsquotients variable general case possible transform equation nice form like linear program computationally efficient solve basalt equation fit logic quantifierfree nonlinear real arithmetic qfnra least satisfiability decidable solving necessarily going fast currently basalt support couple different strategy solving equation current default us theorem prover powerful smt solver support qfnra much encoding constraint basalt query straightforward practice work quite well mixed integer linear programming basalt support compiling subset constraint one use linear real arithmetic along handful operation like minmax mixed integer linear program milp solved using milp solver currently cbc google ortools basalt milp backend strictly le general backend seems slower even query support fun implement gradient descent far least useful fun equation solver one based gradient descent straightforward translation basalt constraint differentiable loss function translation sound mean loss function global minimum original constraint satisfiable loss function global minimum every global minimum corresponds straightforward way satisfying assignment original variable course say nothing characteristic loss function whether amenable optimization via gradient descent went ahead implemented anyways using tensorflow handle task computing derivative unlike approach gradient descent computes solution iteratively possible animate solving figure result quite amusing uniqueness solution sometimes user produce figure set constraint multiple solution word figure fully constrained experience almost always indicative bug figure code unlikely user two differentlooking figure mind either figure acceptable basalt determine situation occurs straightforward encode smt query original set constraint solution ask smt solver solution new formula unsatisfiable original solution unique figure fully constrained case new formula satisfiable smt solver return concrete example another valid solution comparing two solution help user figure figure underconstrained next step still much work done basalt right embedded dsl python language bit clunky racket programming language building programming language may better platform tej chajed currently working building sophisticated version basalt racket dsl another thing interested exploring visual editor basalt figure kind hybrid basalt approach existing guibased tool often convenient able drag object around might involve using approach similar used cad tool perhaps something exotic like technique used twoway binding code visual representation long line research area constraintbased design starting ivan sutherland sketchpad far know tool use idea guibased cad program practical graphic design tool conclusion basalt approach designing figure based constraint basalt model allows designer think term relationship object make easy build reuse abstraction basalt still work progress interested hearing update click thanks tej chajed many insightful discussion basalt thanks ashay athalye kevin kwok curtis northcutt feedback post
88,Lobsters,visualization,Data Visualization,Ervy - Bring charts to terminal,https://www.chunqiuyiyu.com/ervy/,ervy bring chart terminal,installation usage demo example document,installation npm install ervy usage const ervy require ervy const bar pie bullet donut gauge scatter ervy const data key value key b value key c value consolelog bar data option demo example need detail check document
89,Lobsters,visualization,Data Visualization,Iran’s nation-wide Internet blackout: Measurement data and technical observations,https://ooni.org/post/2019-iran-internet-blackout/,iran nationwide internet blackout measurement data technical observation,iran nationwide internet blackout measurement data technical observation protest erupted sparked protester believed killed disputed reportedly shutdown gradually restored nationwide internet blackout ioda data internet outage detection analysis ioda center applied internet data analysis caida three complementary measurement inference method whose status country always publicly visible ioda dashboard data source internet outage detection analysis ioda iran nov nov syria iraq connectivity continued persist even time networklevel difference source internet outage detection analysis ioda data chart script sign recovery source internet outage detection analysis ioda iran source internet outage detection analysis ioda script source internet outage detection analysis ioda script ooni measurement coming iran data source google traffic data tor metric tor software oracle internet intelligence netblocks cloudflare google traffic data source google transparency report traffic disruption google number tor user iran dropped abruptly november source tor metric directly connecting user iran sudden drop use tor bridge used circumvent blocking tor network source tor metric bridge user iran internet intelligence oracle internet intelligence map relevant publication source oracle internet intelligence map iran ooni measurement ooni measurement source ooni measurement iran ooni fastpath pipeline ooni probe ooni measurement iran run following network technical observation manual testing iran intranet announced national information network nin published reported shoma rolled august reportedly stated argument connecting internet iran dns tunneling iodine virtual private server vps iranian telegram forum iran throttled internet traffic conclusion protest internet shut nationwide level ioda google traffic data oracle internet intelligence data data ooni measurement dns tunneling virtual private server vps,iran nationwide internet blackout measurement data technical observationsramakrishna padmanabhan caida uc san diego alberto dainotti caida uc san diego nima fatemi kandoo arturo filastò ooni maria xynou ooni simone basso ooni last week iran experienced nationwide internet blackoutmost iranian barred connecting global internet outside world access iran national intranet domestic network host iranian website government watchthis major internet blackout rolled november right protest erupted across multiple city iran protest economic mismanagement government corruption sparked government abrupt announcement increase price fuel much impose strict rationing system according amnesty international protester believed killed last week figure disputed iranian authority amid began november internet reportedly shutdownas november internet access gradually restoredin report share data internet blackout iran also share technical observation connecting internet iran blackoutnationwide internet blackoutiran nationwide internet blackout evident several data source show started november datathe internet outage detection analysis ioda project center applied internet data analysis caida measure internet blackout worldwide near realtimeioda data highlight three interesting aspect iran internet blackout cellular operator iran disconnected first almost provider iran followed suit next hour provider appear used diverse mechanism enforce blackoutin order track confirm internet disruption greater confidence ioda us three complementary measurement inference method routing bgp announcement active probing internet background radiation ibr traffic routing announcement bgp allow u track controlplane internet reachability area whereas active probing ibr shed light different aspect dataplane reachability method result connectivity liveness signal whose status country always publicly visible ioda dashboardioda data clearly show drop signal iran november illustrated figure belowsource internet outage detection analysis ioda iran nov nov unlike countrywide blackout syria iraq signal drop occur simultaneously magnitude drop across three different signal varied example first drop occurred around utc local time iran bgp signal dropped number globally visible reducing however drop active probing ibr signal experienced time almost negligiblethen around utc day active probing ibr time series dropped steadily around utc utc november dataplane connectivity remained low utc morning november active probing time series began slight trend upwardsfrom evening november morning november significantly reduced dataplane internet connectivity although notably connectivity continued persist even time controlplane connectivity ostensibly remained preblackout connectivity throughout timein next section show difference signaldroppatterns among three ioda data source likely due adoption diverse disconnection mechanism large difference timing execution various iranian internet service provider isps networklevel differencesioda data clearly show drop signal various network operator iran november illustrated see legend topright chart refer network operator source internet outage detection analysis ioda data chart generated using scriptwe observe significant difference different autonomous system as affected shutdownfirst timing network lost internet connectivity hour others example three large cellular irancell rightel connectivity around utc local time iran observation perhaps indicate cellular operator iran instructed shut internet first fixedline operator instructed as start losing connectivity later day around utc local time iran timing difference among as example active probing ibr signal shatel drop sharply around utc local time iran signal parsonline drop hour later around utc local time iran difference timing suggest individual operator enforced blackout independently opposed single killswitch resulted simultaneous disconnection operator second observe dissimilarity networklevel blackout different network manifest ioda signal dissimilarity may reflect use different approach operator disconnecting networksthe three cellular isps blackout visible drop bgp reachability roughly time utc drop accompanied simultaneous drop ibr signal cellular as well result suggest cellular operator perhaps executed blackout network blocking controlplane reachabilityother large iranian as ioda signal exhibit difference compared cellular as signal difference limited timing drop occur example itc drop bgp signal november active probing ibr signal drop nearly around utc local time iran dayon hand iran telecom co experience one three different drop bgp signal utc two accompanied drop signal active probing ibr signal parsonline drop nearly utc november surprisingly around utc day increase ibr signal result show disparity effect blackout across networkssigns recoveryat around utc november observe spike active probing measurementssource internet outage detection analysis ioda iran recovery internet outage networkat around utc november see another uptick active probing ioda signal showing significantly network reachable outside worldsource internet outage detection analysis ioda data chart generated using scriptto put perspective chart show ioda signal active probing outage latest recovery stagesource internet outage detection analysis ioda data chart generated using scriptthis also confirmed direct measurement local vantage point showed connectivity restored many network saw increase amount ooni measurement coming iran morning november see section data sourcesiran internet blackout also confirmed several data source google traffic data tor metric statistic use tor software used online privacy anonymity censorship circumvention oracle internet intelligence well netblocks cloudflare reportsgoogle traffic data illustrated show abrupt disruption google search traffic originating iran around utc november google transparency report traffic disruption googleas demonstrated chart internet blackout iran appears ongoing since barely google search traffic originated country since november similarly ioda data google traffic data show uptick november traffic gradually restored november onwardstor metric illustrate number tor user iran dropped abruptly november tor metric directly connecting user iransimilarly observe sudden drop use tor bridge used circumvent blocking tor network iran november wellsource tor metric bridge user iranoracle internet intelligence measure internet outage worldwide tracking drop routed bgp prefix completed traceroutes dns query metric suggest presence internet disruption significantly reduced baseline value normalized count successful traceroutes volume dns query absolute count globally routed bgp prefixesthe following chart taken oracle internet intelligence map suggests presence internet blackout iran also confirmed relevant publication day ago since significant drop completed traceroutes routed bgp prefixessource oracle internet intelligence map iranit worth highlighting however dns request increased recently showing dns traffic able reach internetthroughout course iran internet blackout observe amount traffic originating network iran fact ioda traffic example dropped completely suggests iran experiencing total internet blackout still connection internet also confirmed ooni measurement collected iran last week despite internet blackoutthe following chart show number ooni measurement collected different network iran november november ooni measurement iran ooni fastpath pipeline ooni probe requires internet connectivity order perform test submit test result publication collected ooni measurement iran last week demonstrate internet blackout total since people still able connect internet networksthroughout internet blackout november november ooni probe run following network dcias information technology company itc parsonline par online pjs mccias mobile communication company iran plc datak datak internet engineering inc uta university tehran informatics center irsepantaisp sepanta communication development co ltd ngsas parvaresh dadeha co private joint stock respinaas respina network beyond pjsc asiatech asiatech data transmission company irancellas iran cell service communication company azmaas farhang azma communication company ltd ticas telecommunication infrastructure company maxnetas bozorg nete aria irthrpte pishgaman toseeh ertebatat company private joint stock mobinnetas mobin net communication company private joint stock dadehgostaras dadeh gostar asr novin pjs co rightel rightel communication service company pjs asana asan pardakht persian private stock farasosamanehpasargad faraso samaneh pasargad ltd tci iran telecommunication company pjs parvasystem par parva system co ltd everyone iran disconnected internet blackout told hosting provider bank business journalist able maintain access internet meanwhile people iran limited using iran national intranet internet blackouttechnical observation manual testingto better understand internet blackout technically implemented iran ran series test locallywe performed tcp traceroute port host located europe mtr n p vantage point inside iran connected mcci network observing network traffic data side see rst packet injected end connectionpacket trace host europe tcp rst ack tcp rst ack tcp rst ack packet trace host mcci iran tcp syn tcp tcp retransmission syn tcp tcp retransmission syn tcp tcp retransmission syn tcp rst ack interesting observe take many second receive rst packet mcci network making plausible network buffering packet large amount timefurther research investigation pattern behaviour left future workiran intranetback senior iranian official announced government plan launch national intranet national information network nin would host iranian website service promote islamic valuesresearch iran network infrastructure published revealed presence hidden internet private ip address allocated country national network telecommunication entity found allow private address route domestically whether intentionally unintentionally creating hidden network reachable within iran research also found record dns query suggest server assigned domestic ip address global oneswhile initially reported iran intranet called shoma persian would launched rolled august many iranian internet user however reportedly stated either aware iran intranet take seriously main argument iranian government highlighted get iranian use intranet host website supposedly faster secure part recent discussion iranian internet user claimed iran intranet work properly without internet every day electronic device become vulnerable result receiving updatesbut amid iran nationwide internet blackout iranian possible access website service hosted iran intranetconnecting internet iranthrough manual testing able determine could theoretically possible use dns tunneling get traffic leave iranbelow share dns query mcci mobile network whoamiakamainet showing address resolver dig whoamiakamainet question section whoamiakamainet answer section whoamiakamainet query time msec wed nov est performing lookup random subdomain therefore bypassing potential local dns cache see query succeeds dig question section answer section query time msec wed nov est repeated similar experiment resolvers fixed line adsl network dig question section answer section authority section xipio n xipio n additional section server wed nov est see request secondary dns resolver let throughthis mean possible get upstream recursive resolvers isp perform dns query behalf channel could theoretically used transfer data internet low throughput high overhead tool like iodine could usedwhen querying primary dns resolver result servfail dig got answer header opcode query status servfail id flag qr rd ra query answer authority additional opt pseudosection edns version flag udp question section query time msec server wed nov est msg size rcvd however interesting note query record likely cached work expected dig yahoocom global option cmd got answer header opcode query status noerror id flag qr rd ra query answer authority additional opt pseudosection edns version flag udp question section yahoocom answer section yahoocom yahoocom yahoocom yahoocom yahoocom yahoocom query time msec server wed nov est msg size rcvd possible iranian citizen acquire virtual private server vps inside country local testing able determine vps host connectivity user inside country also internet make possible use server setup local proxy inside country use proxy tunnel traffic another proxy outside iran information method also circulated iranian telegram forumshowever local using vps iran connect global internet reported may experienced throttling measurement data available confirm could area research vps traffic fact throttled would first time iran throttled internet trafficconclusionas protest erupted iran internet shut nationwide level last weekiran nationwide internet blackout confirmed several data source ioda google traffic data oracle internet intelligence data data source show internet blackout iran started november ongoing november drastically november internet connectivity restored iranioda data provides publiclyaccessible networklevel granularity show iranian cellular operator disconnected first november followed almost operator next hour isps appear used diverse mechanism enforce blackout orthogonal study analyzing packet capture mcci network found rst packet injected end connectionduring blackout iranian barred connecting global internet still access iran national intranet domestic network hosting iranian website service yet ooni measurement require internet connectivity collected multiple network iran november november showing internet blackout totalto explore whether connectivity internet could possible iran blackout performed manual testing locally found dns tunneling could possible low bandwidth solution get network traffic leave iran also found possible connect internet using virtual private server vps setup local proxy iran use proxy tunnel traffic another proxy outside iran
90,Lobsters,visualization,Data Visualization,Histogram-Preserving Tiling,https://benedikt-bitterli.me/histogram-tiling/,histogrampreserving tiling,histogrampreserving blending randomized texture tiling,webgl implementation histogrampreserving blending randomized texture tiling method allows take input texture produce infinite nonrepeating texture method fast simple requires minimal preprocessing storage input texture nt even tile method work best input texture stochastic nature nt periodic feature eg brick natural texture eg marble bark etc tend work best try interactive demo select preloaded input texture upload
91,Lobsters,visualization,Data Visualization,OPEM (Open Source PEM Fuel Cell Simulation Tool),https://github.com/ECSIM/opem,opem open source pem fuel cell simulation tool,table content overview usage executable screen record library mode note telegram bot opem bot try opem browser issue bug report opem ecsimir todo output html csv opem dependency thanks reference http physicsoregonstateeduhetheriwenergytopicsdocelectrochemistryfcbasicthepolymerelectrolytefuelcellhtm cite opembib license donate project,table content overview modeling simulation protonexchange membrane fuel cell pemfc may work powerful tool research development renewable energy source opensource pemfc simulation tool opem modeling tool evaluating performance proton exchange membrane fuel cell package combination model staticdynamic predict optimum operating parameter pemfc opem contained generic model accept input value operating variable anode cathode feed gas pressure composition cell temperature current density also cell parameter including active area membrane thickness addition different model pemfc proposed opem focus one particular fc stack others take account part auxiliary reformer opem platform collaborative development pemfc model opem block diagram open hub pypi counter github star branch master develop travis appveyor code quality usage executable open cmd window terminal unix run python opem opem run opemexe enter pem cell parameter run standard test vector amphlett static model input description unit cell operation temperature k partial pressure atm partial pressure atm istart cell operating current start point istep cell operating current step istop cell operating current end point active area l membrane thickness cm lambda adjustable parameter min value max value r optional relectronic ohm jmax maximum current density n number single cell information model visit larminiedicks static model input description unit fuel cell reversible loss voltage v slope tafel line v cell operation temperature k istart cell operating current start point istep cell operating current step istop cell operating current end point internal current exchange current overvoltage begin move zero il limiting current rm membrane contact resistance ohm n number single cell information model visit chamberlinekim static model input description unit open circuit voltage v b tafel parameter oxygen reduction v r resistance istart cell operating current start point istep cell operating current step istop cell operating current end point active area diffusion parameter v n diffusion parameter n number single cell information model visit padulles dynamic model input description unit load voltage v fuel cell temperature k hydrogen valve constant kmols atm oxygen valve constant kmols atm hydrogen time constant oxygen time constant b activation voltage constant v c activation constant parameter rint fuel cell internal resistance ohm rho hydrogenoxygen flow ratio molar flow hydrogen kmols number cell istart cell operating current start point istep cell operating current step istop cell operating current end point information model visit padulles dynamic model ii input description unit load voltage v fuel cell temperature k hydrogen valve constant kmols atm water valve constant kmols atm oxygen valve constant kmols atm hydrogen time constant water time constant oxygen time constant b activation voltage constant v c activation constant parameter rint fuel cell internal resistance ohm rho hydrogenoxygen flow ratio molar flow hydrogen kmols number cell istart cell operating current start point istep cell operating current step istop cell operating current end point information model visit padulleshauer dynamic model input description unit load voltage v fuel cell temperature k hydrogen valve constant kmols atm water valve constant kmols atm oxygen valve constant kmols atm hydrogen time constant water time constant oxygen time constant reformer time constant reformer time constant b activation voltage constant v c activation constant parameter cv conversion factor rint fuel cell internal resistance ohm rho hydrogenoxygen flow ratio qmethanol molar flow methanol kmols number cell istart cell operating current start point istep cell operating current step istop cell operating current end point information model visit padullesamphlett dynamic model input description unit load voltage v fuel cell temperature k hydrogen valve constant kmols atm water valve constant kmols atm oxygen valve constant kmols atm hydrogen time constant water time constant oxygen time constant reformer time constant reformer time constant active area l membrane thickness cm lambda adjustable parameter min value max value r optional relectronic ohm b empirical constant depending cell operation state tafel slope v jmax maximum current density cv conversion factor rho hydrogenoxygen flow ratio qmethanol molar flow methanol kmols number cell istart cell operating current start point istep cell operating current step istop cell operating current end point information model visit find report modelname folder screen record screen record library amphlett static model opemstaticamphlett import staticanalysis testvector istart istop istep l lambda n r jmax name amphletttest datastaticanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list ph thermal power list linearapx intercept float k linearapx slope float etaactive eta activation list etaconc eta concentration list etaohmic eta ohmic list estimated fc voltage list information model visit larminiedicks static model opemstaticlarminiedicks import staticanalysis testvector rm il n istart istop istep name larminieetest datastaticanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit chamberlinekim static model opemstaticchamberlinekim import staticanalysis testvector b r n n istart istop istep name chamberlinetest datastaticanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit padulles dynamic model import dynamicanalysis testvector b c rint rho istart istop istep name padullesitest datadynamicanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list partial pressure list partial pressure list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit padulles dynamic model ii import dynamicanalysis testvector b c rint rho istart istop istep name datadynamicanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list partial pressure list partial pressure list partial pressure list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit padulleshauer dynamic model opemdynamicpadulleshauer import dynamicanalysis testvector b c rint rho qmethanol cv istart istop istep name padulleshauertest datadynamicanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list partial pressure list partial pressure list partial pressure list ph thermal power list linearapx intercept float k linearapx slope float estimated fc voltage list information model visit padullesamphlett dynamic model opemdynamicpadullesamphlett import dynamicanalysis testvector l lambda jmax b rho qmethanol cv istart istop istep name padullesamphletttest datadynamicanalysis inputmethodtestvector testmodetrue printmodefalse reportmodefalse key description type status simulation status bool p power list cell operating current list v fc voltage list eff efficiency list partial pressure list partial pressure list partial pressure list ph thermal power list linearapx intercept float k linearapx slope float etaactive eta activation list etaconc eta concentration list etaohmic eta ohmic list estimated fc voltage list information model visit mode testmode active test mode getreturn data dict default false reportmode generate report csv opem html print result console default true printmode control printing console default true note telegram bot send start command opem bot choose model menu send test vector according template download result try opem browser opem used online interactive jupyter notebook via binder service try check ipynb file document folder edit execute part note step step top panel run button executing complete simulation edit testvector full run section issue bug report fill issue describe check asap send email opem ecsimir gitter another option todo output html csv opem dependency master develop thanks reference j c amphlett r baumert r f mann b peppley p r roberge performance modeling ballard mark iv solid polymer electrolyte fuel cell j electrochem soc electrochemical society inc doi jeferson correa felix farret vladimir popov marcelo g simoes sensitivity analysis modeling parameter used simulation proton exchange membrane fuel cell ieee transaction energy conversion ieee junbom kim seongmin lee supramaniam srinivasan charles e chamberlin modeling proton exchange membrane fuel cell performance empirical equation journal electrochemical society electrochemical society sadli p thounthong jp martin rael b davat behaviour pemfc supplying low voltage static converter journal power source elsevier j padulles gw ault jr mcdonald integrated sofc plant dynamic model power system simulation journal power source elsevier hauer kh analysis tool fuel cell vehicle hardware software control application fuel economy comparison alternative system design phd dissertation transportation technology policy university california davis saadi becherif aboubou ayad comparison proton exchange membrane fuel cell static model renewable energy elsevier doi diego feroldi marta basualdo description pem fuel cell system green energy technology springer gottesfeld shimshon nd polymer electrolyte fuel cell material issue hydrogen fueled power source http physicsoregonstateeduhetheriwenergytopicsdocelectrochemistryfcbasicthepolymerelectrolytefuelcellhtm mohamed becherif aïcha saadi daniel hissel abdennacer aboubou mohamed yacine ayad static dynamic proton exchange membrane fuel cell model journal hydrocarbon mine environmental research larminie j dick mcdonald fuel cell system explained vol pp chichester uk j wiley doi rho w srinivasan kho mass transport phenomenon proton exchange membrane fuel cell using mixture ii theoretical analysis journal electrochemical society doi cite use opem research please cite paper article doi url http year month jul publisher open journal volume number page author sepand haghighi kasra askari sarmin hamidi mohammad mahdi rahimi title opem open source pem cell simulation tool journal journal open source software download opembib bibtex format license donate project like project hope please support u project never going working profit need money continue
92,Lobsters,visualization,Data Visualization,pg_flame - visualize Postgres query plans as flamegraphs,https://github.com/mgartner/pg_flame,pgflame visualize postgres query plan flamegraphs,pgflame demo installation homebrew download precompiled binary release tab docker build source usage example onestep example multistep sql file example docker background flamegraphs query plan query execution,pgflame flamegraph generator postgres explain analyze output demo try demo installation homebrew install via homebrew follow command brew install mgartnertappgflame download precompiled binary download one compiled binary release tab downloaded move pgflame path docker alternatively like use docker build program docker pull mgartnerpgflame build source like build binary source code run following command note compiling requires go version git clone http githubcommgartnerpgflamegit cd pgflame go build pgflame binary created place path usage pgflame program read json query plan standard input writes flamegraph html standard ouput therefore pipe direct input output however desire example onestep psql dbname qatc explain analyze buffer format json select id user pgflame flamegraphhtml open flamegraphhtml example multistep sql file create sql file explain analyze query querysql explain analyze buffer format json select id user run query save json file psql dbname qatf querysql planjson finally generate flamegraph html cat planjson pgflame flamegraphhtml example docker followed docker installation step pipe query plan json container save output html psql dbname qatc explain analyze buffer format json select id user docker run pgflame flamegraphhtml background flamegraphs invented brendan gregg visualize cpu consumption per codepath profiled software useful visualization tool many type performance investigation flamegraphs used visualize oracle database query plan query execution proving useful debugging slow database query pgflame extension work postgres query plan generates visual hierarchy query plan visualization identifies relative time part query plan tool relies plugin generate flamegraph
93,Lobsters,visualization,Data Visualization,Commas in big numbers everywhere: An OpenType adventure,https://blog.janestreet.com/commas-in-big-numbers-everywhere/,comma big number everywhere opentype adventure,jupyter could make font us fancy font shaping feature insert comma number learning font shaping work extremely powerful opentype specification reverse chaining contextual single substitution feature file using knowledge powerline font patcher fontforge api documentation fonttools improvement using work stylebot chrome extension jupyter panda kitty terminal conclusion http thumecanumderline source,job involves lot staring large number mostly latency nanosecond picking magnitude like microsecond noticed constantly counting digit text editor terminal jupyter notebook browser could made specific solution thought could solve general way possible idea came could make font us fancy font shaping feature insert comma number everywhere fun idea decided play time evening reading documentation sunday spent tinkering working using resulting font work week really pleasant improvement post describe basic opentype shaping used make font emphasizes digit grouping extended even fancier variation call numderline see preview main variant sample download font see read flagship underlining variant numderline font notice digit grouped visually learning font shaping work knew font shaping extremely powerful driven table inside font idea table like process shaping worked found opentype specification learned word table used loose sense refer defined binary data structure font shaping process mapping string unicode text using cmap table sequence glyph glyph various substitution applied example turning sequence ட glyph substitution coming multilevel hierarchy gsub table position glyph adjusted using information gpo table example place accent glyph correct location final result font shaping sequence positioned glyph id rendered screen using information glyf table shape glyph usually caching rendered version glyph atlas efficiency gsub seemed like table wanted read various substitution type became worried plan work seemed work forward text whereas needed count digit backwards end number luckily end list found feature needed intended shaping arabic calligraphy reverse chaining contextual single substitution substitution rule work bit like limited form regular expression provide class glyph basically list glyph id reverse chaining substitution match zero backtracking class single class glyph replaced zero lookahead class match substitute using mapping table provides replacement glyph every glyph matching class multiple reverse chaining substitution provided chain first thought might need build binary table hand research discovered font designer often use language defined adobe called feature file compiles opentype table example feature file look like make string vowel alternate capitalization starting right tell opentype use system fancy shaping feature latin character languagesystem dflt dflt languagesystem latn dflt class given name reference glyph name lowercase e u uppercase e u substitution put feature different capability one use contextual alternate enabled default allows contextual substitution feature calt match lowercase followed lowercase replaces corresponding uppercase version vice versa signifies glyph pattern substituted turn aoeui aoeui reversesub lowercase lowercase uppercase reversesub uppercase uppercase lowercase calt using knowledge realized instead inserting comma wanted underline alternating group digit font would work monospace context would require keeping track digit position right number modulo unfortunately way keep track state replacing glyph notice example effectively count modulo matching case state glyph right ensuring alternating uppercaselowercase pattern continues needed make six copy digit glyph corresponding six possible state instance would six different glyph different glyph id could match separately first three glyph looking normal last three underline feature file would six class definition set digit substitution would substitute one class another based class matched right looked powerline font patcher worked read fontforge api documentation modified patcher make multiple copy digit glyph use string templating generate feature file class definition reference different set copy followed substitution use needed way test resulting font want reinstall font constantly worry stale cache ended using test web page loaded font web font implemented counting modulo six using reversesub rule fontforge api segfaulted tried compile feature file turn open issue year reversesub rule infrequently used fixed switched using fonttools add feature file worked needed modify copy digit display digit grouping order add underline found underscore glyph pasted top digit copy corresponding mod right used font sufficiently wide low thin underscore like dejavu sans mono alternating group underlined digit looked reasonably pleasant improvement accomplished basic goal still idea modified feature file code touch number le digit numbered digit decimal place left right instead right left also added debug mode pasted index copy glyph copied digit set visualize font working note copy different copy could implement original goal inserting comma pasting comma next correct digit without comma right number left digit number also made grouping digit decimal point optional inserting comma look weird underlying text comma selection one character friend suggested try squishing group digit together tried well scaling translating different copy different way combined comma make version insert comma even monspace context improvement final feature file looked like languagesystem dflt dflt languagesystem latn dflt digit zero one two three four five six seven eight nine class definition copy digit glyph clipped line feature calt number glyph period left right forward chaining sub period digit sub digit sub digit clipped line sub digit convert number least digit sub digit digit digit digit chain mark rightmost digit sub digit chain reverse rightmost reversesub reversesub clipped line reversesub reversesub calt using work work used stylebot chrome extension inject custom cs jupyter notebook made panda table rightaligned used font could easily parse column large number also switched kitty terminal one support font shaping set font could use jane street command line data retrieval tool unfortunately use text editor since emacs support font shaping sublime text optimization apply font shaping alphanumeric character save space shaping cache really enjoying couple week used make visually parsing table easier jupyter notebook even though python support underscore number need manually add update change number anymore font make obsolete also gotten lot interest using font coworkers turn many people jane street spend time staring various type large number custom stylesheet make jupyter notebook use numderline rightalign panda table conclusion preview various version font http thumecanumderline download prepatched version selected font look source use patcher one hand whole project seems like hack us font shaping something intended hand think font shaping natural place apply stylistic feature make text easier read year font shaping rolled advanced feature made language display better place think failure imagination improve display english text number well think digit grouping always job font shaping indeed programming language style guide suggesting insert comma underscore every three digit hacky workarounds think great example accomplished knowing part system find best place implement something notably need understand opentype shaping worked come idea know existed idea capable knew go research work performance engineering understanding basic entire system work end end diving deep learning overlooked area great way finding potential optimization nearly every day spend time learning new part system profit past learning coming idea based thing vaguely remember reading year ago think really valuable constantly learn interesting thing outside usual domain realize might applicable
94,Lobsters,visualization,Data Visualization,org analyzer: interactive visualizations of time tracking data for org mode,https://github.com/rksm/clj-org-analyzer,org analyzer interactive visualization time tracking data org mode,organalyzer new feature http youtubebllmtzueulu usage standalone latest jar file emacs commandline hacking clojure http nrepl cider http license,organalyzer organalyzer creates interactive visualization orgmode timetracking data orgmode allows add startend timestamps orgmode item via orgclockin capture time spend working particular thing unfortunately reporting feature built orgmode rather limited tool remedy providing visual interactive presentation time tracking data word organalyzer convert something like current project org clockin visualization ui improvement tag filter day viz logbook clock sun sun clock sun sun clock sun sun end something like new feature see short walkthrough new http youtubebllmtzueulu usage organalyzer run platform run java need installed standalone download latest jar file run double click command line see open new browser window close server stop second emacs organalyzer make sure melpa packagearchives require package addtolist packagearchives melpa http melpaorgpackages run packageinstall organalyzer afterwards start tool via mx organalyzerstart commandline download latest jar described start java jar following command line option available per java jar help usage java jar opt orgfileordir interactive visualization timetracking data org clock command start http server serf web page visualizes time data found org file org file specified individually passing directory recursive search org file done nothing specified default current directory recursively searching org file opts host hostname set hostname default localhost p port portnumber set port default dontopen nt automatically open web browser window info see http githubcomrksmcljsorganalyzer hacking play around codebase need clojure installed run app source git clone http githubcomrksmcljorganalyzer make httpserver visit http run serverside test via make test work interactively would recommend editor ide us nrepl personally use emacs cider start nrepl server make nrepl also start httpserver connect clojure session clojurescript session nt use nrepl enabled editor still run figwheel repl via make figwheel whe running nrepl figwheel get additional page ui experiment test http license
95,Lobsters,visualization,Data Visualization,"Buffet lines are terrible, but let’s try to improve them using computer simulations",https://erikbern.com/2019/10/16/buffet-lines-are-terrible.html,buffet line terrible let try improve using computer simulation,buffet line terrible let try improve using computer simulation company simulate buffet line python script shortest path classic method full video full video rogue method full video nt go backwards method full video see video full video perpendicular line method full video see system optimal let dig bit deeper convoy else full video note little law code github tagged statistic queue misc popular,buffet line terrible let try improve using computer simulation company buffet every friday line grow epic proportion food arrives suspected year classic buffet line system deeply flawed inefficient method every time stuck line made convinced hill willing die also place secret weapon wellexecuted computer simulation solves problem opportunity unleash improvement gdp consider time lost line went business hour later bit many hour built simulation framework buffet line note throughout rest blog huge animated gifs respect bandwidth cut gifs also link full video simulate buffet line wrote python script simulate buffet line setup pretty simple although lot assumption made item buffet person want random item person come left exit right take food order left right person walk according shortest path towards next goal rate arrival rate new user enter left classic method classic method referring singleline method everyone waiting one big line pass item method work well low arrival rate instance people per second state second see full video simulation script produce video side effect random emojis food people hope enjoy lot focusing classic method turn unstable soon arrival rate go little bit case people per second see full video see people accumulating far left side waiting turn line people fact keep growing growing turn method critical maximum capacity something people per second mean every queue system upper capacity determines highest possible arrival rate queue keep growing longer longer fundamentally arrival rate higher rate people exiting system easy way estimate capacity system varying arrival rate seeing point system break simulating system different rate let consider method next rogue method marginally better model let everyone go direction want including skipping potentially also going back left method slightly higher capacity break around arrival rate people per second see full video line video shortest path towards next food item person want exit system far right problem people get stuck maybe problem simulation since simulated puppet dumb wo nt consider fact blocking rogue method fact slightly higher capacity classic method maybe drawback like getting elbowed someone panicked starved soul let consider slightly smarter method nt go backwards method one maybe obvious observation previous system possibility going backwards left cause blockage made impossible go backwards people would never go right next food item would mean people getting food never blocked going next item simple rule change turn increase capacity buffet substantially somewhere around arrival per second see full video method tends cause bit accumulation people first food item especially higher arrival rate see video rate go even jam complete gridlock see full video practice system pretty intuitive keep walking towards next food item nt want particular one skip walk around anyone basically avoids frustrating point classic method blocked behind someone loading food nt even want want something later perpendicular line method one method make people line line perpendicular food seems handle roughly arrival per second see full video system might seem orderly although drawback long perpendicular line cause lot extra walking drive total time take people get food meaning people around point time causing delay people video happens arrival rate go see system optimal given four method outlined question one efficient reason alluded trivial measure capacity simulating spare rumination jumping straight conclusion first system really best simulation correct big list look follows nt go backwards method best perpendicular line method rogue method classic method worst let dig bit deeper analyzing method somewhat annoying tricky system arrival rate person spends time system exit average time take person enter get food exit called cycle time also upper limit capacity method arrival rate get closer closer capacity cycle time go infinity arrival rate exceeds capacity people accumulate indefinitely end sight varied arrival rate increment vary arrival rate look number people system time particular method look something like color devised hypothesis test see queue stable growing time red line simulation arrival rate seems exceed capacity queue size grows indefinitely case another way slice data look distribution time take finish person ended using library convoy chart grouped arrival rate slightly larger bucket easier follow chart see critical rate method seems around arrival per second everyone get food eventually system turn gridlock cohort chart second one see le people enter system ever exit poor comparing method single rate show rogue method nt go backwards roughly similar arrival per second however arrival per second rogue method break rubbish nt go backwards method still holding strong comparing simulation show nt go backwards method seems work well arrival rate chart method towards lower right side best place low cycle time despite high arrival rate else unrelated method thing change increase throughput moving food accessible side increase throughput ton nt go backwards method let u handle arrival rate people easily see full video experiment need run consider next frontier buffet line research note million dollar grant next step would actually implement real human study behavior empirical research theoretical writing simulation python probably bad idea retrospect turn incredibly slow run dijkstra shortest path algorithm large grid simulation took day run aws ton time took implement simulation weird behavior would happen based assumption instance initially modeled people circular would get stuck hexagonal pattern changing square resolved issue hypothesis test mentioned see queue stable something cooked draw sample gammapoisson mixture see imbalance arrival exit least extreme observed idea best way really use color line graph care order determine average latency scatter plot use little law compute average queue size arrival rate code github always tagged statistic queue misc popular
96,Lobsters,visualization,Data Visualization,Muddy America : Color Balancing The Election Map,https://stemlounge.com/muddy-america-color-balancing-trumps-election-map-infographic/,muddy america color balancing election map,uploaded youtube look like relative voting population margin victory relative voting population margin victory way human perceive purple colorbalancing election map construct single map show vote margin vote population without distorting shape u lightness vertical scale hue saturation horizontal scale mathematics muddy map hsl h l county fill color county border color upper fence practical us muddy map,graph inform informed discussion civil uninformed one graph also mislead need understand graph saying using gave gave tedx talk making clearer election map original recording lost recovered uploaded youtube summer election season ramp like continue discussion talking oftenmisleading countylevel winnertakesall mapit look likedifferent graph designed different purpose graph countylevel winnertakesall map call county winner map short scientist use quickly see way county went election arguably better map seeing county map misleading used purpose need aware two characteristic express relative voting population county instead make people feel like county populationit designed express margin victory within county show county even one vote winnertakesall graph allrelative voting populationhalf u population life county half life blue half life gray censusbusiness insideramerica described collection densely populated metro buffered le densely populated community population mountain look like map u population density appeared time magazine oct issuewhen take county winner map resize county landarea proportionate population u looksmark newman university michiganone downside cartogram however shape location many territory distorted beyond recognition maybe one reason cartogram nt mainstreamthe county winner map however convey relative population information designed one might think margin victoryin general election concurrent presidential race one state state margin victory turn small new hampshire vote cast president general election hillary clinton new hampshire vote seat many people set high school football bleachershow new hampshire wonthere turnout new hampshire people could voted eligible voter new hampshire exercised right vote voted trump new hampshire would gone trump instead hair thin margin new hampshire neither blue red leaning red blue depending traffic dinner plan would misleading new hampshire colored either blue red represent statewide popularity presidential candidate characteristic also hold true county level losing candidate county receive significant number vote many county winner le marginkenneth tay stanford university modified add color scale highlight rangea margin clinton countylevel percentwin margin left trump countylevel percentwin margin right yellow area highlight county vote margin within note percent vote margin absolute vote marginsin general smaller county larger percent margin larger county smaller percent margin county vote cast runner got lot vote county winner map look like account vote margin blending red blue vote together within county purple represents purple mapthe neutralizing map designed express vote margin clearly us grey intermediary adjusting way human perceive purple neutralizing neutralizing maprarely vote county cast one candidate county winner map however convey win margin informationcolorbalancing election mapthe contiguous united state nt contiguous county winner map inability express vote population margin victory misleading cartograms account population distort shape u add confusion neutralizing map account vote margin nt account populationcan construct single map show vote margin vote population without distorting shape u one way animated gif go county winner map old muddyhere lessdistracting static version graph map leverage color theory express vote margin vote population scale key blown horizontal scale represents vote margin vertical scale represents vote totalslightness vertical scale lighter county fewer vote darker county vote hue saturation horizontal scale closer county get gray closer vote highly saturated red county trump high percent vote margin highly saturated blue county hillary high percent vote marginsthe mathematics muddy maphslall color described combination hue saturation lightness hsl color modelwe leverage individual component hsl color model faithfully express data vote total v margin color scalecounty fill colorsthe fillcolor county constructed using muddycolor algorithm expressed following mathematical formula formula county fill colorthis produce following two dimensional scale also double map key upper fence labeled data set color scale produced muddycolor used county fill colorscounty border colorsfor border county use formula give constant lightness l formula county border colorthis result scale use county border colorscale scale used neutralizing map designed moreaccurately express vote margin left higher dem margin right higher gop margincolor scale produced muddybordercolor used county border colorsgiving county opaque border color allows even lightestfilled county recognized including vote marginswith opaque county border see county even lowest vote totalsyou nt need look whole nation see one county vote total lie overall lightness scale county border color county fill color differ lightness greater contrast county border color fill color lower vote totalupper fencea county enough vote skew vote total scale graph look vote total scale max maximum number vote county county enough vote skew whole vote scaleone may suggest using logarithmic scale bring skyhigh outlier earth however would visually misleading logarithmic scale flattens min max vote total proportion closer visually equating population mountain population plainsin logscale graph northwest texas distinguish county vote one vote maintain linear vote total scale use statistical upper fence account outlier statistical upper fence calculated using formula iqr since county vote margin concerned dem gop county vote total demgop vote total calculate statistical upper fence demgop vote need keep mind county vote total demgop fully opaque muddy map practical us muddy mapthe formula give muddy map graph interesting characteristic county percent vote margin well vote total statistical upper fence embedded color graphthe practical characteristic muddy map algorithm two hue red hue aka hue blue hue red indicates gop win blue indicates dem wina county vote margin saturation county vote margin saturation county pure gray since gray appears saturation closer county get gray appears county election vote margin county total vote lightness pure white appears lightness closer vote total get white county appear county election vote county total vote statistical upper fence lightness county election propertyif computer faithfully render color described formula use color picker get accurate vote margin vote total county graph human eye muddy map provides faithful picture u political landscapein world deceptive graph hope muddy map make thing bit clearer
97,Lobsters,visualization,Data Visualization,Generating land-constrained geographical point grids with PostGIS,https://korban.net/posts/postgres/2019-10-17-generating-land-constrained-point-grids/,generating landconstrained geographical point grid postgis,ev guide generating point grid described stack exchange discarding position sea conclusion,market ev one thing wondered far would able go outside city charge number range enough know offhand whether able reach particular destination wanted make range obvious ev guide visualising vehicle range map trivial solution use range radius show circle course going massively inaccurate road distance straight line distance instead needed display contour given distance travelling road contour called isodistance example showing several isodistance contour mapbox blog determined would use combination postgis mapbox generate contour display mapbox map basic approach follows generate point grid around given centre point point grid calculate travel distance using mapbox direction api provides road travel distance given position discard point desired distance calculate convex hull remaining point isodistance contour experiment found mapbox direction api considers position sea reachable know tesla float surely far may ferry route ferry route going northward example thought would much better isodistances limited land meant needed exclude point grid land consideration two task complete help postgresql postgis generate point grid relevant area discard point land generating point grid inside freshly created database psql needed install postgis function create extension postgis create extension postgistopology first approach tried described stack exchange consists taking box eg bounding box polygon using generateseries produce coordinate point approach requires producing coordinate bounding box problem since visualising ev range wanted work kilometre postgis provide easy way specify say radius circle geometry type kilometre led look geography type struck another problem centred new zealand bounding polygon happened cross international dateline postgis unable produce meaningful result finally found stproject function allowed move point providing distance azimuth started generating line point apart select stproject stsetsrid stpoint geography sa pi pt generateseries couple aside gap point actually practical grid sparse produce useful isodistance contour actual fact used hard visualise point merge single blob colour screenshots post pgadmin able visualise result set geometry geography type incredibly useful expanded grid another application generateseries row select stproject stsetsrid stpoint geography sa pi pt generateseries select stproject pt sa projectedpt row generateseries fact grid look square display artifact point across dateline shown appear end map instead obvious constraint point certain straight line distance origin added discard point outside radius row select stproject stsetsrid stpoint geography sa pi pt generateseries select stproject pt sa projectedpt row generateseries stdistance stsetsrid stpoint geography stproject pt sa point grid second task discarding position sea next step remove point land consideration new zealand land contour available land information new zealand form kml file containing polygon comprised several hundred thousand point import data postgresql knew could use tool part gdal package brew install gdal macos f postgresql pg hostlocalhost useralex dbnameisodist password produced table geometry imported binary string isodist dt list relation schema name type owner public nz coastline island polygon topo table alex isodist public nz coastline island polygon topo column type collation nullable ogcfid integer null wkbgeometry bytea name character varying description character varying renaming table coastline could run following query see geometry contain given point say geoms select stsetsrid encode wkbgeometry hex g coastline select stgeometrytype g stnpoints g stcontains g stsetsrid stpoint geoms order desc geometry encoded textual representation geoms cte passed postgis function stcontains postgis function return true first geometry contains second finally could combine point grid query clause discard position sea geoms select stsetsrid encode wkbgeometry hex g coastline row select stproject stsetsrid stpoint geography sa pi pt generateseries select stproject pt sa projectedpt row generateseries stdistance stsetsrid stpoint geography stproject pt sa exists select geoms stnpoints g stcontains g stproject pt sa geometry applied stcontains check land contour made point stnpoints g necessary check exhaustively little island like produced following result point could write result set json array coordinate help postgresql json function use mapbox direction api geoms select stsetsrid encode wkbgeometry hex g coastline row select stproject stsetsrid stpoint geography sa pi pt generateseries grid select stproject pt sa geometry projectedpt row generateseries stdistance stsetsrid stpoint geography stproject pt sa exists select geoms stnpoints g stcontains g stproject pt sa geometry coords select stx projectedpt lon sty projectedpt lat grid select jsonagg rowtojson coords coords conclusion couple point make conclusion postgresql postgis provide powerful set tool allowed achieve goal producing landconstrained point grid single surprisingly short query land contour available public dataset make possible useful thing geographical data side project like mine citizen science like
98,Lobsters,visualization,Data Visualization,SandDance data visualization library,https://sanddance.js.org/,sanddance data visualization library,sanddance microsoft research vida group use sanddance component architecture sanddance sanddancereact sanddancevue sanddanceexplorer changelog known issue roadmap dependency vega deckgl development http githubcommicrosoftsanddanceblobmasterdevmd contributing http clamicrosoftcom microsoft open source code conduct code conduct faq opencode microsoftcom publication http http,sanddance visually explore understand present data using easytounderstand view sanddance help find insight data turn help tell story supported data build case based evidence test hypothesis dig deeper surface explanation support decision purchase relate data wider real world context sanddance us unit visualization apply onetoone mapping row database mark screen smooth animated transition view help maintain context interact data new version sanddance rebuilt scratch goal modular extensible embeddable custom application github open driven community contribution feature request discussion sanddance created microsoft research vida group explores novel technology visualization immersive data analytics use sanddance component architecture sanddance offering several javascript component sanddance core sanddance visualization canvas sanddancereact core sanddance visualization canvas use react based application sanddancevue core sanddance visualization canvas use vue based application sanddanceexplorer core sanddance visualization canvas ui enable data exploration use react based application changelog june major version bump using deckgl december major version bump using vega august initial release appsource power bi marketplace april initial release github known issue animation require enabled browser roadmap powerbi custom visual based new architecture done additional view stack done code example tutorial faceting chart type done better date handling dependency sanddance created open source library using vega chart layout deckgl webgl rendering development see http githubcommicrosoftsanddanceblobmasterdevmd contributing project welcome contribution suggestion contribution require agree contributor license agreement cla declaring right actually grant u right use contribution detail visit http clamicrosoftcom submit pull request clabot automatically determine whether need provide cla decorate pr appropriately eg label comment simply follow instruction provided bot need across repos using cla project adopted microsoft open source code conduct information see code conduct faq contact opencode microsoftcom additional question comment publication atom grammar unit visualization deokgun park steven drucker roland fernandez niklas elmqvist ieee transaction visualization computer graphic december vol pp view publication http unifying framework animated interactive unit visualization steven drucker roland fernandez august view publication http
99,Lobsters,visualization,Data Visualization,Optimality in card shuffling,http://blog.maxshinnpotential.com/2017/11/05/optimality-in-card-shuffling.html,optimality card shuffling,riffle shuffle overhand shuffle hindu shuffle pile shuffle claimed riffle shuffle gilbertshannonreeds model claude shannon shuffle half theoretical recommendation overhandhindu shuffle shuffle theoretical result pile shuffle people notoriously bad randomizing miscellaneous result summary codedata,many powerful mind devoted countless decade academic study card game however relatively little attention given best way shuffle deck card several different method people developed shuffle card riffle shuffle classic shuffling method cut deck approximately half take one half hand let card deck fall top one another overhand shuffle another popular method hold card one hand take card hand let fall top hindu shuffle method popular india different style performing overhand shuffle pile shuffle create several subdecks card placing card onebyone potentially random subdeck combine subdecks together claimed seven eight riffle shuffle necessary obtain complete randomization however study assume difference probability shuffled deck fully random permutation exploited player important model casino large amount money stake game friend perfect randomness needed seven eight shuffle hand cause substantial delay game thus describe many shuffle need practice instead theory evaluation look pattern irregularity hand would dealt account three type rank looking joint distribution frequency compared null distribution instance six card hand containing four one suit two another highly unlikely simulate number different shuffling method find probability obtaining arrangement generated shuffle truly random deck shuffle start either fully ordered deck ie new deck card else card order representative specific card game compare deck started fully randomized shuffle control therefore guaranteed fully randomized shuffle shuffle compared randomized deck ie red line plot card game deck pattern used figure follow riffle shuffle riffle shuffle arguably popular shuffling method standard accepted mathematical model riffle shuffle called gilbertshannonreeds model gsr model yes claude shannon model assumes shuffler expert dynamically adjust rate card laid hand shuffle state probability putting card either hand proportional relative size deck hand example left hand card right hand would probability next card coming left hand hesitant accept definition developed another model includes skill parameter lambda high lambda mean low probability two consecutive card dealt hand whereas low lambda mean large bunch card hand deck motivated fact given speed card shuffled people reaction time necessary adjust rate let card fall either hand also fact casino dealer come close alternating card hand order test model collected data shuffle determine likely model found model slightly likely given data account fact model parameter whereas gsr model none gsr model slightly better fit data close decided test case also vary skill level lambda tested four case novice shuffler average shuffler best fit shuffling data expert shuffler ideal gsr case parameter effectiveness riffle shuffle function number consecutive shuffle see people comfortable riffle shuffle need approximately shuffle order randomize deck approximately half theoretical recommendation average card player advantage professional casino dealer regard course riffle shuffling well take far shuffle achieve degree randomness overhandhindu shuffle overhand shuffle equivalent dividing deck number subdecks recombining deck reverse order watching several youtube video people performing overhand shuffle wide variety number time people divide deck performing shuffle people around time people consistently fewer consider case cut cut cut value cover typical range cut effectiveness overhand shuffle function number consecutive shuffle take many overhand shuffle randomize deck assuming average number cut take approximately shuffle time le theoretical result cut deck time overhand shuffle number jump almost nevertheless go theoretical finding suggests overhand shuffle valid useful method even bit time consuming pile shuffle pile shuffle many variant strict form shuffler deal card number pile stack card top clearly strict form deterministic highly patterned thus rather ineffective sometimes people add slight bit randomization picking pile different order laid frequently people perform deal randomizing order lay card deck sometimes keeping deck approximately size sometimes disregard deck size however note people notoriously bad randomizing considered maximum limit randomization rather method true amount randomization effectiveness pile shuffle function number pile see pile shuffling efficient performed reason appears method randomize rank deck started ordered deck nearly certain pick next card version pile shuffling ineffective reason version work version keep deck approximately similar size throughout duration shuffle using least eight deck however also assumes shuffler able generate nearrandom number impossible without either random number generator knowledge strategy generating random number without one miscellaneous result simulated two style deal shuffled deck one top card taken deck one player card dealt clockwise manner result nearly identical case result former included also simulated mixed case combine riffle shuffle overhand shuffle hypothesis adding overhand shuffle could reduce number riffle shuffle needed randomize deck unfortunately turned case adding one two overhand shuffle different place riffle shuffle sequence able reduce number riffle shuffle needed randomize deck assume riffle shuffle take approximately second perform overhand shuffle take second perform take second randomize deck using overhand shuffle second randomize using riffle shuffle assume four card dealt per second deck straightened stacked rate one per subpile suitable pile shuffle would take second however also assuming suitable randomization thus card may randomized method consideration choosing shuffling method well instance overhand shuffle considered le damaging card riffle shuffle may bend card summary analysis learned following riffle shuffle highly efficient requiring shuffle order make deck random practical purpose using deck cut overhand shuffle shuffle necessary randomize deck take longer perform equally effective riffle shuffle iteration riffle shuffle may required shuffler lack experience pile shuffle generally avoided unless using eight pile distributing card randomly ensuring pile approximately size ideally finding way circumvent limitation human generating random number combining overhand shuffle riffle shuffle increase randomization compared using riffle shuffle codedata
100,Lobsters,visualization,Data Visualization,State of the Map 2019 (OpenStreetMap),https://media.ccc.de/c/sotm2019,state map openstreetmap,,podcast feed
101,Lobsters,visualization,Data Visualization,Simulating the Evolution of Aggression,https://www.youtube.com/watch?v=YNMkADpvO4w,simulating evolution aggression,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature simulating evolution aggression youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature simulating evolution aggression youtube
102,Lobsters,visualization,Data Visualization,Turn Python Scripts into Beautiful ML Tools,https://towardsdatascience.com/coding-ml-tools-like-you-code-ml-models-ddba3357eace,turn python script beautiful ml tool,turn python script beautiful ml tool introducing streamlit app framework built ml engineer called tool team could make building tool easy writing python script streamlit completely free open source embrace python scripting treat widget variable reuse data computation downloads data udacity selfdriving car project follow instruction view streamlit app browser local url http network url http streamlit hello,turn python script beautiful ml toolsintroducing streamlit app framework built ml engineerscoding semantic search engine realtime neuralnet inference line pythonin experience every nontrivial machine learning project eventually stitched together bugridden unmaintainable internal tool tool often patchwork jupyter notebook flask apps difficult deploy require reasoning clientserver architecture integrate well machine learning construct like tensorflow gpu sessionsi saw first carnegie mellon berkeley google x finally building autonomous robot zoox tool often born little jupyter notebook sensor calibration tool simulation comparison app lidar alignment app scenario replay tool onas tool grew importance project manager stepped process sprouted requirement flowered solo project gestated script matured gangly maintenance nightmaresthe machine learning engineer adhoc app building flowwhen tool became crucial called tool team wrote fluent vue react blinged laptop sticker declarative framework design process tool team cleanslate app building flowwhich awesome tool needed new feature like weekly tool team supporting ten project would say update tool two month back building tool deploying flask apps writing html cs javascript trying version control everything notebook stylesheets old google x friend thiago teixeira began thinking following question could make building tool easy writing python script wanted machine learning engineer able create beautiful apps without needing tool team internal tool arise natural byproduct ml workflow writing tool feel like training neural net performing adhoc analysis jupyter time wanted preserve flexibility powerful app framework wanted create beautiful performant tool engineer could show basically wanted streamlit app building flowwith amazing beta community including engineer uber twitter stitch fix dropbox worked year create streamlit completely free open source app framework ml engineer prototype core principle streamlit became simpler purer embrace python scripting streamlit apps really script run top bottom hidden state factor code function call know write python script write streamlit apps example write screen import streamlit ststwrite hello world nice meet treat widget variable callback streamlit every interaction simply rerun script top bottom approach lead really clean code import streamlit stx stslider x stwrite x squared x x interactive streamlit app three line code reuse data computation download lot data perform complex computation key safely reuse information across run streamlit introduces cache primitive behaves like persistent immutablebydefault data store let streamlit apps safely effortlessly reuse information example code downloads data udacity selfdriving car project yielding simple fast app using stcache persist data across streamlit run run code please follow instructionsthe output running stcache example abovein short streamlit work like entire script run scratch user interactionstreamlit assigns variable uptodate value given widget statescaching allows streamlit skip redundant data fetch computationor picture user event trigger streamlit rerun script scratch cache persists across runsif sound intriguing try right run pip install upgrade streamlit streamlit hello view streamlit app browser local url http network url http automatically pop open web browser pointing local streamlit app click linkto see example like fractal animation run streamlit hello command line
103,Lobsters,visualization,Data Visualization,Buffon's needle or how ants estimate size,https://epiphany.pub/post?refId=9977c7ea88099bc6d6e607e4477f3920eb4440ca781953b5bdc2c6f92e19f739,buffon needle ant estimate size,,
104,Lobsters,visualization,Data Visualization,Commit graph drawing algorithms,https://pvigier.github.io/2019/05/06/commit-graph-drawing-algorithms.html,commit graph drawing algorithm,commit graph drawing algorithm pierre gitamine type commit graph drawing algorithm commit graph sorting commits sorting date repository topological sorting topological sort temporal topological sorting placing commits curved branch straight branch type edge algorithm forbidden index show proof interval tree large repository optimization twitter graph git,commit graph drawing algorithm may pierre article one chapter master thesis entitled design implementation graphical user interface git describes algorithm designed draw commit graph prototype git client called gitamine adapted content fit better blog drawing graph complex topic general want draw specific type graph commit graph commit graph several several piece information simplify problem important one graph directed acyclic commits timestamps moreover among many way draw directed acyclic graph appropriate commit graph indeed programmer manipulate branch graph thus convenient representation allows visualize easily first study different type graph drawing algorithm used client describe place node commit graph nicely drawable finally cover optimization done gitamine draw browse graph real time type commit graph drawing algorithm start study commit graph drawing look done git client figure show portion commit graph displayed different git client part chosen lot merges clearly observe difference graph drawing algorithm used client git cola git extension gitk gitkraken smartgit sourcetree first thing observe standard way draw commit graph different way drawing commit graph classified according design choice one several commits row straight branch ie commits branch column curved branch see git extension smartgit seem use similar algorithm curved branch contrary gitkraken draw branch totally straight line sourcetree try keep branch straight possible sometimes curve git cola algorithm particularity placing several commits row others draw commit graph next commit history thus draw one commit per row gitk draw graph similar one printed command git log graph much compact graph commits reordered order follow date table sum characteristic graph drawing algorithm used client client one commit row straight branch git cola git extension yes gitk yes gitkraken yes yes smartgit yes sourcetree yes gitamine use algorithm draw one commit row able show commit graph commit history sidebyside git client whether draw straight curved branch matter taste personally found straight branch much readable unfortunately git client draw straight almost straight branch gitkraken sourcetree opensource thus design algorithm sorting commits two next section describe choose position node commit graph drawable readable simplify problem place node grid lose much pleasant human eye node aligned word would like find function commits map commit position grid sake simplicity let u take following notation commits ordered list parent unordered set child coordinate associated function coordinate associated function said previous section would like draw one commit row would also like edge directed following direction without loss generality choose edge go upward row row need parent commit commit namely f respect following condition order commits fulfills condition said topological sorting date snippet show content commit observe contains two different timestamps respectively first one author date ie date commit created second committer date corresponds date commit last modified tree parent author pierre vigier pierrevigier ymailcom committer pierre vigier pierrevigier ymailcom rewrite event arc voronoidiagram first idea sort commits author date work simple repository certain operation like rebase cherrypick allow put commits older author date child commits recent author date hence sort commit newest oldest author date set index sorted list would break topological condition second idea sort commits committer date appealing latest modification developer shown first moreover order topological case operation done commit committer date updated thus branch old commits according author date rebased committer date updated thus recent committer date parent however nothing guarantee operation git satisfy property instance commits repository created two different computer nonsynchronized clock problem may happen addition possible manually set author date committer date commit thus possible attribute older committer date commit one parent case order given committer date satisfy topological condition matter fact exist repository order according committer date topological order suspect gitkraken sort commits using committer date fails draw correctly graph one repository see figure picture left show repository displayed version gitk modified show committer date right column instead author date see commit message remove useless cpp committer date older parent gitk gitkraken topological sorting standard way obtain ordering node directed acyclic graph respect condition given topological sort pseudocode inspired section introduction algorithm procedure topologicalsort c function dfs c cexplored cexplored true cchildren dfs ci c c dfs c idea use depthfirst search first explore assign coordinate descendant commit setting one commit use topological sort order commits guaranteed graph drawn edge going upward however algorithm take date account consequently last update necessarily top graph could potentially anywhere topology allows may natural programmer moreover may many valid topological order commit graph algorithm output one assumption order commits traversed guarantee algorithm always output topological order temporal topological sorting solve issue raised previous section slightly modified algorithm commits traversed according committer date newest oldest procedure temporaltopologicalsort c function dfs c cexplored cexplored true cchildren dfs ci c c sorted newest committer date oldest dfs c called algorithm temporal topological sort take account topology graph timestamps commits would like highlight good property algorithm output topological order commits output guaranteed always regardless order commits anomaly committer date order induced committer date already valid topological order algorithm return order blazing fast time complexity number commits number edge placing commits previous section seen determine coordinate commit word shown compute order commits edge drawn upward section see strategy determine coordinate commit getting heart matter must introduce definition simplify discussion separate child commit two category branch child merge child branch child child continues branch creates new one merge child child end branch merging another one determine child branch child merge child using position list parent child two following definition formalize branch child defined merge child defined curved branch first algorithm describe simplistic method work well graph drawn curved branch idea maintain list active branch initially list empty iterate commits one one lowest coordinate largest find position procedure curvedbranches c initialize empty list active branch b c c lowest icoordinate largest cbranchchildren empty select cbranchchildren replace c b else insert c b cbranchchildren remove b cj index c b let u make remark algorithm commit replace one branch child one extend branch remove remaining branch child since could replaced first parent replaces another commit git client draw graph curved branch use similar algorithm however two point still ambiguous commit may several branch child strategy select leftmost one ie one lowest coordinate precise insert list active branch simplest solution append give detail version one straight branch straight branch section describe algorithm draw commit graph straight branch ie commits branch column advantage design easier visualize branch core concept git type edge firstly let u make distinction two type edge represented differently depicted figure edge commit one branch child edge commit one merge child algorithm secondly let u describe pseudocode algorithm used determine coordinate commits procedure straightbranches c initialize empty list active branch b c c lowest icoordinate largest compute forbidden jcoordinates j c cbranchchildren st dj j c empty select cbranchchildren st dj j c replace c b else insert c b cbranchchildren b dj nil cj index c b algorithm look quite similar one described previous section used list active branch however key difference compute set forbidden column column correspond coordinate place problem link child edge would overlap commits branch detail define compute later insert index equal nil one available otherwise append instead removing element set index nil previously algorithm curvedbranches could remove branch list active branch insert one middle would shift branch respectively left right branch left removed branch remove branch setting index nil append branch operation cause shift branch reason branch straight forbidden index see determine compute set forbidden index commit take look example would like compute coordinate commit second parent need draw edge parent merge child list active branch equal could insert index index equal nil append let u examine three case index edge would overlap commit index edge would overlap edge append index never used otherwise would equal nil overlap thus right choice append result graph shown figure shown must careful process commit merge child particular must sure obstacle prevents linking commit one merge child branch child problem edge follows column one child obstacle case since child present list active branch prevent commits edge occupying column thus give definition set layman term set index column would placed would impossible link one child simplify expression thanks following lemma lemma show proof let ji c equal j text st column j nonempty row itext ci j c underset cmergechildren cup j di c ji subseteq j j c j min c text min underset cmergechildren min di developed two method compute quickly first one maintain list commits still parent want compute commit compute retrieve equal according previous lemma second method us interval tree described section introduction algorithm data structure allows quickly find interval intersect given interval idea add interval row column associated data interval tree time add commit edge want find occupied column query interval overlap method implemented benchmarked large repository see efficient table present result benchmark method mean m standard deviation m list interval tree mean standard deviation computed measure see first method faster one currently used gitamine finally example commit graph drawn gitamine optimization previous section shown compute position commits graph nicely drawable section discus draw effectively first naive implementation allocates canvas sufficiently large draw whole graph draw however large repository canvas could large use lot memory memory usage number commits width graph ie number column used thus implementation scale well term memory moreover html canvass often implemented using gpu rendering video memory scarcer main memory addition chromium seems manage well big canvas indeed scrolling application suffers important slowdown thus next step allocate canvas large visible area method suffer problem described previously however need redraw time user scroll resizes window visible part graph change speed rendering need render actually visible finding node visible easy done constant time find first last commits visible integer division top bottom coordinate visible area height row however determining edge visible difficult indeed edge linked visible commit visible may edge connect commits side visible area depicted figure find quickly must recognize problem finding intersecting interval indeed represent edge interval row visible area also interval row edge visible interval overlap interval visible area use interval tree find visible edge number edge number edge visible table observe time take render visible part large commit graph without different optimization talked method mean m standard deviation m node edge visible commits edge visible commits edge mean standard deviation computed measure last optimization concern graph rendering commit list displayed next graph displaying whole list commits scale well thousand ten thousand commits thus apply idea previously display commits visible however give impression user commits displayed give ability scroll padding added displayed item interested adventure development vagabond follow twitter tag graph git
105,Lobsters,visualization,Data Visualization,Troy's Breadboard Computer - Emulator,https://cpu.visualrealmsoftware.com/emu/,troy breadboard computer emulator,troy breadboard computer,troy breadboard computer
106,Lobsters,visualization,Data Visualization,Star Polygons,http://datagenetics.com/blog/september42019/index.html,star polygon,star polygon coprime naming convention system thomas bradwardine canterbury tale try filled star,star polygon article star polygon start circle add n equally spaced vertex connect adjacent vertex form regular polygon instead skip vertex make connection repeat operation vertex visited get star called star polygon formally selfintersecting equilateral equiangular polygon also skip every second vertex make different type pointed star however skip past half vertex end duplication symmetrical median number albeit later star made way around adjacent vertex make regular polygon every vertex make first star polygon every third vertex make different star fouth vertex fifth vertex ninth vertex notice last example skipping every ninth vertex produce star look like star produced skipping every second vertex except appears constructed winding around opposite direction coprime number vertex gap skip relatively prime contain common factor example todate edge wind around make star eventually return starting position see image left however common factor two number result multiple set discontiguous star image right look closely image right see star made three square naming convention star shape classified described two number number vertex number vertex skip common nomenclature system example star polygon left described one right sometimes common factor taken might see represented regard common vernacular name given suffix gram greek named number prefix like call polygon pentagon hexagon nonagon star polyon five point called pentagram six pointed star polygon caled hexagram first detailed study polygon performed tbe english mathematician cleric thomas bradwardine even briefly archbishop canterbury mentioned chaucer canterbury tale star polygon feature prominently art religion culture instance pentagram heptagrams historically associated magic occult hexagram star david octagram used hindu symbolise ashtalakshmi try little app allows experiment generating star polygon two slider allow adjust parameter polygon top slider adjusts number vertex bottom number skip filled star following app generates filled star application vertex added shoulder two spike radius tip outer vertex normalized one inner vertex live circle radius given formula
107,Lobsters,visualization,Data Visualization,"From Excel, CSV, JSON and Wikipedia Page to Chart in a Few Clicks",https://www.youtube.com/watch?v=lFsV_gQ6sBw,excel csv json wikipedia page chart click,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature code data science preview youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature code data science preview youtube
108,Lobsters,visualization,Data Visualization,Intro to D3.js,http://wattenberger.com/blog/d3,intro,,need enable javascript run app
109,Lobsters,visualization,Data Visualization,Enigma machine,https://observablehq.com/@tmcw/enigma-machine,enigma machine,,
110,Lobsters,visualization,Data Visualization,Treeverse: Browser extension for navigating Twitter conversations,https://github.com/paulgb/Treeverse,treeverse browser extension navigating twitter conversation,treeverse installation chrome user firefox user introduction one exploring conversation privacy http fontsgooglecom bug contact paulgb report github credit eli schiff semantic ui,treeverse treeverse tool visualizing navigating twitter conversation thread available browser extension chrome firefox installation chrome user firefox user introduction installing treeverse browser open twitter click tweet would like visualize conversation try one using chrome icon treeverse turn grey blue browser click enter treeverse using firefox icon hidden open tweet appear address bar exploring conversation conversation visualized tree box individual tweet line two box indicates lower one reply upper one color line indicates time duration two tweet red faster blue slower hover node replychain preceeding tweet appears rightside pane clicking node freeze ui tweet order interact rightside pane clicking anywhere tree window unfreeze tweet return normal hover behavior tweet appear red circle white ellipsis inside either overlayed separate node mean reply tweet nt loaded doubleclicking node load additional reply tweet privacy treeverse run entirely browser data collected tracked treeverse directly use install browser extension installs may tracked google mozilla data request made twitter may tracked twitter create sharable link data sent server made available user access shared link server may tracked prevent abuse additionally treeverse run load font hosted google font http fontsgooglecom google may track download bug contact tweet paulgb report github credit icon created eli schiff treeverse would possible without excellent styling powered semantic ui
112,Lobsters,visualization,Data Visualization,Samplin' Safari: tool to visualize high-dimensional (quasi) Monte Carlo samplers,https://github.com/wkjarosz/SamplinSafari,samplin safari tool visualize highdimensional quasi monte carlo sampler,samplin safari orthogonal array sampling monte carlo rendering project page pdf license screenshots feature supported sampler additional feature compiling macos linux acknowledgement nanogui galois tinyformat art owen code statlib leonhard grünschloß,samplin safari status samplin safari research tool visualize interactively inspect highdimensional quasi monte carlo sampler initially developed part publication orthogonal array sampling monte carlo rendering wojciech jarosz afnan enayet andrew kensler charlie kilpatrick per christensen computer graphic forum proceeding egsr july project page pdf released bsd license detail see license file screenshots feature supported sampler additional feature interactively switching sampler setting number sample dimension various sampler parameter orthographic view x z dimension view projection useful highdimensional sample custom mapping higher dimension x z save view vector eps file show point index point coordinate show stratification grid displaying subset point either subsetting sample index sample coordinate compiling compiling requires cmake toolchain primary development macos code also successfully compile linux window macos linux macos linux compiling simple git clone recursive http githubcomwkjaroszsamplinsafarigit cd samplinsafari mkdir build cd build cmake make j acknowledgement samplin safari primarily developed wojciech jarosz addition afnan enayet code depends following library included git submodules ext subdirectory nanogui available bsdstyle license galois available bsdstyle license available apache license tinyformat available boost software license several orthogonal array construction adapted art owen code statlib halton sobol sampler use code leonhard grünschloß
113,Lobsters,visualization,Data Visualization,"Turbo, An Improved Rainbow Colormap for Visualization",http://ai.googleblog.com/2019/08/turbo-improved-rainbow-colormap-for.html,turbo improved rainbow colormap visualization,,latest news google ai
114,Lobsters,visualization,Data Visualization,OpenBSD ttyplot examples,https://dataswamp.org/~solene/2019-07-29-ttyplot.html,openbsd ttyplot example,ttyplot systat systat example list ping cpu usage disk io load average minute load average minute load average minute wifi signal strengh cpu temperature pf state search rate pf state insertion rate network bandwidth tip,said rewrite ttyplot example make work openbsd small notice example using systat work second increase parameter wrap infinite loop restart loop systat one run time need start least producing result systat example work openbsd yet released time writing work current july made change systat flush output every cycle possible parse output realtime enjoy example list ping replace testexample host want ping ping testexample awk m print substr fflush ttyplot ping m cpu usage vmstat awk nr print nf fflush ttyplot cpu usage disk io systat b iostat awk nr print print fflush ttyplot disk readwrite kb load average minute uptime sleep done awk print substr length fflush ttyplot load average load average minute uptime sleep done awk print substr length fflush ttyplot load average load average minute uptime sleep done awk print fflush ttyplot load average wifi signal strengh replace interface name ifconfig tr n sleep done awk print fflush ttyplot wifi strength cpu temperature sysctl n sleep done awk print fflush ttyplot cpu temperature pf state search rate systat b pf awk state search print fflush ttyplot pf state search per second pf state insertion rate systat b pf awk state insert print fflush ttyplot pf state search per second network bandwidth replace interface command previous article netstat b w awk nr print print fflush ttyplot inout bandwidth kb u kb c tip easily use example ssh gathering data leave plot locally following example ssh remoteserver netstat b w awk nr print print fflush ttyplot inout bandwidth kb u kb c ssh remoteserver ping testexample awk m print substr fflush ttyplot ping m
115,Lobsters,visualization,Data Visualization,[2012] English Letter Frequency Counts: Mayzner Revisited or ETAOIN SRHLDCU,http://norvig.com/mayzner.html,english letter frequency count mayzner revisited etaoin srhldcu,english letter frequency count mayzner revisited etaoin srhldcu introduction mark mayzner publication hollerith card cardsorting machine google book ngrams word count file word count word count percent bar graph word length len count percent bar graph len count percent bar graph letter count letter frequency twoletter sequence bigram count nletter sequence ngrams ngram count word length position within word ngramsalltsvzip fusion table folder ngram column notation column given name form example mean column count number ngrams occur letter word position aggregate count notation involving notation refers second third position within word length refers start position word length mean start position within word length finally also aggregate count position near end word notation mean thirdtolast secondtolast position word length example would bigram word hen lexicographer greatgrandfather closing thought technology certainly changed would typically see comparison saying punched billion word one card stacked assuming card per inch stack would mile high nearly halfway moon thats silly stack would topple long billion card would stack big building like say vehicle assembly building work peter norvig,english letter frequency count mayzner revisitedoretaoin srhldcu introduction december got nice letter mark mayzner retired researcher studied frequency letter combination english word early publication cited hundred article mayzner describes work culled corpus word variety source eg newspaper magazine book etc source selected starting place chosen random proceeding forward point three four five six sevenletter word recorded total word selected procedure duplicated time time different source thus yielding grand total word sample broke follows threeletter word token type fourletter word token type fiveletter word token type sixletter word token type sevenletter word token type proceeded construct table showed frequency count three four five six sevenletter word importantly broken word length letter position never done knowledge wonder perhaps group google might interested using computing power available significantly expand produce table constructed year ago using google corpus data tiny word sample used answer yes indeed interested lot easier mayzner working mayzner gather collection text source go select individual word punch hollerith card use cardsorting machine today computing power using publicly available data processing power personal computer relying access corporate computing power consulted google book ngrams raw data set give word count number time word mentioned broken year publication book scanned google downloaded english version word count data set given file z http http unzipped file result gb text nt try download phone condensed entry combining count year different capitalization word word word recorded word discarded entry used character letter az also discarded word fewer mention want download word count file note mb generated table count first word letter letter sequence keyed position word length word count distillation google book data give u distinct word mentioned time million time mayzner collection distinct word called type mention called token surprise common word top word count billion mention overall percentage looking like zipf distribution word count percent bar graph b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b b one b one b b b b b b b b b b b would b would b b b word length breakdown mention million word length looking like poisson distribution average letter per word letter long len count percent bar graph distribution distinct word counting word regardless many time mentioned average letter long letter long len count percent bar graph word length mentioned least time book corpus electroencephalographic radiopharmaceutical polytetrafluoroethylene electroencephalogram forschungsgemeinschaft keratoconjunctivitis deinstitutionalization counterrevolutionary counterrevolutionary immunohistochemistry dehydroepiandrosterone internationalisation electroencephalography hypercholesterolemia immunoelectrophoresis phosphatidylinositol institutionalisation compartmentalization acetylcholinesterase electrophysiological internationalization electrocardiographic institutionalization uncharacteristically letter count enough word let get back mayzner request look letter count letter mentioned frequency order let count percent bar graph e b e b b b b n b n b r b r h b h l b l b c b c u b u b f b f p b p g b g w b w b b b b v b v k b k x b x j b j q b q z b z note standard order frequency used typesetter etaoin shrdlu slightly violated l r c moved one rank giving u le mnemonic etaoin srhldcu coloredbar chart inspired wikipedia article letter frequency frequency letter proportional length color bar hover mouse color bar see exact percentage count information table presented different way show letter frequency position within word frequency first letter word second letter also show frequency position relative end word mean last letter mean second last see frequency vary quite bit example e uncommon first letter time le frequent elsewhere similarly n time le common first letter overall letter e make comeback common last letter also common letter place common first letter common second letter twoletter sequence bigram count turn sequence letter consecutive letter anywhere within word list frequent twoletter sequence called bigram bi count percent bar graph th b th b b er b er b b b b en b en nd b nd ti b ti e b e b te b te b ed b ed b b al b al ar b ar st b st b nt b nt ng b ng se b se ha b ha b ou b ou io b io le b le b co b co b de b de hi b hi ri b ri ro b ro ic b ic ne b ne ea b ea ra b ra ce b ce li b li ch b ch b b b si b si om b om ur b ur table bigram cell orange bar proportional frequency hover see exact count percentage seven bigram occur among trillion mention jq qg qk qy qz wq wz look closely see shown deleted aabacadaeafagahaiajakalamanaoapaqarasatauavawaxayaza abbbcbdbebfbgbhbibjbkblbmbnbobpbqbrbsbtbubvbwbxbybzb acbcccdcecfcgchcicjckclcmcncocpcqcrcsctcucvcwcxcyczc adbdcdddedfdgdhdidjdkdldmdndodpdqdrdsdtdudvdwdxdydzd aebecedeeefegeheiejekelemeneoepeqereseteuevewexeyeze afbfcfdfefffgfhfifjfkflfmfnfofpfqfrfsftfufvfwfxfyfzf agbgcgdgegfggghgigjgkglgmgngogpgqgrgsgtgugvgwgxgygzg ahbhchdhehfhghhhihjhkhlhmhnhohphqhrhshthuhvhwhxhyhzh aibicidieifigihiiijikiliminioipiqirisitiuiviwixiyizi ajbjcjdjejfjgjhjijjjkjljmjnjojpjqjrjsjtjujvjwjxjyjzj akbkckdkekfkgkhkikjkkklkmknkokpkqkrksktkukvkwkxkykzk alblcldlelflglhliljlklllmlnlolplqlrlsltlulvlwlxlylzl ambmcmdmemfmgmhmimjmkmlmmmnmompmqmrmsmtmumvmwmxmymzm anbncndnenfngnhninjnknlnmnnnonpnqnrnsntnunvnwnxnynzn aobocodoeofogohoiojokolomonooopoqorosotouovowoxoyozo apbpcpdpepfpgphpipjpkplpmpnpopppqprpsptpupvpwpxpypzp aqbqcqdqeqfqgqhqiqjqkqlqmqnqoqpqqqrqsqtquqvqwqxqyqzq arbrcrdrerfrgrhrirjrkrlrmrnrorprqrrrsrtrurvrwrxryrzr asbscsdsesfsgshsisjskslsmsnsospsqsrssstsusvswsxsyszs atbtctdtetftgthtitjtktltmtntotptqtrtstttutvtwtxtytzt aubucudueufuguhuiujukulumunuoupuqurusutuuuvuwuxuyuzu avbvcvdvevfvgvhvivjvkvlvmvnvovpvqvrvsvtvuvvvwvxvyvzv awbwcwdwewfwgwhwiwjwkwlwmwnwowpwqwrwswtwuwvwwwxwywzw axbxcxdxexfxgxhxixjxkxlxmxnxoxpxqxrxsxtxuxvxwxxxyxzx aybycydyeyfygyhyiyjykylymynyoypyqyrysytyuyvywyxyyyzy azbzczdzezfzgzhzizjzkzlzmznzozpzqzrzsztzuzvzwzxzyzzz nletter sequence ngrams common nletter sequence called ngrams various value n see common value n table count percentage shown nt worry get lot count next section e th tion ation ations present differen different atio tions ration ational national governmen ing tional consider overnment er ion ther ction nation position formation tio ection ication ifferent character n ent ment cation differe governme velopment ati ion lation ifferen vernment developme r ition though general overnmen evelopmen h en ement presen interest condition l nd ter inter tation develop importan important ti hat ould ional america ormation articular c e tha ting ratio resent however formatio particula u ere hich would genus eration relation represent te ate whic tiona dition nationa question individua f ctio ationa conside american ndividual p ed con ence state produc onsider characte relation g re natio throug ference haracter political w ver othe thing hrough positio articula informati al ight etween osition possible nformatio b ar ons sion ssion betwee ization child universit v st nce ever ectio differ fferent elopment following k men ical catio icatio without velopmen experienc x nt ith latio people ernment developm stitution j ng ted inte iffere vernmen evelopme xperience q se er ough count fferen overnme conditio education z ha pro ance ments struct governm ondition roduction thi rough action ulation mportant niversity ou wit tive ative person another rticular therefore io prese eneral importa particul nstitutio le es ding feren system interes epresent ification pres hough relati nterest represen establish co ive nter ution ctions elation increase understan comp roduc ecause rmation individu nderstand de ect able resen becaus mportan ndividua difficult hi rea heir thoug product dividual structure ri com thei press ession formati elation knowledge ro eve ally first develo communi nformati struction ic per ated evelop lations politica something ne int ring cause uction ormatio olitical necessary ea est ture change certain universi hemselves ra sta cont tatio follow increas function themselve ce cti ents could positi relatio informat plication li ica con efore govern special niversit anization ch ist rati contr sition process iversity according ear thin hould merica lication differenc part shoul direct problem experien operation one form tical bility nstitut structur ifference si ning gener effect politic determin rganizati om iti ecti esent americ ination ollowing organizat ur rat great public univers followin ganizatio ngram count word length position within word finally ready break result ngram length position within word letter count also word length able get count say number time bigram appears position word example kind table provided mayzner million time data column table large present separate file ngram length offer google fusion table file browse table online download file download menu item also offer file rolled zip file fusion table folder ntypesmentionsfusion tablefile size kb kb mb mb mb mb mb mb mb fusion table mb ngram column notation column given name form wordlength start end example mean column count number ngrams occur letter word position aggregate count notation involving notation refers second third position within word length refers start position word length mean start position within word length finally also aggregate count position near end word notation mean thirdtolast secondtolast position word length example would bigram word hen lexicographer greatgrandfather closing thought technology certainly changed would typically see comparison saying punched billion word one card stacked assuming card per inch stack would mile high nearly halfway moon silly stack would topple long billion card would stack big building like say vehicle assembly building vab kennedy space center capacity million cubic meter card work million cubic meter easy peasy room spare ibm model card sorter could blast rate card per minute mean would take year per pas need multiple pass get whole job done nt glad providing table online rather card use table interesting analysis leave comment let u know enjoy peter norvig
116,Lobsters,visualization,Data Visualization,Modern and Simple Charts with Frappe Charts - Indrek Lasn,https://medium.com/@indreklasn/modern-and-simple-charts-with-frappe-charts-c1b16244f8c,modern simple chart frappe chart indrek lasn,adding data http frappeiochartsdocsreferenceconfiguration data http frappeiochartsdocsreferenceconfiguration type,adding datadata property http frappeiochartsdocsreferenceconfiguration datanotice dataset property add value value correlated name index add value see beautiful pie chartpie chart showcasing mobile operating system market share worldwideandroid dominating market total share believe free market degree let best product win always able pick product avoid mono duopoly scenarioback chart happens change type property percentage type percentage percent chart showcasing mobile operating system market share worldwidewe get visual representation total phone market pretty easy configure type property let u use line bar axismixed pie percentage heatmap chartfrappe chart type property http frappeiochartsdocsreferenceconfiguration typeso far know pie percentage chart let explore chart
117,Lobsters,visualization,Data Visualization,2D Contouring,https://www.mattkeeter.com/projects/contours/,contouring,functional representation marching square dual contouring haskell functional representation partial application quadtrees quadtrees marching square marching square sampled distance field bilinear interpolation adaptively sampled distance field dual contouring dual contouring dual graph written antimony feature sensitive surface extraction volume data hmatrix library reference paper source,cad system design use functional representation represent solid model freps need converted mesh used program eg manufactured printer many meshing algorithm literature want one watertight without crack hierarchical avoids many tiny triangle featurepreserving corner edge remain sharp writeup explores implementation common algorithm start marching square upgrade dual contouring also using haskell hold hat functional representation start defining type point type shape function type point double double type shape point double shape function take x tuple return value value le equal zero point x inside shape first shape circle circle point double shape circle r x sqrt x r function parameterizes circle center radius return distance point plane circle edge thanks partial application call x r argument get shape object î let c circle î c point inside circle negative î c point contour zero î c point outside circle positive also define set halfplanes eg left mean point x x part shape left double shape left x x right double shape right x x lower double shape lower upper double shape upper next let create operator union intersection negation shape shape shape b p min p b p shape shape shape b p max p b p inv shape shape inv p p negation operator let u make cutout subtracting b given inv b use csg operator halfplanes defined create rectangle intersection four halfplanes type min point type max point rectangle min max shape rectangle xmin ymin xmax ymax right xmin left xmax upper ymin lower ymax simple test shape using rest writeup hi shape hi h h rectangle rectangle circle inv circle rectangle rectangle circle rendering bitmap matter evaluating function many x coordinate coloring depending function sign rendering strategy good enough put pixel screen testing shape evaluated bitmap quadtrees quadtrees basic data structure graphic quadtreees hierarchical region recursively split four quadrant quadrant either leaf cell subdivided interesting represent shape fewer sample bitmap area completely filled empty collapsed single cell use one type hierarchical cell three terminal cell tree root cell contain four subtrees leaf cell minimumsize contain contour empty full cell collapsed cell empty full respectively motivation quadtree decomposition test shape green grey black square represent leaf empty full cell respectively know looking let start creating data type subtrees corner always numbered follows purpose exercise make generic tree type store kind data leaf specialize storing leaf corner position data tree root tree tree tree tree empty full leaf deriving show eq type cell min max type tree tree cell let build complete tree structure buildtree min max int tree buildtree min max leaf min max buildtree xmin ymin xmax ymax root buildtree xmin ymin xmid ymid buildtree xmid ymin xmax ymid buildtree xmin ymid xmid ymax buildtree xmid ymid xmax ymax xmid xmin xmax ymid ymin ymax tree nt specialized particular shape contains uniform set leaf cell filling space example î buildtree may look like building full tree quite case haskell lazy tree actually constructed asneeded basis need feel guilty building let think collapsing cell given shape function mark cell entirely filled empty recursively collapse collapse shape tree tree collapse shape leaf leaf xmin ymin xmax ymax value full else value empty else leaf value shape x x xmin xmax ymin ymax collapse shape root b c collapse map collapse shape b c collapse empty empty empty empty empty collapse full full full full full collapse q r root q r collapse first five quadtree level look like example shape note contourcontaining cell leaf cell vice versa cell whose corner different sign collapsed cell intersect isosurface corner different sign marching square introduced shortly operates single cell time map across leaf cell shape let make tree type instance foldable typeclass instance foldable tree foldmap f leaf f foldmap f root b c mconcat map foldmap f b c foldmap mempty mean easily map function across every leaf tree strictly across every cell stored leaf example consider finding center leaf î let center x x xx yy î foldmap cell center cell buildtree marching square marching square fundamental algorithm extracting isocontours sample idea every cell examine corner match one sixteen case case creates zero two edge run procedure every contourcontaining cell get shape contour get started encode case shown lookup table named lut data side upper lower left right deriving show lookup table take bitmask abcd return list edge draw contour outline shape lut side side lut upper right left upper left right right lower upper lower right lower left upper left lower lower left lower left upper right lower upper lower right right left upper left right upper abcd next write helper function go cell index lookup table list side pair index shape cell int index shape xmin ymin xmax ymax sum shape pt else pt zip pt pt x ymin ymax x xmin xmax edge shape cell side side edge shape c lut index shape c edge function give u pair cell side draw edge however need pick starting ending point edge image find green point well green point point shape function zero assume shape function monotonic along edge use binary search pt shape cell side point pt shape xmin ymin xmax ymax side case side left zero shape xmin ymin xmin ymax right zero shape xmax ymin xmax ymax lower zero shape xmin ymin xmax ymin upper zero shape xmin ymax xmax ymax zero shape point point point zero ax ay b bx zero b otherwise zero po f ax bx f ay f zero f step po f else po f zero f step step else zero f step step finally combine function one convert cell set contour notice function applied tree foldmap type edge point point contour shape cell edge contour shape cell pt pt b b edge shape cell pt pt shape cell applying tree extract shape contour î foldmap contour hi collapse hi buildtree factoring hi monad left exercise reader sampled distance field interesting nuance quadtrees collapse function treat sampled data binary value based whether le zero better using scalar value consider following quadtree one level subdivision internal sample different boolean value inside shape outside internal sampled value reconstructed corner value using bilinear interpolation mean merge cell without losing information idea appears literature adaptively sampled distance field may seem like uncommon occurance turn kind merging possible whenever cell distance field entirely determined single line face working flat surface happens lot let write code kind reduction first create function measure error would introduced kind merging interpolate sample shape four corner cell us value estimate function result arbitrary x position interpolate shape cell point double interpolate shape xmin ymin xmax ymax x let dx x xmin xmax xmin dy ymin ymax ymin ab shape xmin ymin dx shape xmax ymin dx cd shape xmin ymax dx shape xmax ymax dx ab dy cd dy score return difference interpolated estimate function value given point score shape cell point double score shape cell pt ab interpolate shape cell pt shape pt use score function userdefined cutoff decide whether merge set leaf cell note name node cell merge shape tree tree merge shape root b c merge b c b c map merge shape b c merge leaf min leaf q r leaf leaf max let score map score shape min max q r score leaf min max else root b c merge root b c merge apply function calling collapse produce sparser quadtree î collapse hi merge hi buildtree re expected see larger leaf cell containing single flat edge use contouring strategy sparser quadtree producing contour fewer sample along flat edge seems easy catch meshing strategy assumed leaf cell size pair leaf shared edge performed zerocrossing search leaf different size zerocrossing search numerically identical edge quite touch becomes significant issue meshing hierarchical structure leave crack cell different size dual contouring dual contouring address two issue crack cell different size corner bevelled considering dual graph quadtree instead leaf containing zero edge leaf store vertex connect vertex create contour image original quadtree drawn light grey dual grid shown black three important question answer choose edge dual graph belong contour position vertex dual graph within cell construct dual graph answer first question want draw edge two cell share side sign change answer second question subtle want position vertex dual graph feature original shape example cell containing corner vertex corner strategy allows algorithm preserve sharp feature find feature looking normal shape function given partial derivative past written automatic differentiator numerically deriv shape point point deriv shape x let epsilon dx shape x epsilon shape x epsilon dy shape x epsilon shape x epsilon len sqrt dx dy dx len dy len circle partial derivative always pointing outwards center î deriv circle î deriv circle î deriv circle find feature cell find position normal every point along cell side intersects isosurface perform leastsquares fit estimate feature position technique use antimony though skip sanitychecking simplicity detail described feature sensitive surface extraction volume data code us hmatrix library matrix math feature shape cell maybe point feature shape cell length pt let pt map fromtuple pt nm map fromtuple deriv shape pt center sum pt fromintegral length pt fromrows pt b col zipwith pt nm pt center nm pt nm p center tocolumns linearsolvesvd b x x tolist p else nothing pt concatmap b b contour shape cell fromtuple x fromlist x run function across every leaf cell see vertex placed î let tree collapse hi merge hi buildtree î catmaybes foldmap cell feature hi cell tree look promising one remaining step link point together shapeoutlining contour use set three recursive function isolate edge dual graph tricky present three time diagram plain english code first diagram faceproc called one cell cell leaf return nothing cell root recurses calling faceproc subtree edgeproch horizontal pair cell edgeprocv vertical pair cell edgeproch called pair cell leaf creates contour edge two cell otherwise recursively call two horizontal pair cell edgeprocv identical edgeproch applies vertical pair cell code dc shape tree edge dc faceproc faceproc shape tree edge faceproc shape root b c concatmap faceproc shape b c edgeproch shape b edgeproch shape c edgeprocv shape c edgeprocv shape b faceproc edgeproch shape tree tree edge edgeproch shape leaf leaf b fromjust feature shape fromjust feature shape b edgeproch shape leaf leaf root c edgeproch shape leaf edgeproch shape leaf c edgeproch shape root b leaf leaf edgeproch shape b leaf edgeproch shape leaf edgeproch shape root b root c edgeproch shape b edgeproch shape c edgeproch edgeprocv shape tree tree edge edgeprocv shape leaf leaf b fromjust feature shape fromjust feature shape b edgeprocv shape root c leaf leaf edgeprocv shape c leaf edgeprocv shape leaf edgeprocv shape leaf leaf root b edgeprocv shape leaf edgeprocv shape leaf b edgeprocv shape root c root b edgeprocv shape c edgeprocv shape b edgeprocv completes implementation dual contouring î dc hi collapse hi merge hi buildtree re point declare victory contour faithful representation original shape point density along contour scale local complexity curvature plenty dive literature reference thanks richard bowen michael gilik feedback early draft download source including code used generate diagram reference paper source
118,Lobsters,visualization,Data Visualization,How fileformats are holding back DNA research: The Pan-Genome,http://ds9a.nl/articles/posts/on-the-pan-genome/,fileformats holding back dna research pangenome,page powerdnsbert one true sequence online fasta one true genome separate file fasta sample human genome pangenome pangenome claudio donati et al claudio donati et al graph several group happening third generation sequencing technique erik garisson vg team alternative heng li also performs graph dna processing heng li happen erik worry,post want shine light important development within world dna show much dna world computing intertwined turn share important problem like case file format note expect posting dna material part effort write book fascinating subject enjoy reading dna might like linkspresentationsvideos found page feedback welcome bert hubertnetnl powerdnsbert well known human genome fully sequenced read download easily enough turn neither statement true say human genome sequenced actually dna mix people one true sequence online represents single individual addition mean genome capture variability actual people dark secret although everyone different chosen dna file format fasta way encode encodes single string letter one true genome mean variant present people make official human genome collection specific variation supplied separate file though fasta sample human genome specifically mitochondrial dna mt dna chromosome chromosome ref gatcacaggtctatcaccctattaaccactcacgggagctctccatgcatttggtatttt cgtctggggggtatgcacgcgatagcattgcgagacgctggagccggagcaccctatgtc gcagtatctgtctttgattcctgcctcatcctattatttatcgcacctacgttcaatatt acaggcgaacatacttactaaagtgtgttaattaattaatgcttgtaggacataataata acaattgaatgtctgcacagccactttccacacagacatcataacaaaaaatttccacca aaccccccctcccccgcttctggccacagcacttaaacacatctctgccaaaccccaaaa acaaagaaccctaacaccagcctaaccagatttcaaattttatcttttggcggtatgcac ttttaacagtcaccccccaactaacacattattttcccctcccactcccatactactaat ctcatcaatacaacccccgcccatcctacccagcacacacacaccgctgctaaccccata work fasta literally text file dna letter mostly one file per chromosome find gene note offset file refer locus chromosome periodically new release genome made available number change reason large fraction researcher still stuck number point pangenome significant variation human even size dna varying various bacteria attempt made capture dna individual population also different population strain capture single genome also gene present individual organism broader assembly called pangenome example bacterium pneumoniae studied following found claudio donati et al graph mean second pneumoniae strain sequenced additional gene found third one added around organism almost new gene showed meanwhile inverse also happened group core gene present pneumoniae copy went claudio donati et al imagine way capture variation one linear dna file graph instead maintaining fiction one true dna better way would store chromosome graph graph could encode element common individual straight line split place multiple variant exist ttcgttat accgtcctgattcaat ttgcagtgtccaa cctgta perhaps part genome universally present ttcgttat accgtcctgattcaat ttgcagtgtccaa denotes organism individual ttcgttat sequence others despite valiant effort several group world dna file remains stubbornly flat one reason biologistsbioinformaticians attached able address piece dna number previously mentioned locus embedded deeply kind processing pipeline point even adapting newer genome release different numbering considered painful kind graph storage make harder point specific dna location descriptor let alone single number trivial example may possible create address encodes mutation life top branch graph based perhaps blessing one dna path true one turn however real pangenomes alternate piece dna alternate piece also optional element alternate sequence top etc addition bit dna different individual except inversed make sense dedicated notation generic dna graph file format support arbitrary linkage nestings dna variant named branch make addressing locus life nonnumerical affair happening clear pretending one dna longer tenable third generation sequencing technique read long stretch dna one piece piece clearly show structural variation chromosome captured linear file five year people like erik garisson vg team slaving away creating whole graphaware software stack one heavy lifting process kind dna information brave new world nonlinear dna storage work includes exciting new file format encode dna graph efficiently graphaware processing requires far cpu memory reward enormous life far complex world obviously right thing alternative recently one many genius world dna software heng li released software stack also performs graph dna processing stack us new text based format called rgfa short reference graphical fragment assembly one major advantage rgfa allows stable reference location coordinate crucially long reference dna graph stable later addition information lead change shape dna graph coordinate location change addition new format come limitation small scale variation short heng li work likely easier get used software also faster end result generic could lock official sequence keep simple coordinate stable happen outsider amazed linear dna processing still appreciate much work change status quo especially much medicine still previous version human genome also seen however often convenient solution shortcoming win better solution initially le convenient appears erik worry future graphbased pangenomes justified could easily end suboptimal easier use solution far removed current linear dna file
119,Lobsters,visualization,Data Visualization,Blockchain visualization in 3D,https://symphony.iohk.io/,blockchain visualization,,app work best javascript enabled
120,Lobsters,visualization,Data Visualization,GNUplot tips for nice looking charts from a CSV file,https://raymii.org/s/tutorials/GNUplot_tips_for_nice_looking_charts_from_a_CSV_file.html,gnuplot tip nice looking chart csv file,favorite tool gnuplot like article consider sponsoring trying digital ocean vps link get credit day referral link basic parsing csv file using first column x axis date time using first csv column title using second axis second axis starting using multiple environment variable gnuplot styling grid line type colour thickness grid line colour thickness rotating axis label placement legend creating pdf output file csv file bash chart gnuplot graph logging metric monitoring tutorial ubuntu,recently testing resulted lot log data looking bunch text seeing thing graphically particular logdata perfect put graph goto favorite tool graph chart gnuplot extensible also reproducable give configfile command excel get consistent result article give tip using gnuplot include parsing csv file parsing first column datetime using first csv column title using second axis using multiple environment variable gnuplot styling grid line type colour thickness rotating axis label creating pdf output file got article published read howto make barchart histogram gnuplot data article masked nt matter gnuplot result like article consider sponsoring trying digital ocean vps link get credit day referral link using gnuplot ubuntu installed via repository find example csv data bottom article save plotcsv article go different topic step step data another piece software written contains extra information prefixed hash valid csv use inside gnuplot append data title graph picture finished result working towards basic parsing csv file let start basic setup command create file named examplegnuplot folder csv file put following set datafile separator plot plotcsv using line using line first line tell gnuplot use comma instead whitespace seperate data thus parsing csv run gnuplot p make window persist gnuplot p examplegnuplot result okay much want see something like picture know setup correct let continue using first column x axis date time first column csv file contains date time format let tell gnuplot use first column x axis datetime specify correct format update gnuplot file set datafile separator set xdata time tell gnuplot x axis time data set timefmt dt h specify time string format set format x h otherwise show mm s plot plotcsv using line using line command gnuplot p examplegnuplot result look like basic two line axis datetime x axis graph still bit hard read legend plot command grid missing second axis continue using first csv column title csv file column header first line datetime targetvalue measuredvalue secondyaxisvalue let tell gnuplot use also add label x axis set datafile separator set xdata time set timefmt dt h set key autotitle columnhead use first line title set ylabel first unit label axis set xlabel time label x axis plot plotcsv using line using line command gnuplot p examplegnuplot result legend correct axis label time work second axis using second axis last column csv file different unit influence two want show second axis set datafile separator set xdata time set timefmt dt h set key autotitle columnhead set ylabel first unit set xlabel time set enable second axis set ytics nomirror dont show tic side set second axis value label second axis plot plotcsv using line using line using line axis new plot command command gnuplot p examplegnuplot result second axis starting see second axis nt start zero scale relative lowest value csv want starting zero use set option set first number zero starting range second number end range leaving end range blank go yrange xrange axis starting zero graph look like using multiple environment variable gnuplot situation get hundred logfiles day time machine going work hand using script programmatically generate graph also csv file embedded two line header footer contain information want graph title e option pas environment variable gnuplot gnuplot p e titel plottitle filename file examplegnuplot note environment variable surrounded single quote required textual value also note semicolon seperate multiple value inside gnuplot accessible set title titel var titel plottitle plot filename using line using line using line axis var filename file complete command set filename title includes bit parsing get header footer inside title variable file plotcsv plottitle grep e header e footer echo file sed g sed g gnuplot e titel plottitle filename file examplegnuplot graph dynamic title styling grid line type colour thickness graph point contains data want rest tip focus styling presentation going talk linetype option bit first older gnuplot version terminal type provided set distinct linetypes could differ color thickness dotdash pattern combination color dotdash color pattern guaranteed consistent across different terminal type although used color sequence redgreenbluemagentacyanyellowby default gnuplot version us terminalindependent sequence color terminal type program png file postscript file etc grid start grid defining new linestyle grey colour smaller line combining smaller xytics size get smaller grid set datafile separator set xdata time set timefmt dt h set key autotitle columnhead set ylabel first unit set xlabel time set set ytics nomirror set second axis value set style line lt lc rgb grey lw linestyle grid set grid l enable grid specific linestyle set ytics smaller ytics set xtics smaller xtics plot filename using line using line using line axis gnuplot command file plotcsv plottitle grep e header e footer echo file sed g sed g gnuplot e titel plottitle filename file examplegnuplot example output line colour thickness default colour tad bit uneasy distinguish one another turn colour choosing specifying line style also going make line bit thicker lw line width command set datafile separator set xdata time set timefmt dt h set key autotitle columnhead set ylabel first unit set xlabel time set set ytics nomirror set second axis value set style line lt lc rgb grey lw set grid l set ytics set xtics set style line lw lt rgb style targetvalue pink set style line lw lt rgb style measuredvalue light blue set style line lw lt rgb style secondyaxisvalue limegreen plot filename using line l using line l using line axis l new plotcommand gnuplot command file plotcsv plottitle grep e header e footer echo file sed g sed g gnuplot e titel plottitle filename file examplegnuplot example output thicker line combined narrow grid make easy see two line overlap near one another rotating axis label placement legend nearing final beautiful graph thing left change legend way upper second axis x axis value overlapping eachother note legend placed outside graph lower effective width graph nt able figure place legend outside graph bottom would nt cost horizontal screen space set datafile separator set xdata time set timefmt dt h set key autotitle columnhead set ylabel first unit set xlabel time set set ytics nomirror set second axis value set style line lt lc rgb grey lw set grid l set ytics set xtics set style line lw lt rgb set style line lw lt rgb set style line lw lt rgb set xtics rotate rotate label x axis set key right center legend placement plot filename using line l using line l using line axis l gnuplot command file plotcsv plottitle grep e header e footer echo file sed g sed g gnuplot e titel plottitle filename file examplegnuplot example output output set key outside right bottom option see mean screen realestate graph want want output png file automatically add following option set terminal pngcairo size enhanced font segoe set output examplepng want gnuplot window different size font set terminal wxt size enhanced font segoe persist graph finished styled way want need archived script wrote output file go folder needed pdf archiving printing use external tool creating pdf output file first install ghostscript package sudo aptget install ghostscript contains tool want gnuplot output p postscript convert pdf automagically get correct page format add following option get postscript output set terminal postscript enhanced color landscape arial set output exampleps set size ratio ratio gnuplot command file plotcsv plottitle grep e header e footer echo file sed g sed g gnuplot e titel plottitle filename file examplegnuplot use command convert postscript file pdf exampleps filepdf want black white instead colour omit color enhanced part set terminal line give pdf file print directly csv file used csv file datetime targetvalue measuredvalue secondyaxisvalue header information want put title footer appended title tag bash chart gnuplot graph logging metric monitoring tutorial ubuntu
121,Lobsters,visualization,Data Visualization,"Nobody wants to be woken up at 4 AM, a monitoring journey",https://www.farfetchtechblog.com/en/blog/post/nobody-wants-to-be-woken-up-at-4-am/,nobody want woken monitoring journey,beginning blackbox whitebox turning point red use google four golden signal language infrastructure component grafana thanos blackbox exporter http wikiexamplecomtroubleshootingalertmanagernotificationsfailing summary thanos published,beginningfarfetch journey monitoring started since foundation year agoas one might expect several approach tested implemented discarded along way organic growth brought high proliferation tool solve specific usecases usually aiming consistent holistic solution company monitoring needsspeaking infrastructure context could distil monitoring tooling used two component paid opensource blackbox type software also integrated centralised logging system querying data via active check paid closedsource whitebox softwareasaservice saas two main solution required monitoring infrastructure saas normally useful debugging issue much alerting regarding blackbox tool ten thousand adhoc check created throughout yearswith amount alert traceability ownership became lost although manual process configure new check alerting route helping either management toil system tremendous hundred triggering alert became status quo alert fatigue settled became usual woken several time night trivial thing like single instance cpu pressurethe turning pointwe decided time stop think solve ongoing issue nobody want woken something impact customersmonitoring current context interpreted metric related visualisation alertingso started talking potential stakeholder collected requirement added came list whitebox blackbox monitoringhighly available easily scalableflexible pluggable alert routing slack ticketing system email pager etc selfservicecomplete automated workflowfully auditable process changesmetric collection infrastructure service database queuing service caching service web server homegrown tool etc instance container level metric collectionfuture proofing choice apmfuture proofing choice crossdatacenter aggregationfuture proofing choice longterm metric storagewe validated several solution freepaid closeopen source list weighed pro con fully transparent way entire company could pitch retrospective believe one cornerstone success current solution everything laid everyone see benefit importantly shortcoming expectation could mismatchedas tough problem technical also needed shift mindset regarding alerting needed step away alert normal dropped alerting level altogether replaced following approach urgency kind delivery method alert pager call later notification ticket email slackanother major shift regarding documentation new alert approved documentation must available meaningfulness alert troubleshooting step one could go fixing moreover approach made u start paying close attention service instead instance level signal stepping red use google four golden signal territoryto achieve goal collectively decided prometheus main tool back incubating project cloud native compute foundation cncf obviously moving away saas would incur time spent something related company core business specific case figured could gain much besides obvious cost reduction choosing free opensource pathcoincidently time embarked endeavour another companywide project born abstract interaction infrastructure business unit using concept blueprint exposed previous post language infrastructure definition requirement infrastructure yamlbased construct allows automation example application build definition instance provisioning deployment access control etc integrated alerting onto blueprint well making entirely selfservicewhat nowwe designed prometheusbased stack could easily provisioned datacenters making cloud vendor agnostic possible ensuring manual configuration required following diagram represents logical representation final result provide overview componentfrom getgo needed isolate state stack prometheus component could scaled horizontally without effortabout componentsgrafanagrafana represents visualisation component stack choice nobrainer due tight integration prometheus promql prometheus query languagethe dashboard built agnostic datacenter environment enforcing templating pretty much prometheus query added via merge request proper validation deployed every instancebecause fully reset grafana deployment hit issue folderdashboards id would change across instance causing folder structure break requesting data different node worked around using sticky session load balancer permanently fix problem built module talk grafana api ensure correct id foldersdashboards sticky session load balancer longer required dashboard readonly since change available solely via source controlanother issue faced due sharding prometheus server making extremely complex build dashboard using metric across shard thankfully brand new opensource project called thanos starting get traction kindly call thanos silver bullet prometheus shortcoming like longterm storage case solving crossshard dashboard queryingprometheusthe heart soul stack made sharding aspect cluster would easily manageable via source control could add remove shard quickly required includes shardspecific configuration one issue bumped service discovery cloud provider since service discovery run per scrape job thousand instance quickly realised scale furthermore suddenly started hitting rate limit provider api thus built service discovery enginealongside prometheus server also deployed handy blackbox exporter use run icmp check instance validate tl certificate probe application healthchecks etcalerting rule also deployed shard via blueprint example code snippet alerting contact email example examplecom slack examplechannel pager examplepagertoken alert alertname alertmanagernotificationsfailing expression rate alertmanagernotificationsfailedtotal notify environment dev route slack email environment prd route slack email pager dashboard alertmanagernotificationsstats description labelsjob instance labelsinstance failing send notification integration labelsintegration troubleshooting http wikiexamplecomtroubleshootingalertmanagernotificationsfailingsimilar dashboard alerting rule agnostic datacenter notification route tailored per environmentas several team using workflow wanted provide best experience possible decreasing complexity alert creation process mandatory achieve goal abstracted exotic promql query bitesized expression containermemoryworkingsetbytes id docker containerspecmemorylimitbytes id docker instance groupleft labelreplace nodememorymemtotalbytes instance instance containerspecmemorylimitbytes id docker using prometheus recording rule previous alert converted containermemusedpercent name containerexample greatly streamlines onboarding new team eas code review process improves overall prometheus server performancehere find highlevel deployment method deployment strictly idempotent allows roll many time requiredalertmanageralertmanager responsible routing alert destination extra requirement regarding generation report fired alert could better understand going globally distributed infrastructure fulfil need built service push every triggered alert elasticsearch making easier visualise history alertsalso guarantee aware alertmanager reason unable send alert also implemented deadman switch basically always firing alert ever stop firing get paged investigateexporterssomething missing diagram exporter completely honest lost count number different exporter currently actively contribute plan continue thriving community around prometheus incredible proud part itsummarythe initial working proofofconcept stack delivered within two month successfully replacing saas solution take risk relying new technology risk paid obviously backup plan always thought progress never blocked couple month later first official communication thanos published august google office munich attending promcon announced prometheus became second project graduate cncf following kubernetes announcement validated choice madethe mindset still changing across farfetch full ownership selfservice approach make enticing jump onboard currently ingested metric deployed stack sum data point per second increasing daily basisit quite ride seem going slow time soon excited hope get opportunity opensource code writtenthis birdseye overview journey far sleep pattern became indeed much better
122,Lobsters,visualization,Data Visualization,gjk.c – Gilbert-Johnson-Keerthi In Plain C,https://github.com/kroitor/gjk.c,gjkc gilbertjohnsonkeerthi plain c,gjkc gilbertjohnsonkeerthi plain c disclaimer usage example work intro moving building simplex support function evolution vector triple product roundness curvature adding collision detail distance depth penetration contact point reference must see http http http http wwwyoutubecomwatch elmer gilbert professor emeritus aerospace engineering university michigan p coming soon,gjkc gilbertjohnsonkeerthi plain c rough fast implementation gjk collision detection algorithm plain c one c file le line dependency full version upcoming us minkowski sum build trianglesimplex minkowski space tell two arbitrary convex polygon colliding roughly build tetrahedronsimplex inside minkowski space currently tell collision ccode distance contact point coming soon disclaimer fuck license copyright made learning purpose public knowledge absolutely free usage usage example illustration example case two tested polygon defined array plain c vector struct type implementation gjk nt really care order vertex array treat set point convex polygon struct float x float typedef struct int main int argc const char argv test case sizet sizeof sizeof sizet sizeof sizeof int collisiondetected gjk printf collisiondetected body collide n collisionn return work goal explanation help people visualize logic gjk explain oversimplify certain thing complicated math except basic arithmetic little bit vector math nothing could understand actually difficult gjk algorithm explained proper understandable way ground top level gjk tell two arbitrary shape intersecting colliding algorithm used calculate depth intersection collision distance collision occurs two shape try occupy point space time space nature might ingame world simulation calculation table statistical data builtin navigation system robot application imagine use calculating collision solid body numeric intersection kind many dimension want amount dimension really matter logic etc gjk even calculate collision able comprehend algorithm require hard math whatsoever actually intuitive easy take arithmetic difference two shape subtracting point one shape point another shape two shape share common point subtracting point result difference zero zero found result collision fact algorithm calculate difference possible pair point small subset significant point examined therefore work fast accurate order understand gjk one build imaginary visualization going hood see picture head implement even tweak need intro let start naive example computing difference two shape one dimension segment number line example imagine two segment number line segment segment zero point reference number line call origin easy enough obvious segment occupy common region must intersecting colliding tell looking representation segment line let confirm arithmetically segment indeed intersect subtracting point segment point segment see get number line got lot number many resulting set point number larger initial set point two shape let plot resulting point look shape resulting segment number line resulting segment cover point two initial shape point common resulting segment contains zero come simple fact subtract point number inevitably end zero note initial segment point common subtracted got subtracted also got zero quite obvious two shape least one common point subtract point resulting set must contain zero origin least key gjk say origin contained inside resulting set initial shape must collided kissed least get apply number dimension let take look counterexample say two segment visually ensure segment occupies different region number line segment gap initial shape two shape intersect therefore collision let prove arithmetically subtracting point two segment point draw resulting segment number line imaginary got another bigger segment represents difference point two initial segment time contain origin resulting set point include zero initial segment point common indeed occupy different region number line nt intersect initial shape big long initial segment would calculate many difference many pair point actually easy see need calculate intersection endpoint two segment ignoring inside point segment consider two segment subtract four endpoint resulting segment would look like notice subtract opposite point initial shape one another resulting difference number land either left right origin zero number line say take leftmost point segment number subtract rightmost point segment number resulting number positive land right zero number line take rightmost point segment number time subtract leftmost point segment number resulting number negative land left zero number line exactly opposite first positive difference point say point opposite directionwise therefore origin two resulting point enclosing ignored insignificant internal point took endpoint initial segment account thus reducing calculation four basic arithmetic operation subtraction switching simpler representation segment two endpoint instead point contained inside initial segment simpler representation difference two shape called simplex literally mean simplest possible simplest possible thing onedimensional numberline number single point called segment simplest possible shape sufficient contain multiple point number line segment two point space called even one segment cover segment entirety segment fully contains another segment still detect intersection space matter one subtracting resulting set still contain origin zero gjk also work two initial shape nt intersect barely touch say two shape segment segment two segment one point common subtracting endpoint give resulting difference look like notice case one common point origin inside resulting segment actually one endpoint rightmost example resulting segment origin one endpoint mean initial shape collide merely touch single point two segment one common point intersection gjk really say able build simplex contains includes origin shape least one point intersection occupy point space work progress live demo gjk video gjk action coming soon moving let take look picture xyplane represented two orthogonal number line instead single number line every point two xycoordinates instead one number point suppose two basic rectangle abcd intersecting triangle efg plane shape represented following set point pair xycoordinates b c e f g much number arithmetic becomes little involved still easy literally subtract point one shape point another shape one one e f g b e b f b g c e c f c g e f g plotting resulting point connecting outermost point line get following difference shape gjk say able enclose origin within resulting shape two initial shape must collided immediately see shape actually contains origin therefore visually confirm initial rectangle abcd indeed intersects initial triangle efg also note subtracted point point calculated combination pair yield point inside resulting shape optimise algorithm skip internal point entirely building simplex remember determine whether resulting segment contains origin check primitive inequality leftendpoint origin rightendpoint hold think segment surround origin side space left right relative side one dimension sketch object able surround point origin zero point number line object must consist least two point word must segment defined two point number line therefore trying build simplex two endpoint segment number line check whether origin contained within resulting segment process similar immediately tell origin inside resulting polygon shape brief visual inspection done natural wiring human brain machine distinguish inside outside unless teach lot easier machine see point contained inside simple shape like triangle circle rather complex shape like general polygon n vertex arbitrary irregular shape moreover algorithm fast accurate way order suitable generalpurpose collision detection true power simplicity gjk come play think way need least two point surround origin segment two point two point enough surround anything plane two point define single straight line plane straight line enclose anything line straight therefore need least three point connected segment triangle able enclose least area plane simplest possible shape enclose something triangle also known task arithmetically enclosing origin within resulting shape simplifies little bit find three point resulting set point make triangle encloses origin word need build would satisfy criterion gjk build triangle test certain point lie within triangle made task solvable machine subtracted initial shape one another got resulting set point new shape represents difference initial shape straightforward way build originenclosing triangle given set point start taking triple point combination three point see form triangle origin inside triple point make triangle conclude difference two shape contains origin initial shape must collided intersected try triple done loop run point none triple enclose origin triangle found collision randomly select three point connect line segment probably end triangle similar one following triangle satisfy criterion contain origin randomly select one find origin inside immediately tell collision selected triple point contain origin might end something like long choice point random might try possible triple worst case random walk best strategy finding triangle satisfies criterion better algorithm goal algorithm find combination best three point enclose origin possible triple point combination exists triple exist distance initial shape search simplex core gjk order build simplex efficiently algorithm introduces special routine calculates difference two point initial shape called support function workhorse search support function remember obtain resulting subtract point one another algorithm skip internal point compute difference outermost opposite point support function calculates difference opposite point general way bonus also allows flat v curved collision detect intersection ellipsis circle curve spline rounded shape complex object cool let think opposite point two dimension take look example opposite point trivial imagine take one two arbitrary shape pick random point first shape pick second point opposite side shape might end something similar difference two point yield another point resulting shape point literally distance vector take point shape choose point shape subtract two point one another get exact distance direction shape specific point note subtract opposite point two shape resulting pointvector always land somewhere contour outermost edge resulting shape illustration difference two opposite point left finally land contour resulting shape right left side picture show simulated world space right minkowski space gjk think minkowski space imaginary world shape difference subtracting two point real world therefore obtain new point another surreal world also often called mapping projection realworld intersection minkowski space world difference result minkowski space look like weird insideout union one shape swept along contour intersection really look like easy show arithmetically resulting point obtained taking difference two opposing point b c b c c resulting point end exactly contour difference shape initial point opposite difference always one outermost external point resulting shape also notice resulting distance vector onetoone correspondence distance two initial opposite point literally support function gjk map difference two realworld point minkowski space seek two opposite point furthest apart along given direction return difference seek opposite point along direction support function following start origin choose direction like denoted image direction vector pointing somewhere away origin random choose whatever want start later see initial direction nt really matter direction vector always start origin sometimes written od x x direction towards take first two shape matter one two first origin seek furthest point first shape direction find furthest point direction calculate dot product pointvectors first shape direction taking magnitude distance origin point first shape direction also often called projecting pointvector onto directionvector distance point along direction projection vector onto vector distant point along greatest dot product way first distant point origin along direction found note dot product result negative projected vector next opposite point shape must found support function switch direction opposite literally flipping process previous step repeated time shape reverse direction look point second shape distant origin along direction find distant point calculates dot product pointvectors second shape directionvector take point greatest dot product way second point b found distant origin also opposite first point two opposite point b found subtract one done nt matter one subtracting resulting vector mapping difference minkowski space word support function take arbitrary line two opposite point furthest origin along line one point initial shape similar subtracting segment support function find endpoint two shape along directionline return difference another point minkowski space onedimensional number line resulting point one twodimensional coordinate plane resulting point two coordinate easy show matter initial direction choose start support function care given initial direction example choose different arbitrary might end something like nt matter direction choose seek opposite point b taking difference get point c somewhere contour minkowski space easy verify arithmetically intersection opposite point b along direction still yield one many point contour resulting shape b c c general support function work given direction given space give two shape direction find two opposite point space return intersection minkowski space mathematics intersection usually denoted symbol c support return point along arbitrary direction intersection two point always yield third point point number thus intersection two number two point give third number another intersection two vector two point give third vector another word math calculate difference two number subtract one like b c number two one b matter algorithm work either way one possible direction actual number line general dealing coordinate vector usually case many application order subtraction actually matter accurate way representing difference two vector minkowski space take one vector sum negated version vector b c fact minkowski support function often defined sum first pointvector negated version second pointvector negating second vector simply add first one get arithmetic total result support function called minkowski addition minkowski sum probably never hear minkowski subtraction minkowski difference implementation minkowski sum support function space arbitrary amount dimension might look like pseudocode return arithmetic sum two pointvectors one component one coordinate number line general vector one component vec sum vec vec b return b ax bx ay az bz dot product sum corresponding component vector multiplied float dotproduct vec vec b return b ax bx ay az bz get furthest vertex along certain direction finding max dot product direction always left right origin sizet indexoffurthestpoint const vec vertex sizet count vec sizet index float maxproduct dotproduct vertex index sizet count float product dotproduct vertex may negative product maxproduct maxproduct product index return index minkowski sum support function gjk vec support const vec sizet first shape const vec sizet second shape vec direction get furthest point first body along arbitrary direction sizet indexoffurthestpoint get furthest point second body along opposite direction note time direction negated sizet j indexoffurthestpoint return minkowski sum two point see body overlap note second pointvector negated b c return sum j really care many dimension space given direction two shape support function always return another point regardless many dimension work etc point returned support function always contour intersection initial point involved intersection opposite remember whole purpose support function help u quickly build simplex gjk support function used search encloses origin function move build rest algorithm top evolution actual logic gjk kick general plan gjk find best point simplex help support function check simplex point encloses origin side collision hooray thanks support support function nt well try point simplex built matter many time try might degenerate case explained later degenerate case collision done loop algorithm try different point check satisfy condition whole process called evolution succeeds enclose origin another branch evolution upon another loop iteration intersection detected try finally either succeeds fails people might reasonably worried possibility evolution gjk run control continues without ever stopping might even become intelligent day know could happen add limit iteration implementation countdown cut power game forcing algorithm stop like emergency halt safety button case something go wrong float number precision whatever actually necessary general search algorithm obtain point one one make triangle resulting set point initially empty process finding three point done stepbystep first algorithm find first point add resulting set find add second point find add third one built kinda evolves actually passing stage evolution one point first one resulting set segment two point second point added set three point third point added resulting set triangle contains consists segment segment consists even simpler point clear new dimension add one point simplex general nothing point point point point point point point point point nsimplex simplex point point gjk evolves simplex beginning time restarting evolution progress possible current branch simplex pass stage evolution upon iteration main loop let u single iteration main evolution loop example stepbystep illustration pair slightly different intersecting shape example intersection minkowski sum surreal side right minkowski sum unknown algorithm moment nt calculated difference point yet fact wo nt need full resulting shape need best three point surround origin minkowski sum currently unknown drawing full right visual explicacy build need three point resulting minkowski set would enclose origin within triangle nice support function finding best point begin search three point reserve place one label tag place capital letter c b order naming might little confusing used b denote opposite point previously text ancient tradition sorry ca nt much placeholder point might find search process initially resulting set point empty placeholder empty first point c easiest obtain choose random direction call support function calculates point earlier initial direction chosen randomly passed along shape support function support function find opposite point two shape along given direction labelled b lowercase le confusion return minkowski sum point c right first point simplex get first resulting point place placeholder c referring point label tag c nt forget c point difference contour line minkowski space point resulting set first stage current iteration evolution note support function look opposite search point b get executing first step obtaining point c minkowski space got first difference distant opposite point along certain directionline need choose different direction find next point simplex minkowski resulting set remember magic gjk say surround origin side detect collision number line segment surround origin two endpoint surround origin side three endpoint vertex triangle goal find would enclose origin within logic behind described following way imagine stand point c look towards origin perspective want find next point would beyond origin seen u point reaching far enough able surround origin triangle using current point c reach point beyond origin current standpoint c probably distance initial shape least two shape nt intersect along direction case collision detected halting criterion gjk algorithm say current iteration stop simplex fails include surround origin handling case explained detail later text standing point c need check point away u origin direction u towards origin direction point c towards origin direction co reversed opposite direction origin point c co oc therefore looking direction co next hope find point beyond origin idea looking beyond origin current standpoint key principle search simplex gjk help quickly find biggest simplex taking distant opposite point minkowski sum bigger simplex higher chance surround origin upon early iteration second point b quite easy get set new direction oc equal co refer new direction without negative sign support function find two distant opposite point b look direction yes process note new direction vector different first initial direction vector point opposite way call support function new opposite direction get second point labelled tagged capital b segment two point c b resulting set second stage iteration evolution get second step calling support function second time opposite direction get second point b another point contour minkowski space second point b exactly opposite first point c initial direction passed support function opposite right point b need verify indeed beyond origin seen point c word check point b away point c origin direction c towards origin dot product co ob positive point b really beyond origin seen point c evolution continues otherwise collision evolution stop restarts different direction geometry sign dot product two vector basically tell orientation roughly co ob test point b beyond origin seen point c test point beyond origin also explained follows know point c located contour minkowski sum feature support function point b opposite side contour origin must c b otherwise reaching far enough surround surround probably distance two initial shape therefore intersection remember algorithm nt know anything whole set minkowski point currently know point c b found first two stage evolution let take look minkowski space seen gjk algorithm point left part image show two point segment cb minkowski space right see segment full set minkowski sum point added visual reference explanation purpose algorithm see left side picture right side algorithm current view surreal minkowski world left side image segment cb two point simplex evolved single point c segment two point cb word simplex become little complex obtained extra dimension proceed third point might need gain even intuition going seeing segment cb image seeing whole set minkowski sum point right side human quickly visually locate third point enclose origin easy machine know look third point make critical decision direction looking next logic gjk go way imagine stand anywhere segment cb look towards origin perspective want find third point would least beyond origin seen u relatively segment cb standing find third point beyond origin able surround using current segment cb collision least iteration image show direction look last point triangle simplex find exact direction vector take one perpendicular segment cb tilt head right little looking segment cb immediately notice following simple fact segment kinda cut coordinate plane two halfes left right segment origin always end either one side segment cb side find next direction vector take perpendicular often called normal cb point towards origin two possible direction perpendicular segment cb one pointing towards origin one pointing opposite way away origin order get one pointing towards origin simple vector math trick called vector triple product work like take cross product segment cb segment co endpoint origin take cross product result segment cb basically two cross product done sequentially involving segment cb twice cb co cb also fast formula expanded equation aka triple product expansion multiplication subtraction calculating resulting perpendicular b c b c c b precise orientation vector using expansion formula done carefully correctly always give perpendicular segment cb pointing towards origin set final direction perpendicular cb pointing towards origin direction search point triangle simplex also last stage evolution call support function pas new direction along two shape image show result calling support function time obtained point complete triangle three point total simplex evolved point segment triangle also notice calculate point minkowski sum calculated three possible point one reason algorithm actually work fast narrowphase collision detection nt calculate point know anything full minkowski set see triangle point added simplex memory remember know left side image right side explanation purpose three point complete triangle full task left test origin really contained inside triangle word resulting simplex surround origin side whole minkowski sum also surround origin well follows collision two initial shape straightforward way test point inside triangle origin point zero bunch dot product operation edge side triangle need two thing normal vector perpendicular side towards origin vector origin opposite vertex triangle check dot product two vector positive greater zero work progress continued soon live demo gjk video gjk action coming voronoi para no work progress continued soon touch degenerate case collision two body occupy point space two dimension collision either intersection two shape shape kinda overlap might intersect instead one shape could touch also considered collision even detail nature collision different type touch fullon collision shape overlap penetrates another shape usually look like overlap usually least one way build encloses origin type nonpenetrating collision without overlapping shape touch edgetoedge meet one single point gjk collision usually called degenerate case collision contact common sense design gjk handle degenerate case absolutely fine example degenerate case collision touch gjk may seem like lot special case handle fact gjk already intrinsically nonoverlapping collision yield minkowski sum origin edge contour remember two segment one common point origin land endpoint resulting segment one common point origin minkowski space located contour resulting shape two shape share common face origin one side triange simplex origin either inside minkowski sum edge sum trick check origin actually one point simplex origin also end exactly one side simplex two point simplex basically stage evolution add check see origin already included notfullyevolved simplex enough detect degenerate case origin already included halfbuilt simplex upon early stage evolution nt evolve stop signal collision collision discretion differentiate penetrating collision counting degenerate collision counting collision work progress continued soon roundness curvature remarkable algorithm support function also defined huge variety shape every point shape derived simple formula aka parametric equation support function use equation calculate difference point geometry defined parametric way need keep point memory also scale everything like boolean combination shape much vector graphic whole topic wo nt dive deep key point parametric equation equation circle x h r k r equation ellipse x h k spline even combination polygon conic section detect collision intersection round shape accurately exact point contact gjk restricted polygon perfect circle collision see later section spherical collision also possible well restriction still hold shape convex concave line crossing shape intersect contour twice long shape fat bulgy fine hint always make concave shape multiple convex shape work progress continued soon adding careful reader might already noticed pattern algorithm number line need two point enclose origin find two point shape intersect indeed find two point initial shape must distance nonzero difference coordinate plane three point triangle necessary enclose origin space need four point tetrahedron example simplest possible shape primitive given dimension work progress live demo gjk video gjk action coming soon collision detail version gjk give boolean answer yesno collision test somewhat simplified algorithm able detect fact intersection also capable giving back exact depth penetration information point contact collision could handled properly simplified yesno test often called bastardized version gjk algorithm comparison original purpose calculating detailed collision simplified version described text easier understanding understood simple yesno gjk test much easier grasp gilbertjohnsonkeerthi algorithm entirety along useful concept proceed cover rest gjk functionality distance depth penetration work progress continued soon contact point work progress continued soon reference must see info along reference implementation taken thorough explanation gjk definitely must visit need understand intricacy algorithm http gjk description lot useful article http awesome oldschool gjk minkowski space video casey muratori http quality source code reference http wwwyoutubecomwatch video seminar elmer gilbert professor emeritus aerospace engineering university michigan p coming soon
123,Lobsters,visualization,Data Visualization,Monte Carlo methods,https://easylang.online/apps/tutorial_mcarlo.html,monte carlo method,,loading
124,Lobsters,visualization,Data Visualization,A Visual Intro to NumPy and Data Representation,https://jalammar.github.io/visual-numpy/,visual intro numpy data representation,hacker news point comment reddit rmachinelearning point comment chinese chinese japanese numpy creating array ndarray array arithmetic indexing aggregation plenty others dimension creating matrix matrix arithmetic dot product matrix multiplication matrix indexing matrix aggregation transposing reshaping yet dimension practical usage formula data representation table spreadsheet panda dataframe audio timeseries image language embedding step small dataset embedding bert poet word antarah seven poem suspended kaaba,discussion hacker news point comment reddit rmachinelearning point comment translation chinese chinese japanese numpy package workhorse data analysis machine learning scientific computing python ecosystem vastly simplifies manipulating crunching vector matrix python leading package rely numpy fundamental piece infrastructure example include scikitlearn scipy panda tensorflow beyond ability slice dice numeric data mastering numpy give edge dealing debugging advanced usecases library post look main way use numpy represent different type data table image serve machine learning model creating array create numpy array aka mighty ndarray passing python list using nparray case python creates array see right often case want numpy initialize value array u numpy provides method like one zero randomrandom case pas number element want generate created array start manipulate interesting way array arithmetic let create two numpy array showcase usefulness call data one adding positionwise ie adding value row simple typing data one started learning tool found refreshing abstraction like make program calculation loop wonderful abstraction allows think problem higher level addition way often case want carry operation array single number also call operation vector scalar say example array represents distance mile want convert kilometer simply say data see numpy understood operation mean multiplication happen cell concept called broadcasting useful indexing index slice numpy array way slice python list aggregation additional benefit numpy give u aggregation function addition min max sum get great like mean get average prod get result multiplying element together std get standard deviation plenty others dimension example looked deal vector one dimension key part beauty numpy ability apply everything looked far number dimension creating matrix pas python list list following shape numpy create matrix represent also use method mentioned one zero randomrandom long give tuple describing dimension matrix creating matrix arithmetic add multiply matrix using arithmetic operator two matrix size numpy handle positionwise operation get away arithmetic operation matrix different size different dimension one eg matrix one column one row case numpy us broadcast rule operation dot product key distinction make arithmetic case matrix multiplication using dot product numpy give every matrix dot method use carryout dot product operation matrix added matrix dimension bottom figure stress two matrix dimension side face visualize operation looking like matrix indexing indexing slicing operation become even useful manipulating matrix matrix aggregation aggregate matrix way aggregated vector aggregate value matrix also aggregate across row column using axis parameter transposing reshaping common need dealing matrix need rotate often case need take dot product two matrix need align dimension share numpy array convenient property called get transpose matrix advanced use case may find needing switch dimension certain matrix often case machine learning application certain model expects certain shape input different dataset numpy reshape method useful case pas new dimension want matrix pas dimension numpy infer correct dimension based matrix yet dimension numpy everything mentioned number dimension central data structure called ndarray ndimensional array reason lot way dealing new dimension adding comma parameter numpy function note keep mind print numpy array text output visualizes array differently shown numpy order printing ndimensional array last axis looped fastest first slowest mean npones would printed array practical usage payoff example useful thing numpy help formula implementing mathematical formula work matrix vector key use case consider numpy numpy darling scientific python community example consider mean square error formula central supervised machine learning model tackling regression problem implementing breeze numpy beauty numpy care prediction label contain one thousand value long size walk example stepping sequentially four operation line code prediction label vector contain three value mean n value three carry subtraction end value looking like square value vector sum value result error value prediction score quality model data representation think data type need crunch build model around spreadsheet image many perfectly suited representation ndimensional array table spreadsheet spreadsheet table value two dimensional matrix sheet spreadsheet variable popular abstraction python panda dataframe actually us numpy build top audio timeseries audio file onedimensional array sample sample number representing tiny chunk audio signal cdquality audio may sample per second sample integer meaning tenseconds wave file cdquality load numpy array length sample want extract first second audio simply load file numpy array call audio get audio look slice audio file go timeseries data example price stock time image look slice image file image colored pixel represented three number value red green blue case need dimension cell contain one number colored image represented ndarray dimension height x width x language dealing text story little different numeric representation text requires step building vocabulary inventory unique word model know embedding step let u see step numerically representing translated quote ancient spirit bard preceded left theme unsung model need look large amount text numerically represent anxious word warrior poet proceed process small dataset use build vocabulary word sentence broken array token word part word based common rule replace word id vocabulary table id still provide much information value model feeding sequence word model tokenswords need replaced embeddings dimension embedding case see numpy array dimension embeddingdimension x sequencelength practice would way around presenting way visual consistency performance reason deep learning model tend preserve first dimension batch size model trained faster multiple example trained parallel clear case reshape becomes super useful model like bert example would expect input shape batchsize sequencelength embeddingsize numeric volume model crunch useful thing left row empty filled example model train predict turned poet word example immortalized poet trigger anxiety born slave owned father antarah valor command language gained freedom mythical status poem one seven poem suspended kaaba preislamic arabia
125,Lobsters,visualization,Data Visualization,Design and Redesign - Fernanda & Martin,https://medium.com/@hint_fm/design-and-redesign-4ab77206cf9,design redesign fernanda martin,redesign bridging two culture rule engagement maintain rigor respect designer respect critic conclusion acknowledgment http http http commonswikimediaorgwikifile gastnermappurplebyareabycountypng http commonswikimediaorgwikifile,albertocairo circle meant show yearly cycle right distortion caused circular layout make timeline tunisia look shorter yemen fact period depicted yemen much shorter siding blprnt rather albertocairo great circular timeline debate straight line version purpose clarity read circle need perform like zillion eye movement move along scale sample quote twitter addition passage heated tweet well cap expletive public redesigns broadcast thousand potentially million people around world new phenomenon product social medium era reach immediacy benefit disadvantage plus side easy cheap redesigns widely seen discussed data visualization community hand take place social medium redesigns automatically collapse multiple audience single context stark departure traditional designstudiobased peer crits colleague share context intent piece know person whose design critiqued physically present online public redesigns feel faceless le personal quickly inviting animosity bitternessin cairo example initial context pedagogical student asked radial graph cairo hoping illustrate effectiveness linear versus radial solution twitter though conversation took different tone including question aesthetic cairo authority subject matter importance lack thereof data shown role design etc one hand broadening topic something aspire critique antagonism sometimes accompanies exchange would better left process altogether balance tradeoff reach v context optimize discussion around redesign productive redesign bridging two culturesthe field visualization sits intersection two different intellectual tradition one side family visualization trace root art graphic design side descended computer graphic tradition scientific experiment worth taking step back describing morés norm field conflict case visualization criticisman essential way literary artistic field move forward intellectually criticism colloquially criticism implies negativity course much richer tradition art humanity bardzell put speaking generally criticism refers expert given domain informed exercise judgment familiar example include film literary critic architectural criticism even qualified master wine ability judge wine one reason emphasize definition avoid trivial misunderstanding endorsement visualization criticism call general negativityin design community particular flavor criticism common design critique unlike abstract philosophical literary criticism classic crit usually goal improving work progress key part critique process social context fact group colleague serious highlevel conversation rare crit held public commonly found studio school comprised professional student people dedicated craft shared knowledge context design exercising careful judgmentin science see something different science seek remove human judgment process testing hypothesis judgment certainly survives funding publication process separate story hypothesis even considered scientific unless falsifiable mechanical recipe showing wrong gold standard new medical treatment opinion committee doctor doubleblind experiment ideally experiment replicated successfully one groupin case computer graphic one scientific ancestor data visualization see series test image become de facto standard instance researcher work rendering often start particular teapot model scholar image compression enhancement decade used notorious lena playboy portrait goal apply new technique idea wellunderstood context anyone may perform direct comparison previous workcomparing tradition explains source confusion criticism redesign seen tradition critique largely happens private public redesign feel unduly personal exposed critique happens public available anyone click right link loses much context necessary thoughtful commentary meanwhile point view experimental scientist necessary human ultimately subjective professional judgment involved evaluating redesign may seem like cheat seen evidence reaction practitioner fielddespite issue method critique redesign may blend help advance field truth perceptual psychology related science provide guidance visualization nowhere near advanced enough completely answer realworld design question ultimately human judgment remains essential process lack context collegiality make public critique problematic believe rule engagement bring best process avoid worst pitfallsrules engagementdesign science science completely subjective fact critique process brought discipline design century visualization based underlying shared data set opportunity additional level rigor demonstrate value critique redesign based datacriticism redesign may one powerful tool moving field visualization forward time easy many pitfall intellectual practical social use tool criticism best advantage awareness respect involved suggestion fall three category maintain rigor respect designer respect maintain rigoras scientific experiment important know reason redesign measured sense many possible goal visualization communicate data spur conversation persuade draw viewer create aesthetic experience critic creates redesign explicit goal fact may interested different goal designer especially important web people may stumble result without knowing contextsecond critic must honest simplifying assumption redesign show le data original mentioned front otherwise danger perceived simplicity redesign really result reduction datapart maintaining rigor acknowledging situation professional judgment agree finding way come understanding sometimes people look sidebyside comparison come opposite conclusion saw radial timeline redesigned alberto cairo example first step conversation source disagreement often turn different professional different criterion success visualization different goal mind clarifying extremely useful field time however people simply different intuition clarity legibility situation may make sense turn scientific experiment viewed failure criticism rather success crisp testable scientific question rare respect designerall redesigns potential seem adversarial critic pointing flaw designer personally asserting superior skill even tufte redesign assigning blame disaster age viral link effect doubled seeing negative comment work reblogged retweeted reposted pleasant experiencemaking process friendly designer good many reason kind course beyond open possibility conversation often original designer piece thought particular problem anyone else recommend bringing designer conversation every level talking advance public critique giving chance respond every turn treating competent professionalcritics take many step soften emotional impact redesigns designerfirst could make point criticizing several different visualization pick whichever come organization highest prestige point flaw publicly better new york time firstyear student always true established designer thicker skin ought second make sense context critique note positive aspect design feature need redesign color typography excellent need change might good idea call outthird make pedagogical point consider backwards redesign one take excellent visualization make worse word take visualization exemplifies point trying make say good labeling good color palette remove key element label change color vibrate one another may give effect traditional redesign leave original designer flattered rather aggrieved also good way move past idea criticism implies negative view existing respect criticcriticism hard hard design indeed established medium book movie music good critic recognized expert right field give respect visualization critic one occasionally hears designer complain critic active practitioner well may true matteras consequence let roughness redesign excuse ignore redesign need perfectly polished effective may even better slightly rough redesign competition critic designer instead proof point idea designa final point designer keep mind goal critique process ultimately none personal evaluation instead way field whole improveconclusiondata visualization still new field already become essential medium journalist scientist anyone else need understand data medium far understood early still lot room improvementwe need criticism redesign essential part visualization criticism much happening web public instantly view everyone involved available world without context preparation difficult process chapter goal start conversation criticism productive cause least stress involvedwe like end thought future redesigns criticism discussed much focused technique appropriate new medium growth phase compared criticism movie book however unusual think typical book review certainly writing style form figure review usually least much space often much given question content character plot atmosphere know visualization matured medium see much criticism content today techniqueacknowledgmentsfollowing precept tried make essay part larger conversation impetus came online critique alberto cairo along discussion followed twitter blog email particular like thank moritz stefaner jan willen tulp others helpful discussion pointer visual explanation image quantity evidence narrative http j bardzell interacting computer http commonswikimediaorgwikifile gastnermappurplebyareabycountypnghttp commonswikimediaorgwikifile
126,Lobsters,visualization,Data Visualization,"Linear regression, the old fashioned way",https://sam.zhang.fyi/2019/06/21/least-squares-springs/,linear regression old fashioned way,full screen total least square orthogonal regression planckjs mathematical mechanic,suppose want fit ordinary least square model set point mathbb r zoned statistic class stuck desert island fact wooden board hammer bunch nail good old zerolength spring frictionless cloth loop frictionless rod pretend wooden board plane decide grid system nail data point board attach nail zerolength spring move end spring place little cloth loop hanging something imagine taking long frictionless rod threading loop equilibrium state reach line best fit made interactive demonstration work full screen click open full screen drag rod accurate mouse refreshing page give new random set point one derive optimality equilibrium state using fact potential energy zerolength string extended distance u frac k k hooke constant matter hooke constant long positive set eliminate fraction one end total potential energy system sum n axi yi xi yi point nail function tell value rod point xi know linear since rod straight happens loss function ordinary least square squaring convex axi yi affine composing convex function affine one give convex function adding convex function give convex function whole loss function convex one data point strongly convex minimum system unique global minimum word resting point rod attached spring unique line best fit hooray spring go straight well loosen restriction end total least square regression instead tl model allows error axis like ols also x axis example suppose took noisy xy plane gps measurement along straight trail wanted estimate line actual trail since error x one use tl assume variance x one actually drop subcase tl called orthogonal regression example made using planckjs nice javascript port although sorely lacking documentation instance find easy way run demo outside fullscreen setup came book mathematical mechanic full perversity like
127,Lobsters,visualization,Data Visualization,A WebGL visualization of a moduli space for triangles,https://sam.zhang.fyi/2019/02/12/a-moduli-space-for-triangles/,webgl visualization modulus space triangle,better known lewis carroll paper jason canterella tom needham clayton shonkwiler gavin stewart stiefel manifold full screen version rob hines,charles dodgson better known lewis carroll posed following mathematical question probability random triangle obtuse answer gave incorrect several subsequent attempt correct answer also fell short paper jason canterella tom needham clayton shonkwiler gavin stewart nice resolution presented problem key issue dodgson original solution order say probability random triangle obtuse first come space triangle lived find part space corresponded obtuse triangle turn subtle issue canterella et al solve associating ngons socalled grassmanian mathbb r n blog post demonstration parameterization omitting detail using triangle mathbb r short way send ngon fixed perimeter pair orthonormal vector mathbb rn translation technically pair identified space pair orthonormal vector stiefel manifold space would operate cared orientation rotation polygon care orientation turn get lucky rotating polygon sends pair orthonormal vector spanning plane hence grassmannian serf modulus space polygon care rotation since mathbb r identification grassmannian real projective plane mathbb r normal vector recall real projective plane visualized line sphere looking top pane full screen version top pane sphere modulus space yellow green triangle middle pane displayed yellow green line modulus space eightfold covered sphere hence eight line color line color quotiented together appearance sake highlighted one cosets blue thickened representative vector sector yellow line connecting two distinguished representative geodesic thus sense represents optimal way transform green triangle yellow one vice versa transformation see bottom pane move vertex triangle around middle two pane watch move modulus space normalize perimeter make arbitrary choice come orientation hat tip rob hines first told
128,Lobsters,visualization,Data Visualization,Illustrating Group Theory: A Coloring Book,http://www.coloring-book.co/?pageName=cover&pageNumber=0,illustrating group theory coloring book,,
129,Lobsters,visualization,Data Visualization,Mapbox IOT-as-code with Pulumi Crosswalk for AWS,https://blog.pulumi.com/mapbox-iot-as-code-with-pulumi-crosswalk-for-aws,mapbox iotascode pulumi crosswalk aws,guest author chris toomey solution architect lead mapbox mapbox pulumi pulumi crosswalk aws webinar asset tracking solution race across america prerequisite install pulumi install nodejs setup aws step create pulumi project using aws javascript template step create ingestion rest api aws service step create consumption api map client consume data source turfjs step hook map example additional resource mapbox blog blog pulumi example repository blog site,guest author chris toomey solution architect lead mapboxwith billion connected iot device billion gpsequipped smartphones already online logistics business tracking asset every step supply chain scale complexity imperative flexible way ingest process act upon data without sacrificing security best practicesto meet need mapbox created asset tracking solution us pulumi open source javascript library aws awsx available multilanguage support pulumi crosswalk aws pulumi crosswalk aws open source framework streamlines creation deployment management aws service builtin aws best practice minimal line code common programming languagesin blog show snippet javascript code embrace power pulumi program aws service apis create mapbox solution see full architecture action live bike race across america please refer webinar recorded june mapbox asset tracking solution also refer blog race across america showcased live webinar tomorrowprerequisites install pulumi install nodejs setup awsthe diagram represents mapbox solution design aws service built pulumi aws awsx library javascript data ingested asset tracking iot solution rest api mapbox us stream processor perform enrichment geofencing trafficaware eta calculation highprevision elevation data exposed api backed high performance database dynamodb enable visualization realtime map clientthe fun part pulumi service console help map cloud architecture shown connected set dag resource need remember deployed cloud environment scale let work solution flow sample snippet code get access complete piece code please connect mapbox solution team pulumi team happy help sample test solution aws step create pulumi project using aws javascript template brew install pulumi mkdir assettracking cd assettracking pulumi new awsjavascript yarn install l pulumidevyaml pulumiyaml indexjs nodemodules packagelockjson packagejson step create ingestion rest api aws servicesto visualize data system accept large volume data multiple source rest system mapbox us pulumi aws awsx library build iot ingestion rule forward kinesis stream sample indexjs look like use strict const pulumi require pulumipulumi const aws require pulumiaws const awsx require pulumiawsx create kinesis stream ingestion const ingeststream new awskinesisstream ingestassets shardcount retentionperiod create iot rule push kinesis stream const iotrole new awsiamrole iotrole assumerolepolicy jsonstringify version statement effect allow principal service iotamazonawscom action sts assumerole const iotrolepolicy new awsiamrolepolicy iotrolepolicy policy pulumiinterpolate version statement effect allow action kinesis resource ingeststreamarn role iotroleid const iotrule new awsiottopicrule iottrigger description pas iot core asset tracking name iotassetingest enabled true kinesis partitionkey id rolearn iotrolearn streamname ingeststreamname sql select topic sqlversion kinesis stream used ingest data multiple aws service defined iot rule firehose lambda function ingest stream right iam role policy allow kinesis send data aws servicesthe code shown javascript code lambda function used mapbox streamprocessor firehose created pulumi aws awsx librariesto get piece code please connect mapbox solution team pulumi team herestep create consumption api map client consume data sourceonce data flowing system build another api query dynamodb transform data provide mapping client geojson pulumi awsx create apigateway endpoint api query data dynamodb sample code indexjs look like get piece code please connect mapbox solution team pulumi team create dynamodb table const assettable new awsdynamodbtable assettable attribute name id type name t type n hashkey id rangekey t ttl attributename expiration enabled true billingmode payperrequest create api read dynamodb const endpoint new awsxapigatewayapi assetquery route path method get eventhandler request ctx cb const aws require awssdk const ddb new awsdynamodbdocumentclient apiversion const tablename assettablenamevalue const params tablename tablename ddbscan params err data const feature dataitemsmap item const point turfpoint itemlongitude itemlatitude id itemid speed itemspeed return point const featurecollection turffeaturecollection feature cb undefined statuscode body bufferfrom jsonstringify featurecollection tostring true header contenttype applicationjson stagename dev created api start defining route inline define lambda function use npm module pulumi handle bundling dependenciesthis endpoint assumes querying dynamo going use dynamodb document client using straightforward scan syntax query table start parse result since every data point latitude longitude geojson data transformed using turfjs sending client even beautiful pulumi handle heavy lifting packaging deploying giving endpoint query immediatelystep hook map data coming going solution hook mapbox map actually quite simple pulumi built u rest apifollowing example paste endpoint pulumi pick intervaladditional resourcesfor information mapbox check mapbox blog solution pulumi please visit blog head pulumi example repository aws solution visit aws partner blog site
130,Lobsters,visualization,Data Visualization,Software below the poverty line,https://staltz.com/software-below-the-poverty-line.html,software poverty line,software poverty line jun open source sustainability difficult problem henry zhu speak sustainability titus unified data say popular open source project patreon work vuejs popularity yearly revenue team size sindre sorhus latest stackoverflow developer survey official u poverty threshold project red dat archive popularity versus fairness prettier curl jekyll electron ava corejs babel dependency babel backyourstack github new contributor overview even merge project mdx gatsby prettier storybook babel dependency prettier prettier dependency babel exploitation tidelift received million quote team people open source project showcase subscription pricing bought microsoft billion open source economy team matching fund dhh stance engaged industrialized resource extraction depleting environment climate crisis proven scientific consensus substantial threat humanity life planet alternative license tweeting creative common bync signature keybase page,software poverty line jun people believe open source sustainability difficult problem solve open source developer perspective problem optimistic believe donation model simplicity possibility scale however recently met open source developer make living donation helped widen perspective amsterdamjs heard henry zhu speak sustainability babel project beyond pretty dire picture later breakfast henry deeper conversation topic amsterdam also met titus maintains unified project fulltime meeting people confirmed belief donation model sustainability work really stood question fair decided collect data opencollective github take scientific sample situation result found shocking two clearly sustainable open source project majority project usually consider sustainable actually receiving income industry standard even poverty threshold data say picked popular open source project opencollective selected yearly income data looked github repository measure count star many fulltime contributor past month sometimes also looked patreon page maintainer one added data yearly income project instance obvious evan get money patreon work vuejs data point allowed measure project popularity proportional indicator number user yearly revenue whole team team size difficult derive exactly many user project specially may transitive user aware using project went github star good enough measurement user count count person unlike download count include ci computer conscious project worth scanned project total may seem like small number done popular least popularity important scale donation turn project enough popularity achieve fair compensation word among fifty popular project majority sustainability threshold believe would cover data point would likely le popular one data set might biased towards javascript project opencollective choice sampling opencollective provides easy transparent data finance various project want remind reader existence popular open source project linux nginx videolan others would good incorporate financial data project data set github data opencollective able calculate much yearly revenue project go fulltime equivalent contributor essentially salary said better much salary via donation would working exclusively open source project without complementary income likely sizable amount creator maintainer work parttime project work fulltime sometimes complement income saving living country lower cost living sindre sorhus based latest stackoverflow developer survey know low end developer salary around high end developer salary range depicts industry standard developer given status knowledge worker many living oecd country allowed classify result four category blue salary green salary within industry standard orange salary industry standard red salary official u poverty threshold first chart show team size price github star project red sustain maintainer poverty line project orange consisting developer willing work salary would considered unacceptable industry green blue webpack vuejs income per github star important sustainable project generally median value however team size also important sustainability smaller team likely sustain maintainer median donation per year substantial understood individual level reality includes sponsorship company also marketing purpose next chart show revenue scale popularity browse data accessing dat archive libreoffice calc spreadsheet dat popularity versus fairness popularity key green blue sustainability popular product red prettier curl jekyll electron update ava mean people working project poor several case maintainer job company allow open source contribution mean however unless company take active role supporting open source significant funding left situation open source maintainer severely underfunded donation alone open source sustainable fairly within industry standard sweet spot popular project sufficiently small team know gather significant funding crowd donators sponsor organization fair sustainability sensitive parameter visibility fundamental donationdriven sustainability invisible infrastructure project often much worse situation visible one instance corejs le popular babel although dependency babel library used star salary babel corejs proposed solution trickle donation wellknown project least guided tool backyourstack github new contributor overview would work wellknown project huge surplus share transitive dependency hardly possible vuejs enough surplus share could developer vuejs exception project afford sharing income would cause everyone involved receive poorly case babel corejs lot surplus share forward one henry zhu point talk precisely money received already limited might seem like babel visible project situation surprised hear henry many people aware babel although use might using transitive dependency side coin maintainer lower level library recognize need partner visible project even merge project order increase overall visibility popularity thus funding case unified titus project might heard unified many package used mdx gatsby prettier storybook many others also true popular project financially better le popular dependency prettier star us unified star dependency unified yearly revenue prettier fact many popular project depend unified receiving le funding per team member unified still receiving industry standard situation trickling funding time easy say project using project b necessarily donate b might b also us instance babel dependency prettier prettier dependency babel probably many project covered study complex web dependency becomes difficult say money flow within project exploitation total amount money put open source enough maintainer add yearly revenue project data set million median salary approximately poverty line split money evenly roughly still industry standard core problem open source project sharing money received problem total number open source getting enough money million enough put number perspective startup get typically much tidelift received million funding help open source creator maintainer get fairly compensated work quote team people exemployees large company google github probably receive lower tier salary yet many open source project showcase website poverty line regarding income donation actually know much tidelift giving maintainer project subscription pricing high opaqueness price cost structure historically helped company hide inequality github bought microsoft billion make quantity easier grok amount money microsoft paid acquire github company open source community getting yearly word open source community saved every penny money ever received couple thousand year could perhaps enough money buy github jointly github open source economy team big team salary new github sponsor feature far le transparent opencollective github traditional culture open data commits calendar contributor chart come donation user know much open source maintainer getting opaque microsoft github serious helping fund open source put money mouth donate least billion open source project even mere million per year would enough make project study become green matching fund github sponsor enough give maintainer year sufficient raise maintainer poverty threshold industry standard data say open source creator maintainer receiving low income data say company helping open source receiving million likely top salary millionaire billionaire company making profit combining open source library component build proprietary software understand dhh stance tragedy open source sustainability fact watched talk inclined agree however recent data compiled curiosity showed default reality open source finance indicating severe imbalance work quality compensation fulltime maintainer technically talented people responsible issue management security navigating toxic complaint often receiving industry standard struggle open source sustainability millenniumold struggle humanity free slavery colonization exploitation first time hardworking honest people giving unfair compensation therefore new problem require complicated new solution simply version injustice fix matter receiving compassion moral behavior company company fundamentally built something else company simply follow basic financial rule society trying optimize profit andor domination open source infrastructure common much like ecological system society rule prevent ecological system exploited company engaged industrialized resource extraction many decade depleting environment facing climate crisis proven scientific consensus substantial threat humanity life planet open source misappropriation simply small version le dramatic consequence want help open source become sustainable rise help humanity write new rule society keep power capitalist thirst accountable abuse wondering look like initial suggestion concrete action take accept job company donate significant portion profit least open source company fundamentally depend open source product donate open source decent enough salary discard unionizing writing finland worker union discard alternative license new project pressure microsoft donate million open source project expose truth company behaving publishing data study like one liked article consider sharing tweeting follower copyright c andre staltz medeiros licensed creative common bync translation language allowed make sure author wrote post copypasting signature keybase page
131,Lobsters,visualization,Data Visualization,Penrose - create diagrams by typing mathematical notation,http://penrose.ink/,penrose create diagram typing mathematical notation,siggraph paper video katherine ye nimo ni dor maayan max krieger josh sunshine jonathan aldrich keenan crane jenna wise rain du lily shellhammer repository get touch,penrose platform enables people create beautiful diagram typing mathematical notation plain text goal make easy nonexperts create explore highquality diagram providing deeper insight challenging technical concept aim democratize process creating visual intuition check new siggraph paper video penrose penrose team based carnegie mellon university comprising katherine ye nimo ni dor maayan max krieger stella trout josh sunshine jonathan aldrich keenan crane emeritus jenna wise rain du lily shellhammer penrose earlystage system still development building fast follow repository join mailing list first hear news feel free get touch
132,Lobsters,visualization,Data Visualization,Rethinking Visual Programming with Go,https://divan.dev/posts/visual_programming_go/,rethinking visual programming go,gophercon europe canary island edition ide v fire torch common code editor fire torch sliding window study code comprehension using eyetracking system visual programming huge curated page bunch link snapshot different vpls visual history visual programming language emily nakashima blockbased vpls scratch mit app inventor google blockly hour code multiple study confirm hybrid project flowbased vpls reasoning raptor flowgorithm visual logic drakon unreal blueprint maxmsp labview autodesk dynamo exotic vpls prograph cable modern reincarnation pygmalion programming demonstration mainstream vpl truly mainstream general purpose visual programming language vpls failed idea programming language theory human brain billion neuron trillion connection spatial v temporal pattern vision hearing use spatial representation represent temporal information vice versa knowledge graph fantastic work interactive webgl atlas brain connectome actual physical connection real world programming ddos opportunity code map seconddegree map reality map territory reversible social aspect mental model mental model purely mapping process mapper v packer programmer stone mapper packer decode code map spatial part capture relationship thing temporal interact time step spatial relationship step temporal component visual textual go go language get mapping thing right perfect language gottfried liebniz spatial v temporal mapping csp idea visualization offload task computer package concrete type functionsmethods interface name build map spatial relationship main code concept head anyway layout algorithm want produce beautiful layout good code note call graph gopherjs vecty threejs status future latest demo latest price announcement conclusion feedback buy coffee idanyliuk http githubcomdivan,blog version talk gave gophercon europe canary island edition shared thought visual programming language failed revealed first time experiment visualizing go code could dive straight project believe truly appreciate explain thought line behind first start almost existential frustration working code text ide v fire torch know common code editor fire torch historically read source code text topdown lefttoright fashion way read western natural language horizontal writing system grows downwards forming long vertical piece text stored file read text navigate structure use code editor specialized text editor integrated syntax highlighting code analysis feature use vim enjoy comforting look feel consolebased interface many people prefer advanced code editor rich mousefocused interaction case scroll text jump file lot used daily routine might hard zoom see distance see fact sitting front wall text use sliding window called editor move around wall bring small fraction onto screen see closer never see rest code except one screen mean whole wall darkness sitting alone darkness surrounded wall mysterious text using code editor shine beam light onto wall read small part imagine fire torch instead glowing screen see editor modern version fire torch read new codebase like ancient person dark cave using fire torch read wall writing painting quite ancient approach must say course nothing wrong resembling ancient interaction world except many issue spend time reading code writing happen least favourite part spend time reading code writing happen least favourite part reading code requires incredibly good attention nearperfect concentration average memorization skill stupidly tedious gut feeling tell textual form contributes significantly read new codebase big pullrequest face resembles hermit face cave even study code comprehension using eyetracking system confirm read source code standard text quite differently read continuously linebyline show clear scanning pattern like fixating gaze cognitively challenging part code area interest jumping back forth skipping line whole block altogether text best form representing code visual programming obviously first person reflecting shortcoming textual representation code whole field visual programming language vpls literally hundred language developed last year internet may find wellprepared material literature overview history vpls link two liked huge curated page bunch link snapshot different vpls nice talk visual history visual programming language emily nakashima brief overview attempt classify two half group blockbased vpls blockbased visual language environment input code text rather draganddrop predefined block script area many require typing skill nice colourful uis virtually make syntax error impossible may heard language scratch mit app inventor google blockly focus mostly teaching programming basic child novice programmer heavily used school event like hour code throughout world multiple study confirm positive impact student retention computer science class plus many hybrid project allow convert simple code sample textual representation mainstream language block representation viceversa seems help transition blockbased class real programming seems mostly limit plus lot people say visual programming replacing keyboard input mouse input tend agree flowbased vpls another large group visual programming language actually subgroup socalled flowbased language also known nodebased programming language use flow chart represent change state logic data sometimes reasoning behind language logic program implemented people know problem domain well like doctor engineer actual translation logic code job people program kinda make sense many attempt make sort universal flowbased vpls like raptor flowgorithm visual logic drakon biggest popularity approach gained niche field like programming music synthesis signal processing iotembedded circuit design tool might familiar even using daily basis tool like unreal blueprint maxmsp national instrument labview autodesk dynamo tool actively heavily used practice many people still quite narrowfield highly specialized solution unlikely writing raytracing engine kernel driver graphql server using one exotic vpls also bunch exotic harder classify thing like prograph cable prograph example designed first truly visual objectoriented language introduced interesting idea liked attempt use modern reincarnation failed miserably also pygmalion particularly interesting great example somehow forgotten programming technique called programming demonstration basically mean program algorithm coding demonstrating machine really cool somehow underexplored area mainstream vpl truly mainstream general purpose visual programming language moment every single metric modern programming language landscape dominated textual programming language zero exception old adage tell u picture worth thousand word intuitively know text clearly best way represent everything bright mind working visual programming language clearly onto something seems like missing something essential make visual programming reality vpls failed question piqued curiosity long time ago short answer simply idea commonly accepted scientific explanation programming bruteforce different approach designing new language visual textual hope work mind better even worse increasingly growing feeling plt programming language theory community actually even care least never seen properly conducted study involving psychologist neuroscientist upon introducing yet another new fancy feature programming language love brutally wrong though agree need code represent abstraction exactly mean happens mind read write even think code lens framework even validate measure visual language performs better worse rarely see question asked let alone satisfying answer attempt answer question inevitably end either realm philosophy neuroscience always interested brain work reading book paper brainrelated subject became kinda hobby mine think helped start seeing question new perspective neuroscientist barely scratching surface brain work scratching surface scratching want share two important entirely obvious aspect believe fundamental topic least important follow though line text going build reasoning human brain human brain consists roughly billion neuron form trillion connection make complex object solar system way explained easily consciousness thinking believed part brain called neocortex people know wrinkled walnutshaped thing might surprised discover actually flat tissue decent pizza size thick folded way fit skull rapid increase surface area growing skull evolutionary expensive also implied growing pelvic bone accommodate birth process tissue remarkably uniform structure layer neuron throughout whole surface organized cortical column theory suggest cortical column single computational unit neocortex performs one primary task take insane amount input extract pattern learn predict consciousness thought highlevel thinking selfawareness simply byproduct immense scale complexity pattern extracting tissue talking scale number galaxy observable universe help ballpark spatial v temporal pattern first thing want focus attention concept pattern two primary type pattern universe spatial temporal spatial simply mean related space temporal time space time difference stem nature universe evolutionary brain learned handle accordingly vision example mostly deal spatial information visual cortex fantastic job extracting ton common pattern sensory input provided retina capture spatial relationship get input see image looking one pixel time one one see pixel time arranged space right way hearing hand work predominantly temporal pattern listen melody listening note together time spread time sensory input work spatial temporal pattern course vision hearing good example show core idea fundamental difference brain handle differently lowest level interesting use spatial representation represent temporal information vice versa actually often precisely musical notation good example encode temporal component spatial representation caveat order understand train brain decode back temporal one cognitively hard task everybody read musical notation play song head love keep spatial v temporal difference mind use minute knowledge graph second important programming aspect know knowledge somehow stored neocortex well countless number theory aim explain exactly stored think still far answering question know every concept every piece knowledge every abstraction object aware population neurones get excited see hear think even dream example fantastic work gallant lab uc berkley recorded participant brain activity using fmri listening labelled autostream speech stream mapped brain activity label created interactive webgl atlas brain try online may discover semantically close thing tend clustered part surface neocortex already know neocortex uniform speciality cell defines functional role neurone connected neurone specialized cell handle electricity branched projection called neurites long short called axon dendrite accordingly typical cortical neurone average neurites form connection neurones multiply layer billion neurones connection average good luck visualizing head connection continually growing rewiring updating life tirelessly forming new connection whenever learned something strengthen association two thing collectively connection known connectome whole field neuroscience devoted called connectonomics immensely difficult task scan real human brain map connection create computer model exactly connectonomy field trying study use data human connectome project predict fluid intelligence iq analyzing network graph connectome fact think moment physical knowledge graph head represents belief reality physical mean precisely actual physical connection real world like molecular level much easier learn thing right scratch instead relearning remove already grown connection grow new one stronger previous note want make look simple anything simple hope neuroscientist happen read post mad intentionally oversimplifying thing yet believe capture essence brain going build top framework programming started learning code age essence programming looked simple giving order computer obviously true anymore modern software even talk hardware directly people start learning new programming language often ask suggest something practice mean need problem work programming language write code problem solve problem mean something bad happened ddos opportunity rather anything come real world problem domain essence writing code internalize problem domain understand nature build mental model capture insight programming language essence writing code internalize problem domain understand nature capture insight programming language code map way code seconddegree map reality mental map problem domain first code map mental map second like using word map capture important property map reduction actual thing represents map territory every map imperfect design infinitely perfect map map anymore matrix challenge code map though reversible able restore exactly mental model solution reading code actually mean reading code wrote month ago group neurones getting excited head firing writing social aspect make thing exponentially worse process reversible also brain way challenging task might think rely mental model also account brain mental model build mental model mental model programmer validate map decide something obvious extensively commented social aspect programming come play programming social activity robert c martin programming purely mapping process programming language primary mapping tool good code almost always structured way resembles structure problem domain see glimpse conway law around corner know moment new absolutely unanticipated requirement program come realize simply fit well code design requires minor change bit exaggerating live moment good code always good map mental map problem domain mapper v packer people good mapper essay programmer stone written year ago author set explain developer order magnitude useful others introduced idea mapping packing mindset scientific concept anything think author onto something reading influenced lot back mapper internal mental map world kind object model rich variety connection association constantly populate develop mental map world new information attempted placed correct place internal map give knowledge structure enables real understanding ability see cause effect packer hand pack knowledge head without properly building connection matter remembering learning right response understanding world question maximizing number knowledge package remembered often mention essay kinda drawing line people packer wrong side author claiming world populated packer mapper make good person packer make bad one mapper packer bias towards former latter still concept resonates practical experience observation people think think worth mentioning decode code map speaking observation thinking selfreflection might tough call many always enjoyed observing happens head analyzing happens program read code entirely alien task point realized absolutely every problem ever worked spatiotemporal nature spatial temporal component spatial part capture relationship thing temporal interact time step spatial relationship seems open unfamiliar codebase first step going building temporary internal map code even represents try link line code file name onto existing mental map problem domain code supposed related important note purely spatial relationship map trying capture object abstraction relationship validate map existing knowledge imagine reading http library code imperfect mental map http protocol expect see thing like clientserver requestresponse code first read code trying link piece code knowledge build temporal map representation code validate existing mental map naming hardest problem computer science becomes important order make link efficiently need use shared vocabulary wellknown symbolic representation mostly text future something like super rich emoji language whatever conventional cheaper use obviously word step temporal component link relationship established head expand temporal dimension read function code actually see encoded behaviour object time obvious function body text differs rest source code line order matter encodes temporal information first line going executed second one encode temporal behavioural pattern function code people argue goto operator example break time flow go cool keyword defer kinda cheat general time flow rule greater good general rule function body hold true encodes temporal aspect mental map visual textual exactly visual textual representation code often missing point attempt express spatial temporal component similar fashion add cognitive load help believe main reason vpls still thing everybody using excited encoding spatial component visually make absolutely perfect sense natural way encode temporal component still better expressed text perfect still unbeatable human invention even vpls harnessing power visual representation often focus purely symbolic aspect assuming icon v text make big difference anyone working data visualization know easy mess visualization inadvertently drawing semantically unrelated thing close using colour mean anything vpls seen terrible visual perspective blame extremely difficult task venn diagram example make sense visual look cool deceptive appealing go finally point start talking go go language get mapping thing right embrace imperfect nature map try make mapping process simple possible allow map thing two different way make encoding straightforward task know exactly going express concept code go code surprisingly make reverse process decoding also much comfortable go usually guesswork piece code actually mean author tried capture perfect language help mention gottfried liebniz german mathematician philosopher whose mathematical notation use today among thing obsessed pursuit perfect language mean say exactly mean interpret exact meaning sure interpreted correctly fully succeed somehow ended inventing binary system think rule realistically achievable go language try hard optimize rule think programming language designer obsessed pursuit well reading happen programming language designer future language please design language rule mind design tool mapping artistic selfexpression spatial v temporal mapping go somehow even captured difference spatial temporal pattern go use concrete type represent spatial aspect functionsmethods temporal one plus interface allow generalizing behaviour get minute compare classbased language class represents nothing time data behaviour nothing time accidental complexity go make distinction clear make code much easier understand remember seeing comment twitter someone said feel like go type funcs sure rant yeah universe space time make universe limited way though csp enough one prominent go feature builtin concurrency based csp communicating sequential process theory also unsurprisingly play exceptionally well brain surface csp kinda simple thing give two main concept learn process channel goroutines channel go easy relate physical world understand intuitively anything behaves without involvement background goroutine way interact communicate expressed channel naturally see concurrency pattern everywhere public speaking fan cashier taking money customer putting drawer fan sending receiving text message multiplexing via select compare model like asyncawait future return object type future resolve sometime future make sense real world ridiculously hard work go concurrency simply map onto mental model easily read random go code virtually always quickly answer question code part exactly represent essential accidental complexity author try say part get wrong lot go code umm good problem mostly mental map encodes encoding bad go code problem mostly mental map encodes encoding write go fulltime almost year still enjoy way first month definitely made programming fun oh frustrating code text reading idea visualization dot got connected thought okay go make spatial decoding process ridiculously straightforward natural brain maybe even straightforward capture formalize offload task computer computer good processing large chunk text brain good extracting pattern data perhaps marry frustration code text reading love go simplicity power visualization started first capturing basic principle mental spatial pseudovisual representation code look like basic principle package package go central logical unit abstraction usually represent large piece abstraction vastly different go differs mainstream programming language meaning directory language tend use directory namespacing thing basically workaround dealing filesystem little structure problem domain per se go directory package logical unit really like make simpler build highlevel spatial link seeing directory tree package subpackages called go module since go logical unit see set graph node connection subpackages subpackage mean actually used package easy make wrong assumption imagine obsolete subpackage survived refactoring stay version control year everyone assumes used resolve discrepancy mind upon reading code concrete type concrete type mostly structure important tool go give represent anything physical ephemeral color planet mood time concept might think separate abstraction candidate concrete type code easy think people ask add method basic type like string missing point modify behaviour string likely string anymore capture difference adding new method creating new type like type uuid string need represents uuid general string see type also node connected package belong type field type package see also node connected interesting point care type pointer type even embedding capture relationship embedding particularly curious concept work well type structure method hidden say another package humanspeak make sense say humanmouthspeak embedding used package still keep mental map speak method mouth type human hence syntactical win cognitive one functionsmethods nutshell method function first argument type similar logically method always tied type receiver see connected node type node one method call another one second likely closer caller especially caller andor private function linked call think size matter line code bigger node go deeper technically define type including anonymous type closure inside function stick mind definitely keep mental image around navigating code interesting topdown order seems matter package always top type firstorder function method nestedlinked stuff probably omnipresent concept gravity really influence intuition even abstract thing mental map interface interface stand rest code block generalize behaviour implicitly way capture common functionality seemingly unrelated thing context particular problem implicit make interface powerful tool expressing reality code type used myriad different context without knowing upfront imagine returning language type forced declare interface implement go experience hard believe many language still go create interface least two type generalize upon make sense head see interface kinda like cloud around type node implement brings closer forming group way give flexibility internal spatial map type implement many interface used particular code interested mostly capturing meaning interface type implement name name said crucial establishing link mental map convey lot meaning conventionally special name like newfoo usually represent constructor function see linked closer type node semantically related name pair like startstop pushpop definitely close head prefixessuffixes like lightthemedarktheme servertcpserverudp also tend cluster together head example rule think figured give rough idea trying trying read go code parse build map spatial relationship main code concept close possible head anyway whenever break code node visualize display function text read fill temporal aspect code visualization allow instantly see code structured entity abstraction represents instead redeyed scrolling half hour gently asking computer dirty job facilitating mental map decoding linking process tremendously work browser talk local server access filesystem currently like planned implement working go deeper head discover nonobvious thing pile backlog example realized different zoom level care different connection overviewing package interested one sort connection read function code care much rest want detailization link coming function early preview small window low fps save traffic sorry intro screen containerlist stdlib package navigating larger go package githubcomdivanexpvarmon visualizing visualization package dependency text adding new dependency single import line matter leftpadlike small package huge loc elephant visual approach immediately feel weight import line almost instinctively forced think twice using dependency layout algorithm use forcedirected layout approach node placed space physical force applied multiple time system reach stable minimum energy state using physic incredibly important help intuitive aspect final layout remarkable forcedirected algorithm try produce aesthetically pleasing graph kind data however case want opposite want produce beautiful layout good code yield crappy picture terrible code reasoning simple first work way head anyway stick bad code look messy head hard work overcomplicated code second want aspect visible purpose instead learning rule good code like keep object short term memory keep abstraction small let visualization speak intuition job note random note approach first call graph graph capture interfunctional relation different call graph see open pprof output example visualization code structure exist language well seen really cool project especially java fundamentally differ two aspect main purpose help navigate insane maze class hierarchy accidental complexity visualizing class node really help building spatial relationship map reason explained earlier class represent everything nothing time approach code visualization make sense go design simplicity imagine building similar visualization language see represent mental map good go le tool written written go using gopherjs vecty framework webbased uis go render scene webgl using gopherjs wrapper threejs though sure want get rid file splitting code text chunk naming help logically grouping thing easy loose synchronization file name actual thing supposed group point filesystem layer start creating harm mental maptocode linking process good currently care code laid filesystem head use color node uhm actually visual image head synesthetic person anything mental map built upon neurological hardware visual cortex deal lot spatial information feel similar great color powerful tool used right color quickly visualize different aspect code node child coloring nested tree typesmethodsfunctions improve navigation understanding publicprivate api position space show clearly color might help color different kind node typesfuncsinterfacesetc help differentiate object pprofcover output especially love visual representation diffs pullrequests future status project complete experiment working free time early alpha stage even name internally use codevis code visualization experiment mean absolutely fail ton reason matter lesson learned experiment using many subjective assumption first time even sharing idea anyone maybe work totally different people would happy work though goal shift dogfooding stage use tool work going experiment two option editing code right inside browser talking editor another window via websocket one major challenge programming little experience still hard efficiently draw text draw thousand line without making cpu burn using optimization stop code selfexplanatory unfortunately also spent lot time figuring physic tuning parameter force node almost dark magic surprising bad brain work physic constant different real world one one small change whole world go banana plus work well small graph large one make even complicated even early stage kinda enjoy result encouraging go get random project open tool immediately see structure able navigate codebase using wasd key like good old quake day least feel like right track still ready opensourcing matter time soon sure work reliably basic case definitely going open future also would love get rid window screen completely point use code representation ar environment latest demo hololens team give hope far screen killing moment ie sufficiently high resolution render screen want retina become obsolete latest price announcement nreal show market growing price getting lower ar device would definitely love able physically walk part code interested pull closer hand find unfortunate programming almost lock sitting position transition visual programming slightly change game conclusion late sixty first nato software engineering conference garmisch term software crisis coined rapid increase computing power made obvious current method writing software insufficient new method invented yet think nowadays another crisis scale codebases match tooling deal complexity problem solving grow much though making ui sidebar three button unlikely compete apollo mission code complexity language tooling use become order magnitude bigger keep growing feel like fire torch problem contributes lot easy overlook impact code make onto overall code structure see tiny part lit editor seeing change instantly able use spatial power brain navigate code bring natural incentive write simpler better structured code perhaps shift conventional understanding programming packer mindset applying pattern mapper one building map shape tool thereafter tool shape u feedback genuinely interested feedback negative positive topic please let know thought idea bit excited terrified publish post never showed project way giving sneak peek head creepy however love connect folk thinking similar direction see flaw logic especially neuroscientist feel free rebuke layman vision topic like project may buy coffee would definitely glad devote time work project twitter idanyliuk github http githubcomdivan
133,Lobsters,visualization,Data Visualization,Visualizing Trees | Partition + Tree,http://www.buildingwidgets.com/blog/2017/10/28/visualizing-trees-partition-tree,visualizing tree partition tree,next,imagine add proper label good color interactivity next like new creation next step create formal layout build reusable chart based layout mentioned post drawing link path four point instead line two point allow u ability add even encoding information link next post explore new power
134,Lobsters,visualization,Data Visualization,507 Mechanical Movements,http://507movements.com/,mechanical movement,wait said animated close,wait said animated ah well unfortunately animation working yet quite fewlook color thumbnail identify completed animation use prev next link right browse thumbnail page time go adding complete click facebook subscribe twitter follow button notified progress meanwhile hope enjoy animation completed along henry brown original illustration classic technical reference see page moreclose
135,Lobsters,visualization,Data Visualization,Comma-Separated Tree,https://observablehq.com/@mbostock/comma-separated-tree,commaseparated tree,,
137,Lobsters,visualization,Data Visualization,x86-64 Instruction Usage among C/C++ Applications,https://aakshintala.com/papers/instrpop-systor19.pdf,instruction usage among cc application,,obj length filter flatedecode stream p jbd c e endstream endobj obj length filter flatedecode stream w endstream endobj obj length filter flatedecode stream endstream endobj obj length filter flatedecode stream ĳ j km endstream endobj obj length filter flatedecode stream üe p endstream endobj obj length filter flatedecode stream sa ee ܞu pgw o䀡 n ė w k q la e e c e h kkhpo c e vsqaw endstream endobj obj length filter flatedecode stream xڵ k l gq c b
138,Lobsters,visualization,Data Visualization,Visualizing PostgreSQL Vacuum Progress,http://dtrace.org/blogs/dap/2019/05/22/visualizing-postgresql-vacuum-progress/,visualizing postgresql vacuum progress,manta plenty useful information major effort introduction postgresql physical storage acid routine vacuuming major challenge provider view describing progress ongoing vacuum operation bit use new view first cut visualizing vacuum progress pgstatsmon prometheus grafana doc diving bit deeper vacuum operates slide video back visualization multiple index scan vacuum phase many index scan final note farther apart longer introduction postgresql physical storage slide video routine vacuuming database page layout dirt vacuum update grafanaprometheus snippet grafana template variable value specific deployment try use query likely need change filter quite bit pgstatsmon,heavy user postgresql since learned quite bit operating postgresql scale manta object storage system us large fleet sharded highlyavailable replicated postgresql cluster heart metadata tier end user request object say http manta wind looking postgresql cluster metadata object order find storage server hosting copy object along size checksum useful information right present one biggest challenge managing postgresql vacuum process rehash detail plenty useful information indeed managing vacuum wellknown challenge operating postgresql major effort underway fundamentally change ondisk storage system eliminate underlying problem since effort appear year away especially deployment major postgresql version upgrade take time test orchestrate remains important understand problem today post assumes familiar enough postgresql understand basic postgresql database table row index basic sql statement term database page block believe used interchangeably refer chunk file making table ondisk representation heap sequence page potentially stored across several file store actual table data tuple internal representation row index ondisk data structured used efficient access row table structure see introduction postgresql physical storage internally row update postgresql processed similarly delete original row plus insert new row since concerned insert post generally think deletes row deleted postgresql table cleaned right away providing desirable acid semantics transaction might still able see updated deleted row would make system much complex possibly slow deleted updated row tuples called dead tuples see routine vacuuming postgresql documentation vacuum process longrunning database operation scan heap remove dead tuples ie invalidated previous update delete operation heap index vacuum also used address issue like xid wraparound certainly major challenge u provider largely unrelated post production deployment vacuum operation often take least day various reason uncommon take day seen take upwards day vacuum historically somewhat opaque process run long time finish point log basic information happened fortunately recent version postgresql include view describing progress ongoing vacuum operation fantastic doc bit light interpreting view find post explaining bit use new view left lot question several set counter looking determine overall progress even counter part care counter expected reach know certain phase repeat post document visualized data view learned underlying process first cut visualizing vacuum progress started putting together postgresql vacuum visualization plotting value pgstatprogressvacuum view collect information postgresql using component built called pgstatsmon store prometheus visualize grafana first plot phase green line show phase vacuum described doc key phase scanning heap vacuuming index vacuuming heap phase finished quickly enough catch pgstatsmon note phase number might differ see pgstatsmon add one phase number reported postgresql also add count block scanned vacuumed plus total count block constant see count block scanned yellow line rise count total block blue line see nothing see count block vacuumed orange line rise total block blue line seems pretty useful better sense going previously knew opaque process useful note line quite linear particularly orange one still long period vacuum see meaningful change progress phase green line right yaxis add bit information note count block scanned increase scanning heap phase see long opaque vacuuming index phase finally count block vacuumed increase vacuuming heap phase might sound obvious notice scan vacuum phase heap vacuum cleanup phase index really know going hood obvious counter increase phase also created percentage view little le busy tell u essentially thing going seem take two pass heap happening gap pass diving bit deeper vacuum operates understand postgresql vacuum progress view really need understand vacuum operates understanding primarily thanks peter geoghegan talk postgresopen slide video error appreciate correction folk know better first tuples postgresql table identified ctid ctid twotuple page number tuple number page refer sequential page heap operating system page page number type physical address page number postgresql know exactly offset file contains page tuple number logical address ordinal number tuple within page order find information tuple postgresql look sort tableofcontents page header importantly discussion tableofcontents point postgresql offset page tuple data stored also contains bit indicating whether tuple known dead bit set postgresql behaves tuple exist without even looking tuple data important tuples referenced heap also referenced index index complex ondisk data structure generally allow rapid access specific tuples eg index sorted field tuple rather storing entire content tuple index store ctid query access tuple index first find ctid index access tuple content heap ctid dead bit set calling page table content postgresql see accessing tuple even looking data tuple contains order remove particular tuple table vacuum remove heap also index reference tuple could many index could huge necessarily structured quickly find reference given ctid postgresql find reference tuple handful needle handful haystack remove heap without leaving reference dangling index postgresql make use indirection described logically process removing tuple heap involves step note exactly happens conceptual approximation mark tuple dead header page containing tuple immediately attempt reference tuple index ie ctid find bit set treat tuple though already gone correct vacuum already established tuple really dead discus vacuum tell record id oldest transaction id running started tuple death transaction id older visible running transaction index scan index start finish reference ctid remove index go back page containing tuple mark tableofcontents slot free instead dead ctid reused new insert knowing dangling reference previous ctid summarize postgresql reused given ctid without first removing reference index index would left pointer whoknowswhat heap threestep process tuple mark dead heap existing reference stop working gracefully remove reference index actually free slot heap postgresql scan index start finish tuple clean instead vacuum process scan heap find dead tuples mark tuple dead described add list dead tuples found list buffered memory often called maintenanceworkmem tunable control large list later vacuum process scan index start finish remove reference tuples list postgresql go back heap completes step actually freeing ctid ideal case happens postgresql batch whole list tuples take care one whole pas index back visualization graph phase block scanned understanding ctids say bit going scanning heap phase phase righty axis postgresql scanning block heap looking dead tuples infer phase postgresql marking tuples dead page header adding list tuples removed vacuuming index phase phase postgresql scanning index removing tuples index also list tuples removed accumulated previous phase vacuuming heap phase phase postgresql going back block heap actually freeing ctids removed great got decent understanding going vacuum visualization observe realtime still gap mentioned like tell progress vacuuming index phase however thing scanning heap phase least estimate finish since progress appears roughly linear may also guess long vacuuming heap phase take since seems make sense since similar work put lower bound total vacuum time since know long vacuuming index take reach vacuuming heap phase could make plausible estimate vacuum completion time always simple multiple index scan let take look complex case going look like vacuum went backwards table describing vacuum phase text mention vacuuming happen multiple time per vacuum maintenanceworkmem insufficient store number dead tuples found also say vacuuming heap phase heapblksscanned le heapblkstotal system return scanning heap phase completed otherwise begin cleaning index phase completed found little hard understand doc alone deeper information vacuum work help explain going said vacuum scan heap accumulates list tuples removed remove index well list tuples go fixedsize block memory whose size determined maintenanceworkmem tunable happens fill memory buffer postgresql lot option proceeds finish vacuum dead tuples already found mean scanning vacuuming index removing dead tuples found far vacuum tuples heap well like normal vacuum maintenance work memory cleared pick scanning heap left look like term block scanned vacuumed graph starting get little busy lot information green line represents current phase graph phase indexed right yaxis main one three saw earlier scanning heap vacuuming index vacuuming heap like scanning heap phase count block scanned increase however instead increasing way total count heap block stop look like halfway point postgresql jump vacuuming index phase progress information vacuuming index phase finish move vacuuming heap like example looked count block vacuumed rise count block scanned stop point something interesting happens postgresql move back scanning heap phase count index scan increase talk interesting previous example one index scan whole vacuum time completed one index scan partway whole vacuum require second one heap scan pick previously stopped yellow line showing block scanned flat start moving orange line show block vacuumed flattens time heap scan make way end another vacuuming index phase followed another vacuuming heap phase count block vacuumed rise total count block count block vacuumed reach total count block vacuum essentially finished essentially entire table vacuum broken two piece one covering first half heap another covering rest said reason second scan postgresql filled maintenance memory dead tuples vacuum index finishing heap scan sure visualize fortunately pgstatprogressvacuum view report number dead tuples accumulated well total number tuples stored plot phase see clearly count dead tuples rising maximum count scanning heap phase remains flat next two phase finished vacuuming tuples list emptied postgresql go back scanning heap phase time quite fill buffer count dead tuples flatlines half total buffer size might clearer look term percentage see dead tuple memory filling scan heap filling scan reach vacuum index starting vacuuming tuples heap yellow line increasing green line dead tuple memory empty go back start filling scan flattens finish scanning heap visualization allows u clearly see vacuum running maintenance memory finishing heap scan understand result extra whole index scan many index scan example saw two index scan vacuum broken two piece halfway heap scan clear coincidence happened halfway scan example barely ran maintenance memory ie first round made heap scan index specifically see heap scan make way heap first time second round needed finish last bit heap somehow case really emphasizes much expensive turned second index scan far know possible number index scan worst case noticed production involve index scan easy tell many needed running vacuum exposed pgstatprogressvacuum view big deal three vacuum looked scanned whole heap twice scan vacuum tuple broken two piece second third vacuum however last two vacuum took two whole pass index file compared one pas previous vacuum big deal case index alone tib second example phase took almost day whole second scan likely added extra day vacuum nearly doubling long took yes big deal putting graph together postgresql vacuum dashboard look like think bit like xray quite useful case requires pretty deep understanding interpret really understand multiple heap scan involved table scan index scan use maintenance memory multiple index scan armed understanding able generate promising hypothesis explain major point confusion example long wondered vacuum shard take much longer others sometimes shard experience vacuum next one day guess second vacuum required extra index scan true actionable principle could tune maintenanceworkmem tuning maintenanceworkmem enormous impact vacuum time effect highly nonlinear got worth dead tuples maintenanceworkmem mib vacuum might take closer time required maintenanceworkmem mib extreme case third example far unfortunately case already using value larger postgresql make use low hanging fruit term understanding progress heap scan begun essentially right away based progress estimate long take anecdotally comparable time required vacuum pas well doubling estimate get lower bound long vacuum take coarse still helpful assume density dead tuples heap approximately uniform throughout heap also estimate many index scan necessary given vacuum based quickly filling maintenance memory could even verify assumption seeing quickly fill dead tuple memory scan heap completed round vacuuming index put together reasonable estimate whole vacuum completion time especially useful many subsequent index scan since one likely close end vacuum point anyway still feel pretty rough though got awful lot open question starting apply system several hundred shard rely human interpretation graphic possible get progress information vacuum index phase still pretty long opaque phase get information number tuples frozen vacuum number tuples frozen unfrozen whole table would help u understand tuning system freeze aggressively normal vacuum causing vacuum take long block updated block updated tuple frozen tuples dead reason would help u understand vacuum require scan others final note believe grossly simplified explanation going postgresql peter talk explains much detail including opportunistic garbage collection heaponly tuples fact space actually freed heap scan pas much mechanism like hint bit free space map visibility map affect represents understanding putting together information official doc various talk source tried cite source possible case made inference could way appreciate feedback incorrect unclear pgstatprogressvacuum view huge step forward u many thanks postgresql community postgresql helped u scale manta several order magnitude year documentation quite extensive thanks member community help others understand implementation detail play outsize role operating postgresql scale thanks especially peter geoghegan talk postgresopen sf helped u put visuals together hard convey significant vacuum issue u last year clear large part misstep related database configuration system configuration application behavior postgresql default help either default behavior vacuuming heap dead mean vacuum linearlygrowing table become farther apart longer nevertheless mistake quite hard correct involve timeconsuming downtimeinducing schema migration hundred cluster lot folk joyent worked hard year better understand improve performance postgresql joyent many name reading introduction postgresql physical storage rachid belaid post cover relevant postgresql internal structure much detail diagram without assuming much knowledge postgresql internals already bloat postgresql taxonomy peter geoghegan postgresopen slide video talk inspired informed work routine vacuuming postgresql documentation section worth reading several time database page layout postgresql documentation dirt vacuum jam nasby link latest instance popular talk vacuum find video previous version elsewhere update grafanaprometheus snippet several reader requested detail could easily recreate dashboard listed prometheus query use draw graph post production dashboard complicated described reason nothing content post use several different prometheus data source one particular dashboard parametrized using grafana template postgresql shard relation looking among thing template grafana show dropdown selector top page selector fill shard relation variable see query variable value specific deployment try use query likely need change filter quite bit remember data collected pgstatsmon complete view graph contains interesting data driven query vacuum phase pgstatprogressvacuumphase relname relation backend shardpostgres heapblksscanned pgstatprogressvacuumheapblksscanned relname relation backend shardpostgres heapblkstotal pgstatprogressvacuumheapblkstotal relname relation backend shardpostgres heapblksvacuumed pgstatprogressvacuumheapblksvacuumed relname relation backend shardpostgres indexvacuumcount pgstatprogressvacuumindexvacuumcount relname relation backend shardpostgres vacuum phase indexvacuumcount query also feed vacuum progress graph use query index scan graph show tuples processed us vacuum phase pgstatprogressvacuumphase relname relation backend shardpostgres dead tuples processed current index scan pgstatprogressvacuumnumdeadtuples relname relation backend shardpostgres max dead tuples processed per index scan pgstatprogressvacuummaxdeadtuples relname relation backend shardpostgres scan vacuum progress graph show percentage progress use block scanned pgstatprogressvacuumheapblksscanned relname relation backend shardpostgres pgstatprogressvacuumheapblkstotal relname relation backend shardpostgres block vacuumed pgstatprogressvacuumheapblksvacuumed relname relation backend shardpostgres pgstatprogressvacuumheapblkstotal relname relation backend shardpostgres dead tuple memory used pgstatprogressvacuumnumdeadtuples relname relation backend shardpostgres pgstatprogressvacuummaxdeadtuples relname relation backend shardpostgres hope helpful information useful let know sure provide raw dashboard json since detail specific environment reason also sure would helpful
139,Lobsters,visualization,Data Visualization,How a File Format Led to a Crossword Scandal,https://www.youtube.com/watch?v=9aHfK8EUIzg,file format led crossword scandal,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature file format led crossword scandal saul pwanson youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature file format led crossword scandal saul pwanson youtube
140,Lobsters,visualization,Data Visualization,Visualizing Retreats Away From Berlin Streets,http://hanshack.com/rueckzugsorte/,visualizing retreat away berlin street,info methodik han hack hnshck,info kann man einer dem verkehr entkommen mit dieser karte kannst du die berliner orte erkunden die weitesten abseits von liegen wenn du weiter hinein zoomst findest du auch bar und restaurant die mindestens meter von einer entfernt liegen methodik die wurden auf ebene der berechnet da sind die komplett von umgeben sind die daten basieren auf openstreetmap der datensatz beinhaltet alle die von auto befahren werden im datensatz sind die einmal nur al linie angegeben e gibt keinen datensatz der die genauen angaben beinhaltet wie breit eine jeweils genau ist deswegen wurde die berechnung die minimale breite angenommen meter diese zahl basiert auf der maximalen zulassungsbreite auto die mittelpunkte der kreise stellen jeweils die abgelegensten punkte eines dar auf grundlage der berechnungen dabei abweichungen von etwa metern auftreten ein kartenexperiment von han hack hnshck
141,Lobsters,visualization,Data Visualization,Going Critical,https://www.meltingasphalt.com/interactive/going-critical/,going critical,,need enable javascript run app
142,Lobsters,visualization,Data Visualization,Unraveling The JPEG,https://parametric.press/issue-01/unraveling-the-jpeg/,unraveling jpeg,peering inside jpeg notepad phosphenes three layer jpeg compression ten time smaller fiftyseven time smaller lossy chrominance subsampling chrominance subsampling developed tv broadcast cb cr discrete cosine transform quantization jez swanson runlength delta huffman encoding runlength encoding deltaencoding huffman encoding facebook actually open source omar shehata,jpeg image everywhere digital life behind veil familiarity lie algorithm remove detail imperceptible human eye produce highest visual quality smallest file look like let see eye ca nt see easy take granted send picture friend without worrying device browser operating system using thing always way early computer could store display digital image many competing idea best send image one computer another expect workto solve problem joint photographic expert group jpeg committee expert world established joint effort iso international organization standardization iec international electrotechnical commission international standard organization headquartered geneva switzerlandjpeg group people created jpeg standard digital image compression anyone ever used internet probably seen jpegencoded image far ubiquitous way encoding sending storing image web page email social medium jpeg used billion time every time view send image online without jpeg web would little le colorful lot slower probably far fewer cat picture article decode jpeg image word take convert compressed data stored computer image appears screen worth learning important understand technology use everyday also unravel layer compression learn bit perception vision detail eye sensitive toit also lot fun play image waypeering inside jpegeverything computer stored series binary number typically bit zero one arranged group eight known byte open jpeg image computer something browser operating system something else decode byte recover original image list color displayed download picture cat open using text editor see bunch garbled character using notepad look image file since common text editor like window notepad change file binary content save longer valid jpegby opening image text editor confused computer way confuse brain rub eye hard start see blotch dimness color blotch come light stimulus hallucination made mind arise brain assumes electrical signal arriving nerve eye conveying light information brain need make assumption way know whether given signal sound sight something else nerve body carry exactly type electrical pulse apply pressure rubbing eye sending nonvisual signal trigger receptor eye brain vision literally see pressure fun think similar computer brain also useful analogy illustrates much meaning carried body nerve stored interpret binary data made one zero basic component could conveying kind information computer often guess interpret using clue like file extension forced interpret text text editor expectsto understand jpeg image decoded need see original signal binary data done hex editoryou nt necessarily need hex editor edit character text save file reopen image fine since goal understand jpeg store image helpful able actually read byte done right webpage image next bytesthe thing omitted header section byte beginning jpeg image contain metadata like width height revist later article represented decimal number make change byte redecode display new edited image typehint try scrolling removing chunk worry always reset image back original lot learn playing around editor example figure order pixel stored something strange example changing number seem impact image setting line one completely ruin image action like setting line change color subsequent pixelsmore parametric pressperhaps peculiar number change color shape image well change line look top row image see mean matter jpeg image using always find mysterious checkerboard pattern editing bytesit hard decipher image reconstructed byte playing around like jpeg compression actually composed three different compression technique applied successive layer look layer compression separately unravel mysterious behavior seeingthe three layer jpeg compressionchrominance subsamplingdiscrete cosine transform quantizationrunlength delta huffman encodingto give idea scale compression notice image represented using exactly number make kilobyte stored compression three number would needed red green blue component would mean total number kilobyte jpeg compression resulting file ten time smaller fact image squeezed far fewer byte image next version compressed kilobyte make fiftyseven time smaller uncompressed version would look closely see image identical jpegencoded image one right much smaller term file size also look nice notice blocky color look background jpeg known lossy compression technique image change loses detail result chrominance subsamplinghere image first layer compression appliedhint notice removing one number ruin color removing exactly multiple minimal effect imageit little straightforward decipher almost simple list color byte change exactly one pixel yet already almost twice small uncompressed image would around kb smaller size guess tell number represent standard red green blue component replacing number turn image green opposed black byte represent brightness cb relative blueness cr relative redness imagewhy use rgb modern screen work monitor display color turning red green blue light various intensity pixel white displayed turning three color full brightness black displayed turning offthat also similar human eye work color receptor eye known cone split three type mostly sensitive either red green blue rod type receptor eye detect change brightness far sensitive one hundred twenty million rod eye compared measly six million conesthis mean eye much better detecting change brightness detecting change color separate color brightness remove bit color without anyone noticing chrominance subsampling process representing image color component lower resolution luminance component example pixel exactly one component discrete group four pixel exactly one cb one cr component image contains quarter much color information originally using ycbcr colorspace unique jpeg fact originally developed tv broadcast everyone color tv separating color luminance allowed everyone receive transmission tv support color would use luminance componentthis removing one number editor completely ruin color component storedin general jpeg image need store component particular order might interleaved like example component image could stored followed cb etc header jpeg tell u component stored cb cr removing first number cause cb value interpreted cr cb creates ripple effect flip color across imagethere nothing jpeg specification say must use ycbcr jpeg image find use tends produce higher quality image subsampling compared rgb take granted though see grid look like subsample component individually across rgb well ycbcr subsample percent move slider adjust amount subsampling applied removing bit blue noticeable removing red green six million cone eye sensitive red green bluesubsampling component bottom left greatest effect image quality even tiny bit already noticeable move slider see removing greater percentage component affect imageconverting image rgb ycbcr make file size smaller make easier find le noticeable detail remove second step actual lossy compression happens idea finding new way represent data make compressible heart next layer discrete cosine transform quantizationthis layer compression largely defining feature jpeg color converted ycbcr component compressed individually focus component rest article byte component look like layer applied hint try clicking pixel image see line editor represents try removing number end adding zero individual number make effect obviousat first glance seems like poor compression pixel image yet take number represent luminance worse compressing notice value fact trailing zero removed change image leaf number make four time smaller layer lie secret checkerboard pattern unlike effect seen appearance pattern glitch fact building block entire image every line editor contains exactly number known discrete cosine transform dct coefficient correspond intensity unique patternsthese pattern formed cosine wave look like discrete cosine transform coefficient credit jez swanson image show individuallythese pattern special form basis image familiar linear algebra mean image anything imagine made specific pattern discrete cosine transform process breaking image block converting block combination coefficient would form circle combining pattern cat face click go back grid patternsit seems like magic say image represented using specific pattern thing saying location earth represented using two number longitude latitude often treat surface earth twodimensional two number needed image sixtyfourdimensional need sixtyfour numbersin term compression obvious help u need sixtyfour number represent image better storing sixtyfour luminance component reason converted three number rgb three number ycbcr allows u remove detail le noticeableit hard see exactly detail removed compression step look like jpeg applies discrete cosine transform block pixel time however reason apply whole image look like apply dct component entire image remove number end almost noticeable change notice set first five number zero ignoring first make image darker already obvious differenceget update parametric pressthe number beginning represent lower frequency change image eye better detecting number towards end represent higher frequency change harder u see notice gone see eye see isolate high frequency detail setting first number zerowhat looking area image greatest change one pixel next cat eye whisker fuzzy blanket shadow bottom left corner stand taken even setting first number zero high frequency detail jpeg remove compression step converting color dct coefficient lossy operation quantization step lossy value high frequency close zero removed select lower quality setting creating jpeg image increase threshold many value removed lead smaller file size blockier image version image first section time smaller looked blocky block represented far fewer dct coefficient compared higher quality version one really cool thing technique progressively stream picture imagine seeing blurry version whole image slowly seeing become detailed download progress dct coefficient available actually possible jpeg commonly usedjust fun look like using number number pretty blurry almost recognizable runlength delta huffman encodingall compression step far lossy last layer contrast lossless remove information make file size significantly smallerhow compress something without throwing away information think would represent simple solid black imagejpeg us number represent much better think encoding scheme represent image using byte possible smallest could think four byte three specify color one specify many pixel color idea expressing repeated value concisely way called runlength encoding lossless recover encoded data exactly beforethe file size solid black jpeg image much bigger four byte remember dct layer compression applied block time minimum need one dct coefficient pixel block need one instead storing one dct coefficient followed zero image runlength encoding allows u store one number say rest zero deltaencoding technique storing byte relative value compared something instead storing absolute value reason editing certain byte change color subsequent pixel example instead would start store much need add subtract get next number deltaencoded sequence transformed data smaller original compressible applying delta encoding runlength help lot still remaining completely lossless compression stepdelta encoding one technique applied outside block dct coefficient first one constant wave function see solid color represents average brightness block luminance component average blueness cb component etc first value dct block called dc value dc value deltaencoded relative one changing brightness first block affect block imagethis leaf one final mystery changing single number completely wreck image property compression layer far answer lie jpeg header first byte contain metadata image like width height omitted byte editor farbelow original image header includedwithout header practically impossible least difficult decode jpeg image would trying describe painting started invent word communicate saw probably going concise description since define word mean exactly want communicate would meaningless anyone methis may sound ridiculous exactly going every single jpeg image compressed code specific particular image code defined dictionary stored header technique called huffman encoding dictionary called huffman table table marked header two byte followed color component may huffman tablechanges huffman table dramatic effect image changing second line good example changing anything line work toothe huffman table dramatic effect image tell u read individual bit far dealing binary number decimal hide fact want store number byte would look like byte must exactly eight bit even need one bitthis potentially huge waste storage lot small number huffman encoding technique allows u relax requirement number must occupy eight bit mean see two huffman table could actually three value extract need first break individual one neat trick knowledge strip header jpeg image save separately effectively making read facebook actually make jpeg image even smalleranother thing change huffman table slightly anyone else look like corrupted image would know magic edit needed fix itthen follow table figure group example could first six bit decimal followed another five bit finally last four bit threethis difficult make sense byte layer compression byte actually represent seem represent go detail extract huffman table translate bit article many good resource curiousso summarize take decode jpeg image need extract huffman table header decode bitsextract discrete cosine transform coefficient colorluminance component block undoing runlength delta encodingscombine cosine wave based coefficient get back pixel value block known inverse discrete cosine transform scale chrominance component subsampled header information convert resulting ycbcr pixel rgbdisplay image lot work view simple cat picture love see jpeg humancentric technology relies quirk perception achieve compression rate far greater possible general purpose technique understand jpeg work imagine many technique extended domain example applying deltaencoding video produce huge file size reduction since often area change frame background code article open source includes instruction replacing image byte editor ownomar shehata graphic programmer cesium working open source webbased map grew alexandria egypt currently life philadelphia paedited matthew conlen victoria uren
143,Lobsters,visualization,Data Visualization,How to do reproducible research in Ruby with gKnit,https://medium.com/@rodrigo.a.botafogo/how-to-do-reproducible-research-in-ruby-with-gknit-c26d2684d64e,reproducible research ruby gknit,reproducible research ruby gknit introduction r markdown r markdown r markdown r markdown r markdown r markdown http githubcomscirubyiruby http vatlabgithubiososdocs gknitting document r markdown r markdown r markdown r markdown yaml header r markdown http bookdownorgyihuirmarkdownhtmldocumenthtml r markdown formatting header list http rmarkdownrstudiocomauthoringbasicshtml r chunk r markdown http yihuinameknitr function r graphic ggplot http library ruby chunk accessing r ruby ruby plotting require inline ruby code output function r markdown r markdown r markdown html output ruby chunk r markdown r markdown http cranrprojectorgwebpackageskableextravignettesawesometableinhtmlhtml including ruby file chunk documenting gem converting pdf r markdown http conclusion r markdown r markdwon installing gknit prerequisite preparation usage reference http,reproducible research ruby gknitrodrigo botafogo daniel mossé edit starting galaaz version gknit allow local variable code chunk thanks benoit comment suggestionintroductionthe idea literate programming first introduced donald knuth knuth main intention approach develop software interspersing macro snippet traditional source code natural language english document could compiled executable code time easily read human developer according knuth practitioner literate programming regarded essayist whose main concern exposition excellence style idea literate programming evolved idea reproducible research data software code documentation graphic etc needed reproduce research report could included single document set document distributed peer could rerun generating output reportsthe r community put great deal effort reproducible research sweave introduced allowed mixing r code latex generating high quality pdf document sweave document could include code result executing code graphic text contained whole narrative reproduce research knitr developed yihui xie rstudio released replace sweave consolidate one single package many extension addon package necessary sweavewith knitr r markdown also developed extension markdown format r markdown knitr possible generate report multitude format html markdown latex pdf dvi etc r markdown also allows use multiple programming language r ruby python etc documentin r markdown text interspersed code chunk executed code result become part final report although r markdown allows multiple programming language document r python reticulate package persist variable chunk language ruby every chunk start new process thus data lost chunk unless somehow stored data file read next chunkbeing able persist data chunk critical literate programming otherwise flow narrative lost effort save data reload although might first seem like small nuisance able persist data chunk major issue example let take look following simple example want show create list use let first assume data persisted chunk next chunk create list would need save file save need somehow marshal data binary format lst rlist b c lstsaverds lstrds next chunk variable lst used need read back valuelst rreadrds lstrds put lst b c single code dozen variable might want use reuse chunk clearly approach becomes quickly unmanageable probably problem rare see r markdown document ruby communitywhen variable used accross chunk overhead needed lst rlist b c code added hereputs lst b c python community effort code text integrated environment started around first decade ipython released fernando pérez spun project jupyter ipython creating webbased interactive computation environment jupyter used many language including ruby iruby gem http githubcomscirubyiruby order multiple language jupyter notebook so kernel developed http vatlabgithubiososdocs gknitting documentthis document describes gknit gknit based knitr r markdown knit document written ruby andor r output available format r markdown gknit allows ruby developer literate programming reproducible research allowing single document text codegknit run atop graalvm galaaz integration library ruby r see bellow gknit ruby variable persisted chunk making ideal solution literate programming language also since based galaaz ruby chunk access r variable polyglot programming ruby r quite naturalgalaaz already describe following post blog post r markdown interested user directed following link detailed information capability usein post describe main aspect r markdown user start gknitting ruby r document quicklythe yaml headeran r markdown document start yaml header stored file rmd extension document following header gkitting html document title reproducible research ruby gknit author rodrigo botafogo daniel mossé university pittsburgh tag tech data science ruby r graalvm date output htmldocument selfcontained true keepmd true pdfdocument includes inheader stygalaazsty numbersections yes information option yaml header check http bookdownorgyihuirmarkdownhtmldocumenthtmlr markdown formattingdocument formatting done simple markup header header header header list item item item item item item item item item r markdown formatting go http rmarkdownrstudiocomauthoringbasicshtmlr chunksrunning executing ruby r code actually really interest u bloginserting code chunk done adding code block delimited three back tick followed open curly brace followed engine name r ruby rb include optional chunklabel option shown bellow enginename chunklabel chunkoptions instance let add r chunk document labeled firstrchunk simple code create variable print follows r firstrchunk vec c print vec block added r markdown document gknitted result vec c print vec let say want analysis code print result code need add option echo false r secondrchunk echo false c vec block show document observe code shown see execution result white box description available chunk option found http yihuinameknitrlet add another r chunk function definition example vector rvec created new function reducesum defined chunk specification r datacreation rvec c reducesum function reduce sum aslist look like executed concise presentation show chunk definition longerrvec c reducesum function reduce sum aslist possibly another chunk access vector call function follows print rvec reducesum rvec graphic ggplotin following chunk create bubble chart r using ggplot include document note directive code include image occurs automatically mpg dataframe natively available r galaaz wellfor reader knowledgeable ggplot ggplot graphic library based grammar graphic wilkinson idea grammar graphic build graphic adding layer plot information found http plot bellow mpg dataset base r used data concern citycycle fuel consumption mile per gallon predicted term multivalued discrete continuous attribute quinlan first mpg dataset filtered extract car following manumactures audi ford honda hyundai stored mpgselect variable selected dataframe passed ggplot function specifying aesthetic method aes displacement disp plotted x axis city mileage axis lab layer pas title subtitle plot basic plot g geomjitter added plot car manufacture color colmanufactures size car point equal high way consumption size hwy finally last layer plotter containing linear regression line method lm every manufacturer load package datalibrary data mpg package mpgselect mpg mpg manufacturer c audi ford honda hyundai scatterplotthemeset themebw preset bw themeg ggplot mpgselect aes displ cty lab subtitle mpg displacement v city mileage title bubble chart g geomjitter aes colmanufacturer sizehwy geomsmooth aes colmanufacturer method lm sef ruby chunksincluding ruby chunk easy including r chunk document change name engine ruby also possible pas chunk option ruby engine however version accept option available r chunk future version add option ruby firstrubychunk example ruby chunk called firstrubychunk one important aspect chunk label duplicated chunk label duplicated gknit stop erroranother important point ruby chunk evaluated scope class called rubychunk make sure variable available chunk made instance variable rubychunk class following chunk variable b c standard ruby variable vec two vector created calling c method r modulein galaaz r module allows u access r function transparently c function r function concatenates argument making vectorit clear requirement gknit call use r function gknit knit standard ruby code even general text without code b u c output function vec rc rc next block variable vec used printedputs aputs vec standard ruby array vec vector behave accordingly multiplication work expectedaccessing r rubyone nice aspect galaaz graalvm variable function defined r easily accessed ruby next chunk read data r us reducesum function defined previously access r variable ruby function applied ruby symbol representing r variable since r variable called rvec ruby symbol ace rvec thus rvec retrieves value variableputs rvec order call r function r module used followsputs rreducesum rvec plottingwe seen example plotting r plotting ruby require anything different plotting r following example plot diverging bar graph using mtcars dataframe r data extracted motor trend u magazine comprises fuel consumption aspect automobile design performance automobile model ten aspect mpg mile u galloncyl number cylindersdisp displacement cuin hp gross horsepowerdrat rear axle ratiowt weight lb qsec mile timevs engine vshaped straight transmission automatic manual gear number forward gearscarb number carburetor copy r variable mtcars ruby mtcars variable mtcars mtcars create new column carname store car name used plotting rownames data frame used data plotting mtcarscarname rrownames mtcars compute normalized mpg add new column called mpgz note mean value mpg obtained calling mean function vector mtcarsmpg standard deviation sd vector rounded two digit round mtcarsmpgz mtcarsmpg mtcarsmpgmean mtcarsmpgsd round create new column mpgtype function ifelse vectorized function look every element mpgz vector value return otherwise return mtcarsmpgtype mtcarsmpgz ifelse order mtcar data set mpgz vector smaler larger value mtcars mtcars mtcarsmpgzorder convert carname column factor retain sorted order plot mtcarscarname mtcarscarnamefactor level mtcarscarname let look first record final data frameputs mtcarsheadrequire ggplotputs mtcarsggplot eaes x carname mpgz label mpgz rgeombar eaes fill mpgtype stat identity width rscalefillmanual name mileage label rc average average value rc rlabs subtitle normalised mileage mtcars title diverging bar rcoordflipinline ruby codewhen using ruby chunk code output formatted block seen formatting always desired sometimes want result ruby evaluation included middle phrase gknit allows adding inline ruby code rb engine following chunk specification create inline ruby text text inline ruby accessing variable b value rb put b followed text text inline ruby accessing variable b value u followed text note important add new line code block want everything one line resulting following sentence inline ruby codethe output functionhe previously used standard put method ruby chunk order produce output result put seen previous chunk use formatted inside white box follows code block many time however would like processing ruby chunk result processing generate output included document typed r markdown documentfor example suppose want create new heading document heading phrase result code processing maybe first line file going read method output add output typed r markdown documenttake look variable c defined previous block c output function output function actually name section created using output function inside ruby chunkthe ruby chunk generate heading ruby heading output c three way add heading r markdownhtml output ruby chunkswe seen use method output add text r markdown document technique also used add html code document r markdown html code typed directly document properly renderedhere instance table definition html output document table style tr th firstname th th lastname th th age th tr tr td jill td td smith td td td tr tr td eve td td jackson td td td tr table manually creating html output always easy desirable specially intend document rendered format example latex also table look ugly kableextra library great library creating beautiful table take look http cranrprojectorgwebpackageskableextravignettesawesometableinhtmlhtmlin next chunk output mtcars dataframe r nicely formatted table note retrieve mtcars dataframe using mtcars rinstallandloads kableextra output mtcars kablekablestylingincluding ruby file chunkr language created easy fast statistician use far know language used developing large system course large system library r focus language developing statistical model distribute peersruby hand language large software development system written ruby dozen hundred even thousand file document large system literate programming expect developer add file single rmd file gknit provides include chunk engine include ruby file typed rmd fileto include file following chunk created name file included extension rb need added relative option included treated true relative true ruby requirerelative semantics used load file false ruby loadpath searched find file require include filename relative truefalse bellow include file modelrb directory blogthis code us r caret package split dataset train test set caret package important useful package data analysis hundred function step data analysis workflow use caret split dataset like using proverbial cannon kill fly use show integrating ruby r using even complex package caret trivial galaaza word advice caret package lot dependency installing linux system time consuming operation method rinstallandloads install package already installed take include model require galaaz load r caret package present installs rinstallandloads caretclass model attrreader data attrreader test attrreader train def initialize data percenttrain seed rsetseed seed data data percenttrain percenttrain seed seed end def partition field trainindex rcreatedatapartition datasend field p percettrain list false time train data trainindex test data trainindex end endmtcars mtcarsmodel modelnew mtcars percenttrain modelpartition mpg put modeltrainheadputs modeltestheaddocumenting gemsgknit also allows developer document load file directory rmd filehere example loading findrb file truffleruby example relative set false ruby look file loadpath user need directory include find relative false frozenstringliteral true findrb find module processing file given directory find module support topdown traversal set file path example total size file home directory ignoring anything dot directory eg homessh require find totalsize findfind env home path filetestdirectory path filebasename path findprune nt look directory else next end else totalsize filetestsize path end end module find call associated block name every file directory listed argument recursively subdirectory return enumerator block given see find module documentation example def find path ignoreerror true yield path blockgiven return enumfor method path ignoreerror ignoreerror fsencoding encodingfind filesystem pathscollect raise errno enoent unless fileexist ddup path path pathtopath pathrespondto topath enc pathencoding encoding usascii fsencoding pathencoding p path file psshift catch prune yield fileduptaint begin filelstat file rescue errno enoent errno eacces errno enotdir errno eloop errno enametoolong raise unless ignoreerror next end sdirectory begin f dirchildren file encoding enc rescue errno enoent errno eacces errno enotdir errno eloop errno enametoolong raise unless ignoreerror next end fssort fsreverseeach f f filejoin file f psunshift funtaint end end end end nil end skip current file directory restarting loop next entry current file directory directory recursively entered meaningful within block associated find find see find module documentation example def prune throw prune end modulefunction find pruneendconverting pdfone beauty knitr input converted many different output one useful format course pdf order converted r markdown file pdf necessary latex installed system explain install latex plenty document web showing proceedgknit come simple latex style file gknitting blog pdf document yaml header generate blog pdf format instead html title gknit ruby r knitting galaaz graalvm author rodrigo botafogo tag galaaz ruby r truffleruby fastr graalvm knitr gknit date october output pdfdocument includes inheader stygalaazsty numbersections yes pdf document seen http order reproducible research one main basic tool needed systhem allows literate programming text code possibly set file compiled onto report easily distributed peer peer able use set file rerun compilation obtaining exact original report gknit system ruby r us r markdown integrate text code chunk code chunk either part r markdwon file imported file system ideally reproducible research file needed rebuild report easilly packed together zipped directory distributed peer reexecutionone promise oracle graalvm usersdevelopers able use best tool task hand independently programming language tool written developed implemented galaaz atop graalvm truffle interop message time effort wrap ruby r galaaz wrap knitr gknit fraction fraction fraction one man effort couple hour day approximately six month time require implement original tool trying reimplement r package ruby would require effort taking python implement numpy panda supporting library unlikely effort would ever done graalvm allowed ruby profit almost free huge set library tool make r one used language data analysis machine learningmore interesting wrapping r library ruby ruby add value r allowing developer use powerful modern construct code reuse strong point r shown blog r ruby easily communicate r structured class module way greatly expands power readabilityinstalling gknitprerequisitesgraalvm trufflerubyfastrthe following r package automatically installed necessary could installed prior using gknit desired installation r package requires development environment time consuming linux gnu compiler tool enough sure needed macpreparationusagereferencesknuth donald e literate programming comput j oxford uk oxford university press http leland grammar graphic statistic computing berlin heidelberg springerverlag
144,Lobsters,visualization,Data Visualization,Why are my Go executable files so large?,https://www.cockroachlabs.com/blog/go-file-size/,go executable file large,personal blog overview tree map http githubcomknzgobinsizeviz background motivation cache thrashing building visualization method nm tree map fsn browser visualize go binary using tree map zoomable mike bostok zoomable treemaps example jahnichen jacques simpler example guglielmo celata decomposing go symbol decomposing cc symbol organizing data tree nested python dictionary using simple recursive function separate simplification program visualization using prepares svg canvas display function transition logic load data json attache tree map layout render example visualization simple program example program transformation process interactive visualization initial impression inside cockroachdb executable binary visual exploration analysis comparison cockroachdb version anyway comment go source code http go team decided make executable file larger save initialization time number function sizeperformance tradeoff use case oddity discussed previous article summary conclusion tree map published github cockroachdb copyright licensing http,get blog post inbox blog post originally published author personal blog overview built tooling extract detail content go executable file small application visualize information interactively zoomable tree map static screenshot app illustrates size compiled code example group module cockroachdb reason built help discover learn make go executable program larger would expect thanks tool made several discovery go build executable file wont believe found inside read source code public github http githubcomknzgobinsizeviz background motivation coworkers busy preparing latest release cockroachdb version cockroachdb released single program executable file containing functionality today latest build large stripped resp increase since cockroachdb released bit two year ago happened especially puzzling given source code currently cockroachdb source code cockroachdb increase source come binary size increase larger factor typically compiled code smaller source code compiled source lot comment yet binary make executable size larger source code question alone made curious meanwhile also personally care program size practical reason smaller binary cause le cache thrashing easier distribute deploy make container orchestration nimble additional reason would prefer cockroachdb release binary could become smaller figuring contain might suggest achieve building visualization method goal find clarity inscrutable executable data started without knowing exactly achieve knew standard unix utility nm display size individual entry excecutable file knew go provides halfbaked reimplementation go tool nm however even small program go contain dozen entry ten thousand particular file looking needed overview also knew tree map ever since movie jurassic park featured fsn browser visualization represents sized hierarchical example file disk case also like entry inside executable visual element whose size screen proportional size byte disk thus decided connect two visualize go binary using tree map furthermore reminding potentially ten thousand entry visualize decided upfront would good attempt represent simultaneously screen thus went looking zoomable tree map finally already learned basic wanted learn decided would use exercise went search zoomable tree map favorite search engine discovered native support tree map provided input data suitable format initially started tinker mike bostok zoomable treemaps quickly ran issue feature wanted use available mike code us modern run major api change converting example even seemed nontrivial instead set find example built discovered example jahnichen jacques inspired mike bostok finally simpler example guglielmo celata inspired simpler implementation example worked using hierarchical data set loaded csv json particular schema main thinking exercise thus massage output nm format suitable load rest work simpler adapt example found online something made sense type data working go executable binary contains per go tool nm size two type entry first column address interest second column size third column entry type interest either last part symbol entry build tree visualization thus need decompose symbol name component group symbol hierarchy decomposing go symbol intuitively go symbol contains hierarchical package path eggithubcomlibpq packagelocal name packagename name either global package eg main method name receiver type prefix eg file write model accurately describes large majority symbol readily decomposed using simple regular expression however quickly come across exotic name fit model cryptotls r goitab compressflatebyliteral sortinterface go struct ioreader iocloser close databasesqlglob encodingjsonfloatencoderencodefm thus iterated expand simple regular expression properly decompose variety name found go binary result bit gnarly found example program produce following size path name crypto tl gobytes compress flate goitab byliteral sortinterface go struct ioreader iocloser close database sql glob encoding json floatencoder encodefm runtime gcmarkdone decomposing cc symbol intuitively cc symbol contains hierarchical namespace path egstd google protobuf variable function name looking realworld binary easily find many item fit simple model r void rocksdb jsonwriter addvalue int int const rocksdb anonymous namespace posixenv nownanos rocksdb numbertostring abi unsigned long rocksdb posixrandomrwfile sync clone google protobuf internal logmessage operator long using technique iterated simple regular expression decompose variety symbol encountered even went one step chose decompose identifier underscore boundary result regular expression rather complex found example program produce following size path name rocksdb jsonwriter void addvalue int int const rocksdb anonymous namespace posixenv nownanos rocksdb posixrandomrwfile sync clone google protobuf internal logmessage operator long difficulty arises fact c symbol contain arbitrarily amount nested template parameter parenthesis type regular expression match recursively current implementation thus restricted support level nesting appears insufficient capture symbol program interest symbol contain level nesting chose exclude symbol keep regular expression target analysis size excluded symbol negligible anyway organizing data tree decomposing path component symbol program creates nested python dictionary using simple recursive function however result strategy path b c something like child child b child c whereas visualization code really want child name child name b child name c built separate simplification program turn former format latter reason separated code two program decomposition symbol rather expensive satisfied decomposition wanted ability iterate quickly tree transform without decompose additionally simplification program collapse flattens multiple hierarchy level single child one level combined name example hierarchy b c x becomes abc x visualization using original tree map example initially designed mike bostok modified jahnichen jacques guglielmo celata operates thus prepares svg canvas named html chart entity defines display function given computed tree map layout creates grandparentparentchild visualization svg display function internally defines transition logic zoom clicking canvas load data json attache tree map layout render using aforementioned facility top logic previous author added following example visualization simple program example program use following go code package main import fmt var x struct x int func main fmtprintln hello world x choose use large struct variable x main package becomes significant size compared imported runtime object program compiled usual go build hellogo transformation process use following command go tool nm size hello hellosymtab hellosymtab hellodicpy simplifypy hellodicpy hellojs interactive visualization following html code sufficient html head meta httpequiv contenttype content texthtml link rel stylesheet type textcss href treemapcss head body p class chart id chart p script src type textjavascript script script src script script src script script src script script src type textjavascript script script type textjavascript viewtree chart exampledatahellojs script body html render follows ensure javascript enabled although simple executable file appears contain go symbol actually contain cc symbol however size negligible initially appear mere line right side tree map clicking line may able zoom obtain initial impression small program contains line source code compiles binary breakdown size follows package size runtime main unicode reflect fmt strconv sync internal syscall others remainder addition code compiled source size compilergenerated type equality hashing function accumulated box typeinfo tree map following becomes clear quickly go standard library well modularized importing one function fmtprintln pull code even accounting fmtprintln dependency predictable code main program still left wonder code runtime package zooming see taken one single entry name runtimepclntab code main program supporting code fmtprintlncombined come back inside cockroachdb executable binary visual exploration applying tool recent cockroachdb build one find following analysis exploring visualization discover total entry size cc entry including rocksdb go entry including compiled directly cockroachdb source code dependency runtime package wait established simple example runtime size become increase going zooming mystery revealed increase went single object runtimepclntab entry package runtime appear differ program come back pclntab object later comparison cockroachdb version visualization prerelease build cockroachdb reference data cockroachdb total entry cc entry including rocksdb go entry including compiled cockroachdb source dependency runtime package come directly pclntab recalling initial problem statement cockroachdb increased source code size thanks visualization observe compiled code directly originates cockroachdb source increased increase meanwhile runtimepclntab increased increase runtimepclntab anyway well documented however comment go source code suggests purpose linetable data structure mapping program counter line number purpose data structure enable go runtime system produce descriptive stack trace upon crash upon internal request via runtimegetstack api seems useful large url http hidden aforelinked source file redirects document explains happened go paraphrase prior go linker emitting compressed line table program would decompress upon initialization runtime go decision made preexpand line table executable file final format suitable direct use runtime without additional decompression step word go team decided make executable file larger save initialization time also looking data structure appears overall size compiled binary superlinear number function program addition large function come back sizeperformance tradeoff use case change design go go classic tradeoff performance time memory space tradeoff warranted program executed often eg microservice system tool worth accelerating startup time cost increase sizeif moreover program small relatively function reasonable assumption program executed often like microservices system tool increase size incurred byruntimepclntab negligible thus significant impact usability file transfer deployment orchestration etcin case go design sound warranted contrast program executed rarely eg system service run continuously background like say database server startup time amortized throughout lifetime process performance benefit accelerating startup clearif moreover program large ten thousand function reasonable assumption complex featuredriven enterprise software like database server increase size incurred runtimepclntab becomes inconveniently significantthis make go design advantageous case cockroachdb runtimepclntab could soon exceed entirety code compiled source even conservative assumption linear growth compiled code size year projected total size cockroachdb code runtimepclntab oddity go compiler linker always produce keep following entry even used function elided linker used go interface conversion table goitab every pair interface ever mentioned source codethis account cockroachdb binary predicted increase introduction intercomponent interface testing type equality hashing function type account cockroachdb binary predicted increase increasing use code generation optimization inside cockroachdb discussed previous article go us memory instead register pas argument return value across function call memoryaccessing instruction use longer machine encoding registeronly instructionsin experience specifically inflection point ratio source code size compiled code size monomorphic clike language targeting fixedlength instruction encoding andor memoryheavy calling convention size compiled code grows larger source code excluding comment whitespace see c thumb go targeting variablelength instruction encoding calling convention suitably utilizes compact instruction size compiled code becomes smaller source code see c decent compiler examined go summary conclusion understand internal structure executable file compiled go built visualization using zoomable tree map visualization published github tested work executable produced go version using tool analyzed space usage inside monolithiccockroachdb binary cockroach discovered majority growth cockroach time concentrated one object runtimepclntab object automatically generated go compiler support generation textual stack trace runtime example error report design choice made go cause object grow superlinearly number function program addition sum size cockroachdb runtimepclntab grew total amount source code increased compiled code design choice intended lower startup time program contrast previous design using compressed incidentally industry standard clike language even contemporary compiler performance goal relevant server software longrunning process like cockroachdb incurred space cost particularly inconvenient large featurerich program copyright licensing copyright raphael kena po permission granted distribute reuse modify document according term creative common attributionsharealike international license view copy license visit http
145,Lobsters,visualization,Data Visualization,The World’s Writing Systems,http://www.worldswritingsystems.org,world writing system,hentaigana english wikipedia newa scriptsourceorg brusha berkeley sei pungchen berkeley sei pungchung berkeley sei marchung berkeley sei karani berkeley sei old minahasa berkeley sei vithkuqi berkeley sei nasu berkeley sei nisu berkeley sei top,world writing system time region name unicode status f g l r z june june june june june march yet encoded living script historical script africa america central asia east asia europe middle east oceania south asia southeast asia oldest c c c c c hentaigana east asia c today unicode june living script english wikipedia c c newa south asia c today unicode june living script scriptsourceorg brusha central asia c yet encoded unicode historical script berkeley sei pungchen central asia c yet encoded unicode historical script berkeley sei pungchung central asia c yet encoded unicode historical script berkeley sei marchung central asia c c yet encoded unicode historical script berkeley sei karani south asia c c yet encoded unicode historical script berkeley sei old minahasa southeast asia c yet encoded unicode historical script berkeley sei vithkuqi europe c yet encoded unicode historical script berkeley sei c c nasu east asia c today yet encoded unicode living script berkeley sei nisu east asia c today yet encoded unicode living script berkeley sei top
146,Lobsters,visualization,Data Visualization,"Bubble Activity Graph, a better commit list for busy people",https://www.staticobject.com/blog/introducing_the_bubble_activity_graph,bubble activity graph better commit list busy people,,bill driven challenge best quantify valuable question defy quantification possible instinct may awakened bill age soft stuffed bunny orthodontist guessing number jelly bean gumball machine
147,Lobsters,visualization,Data Visualization,What Time Should You Post to Reddit?,https://maxcandocia.com/article/2017/Jul/29/what-time-to-post-to-reddit/,time post reddit,time post reddit max candocia reddit python scraper built additional note code data constraststhreadmodecsv,time post reddit max candocia july last updated update recent thorough analysis found posting anything social medium whether news article picture funny image combination thereof usually want reach largest audience posting reddit noticed success post largely determined time day day week submission posted factor whether post image article textonly submission used python scraper built order collect data article particular subreddits wish analyze among data collected score post roughly upvotes downvotes subreddit posted time post made domain post link using information formulate model describes attribute affect score specifically looking percent change score respect value time day day week whether post image post etc case approximated formula sign score log ab score timeofdayanddayofweek isimagepost istextpost lengthofsubmissiontitle logtransform score left side ensures term right side multiplicative effect score opposed additive right side treat time day day week post image post attribute independent factor scale score value ie controlling effect graph estimate effect time day day week six different subreddits sampled collectively use monday reference percentage percent increase score expect post given time versus monday u central time monday morning relatively good time post subreddits especially sunday even better time frame expected score higher reference monday saturday however seems fairly strong day image applies relatively small amount data help compare different set data sampled default subreddits well thread commenter comment history model generalizes reddit whole better tell similar story except tile change lot smoothly could repeat process general takeaway best time post reddit sunday monday saturday u central time next best time would within hour time range day time range day additional note technically transformation made score add score calculating percent change negative score calculated point equal score fractional score always decreasing score becomes negative code data r code used generate image download data file constraststhreadmodecsv library plyr library dplyr library htmltable library library scale setwd mydirectoryredditposting make filename possiblebetter subslash function x x gsub x return gsub x createthreadsplot function thread tnamenone group time increase significance data thread hour cut thread hour seq includelowesttrue rightfalse sourcehour level thread hour targethour c pm pm pm pm pm pm pm thread hour mapvalues thread hour sourcehour totargethour thread titlelen nchar ascharacter thread title thread logscore sign thread score log ab thread score thread isself thread ifelse isselft self post link post daysofweek c sunday monday tuesday wednesday thursday friday saturday thread dow factor daysofweek thread levelsdaysofweek weekdayhourgrid expandgrid targethour daysofweek make sure order right weekdayhourlevels paste weekdayhourgrid weekdayhourgrid better reference refmonday weekdayhourlevels c weekdayhourlevels weekdayhourlevels thread weekdayhour factor paste thread dow thread hour level weekdayhourlevels domain var thread imagesubmission factor c image submission nonimage submission thread domain c imgurcom iimgurcom iredditcom thread imagesubmission relevel thread imagesubmission refnonimage submission remove moderator post likely high thread thread filter isdistinguished f isstickied f ndatapoints nrow thread run linear model extract coefficient model lm logscore weekdayhour titlelen isself imagesubmission subreddit datathreads modelsummary summary model coefs modelsummary coefficient round sig fig coefs signif coefs used produce html output model summary display web sink subslash redditthreadsummarytable tname html print htmltable coefs sink format matrix show result coefmat asdataframe cbind varname rownames coefs coefs coefmat coefmat filter grepl weekdayhour varname coefmat rbind dataframe varnameweekdayhourmonday coefmat coefmat dow factor gsub hour gsub coefmat varname levelsdaysofweek coefmat hour factor gsub coefmat varname levelsrev targethour coefmat percent change exp asnumeric coefmat estimate save plot png png subslash expectedredditscore tname png print ggplot coefmat aes xhour ydow fill percent change geomtile xlab ylab ax selfexplanatory title ggtitle percent change expected reddit submission score based time posted subtitlepaste compared monday using comma ndatapoints tname submission themebw theme plottitle elementtext plotsubtitleelementtext sizesubtitlesize axistextxelementtext axistexty elementtext labelsscales percent geomtext aes labelscales percent percent change coordflip devoff load file create plot html table thread readcsv mydirectorycontraststhreadmodecsv createthreadsplot thread nintendoboardgamesrapclassicalmusicdemocratsconservative
148,Lobsters,visualization,Data Visualization,Runway: a tool for distributed systems design,https://runway.systems/,runway tool distributed system design,,
149,Lobsters,visualization,Data Visualization,What Charts To Use in System Dashboard Design,http://onemogin.com/observability/dashboards/practitioners-guide-to-system-dashboard-design-p3.html,chart use system dashboard design,part structure layout part presentation accessibility lita cho shawn moore rajesh raman joe ross table line chart run chart preattentive attribute line chart area chart use area chart stacked area chart best used sum important value bar chart moiré pattern stacked bar heat map gauge bullet range etc bullet graph others summary good part citation,part structure layout part presentation accessibility probably itching damned dashboard made enough theory chart use thanks lita cho shawn moore rajesh raman joe ross reviewing post table wait table visualization heck yes reminds u showing single value reason sort chart value using table quite effective trusty table table common wellunderstood visualization excel looking value table make finding value dimension related easy version may dense system dashboard adapt single value like table compressed something widgetworthy user need know single value sum average instant using simple number table excellent fit line chart line chart well suited data displaying line chart begin point connects point line worth saying loud run chart interpolation data give user sense shape time commonly hear people say metric trending watch update shape clear something happening latency line chart popular visualization embody many preattentive attribute minimum amount pixel line give u slope angle position color derive lot information without thinking hard even get fancy use line width intensity draw attention brown line clearly important one line chart close tab make everything line chart thing aware many line chart hide shape muddy color add perception latency generally make useless aside spotting outlier skip ahead heat map help line close hard differentiate line chart interpolate data two point line desirable case since shape provided aid perception unfortunately interpolation also hide missing information opposite make u think data really take example line chart earlier point reading point show get one reading change latency distance line might imply measurement really exist big change chart area chart first use area chart stacked occlusion hide data confusing even see anything green area chart best used whole sum important value showing contribution step make total duration share lot line chart show shape unfortunately shape also downfall one bottom area change area user may confused attribute change spotting real change situation tricky latency move around tell contributing change line suggests instead using area chart use single line chart showing sum additional chart showing contribution make spotting change significantly easier data area chart left chart show sum latency right chart show contributor contributor latency obvious see total bar chart line chart show shape bar chart show exact value system metric better using line chart exception would chart compare metric easily compare two time series using bar would tough bar chart aid comparison value interval clear interval association easy comparison length user choosing bar chart therefore mean user goal comparison value concern careful avoid moiré pattern happen bar small evenly spaced include little space bar aid visual separation seen stacked bar see stacked area chart rarely want use stacked chart unless focus whole value user difficulty comparing size stack heat map reach heat map line chart many line make sense heat map vary intensity color lot data packed small space occlusion hurt line chart heat map use overlap add color novel side effect showing banding overlap aiding pattern outlier detection line chart terrible everything outlier heat map show population grouped ability view data spot pattern free come decrease accuracy human easily differentiate intensity color say intensity limit distinctiveness mean heat map best deployed situation accuracy le important general shape visualization gauge bullet range etc use visualization limit data actually limit example displaying request per second gauge misleading maximum limit show percentage queue maximum depth using sort visualization incredibly helpful allows communicate limit well close value limit use type visualization metric basis comparison slos suitable use range bound orient user combining color yield quick understanding current value upper lower bound urgency current value sadly aware tool allow use bullet graph fullest form best usually find single bullet others deserve whole section pie chart human generally understand area pie slice use bar donut chart mostly cute way showing single value pie chart hole stacked line chart area chart worse since lack area fill make surprise avoid flame graph great us case really scope system dashboard profilers sparklines great supplement single value often lack context without familiar bit line chart proposes call sparkstrips add band colored hue orient reader sadly know tool support improvement box plot common tool dot plot use bar may use case rare data long period scatter plot rad correlation specialized case covering dial gauge data actually lower upperbounds presenting dial misleading also waste lot space summary flame missing weird visualization option tool let remind user understands dashboard chart visualization good use case broadens user base fall back guidance part choose visualization line probably want maybe others lobster chart use line chart great single value tabular chart excellent instantsingle value bar make great comparison small number series heat map utility please read next item series citation
150,Lobsters,visualization,Data Visualization,curv - a language for making art using mathematics,https://github.com/curv3d/curv,curv language making art using mathematics,curv language making art using mathematics doug moensorg getting started buildmd docsreadmerst http groupsgooglecomdforumcurv contributingmd hardware requirement dougmoen comfreek msys http enwikipediaorgwikiwindowssubsystemforlinux issue issue issue turbovnc virtualgl,curv language making art using mathematics doug moen doug moensorg curv programming language creating art using mathematics geometric modelling tool support full colour animation printing feature curv simple powerful dynamically typed pure functional programming language curv easy use beginner standard library predefined geometric shape plus operator transforming combining shape plugged together like lego make model coloured shape represented using function representation frep infinitely detailed infinitely large shape colour pattern described using mathematics represented exactly curv expose full power frep programming expert standard geometry library written entirely curv many demo seen shadertoycom reproduced curv using shorter simpler program expert package technique used shadertoy high level operation use beginner rendering gpu accelerated curv program compiled fragment shaders executed gpu curv export mesh stl obj file printing format support full colour printing shapewayscom least mesh defect free watertight manifold self intersection degenerate triangle flipped triangle getting started install software see buildmd documentation docsreadmerst mailing list http groupsgooglecomdforumcurv join mailing list using google account prompted create account nt want google account send email doug moensorg send invitation join list contribute see contributingmd hardware requirement linux macos window supported precisely ubuntu lts macos currently tested dougmoen window port tested comfreek curv us opengl recommended configuration gpu made intel amd nvidia using known working gpu driver see linux gpu need modern enough supported latest driver version gpu vendor gpu later work older gpus may work check list supported hardware driver macintosh need macos later system support metal curv fully supported premetal system hardware earlier curv program may work correctly window use msys build run native executable alternatively use window subystem linux wsl http enwikipediaorgwikiwindowssubsystemforlinux building running nonnatively however alternative vastly inferior msys since wsl gpu support far force u fall back software rendering see issue detail raspberry pi nt supported yet raspberry pi support planned believe curv could ported without great effort curv us glx create opengl context curv request opengl context nt supported opengl e supported might matter changing context type possibly small change raspberry pi hardware support feature plan use future release curv raspberry pi wo nt supported best support opengl e good enough apis currently used curv missing linux choice nvidia gpu nvidia closed source driver gpu supported latest nvidia driver work curv open source nouveau driver slow buggy curv run slow visual glitch nt mind driver hacking mitigation try see issue intel gpu using intel supplied open source driver based mesa gpu supported latest intel driver work curv mean intel hd graphic later amd gpu open source mesa driver version later amdgpupro closed source driver work testing report mesa version earlier bug amd issue prevents curv program running curv invoked within vnc session might direct access gpu hardware slow software renderer used instead gpu curv requires gpu accelerated vnc server try turbovnc combined virtualgl curv run inside vm might direct access gpu need ensure vm gpu accelerated curv picky gpu driver hardware old software run fine answer old software relies primarily triangle mesh representing rendering shape whereas curv us signed distance field represent shape signed distance field powerful hot new technology made practical modern gpus curv us shader program render shape us larger complex shader program old software place heavy atypical load gpu driver hardware old hardware old outdated driver software may prepared deal
151,Lobsters,visualization,Data Visualization,Sortraits: Portraits of Sorting Algorithms,https://wtracy.gitlab.io/sortraits/,sortraits portrait sorting algorithm,,sortraits one traditional rite passage new computer programmer go learning variety function called sorting algorithm arguably sorting misnomer function deal taking list item putting proper order separating different category used everywhere ranking search result alphabetizing address book dozen function described academia industry subtly different property new sorting algorithm improvement existing sorting algorithm endless source research paper faster others require le memory others adapted special hardware adapted special datasets project create portrait variety sorting algorithm portrait started one line pixel pixel assigned number larger number make brighter pixel smaller number make darker pixel run algorithm time algorithm move item around list add another row picture showing current state list continues list entirely ordered black left white right used several type starting list tried list shuffled random order tried list set reverse order tried starting ordered list interleaving pixel two half tried swapping two half tried swapping first last third even tried running algorithm already sorted list several algorithm insist completely rearranging list putting back order also tried difference visualization well pixel compared current value pixel value list properly ordered color pixel black different brighter pixel becomes area need work light area already sorted go dark collected interesting picture cropped resized several tinted several different color felt right enjoy
152,Lobsters,visualization,Data Visualization,Wikidata Query Service,https://query.wikidata.org/,wikidata query service,,interactive query editing localized user interface improvement please enable javascript use browser support
153,Lobsters,visualization,Data Visualization,Interactive Graphing Calculator,https://www.desmos.com/calculator,interactive graphing calculator,,
154,Lobsters,visualization,Data Visualization,How Bad Is Your Colormap?,https://jakevdp.github.io/blog/2014/10/16/how-bad-is-your-colormap/,bad colormap,appropriately ranty blogpost rainbow color map still considered harmful ten simple rule better figure,want take step toward joining incrowd chromaticallysensitive data viz geek best bet start bashing jet even nt know name guarantee read many scientific paper seen jet example snapshot plot neuroscience journal skewered appropriately ranty blogpost subject jet default colorbar originally used matlab default inherited early day python matplotlib package reason use jet numerous find good argument across web subdued nuanced argument start paper rainbow color map still considered harmful general visualization tip ten simple rule better figure add discussion nt already said well nothing really except code snippet shared let show
155,Lobsters,visualization,Data Visualization,Confounding via experimenting - One of the fundamental problems with current ML techniques,https://medium.com/mindsdb/confounding-via-experimenting-ecdb43eb2fc5,confounding via experimenting one fundamental problem current ml technique,confounding via experimenting one fundamental problem current ml technique read article blog prefer medium repeat reader visitor never read visitor already read confounder,confounding via experimentingone fundamental problem current ml techniquesyou read article blog prefer mediumlet assume working new company want figure whether new article worth featuring front page let call article data scientist want figure whether deliver front page deliver front page particular people never display front pagefor sake simplicity let assume metric use judge article quality many people finished reading articlelet say run experiment put front page randomly time number get people saw front page finished reading people saw front page read ityielding read ratio day featured bunch different article front page time number get people saw another article front page finished reading people saw another article front page read ityielding read ratio thus new article obviously superior time better article making people read feature front page oftenrepeat readersbut wait one variable could previously collected user visiting front page article previously readarmed new variable could try look newer precise pattern feature front page let say want see people already read interested reading twicevisitors never read saw front page finished reading saw front page read ityielding read ratio saw another article front page finished reading saw another article front page read ityielding read ratio visitor already read saw front page finished reading saw front page read ityielding read ratio saw another article front page finished reading saw another article front page read ityielding read ratio displaying worst repeat reader new reader better aggregate make absolutely sense put like thatwell make sense take closer look datawhat notice people already read tended read article way often general done oversampled group already read delivering front page visitor delivering v delivering article thus unknowingly introduced potential confounder analysis biased delivery previous reader aof course could try controlling confounder sample way bias delivery towards people previously read athe problem requires u rerun experiment thus potentially displaying much bad article little quality article even rerun experiment remove observation remove bias data still left strange phenomenon people read seem read articleshere two hypothesis easily think seemingly strange occurrence reading somehow increase read ratio article possibly quality article encouraged visitor read article trend le exacerbated visitor already read itb visitor already read heavy reader tend read lot article usual audience
156,Lobsters,visualization,Data Visualization,Humanities Approaches to Graphical Display (2011),http://www.digitalhumanities.org/dhq/vol/5/1/000091/000091.html,humanity approach graphical display,abstract introduction data capta information visualization graphical expression interpretation time temporality space spatiality conclusion,abstract digital humanist adopted visualization tool work borrowed method developed graphical display information natural social science tool carry assumption knowledge observerindependent certain rather observer codependent interpretative paper argues need humanity approach graphical expression interpretation begin concept data given rethought humanistic lens characterized capta taken constructed next form graphical expression capta need nuanced show ambiguity complexity finally use humanistic approach rooted codependent relation observer experience need expressed according graphic built interpretative model summary data understood capta convention created express observerindependent model knowledge need radically reworked express humanistic interpretation introduction digital visualization tool become ubiquitous humanist adopted many application gi mapping graph chart statistical display developed discipline argue graphical tool kind intellectual trojan horse vehicle assumption constitutes information swarm potent force assumption cloaked rhetoric taken wholesale technique empirical science conceals epistemological bias guise familiarity naturalized google map bar chart generated spread sheet pas unquestioned representation hallmark realist model knowledge need subjected radical critique return humanistic tenet constructedness interpretation fore realist approach depend upon idea phenomenon observerindependent characterized data data pas mere description priori condition rendering observation act creating statistical empirical subjective account image phenomenon observed collapse critical distance phenomenal world interpretation undoing basis interpretation humanistic knowledge production based know seem ready eager suspend critical judgment rush visualization least humanist beginning play intersection statistic graphic ought take detour substantial discussion sociology knowledge developed critique realist model data gathering best need take challenge developing graphical expression rooted appropriate interpretative activity realist approach visualization assume transparency equivalence phenomenal world selfevident apprehension mere mechanical task fundamentally odds approach humanity scholarship premised constructivist principle would argue even realist model presume observerindependent reality available description method presenting ambiguity uncertainty nuanced term would useful significant progress made visualizing uncertainty data model gi decisionmaking archaeological research domain important distinction need clear outset task representing ambiguity uncertainty distinguished second task using interpretation arise observercodependence characterized ambiguity uncertainty basis representation constructed difference putting many kind point map show degree certainty shade color degree crispness transparency etc creating map whose basic coordinate grid constructed effect ambiguity first instance standard map nuanced symbol set second create nonstandard map express constructedness space rely rethinking approach visualization assumption underpin overturn assumption structure convention acquired domain requires reexamine intellectual foundation digital humanity putting technique graphical display foundation humanistic base requires first foremost reconceive data capta difference etymological root term data capta make distinction constructivist realist approach clear capta actively data assumed able recorded observed distinction world difference arises humanistic inquiry acknowledges situated partial constitutive character knowledge production recognition knowledge constructed taken simply given natural representation preexisting fact distinction data capta covert suggestion humanity science locked intellectual opposition humanist insight intellectual discipline create object inquiry selfconscious historian science clinical researcher natural social science insists true work statistician extremely savvy artifice social scientist may divide realist constructivist foundation research none come rhetorical character statistic history knowledge history form expression knowledge form change said expressed represented era distinct attendant caveat reservation attend study sequence human intellectual event keeping u assertion progress noting fact change transformation historical critical study science full discussion material humanity thus representation knowledge crucial cultural force facet production graphical form display come fore digital humanity last decade borrowed mechanistic approach realism common conception data form need completely rethought humanistic work reiterate said sheer power graphical display novelty within humanity community newly enthralled toy data mining display seems produced momentary blindness among practitioner would never tolerate literal assumption textual work polemic set forth outline several basic principle proceed differently suggesting needed set application display humanity new approach us humanity principle constitute capta display stake said many context authority humanistic knowledge culture increasingly beset quantitative approach operate claim certainty bureaucracy process human activity statistical mean method grounded empirical science put service social science humanity crudely reductive manner basic principle critical thought violated least put far side intervene ideological system humanist value embrace enact must counter conceptual tool demonstrate humanity principle operation execution display digital humanity longer afford take tool method discipline whose fundamental epistemological assumption odds humanistic method paper call imaginative action intellectual engagement challenge rethinking digital tool visualization basic principle humanity take principle first humanity committed concept knowledge interpretation second apprehension phenomenon physical social cultural world constructed constitutive act mechanistic naturalistic realist representation preexisting selfevident information nothing intellectual life selfevident selfidentical nothing cultural life mere fact nothing phenomenal world give rise record representation except constructed expression rhetorical force graphical display important field design adopted without critical scrutiny full force theoretical insight let suggest mean visualization informational temporal spatial phenomenon data capta information visualization graphical expression interpretation set bar chart graph first act draw set one ax divide unit conventional form graphical display information make use formal unambiguous system standard metric chart use simple often misleading geometric form lend legible comparison value proportion exhibition state change across time line bar column pie chart common familiar form render quantitative relation transparency seems natural instance look change population across series year particular location simply accept one year next rise drop occurred number person alive x city x country x time pie chart showing percentage resource allocation national budget seems completely transparent selfevident even bar chart could compare daylight hour different longitude average size men woman different country number hospital bed different institution single geographical location raise skeptical eyebrow right yes rendering statistical information graphical form give simplicity legibility hide every aspect original interpretative framework statistical data constructed graphical force conceals statistician know well preexist parameterization data capta taken given constructed interpretation phenomenal world inherent expose constructedness data capta number systematic change applied creation graphical display foundation purpose humanistic approach qualitative display graphical information read last formulation carefully humanistic approach mean premise rooted recognition interpretative nature knowledge display conceived embody qualitative expression information understood graphically constituted factor contains explicit critique assumption conventional display quantitative common currency let work specific case show principle humanistic approach qualitative display graphical information demonstrated example use bar chart mentioned one compare percentage men woman various national population present time figureâ basic bar chart compare number men top bar number woman bottom bar seven different nation f present time assumption quantity number entity nation identity gender temporality selfevident graphic credit eskandar certain issue immediately arise standard critique data introduces reservation appearance certainty chart present count nation transient immigrant population documented kind time span count present within population counted basic bar chart would looked like series band showing discrete category information finite certain number due statistical caveat noted problem gender definition assumes simple binary distinction men woman assumption much debated highly problematic gender understood factor behavior physiological change social expectation dress etc nation function permeability border citizenship pattern naturalization rule immigration regulation quota border policy bar chart reifies several category naturalizing discrete fixed national population time span gender defined simple binary representation modified changing term premise constructed would representation gender sliding scale look like would permeable boundary nation whose population cross others border shown would dissolve bar basic structure would notion present defined figureâ chart gendered identity modified nation top bar contains changing gradient indicating continuum male enfant adult country e gender ambiguity factor genetic mutation adaptation thus showing basis gendered individual identified counted complicated many factor country f woman register individual coming reproductive age thus showing quantity effect cultural condition selfevident fact movement men back forth across border nation b c make unstable entity graphic credit eskandar point making basic category supposedly quantitative information fundamental parameter chart production already interpreted expression present category interpretation riven ambiguity uncertainty representational force visualization instance assumption gender binary category stable across cultural national community assertion argument gendered identity defined binary term selfevident fact matter often olympic committee come need single rigid genital criterion determine difference recognizing always interpreted character data shifted data capta acknowledging constructedness category according us expectation put service nation gender population time span selfevident stable entity exist priori subject qualification reservation bear directly arise reality lived experience presentation comparison original formulation grotesquely distorts complexity also basic ambiguity phenomenon investigation gender nation population challenge facing merely accommodate higher level complexity data representation model would require one set consideration modification profound challenge face accept ambiguity knowledge fundamentally interpreted condition data constructed word realization data capta humanistic aspect approach obvious knowledge created acknowledgement fundamentally constructed nature premise commensurate principle certainty guiding empirical realist method humanistic method counter idea reliably repeatable experiment standard metric assume observer independent phenomenon definition humanistic approach centered experiential subjective condition interpretation phenomenon observer codependent necessarily equal measure viewer gazing sublime landscape recording migration large scale may affected phenomenon phenomenon observation theoretical physicist werner heisenberg never suggested relation intervening observer effect phenomenon symmetrical merely codependent introduced concept uncertainty early century creating bar chart ambiguity degree uncertainty variable might cause champion legibility transparency unease shift away standard metric metric express interpretation essential move humanist andor constructivist across discipline emphasize expressive quality interpretation going characterize constructed information subjective expressing mark inflection formal way shift expressive metric graphic essential changing expression subjective information subjective expression perceived phenomenon subjectivity inflection feature interpretative approach capta expression idiosyncracy emotion individual quirk systematic expression information understood constructed phenomenon perceived according principle interpretation need conceive every metric factor x point view agenda assumption presumption simply convention qualifying metric factor condition character shift selfevident constructed interpretation motivated human agenda standard element graphic display statistical information simple limited scale division coordinate line scale figure circle rectangle curve bar column percentage pie chart form label number term sign movement flow state change arrow vector path ordering arrangement element within chart create another level information relational information relational information graphically produced ordering element size color alphabetical order texture shape feature happens graphical space resulting arrangement semantic value produced feature proximity grouping orientation apparent movement graphical effect take basic element graphical display rethink according humanistic principle conventional statistical graphic scale division equal unit humanistic interpretative graphic statistical graphic coordinate line always continuous straight humanistic interpretative graphic might break repetition curve dip interpretation stochastic probabilistic mechanistic uncertainty require mathematical computational model complex system scale figure label statistical graphic need clear legible case humanistic interpretative graphic since need quite bit work perhaps striking feature distinguishing humanistic interpretative constructivist graphical expression realist statistical graphic curve bar column percentage value would always represented discrete bounded entity conditional expression interpretative kind visual fuzzy logic graphical complexity thus edge might permeable line dotted broken dot point vary size scale degree ambiguity placement graphical strategy express interpreted knowledge situated partial rather complete employed systematically charting element though part intention disturb ground certainty convention statistical legibility based point view system introduced graph chart make evident perspectival position respect information inner standing point graphical rendering space true cartographic projection every map contains within coordinate system graphical expression set assumption place map drawn information space drawn point view rather observer independent reinsert subjective standpoint creation graphical expression finally point mark used specific node humanistic graph assumed many dimension complicates identity suggesting embeddedness existence system codependent relation information entity unit thus understood fictional abstraction serving purpose potential read relation number equally significant relation made evident approach destroys ground standard metric used abstract quantitative information human circumstance humanistic premise replace notion statistical concept selfidentity entangled codependence contingency may sound unduly complicated someone merely wanting count number pupil enrolled group calculate number pencil needed show budgetary expenditure per caput basis classroom example example instance administrative bureaucratic management show crudely conceived numeric statistic useful reductive circumstance tell u nothing whether pencil used whether pupil prepared disposed work whether budget effect learning outcome many factor come play assessment based metric extracted lived experience metric number x actually number factor particular intellectual assumption decision pupil factor seat room birthdates population illness etc pencil factor resource allocation metric metric something purpose humanistic study based statistical method even simplest technique counting address assumption involved category technique many based take another example work data mining known digital humanity counting number novel published given year involves enormous number interpretative decision intellectual dimension numeric assessment could figureâ chart show number new novel put print single publisher year figureâ fourteen novel shown relation time writing acquisition editing prepress work release thus showing publication date factor many process whose temporal range varied date work term cultural identity relevance considered relation number variable moment publication graphic credit eskandar instance novel mean context date appearance editing composition acquisition review distribution determined statistical method come play decision made counting object whose identity established interpretative decision many aspect constructedness play graphical presentation supposedly selfevident information formulated example number novel published conceals complexity interpretative factor bring numerics guise graphical legibility overstate perniciousness technique effect passing construction real violating premise humanistic inquiry challenge design graphical expression suited display interpreted phenomenon information subjective userdependent metric subjective display information subjective method graphical expression term subjective used shorthand interpretative construction registration point view position place agenda according parameterization occurs subjectivity individual inflection mere idiosyncracy meant put codependent relation observer phenomenon contrast presumption objectivity observerindependent phenomenon display information inflection affective experience easily use standard metric example chart show mood change degree attraction information related subjectivity created standard metric visual convention figureâ chart data affect record positive negative feeling course afternoon standard metric used graphical display quantized experience appears graphic credit eskandar next task complicated subjective information information whose constitution exhibit subjective character deviate standard norm using graphic variable intensity tone size color feature embody quality subjective information use graphical mean show inflected character demonstrating deviation standard norm way display look dynamic display way act one might imagine skittish point unstable grid display degree anxiety around particular event task instance point glow hot cold depending element approach would subjective even affective display information creating display whose structure arises subjective method graphical expression extends last example design basic visual structure figureâ chart subjective information shape metric activity given tonal value size weight order create mass volume determines dimension constitute box priori dimension used contain element created effect element distinctly different approach metric chart generated express codependent relation viewer experience rather display user experience independent observation temporal dimensional day depends upon relation among event mood activity predictably shape day made creation list graphic credit eskandar subjective grid show anxiety might widely varying set spacing show information display constituted variable aspect experience number family member present event instance recognizing subjective method anathema empirically minded make even convinced essential generation graphical display interpretative interpreted information basic principle underlying graphical display capta mark interpreted status interpreted knowledge situated observer codependent partial variable theory infinite always present degree measure virtue performative participatory character interpretative information interpretation depends upon expression individual reading particular set circumstance never presumes completeness observer independence requirement legibility increase unfamiliar graphic need labeling make explicit justification nonnormative seeming appearance advocating idiosyncracy intellectual solipsism systematic approach graphic appropriate principle humanistic principle readily applied graphical display temporal spatial information turn attention next two section principle temporality spatiality also given graphical expression humanistic approach time temporality since antiquity human conception time divided consider time given priori existing container within event occur consider time effect occurrence temporal relation take latter view relational structure temporality always constituted according inflection variable day equal minute hour time understood temporality succinctly stated follows temporality time factor x x variable fear speed anxiety foreshadowing regret reconsideration narration etc humanist deal representation temporality document created document narrated represented depicted temporality construction temporality across document temporality historical event also shape temporality emerges documentary evidence shape era season period epoch need way graph chart temporality approach suit basic principle interpretative knowledge conception temporality humanity document conform used social empirical science empirical science time understood continuous unidirectional homogenous metric standardized direction irreversible break fold hole wrinkle reworkings humanity time frequently understood represented discontinuous multidirectional variable temporal dimension humanity artifact often expressed relational term happened significant event retrospection anticipation factor heavily humanistic work model temporality arise historical literary document include multiple viewpoint temporal modeling project bethany nowviskie designed almost ten year ago made use basic insight order create graphical application working proof concept intent demonstrating graphical model could created intuitively interpretation used generate structured data result inverting sequence intellectual event radical move digital humanity especially time suggesting graphical knowledge could primary leading interpretation rather always functioning display already known assumed known wanted demonstrate visual space could primary site intellectual work course added yet another level unfamiliarity already complex project many even immediate community unsettled elastic stretchy timeline multiple point view within system novel seeming convention meant serve interpretation literary historical artifact briefly summarized original temporal modelling project aimed creating set conceptual primitive modeling temporal relation included graphical expression meant meet need multiple point view reworking event according changed position within temporal sequence set called inflection inflection kind legend marking point interval event basic unit quality attribute divided semantic syntactic type semantic inflection given characteristic independently entity vocabulary attribute included degree intensity quality syntactic inflection characterized relational marking effect one event point interval another method graphing elastic timeline meant show subjective variation temporality derived catastrophe theory chaos diagram visualization stochastic complex system figureâ model event temporal fold along line crisis first simple fold showing event combination stress warping plane upper branch consequence peel towards abrupt termination lower branch curve back allow retrospective view unfolding back onto earlier moment graphic credit eskandar visualization express topological systemic complexity necessary model number variable coordinate force changing relation variable present experience event andor analysis representation humanistic document eg novel film letter etc feature earlier design dynamic behavior syntactic relation could expressed standard cartesian coordinate system one xml output generated even though dynamic performative syntactic relation made operational using vector force figureâ two model event reaching crisis stress factor shown vector first show event fold second show vortex graphic credit eskandar even standard coordinate system convention perspectival drawing allow interpretative quality temporal experience expressed fully possible standard timeline parallax view prospective anticipation gradually replaced retrospective reassessment generated slider animates dynamic transformation value identity relation temporal event view temporal event expressed set condition rather given slider indicates point view perspective experience temporality originates individual figureâ linear model parallax showing anticipation retrospective assessment event combination mood individual indicated anticipatory arrow retrospective view lower arrow across bar star mark moment duration temporal span event warped retrospective view metric might altered effect though depiction nowslider per old temporal modeling design position bottom line indicates position observer within course even graphic credit eskandar breaking relentlessly regular grid potential graphing temporal modeling complex system event greatly enhanced relational codependent quality temporal event find expression sophisticated model several fundamental principle guide design principle noncontinuous nonhomogenous multidirectional temporality well point view parallax refine reductive crudeness model linked standard priori metric unidirectional continuous homogenous time refinement temporality conceived according basic formulation mentioned time function x temporality time x formulation x theoretically infinite variable inflect model mood event influence event constraint etc temporality act formmaking constructivist act expressing preexisting priori phenomenon realism sequence intellectual event formulation insists temporality likewise spatiality result constitutive relation among temporal spatial phenomenon full realization approach requires multidimensional complex model space time imaginative realization graphical expression figureâ first image anxiety measured subjectively charted standard metric charted time also depicted standard interval change one state another change degree anxiety shown continuous line graphic credit eskandar figureâ difference one state next used generate graphical form express change one moment another graphic credit eskandar figureâ difference state projected onto anxiety time ax create metric effect perception rather priri given rotating angle marked change level anxiety position parallel time line metric changed projection line whose length generated combination duration change intensity anxiety onto temporal axis thus moving time time result set transformation uninflected supposedly observer independent one created effect experience time expression graphic credit eskandar space spatiality discussion space corresponds exactly time distinction conception space priori given space relationally constituted mark philosophical division approach used charting understanding time temporality likewise spatiality understood space function x spatiality space x give graphical expression idea requires using nonstandard metric intuitive subjective principle design meant provocation larger project creating systematic rendering humanistic phenomenon introducing basic transformation graphical field created time line mapping gi application precedent rendering francis rendering space function travel time problem formulated mid century take account statistical phenomenon observerdependent situated separated various dependency bear upon creation data galton word recognized many circumstance data capta statistical description phenomenon depend upon circumstance recent demonstration principle map designed tom carden dynamic interface redraws london underground map function time travel selected station station subjective parameter even difficult inscribe since definition based simple consensual standard easily understand space result travel time could visualize spatial distortion introduced variable fearfulness anxiety anticipation distraction dalliance thus render space spatiality space factor x variable always play experience space well representation space also always constructed according specific agenda situated experience etc common experience phenomenal world representation spatiality lagged behind dominated navigational descriptive system standard mapping whose convention well known recognized partake impose dominant realist model proposing new model work suggesting subjective display humanistic phenomenon applied across domain concerned least four basic level interpretation knowledge production modelling phenomenological experience making humanity data capta primary modeling representation temporal spatial experience modeling relation among humanity document ie discourse field different metric needed understand date diplomatic document spring one needed constitute understanding dated period spring etc modeling representation temporality spatiality humanity document narrative obvious modeling interpretation depicting graphing performative quality interpretation let describe concrete example see understood across four different model take first instance modeling phenomenon three people waiting bus long take one late work anxious one desperate need bathroom want go afterschool program variation perception expressed recent experiment way time understood relation different circumstance task made experiential variable apparent psychologist initial graphical expression humanistic phenomenon requires variable metric elastic timeline even field might fold break extreme circumstance shift modeling experience find graphical expression representation experience complexity problem increase modeling time document relation duration document time telling experience recount time told well relation among possible external temporal reference form subset linguistic narrative analysis graphical form represent generally inadequate complexity textual visual andor filmic audio document modelling temporal relation among document temporal experience imagine letter email text message diary entry various bus rider date stamped give rise yet ambiguity complexity letter sent delayed email rerouted message held suspense server change temporal effect instance letter email arranging family event travel holiday contain many temporal value contingent often constant flux plan made temporal sequence date stamp one temporal relation exchange might include message cross midstream whose temporal sequence match simple alignment date line plan change travel time altered arrival departure rearranged mood shift frustration intensify disappointment unexpected surprise arise relation sequence event email recounting something occurred relation date stamp might also contain vaguely identified statement put event relative sequence without explicitly identifying occurred telling unfolds relation may change expression perception textual description recollected event continues shift place temporal order supposed depending order event time holiday travel expectation sorted family member distinct view happened sequence lived event occurred bus station large small far near spot itinerary located familiar landscape space experienced function time spent construction temporality spatiality within document across document discourse field phenomenon created timespace function interpretation act interpreting series document creates temporality production reading telling told within document independent phenomenon interpretation temporality ad spatiality construct concrete example spatiality parallel example temporality also depends temporal model instance imagine open stretch beach relatively unconstrained unconstructed sailing ship washed certain point beach point space around becomes transformed presence wreck creates huge impact space almost palpably bend compress expands warp around wave resonance rippling outward point figureâ example geographical space stretch beach affected change state circumstance first see space mapped according regular cartesian coordinate system grid inflected arrival beached ship around beach bend sense spot relative equal distorted attention ship command space acquires one inflection another graffiti mark ship chain link fence go police notice footprint create pattern sand pathway observation reroute pedestrian traffic etc beach transformed physically term attention getting effect longer set equal neutral element rational spatial system one must expressed graphical distortion show inflection graphic credit eskandar police barrier set suddenly make bit beach highly charged site additional fence create zone potential transgression prohibition line literal sand crossed graffiti artist tagger vandal looter introduce whole set spatial relation governed different rule expectation space around shipwreck becomes hot point zone arena complex spatial negotiation marked coordinate differently charged depending player circumstance law enforcement owner passersby tagger night early morning broad daylight etc even open indeterminate space beach spot becomes area shifting value interpretation space always marked become explicitly spatial relation demarcate region authority behavior whose dimension strict correspondence physical space amount physical space half mile beach none dimension still locate wreck cartesian grid available gps system course two approach constructivist realist cancel equivalent gps standard locate spot within coordinate say nothing constituted space phenomenon created many variable many adequate model first mode visualization constructivist approach grounded interpretative mode experience take another example map tracing journey london prague space change dimension reflect hazard delay dalliance terrain change interruption war political strife danger weather illness legend set label marking could indicate inflection space simply putting symbol map would registration subjective data conventional map mapping convention morph landscape accommodate effect fear anger violence change map distort proportion becomes terrain shaped fear obstacle disruption confusion figureâ geographical terrain warped experience travel standard distance distorted effect difficulty fear delay factor map show landscape effect experience rather standard ground depict experience second instance point metric grid warped impact event event simply reordered standard grid graphic credit eskandar subjective expression two approach radically different second instance space effect spatial relation spatiality expressed factor disturbance might expressed factor many variable occurring across temporal extension fear anxiety confusion anger disorientation challenge representing large corpus text immense archive also requires attention part convention wayfinding navigation part print medium institutional structure yet reworked digital environment meant address shift scale experience brought new medium top challenge representing repository use point another challenge giving graphical expression interpretation built document collection document present different challenge humanistic interpretation temporal spatial informational phenomenon depend upon basic recognition subjective codependent principle must govern design conventional graphical feature text inscribe interpretation include feature layout format typography design organize structure presentation page screen surface medium feature inscribe interpretation archive embody express imprint point view according archive take shape include classification system nomenclature hierarchy category organization ordering system search access information architecture format storage display feature archive intrinsic form expression expression argument thus interpretation show model interpretation fly constitutive act reading relating connecting sense making sum act interpretation make use format feature graphical presentation well responding thus producing artifact combination usercentered codependent system analysis critical reading practice performative act would underpin graphical visualization also work another time conclusion argument polemical call humanist think differently graphical expression use digital environment fundamental prejudice suggest introduced conceiving data within humanistic interpretative frame conventional uncritical statistical basis social scientist would proceed way abandonment interpretation favor approach statistical certainly skews game outset favor belief data intrinsically quantitative selfevident value neutral observerindependent belief excludes possibility conceiving data qualitative codependently constituted word recognizing data capta reiterate suggesting simply introduce quantitative analysis qualitative experience data set suggesting rethink foundation way data conceived capta shifting term certainty ambiguity find graphical mean expressing interpretative complexity circumstance example bar chart given earlier displaying information gender nation population ambiguity merely requires higher order level complexity model apparent qualified variable nuance specified mathematical term idea capta fundamentally codependent constituted relationally observer observed phenomenon fundamentally different concept data created observerindependent phenomenon realization heart humanistic approach graphical display interpretative phenomenon interpreted artifact act interpretation interpretation performative bringing object view reading act intervention forecloses possibility autonomous object phenomenon exist within horizon human experience phenomenon human experience constituted interpretative act natural world cultural corollary exist humanistic concept knowledge depends upon interplay situated circumstantial viewer object experience examination interpretation basic definition humanistic knowledge graphical display must specific definition foundational principle challenge enormous essential humanistic worldview grounded recognition interpretative nature knowledge part graphical expression come play digital environment engage challenge give game away advance ceding territory interpretation ruling authority certainty established false claim observerindependent objectivity display quantitative finish one concrete example shift observerindependent realism codependent constructivism justly famous chart death cholera allowed city official track source epidemic single water pump figureâ dr john famous chart tracing source epidemic using graphical method plotted frequency outbreak geographical location outbreak individual degree vulnerability impact illness effect family loved one specific particular way single dot express seen point view individual participant tragic event individual loom much larger others depicted within gaze someone actually seeing occur graphic credit eskandar distribution dot street map make evident role pump way cluster useful map crucial analysis clarity succinctness served important purpose sufficient purpose adequate could revisit map use express factor dot individual profile age size health economic potential family social role short dot represents life none identical many demographic feature could layered map create complex statistical view epidemic neither subjective data subjective display take rate death frequency chart temporal axis inflected increasing panic give graphical expression shape terrain urban streetscape redrawn express emotional landscape imagine drawing streetscape point view mother six young child recent widow small child elderly man whose son died figureâ snow chart altered graphic credit eskandar latter instance graphical expression humanistic interpretation different visual display quantitative information close reading poem chart eye tracker following movement across printed page fundamentally different character basic assumption role graphical expression aspect knowledge production long way go creating graphical expression serve humanistic interpretation hope suggested premise work might begin
157,Lobsters,visualization,Data Visualization,1969 & 70 - Bell Labs,http://www.larryluckham.com/1969%20&%2070%20-%20Bell%20Labs/album/index.html,bell lab,bell lab,bell lab spent couple year operation manager bell lab data center oakland ca developing state art database search system one day brought camera work result
158,Lobsters,visualization,Data Visualization,CTCSS fingerprinting: a method for transmitter identification,http://www.windytan.com/2016/10/ctcss-fingerprinting-method-for.html,ctc fingerprinting method transmitter identification,ctc motivation data main frequency analysis measurement liquiddsp result use transcription aid countermeasure conclusion,identifying unknown radio transmitter signal called radio fingerprinting usually based risetime signature ie characteristic difference transmitter frequency fluctuates carrier powerup instead investigate fingerprintability another feature handheld fm transceivers known ctc continuous tonecoded squelch system motivation data came across long losslessly compressed recording walkietalkie chatter wanted know thing like number participant talking started writing transcript fun pastime voice sounded similar wondered way tell apart automatically file comprises several thousand short transmission fm demodulated audio lowpass filtered hz signal quality variable transmission crisp clear buried noise passage signal squelched zero considered several potentially fingerprintable feature many unrealistic carrier powerup many transmission missing beginning squelch voice identification would probably require pretty sophisticated algorithm difficult longer sample mean audio power consistent enough depends text tone voice etc maximum audio power sensitive peak fm noise noticed transmission low tone hz turned ctc inaudible signal enables handset silence unwanted transmission channel gave idea inspired main frequency analysis could tone measured reveal minute difference crystal frequency modulation depth also knowing recorded using cheap dvbt usb stick would stable enough oscillator produce consistent measurement measurement used liquiddsp library signal processing several method measuring frequency decided use phaselocked loop pll could also used fft peak interpolation fingerprinting tool recording first split single transmission ctc tone bandpass filtered pll start tracking pll frequency stop fluctuating ie standard deviation small enough considered locked frequency averaged time average rms power measured similarly one transmission result least three cluster clearly distinguishable eye zooming one cluster reveals made several smaller cluster perhaps larger cluster correspond three different model radio use smaller one individual transmitter heat map reveals even structure seems least cluster ie potential individual transmitter distinguished even though transmission part cluster many outlier well appear correspond noisy short transmission could fft produced better result use transcription aid goal make fingerprint useful label aiding transcription way human operator could easily distinguish party conversation add name call sign accordingly experimented automated kmeans clustering nt immediately produce appealing result manually assigned anchor point apparent cluster center script calculate nearest anchor point transmission prior distance calculation ax scaled data seemed uniformly distributed around point automatic labeling proved quite sensitive error could useful listing possible transmitter unknown transmission context distance previous transmission positively mentioning call sign could used instead ended printing raw coordinate colouring continuous rgb scale colour make obvious party talking call sign written darker shade deduced context one sentence probably cobra get lost noise rms power measurement becomes inaccurate pll frequency still consistent conversation flow though countermeasure ctc absolutely required network ie unwanted conversation frequency disabled prevent type fingerprinting motorola radio done setting ctc code menu may also called pt code interference eliminator code many consumer radio nt seem easy conclusion ctc suitable signal fingerprinting transmitter reflecting minute difference crystal frequency possibly fm modulation index even cheap receiver recover difference used signal already fm demodulated otherwise suitable traditional risetime fingerprinting
159,Lobsters,visualization,Data Visualization,Prototype: Query CSV data by example,https://instadeq.com/experiments/data-tables/v2/,prototype query csv data example,,
160,Lobsters,visualization,Data Visualization,From gnuplot to Matplotlib & Pandas,http://ds9a.nl/articles/posts/from-gnuplot-to-matplotlib-pandas/,gnuplot matplotlib panda,github key difference panda matplotlib way time window exploring data stacked graph derivative combining resampling data selecting data ok enough hotness get started github matplotlib panda,using gnuplot since like forever one best friend plotting data discovering going greatness tend run wall step outside thing gnuplot good suddenly large heap awk sort unique odd shell script required get next level criticism gnuplot great sure gnuplot fitting ability example go beyond could expected plotting package sometimes quirky fit f x functionality helped discover lot interesting thing love gnuplot time move post hope provide highly accessible introduction matplotlib panda together blow gnuplot right water note mean expert seasoned user matplotlib panda fact started trek week ago spot mistake worst practice please let know berthubert powerdnscom fix actual expert looked page immediately report big problem article sample datasets notebook explore matplotlib panda available github key difference launch gnuplot enter plot sin x plot gnuplot fit well life system administrator software developer want plot number context switch system vmstat n awk print n fflush plot gnuplot plot plot using linespoints gnuplot ready go graphing solution require configuration web browser newfangled thing easy let go commandline ease use example however show quite lot work get done outside gnuplot needed somewhat awkward awk program preprocess output vmstat gnuplot could get work gnuplot meanwhile idea plotting see number panda matplotlib way gnuplot read data prepared file brave new world panda matplotlib data storage separated actual graphing well reside within one programmatical environment data labelled analyse output vmstat panda way first generate csv file source data tzutc vmstat n sed u sutcdate time vmstatcsv let run file grow happens take timestamped output vmstat replaces utc field header two field called date time since actually two field next load csv file panda datapandasreadcsv vmstatcsv delimwhitespacetrue skiprows data timestamp pandastodatetime data date data time inferdatetimeformattrue utctrue datasetindex timestamp inplacetrue first line say csv file whitespace separator skiprows statement mean skip first line vmstat output contains summary plus first actual data line contains statistic system since bootup second line convert pretty printed vmstat timestamp native panda timestamp note explicitly say utc timestamps final line blesses newly generated timestamp field index data agree pain compared gnuplot reward swift pltfigure pltplot data c pltplot data pltlegend vmstat field available plotting note graph automatically time aware also automated legend show u plotted graph see might kind relation number context switch interrupt let see tease pltfigure pltscatter data data c marker pltxlabel interrupt pltylabel context switch sure look like scale newfangled stuff surely deal million line turn panda people routinely process ten million datapoints panda readcsv readjson much though time window often want look noisy data best lens time window example naively plot u percentage system might get graph persecond resolution great hard spot trend panda data component strong support defining time window pltfigure period rolledusdata u rolling period rolledusmean plot labelperiod average u rolledusquantile plot labelperiod percentile u rolledusmax plot labelperiod max u pltlegend show u sliding second time window mean average user percentage percentile maximum make really pretty pltfigure pltplot rolledusmean label u mean pltfillbetween dataindex rolledusmin rolledusmax label u minmax pltlegend third line somewhat interesting call matplotlib fill area minimum maximum user cpu percentage us original timestamp data variable exploring data using data variable plotting purpose far much possible wonderful command describe provides summary data field fit screenshot already summary tell u something line data apparently system sometimes swap data si mostly zero always percentile number zero see swap event must burst also see one point process running time let see often lot active process pltfigure datarhist densitytrue see time nothing running number time active process tiny let zoom time process running stacked graph often may want stack data something difficult within gnuplot matplotlib panda trivial data u sy wa st plotarea derivative oftentimes get metric represent thing like number byte read since startup make sense number requires u take derivative section cover panda deal first going collect data time disk operation binbash echo timestamp maj min dev read rdmerges rdsectors rdtime writes wrmerges wrsectors wrtime ioprogess iotime wiotime discard discardmerges discardsectors discardtime true tstamp date ifs n line cat procdiskstats echo tstamp line done sleep done run diskstat diskstatcsv measure device every second run load data diskstatpandasreadcsv diskstatcsv delimwhitespacetrue diskstat timestamp pandastodatetime diskstat timestamp inferdatetimeformattrue unit utctrue diskstatsetindex timestamp inplacetrue diskstathead follows pattern earlier except csv file requires preprocessing term skipping line joining field line two bless output date timestamp mark utc unit part tell panda unix timestamps bless timestamp index output first row check parsed right procdiskstat offer u counter disk operation one exception counter increase monotonically would graph io bandwidth sdb sdb diskstat diskstatdev sdb pltfigure pltplot sdbindex sdbrdsectorsdiff label byte readsecond pltplot sdbindex sdbwrsectorsdiff label byte writtensecond pltlegend first select data device sdb plot derivative number sector read written multiplied get number byte thing noted graph could simply use diff get per second graph data collected every second since using real programming language serious scientific package way better rdrate npgradient sdbrdsectors sdbindexastype wrrate npgradient sdbwrsectors sdbindexastype pltfigure pltplot sdbindex rdrate label byte readsecond pltplot sdbindex wrrate label byte writtensecond pltlegend first two line determine gradient rdsectors metric measured actual timestamps converted nanosecond case make sure graph stay correct even sample collected exactly every second note npgradient us sophisticated algorithm actually involves three datapoints instead difference two line explains peak slightly broadened graph combining resampling data combine datasets collected different place often requires u match data noncoincidental timestamps think two system polled every second exactly second addition datasets may noisy small timescales yet exhibit trend longer scale example diskstat data contains number read request number sector actually read want find average read request size need divide two number per second basis unlikely get meaningful graph request may issued second n executed second combining data slightly different timestamps well math noisy data solved panda resampling facility readssdbreadsdiff resample mean sdbrdsectorsdiff resample mean writessdbwritesdiff resample mean sdbwrsectorsdiff resample mean pltfigure pltplot label read size pltplot label write size pltgrid pltlegend pltylabel kilobyte plttitle average readwrite size first line resample naive diff number read minute interval second line number byte read next two line repeat writes plotplt line interesting show resampled series used calulations selecting data panda data component offer many way selecting data example let say want data device sdb could diskstat diskstatdev sdb wrsectorsdiff quantile would select sdb wrsectors metric calculates derivative tell u percentile value metric read performance disk would provide keep system satisfied time alternately selection happen diskstatquery dev sdb wrsectorsdiff quantile syntax look nicer bit fragile finally selection need special handling diskstat diskstatdev sdb wrsectorsdiff quantile note additional brace ok enough hotness get started easiest way use matplotlib panda jupyter webbased environment offer smart cli interface python except graphical redo command jupyter either come operating system install like install jupyter panda matplotlib numpy start jupyter something like jupyter notebook perhaps localbinjupyter notebook launch webserver point web browser start new notebook paste first cell matplotlib notebook precision ipythondisplay import setmatplotlibformats pandasplotting import registermatplotlibconverters registermatplotlibconverters import matplotlib import numpy np import matplotlibpyplot plt pltrcparams figurefigsize import panda set sensible default press little run button execute first cell ready go published source article jupyter notebook diskstat tool diskstatcsv vmstatcsv dataset github explore reading matplotlib panda documentation good read addition matplotlib panda incredibly well served searching web almost question pretty decent solution first page good luck
161,Lobsters,visualization,Data Visualization,The Stanford Encyclopedia of Philosophy visualized using Gephi,http://saltvedt.net/explore-sep/,stanford encyclopedia philosophy visualized using gephi,,
162,Lobsters,visualization,Data Visualization,The essence of constraint is projection,https://zalo.github.io/blog/constraints/,essence constraint projection,find minimum movement satisfies constraint basic distance constraint distance constraint chain fabrik chain collision constraint collision constraint verlet verlet rope volume preserving soft body,essence constraint projection find minimum movement satisfies constraint basic distance constraint basic constraint distance constraint function constraindistance point anchor distance return point anchor normalize distance anchor satisfied projecting point onto circle around anchor distance constraint chain constraint distance constraint chained together order constraint satisfied important one solved stepping away mouse pull towards mouse fabrik chain distance constraint first solved one direction creates form inverse kinematics called fabrik forward backwards reaching inverse kinematics collision constraint distance constraint also used separate collision constraint verlet constraint act symmetrically participant step halfway towards satisfying constraint one simulate physic adding momentum verlet integration verlet rope solving constraint sequentially called gaussseidel method converges faster technically correct full source volume preserving soft body alternative average contribution constraint applying jacobi method stable make order matter however squishier converges slowly one wrap rope circle constrains shape volume one create volume preserving softbody full source jacobi method useful keeping phantom force appearing complex system like one light introduction constraint first hopefully series blog post exploring power simple mathematics
163,Lobsters,visualization,Data Visualization,Understanding the 100 prisoners problem,https://bernsteinbear.com/blog/understanding-the-100-prisoners-problem/,understanding prisoner problem,great youtube video wikipedia page known issue repo,coauthor chris gregory yuki zaninovich visited friend chris yuki seattle lunch chris threw u brainteaser prisoner problem familiar minute physic great youtube video would prefer watch video snippet wikipedia page attached problem numbered prisoner must find number one drawer order survive rule state prisoner may open drawer communicate prisoner first glance situation appears hopeless clever strategy offer prisoner realistic chance survival reason snippet sound like voiceover movie trailer since good intuitive grasp solution reasoning decided simulate experiment run number doubt implement right minute physic video box generalize n since box room shuffled beginning experiment start shuffling list number n import random def sample box list range n randomshuffle box return sum tryfindself box person limit person range n person box case attempt find hidden box using method described video since tryfindself yield success true failure false summing give number people found box def tryfindself box start limit nextbox box start numopened nextbox start numopened limit nextbox box nextbox numopened return nextbox start tryfindself function implement strategy described video start box indexed number necessarily containing number follow linked list box either hit limit find number next box end found box interesting run experiment sure still analyze result data multiple sample varying parameter order made visualization start importing usual suspect import random import simulate import matplotlibpyplot plt import numpy np order get reproducible result seed random number generator essential improving implementation visualization simulation verifying end result change order get feel effect different parameter probability group people winning varied number box maximum number try good thing tried since intuition result scale ratio wrong numsamples maxtriesoptions nparange numboxoptions nparange since sampler take one parameter pair vectorize function note specify otypes otherwise vectorize run sample function first input multiple time order determine type output known issue annoying debug given randomness vsample npvectorize simulatesample otypes int take sample combination parameter numsamples number time return large numpy array dimension like result samplenum maxtries numboxes sample combination parameter tried returned grid params npmeshgrid numboxoptions maxtriesoptions result nparray vsample params range numsamples produce nice data like nice good know many people sample found box want visualize probability group winning remember group winning defined n people finding number box calculate probability binarize result get mean success rate across sample resultsbin npsum result numboxoptions numsamples turn result array like dimension resultsbin maxtries numboxes unfamiliar term binarize last night mean reduce successfailure value three interesting region data identifiable even plotting bottom left field come allowing many try compared number box room top right field come allowing many try compared number box room really zero winning rare would need lot sample middle normal number let chart data see look like beautiful shade purple ax pltaxes pltsetcmap purple contour axcontourf params resultsbin axsetxlabel num box axsetylabel max try allowed axsettitle probability group win pltcolorbar contour pltshow note graph generated sample interval maxtriesoptions numboxoptions different code snippet took generate data xaxis total number people box yaxis maximum number try person given find box confirms minute physic conclusion probability everyone winning using strategy also provides handy way testing strategy proposed one seeing often lead group success feel free send interesting one chris yuki time update post efficient simulation take dang long generate data also another visualization lying around contains different probability distribution configuration setting written yet sample code repo check let u know think found rewriting simulation python cextension improved speed also small c program
164,Lobsters,visualization,Data Visualization,The orthogonal Procrustes problem,"https://simonensemble.github.io/machine%20learning,%20linear%20algebra/2018/10/27/orthogonal-procrustes/",orthogonal procrustes problem,link,redirected automatically follow link
165,Lobsters,visualization,Data Visualization,Map of philosophical positions and their correlations among philosophers,https://i.imgur.com/jbA2WZs.png,map philosophical position correlation among philosopher,,ihdr h v ir w
166,Lobsters,visualization,Data Visualization,Svgbob Editor - Convert your ascii diagram scribbles into happy little SVG,https://ivanceras.github.io/svgbob-editor/,svgbob editor convert ascii diagram scribble happy little svg,,
167,Lobsters,visualization,Data Visualization,physarum,https://www.sagejenson.com/physarum,physarum,georgios cherouvim characteristic pattern formation evolution approximation physarum transport network openframeworks,image gifs post implentation physarum transport model described february spent bit time simulating slime mold physarum polycephalum saw incredible post georgios cherouvim reference paper jeff jones characteristic pattern formation evolution approximation physarum transport network read paper excited learn model combined continuum agentbased simulation system way nt seen post try describe concept behind system give overview function two requirement efficiency foraging behavior search maximal area optimize transport distance physarum polycephalum unicellular multinucleate organism excels two competing task mechanism growth movement area reduction organism choose travel two different path destination emergent behavior allows effectively find shortest path allows physarum navigate maze develop optimal roadlike system solve pathfinding problem model postulated jones employ agentbased layer data map continuumbased layer trail map data map consists many particle trail map consists grid intensity similar pixelbased image data trail map turn affect particle data map deposit material onto trail map particle sense value trail map order determine aspect locomotion particle simulation heading angle location three sensor front left front front right sensor reading effect heading particle causing rotate left right stay facing direction trail map undergoes diffusion decay process every simulation step simple mean filter applied simulate diffusion particle trail multiplicative decay factor applied simulate trail dissipation time diagram describes six substeps simulation tick many parameter simulation configurable including sensor distance sensor size sensor angle step size rotation angle deposition amount decay factor deposit size diffuse size decay factor etc detailed description check original paper several substantial difference model described jones implementation jones original paper collision detection step ensures one particle grid square implementation usually ignored step preferring pattern arose without however step crucial exact mimicry behavior physarum polycephalum approximates sort conservation matter also conveniently collision detection remove sort sequential dependence allowing increased computational parallelism also added contagion behavior alters property simulation particle infected lay infected trail spread particle gif example infected system contagion spreading center image implemented model c glsl using openframeworks computation rendering happen gpu store particle information trail map simulation run realtime gtx example comprised million particle thanks reading feel free email question hope post cpu version system described jones paper soon february view
168,Lobsters,visualization,Data Visualization,Complexity Explorables,http://www.complexity-explorables.org/,complexity explorables,b c,explorable illustrates compare three vaccination strategy complex network type model node people network link potential transmission path vaccination mean node disconnected network longer acquire transmit disease vaccination thus effectively dilutes network two strategy b straightforward understand third one c bit odd counterintuitive first glance
170,Lobsters,visualization,Data Visualization,Visual trace showing how Rails responds to a request,https://rails-trace.chriszetter.com/,visual trace showing rail responds request,,
171,Lobsters,visualization,Data Visualization,Go is a Pretty Average Language,https://blog.chewxy.com/2019/02/20/go-is-average,go pretty average language,computer language benchmark game observation fftw made plot book plot custom gonum plotter tensor package sebastien binet gohep hplot conclusion addendum guillaume marceau,data visualization problem work thinking set coverage issue wanted test idea visualization wanted visualize space aggregate measure ie thing like mean etc later transpired need thinking around issue wrong begin written code eager check end morphed something entirely different good entertaining night last night nonetheless reason computer language benchmark game sitting open one browser tab month wondered data freely available rubbed hand got work hour later explanation howto follows xaxis represents size clean ie comment normalized white space gzip program source code byte yaxis represents performance measured cpu time lower better dot data point benchmark language benchmark game dataset subplot language specific plot red line line mean x data point given language specific subset programming language arbitrary language written useful program yes laugh even nodejs chart show balance verbosity program written language runtime performance ideal programming language would sit lower left quadrant may noticed left one favourite language python truncated chart given maximum x y plot python would show red line replaced swift density line show many program considered dataset multiple implementation considered benchmark language image considered highest performing benchmark language benchmark one without filtering best area essentially variance originally wanted also plot polygon connecting reasoned human mind good understanding area decided point chart well one allows play amateur taxonomist mean formal quantify specie programming language shape sizeperformance plot allows following observation made observation go buddhist like middle way really average sheer chance left middle plot rust share performance characteristic c verbose biggest surprise functional language ocaml haskell language famed terseness haskell turn terse expected average size source code larger average go source code size ocaml hand dark horse verbose go performs better average surprise anyone using fftw though ocaml known generate great backend code used ocaml generate initial gorgonia piece julia rather surprising several aspect julia lisp terseness expected julia us llvm crazy amazing backend optimization lower performance somewhat surprising however using median aggregate measure julia look expected made surprise absolutely one read blog frequently hello two wrote go used gonum plot library generate plot full souce code found program warrant explanation plotplotter drawing line write scratch relevant line star data structure used plotting line star type star struct plotterxys drawlinestyle mx trx try truncate func star plot c drawcanvas p plotplot tx ty ptransforms c trx try tx strx ty stry l slinestyle mx tx smx ty smy xy range sxys x tx xyx ty xyy x trx x trx try try l mx x quite remember thankfully written book plot custom gonum plotter could refer want full explanation buy book ask nicely part marketing contract requirement required write article book experience writing book rushed expected asked say could done better shall subvert article aforementioned marketing purpose tile plot made use gorgonia tensor package provides truly generic multidimensional array strictly necessary plot quick easy way thing tensornew tensorwithbacking p tensorwithshape len list col col matugh err nativematrix dieiferr err mat matugh plotplot tile drawtiles row tshape col tshape definitely think tiling function could neatly written old mate sebastien binet gohep suggests using tiledplot data structure hplot concur suggestion conclusion set visualize space aggregate neural network got sidetracked plotted chart programming language attempt quantify way came probably spurious conclusion go pretty average somewhere irony taken time write blog post write program like hear think addendum case notdoingyourresearchbeforeblabbing isaac gouy current maintainer computer language benchmark game mention comment something similar done guillaume marceau almost decade ago guillaume even whole quadrant thing set properly explained note want compare result guillaume ax flipped guillaume additionally post corrected include note source code size gzip change result analysis ever one
172,Lobsters,visualization,Data Visualization,codecrumbs - visual tool for learning a codebase by putting breadcrumbs in a source code,https://github.com/Bogdan-Lyashenko/codecrumbs,codecrumbs visual tool learning codebase putting breadcrumb source code,ever got lost big unknown codebase work talk reactfinland bliashenko demo standalone version running get started install run http configuration feature breadcrumb trail get trail id number step multicodebase integration synced one picture note multilanguage support dependency flowchart support put tweet making financial donation ping sponsor backer contribute owner wip v code extension repo,ever got lost big unknown codebase tool help solve also increase development speed give knowledge application architecture work run codecrumbs command codebase analyzes source code build visual representation write codecrumbcomment codebase state reflected visual client browser fly check talk reactfinland detail like project follow twitter bliashenko hear thing building demo check example standalone version running get started install run precondition updateinstall nodejs version install codecrumbs globally yarn global add codecrumbs run codecrumbs projectsrcdir e projectsrcdirindexjs change parameter match project directory source code e entry point file go http browser check configuration run codecrumbs cli params specify static config file codecrumbsconfigjs see example cli config file description example projectdir relative path project source code directory src e entrypoint relative path project source entry point file must inside dir e srcappjs x excludedir relative path path separated directory exclusion x srcdoc srcthirdparty p clientport port codecrumbs client optional default p n projectnamealias project name alias optional default value n myhelloworld c path codecrumbsconfigjs optional default try find file pwd c configcodecrumbsconfigjs debugmodeenabled enable debug mode log optional default false feature breadcrumb trail ui explained enable codecrumbs switch codecrumbs tree scheme dropdown contains extra configuration choose current codecrumbs trail display either trail simple codecrumbs select connection two step code two codecrumbs opened sidebar crumb tab set option dropdowns configure behaviour diagram show code block detail etc get leave breadcrumb code writing comment cc parameter cc stand codecrumb prefix used parser check example parameter table example description use case cc remember place simple breadcrumb remember place title first breadcrumb mark important place forget cc bug well seems like bug logic simple breadcrumb well seems like bug logic detail breadcrumb separated add extra information rendered popups cc signin enable route trail breadcrumb signin trail id order number step enable route title describing step sequence codecrumbs use describe data flow eg user login form submit etc cc signin firebase sign call firebase credential trail breadcrumb number line highlight separated use number line highlight code related breadcrumb note current version support single line comment hint use trail id without step number eg cc groupname test group breadcrumb always add step number later know correct order multicodebase integration might interested study connection several codebases submodules codecrumbs support simply start codecrumbs multiple time codebase synced one picture inside browser tab control diagram ui select clicking eg clientserver application go source directory server code run codecrumbs e yourserversrcindexpy yourserversrc client codecrumbs e srcclientindexjs srcclient note codebases located wherever want need like monorepo etc simply run codecrumbs directory need multilanguage support current version support next programming language c c fortran go haskell java javascript kotlin php python ruby typescript please file issue support language would like dependency note current version javascript typescript offer feature ui explained enable dependency switch select connection module involved file opened sidebar see imported implementation flowchart note current version javascript offer feature used sidebar draw flowchart selected file code support support much appreciated like project please put tweet thanks please consider making financial donation help development cool feature thank including namecompany logo feel free ping discussion sponsor development supported backer contribute contributing repository please first discus change wish make via issue email method owner repository making change idea suggestion welcome start development environment clone repo run wip next feature developing v code extension neat feature right inside code editor checkout repo
173,Lobsters,visualization,Data Visualization,"Orange, an interactive machine learning and data viz toolbox",https://orange.biolab.si/,orange interactive machine learning data viz toolbox,ferenc borondics phd francesca vitali phd gad shaulsky phd,ferenc borondics phd scientific community need tool allow easy construction workflow visualization capable analyzing large amount data orange powerful platform perform data analysis visualization see data flow become productive provides clean open source platform possibility add functionality field science francesca vitali phd teach orange workshop monthly diverse audience undergrad student expert researcher orange intuitive end workshop participant able perform complex data visualization basic machine learning analysis attendee able incorporate tool research practice gad shaulsky phd laboratory produce large amount data rnaseq chipseq genome resequencing experiment orange allows analyze data even though know program also allows communicate collaborator expert data mining colleague trainee
174,Lobsters,visualization,Data Visualization,Mapping a Universe of Open Source Software,https://www.tweag.io/posts/2019-02-06-mapping-open-source.html,mapping universe open source software,,
175,Lobsters,visualization,Data Visualization,GitHub Spray: Generate spray for your GitHub contribution graph,https://github.com/Annihil/github-spray,github spray generate spray github contribution graph,github spray installation requirement usage font invert color flip vertical flip horizontal custom pattern use github spray generator graphically draw pattern custom start date multiplier scale color known issue,github spray cli generate spray github contribution history graph installation requirement usage create new github repository copy url githubspray text multiplier factor push origin githubrepositoryurl example githubspray hello multiplier push origin http githubcomjohnhellogit depending number contribution given period want spray need multiply number commit per day specific factor multiplier spray become relevant calendar heatmap font githubspray text font fontname example githubspray font portablevengeance githubspray mario font mario font available font folder invert color flip vertical githubspray hello flipvertical flip horizontal githubspray hello fliphorizontal custom pattern use custom pattern create json file like follow number determine number commit per day thus green darkness githubspray f pathtopatternjson githubspray f patternsspaceinvadersjson use github spray generator graphically draw pattern custom start date githubspray startdate yyyymmdd date rounded nearest sunday default start date nearest sunday current date week multiplier scale color githubspray factor multiply number commit per day given factor make spray darker brighter calendar heatmap known issue
176,Lobsters,visualization,Data Visualization,Quadtree vs Spatial Hashing - a Visualization (2014),http://zufallsgenerator.github.io/2014/01/26/visually-comparing-algorithms/,quadtree v spatial hashing visualization,quadtree v spatial hashing http githubcomtimohausmannquadtreejs background pixijs quadtree one timo hausmann spatial hashing power visualization visualization link,quadtree v spatial hashing quick visualization two algorithm used reduce number collision check plane visualization quadtree algorithm originally implemented timo hausmann http githubcomtimohausmannquadtreejs slightly adapted also wrote spatial hashing implementation background lately working browser platform game using javascript webgl accelerated canvas powered pixijs game feeling targeting important lot object time noticed game slowed sometimes frooze completely many object time bottle neck anticipated collision handling checking object collision every object get nasty nonlinear complexity old problem course quite know solution would started googling one approach stumpled upon first quadtree data structure see wikipedia link explanation tried implementation found simplest one timo hausmann unfortunately seem reduce number collision check much slow one hack used reduce number collision limit number collided object per object increased speed made collision detection inaccurate timo good taste include excellent visualization algorithm github repo visualization show green square following mouse pointer highlight square collision checked googling alternative decided try spatial hashing implemented one spatial hash using interface timo quadtree implementation could save lot work retrofitting visualization spatial hashing implementation could easily compare algorithm pretty obvious spatial hashing efficient also shown plugged spatial hash implementation performance problem greatly reduced could object without collision detecting became bottle neck course possible case quadtree efficient data structure spatial hash uniform size object spatial hashing seems quicker power visualization algorithmic complexity usually represented using big notation trying find good algorithm reducing number object collision check realized power visualizing algorithm using visualization gained insight quadtree algorithm could gotten reading formal description visualization added runtime control parameter using datgui really compare algorithm measure actual cpu time used give pretty good hint work link
177,Lobsters,visualization,Data Visualization,Benchmarks of Cache-Friendly Data Structures in C++,https://tylerayoung.com/2019/01/29/benchmarks-of-cache-friendly-data-structures-in-c/,benchmark cachefriendly data structure c,dataoriented design cache locality high performance code hybrid data structure three clever container llvm three pseudoreadonly alternative seriously use vector arraytypesh header accompanying git repo fast container really github repo text format instruction repo readme benchmark vector alternative map alternative set alternative,suppose savvy c developer know dataoriented design importance optimizing cache locality want prayer running fast modern hardware suppose want go beyond use std vector good starting point want going go six container alternative standard library analog two replacement std vector std set std map talk idea behind dive comparison performance benchmark post inspired chandler carruth cppcon talk high performance code hybrid data structure interested sort thing absolutely watch talk three clever container llvm interesting container talk come llvm project smallsize optimized std vector replacement smallsize optimization sso mean instead keeping data heap like std vector class preallocates amount data actual size configurable via template parameter locally stack performs slow heap allocation container grows beyond size malloc slow traversing pointer get data slow stack storage doublewin hardware folk spend last year making cpu faster kid could chase pointer place work best type small object storing large ie significant portion cache line may better storing pointer instead fine print smallvector awkward interface boundary since preallocated size part template type along interface boundary generally care much preallocated storage thing llvm provides elegant solution though smallvector inherits typeerased base class called llvm smallvectorimpl instantiate object smallvectorimpl directly accept reference one manipulate like would std pushback reserve etc simply use smallvectorimpl reference interface boundary like bad client pas eg smallvector foo void badhardcodedsmallsize smallvector foo good client pas smallvector foo n void goodallowsanysmallsize smallvectorimpl smallset smallsize optimized std set replacement analogous llvm smallvector us simple linear search preallocated size move fancy higheroverhead guaranteedefficient hashbased lookup larger size fine print one iteration support llvm generalpurpose std unorderedmap replacement unlike standard map class keep data one memory allocation good locality away bucket favor keeping key value next memory moreover allocates large number keyvalue pair default fact super fast small size downside course memory inefficient creating lot small map type large fine print one iterators invalidated insertion unlike std map strike mostly theoretical problem since could course store key rather iterators unlike vector know ever come across code retained map three pseudoreadonly alternative seriously use vector three container like suggest alternative typical standard library choice arraybacked implementation designed writeonce writeinfrequently deliberately eschew normal mutation operation pushback insert etc support wholesale replacement exchange get deadsimple implementation single memory replace mallocs exactly much memory need super fast iteration could even specialize fixedsize stackbased variant lookup map set type log n modifying data initialization might well sort binary search lookup api make clear hey really manipulating data useful container conceptually constant actually constconstruct whatever happens often would expected year ago fixedarray arraymap arrayset benchmark find implementation arraytypesh header accompanying git repo fast container really github repo provides benchmark pit llvm container stl type mostlyreadonly container used generate result text format raw output running google benchmark graph complete set graph generated script found tl dr smallvector big win win emplacepushback size preallocated small size loss beyond smallvector big win random read size preallocated small size get many element preallocated start passing beyond cache line densemap insert omg fast faster std map std unorderedmap arraymap actually win densemap read win std unorderedmap smallest size like element smallset insertion win preallocated size wash larger size compared std set smallset count marginally faster std set best kind wash larger hand wind way slower large size note number obtained data type byte ie int byte ie double ymmv stick large object structs map using pointer key case following instruction repo readme run benchmark machine benchmark vector alternative large container size wash surprise surprising smallsized optimized vector seem get huge speedup smaller marginally faster size size sso vector element case good explanation fixedarray read speed way front small size except maybe getting vectorization benefit due really damn simple slideshow requires javascript slideshow requires javascript map alternative note inserting sortedarraybacked map arraymap included inserting enough concerned using wrong lookup arraymap shockingly slow large data good explanation slideshow requires javascript slideshow requires javascript set alternative insertion sortedarraybacked set arrayset included insertion graph wrong data structure use unless insertion massively infrequent map case arrayset lookup get real slow reason clear slideshow requires javascript slideshow requires javascript
178,Lobsters,visualization,Data Visualization,Finding Out Class Is Cancelled,http://waf.cs.illinois.edu/discovery/Finding-Out-Class-Is-Cancelled/,finding class cancelled,email motivation statcs data science discovery view amazing data driven discovery,email university illinois began sending email cancelling class due extreme windchill tomorrow many u found friend long heard collecting nearly sample discovered heard depends directly netid matter faculty staff student played waiting game got email let u predict received motivation visualization came part pilot lab section statcs data science discovery long one student excited class cancelled tomorrow everyone thought joking one else received email second student also received massmail class begin believe class really cancelled tomorrow found trend worth investigating result work thanks checking view amazing data driven discovery
179,Lobsters,visualization,Data Visualization,Multi-Scale Turing Patterns,https://softologyblog.wordpress.com/2011/07/05/multi-scale-turing-patterns/,multiscale turing pattern,jonathan mccabe algorithmic art cyclic symmetric mutliscale turing pattern vision chaos explanation tip speedup page result automatically searching good looking result adding color ricky reusser twitter post color idea blake jones coloring method turing pattern like,jonathan mccabe always created fascinating example algorithmic art paper cyclic symmetric mutliscale turing pattern explains process creates interesting looking image like following help patient jonathan many thanks jonathan explained process detail able implement algorithm experiment want play pattern included vision chaos explanation attempted explanation process work aimed programmer would like try implementing process based series different turing scale scale value activator radius inhibitor radius small amount weight symmetry setting control result example create main grid array create array activator inhibitor variation case used format x scalenum scale dimension within array initialise grid array size image wish create fill random floating point value step simulation mutlitple turing scale average grid cell location circular radius specified activator radius store result activator array multiply weight average grid cell location circular radius specified inhibitor radius store result inhibitor array multiply weight average calculated need work variation grid location within specified variaition radius total variation using variationvariationabs activator x inhibitor x store variaition cell variation array remember turing scale need variation array smaller variation radius work best checking single pixel variation formula give sharpest detailed image finally activator inhibitor variation value scale calculated grid cell updated done find scale smallest variation value ie find scale lowest variation x scalenum value call bestvariation using scale smallest variation update grid value activator x bestvariation inhibitor x bestvariation grid x grid x smallamounts bestvariation else grid x grid x smallamounts bestvariation step main gist algorithm update single set value based multiple potential scale lead turing like pattern existing different scale within single image normalise entire grid value scale back ie find maximum minimum value across grid update cell grid x grid x smallest range grid value mapped grayscale value rgb intensity calculated trunc grid x alternatively map value color palette repeat process long required tip get image look like jonathan need large difference activator inhibitor radius different scale example small amount value really need small especially creating movie otherwise change rapid lose calm smooth slowly moving effect speedup profiling code slowest part step calculating averaged activator inhibitor cell value using circular radius sqrt two sqr call see neighbour cell within specified radius sqrt skipped comparing distance squared scale cell really impact perfromance prepared wait day generating movie even moderate size using option rendering movie youtube taking minute per frame time spent activator inhibitor averaging needed much smarter way help avoid distance calculation create list neighbour cell offset going cell way totalling cell neighbour use currecnt cell position minus saved offset coordinate helped speed code still slow next gaussian blur gaussian blurring simplified pas horizontal line vertical line array make much faster large circular averaging method gave huge speedup second per step compared minute per step result different circular neighbourhood method gaussian blurring us bell curve weighted kernel averaging result still acceptable seeing page fast way rectangular blur tried get time second per step using rectangular neighbourhood blur introduce small scale squared artifact overall result seem acceptable speed increase minute per step second per step welcome apparently repeat box blur time get result approach gaussian blur still faster usual gaussian blur tried give gaussian get close lead unique result another speedup related symmetry implementing symmetry setting need average activator inhibitor value turing scale involves lot rotation calculation need sin co calcs much faster precalculate turing scale symmetry array location start use precalced list main simulation step got time millisecond per step since blog post also refactored code multithreaded possible take advantage multicore cpu give big jump performance modern cpu result result using setting shown fast rectangular blur algorithm average activator inhibitor neighbourhood video another sample video see multiscale turing pattern automatically searching good looking result jonathan mentioned histogram paper trying get code smart enough detect good bad set random variable step simulation map grid cell value histogram x axis cell value axis scaled percetage number time cell value occurs boring image lot low histogram count following histogram prior value reaching bottom leading stabilised turing pattern good looking image wider variety cell value even many step sort histogram interested detecting new set random variable set run simulation x number step histogram value bottom consider bad pick another set variable start specified number step reached without bad histogram potentially good save parameter thumbnail image keep searching allows computer churn away overnight look good image hand free trick tweak bad histogram detection rate discard good result still weeding bad result stage save bad good result separate folder make sure discard good image bad another method mutation every whatever ratio like load one good file mutate setting slightly mutated image pass histogram test save good find trying histogram method really work get rid boring result detected good bad rule consistancy another method trying detect much main grid array change step set totalchange add grid value totalchange totalchangeabs grid x oldgrid x cell tallied get changefactor totalchangewidth height autosearching first step settle consider search bad changefactor help weed boring result still many good result detected bad many bad result detected good need smarter way try find best looking result without falsepositives adding color make sure click image see full resolution detail wanted add color output image long time various method tried impressive mapping pixel brightness level color palette converting rgb hsl gave disappointing result saw ricky reusser twitter post implemented extended multiscale turing pattern code output color image see blog post info inject color turing pattern usual step described used except small change start step create array color size display image set value starting color found black nice choice various color fade turing step run set different color scale color brighter color tend work best point step find bestvariation bump current pixel color towards scale color example best variation turn scale scale color red rgb move white color towards red bumpmove used simple linear interpolation lerp targettrunc current scalecolor bumpamount allows color smoothly change step simulation run display color multiply pixel color intensity grid value grid x give color shading brightness contrast tweak help bring color bit also another example value shared knowledge without original blog post ricky may never seen turning pattern sharing able come new idea extend result encourage everyone share knowledge others sample movie color result video color idea blake jones coloring method turing pattern describes really need experiment get time jason like like loading related
180,Lobsters,visualization,Data Visualization,Frontend Metrics: CSS Specificity,https://dev.to/wuz/frontend-metrics-css-specificity-288p,frontend metric cs specificity,heck cs specificity article longer available good specificity graph look like graph cs specificity metabase cssstats,working lot discovering tracking useful frontend metric wanted share thing learned probably adhoc atrandom series thing frontend metric learn heck cs specificity emma put together overview cs specificity done much better job ever could article longer available quick recap cs specificity involves cascading part cascading style sheet specificity cs selector decides style given element good specificity keep needing many importants great thing know writing cs even better thing track time day job working gather frontend metric see work impacting application one thing tracking cs specificity look like across whole file something called specificity graph good specificity graph look like good specificity graph noticable attribute firstly plotted specificity selector along axis position selector cs file along x axis ideally specificity hockey stick file remain steady major specificity spike confined towards end graph cs specificity got metric working set company metabase build small tool see specificity graph code nt super hard understand try check getcssstatsjs file us cssstats hood get stats chunk cs monitoring change graph make change cs ensure right track hardandfast rule lot time need certain specificity easy break using sc le import used quick health check however good specificity graph useful read specificity graph great week devs kind metric track think cs specificity graph
181,Lobsters,visualization,Data Visualization,Thank You Google!! For Sharing my data,https://kanoki.org/2019/01/20/thank-you-google-for-sharing-my-data/,thank google sharing data,google inception life happy people article takeout data http takeoutgooglecom downloaded data timestamps activity type import data dataframe filter data september plot filtered data map voila plot historical data map http locationhistoryvisualizercomheatmap thank google,always wondered life would google depend thing personal professional life google app even single day go without accessing google apps life partially dependent google mom always use say two world exists one born raised pregoogle era one born postgoogle era made life easier flexible easy extent contrary agree many people life without google well billion people google inception life happy people source google image kumbh mela joke apart google always criticized blamed collecting data even written article earlier month blaming google read credit card detail without consent usage intervention google apps high life even think second sharing personal sensitive data google however know data stored google cloud one u ever accessed google apps view download data many u including always interested see historical data analyze expense geo data see place visited friend family excites looking old photo remembering memory vacation trip sometimes feel good nostalgic takeout data http takeoutgooglecom see varied list product ever accessed select one interested see data downloaded map google pay data since would like see trip year around place visited frequently also interested see expense done year using google pay account thing cut future better manage expense downloaded data downloaded location data form json contains information place many year major data attribute see data timestamps millisecond b latitude place c longitude place activity type onfoot walking invehicle onbicycle running inroadvehicle inrailvehicle etc import data dataframe import json import datetime latlist longlist dttime datafile historylocationhistoryjson file open datafile jsondatajsonload file item jsondata location dttimeappend datetimedatetimefromtimestamp int item timestampms latlistappend round item longlistappend round item dfpddataframe datetime dttime latitude latlist longitude longlist filter data september dfdf df datetime df datetime plot filtered data map import folium color red b blue maposm foliummap location dfapply lambda row foliumcirclemarker location fillcolorcolors row class popuprow class addto maposm maposm voila helsinki finland month year technical conference see well show data date time accurate latlong place stay helsinki plot historical data map best way visualize data see map use http locationhistoryvisualizercomheatmap well aware coding python using basemap observe activity throughout yesteryear geo heatmap used plot place map look area hanging around lot course area around home workplace shown dense highlighted red patch red cover bike cycling path routine exercise place hang around lot year round compared place world finally visualization show national capital new delhi also sometime last year wonderful cheering vacation family spent splendid week moving around delhi visited taj mahal well handy simple visualize data memorize past event owe google team big time storing data making available u whenever need data store google drive well download anytime data google pay html format might need web scrapping knowledge pull data html page run analytics around hope fun u looking past data visualization gain insight lot feature use learn past behaviour reform future action thank google
182,Lobsters,visualization,Data Visualization,Using NLP to Automate Customer Support,https://blog.floydhub.com/automate-customer-support-part-two/,using nlp automate customer support,last post universal sentence embeddings sentence embeddings next frontier universal sentence embeddings use complexity sentence estimate noam chomsky pretrained model use model paper generating first sentence embedding previous post reset password change capital ireland comparing dimension comparing similarity learned visually inspecting model output using something visual inspection create sentence embedding baseline mostly similar almost completely unrelated sentence cosine similarity cosine similarity code example dataset quora duplicate sentence kaggle test dataset testsentences back baseline purpose life recover email lost password use twitter business source make screenshot mac laptop many month take gain knowledge developing android apps scratch late learn piano baseline result query best match original similarity observation overall result impressive strong match problem higher match lower match change cosine score absolute measure relative measure success ranking system building customer support recommender use model customer support mentioned earlier recommender would questiontoquestion recommender opposed questiontoanswer system test sentence recommendation quorarecomendpy quora recommender next step research floydhub call ai writer looking passionate writer apply cathal horan read first post floydhub ai writer twitter intercom blog,let build natural language processing nlp model help customer support agent suggesting previouslyasked similar questionsin last post learned use onehot encoding word embeddings various nlp task also demonstrated approach use context train model create embeddings rich semantic meaningthat rich semantic meaning exactly customer support automation project post build nlp model help u respond nearly infinite way customer might asking u similar question quick recap customer support nlp model action customer support suggestion powered universal sentence embeddingsto going learn universal sentence embeddings build nlp model us universal sentence embeddings group customer support question semantic similaritysentence embeddings next frontierour customer typically using complete sentence support question like able handle full semantic meaning customer support request including every little nuanced word choice makeuniversal sentence embeddings use promise address issue word embeddings capturing semantic meaning sentence identifying order considered universal promise encode general property sentence due trained large datasets theory applied downstream nlp task without requiring domain specific knowledgewith us need pas sentence model able get back embedding representing entire sentence sound easy enough right complexity sentencesas might expect turn sentence much complex word estimate state word english language even including emojis assuming combine word order sentence word length mean well mean whole lot potential sentence world many potential sentence gibberish raise another issue namely valid sentence noam chomsky famously used sentence colorless green idea sleep furiously example grammatically correct semantically nonsense sentence need get heated debate valid sentence let agree complicated messas might expect going difficult capture context need sentence fixed dimensional embedding going need two thing many datamany dimension represent extra contextluckily let folk google worry data requirement use pretrained model sentence embeddingpretrained modelwe using pretrained use model produce sentence embeddings dimension indeed larger word embeddings typically dimension quite large fearedin model size embeddings use chosen model could generic possible data trained upon rather general including supervised unsupervised training data wikipedia news data questionresponse type dialoguesif want deeper insight training underlying neural network architecture take look papergenerating first sentence embeddinglet generate embedding represent test sentence follow along example clicking button open jupyterlab workspace floydhub run generateembedding notebook start let generate embedding sentence reset password import library import tensorflow tf import tensorflowhub hub import numpy np import matplotlibpyplot plt import matplotlibpyplot plt pltrcdefaults download use module moduleurl http embed hubmodule moduleurl generate embedding print descriptive data def generateembedding message tfsession session sessionrun tfglobalvariablesinitializer tftablesinitializer messageembeddings sessionrun embed message messageembedding enumerate nparray messageembeddings tolist print message format message print embedding size format len messageembedding messageembeddingsnippet join str x x messageembedding print embedding n format messageembeddingsnippet return messageembeddings emb generateembedding reset password visualize barchart show range value dimension ypos nparange len emb pltbar ypos emb aligncenter plttitle sentence embedding dimension pltshow output rather unwieldy array look something like show range distribution value sentence embeddinglooking output alone rather difficult evaluate embedding saw word embeddings previous post let try look dimension embeddings see detect patternsfor example let start sentence reset password embedding already next let make manual change original sentence create list sentence clear range similarity change one word slightly change ordering form question notice certain dimension changing appear random like word embeddings see pattern seems correspond minor change compared larger change table show sentence look together difference sentence original sentence reset password plural word reset password remove word reset password change order reset password similar change password different sentence capital ireland compare embeddings generate two embeddings one embedding represent original sentence reset password one six altered sentence table want see impact change sentence embeddingscomparing dimensionsif small change would expect embeddings change slightly compared larger change generating two embeddings look dimension see one changed much ignore minor change look dimension changed also get average change across dimensionscomparing similarityin conjunction dimension also want see similar sentence embeddings appear compared visually since seen difficult eyeball embedding need find way visually inspect ityou might inclined go ahead start using embedding due difficulty representing visually however well worth spending time playing around output model see infer anything least comfortable output use critical since planning build customerfacing chatbot sentence embedding model glad agree let follow along example clicking button open jupyterlab workspace floydhub replace test sentence check compare visually running visualcomparison notebook create scatterplot two embeddings see correlation dimension example generate random distribution would expect see spherically dispersed arrangement point conversely dimension correlate completely straight line like would find linear regression example show let compare two identical sentence embeddingsthese plot show two embeddings generated identical make sense two sentence used diagram comparing sentence reset password generating two embeddings think way make sure embeddings consistent difference would slightly worried modelas see dimension difference dimension embeddings similarity scatterplot get almost perfect straight line created taking dimension mapping corresponding dimensionsas comparison let look two completely different sentence see compare make sure way comparing visually make sensein contrast previous diagram plot show two embeddings generated different sentence compare visuallywe comparing sentence reset password capital ireland clearly see difference diagram average difference dimension see number dimension changed make sense difference sentenceswhat interesting dimension bar chart one dimension number changed much othersdoes represent dimension grade overall similarity measure word comparison identify sentence category theorize mean clearly seems stronger signal indicator dimension scatterplot also indicates random spherical dispersion seems correct sentence completely unrelated seems verify merit chosen method represent sentencesnow let look sentence pretty similar semantic perspective made minor change one word yet see impact differs significantly number dimension earlier identical examplethe difference comparison sentence diagram password plural one massive difference would think notice big difference original example contained two identical sentence eight dimension overall changed average change low le puzzling either dimension could represent one plural word change scatterplot show strong correlation clearly see sentence similar plotlet next leave word see comparehow removing word impact similarity semantic meaning see scatter plot still show relatively well aligned patternagain massive difference previous comparison remember difference removed word one sentence would seem positive result since sentence mostly semantically similar dimension differ previous example range seem large two dimension differ almost significant difficult know small change represented subsequent change dimension two dimension changed identifying sentence length word count example dimension changed previous example always together appears difficult understand change fully could simply understand complex relationship feature deep learning network learned embeddings maybe model represents sentence entirely different way human understand sentence penultimate example let look whether change ordering identified embeddings plot show sentence embeddings capture ordering information sentence identical order see clear difference earlier identical plotfirstly clear change ordering identified would see graph similar first identical example since word identical order six dimension changed much le example dimension represent order seems unlikely since none unique changed example also much dimension example changed previous example nearly changed almost one dimension changed dimension changed could see order dimension seem simple noted earlier able identify ordering important feature since something difficult capture using word embeddings jumble word appear identical using model see sentence embeddings capture ordering featurefinally let look happens change word maintain similar semantic contextwhat happens use different word mean thing reset change different word used similar way plot seem indicate similarity captured embeddingswe replaced reset change sentence quite similar would characterize almost identical nearly every support case would handle query appear case six dimension changed average change slightly change plural difference slightly le ordering word removal examplesso learned visually inspecting model output sentence embedding definitely warrant investigation capture semantic similarity also ordering see clear difference identical sentence completely unrelated sentence identify clear pattern change dimension differ example seem small number dimension change example would seem indicate information carried dimensionsbut need careful draw many conclusion brief investigation example sentence carefully selected really test well sentence embeddings would perform real scenario next need manually curate list question measure similarity using something visual inspectioncreate sentence embedding baselinewe want understand range accuracy sentence embeddingsto need create baseline set sentence pair baseline contain sentence pair altered range mostly similar almost completely unrelated sentence use baseline see measuring similarity embeddings correctly reflect semantic disparity sentence example table show example sentence pair related altered sentence would expect term similarity comparison sentence original sentence expect rename file rename file perfect match change file rename file close match change name file rename file somewhat similar match rename file rename file le match due ordering rename city rename file similar cat name mr jingle rename file similarity ideally would like clear separation sentence become progressively semantically different scoring system unable differentiate extreme example ie little usethere ambiguity sentence difficult know similar score sentence know semantically similar much semantic similarity captured embeddings difficult know sentence interesting alteration changed one word significant impact overall semantic meaning sentence may think unfair comparison somewhat contrived example however good example may get incorrect result looking similarity embeddings also show extra level complexity compared word embeddingscosine similaritysince embeddings vector measure similarity using magnitude directionremember embeddings vector use fact evaluate similar cosine similarity common way measure similarity getting cosine angle two vector case represent sentence cosine similarity method used measure similarity original use paper also method used code example provided tensorflow use module use method measure similarity sentencesdatasetwe noted earlier manually curate sentence use baseline still however need dataset sentence use original sentence want ensure variety base sentence start overall number sentence large small number sentence would easier game test since would much choice ensuring large number potential match better simulation real life situationone dataset seems perfect use case quora duplicate sentence dataset available kaggle set sentence pair corresponding label identify sentence indeed duplicate test dataset yourselfso far generated embeddings visually analyzed series sentence pair get feel use work however best way take test drive already generated embeddings quora dataset sentence saved github repo using pickle way need generate embeddings test sentence look best match returned via cosine similarity quora question simply run testsentences notebook follow instruction add sentence open notebook add sentence run cell see matchesback baselinefor ease use let select first sentence pair create baseline sentence original sentence see list sentence baseline original sentence bold sentence manually altered version original question purpose life meaning life purpose technology porpose life colour life purpose life recover email lost password get email misplaced password possible recover email forgot password email password recover forgot use twitter business source use cat business tool use twitter business tool use twitter business source use twitter busines source twitter business source use make screenshot mac laptop make screenshot window laptop take screenshot mac take bcreenshot mac laptop screenshot mac laptop take mac screenshot laptop many month take gain knowledge developing android apps scratch many month take develop android apps scratch much time take create android apps scratch many month take gain knowledge developing apps scratch many month take gain knowledge developing facebook apps scratch late learn piano late learn guitar buy piano late go work late learn spanish learn play piano best time learn piano late learn moonwalk test baseline set question go following step compare baseline query full list quora question find best matchthis efficient way production could generate embeddings list potential match beforehand generate incoming question needed however example also show speed generating embeddings generate embeddings reasonable time question includes calculating cosine similarity also show performance perspective reasonably effectivebaseline resultsthe table show result result baseline evaluation column follows query baseline question include original find match since corresponding duplicate original question chosebest match best match set question based highest cosine similarity scoreoriginal original unaltered quora sentence referencesimilarity cosine similarity score calculated representing best match list potential match query best match original duplicate similarity meaning life meaning life meaning life purpose life purpose life life actually purpose life use twitter business tool use twitter business use twitter business source use twitter business source use twitter business use twitter business source purpose life purpose life life actually purpose life make screenshot mac laptop take screenshot macbook pro instruction take screenshot mac laptop much time take create android apps scratch much time take learn android app development scratch many month take gain knowledge developing android apps scratch take screenshot mac take screenshot macbook pro instruction take screenshot mac laptop possible recover email forgot password remember password gmail account recover account recover gmail password recover email lost password remember password gmail account recover account recover gmail password get email misplaced password remember password gmail account recover account recover gmail password late learn guitar almost late learn piano late learn piano twitter business source use use twitter business use twitter business source use cat business tool create ecommerce website would develop ecommerce website colour life meaning life meaning life late learn moonwalk almost late learn piano late learn piano buy piano difficult would learn play accordion know play piano best accordion beginner learn observationsoverall result impressive remember generally trained model domain specific training correctly match duplicated sentence ie rarely identifies pairing labeled duplicate shelf model significant strong match even altered sentence spelling error new word maintain similar semantic meaningthe problem higher match lower match look lowest matched one entry sentence use cat business tool colour life found match score mean little margin relatively meaningless sentence almost identical match see weighting might consider semantically important word swapping cat twitter changing context entire sentence may unfair measure since example likely occur real life regardless lack separation top bottom baseline indicate might able confidently use embeddings automatically find best matchbut mean use embeddings far clearly lot potential use embeddings since pick semantic similarity identify ordering compensate spelling error minor alteration seem well suited internal recommendation system top five list best match would returned customer support agent agent case would act filter able quickly identify whether recommendation useful change cosine score absolute measure relative measure success ranking system example useful recommendation agent quickly use previous response provide answer customer way recommendation system save agent bother manually check previously similar question customer get quicker response new issue identified quicklyin next section build simple prototype kind systembuilding customer support recommenderthe goal recommender system allow user review model considers similar questionswe continue use quora dataset alter bit better represent common query within organization would like easily identify want end series cluster represent common customer query query change password setup account setup email may represent common issue customer encounter enquire need someone come new response probably documentation clear series step take resolve issue instead customer support agent spending time looking previous similar query creating new response would like able quickly retrieve response already provided create example cluster go quora question select sample query look like typical technical support type issue want number group pick query make manual change cluster least query cluster query associated one saved response saved response could template fully completed example whichever work use case key label id query link relevant group example create group question show could setup generate recommendation similar query using sentence embeddings likely many question change basic structure recommender sentence embeddings quick generate first run download use module large number generate embeddings question cluster offline simply save would need generate embedding new query production generate embeddings needed keep simple table show example question using recommender query answergroup forgot username access recovery phone number reaccess account missing password forgot password recover password missing password step password reset missing password recover password receiving recovery email missing password reset password missing password way insert multiple image profile image add image profile image change profile image profile image upload image user profile image whats max size profile image profile image signup online without credit card credit card setup signup without credit card credit card setup need credit card start trial credit card setup need credit cart setup account credit card setup free version credit card setup good photo editing apps video step best free video editing software video step edits video video step update video uploading video step online tool use share video video step upload folder contains daily report excel file daily using python script python upload step upload data python script python upload step upload lot data python script python upload step example python script upload data python upload step setup regular upload python scrip python upload step search pending issue solved yet search issue seach open issue search issue find open issue search issue see list open closed issue search issue search newest issue search issue way query metadata query metadata get metatdata query query metadata metadata associated query query metadata metadata stored query metadata search metadata query query metadata update account update account update account update account need update account update account need update account update account find update account update account disable account account delete delete account account delete recover deleted account account delete lose data delete account account delete archive account account delete use api website api info api available api info use api api info find info api api info setup account use api api info use model customer supportsentence embeddings interesting since offer number way could potential use business versatile deployed example could build neural network identify question answer pairing similar amazon example mentioned earlier question answer encoded network learns via supervised approach match correct pairing automatically identify answer new incoming query fairly complex setup could use sentence embeddings encode question answer would help reduce much complexity simplify encoding answer focusing question comparing embeddings new incoming query manually selected query representing common customer issue way use embeddings identify best match new query saved query saved query linked known answer recommender would questiontoquestion recommender opposed questiontoanswer system able link recommended question corresponding answer point understand use sentence embeddings find different way deploy within organizationso use case may slightly different follow along eventually tweak example suit needstest sentence recommendationsto generate similarity need get cosine score like earlier baseline question given new incoming query get cosine similarity new query saved query use tensorflow code example tfhub feed list question pair get embeddings similarity use tf placeholder tfplaceholder tfstring shape none tfplaceholder tfstring shape none evaluation use exactly normalized rather approximately normalized embed embed get cosine similarity comparison cosinesimilarities tfreducesum tfmultiply clipcosinesimilarities tfclipbyvalue cosinesimilarities simscores tfdivide tfacos clipcosinesimilarities placeholder code variable assigned data later date let u pas sentence pair run tensorflow session pas data placeholder using feeddict argument use inject tensorflow graph return similarity score emba embb score sessionrun simscores feeddict question newquery tolist question tolist return emba embb score nt worry tensorflow concept make much sense see tensorflow take getting used since run like sequential program instead build dataflow graph node mathematical operation connecting edge example look code get better idea work rest code creating dataframe store info need sort end data frame find top similar sentence input queryto check sentence would recommended similar potential new query simply run program test sentence terminal egpython quorarecomendpy q lost password get new onealternatively run quorarecomendpy notebook via quora recommender notebook may easier follow step way enter test sentence see well match relevant answer group program generate embedding submitted query also saved queryfind cosine similarity new query saved query embeddingsorts result based best match returning top best match corresponding answer labelto visualize program also show embeddings via diagram us pca dimension reduction technique used part blog post show could reduce vector vector reducing dimension show embeddings closer closer embeddings likely return high cosine similarity second graph bar chart showing result cosine similarity score query system identifies similar note result missing password group relevant group simscore newquery query answergroup lost password get new one recover password receiving recovery email missing password lost password get new one made account phone forgot password recover password missing password lost password get new one retrieve password process account working step take get missing password lost password get new one forgot username access recovery phone number reaccess account missing password lost password get new one step password reset missing password try test sentence see beat system try create sentence trick system recommend obviously incorrect answerfor example let ask system reset cat python quorarecomendpy q reset cat simscore newquery query answergroup reset cat disable account account delete reset cat step password reset missing password reset cat delete account account delete reset cat made account phone forgot password recover password missing password reset cat recover password receiving recovery email missing password table see add random word cat still get relatively high result account delete group similarity reset word overall would like lower scoring lot question might difficult make differentiation two different group question word password examplewe certainly debate relative similarity lower recommendation something seems hard believe similar enough represent similar customer query original sentence resetting password second one semantically unrelated question might confident set automatically respond customer example instead recommendation system work like filter provides human agent reduced set potential match could identify situation like cat reset recommendation relevant require customer service agent handle fresh new requestnext step researchsentence embedding relatively new deep learning nlp method still area active research always interesting look early stage new technology ultimately get value want know use nowfrom brief overview clear much potential tried domain specific fine tuning tried find better scoring mechanism cosine similarity result much investigate probably wondering use sentence embeddings production right answer yes outlined could used reduce workload internal team find related question common customer queriessentence embeddings seem well suited providing support option human operator augment decision making replace good luck trying figure reset customer catfloydhub call ai writerswant write amazing article like cathal play role long road artificial general intelligence looking passionate writer build world best blog practical application groundbreaking ai technique floydhub large reach within ai community help inspire next wave ai apply join crew cathal horanthis part two twopart blog series cathal horan sentence embeddings read first post herecathal interested intersection philosophy technology particularly fascinated technology like deep learning help augment improve human decision making recently completed msc business analytics primary degree electrical electronic engineering also boast degree philosophy mphil psychoanalytic study currently work intercom cathal also floydhub ai writeryou follow along cathal twitter also intercom blog
183,Lobsters,visualization,Data Visualization,time-trace: timeline / flame chart profiler for Clang ·,http://aras-p.info/blog/2019/01/16/time-trace-timeline-flame-chart-profiler-for-Clang/,timetrace timeline flame chart profiler clang,clang contain functionality upstreaming commit clang made kind compiler profiler want previous blog post ftimetrace chrome tracing output clang second figure existing mean templight templighttools ok code github pr regular llvmclang ninja famous amiga demoscene group thread clang mailing list,update landed llvmclang mainline go well clang contain functionality upstreaming commit landed march thanks anton afanasyev work landing wanted clang emit timeline flame chart style profiling info spends time made kind compiler profiler want previous blog post talked hard get useful information c compiler spend time various compiler various way reporting something report seem geared towards compiler developer important know example whether register allocator bottleneck compiler user much le importance want know whether bottlenecked preprocessor includes one parsing classesfunctionstemplates template instantiation one code generation backend optimization something else added chrome tracing profiling output part build system past quite like perfect ui good get job done file format trivial write thought try add sort flag clang would emit profiling information would find interesting turn getting seems work state easier expected ftimetrace chrome tracing output clang first thing tried pointed really useful thing super slow include header one place look timeline flame chart profiling view chrome chrome tracing page horizontal axis time vertical nested callstacks speak clearly show one header file take second include suspect sort performance issue clang gcc msvc quite bit faster including file try gather data report bug file feel complex without view would never guessed cause slow compile time yay visibility going already fairly useful visualization look file see end based decide make compiles faster includingparsing file take time tell one culprit exactly long take include already found header took longer process guess split rarely used expensive part often used cheap part looking template instantiation see one end taking time process focus improving figure existing mean template instantiation probably could via templight templighttools built tried file wrestled visualize callgrind output wincachegrind refused open qcachegrind worked found bit intimidating use process compile special flag get file run file converter open app bit involved plus converter fast using regular profiler clang show part compiler take time show part code spending time example one file slow parse example top post running xcode instrument profiler clang show see time spent parsing exactly ok code code github pr based clang trunk january add new command line flag clang ftimetrace produce chrome tracing json file next regular compiled object file based older llvmclang git monorepo switched another github repository however build instruction regular llvmclang note use ninja backend building default makefiles backend spends age figuring build every time build default build type nonoptimized debug build build optimized release build usual dcmakebuildtyperelwithdebinfo cmake flag window make sure set cccl cxxcl environment variable invoking cmake pick random gccbased toolchain inside strawberry perl install otherwise llvmclang build setup way change base support library timingprofiling utility among thing cause rebuild almost everything add comment timercpp file file recompile wanted add profiling stuff seems utility generates header rest llvmclang depends us support library utility llvmtblgen know exactly assume generates famous amiga demoscene group change mind turn llvm build option tblgen building whole stuff point build stop rebuilding thus stop regenerating header use dllvmtablegenpathtotblgen option cmake cut change anything support library file recompile file recompile still cheap much better overall surprisingly easy mean never built llvmclang line code later modified clang profiling output always wanted pretty good started thread clang mailing list change see go comment already point proper pull request via whatever llvmclang code review tooling idea whether get accepted upstream clang least clang profiler always wanted
186,Lobsters,visualization,Data Visualization,LCOV provides a very valuable starting point on how to improve test quality (2016),http://reedmedia.net/~reed/qa/lcov-2016/,lcov provides valuable starting point improve test quality,lcov lcov provides valuable starting point improve test quality especially visualizing large amount code lcov provides webbased view source code see part code tested http ltpsourceforgenetcoveragelcovphp http reedmedianetreed,lcov lcov provides valuable starting point improve test quality especially visualizing large amount code lcov provides webbased view source code see part code tested jeremy c reed reed article introduces gcov gcc coverage testing tool lcov nice frontend collecting coverage data creating navigatable html page report note gcc specific tool may used help someone new source code better understand help developer identifying place code could optimized help quality assurance code showing part code nt exercised test particular test often written show common normal usage program work intended coverage report may show test also needed input error corner case extreme setting reporting also useful verify good testdriven development tdd followed gcov tool provides useful output quickly correlating lot provided detail difficult timeconsuming lcov suite make easier quicker analyze understand coverage data gcov tool library commonly included main gcc package red hat gcc rpm debian gcc package system library may also provided separate library development package gcc gcov statistic based linebyline recording line source code executed may want consider using inline function instead multiline macro may still expected result also result useful follow programming style one statement per line may also want compile without optimization make sure compiler improvement nt hide place may want better optimize example may need turn gcc optimization generate gcov data compile program two gcc option fprofilearcs ftestcoverage fprofilearcs gcc switch tell compiler add code program keep track many time line code code block executed running program exit save record file extension gcda corresponding source file output saved location corresponding object file note gcda file overwritten updated new execution count multiple concurrent run ftestcoverage gcc switch used create note file gcov us show program coverage file created compile time file extension gcno may use compiler flag desired note optimization may skew linebyline coverage report instrumentation code provided libgcov library commonly included gcc use gcc switch lgcov tell linker combine shortcut three switch gcc coverage switch common autoconfautomake based build may use following prepend switch additional compiler flag configure cflags coverage build program make build environment may need modify makefile build specification introduce compiler switch optionally turn compiler optimization program ran either manually part test suite corresponding gcda file multiple file created one main executable separate object file made note run program installed location nt build tree still know put gcda file original object file run gcov directory containing gcno gcda file main argument name source code file show analysis object file different name argument use base name without gcda suffix running gcov tool see summary also creates corresponding gcov output file nt want file created use nooutput gcov switch branch term gcov indicates code different code path make take example using switchcase construct loop using function call term corresponds function indicate used returned never executed two useful gcov switch functionsummaries display name function percentage line executed function branchprobabilities show branch executed percentage including taken least call executed add detail gcov output provide summary console combine two gcov switch see information per function gcov output file humanreadable line containing format number execution line line number code line code exists line like blank comment number execution represented dash line never ran four hash mark line number used preamble gcov using branchprobabilities switch additional line starting branch call function indicate executed example using singlefile gcov textual output scale well huge project thousand source file thirdparty tool available better manage visualize result including gcovr ggcov article explore using lcov lcov originally released developed maintained linux test project lcov webpage official downloads http ltpsourceforgenetcoveragelcovphp common packaging system also include lcov package install using yum aptget favorite installer depends perl provides five executables corresponding manual page many popular project php mozilla firefox elfutils samba wine used lcov analyze improve testing project provide make target build configuration build gcov support generate coverage report example isc kea dhcp server popular gnu coreutils provides many fundamental unix tool provide make target generate test coverage report article use commandline example directly using lcov suite four main step build source code using gcc special coverage compiler option run executable run test make check use lcov tool analyze gcov output program ran saving detail lcov trace file use genhtml tool create report webpage using source code trace file example console output provided configure cflags coverage make make check lcov capture directory outputfile coverageinfo building code gcov instrumentation running result case using test lcov step tell process gcov data file current directory subdirectory default generate lcov trace file note output file us extension info lcov convention sure nt overwrite documentation info format using name depending size project may hundred line console output process file genhtml outputdirectory coveragehtml legend coverageinfo genhtml step creates directory containing image used create bar graph cs stylesheet generates various html webpage overview page source code file referenced named trace file legend switch simply provides color branching symbol explanation webpage end many line console output genhtml also display summary overall coverage rate use web browser review result starting top summary page firefox coveragehtmlindexhtml also usable via console browser like elinks lynx note lcov directory switch important lcov initially designed investigating kernel code change default evaluate userspace code use switch point local gcov gcda data file addition may need basedirectory switch specify directory source code different location object file figure example lcovgenerated code coverage report represents coverage src directory gnu coreutils running many test legend explains color overview red poor coverage yellow acceptable okay coverage green good coverage top right give total count number line function optionally branch hit column indicates many time gcov instrumentation saw line function branch executed main table sorted source filename default show hit total line function optionally branch per file simple colored bar graph make easy quickly visualize result multiple webpage created report overview clicking arrow column name display field also sorted starting worst line function branch coverage quickly see need work scroll bottom see best coverage figure show part coreutil datec running test example date feature untested display file last modification time blue color line source code line executed hit red line source code line nt used hit lcov many configuration define report webpage generated look customizations may placed home dotfile lcovrc systemwide etclcovrc different location depending lcov suite installed see lcovrc manual page detail many configuration setting may also set lcov genhtml command line using rc switch depending installation lcov may also branching detail generated webpage make sure done set lcovrc dotfile use rc lcov genhtml command line figure source code report includes branching detail example popular l tool running ltr switch example include running coreutils test l notice top right summary line source code file contains branching possibility branch line source code view indicate branch taken taken simply executed line figure example show branch data indicates switchcase construct second case statement matched line branch data show statement condition nt successful nt branch following code lcov default better green high coverage yellow medium coverage may rate match development goal requirement may use genhtmlhilimit genhtmlmedlimit configuration adjust example genhtml outputdirectory coveragehtml legend rc rc rc coverageinfo note anything medium limit red low rate want make change html presentation copy gcovcss file new file name make cs stylesheet modification color font size face table formatting etc use genhtml cssfile switch point new stylesheet file need generate new report new data reset trace file lcov zerocounters switch use directory argument delete gcov gcda data file current directory subdirectory note file created gcovinstrumented program ran common issue using lcov gcov data nt match binary updated source rebuilt binary previously existing gcno note file gcda data file may match lcov run may indicate file corrupted mismatched addition removing gcda file may want remove outofdate gcno file may want zero counter generate different report manually ran test unit test system test combination test compare result better understand different test coverage common genhtml option include title provide brief name identification report frame creates narrow graphic image showing unreadable overview source code used clickable map left side webpage quickly jump section corresponding source code example clicking middle overview image take middle source code view note may multiple trace file used generating single report trace file may also combined multiple run pruned specific path source file nt want included report running instrumented program generating report may include source code system dependency interested may clutter overcomplicate report skew statistic following example removing file subdirectory previouslycreated trace file generating website report using new trace file lcov remove coverageinfo libselinux output reportinfo genhtml outputdirectory coveragehtml legend reportinfo notice escaped pattern file match exclude main purpose lcov review code exercised test better understand flow code running program using test simple scenario developer follow lcov report code path actually used associate basic feature source lcov provides valuable starting point improve test quality especially visualizing large amount code code coverage output useful sharing management test development team code development team information lcov sure read manual page jeremy c reed ten year experience software quality assurance open source proprietary software board member netbsd foundation author used lcov seven year various linux bsd platform researching existing test case identifying testing need bind kea isc dhcp nmsg wdns mtbl software suite currently authoring book pfsense history berkeley unix homepage http reedmedianetreed article authored september
187,Lobsters,visualization,Data Visualization,Experiment: Recoil vs Muzzle Velocity,https://blog.ammolytics.com/2018-12-12/experiment-recoil-vs-muzzle-velocity.html,experiment recoil v muzzle velocity,recoil management technique contributing inconsistent muzzle velocity issue question result tried reproduce result explore concept disclaimer incredibly complex open question recoil technique cause ammunition used much variation every round ft slower outlier shifting average confusing correlation causation relatively easy reproduce even matter consistency king result result mixed approach recoil effect muzzle velocity better way determine causality measuring speed bullet insufficient need data pressure trace ii system record chamber pressure measure firearm moved recoil read another article conducting experiment preloaded bipod string freerecoil string machine rest equipment load recipe note round fired note examining result uploaded raw data file github muzzle velocity relying median velocity instead mean affected le outlier chamber pressure cherrypicked comparison cherrypicking bestpractice satisfy curiosity inform conclusion may direct relationship peak pressure muzzle velocity recoil acceleration acceleration rifle recoil sample actual acceleration every millisecond gap reading align precisely forward acceleration recoil greater peak acceleration firing pin first mystery solved higher peak acceleration please let know firing pin recoil time rifle move versus time bullet leave barrel another article bullet acceleration barrel time kinematic formula total barrel length ft cm note preloaded bipod freerecoil note coarse precise reading unable find reputable source verify preloaded bipod delta millisecond freerecoil delta millisecond visually mark barrel time provide number roughly millisecond bullet barrel time bullet long gone rifle move recoil bullet already ft range rifle nearly heavier bullet conclusion preloading bipod incredibly effective technique managing recoil change muzzle velocity bullet left barrel rifle move slower coincidence median velocity robust mean reloading practice need improvement next step take word providing software everyone shoot email question feedback discus article reddit accelerometer another article explain custom accelerometer build mathematical approach momentum free recoil energy get bearing bullet length effect bullet bearing length instagram reddit twitter contribute support ammolytics patreon special thanks new unix shell called oil recreational software inc snipershidecom email directly,earlier summer one fclass shooter league trying diagnose issue new rifle using reliable load previous success chronograph showing pretty extreme muzzle velocity variation around ft remembering snipershide article read recoil management technique contributing inconsistent muzzle velocity issue suggested possible cause went home found article intending share read noticed thing made question result article author used chronograph measure muzzle velocity variety shooting position including slippery steel bench prone preloaded bipod conclusion presented author bold one ft muzzle velocity variation recoil properly managed skeptical provided evidence tried reproduce result explore concept disclaimer interior ballistics science powder burn gas expand pressure build bullet travel brass bore incredibly complex want trivialize people could claim expert subject matter certainly one experiment effort observe explore learn open question generally understand basic premise behind idea round detonated force exerted equally direction try prevent firearm moving recoil assumption energy used direction bullet leaving barrel really work though thing came mind throught critically evidence notion recoil technique cause observed variation muzzle velocity factor ammunition used much variation normally produce would result change statisticallysignificant number round recorded instead every round ft slower others outlier shifting average believe author may fallen common trap confusing correlation causation seemed like excellent opportunity build work true recoil management technique effect muzzle velocity relatively easy reproduce result experiment addressing question even matter true big deal consistency king world reloading long range precision competitive marksmanship know certain whether recoil effect muzzle velocity determine root cause unexpected variability well take anyway find people believed topic sent brief twoquestion survey result survey result freerecoil result slower muzzle velocity survey result freerecoil provide consistent muzzle velocity admittedly may best survey question ask suffice say result mixed lack solid understanding topic motivated continue blazing rabbit hole search truth approach first step understand problem trying solve question recoil effect muzzle velocity answer need better way determine causality recoilmanagement technique velocity bullet leaf barrel observation would required order measure form energy exhibited rifle recoil measuring speed bullet insufficient need data round ignited chamber firearm experience enormous level pressure chamber pressure begin propellant burned bullet break away brass move barrel ran assumption affected recoil using pressure trace ii system record chamber pressure curious observe compare relative muzzle velocity round exihibited similar pressure level take step also wanted measure firearm moved recoil accomplish built custom accelerometer unit using offtheshelf component wrote software interesting project read another article homebrew accelerometer securely mounted combined measurement muzzle velocity chamber pressure acceleration every round fired expected able produce conclusive result conducting experiment improve signaltonoise ratio increase chance success wanted provide extreme difference recoil management technique preloaded bipod string pressed bipod tightly solid surface strapped bench freerecoil string used fclass style front rest safely fire without mitigating recoil access kind machine rest probably would better preloaded bipod immobilze firearm late august loaded round headed range gear imagine setting much equipment firing line generates plenty weird look everyone really friendly though explained working genuinely curious see result setting rifle chronograph chamber pressure system turning camera connecting battery accelerometer finally time fire round since actual hit target important purpose experiment fired steel target keep set yard equipment get lot sideeye bring much gear range load recipe note sort bullet length measured ogive bullet base data show believe may caused inconsistency round fired round sightersfoulers round preloaded bipod round freerecoilfront rest note due issue chamber pressure system record first sighterfouler shot get reading chronograph accelerometer separate one shot analyzing data one round fired preloaded bipod one round fired using freerecoil technique examining result using three device record data created mountain data comb answer wrote software used python panda library make bit easier interest transparency also uploaded raw data file github anyone explore following table combine basic information three device round fired muzzle velocity see chart suprises two muzzle velocity data set surprise expecting notice two round within preloaded bipod group exhibited significantly slower speed shot reading ft shot ft jumping conclusion result plenty understand discus statistically mean average freerecoil group ft faster median velocity much closer ft difference long advocated relying median velocity instead mean since robust statistic affected le outlier dataset like see two round slower well suspect issue relates reloading practice perhaps sorted bullet come back let look rest data see else learn chamber pressure generally recorded chamber pressure round fired using technique quite similar bit variance peak pressure reading well peak time nothing ordinary comparing peak pressure datasets interesting picture emerges noticed greater dispersion preloaded bipod string freerecoil result fairly similar muzzle velocity comparison shot preloaded bipod string still outlier shot agrees earlier suspicion based conversation knowledgable people industry force friction bullet experience within rifle believe method bullet sorting may caused problem length bearing surface play greater role understood brings u back question presented earlier wanted compare pressure exhibited round similar identical muzzle velocity viceversa cherrypicked comparison obviously cherrypicking datasets bestpractice following intended satisfy curiosity inform conclusion matched peak chamber pressure string shot velocity ft peak pressure psi area pressure curve freerecoil shot preloaded bipod shot preloaded bipod shot matched muzzle velocity string shot velocity ft peak pressure psi area pressure curve preloaded bipod shot freerecoil shot preloaded bipod shot freerecoil shot learned may direct relationship peak pressure muzzle velocity maybe think good opportunity continue exploring topic relationship various reloading practice established recoil acceleration following chart show acceleration rifle recoil recorded attached sensor every curve aligned peak value time series order aid visual comparison device constructed record recoil acceleration limitation data represents sample actual acceleration reading taken quickly possible around every millisecond specific regular interval gap reading longer usual interval point curve align precisely irregularity two thing stood first saw graph small forward acceleration recoil preloaded bipod shot greater peak acceleration watched video shot framebyframe see rifle moving forward moved backward recoil nothing thought couple day wondering done something wrong bug sensor moving forward dawned firing pin pulled rifle safe turned accelerometer dry fired time confirm sure enough sensitive enough detect firing pin recorded approximate spike forward acceleration first mystery solved higher peak acceleration shot rifle moved le still definitive answer best guess energy used moving rifle far freerecoil comparing area curve suspect would result nearly equal number since kinetic energy must still anybody answer please let know update article include since accelerometer able record firing pin recoil creates interesting view problem time rifle move versus time bullet leave barrel read technical detail extracted accelerometer dataset another article bullet acceleration barrel time kinematic formula used calculate time bullet accelerate barrel length x muzzle velocity v initial velocity zero cancel dfrac delta x quad text quad dfrac v total barrel length ft cm suppressor ft cm barrel ft cm note generous measured boltface preloaded bipod median muzzle velocity ft m median recoil time millisecond freerecoil median muzzle velocity ft m median recoil time millisecond note accelerometer capable sampling every millisecond might coarse precise reading seen suggested two stage recoil primary secondary unable find reputable source verify preloaded bipod dfrac ft cdot ft mathbf dfrac m cdot mathbf dfrac ft ft dfrac m m textbf recoil start time millisecond bullet barrel time millisecond delta millisecond freerecoil dfrac ft cdot ft mathbf dfrac m cdot mathbf dfrac ft ft dfrac m m textbf recoil start time millisecond bullet barrel time millisecond delta millisecond pressure trace ii software visually mark barrel time symbol along pressure curve provide number either screen data file despite shortcoming software appears estimate roughly millisecond bullet barrel time group using barrel length without suppressor far calculation regardless result strongly suggest bullet long gone rifle move recoil long gone case bullet already ft range make sense rifle nearly heavier bullet accelerate quickly pressure trace ii screenshot preloaded bipod string barrel exit time marked pressure trace ii screenshot freerecoil string barrel exit time marked conclusion shooting precision rifle preloading bipod incredibly effective technique managing recoil getting sight back target watch impact prepare next shot however expect effect muzzle velocity going disappointed learned observed based experiment described measured change muzzle velocity either technique due huge difference mass bullet left barrel rifle move recoil chamber pressure reading verified round shot preloaded bipod slower coincidence correlated caused recoil technique median velocity robust mean average better suited ballistic calculator reloading practice need improvement likely around bullet sorting next step take word wrote lot code processing collected data making useful working towards providing software everyone perform experiment shoot email interested question feedback discus article reddit accelerometer written another article explain custom accelerometer indepth read design construction limitation build mathematical approach variety physic equation calculating momentum free recoil energy include article long enough explore another article case anyone find useful get bearing bullet length since like understand better future experiment focus effect bullet bearing length post instagram reddit twitter publish result contribute ammolytics communitysupported project keep free ad paidpromotions making purchase using affiliate link site help fund future project experiment also support ammolytics patreon special thanks friend andy reviewing article giving excellent feedback writing new unix shell called oil jim ristow recreational software inc taking time answer mountain question pressure trace ii frank lowlight galli snipershidecom creating original material inspiring article creating learning opportunity thanks taking time read article enjoyed writing learned lot process hope feedback email directly prefer use reddit social mediathis website article may use affiliate link help fund ammolytics keeping free ad paidpromotions
188,Lobsters,visualization,Data Visualization,Chinese Perspective as a Rational System: Relationship to Panofsky’s Symbolic Form,http://www.psy.ntu.edu.tw/vnl/paper/Chinese%20Perspective%20as%20a%20Rational%20System%20Relationship%20to%20Panofsky's%20Symbolic%20Form.pdf,chinese perspective rational system relationship panofsky symbolic form,,obj type catalog page r lang enus structtreeroot r markinfo marked true metadata r endobj obj type page count kid r r r r r r r r r r r r r r r r r r r endobj obj type page parent r resource font r r r r procset pdf text imageb imagec imagei mediabox content r group type group transparency c devicergb tab structparents endobj obj filter flatedecode length stream n ѥ j r ko dr l v q iĉi endstream endobj obj type font subtype truetype name basefont abcdeecalibri encoding winansiencoding fontdescriptor r firstchar lastchar width r endobj obj type fontdescriptor fontname abcdeecalibri flag italicangle ascent descent capheight avgwidth maxwidth fontweight xheight stemv fontbbox r endobj obj type font subtype truetype name basefont abcdeecalibri bold encoding winansiencoding fontdescriptor r firstchar lastchar width r endobj obj type fontdescriptor fontname abcdeecalibri bold flag italicangle ascent descent capheight avgwidth maxwidth fontweight xheight stemv fontbbox r endobj obj type font subtype basefont abcdeecalibri bold encoding identityh descendantfonts r tounicode r endobj obj r endobj obj basefont abcdeecalibri bold subtype type font cidtogidmap identity dw cidsysteminfo r fontdescriptor r w r endobj obj ordering identity registry adobe supplement endobj obj type fontdescriptor fontname abcdeecalibri bold flag italicangle ascent descent capheight avgwidth maxwidth fontweight xheight stemv fontbbox r endobj obj type font subtype basefont abcdeecalibri encoding identityh descendantfonts r tounicode r endobj obj r endobj obj basefont abcdeecalibri subtype type font cidtogidmap identity dw cidsysteminfo r fontdescriptor r w r endobj obj ordering identity registry adobe supplement endobj obj type fontdescriptor fontname abcdeecalibri flag italicangle ascent descent capheight avgwidth maxwidth fontweight xheight stemv fontbbox r endobj obj type page parent r resource font r r r r r xobject r procset pdf text imageb imagec imagei annots r mediabox content r group type group transparency c devicergb tab structparents endobj obj filter flatedecode length stream ǆ c z b gl af p kf lkroa ð ذ h ը b ajq ovi ci endstream endobj obj type xobject subtype form resource font r r r xobject r r bbox matrix filter flatedecode length stream zvgb r endstream endobj obj type font subtype basefont arial encoding identityh descendantfonts r tounicode r endobj obj r endobj obj basefont arial subtype type font cidtogidmap identity dw cidsysteminfo r fontdescriptor r w r endobj obj ordering identity registry adobe supplement endobj obj type fontdescriptor fontname arial flag italicangle ascent descent capheight avgwidth maxwidth fontweight xheight leading stemv fontbbox r endobj obj type font subtype truetype name basefont arial encoding winansiencoding fontdescriptor r firstchar lastchar width r endobj obj type fontdescriptor fontname arial flag italicangle ascent descent capheight avgwidth maxwidth fontweight xheight leading stemv fontbbox endobj obj type font subtype basefont abcdeems encoding identityh descendantfonts r tounicode r endobj obj r endobj obj basefont abcdeems subtype type font cidtogidmap identity dw cidsysteminfo r fontdescriptor r w r endobj obj ordering identity registry adobe supplement endobj obj type fontdescriptor fontname abcdeems flag italicangle ascent descent capheight avgwidth maxwidth fontweight xheight stemv fontbbox r endobj obj type xobject subtype image width height colorspace devicergb bitspercomponent filter dctdecode interpolate true length stream jfif ii
190,Lobsters,visualization,Data Visualization,Self Avoiding Walks,http://datagenetics.com/blog/december22018/index.html,self avoiding walk,self avoiding walk try hamiltonian path hamiltonian path maze solution beyond space filing curve hilbert curve generating hamiltonian path example,self avoiding walk week going talk space filling selfavoiding walk imagine chess board started one square allowed move one square time horizontally vertically diagonally previously unvisited square possible find tour visit square board always possible depend start change size grid example grid starting bishop would start game try little application try using button right define grid size time board redrawn start seed move random position force clicking reset button click grid extend path use undo recursively remove last step back corner find pattern kind path called hamiltonian path mathematician route visit every vertex case square start end connected called hamiltonian circuit hamiltonian path hamiltonian circuit used generate perfect maze returning initial problem start looking grid trivial one path also trivial two solution matter start first move either horizontal vertical two choice move automatic first nontrivial problem start one corner eight possible solution matter corner solution symmetrical rotation reflection tour start corner called greek key tour presumably reference popular tiling pattern start center also eight solution however start one edge piece solution well checkerboard pattern give u strong clue shade board alternating black white see move square change parity color black square move change u white square viceversa odd sized grid odd number square total example one white square black square way toggle alternately color start white square finish white square solution start black square equal number black white square even sized square board parity restriction solution every starting position however solution route start corner greek key tour count possible solution based starting condition surprise symmetry solution starting corner space solution starting one edge location solution possible one four center location back parity restriction every space oddsized board greek key tour offer highest number possible solution count possible solution based starting condition solution starting green square one example solution number solution starting increase rapidly enumeration possible solution based starting position number greek key solution even grid solution every possible starting space one example solution beyond sure formula derived determining number greek key solution based arbitrary grid size number solution first fifteen square grid gridnumber greek key tour solution space filing curve path show possible solution special class solution follow defined structure talked one example hilbert curve selfsimilar convolution described simple formula generating hamiltonian path instead enumerating possible permutation another alternative randomly generate one popular way use algorithm called backbite algorithm start nonrandom hamiltonian path basic easy make zigzag pattern random change made morph different path using procedure described ensures next generated graph also hamiltonian path constraint maintained algorithm select either two end point current graph select random one neighbor vertex end point one connected current point chosen vertex happens opposite endpoint add edge remove edge connected originally creates loop selected node valency three one link edge created one lead opposite end graph third loop back one loop back removed backbite resulting graph remains hamiltonian randomization repeated often desired example walkthrough example considering following path already hamiltonian path one end node selected random shown yellow new link added connection nearest neighbor considering link already present node possible new link shown dotted orange one candidate selected random added graph shown red addition new edge creates loop graph adding link also creates node valency three newly created link remains need determine two link break done propagating along two link one path take u endnode graph loop back one path go end loop back link form loop deletedthis backbite final result new hamiltonian path
191,Lobsters,visualization,Data Visualization,A Better Alternative to Piecewise Linear Time Series Segmentation (2007),https://arxiv.org/pdf/cs/0605103,better alternative piecewise linear time series segmentation,,obj stream oq n лz ǐku f mmb gú rv p ݩu e ƴͱ h x k h z tj v h xaau u u ދk pu oi h yml l k c qu u ur j q c jtң י vd l e ϲ si n caa e u k tqjfu av u u z q ô n qt ф c k q dt hd q
192,Lobsters,visualization,Data Visualization,Active Text for Structuring and Understanding Source Code (1996),https://pdfs.semanticscholar.org/7ff2/6dad3e5a3a4112e1ce1f291b09b89c91476d.pdf,active text structuring understanding source code,,scene using scenario diagram active text illustrating objectoriented programsk koskimies h mössenböckproceedings ieee international conference software
193,Lobsters,visualization,Data Visualization,Secrets of smooth Béziers revealed,https://raphlinus.github.io/curves/2018/12/08/euler-spiral.html,secret smooth béziers revealed,phd thesis crunching font file size tweeted κcurves interactive visualization euler spiral spiro viridis interactive visualization lobster hacker news,posted much lately admit gotten sidetracked thinking curve phd thesis curve spent year thinking put hold aside work crunching font file size week ago hrant papazian tweeted link paper κcurves adobe us curvature tool illustrator rekindled interest always found béziers unintuitive hard learn use well said expert hand capable quite smooth expressive curve made little interactive visualization think illustrates perhaps give insight use cubic béziers draw smooth curve one smoothest curve euler spiral indeed choosing right metric case minimum curvature variation proven smoothest fit tangent constraint main focus spiro work design curve using euler spiral convert béziers used software course κcurves paper point euler spiral spline shortcoming mostly always unique solution tend flip around moving control point spiro solver even le robust sometimes flaking giving result look like particle accelerator track let say euler spiral want convert closest possible cubic bézier segment gave optimization algorithm chapter thesis give tremendous amount insight good way visualize process bézier optimization run possible euler spiral segment within certain parameter range dusted thesis code came image horizontal axis tangent angle left side vertical axis tangent angle right side color represents armlength brighter longer using viridis colormap easy explain best play interactive visualization instead visualization accurate euler spiral plotted red cubic bézier top blue plot curvature function arclength looking map see clearly two domain antisymmetrical case symmetrical one angle close lower curvature side shorter arm higher curvature side longer one symmetrical domain way around perhaps surprising behavior jump one domain arm length change quite dramatically curve little arm length go zero get tiny cusp curvature go high cusp tiny see optimizer also found tiny domain going way zero arm length give slightly better result short arm length safely ignored though example large change control point subtle effect curve also insight exactly jump two domain occurs center segment match euler spiral believe point closely approximates parabola might interesting explore deeply exactly going one way thinking exploration cubic béziers large parameter space encompassing lumpy smooth curve smoothest one minimize minimum curvature variation functional plot map tell look find happy hunting discus lobster hacker news
194,Lobsters,visualization,Data Visualization,I made a thing: csv-1-2-3,https://evertpot.com/csv-123/,made thing,lotus obituary lotus register http,current job involves lot spreadsheet financial data like last job still mainly building rest api use textcsv link header instead hal anyway trouble finding simple clibased tool browser csv file reminded msdos application dad used use ibm lotus specifically remember around year old staring shoulder spreadsheet obsessed anything computer related least told memory could specifically remember cyan cgalike interface like see screenshots obituary lotus register anyway day decided make clibased viewer csv file golang readonly faithful replication lotus homagenod application dad source downloads github http
195,Lobsters,visualization,Data Visualization,Graph Visualization of Panama Papers Data In Neo4j - Revisiting After The Deutsche Bank Raid,https://medium.com/@lyonwj/graph-visualization-of-panama-papers-data-in-neo4j-9c08ca17039c,graph visualization panama paper data revisiting deutsche bank raid,graph visualization panama paper data revisiting icij offshore leak face latest deutsche bank scandal headquarters deutsche bank raided money laundering investigation icij analyze offshore leak database create geospatial data visualization showing shortest path rex tillerson queen england downloaded icij website desktop icij sandbox without download desktop icij available downloadable database see screencast sandbox sandbox sandbox previous post shown bloom graph visualization bloom bloom desktop graph apps,graph visualization panama paper data icij offshore leak face latest deutsche bank scandalthe panama paper offshore leak database data model database contains offshore legal entity connection themnews last week headquarters deutsche bank raided money laundering investigation result panama paper investigation rekindled interest public dataset icij released part offshore leak database post take look explore panama paper data context recent deutsche bank investigationfirst see access dataset using either desktop sandbox take look simple cypher query use search offshore company connected deutsche bank visualize result browser bloom finally learn use virtual node relationship simplify graph visualizationswe previously seen great example analyze offshore leak database familiar dataset suggest first give quick read quite interesting showing create geospatial data visualization even showing shortest path rex tillerson queen england datasetto follow along first step access offshore leak database database either downloaded icij website desktop icij accessed via sandbox without desktop icijthe icij made offshore leak database includes panama paper paradise paper available downloadable databasethe database includes interactive browser guide embeds image database query text walk exploring dataset see screencast sandbox allows spin instance demand hosted cloud choose several different sandbox use case include datasets guide walk querying visualizing dataconnection credential sandbox instanceafter signing sandbox see panama paper icij one sandbox use case choose choose launch sandbox second personal instance loaded panama paper dataset available ready start queryingprevious post shown explore data browser using cypher instead rehashing technique jump straight visualizing data using bloomgraph visualization bloom graph exploration application visually interacting graph data bloom designed enable exploration graph without writing cypher bloom available desktop need access key install request activation key activation key installed way graph apps installed bloom one many graph apps installed via desktoponce bloom installed desktop automatically connect active database using sandbox need create remote graph using connection credential specific private sandbox instancebloom us natural search phrase query graph use natural search phrase search entity node contain deutsche bank name expand node find connected entity officer intermediary etc
196,Lobsters,visualization,Data Visualization,Fo̅rmulæ – Symbolic computation framework,http://www.formulae.org,symbolic computation framework,welcome framework symbolic computation rewriting mathematica maple matlab fōrmulæ dictionary fōrmulæ dictionary matharithmeticaddition expression visualization prettyprint expression localized implementation expression edition fōrmulæ package arithmetic arbitrary precision rational number imaginary unit infinity threeway comparison membership string list fōrmulæ frontends readevalprintloop commandline fōrmulæ programming language turingcomplete dynamically defined programming language c c nonunique visualization program farey sequence,welcome fōrmulæ framework frontend programming language symbolic computation symbolic computation work repeatedly application rule transformation called rewriting symbolic expression rule applied simple example consider following sequence rule application mathematics field symbolic computation used traditional symbolic software mathematica maple matlab provided considerable fixed set rewriting rule fōrmulæ project work different way create rewriting rule provides specification anybody write regular programming rewriting rule also published convert process creating rewriting rule colaborative one fōrmulæ dictionary see number rule always increasing need documented fōrmulæ dictionary official mean dictionary organized expression tag expression tag unique name given kind symbolic expression ie mathematical addition operation receives expression tag matharithmeticaddition matharithmeticaddition dictionary entry enumerates describes every known rule applied expression tag expression visualization fōrmulæ framework specification create rewriting rule also defines specification visualize symbolic expression create method editing symbolic expression mean anybody write code define expression shown called visualization rule moreover multiple visualization rule specific expression although one used time common visualization rule show expression human usually called prettyprint moreover different visualization rule also written match science field localization see expression localized implementation even personal preference entry dictionary also describe known visualization rule specific expression tag expression edition fōrmulæ framework also defines specification edit create modify symbolic expression called edition rule entry dictionary also describe known edition rule specific expression tag fōrmulæ package package combination zero rewriting rule zero visualization rule zero edition rule packed single file ready published rule generally related field several package developed fōrmulæ team called standard package anyone pack rule heshe creates following standard package standard package description arithmetic number definition arbitrary precision calculation rational number imaginary unit infinity relation comparison threeway comparison minmax value setlist setlist membership logic logic literal true false logic operation first order quantifier predicate string string definition string operation symbolic symbol function global local scope symbol lambda expression expression subexpression retrieval expression cardinality tag management askshow expression list list definition dynamic creation list matrix additionmultiplication matrix cartesian product transposing determinant color color definition dynamic creation color programming sequence control block decision control ifelse iteration control foreach recursion standard package developed available soon standard package description diagram several kind diagram chart bar line pie chart plot mathematic plot function parametric polar contour line vector sufaces time date datatype definition timezones localization locale definition localized operation number string date representation object oriented programming class definition object instantiation inheritance polymorphism logic programming conversion horn clause backtracking theorem proving high order equational logic conversion conjunctive normal form resolution tree quantum programming simulated qbit definition quantum logic gate reversibility measurement fōrmulæ frontends must program symbolic expression created visualized edited apply rewriting rule frontend anyone write program according fōrmulæ specification however standard program called desktop following feature used install reinstall disable remove fōrmulæ package used choose visualization rule tag multiple used disable specific edition rewriting rule work readevalprintloop mode user creates expression question program invokes process rule application returning result answer process continues creating list questionanswers script like commandline mode unlike commandline interface user modify reevaluate previous question script saved file retrieved later script printed support cutcopypaste operation expression subexpressions support undoredo operation typical fōrmulæ desktop frontend sessionclicktap enlarge fōrmulæ programming language rewriting rule done traditional programming language used programming language called fōrmulæ programming language turingcomplete compute everything computable given rewriting rule visualization rule edition rule continuously created improved produce radical consecuences never seen traditional programming language dynamically defined programming language term dynamically defined programming language defined language feature capability defined added language time language able evolve change time traditionally programming language first fully designed grammar created order construct tool compiler done hard impossible make change language structure adding feature language usually lead new different language ie c c language nonunique visualization program multiple way symbolic expression look several form visualization program next example show definition function generates farey sequence given order using different visualization rule flowchart style traditional indented code style
198,Lobsters,visualization,Data Visualization,42 Years of Microprocessor Trend Data,https://www.karlrupp.net/2018/02/42-years-of-microprocessor-trend-data/,year microprocessor trend data,year microprocessor trend data ticktock model microprocessor trend data repository,following provide frequently requested update former year microprocessor trend data post two year additional data seem matter much however people watching transistor count whether moore law fade notably intel longer release number transistor processor also processor introduced much later initially scheduled ticktock model modified include refreshes regardless transistor count amd epyc ibm power obtain following updated plot clearly transistor count still follow exponential growth line amd epyc processor billion transistor contribute highest publicly disclosed transistor count processor todate comparison nvidia pascal gpu consists billion transistor number consistent upcoming introduction process node reasonable assume stay exponential growth curve transistor count next year additional transistor provide core gain see specint measure singlethreaded performance primarily due compiler employing autovectorization autoparallelization thus want benefit future processor make sure parallel workload raw data available microprocessor trend data repository available github
199,Lobsters,visualization,Data Visualization,New York City Mapped All of its Trees and Calculated the Economic Benefits of Every Single One,https://www.archdaily.com/800157/new-york-city-mapped-all-of-its-trees-and-calculated-the-economic-benefits-of-every-single-one,new york city mapped tree calculated economic benefit every single one,share new york city nyc park treescount new york city tree map,new york city mapped tree calculated economic benefit every single one via nyc park share sharefacebooktwitterpinterestwhatsappmailorpublic space square park new york city administered city department park recreation nyc park recent year agency responsible creating new program help child youth adult aware importance caring urban landscapeone program treescount gathered volunteer learn tree environment state care need measurement benefit surrounding community etcfor month walked street five borough together group monitor previously trained recognize tree studying characteristic information gathered walk gave rise urban forest registry available new york city tree map view statistic registered tree calendar activity related tree care total number specie find common tree neighborhood via nyc parksin term data tree detail left since one assigned unique id number well color indicating specie addition exact location accompanied corresponding image google street view possibility reporting possible issue may arise summary ecological benefit tree translated economic value mean choosing tree map see amount rainwater retains year expressed gallon money individual specimen save year amount electricity conserved also estimated calculated kilowatt per hour kwh well reduction air pollution formulated according figure u forest service estimate total ecological benefit tree give dollar case tree image one benefit population amount slightly usd year via nyc parksif want check map click
200,Lobsters,visualization,Data Visualization,Flying for Thanksgiving,https://bert.org/2018/11/18/flying-for-thanksgiving/,flying thanksgiving,public record request san francisco,grew los angeles parent would make big deal thanksgiving year even sister fully appreciate nice tradition created left home something able rely one thing year stay ground matter change happening life would try fly home thanksgiving every year kid convince parent fly san francisco biggest constant thing always rely argue best time fly thanksgiving parent like fly thanksgiving day think le crowded also tried go ikea superbowl sunday decided whenever think outsmart people also think smarter people end place year parent informed flying thanksgiving day leaving saturday seems absurd begs question best day fly thanksgiving worst day start hypothesis hypothesis someone stuck sfo weather flight delay get wifi start downloading podcasts watching netflix reading every page every social networking site finally reach point boredom check sfo foursquare really important friend foursquare know stuck sfo hopefully terminal bad food ssid wifi sfo called sfo free named someone wireless hotspot backpack running battery pack trying steal login information bank thing journalist want find information something tangentially involves government oh right file freedom information act request went website public record request san francisco started request plausible department department technology knew san francisco department technology run free wifi various location san francisco october wrote like total number unique sfo free user session per year well daily usage count january october went bed woke phone ringing department technology wanted clarification wifi network trying gather information explained wanted airport wifi statistic promised put touch correct person airport commission day pm got email public information officer sfo informing due california government code section c would receiving information requested november looked code say agency upon request copy record shall within day receipt request determine whether request whole part seek copy disclosable public record possession agency shall promptly notify person making request determination reason therefor november pm official wrote back attached document related request redaction received two pdfs one named daily usage looked like go page know backstory foia request end data formatted worst way possible still work use tool called ghostscript extract text pdf g sdevicetxtwrite outputtxt daily usage creates text file look like date ssid byte used gb sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi sfo free wifi next write regex extract data care sfo free wifi normalize data finally writing field csv make two separate csvs grepping dropping wifi network give u portable format render excel display chart sanity check result lastly convert json graph data visualization library thing stand first clear bad missing data february april look closely see heaviest wifi usage seems around thanksgiving take look calendar last year maybe best thing look two week slice starting nov ending dec lowest dip thanksgiving thanksgiving day parent right always right leaving right identified absolute worst day fly thanksgiving entire year sunday thanksgiving
201,Lobsters,visualization,Data Visualization,An interactive state machine demo,https://drakonhub.com/files/lift.html,interactive state machine demo,interactive state machine demo http githubcomstepanmitkinliftdemo http drakoneditorsourceforgeneteditorhtml http githubcomstepanmitkindrakoneditor unknown state machine demo hierarchy machine drakon make automatabased programming practical drakon visual language silhouette build state machine drakon machine demo door cabin scheduler liftmain strategic exactly awesome state machine decision tree testing conclusion reference friendly algorithm understandable everyone switchtechnology automated approach developing software reactive system yakindu statechart tool state machine drakon editor drakon actor message passing state machine drakonerlang http machinajsorg boost meta state machine http unimodsourceforgenet http rosmarojsorg,interactive state machine demo online interactive demo automatabased programming drakon stepan mitkinupdated august source code demo generated drakon diagram browse source code http githubcomstepanmitkinliftdemo drakon editor needed open drn file http drakoneditorsourceforgeneteditorhtml http githubcomstepanmitkindrakoneditor unknown state machine late surveyed fellow developer survey two question know state machine use staggering idea subject one developer said know state machine nt need worry develop software hardware like saying write c nt need internet java programmer surf internet state machine limited electronics state machine universal tool modeling behavior every piece software run longer fraction second behavior therefore almost program could benefit state machine demo press button play lift hierarchy machine demo us several state machine control virtual lift one machine typical situation practical application complex modeled one automaton state machine demo form treelike structure hierarchy essential hierarchy unrestricted net machine connect hard test support eventdriven environment master machine talk slave machine calling method slave machine regular class slave machine however communicate master sending message event loop requirement arrange machine tree sometimes strict practical purpose okay add additional link machine important thing graph machine must cycle machine sits lower graph must never directly call method machine drakon make automatabased programming practical even though state machine solid concept hard use mainstream programming language firstclass support state machine programmer want make machine follow informal pattern code handmade machine better class easy comprehend visualization might help draw state machine traditional state machine diagram confusing inconsistent give quick answer question like signal machine accept specific state state machine switch state another problem programmer often need manually write part machine separate file difficulty seem reason software industry widely accept state machine drakon visual language could solution problem state machine represented drakon chart type silhouette silhouette combine state machine decision tree silhouette diagram show state transition machine decision logic visual scene result working machine becomes easier another benefit using drakon state machine drakon ergonomically optimized visual language drakon diagram clean predictable consistent build state machine drakon demo show way represent state machine drakon silhouette diagram turn drakon chart state machine add state machine keyphrase parameter icon rectangle left top corner silhouette branch becomes state every branch must switch icon receive keyword case icon define signal machine accept hence method generated class address icon bottom control state switching way drakon editor generates one state machine class one silhouette diagram machine demo door control inner outer lift door one one internal door several external door one per floor motorconnect method connects inner door one outer door door translates logical opened closed position coordinate sends motor door following state closed opening open closing door closed state accepts open message gotten message door sends command motor open physical door enters opening state opening state possible send close message door start closing motor fully opened physical door sends done message door door report officially open door open state accepts close message closing state similar opening closing door waiting done message motor switch closed state cabin translates floor number coordinate control motor move lift cabin cabin either moving standing still two possibility make state cabin machine moving still gotten move command cabin set new target motor move accepted moving still state cabin moving wait done message motor done mean motor transferred cabin target floor job scheduler choose next floor scheduler make choice based three piece information button pressed direction current floor direction movement stored state current floor come scheduler choosenext message knowledge pressed button kept slave machine button since button slave machine cabin call method button machine directly lift moving towards fourth floor button inside cabin pressed scheduler decide lift stop third floor first button inside cabin pressed button third floor pressed instead lift skip third floor proceed fourth liftmain king hierarchy example liftmain make decision next based user input event lift machinery liftmain effectively class one state ready rule liftmain implement cabin stand floor button corresponding floor pressed open door signal button pressed come liftmain form go message note message come outside hit liftmain directly first button press event handled button machine go scheduler scheduler forward message liftmain remember topmost machine responsible strategic decision incoming message bother bos button pressed button point current floor door closed go respective floor combination condition handled decision tree go message door open close door second liftmain find door open getting opened message cabin door close move lift next scheduled floor door machine notifies liftmain door closed sending closed message lift arrives floor open door cabin come floor sends arrived message liftmain exactly awesome drakon show state machine decision tree transition logic diagram type state machine diagram useful drakon representing transition logic uml statechart example possible specify combination condition trigger specific state transition machine however combination condition encoded textual logical formula like one textual logical formula hard read drakon offer visual decision tree significant improvement textual formula instead deciphering formula developer follows path go decision tree decision tree make automaton easier comprehend increase developer productivity reduces number error another benefit ability alternate question action decision tree let take scheduler machine example handler choosenext message state scheduler try find pressed button want lift go current position scheduler query slave machine get information button pressed scheduler asks slave request send lift current position sequence interaction slave machine go continuous path decision tree need technical state interrupt flow like waiting response slave machine result machine state system concrete observable mode operation lift cabin either moving standing still concrete state intuitive easy find design stage testing behavior notoriously difficult test number possible path typical interactive program combinatorial besides previous action affect program state thus future response state machine drastically reduce number combination need tested however useful state machine must organized strict hierarchy wellchosen hierarchy remove irrelevant combination state drakon help create test scenario state go message machine accepts state take silhouette branch onebyone iterate case icon receive keyword case icon write short test make one test every path start case icon every test run one real state machine surrounded mock since machine talk master immediate slave mocking easy test similar structure first build machine tree assign input value property mock machine test send message machine finally check expected value conclusion state machine efficient technique modeling behavior since behavior permeates type modern software state machine great help many developer unfortunately software developer rarely use state machine hard work drakon change way build test state machine thanks drakon automatabased programming becomes practical affordable objectoriented programming reference f wagner r schmuki wagner p wolstenholme modeling software finite state machine new york auerbach publication v parondzhanov friendly algorithm understandable everyone moscow dmk press shalyto aa tukkel ni switchtechnology automated approach developing software reactive system programming computer software yakindu statechart tool mitkin state machine drakon editor mitkin drakon actor message passing mitkin state machine drakonerlang machinajs http machinajsorg boost meta state machine unimod http unimodsourceforgenet rosmaro http rosmarojsorg contact stipanmitkin gmailcom
202,Lobsters,visualization,Data Visualization,Github trending plus,https://github-trending-plus.surge.sh/,github trending plus,,
203,Lobsters,visualization,Data Visualization,Aho-Corasick,https://brunorb.com/aho-corasick/,ahocorasick,mastermind programming conversation creator major programming language ahocorasick efficient string matching aid bibliographic search deterministic finite automaton http githubcombrunorbahocorasick http githubcomwikimediaahocorasick http githubcomabusixahocorapy,year ago read mastermind programming conversation creator major programming language interesting book interview creator famous programming language great book definitely recommend anyone want take peek inside head guy created thing use everyday coding anyway right wan na talk remarkably useful thing discovered reading book ahocorasick algorithm ahocorasick algorithm searching occurrence finite number keywords text word arbitrary text set keywords want search text use ahocorasick accomplish efficient way algorithm described paper efficient string matching aid bibliographic search surprisingly simple elegant gon na go implementation detail since original paper quite approachable easily find online core idea algorithm build deterministic finite automaton called goto function map character transition different state also build failure function decides state go failed match goto function output function mark one keywords found text search iterating every character text advancing state find transition current one another pseudocode something like state index c text goto state c null state failure state output state null print index print output state index really interesting part algorithm search keywords performed parallel iterate every word searched text practice give u running time θ n n length searched text number match paper provides detailed time complexity analysis see working interactive example used algorithm number occasion respective library jsnode http githubcombrunorbahocorasick needed search list keywords text chat application php http githubcomwikimediaahocorasick used find massive list email subject contained dynamic set keywords p think lib bug numbersonly keywords python http githubcomabusixahocorapy crawling museum web page trying categorize one according big whitelist category p careful implementation break unicode one
204,Lobsters,visualization,Data Visualization,Visualizing quaternions,https://eater.net/quaternions,visualizing quaternion,,need enable javascript view site
205,Lobsters,visualization,Data Visualization,The Red Tide and the Blue Wave: Gerrymandering as a Risk vs. Reward Strategy,https://intoli.com/blog/gerrymandering/,red tide blue wave gerrymandering risk v reward strategy,rejected appeal pennsylvania supreme court ruling gill v whitford ballot initiative colorado michican utah gerrymandering elbridge gerry risk v reward tradeoff conclusion,election day approached increasingly heard phrase blue wave thrown around news article forum even everyday discussion term commonly understood mean high democratic turnout midterm could lead significant republican loss house clearly true unusually high voter turnout within single party help party chance election day bit blue wave mantra extends beyond imply republican especially susceptible loss house due widespread gerrymandering congressional district favor even aside relevance blue wave gerrymandering concept seems news almost constantly supreme court recently rejected appeal pennsylvania supreme court ruling state congressional district violated state constitution prevented election free equal last spring gill v whitford supreme court also decided rule wisconsin legislative map unconstitutional gerrymander currently ballot initiative colorado michican utah create independent commission draw congressional district map state difficult completely separate discussion gerrymandering politics try mostly remainder article example use simplified meant make direct statement current politics republican democratic party name used relevance explaining blue wave terminology main point explain general principle behind gerrymandering explain simple term gerrymandering work thought strategy exchange increased risk increased reward increased risk associated gerrymandering leaf advantaged party vulnerable unexpectedly large voter turnout party core idea behind blue wave concept intuitive see action interactive visualization help understand exact hypothetical mechanic blue wave gerrymandering gerrymandering fairly simple concept corresponds drawing voter district election outcome likely benefit one political party another practice often associated strangely shaped voter district name gerrymandering portmanteau reference salamandershaped massachusetts senate district drawn governor elbridge gerry although shape gerrymandered district might distinctive feature really sideeffect drawing district consist precisely controlled ratio democrat republican voter convoluted line strategically drawn one party likely win many district possible physical layout gerrymandered district interesting right mostly unimportant understanding different districting strategy affect likely outcome election let walk simplified example illustrates gerrymandering result one party significantly overrepresented imagine situation republican voter democratic voter need divided six different winnertakesall district contain six voter many different way could distribute voter district one way would put two republican four democrat district sort homogeneous distribution would result democrat winning six district would majority another strategy would two district composed republican four district composed democrat segregated distribution would result democrat winning four district republican two ratio district match ratio actual voter two party therefore result proportional representation homogeneous approach alternative strategy would three district composed solely democratic voter three district four republican two democrat election outcome case would democrat republican win three district representative gerrymandering work districting strategy carefully constructed maximize representation single party republican example basic idea behind strategy win narrow victory many district possible purposely losing remaining district much larger margin example republican win anywhere zero three district depending people divided district key thing take away extreme outcome correspond proportionally overrepresented party winning district narrow margin take look next section narrow margin result large deviation expected outcome risk v reward tradeoff order explore gerrymandering affect risk let look slightly realistic example extend number district consider composition district term percentage instead discrete voter default setting place percentage voter republican assume gerrymandered districting strategy strategy allows republican win district numbered narrow margin increase democratic voter turnout district dragging slider labeled extra democratic voter turnout see come point narrow republican victory suddenly flip relatively small surge number democratic voter compare segregated strategy democratic voter turnout almost impact overall election result one could also imagine variety strategy fall two extreme trying win district segregated strategy maximally gerrymandered strategy segregated strategy thought least risky strategy outcome largely independent voter turnout additional district gerrymandered strategy attempt win narrow margin make strategy vulnerable high democratic turnout higher reward strategy come directly expense higher risk conclusion sum idea behind blue wave terminology republican narrow lead number district could flipped en masse event unexpectedly high democratic turnout gerrymandering involves sacrificing larger margin victory district exchange higher number expected victory margin disappear variation voter turnout similar factor make gerrymandered strategy inherently risky strategy result something closer proportional representation
206,Lobsters,visualization,Data Visualization,XOR Swap Explained Visually,https://teaearlgraycold.me/xor-swap-explained-visually/,xor swap explained visually,xor swap explained visually http enwikipediaorgwikixorswapalgorithm black white,xor swap explained visually nov common riddlelike question programmer asks swap value two integer without temporary intermediate value two common solution aware addition swap xor swap look like c void addswap unsigned int x unsigned int x x x x x x void xorswap int x int x x x x credit http enwikipediaorgwikixorswapalgorithm interesting two xor swap us single operation rather addition subtraction addition swap wikipedia try explain bit vector think bit black white image work better image black corresponds white corresponds b becomes white anywhere b unique presence b black pixel everywhere else black b b b combination unique original image apply xor operation remove unique b leaving unique point b swapped become circle b b b perform operation previous step get back original value b since b hold circle want square remove unique circle leaving square b code used generate image import sys pil import image imageopen apng b imageopen bpng asize bsize print image must dimension sysexit amode bmode print image must mode sysexit result byte agetpixel x bgetpixel x range asize x range asize imagefrombytes p asize result save outpng
208,Lobsters,visualization,Data Visualization,Map with a time slider showing 1000 year of city’s history,https://www.maptiler.com/blog/2018/10/timemachine-atlas.html,map time slider showing year city history,timemachine europe map aâ timeline timemachine project timemachine project timemachine atlas prototype timemachineatlaseu roman empire vector map technical detail collaboration andâ future github openstreetmap maptiler desktop maptiler cloud amsterdam budapest paris experience web application timemachineatlaseu,timemachine europe map aâ timeline published oct timemachine project allows traveling time mapping last year history maptiler team join effort contributes knowhow field geographical data visualization building online map prototype called venice time machine atlas epfl lausanne show historical data map presented broad audience timemachine project timemachine project educative collaborative effort mapping last year history two hundred institution involved ranging museum archive hightech company working field artificial intelligence digitization maptiler team involved expert field modern well historical map timemachine atlas prototype prototype timemachine atlas map venice changing throughout last year development demo project available timemachineatlaseu address geographical data supplied university employee equipped time stamp determining building start date duration technologically timemachine atlas follow previous roman empire vector map map armed time slider automatically play evolution based historical data bring favorite era user compare map modern map satellite view two scanned historical map data available also additional information selected building like name time duration others technical detail collaboration andâ future timemachine atlas technology powered openmaptiles toolset opensource project serving vector tile available openmaptilesorg source code published free bsd ccby license github suggested data model future development based openstreetmap tagging convention added startdate enddate tag using open wellknown data format boost collaboration project open data format allows usage set existing tool eg vector tile generated gi data drawn qgis supplied shapefiles turned vector tile example upcoming maptiler desktop data vendor lockin ported various environment served currently hosted maptiler cloud service offer worldwide map easily customized fit old feeling hosting additional geodata global satellite layer whole project collaborative opendata opensource communitydriven development hope map grow contribution project partner working time machine amsterdam budapest paris city country experience web application timemachine atlas prototype venice available online timemachineatlaseu
209,Lobsters,visualization,Data Visualization,Human Terrain (Global Population Density),https://pudding.cool/2018/10/city_3d,human terrain global population density,,something world city
210,Lobsters,visualization,Data Visualization,Developing a 3d fractal exploration game,https://medium.com/@bananaft/my-journey-into-fractals-d25ebc6c4dc2,developing fractal exploration game,shadertoy cone marching described paper demo group fulcrum,hi greg last two year developing fractal exploration game started experimenti would describe technical artist meaning bad arting coding experience shader programming love unusual experimental technological artistic decisionsone day looked shadertoy decided write fractal renderer game engine convenient long run shadertoy cool would fractal game engine since used game engine home project open source engine deferred shading render path among couple others might cool anymore still love deferred shading allow light fractal light also easy setup hdr autoexposure bloom shaders written plain hlsl glsl use opengl sure going fun little weekend project oh wow workingzclipping regular polygonal geometryugly noisy normal lightingwhen introduced lighting super noisy due infinite number super tiny detail aliasing normal intense msaa deferred luckily couple trick raymarching make sure resolving detail smaller pixel size help lot picture much smoother nowbunny shaped hallway location formula lost forever several idea optimize fractal raymarching seemed wasteful ray pixel neighboring ray basically trace path obvious solution would somehow combine effort fewer ray diverge last bit travel first idea draw grid quad screen march space vertex shader finish job pixel shader stupid idea quickly realized much easier setup lower resolution depthbuffers fiddle polygonal grid need edit renderpathxml depth v full resolutionso marched thick ray lower resolution read result continued ray path higher resolutionthis screenshot show thicker lowres ray reach infinity empty part image skipped higher resolutionsi sure method obvious invented never knew right word google year later found technique called cone marching referring fact ray getting thicker distance described paper demo group fulcrumthis paper still great detailed description tech especially last part talk way squeeze performance detail making trade offs lot way cut corner really come artifact find tolerable ended using four low re pass finally fullres make ray step maximum gtx run fps bottleneck course pixel shader instruction fractal rendering overdraw gbuffer bandwidth deferred shading meaning scale pretty badly increased resolution opposite also true lower resolution run pretty old discrete gpusthere still lot stuff improve try sure setup far perfect even though revisiting refining several time surprised much achieve randomly swapping stuff around adding magic number trying observing result instead figuring mathematically correct academically valid methodhere everything looked three week
211,Lobsters,visualization,Data Visualization,Generating Music From Emotion (and other experiments),https://www.youtube.com/watch?v=dpiN2DZxU_4,generating music emotion experiment,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature generating music emotion experiment hannah davis youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature generating music emotion experiment hannah davis youtube
212,Lobsters,visualization,Data Visualization,npm universe,http://anvaka.github.io/allnpmviz3d/,npm universe,,press space deactivate steering mode tooltipname
213,Lobsters,visualization,Data Visualization,prim9: a software system from the 70s for visualizing and masking high-dimensional data,https://www.youtube.com/watch?v=B7XoW2qiFUA,software system visualizing masking highdimensional data,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature youtube
214,Lobsters,visualization,Data Visualization,Announcing BuildInfer for C++,https://medium.com/@buckaroo.pm/announcing-buildinfer-for-c-3dfa3eb15feb,announcing buildinfer c,announcing buildinfer c analyze visualize migrate buildsystems get touch http buildinferloopperfectcom great could extract readable build description c project regardless buildsystem used announcing buildinfer buck initial finding buck mapnik headerfile,announcing buildinfer canalyze visualize migrate buildsystemsis c build slow unintelligible currently looking case study interested improving linuxbased build commercial opensource please get touch http buildinferloopperfectcomthe c community fragmented due variety buildsystems used fragmentation make difficult understand thirdparty library worksintegrate two library togetheroptimize across library eg lto build tooling c sourcecode header implement artefact cachingidentify step build process slowing downfor c community mean time wasted gluing project togethertime wasted waiting slow buildstime wasted rewriting code already exists difficult integratewouldn great could extract readable build description c project regardless buildsystem used announcing buildinferby recording build process systemlevel infer highlevel information project structure since buildinfer record lowlevel technique work c build systemonce highlevel build description visualize transform even port complex buildsystems powerful one buck bazelinitial findingswe already success porting following project buck furthermore discovered none project ship reproducible buildsystem porting buck guarantee thisreproducible build crucial security cache performance debugging information see mapnikmapnik open source mapping toolkit desktop serverbased map rendering written cporting mapnik scons buck reduces buildtimes minute minuteswe estimate enabling precompiledheaders improve buildtimes mapnik use versionscripts requiresfvisibilityinline shared build prevent symbol clash identified core issue non static definition within headerfile using buildinfer outputwe generated graph showing interaction individual file group executables
215,Lobsters,visualization,Data Visualization,A Taco Truck On Every Corner… or Not?,https://a2civic.tech/blog/2018/09/30/a-taco-truck-on-every-corner-or-not.html,taco truck every,introduction post proposed food truck ordinance ricewood objective weapon choice qgis postgis getting started provides lot useful gi data set map projection fantastic pdf loading data postgis download parcel shapefile download zoning shapefile part parcel taco truck every visualization north ann arbor south ann arbor downtown ann arbor second pas creating buffer zone subtracting buffer source bonus visualization color north ann arbor south ann arbor downtown conclusion next step get touch,introduction recently came across post ben connor barrie damn arbor proposed food truck ordinance according article highlight mobile food vending service shall located required setback sight distance triangle required buffer mobile food vendor may allowed office commercial industrial district parking district mobile food vendor shall prohibited residential district district shall minimum separation residential use residentially zoned district measurement shall taken property line property line closest point conclusion ordinance would allow food truck food cart area zoned office commercial industrial parking place residential area mean goodbye beloved ricewood current location importantly would ban food truck office commercial industrial parking zoned parcel would apparently make beloved ricewood illegal current location else would make illegal would food truck legal illegal ordinance interesting problem solve civic data provided city county give shot objective need prove whether area zoned office commercial industrial parking foot away area zoned residential ordinance effectively outlaw food truck would like figure exactly food truck allowed first pas look parcel inside outside buffer part food truck parcel within buffer zone assume entire parcel food truck second pas though actually able tell exactly food truck permitted even buffer zone end halfway parcel also make assumption zone ordinance talking lawyer assume ordinance revision committee discus sake writeup considering following zone allow food truck per ordinance affectionately abbreviated comp zone office orl officeresearchlimited industrial p parking local business campus business campus businessresidential central business central businessresidential business service business serviceresidential fringe commercial limited industrial limited light industrial heavy industrial idea list correct bit unsure mixed zone eg ordinance mention commercial residential zone sure mixed use zone considered case give u something work give u bestcase scenario think considering following zone food truck prohibited within foot singlefamily dwelling singlefamily dwelling singlefamily dwelling singlefamily dwelling twofamily dwelling twofamily dwelling townhouse dwelling multiplefamily dwelling multiplefamily dwelling multiplefamily dwelling multiplefamily dwelling mobile home park weapon choice fan open source tool guessing esri stupid expenisve used specifically qgis quick sandboxing ad hoc visualization postgis actual parcelzone computation inserting shapefile data postgis getting started interested seeing comp zone within foot residential zone mean going need parcel map zone attached parcel first road block city ann arbor provides lot useful gi data set unfortunately provide parcel map zone provide parcel map washtenaw county map zoning district able use information figure zone parcel checking see piece zoning geometry overlap given parcel weapon choice postgis set gi extension powerful postgres database map projection go talk projection flat earthers feel free skip ahead everyone else preface saying mean mathematician geographer never stopped used globe find thing might familiar degree minute second example city hall located n w start equator go degree minute second north start prime meridian run greenwich england course go degree minute second west wind right top city hall wondering people showed complain building housing called spatial reference system sr spatial reference system necessary interpret coordinate sphere plane without sr coordinate meaningless specifically geographic coordinate system gc projected coordinate system pc gc measure distance angular unit eg degree pc measure distance linear unit eg meter thousand different sr one unique identifier called srid wellknown geographer used frequently like aka world geodetic system representation one gps us city release shapefiles srid state plane coordinate system measure distance linear foot wait say earth oblate spheroid transform degree coordinate plane glad asked projection take point sphere map onto plane math issue though sphere spheroid like earth project perfectly onto plane always kind distortion comparison try flattening orange peel without tearing different projection introduce different amount distortion way get projection perfectly suitable type mapping need sr information handle projection coordinate sr use like said thousand care one tiny part globe ann arbor michigan turn local sr tailored specific area around world make sense closer get surface sphere flatter surface get easier becomes transform point sphere point plane try flatten orange peel care tear norway concerned coordinate ann arbor mi data using srid local coordinate system developed use michigan measure distance foot also distance meter since ordinance us foot stick michigan dnr fantastic pdf explains coordinate system map projection much better actually notice started importing shapefiles postgis eversoslightly accurate sr visualization use srid though stick keep mind actually modify srid imported data summarize city provides map data point oblate spheroid need transform point plane measure distance thing foot instead degree requires switching sr gc pc loading data postgis going skip setting postgrespostgis familiar postgres powerful free open source sql database postgis set extension make working gi data easier postgres postgis dazzling array feature make easy u analysis like like follow along install postgres install enable postgis extension need anything besides default cover getting started postgrespostgis another article interest first grab actual shapefiles shout ann arbor city government providing data open civic data important even seem like lot u appreciate enables u thing like plus mapmaking fun download parcel shapefile download zoning shapefile extracted load postgis f postgresql pg dbname dbname user username password password aazoningdistrictsshp nln zone nlt promotetomulti lco precisionno ssrs f postgresql pg dbname dbname user username password password parcelsshp nln parcel nlt promotetomulti lco precisionno ssrs nlt promotetomulti prevents error incorrect geometry type lco precisionno prevents error numeric overflow ssrs transforms geometry michigan state plane sr michigan georef also want add spatial index table make computing thing like intersection distance much faster create index zonesgix zone using gist wkbgeometry create index parcelsgiz parcel using gist wkbgeometry postgresqueryable map washtenaw county parcel ann arbor zoning district part parcel map loaded postgis need figure parcel inside zone go parcel check zone go let say geometry tricky word like etc specific meaning necessarily intuitive initially tried checking zone parcel overlap zone contains parcel difficult precision data geometric predicate specific example piece geometry another mean two piece geometry share space one completely contained inside something like geometry completely covered another geometry use containswithin work geometry perfect data perfect though parcel tiny sliver exist outside zone case lot sliver easy heuristic though check overlap contains narrow choice additional condition compute intersection parcel zone intersection two least area original parcel parcel probably inside zone say degenerate case parcel actually split zone happen checked official zoning map parcel fact seem split zoned planning commission deal though ignore parcel join parcel table zone table geometry pair check part parcel inside zone least area parcel following query create table parcelswithzones select pogcfid pwkbgeometry ppin zzoningclas zminorcivil parcel p join zone z stoverlaps zwkbgeometry pwkbgeometry stwithin pwkbgeometry zwkbgeometry starea stintersection pwkbgeometry zwkbgeometry starea pwkbgeometry parcel map ann arbor almost every parcel zone associated test database select parcelswithzones limit ogcfid zoningclas minorcivil wkbgeometry pin taco truck every find parcel satisfy following condition parcel one comp zone parcel least foot away nearest residential parcel postgis handy function called stdwithin take two geometry distance tell whether within distance multiploygons geometry almost positive us nearest two point geometry conveniently ordinance assumes distance well give u opposite result though tell u everywhere food truck allowed interested knowing allowed initially tried checking see residential parcel within foot always parcel foot away comp parcel work use set operation subtract set parcel food truck allowed total set comp parcel leave u set parcel allowed query straightforward create table foodtrucks select pin wkbgeometry zoningclas parcelswithzones zoningclas orl p except select parcelswithzones join parcelswithzones orl p stdwithin create table comp zoned parcel set subtraction comp parcel within foot residential parcel set subtraction b operation return item b example return query effectively remove parcel food truck would illegal set parcel leaving parcel would legal visualization postgis table geometry parcel food truck allowed combine parcelswithzones table visualize food truck allowed lightest green parcel unrelated consideration ordinance next lightest green residential parcel darker green comp parcel darkest green comp parcel least foot away residential parcel presumably food truck would allowed north ann arbor south ann arbor downtown ann arbor second pas great first pas initially okay solution managed convince part parcel within ft residential zone entire parcel allowed food truck pretty sure buffer zone work though luckily change approach slightly easily figure precisely food truck allowed even buffer end halfway parcel postgis provides function stbuffer generate buffer geometry around shape give radius foot creates geometry cover point within foot shape case use generate buffer zone around parcel polygon slowly stunion create one multipolygon perform cross join parcelswithzones geometry ultrafoodtruckbufferzone geometry parcel comp zoned leave behind either empty geometrycollections polygon represent comp area food truck allowed finally clean data bit ready visualized creating buffer zone ordinance specifies buffer zone around residential create think better name create table bufferzone select stunion stbuffer wkbgeometry wkbgeometry parcelswithzones zoningclas create rounded buffer geometry point cover foot direction residential parcel merge one multipolygon open qgis look something like buffer shape yellow give u zone around residential parcel ann arbor pretty cool right subtracting buffer area food truck allowed perform subtraction difference geometry get area food truck allowed stdifference geom geom b function quick refresher various operation perform geometry source query create table foodtrucks select stdifference wkbgeometry parcelswithzones cross join bufferzone zoningclas orl p parcel table buffer region want remove parcel geometry share space buffer zone geometry compzoned parcel remove parcel geometry food truck allowed ignoring zone banned entirely cross join let u check parcel bufferzone object without specifying join condition bufferzone table contains one row open qgis get something like area food truck would permitted zoom bit even see outline buffer zone created residential parcel bonus visualization color add little color white unrelated parcel green residential purple comp parcel close residential host food truck blue food truck allowed north ann arbor south ann arbor downtown conclusion data tell u assuming chose zone correctly think safely say de facto ban food truck idea little much appear several area vendor set shop sure economically viable separate issue next step sound like ordinance revision committee meeting went really well lot people showed offer suggestion talk important sound like committee receptive another good idea would clarify zone considered commercial office industrial parking specifically whether mixeduse commercialresidential zone count commercial residential sake ordinance also plan offer interactive map openlayers perhaps even replacing image explorable map involves little effort set though write another post time implement get touch finally hope beginning something great lot public data like beginning idea thing like see mapped question think answer open data even want say send email hello thanks
216,Lobsters,visualization,Data Visualization,The RISC Algorithm Language (RISCAL),https://www3.risc.jku.at/research/formal/software/RISCAL/,risc algorithm language riscal,risc algorithm language riscal jku linz student project thesis gnu gpl video presentation paper virtualbox download riscal standard widget toolkit swt readme change copying html pdf subversion repository subversion subversion client riscal webex video presentation paper talk wolfgang schreiner,risc algorithm language riscal july riscal introduction printtrace command expression jku linz student project thesis see join development riscal risc algorithm language riscal specification language associated software system describing mathematical algorithm formally specifying behavior based mathematical theory validating correctness algorithm specification theory executionevaluation software implemented java freely available term gnu gpl take look video presentation paper click enlarge screenshots virtual machine download preconfigured virtual linux machine free virtualbox virtualization software riscal execution m window mac o linux virtual machine riscal start software login user guest password guest doubleclick terminal icon execute riscal installation software sample specification available softwareriscal risc user riscal installed risc environment start softwarem execute module load riscal riscal download riscal includes file running software gnulinux computer others appropriate version standard widget toolkit swt downloaded installed see file readme change copying tutorial manual html pdf user documentation software subversion repository web interface subversion repository hold source code program repository read anonymously subversion client url svn svnriscjkuatschreineriscal riscal webex software produce web exercise riscal video presentation slidebased video presentation riscal paper publication report riscal talk slide presentation riscal wolfgang schreiner last modified august
217,Lobsters,visualization,Data Visualization,Page to quickly create GIFs with JavaScript,https://jott.live/edit/animation/gaussian_plot,page quickly create gifs javascript,,
218,Lobsters,visualization,Data Visualization,Optimal text segmentation for QR Codes,https://www.nayuki.io/page/optimal-text-segmentation-for-qr-codes,optimal text segmentation qr code,optimal text segmentation qr code introduction live application javascript user input program output optimal text split segment detail table column explanation idx mode head bit data bit seg bit char text string various statistic table explanation note source typescript code compiled javascript code qrsegmentadvanced algorithm,optimal text segmentation qr code introduction qr code standard offer multiple way encode text text string split segment segment different mode primary mode numeric alphanumeric byte kanji mode support different set representable character different bit cost per character demo show find optimal way split given string qr code segment best mode technique dynamic programming used minimize total number bit encode live application javascript user input program output optimal text split segment detail idx mode head bit data bit seg bit char text string table column explanation idx index segment starting mode either byte alphanumeric numeric kanji head bit number bit segment used header info data bit number bit segment used textual data seg bit number bit whole segment equal header plus data bit char number unicode code point nonbyte mode number code unit byte mode contained segment text string user text substring represented segment various statistic property optimal byteonly saving text length code point number segment na qr code version total segment bit table explanation optimal column represents algorithm demonstrated byteonly column represents scenario entire text always put single segment byte mode work text encoded byte moreover segment allowed zero byte unnecessary specialcase generate zero segment thus encoder always us single bytemode segment result simplest implementation handle unrestricted text optimal byteonly segmentation qr code version either minimum version fit segment bit userspecified minimum version whichever value greater segmentation total segment bit includes segment header data bit value excludes terminator pseudosegment padding bit padding byte remainder bit list segment requires bit largest possible qr code version userspecified error correction level offer message long displayed note segment number header bit depends mode qr code version header bit strictly increase going version version going exception byte mode header bit increase version behavior text segmentation optimal version might optimal version algorithm start lowest version number computes optimal segmentation add segment bit data error correction code codewords fit qr code version done otherwise increment version number repeat process necessary specify error correction level influence minimum version needed contain given text string also minimum version user input used artificially force version higher see affect segmentation javascript demo computes given text string split optimal segment final size however actually encode bit generate qr code source typescript code compiled javascript code available viewing codebase important function performs dynamic programming compute optimal segmentation computecharactermodes java qr code library class qrsegmentadvanced performs optimal segmentation encodes character bit list segment fed qr code generator make barcode functionality available exclusively java language version language qr code specification appendix section give algorithm minimize bit stream length goal algorithm wording qr spec difficult understand believe leaf case believe situation algorithm yield smallest possible output whereas believe independently formulated algorithm complete correct minimal possible input either way note optimization optional encoder legal use bit strictly necessary encode piece text possible use extended channel interpretation mode segment switch national character encoding save space example text many accented latin character encoded fewer byte however meaning ecis outside qr code specification using character encoding generally bad idea supporting ten different character encoding would greatly complicate optimization algorithm dynamic programming algorithm optimal segmentation run linear time linear space requires scanning entire string forward backward forward hence streaming algorithm algorithm basic info qr code segment work segment three field mode bit character count variable bit depending mode current version character data variable bit depending mode character count given mode number character count bit either stay increase qr code version increase example numeric mode segment character count field bit version bit version bit version numeric mode encode set character us bit per character rounded integer example numeric mode segment containing character us bit char b char b char b char b alphanumeric mode encode set character us bit per character rounded integer byte mode conventionally interpreted text hence unicode code point encoded cp us byte mode us bit per byte obviously mean bit per cp kanji mode encode character defined shift ji encodable set includes kanji used japan hiragana katakana east asian punctuation fullwidth ascii greek cyrillic miscellaneous ordinary ascii mode us bit per character let text string want segment optimally let n length code point let v qr code version using first define two mutually recursive function let f minimum number bit encode foremost n code point encoding end segment mode example f kanji represents minimum bit encode prefix last segment may zero character kanji mode note f never infinity let g minimum number bit encode foremost n code point last cp prefix encoded mode encoded mode g note function allow fractional bit count ensure numerator always integer smallest choice denominator numeric mode us bit per character alphanumeric mode us byte mode us kanji mode us second reason base case mode let f bit length empty segment mode number character count bit segment mode version v third reason inductive step index n mode compute g look f already end mode try add one character end mode code point encodable mode let g f bit length one character mode otherwise let g index n mode compute f look g possible mode switch mode need finish segment mode mean rounding fractional bit whole bit start new segment mode incurs bit cost hence f min ceiling g bit length empty segment mode furthermore let h mode selected minimization achieve value f word f bit achieved last character encoded mode h computed table bit cost f n possible mode initialize blank array c length n store best mode needed encode code point fourth work backward cost table figure best mode code point index find mode minimizes f n tell u best mode segmenting whole text string update h n represents best mode encode code point index store c update h store c repeat finish storing c finally array c representing best mode code point input string scan array forward starting new segment whenever mode change putting current code point current open segment
219,Lobsters,visualization,Data Visualization,Flocking,https://www.blog.drewcutchins.com/blog/2018-8-16-flocking,flocking,flocking craig reynolds separation cohesion heading emergent behavior comment powered disqus,flocking drew cutchins august ever watched school fish flock bird even crowd people watched move moving together yet without leader exhibiting behavior known flocking programmer craig reynolds defined behavior according three rule separation member steer maintain defined distance one another alignment member steer face similar direction member around cohesion member steer remain close flock create flocking behavior code using rule first need way represent single member flock called boids boids position velocity acceleration every frame simulation use acceleration velocity value update position defining model boid class boid initialized starting x position constructor xpos ypos mass boid dictate responsive flocking force thismass thisposition x xpos ypos thisvelocity x thisacceleration x heading represented decimal value indicating radian get heading return thisvelocityx thisvelocityy function called guide boid flocking applyforce force acceleration force devided mass thisaccelerationx forcex thismass thisaccelerationy forcey thismass update later add code change velocity boid given suroundings updateposition updateposition acceleration change velocity thisvelocityx thisaccelerationx thisvelocityy thisaccelerationy veloity change position thispositionx thisvelocityx thispositiony thisvelocityy acceleration reset frame thisacceleration x next let create model entire flock defining model flock class flock constructor flocksize thisboids thissize flocksize thispopulateflock populateflock var n n thissize n boids created center graph thisboidspush new boid angle boids evenly distributed circle var angle n thissize mathpi velocity set based calculated angle thisboids n velocity x mathcos angle mathsin angle updateflock var thissize thisboids update finally create function render flock created function irrelevent flocking algorithm therefore included article function renderflock flock var flocksize renderboid flockboids function renderboid boid drawtriangle function take position rotation parameter drawtriangle boidpositionx boidpositiony boidheading alright let test flock update var flock new flock function loop loop run every millisecond settimeout loop flockupdate renderflock flock restart simulation wait boids gone soon leave canvas add bit code make side screen wrap one another boid leaf left side canvas reappear right side restart simulation flock management rendering code set start applying three rule flocking however order boids need information boids nearby need change boid update function take array neighboring boids parameter also need allow updateflock function provide boid update neighbor class flock constructor flocksize proximity boids considered neighbor thisneighbordistance neighbordistancesquared compared square distance neighbor avoids performance costly square root operation thisneighbordistancesquared mathpow thisneighbordistance updateflock var thissize var neighbor iterates boids find neighbor var j j thissize j j var squaredistance mathpow thisboids j positionx thisboids positionx mathpow thisboids j positiony thisboids positiony squaredistance thisneighbordistancesquared neighborspush thisboids j thisboids update neighbor separation finally begin applying separation boids force calculated sum vector pointing away nearby boids class boid constructor xpos ypos define ideal distance boids keep one another thisseparationdistance strength boid avoid others thisseparationstrength update neighbor var separationforce calculateseparation neighbor thisapplyforce separationforce updateposition calculateseparation neighbor vector force want apply boid keep away neighbor var separationforce x var neighborslength distance sqrt var distance distance thispositionx neighbor positionx thispositiony neighbor positiony distance thisseparationdistance offset two boids var offset x thispositionx neighbor positionx thispositiony neighbor positiony note use normalize function scale vector magnitude value used indicate direction rather distance function included javascript implement var normalizedoffset normalize offset normalized offset divided distance boids boid requires le force avoid var force x normalizedoffsetx distance normalizedoffsety distance calculated force added total separation force separationforcex forcex separationforcey forcey return separationforce watch boids avoid one another try playing avoidance strength seperation distance value note seperation distance greater neighbor distance value cohesion next implement cohesion forcing boids toward average position neighbor cohesion essentially opposite separation boids close repel one another far atract one another two force work together maintain specified distance boids class boid calculatecohesion neighbor average position neighbor var averageposition x track number boids within cohesion distance var count var neighborslength var distance distance thispositionx neighbor positionx thispositiony neighbor positiony distance thiscohesiondistance averagepositionx neighbor positionx averagepositiony neighbor positiony count averageposition count var displacement x averagepositionx thispositionx averagepositiony thispositiony vector force want apply boid keep away neighbor var cohesionforce x displacementx thiscohesionstrength displacementy thiscohesionstrength return cohesionforce note boids stick near one another however boids resemble clump rather flock combining separation cohesion create much realistic behavior heading last least need implement final rule force boids similar direction neighbor travelling class boid calculatealignment neighbor average velocity neighbor var averagevelocity x track number boids within cohesion distance var count var neighborslength var distance distance thispositionx neighbor positionx thispositiony neighbor positiony distance thisalignmentdistance averagevelocityx neighbor velocityx averagevelocityy neighbor velocityy count average sumcount averagevelocity count var alignmentforce x averagevelocityx thisalignmentstrength averagevelocityy thisalignmentstrength return alignmentforce combined three simple rule created complex emergent behavior hope enjoyed reading flocking learned something new please provide feedback suggestion comment please enable javascript view comment powered disqus
220,Lobsters,visualization,Data Visualization,Mathematics of a roller chain animation,https://www.xarg.org/2017/12/mathematics-of-a-roller-chain-animation/,mathematics roller chain animation,calculating chain length case case case calculate position link case case case case sorry comment closed article contact want leave note,december two circular sprocket midpoint radius want find way put chain around animate link like let start trivial observation distance two midpoint difference two radius zero circle size negative circle greater radius theta rotation angle two circle calculated thetatan left frac right point opposite point calculated follows rot frac pi phi theta rot frac pi phi theta rot frac pi phi theta rot frac pi phi theta calculating chain lengthcase triangle right angle point line parallel line also length easier tsqrt using pythagorean theorem phi calculated using law sine phisin left frac right inverse tangent phitan left frac right parameter length chain calculated two straight line plus two arc around circle length arc cdot frac pi pi cdot frac pi pi total length chain given l case case analogue case flipped indicescase stated radius length become zero equal seen tsqrt case phi zero analogue case thus length case already handled case since loses negative sign squared need case calculate lengthcalculate position linkslets say n link follows length every link overline l frac l n open chain put straight table segment chain illustrated sketch mean start point go arc length continue length go arc left length back point get arbitrary point c calculate c mod l keep circular chain initial distribution link line kcdot overline l forall k n four segment handled separately case calculate parameter pin represents position percent given segment additionally current position c kcdotoverline l z forall k n zinmathbb r calculate point nk position kth link z free parameter scrollcase c p frac c nk rot frac pi phi theta p pi phi case c p frac c nk rot pi phi theta cdot cdot p case tleq c p frac c nk rot frac pi phi theta p pi phi case c l p frac c nk rot phi theta cdot cdot p might also interested following sorry comment closed article contact want leave note
221,Lobsters,visualization,Data Visualization,Putting a Finger on Our Phone Obsession,https://blog.dscout.com/mobile-touches,putting finger phone obsession,q often touch phone oh time day emotionally people nerd mobile session day dscout free copy report covered many time day user interact phone many session day people use phone time day people touch phone phone locked many apps people actually using apps touched app type generate touch others often touch anything made google facebook apps use together session people care much use phone good use people time q many time day user interact phone people tapped swiped clicked whopping time day average back index q many separate time day people actually pick mobile phone use average user engaged separate phone session day heavy user top averaged session day back index q time day people use phone activity drop far disappears predawn hour touch explode ramping almost continuously dinner time back index q use phone without even unlocking count right course calorie counting last donut nearly half user session locked phone give human opportunity distraction take back index q apps phone count many apps people actually using many touch apps receiving half active phone session used one app back index q one app per session let yes facebook total number touch app racked finger time native messaging even home screen back index q apps touchier others given facebook win touch google win session expected social medium search take touch per session prize back index q often touch anything made google facebook nearly half touch guided apps made alphabet zuckerberg half split among apps textra back index q use tinder netflix together wish knew two apps plus okcupid highest use time period hour school work prime time back index q people give sh tapping one two million time year really according scout learning level phone use stunning back index touch well spent shareable version report,q often touch phone oh time day know life since apple launched iphone nearly ten year ago little screen always pocket backpack nightstand u u feel pull hard dimensionalize much really attached phone physically people nerd dscout research team exists understand pull first dug discovered dearth good data pundit long tossed statistic often use phone pretty much everyone reference kleiner perkins report citing mobile session often number taken context decided dig data dscout webbased research platform pair smartphone app capture inthemoment behavior study recruited demographically diverse sample android user pool participant built supplementary smartphone tool track every user interaction across day hour day every interaction mean every tap type swipe click calling touch like greek tragedy learned simultaneously expected little bit sad follows insight help better understand intensity mobile life user live brand product strategy become part study conducted additional takeaway download free copy report covered click jump question answer scroll read top bottom many time day user interact phone many session day people use phone time day people touch phone phone locked many apps people actually using apps touched app type generate touch others often touch anything made google facebook apps use together session people care much use phone good use people time measured designed study scout day end scout participated day remainder participated day q many time day user interact phone people tapped swiped clicked whopping time day average heaviest top interaction doubled touch day per year nearly million touch million le restrained among u definitely letting finger walking marathon tap swipe feel small tiny fraction brain power physical effort volume interaction become onerous load phone screen time hour average user hour heavy user time spent everything typing text swiping tinder turning kindle page scrolling facebook back index q many separate time day people actually pick mobile phone use average user engaged separate phone session day heavy user top averaged session day necessarily glued phone long period like rep day fiveounce dumbbell long usage session netflix reading general people prefer lot little session break back index q time day people use phone activity drop far disappears predawn hour touch explode ramping almost continuously dinner time happens dinner simply switching new screen chart show people tend put phone bedtime also found average scout getting tap two even fact course fiveday study participant checked phone least midnight finger never sleep back index q use phone without even unlocking count right course calorie counting last donut nearly half user session locked phone track user clicked phone sleep state capture click tap made locked phone phone password user still conduct many activity review notification check time change volume skip song etc whopping average daily touch actually lowball figure lockedphone interaction perhaps ocd maybe plain pavlovian phone must check phone whew better see phone must check phone ah message good phone must check phone worth constant interruption u notice brief give human opportunity distraction take back index q apps phone count many apps people actually using many touch apps receiving half active phone session used one app together scout used different apps day half time picked phone finger one destination session use single app app particular one per session another time people used two three apps engagement narrow focused much multitasking hop pick obsession stick back index q one app per session let yes facebook total number touch app racked finger time native messaging even home screen overall nothing get finger moving like communication outweighed information gathering messaging social medium unshaded graphic apps totaled interaction respectively internet search browser comprised facebook native messaging home screen chrome came distant fourth combine chrome google apps sure hard one chosen downloaded app store even harder design experience hold facebook popular apps world app banking mobile mirror fall quickly longtail back index q apps touchier others given facebook win touch google win session expected social medium search take touch per session prize gaming course social medium search finger like linger shopping apps even touchiest shopping app etsy followed groupon general apps lacking many touch also lacked exception browser chrome specifically lot session many touch go get looking get back index q often touch anything made google facebook nearly half touch guided apps made alphabet zuckerberg half split among apps facebook inc dominated top ten four big apps facebook instagram messenger sapp facebook app alone recorded interaction application service alphabet youtube chrome gmail second note particular study conducted exclusively android phone apple present independent app crack top textra course dscout unicorn alert also app every participant recorded qualitative research response back index q use tinder netflix together wish knew two apps plus okcupid highest use time period hour school work prime time day search message facebook repeat sun set chill swipe netflix complemented competing tinder okcupid probably neither wonder apps competing share based different time day back index q people give sh tapping one two million time year really according scout learning level phone use stunning accurately estimated frequently would tap swipe click fact scout underestimated phone long shot participant reaction hard number actual phone use typically started five second shock ended wholehearted meh admitted shallow desire intent change behavior back index touch well spent highly concentrated highly tactile interaction good bad time well spent know scratching surface touch love incorporate question next round research topic question thinking physical interaction pattern supplanted voice interaction new apps gain share thumb turning voice mile affect shift autonomous automobile people clearly interested phone car phone replacement human socialization computer replacement job next behind touch tap question tell u comment want shareable version report dig data additional research contribution jess mon
223,Lobsters,visualization,Data Visualization,Mission Control: A History of the Urban Dashboard (2015),https://placesjournal.org/article/mission-control-a-history-of-the-urban-dashboard/,mission control history urban dashboard,nasa rio de janeiro operation center futuristic control room array ipads bloomberg terminal bloomberg new york compstat balanced scorecard nyc police foundation citistat open michigan mi dashboard live singapore urbanapi citizen connect city dashboard dublin dashboard programmable city framing city mere aggregate variable history cockpit control flickrcommons daniel stirland control room immersive dashboard project cybersyn henry ford critical mud structuring sanitizing dashboard earlier article getting back dirt anthony townsend,mission control center houston nasa know rocket science look like movie windowless bunker filled blinking console swivel chair shirtsleeved men headset nonchalantly relaying update houston outer space lately vision mission control taken city hall nasa meet copacabana proclaimed new york time hailing rio de janeiro operation center potentially lucrative experiment could shape future city around world time photographed ibm executive front seemingly endless wall screen integrating data city agency including transit video rainfall pattern crime statistic car accident power failure control room proliferated dozen global city baltimore citistat room department head stand podium wall screen account unit performance mayor office london city hall feature array ipads mounted wooden panel seems almost parodic terry gilliamesque take brazilian ops center meanwhile british prime minister david cameron commissioned ipad app dashboard reference residence downing street give access financial housing employment public opinion data guardian reported prime minister said could run government remotely smartphone operation center ibm age dashboard governance heralded guru like stephen founder visual business intelligence sensemaking consultancy perceptual edge defines dashboard visual display important information needed achieve one objective consolidated arranged single screen information monitored glance welldesigned dashboard say one make proper use bullet graph sparklines visualization technique informed brain science aesthetic cognition afford user perceptual edge performance edge ideal display offer bigpicture view happening real time along information historical trend user divine redirect future action david nettleton emphasizes dashboard utility extends beyond monitoring current situation also allows manager make provision take appropriate action software knownow rapt name conjured vision omniscient singularity fueled data hubris adderallin published first edition information dashboard design manual folk starting recognize potential situated medium design critic john thackara foretold emerging market global spreadsheet term data display could monitor energy use individual building ecological footprint entire city region thackara identified host dashboard player already scene company like juice software knownow rapt arzoon closedloopsolutions seebeyond crossworlds whose name conjured vision omniscient singularity fueled data hubris adderall know interpret branding conceit tech startup amused skepticism name reflect recognition dashboard designer business translating perception performance epistemology ontology merely seek display information system generate insight human analyst use change system render efficient sustainable profitable depending upon whatever quality valued prevalence accessibility data changing way see city way see clearly examine history urban dashboardbloomberg terminal ryuzo masunagabloomberg bloomberg terminal bloomberg new yorkdata display often mimic dashboard instrumentation car airplane car find indicator speed oil fuel level find widget representing business key performance indicator cash flow stock inventory forth bloomberg terminal debuted allowed finance professional customize multiscreen display window offering realtime historical data regarding equity fixedincome security derivative along financial news feed current event social uprising natural disaster economic consequence messaging window trader could provide context data scrolling across screen last three decade terminal increased complexity flight cockpit bloomberg system involve custom input device specialized keyboard colorcoded key various kind share security market index portable scanner biometrically authenticate user computer mobile device bloomberg dashboard longer locked iconic twoscreen display trader access dashboard environment variety device david cameron presumably govern nation via blackberrythe enron scandal incited cultural shift chief information officer finally embraced dashboard panoptic viewthe widespread adoption bloomberg terminal notwithstanding took dashboard catch corporate world stephen report much large company focused amassing data without carefully considering indicator meaningful analyzed argues enron scandal incited cultural shift recognizing role data corporate accountability ethic chief information officer major company finally embraced dashboard panoptic view add another reason dashboard could diffuse zeitgeist needed recognized field data science cultural receptivity datadriven methodology mode assessmentthe dashboard market extends far beyond corporate world new york city police commissioner william bratton adapted former officer jack maple analog crime map create compstat model aggregating mapping crime statistic around time administrator charlotte north carolina borrowed business idea robert kaplan david norton total quality management strategy known balanced scorecard began tracking performance five focus area defined city council housing neighborhood development community safety transportation economic development environment atlanta followed charlotte example creating city dashboard time crime center new york city via nyc police foundation baltimore mayor martin malley confronting crippling crime rate high tax designed citistat internal process using metric create accountability within government rhetoric datatested internal accountability prevalent early dashboard development effort project turned face public baltimore launched website city operational statistic inspired dcstat maryland statestat nycstat since myriad state metro area driven new managerialist approach urban governance committed benchmarking performance region obligated demonstrate compliance sustainability agenda developed dashboard open michigan mi dashboard typical effort state website present data education health wellness infrastructure talent employment innovation public safety energy environment financial health senior mi monitor state performance sidebyside comparison prior current data punctuated thumbsup thumbsdown icon indicating state progress metric another click reveals graph annual trend citation data source little detail data actually derived public supposed use information open questionmi dashboard open michigan early dashboard project already abandoned others gone hiatus await technical upgrade nowdormant live singapore project collaboration mit senseable city lab singaporemit alliance research technology smart intended open platform collection combination distribution realtime data toolbox developer community could use build civic application rise smartphones apps influenced new wave project seek visualize data give u something layer top itover past several year group european city collaborating development urbanapi proposes help planner engage citizen making decision urban development boston citizen connect modest aspiration allows resident report pothole damaged sign graffiti many project scaled back builtin civic engagement aspiration even citizen agency limited accessing data perhaps customizing dashboard interface thereby determining source prioritized supplying data passively often unwittingly via mobile device social medium participation third party wish use data represented platform order develop application free platform involve active participation featuresin london launched alpha prototype city dashboard power mayor wall ipads created bartlett centre advanced spatial analysis university college london funded government national einfrastructure social simulation webbased platform feature live information weather air quality train status surface transit congestion well local news data provided city agency supplemented casa sensor presumably london vast network cctv camera aggregate source meant convey pulse london urban cadence incorporated via social medium trend including tweet city medium outlet university along happiness index based affect analysis london social medium user casa platform also deployed uk city glasgow brightoncity dashboard london bartlett centre advanced spatial analysis dashboard launch common begin see pattern dublin dashboard released last fall programmable city project allisland research observatory maynooth university integrates data numerous source dublin city council regional datasharing initiative dublinked central statistic office eurostat various government department present via realtime historical data visualization interactive map platform intended help audience citizen public employee business decisionmaking evidenceinformed analysis encourage independent development visualization application dashboard project embody variety competing ideologiessuch project embody variety competing ideology open data public consumption use render city infrastructure visible make tangible way comprehensible various hardtograsp aspect urban qualityoflife including environmental metric case happiness index perhaps even mental health yet time platform often cultivate topdown technocratic vision paola ciuccarelli colleague argue problematic especially matter active engagement stakeholder involved designing operating controlling dashboard properly addressed urban dashboard perpetuate fetishization data monetizable resource positivist epistemological unit run risk framing city mere aggregate variable measured optimized produce efficient normative system nott sartorius horse carriage landscapea history cockpit controlthe dashboard frame human agency epistemology ideology entity system operationalizes various indicator history extends back much farther stock brokerage desk crime map likewise dashboard relation city region space general predates century interactive map apps term dashboard first used originally referred board leather apron front vehicle kept horse hoof wheel splashing mud interior according oxford english dictionary term come denote screen giving graphical summary various type information typically used give overview part business organization acknowledged partiality dashboard rendering might make u wonder bracketed mud course dirty un cleaned data variable nothing key performance however defined part lend quantification visualization insight accommodate tidy operationalization airtight widgetization dashboard screen outall insight accommodate tidy operationalization airtight widgetization dashboard screen outamong pragmatic reason particular force resource variable historically thwarted widgetization simply lacked mean regulate use measure history dashboard simultaneously history precision measurement statistic instrument manufacturing engineering electrical mechanical particularly control engineering consider dashboard model ford standard package consisted solely ammater instrument measured electrical current although could pay extra speedometer cranked engine start could pay add electric starter engine running turned ignition switch battery magneto fuel gauge dipped stick fuel tank test level water gushing radiator indicator hoped see engine temperature warning system new mean measurement emerged new gauge display appearedthe lone dashboard instrument early model ford flickrcommons thing began evolve opposite direction mechanical operation automated dashboard evolved relay functioning symbolically rather indexically oil gauge model replaced warning idiot light driver needed binary signal either thing running smoothly something wrong panic maintenance required light came indicate whole host blackboxed measurement dashboard thus progressively simplified information relayed driver much hard intellectual physical labor driving done car itselfdashboard design today automobile driven primarily aesthetic currently fashionable give driver lot information little impact driving behavior feel control powerful machine key performance indicator little driver relationship car important relationship gas tank bluetoothlinked iphone state trooper radar gun highperformance automobile designed make driver feel like piloting fighter jet dashboard drama primarily show serf market car cultivate identity agency driver assemblage display requires new literacy language aesthetic interface constitutes form symbolic mechanical masteryin actual fighter jet course gauge play essential operational role frederick teichmann wrote airplane design manual control system terminate cockpit operational navigational instrument located decision regarding flight airplane exception determined late early however pilot instrument consult world war pilot according branden hookway expected rely almost solely unmediated visual data natural instinct navigation landing target sighting navigation depended mixture dead reckoning estimating one position using log entry compass map etc absence observation pilotage following known landmark directly observed air instrument altimeter airspeed indicator handbearing compass drift sight course direction calculator oil pressure fuel gauge become available war end often inaccurate illegible pilot continued fly instinct direct sightcockpit north american jet fighter u air force throughout research funded military instrument manufacturer like sperry sought make instrument flying viable teichmann writes pilot flying faster complicated plane could longer trust sens high altitude fog crosscountry flight blind flying must rely safety sake almost entirely radio communication radio beacon range compass finding gyroscopic compass automatic pilot turn bank indicator least twentyfive dial gadget essential safe operation airplane kind weather short came depend dashboard survival instrumentation piloting represented new step automation according jones watson author digital signal processing first time automated process began replacing sensory cognitive process well manipulative process dashboard manifested perceptual edge machine human operatorsstill dashboard user evolve response one another increasing complexity flight dashboard necessitated advanced training pilot particularly new flight simulator new research cockpit design hookway argues recognizing cockpitasinterface led systematized design flight instrumentation would streamline flow information meanwhile recognizing cockpitasenvironment meant designer attend physiological psychological need pilot aircrew shaped cramped quarter noise cold temperature reduced atmospheric pressure plane military application also frequently required communication coordination among pilot copilot navigator bomb operator crew member relied set instrument table raf uxbridge headquarters group daniel stirland control room immersive dashboardbefore long cockpit grew large plane phone line linked controller various airfield communicated individual plane highfrequency radio special red hotline went directly fighter command headquarters bentley priory plotter hovered around situation map vast electric tableau glowing bewildering array colored light number spanned wall opposite viewing cabin like movie curtain totalizator tote board controller could see glance pertinent operational detail latest weather height balloon barrage layer guarding key city especially fighter statusthat control room group raf fighter command uxbridge england september described robert buderi book history radar increasing instrumentation flight military operation adoption instrumental control strategy government business led creation immersive environment mosaic display switchboard dashboard churchill war room space age mythologized mission controlthe pushbutton changed way started car summoned servant dialed phone manufactured space sprocket waged warsin early salvador allende chile attempted implement project cybersyn cyberneticsinformed decisionsupport system managing nation economy hexagonal opsroom intellectual managerial hub leader could access data make decision transmit advice company financial institution via telex four room six wall offered space dashboard one featured four datafeed screen housed fiberglass cabinet using button console chair armrest administrator could control datafeed displayed graph production capacity economic chart photo factory forth proud moment humble pushbutton primary mean offering binary input dashboard course century changed way started car summoned servant dialed phone manufactured space sprocket demonstrating profound ethical implication waged war medium historian till heilmann investigating pushbutton integral element history digital technology argues pushing button practice trace back operation electric telegraph might go back farther design musical instrument among important cultural technique industrial postindustrial age ops room chile gui bonsiepe another opsroom wall featured two screen algedonic alert red light blinked increasing frequency reflect escalating urgency problem system yet another wall cybersyn architect stafford beer installed display viable system model helped participant remember cybernetic principle supposedly guided decisionmaking process final data wall featured large metal surface covered fabric user could rearrange magnetic icon represented component economy magnet offered explicit mean analog visualization play yet even seemingly interactive datafeed screen analog appeared although screen resembled flatpanel lcd actually illuminated rear slide projector behind wall slide handmade photographed room futuristic gestalt conveyed streamlined dashboard implication lowbarriertoentry pushbutton agency fantasy maintaining hightech illusion eden medina observes required tremendous amount human labor behind screen interface embody architecture particular way thinking particular power structure must critically analyzecybersyn lesson filtered year inform design recent control room edited volume control room design various author advocated simultaneous consideration humancomputer interaction human cognition ergonomics addressed importance discerning appropriate display raw data set employ various form data visualization advocated dashboarded environment designed minimize human error maximize user situation awareness vigilance facilitate teamwork cultivate trust human machine might read particular ideology design baltimore citistat room force department manager stand data literally methodologically behind operation stage direction reassures u official job tame stream data contextualize information marshaled evidence progress screen interface control room box might say embody architecture particular way thinking particular power structure must critically analyze using structure proxy urban operation smith model race car new york seattle transcontinental endurance race via henry ford critical mud structuring sanitizing dashboardnow dashboard epistemology politics emblematize proliferated widely across diverse field need consider frame vision mud bracket widgetized screenimage city region reflects refracts oftendirty reality earlier article place outlined rubric critically analyzing urban interface summarize key point highlight issue particularly pertinent urban dashboard first dashboard epistemological methodological pastiche represents many way governing entity define variable important extension important various method operationalizing variable gathering data course whatever readily operationalizable measurable simply bracketed city chosen key performance indicator rob kitchin colleague observe become normalized de facto civic epistemology public administration measured performance communicated dashboard also embodies many way rendering data representable contextualizable intelligible target audience likely limited understanding data derived hookway note history interface case dashboard also history intelligence delimits boundary condition across intelligence brought common expression tested demonstrated reconciled distributed urban dashboard might see satellite weather map next heat map road traffic next ticker city expenditure next wordcloud mood index drawing resident twitter facebook update juxtaposition represents tremendous variety lens city operational logic aesthetic politics viewer scan across data stream zoom get big picture zoom capture detail flexibility kitchin colleague write improves user span control large repository voluminous varied quickly transitioning data without need specialist analytics skill however dashboard streamlined display pushbutton input may lower barrier entry user dashboard frame designed must recall keep mud also little educate user data come politics information visualization knowledge production view dublin dashboard bike availability parking capacity travel timein turn representational logic politics structure agency subjectivity dashboard user tool merely define role user eg passive active dataprovider data monitor data hacker app builder userofdataincitizenledurbanredevelopment also construct urban subject define part conceives relates inhabits city thus system also embodies kind ontology defines city choosing represent part city understood sum component widget weather plus crime statistic plus energy usage plus employment data resident impoverished sense act urban subject citizen may encouraged use city open data build layer top dashboard develop application even application functional adhere dashboard protocolsif city understood sum component widget resident impoverished sense act urban subjectsfor dashboard governing user system shape decisionmaking promotes datadriven approach leadership noted earlier dashboard intended merely allow official monitor performance ensure accountability also make prediction projection change system order render city sustainable profitable efficient kitchin colleague propose dashboard allow macro longitudinal view city operation offer evidence base far superior anecdote risk dashboard seeming comprehensiveness seamlessness suggest govern blackberry fly instrument alone instrumental approach given official disinclination reflect method foster fetishization reification data open door analytical error logical fallacy adam greenfield explains correlation causation nicety may lost mayor municipal administration want seen vigorously proactive fire disproportionately seem break neighborhood lot poor people live hey simply clear poor people take credit something fire city dashboard invested ten million dollar made clear neighborhood one invariably maybe underlying unaddressed factor generated fire concentration poverty example strike tendentious fabulation case reductio ad absurdum trust literature operation research replete highly consequential decision made ground shoddy messy complex system understand without methodological epistemological mud given much perceive urban dashboard sanitized decontextualized necessarily partial wonder political ethical implication framing ideal openness accountability participation represented sterilized quasitransparency dashboard getting back dirtcontrast dashboard panoptic view city another urban dashboard late century term still used primarily refer mud shield outlook tower edinburgh scotland began observatory camera obscura top floor patrick geddes scottish polymath town planner bought building transformed place outlook typemuseum would serve key better understanding edinburgh region help towards formation clearer idea city relation world large sociological laboratory anthony townsend smart city describes victorian precursor rio digital dashboard embodied geddes commitment method observation civic survey conviction one must understand place within regional historical context quote length two historical journal article provide eloquent explication geddes pedagogical philosophy urban ideology also rhetoric provides stark contrast functionalist silicon valley lingo typically used talk urban dashboard todayoutlook tower patrick geddes city evolution tower visitor instructed begin top camera obscura encountered projection familiar city scene every variety modern life slum seat authority could fail impressed relation social condition topography charles zueblin reported american journal sociology camera obscura wrote combine sociologist advantage astronomical observatory miscoscopical laboratory one see near distant thing continuing one wider field view enjoyed naked eye time find beautiful landscape thrown table elimination discordant ray light one see scientist artist eye great purpose camera obscura teach right method observation unite aesthetic pleasure artistic appreciation observation begin habitual scientific analysis entered upon scientific attitude every analysis return apparatus offer macro view opportunity zoom detail feature interactive digital dashboard change scale informed aesthetic sensibility awareness implication scalar shift terrace roof according exhibition review one opportunity surveying edinburgh region light day open air zueblin note deeper appreciation significance given panorama previous concentration camera obscura observer forced upon various aspect world around weather condition configuration landscape varying aspect garden season pas relation sun time implication consideration direction orientation etc floor visitor encountered exhibition chart plan map model photo sketch etc situated within spatial context increasing scale first archaeology historical evolution edinburgh topography history social condition scotland empire alcove united state europe finally earth zueblin admits last part exhibition lacked great globe geddes hoped install underdeveloped along way visitor came across various scientific instrument convention telescope small meteorological station set surveying instrument geological diagram demonstrated one gained insight space various scale ascent tower provides one cyclopaedia zueblin observes descent laboratory basement find result process carried also classification art science aristotle bacon comte spencer incidentally light thrown intellectual development presiding genius building thus embodied various mode understanding map intellectual historyat time tower gave shape geddes synthetic pedagogy one began present day dug deeper history one started home extended outward region globe perhaps even galaxy tower impressed upon visitor recognition order understand adequately region needed integrate insight various field specialization biology meteorology astronomy history geology yes even study mud rock thrown vehicle urban dashboard fail promote similarly rich experiential multidisciplinary pedagogy epistemology outlook tower dashboard epistemological demystifier well catapult launch user urban landscape demonstrated use result intelligently geographer must knowledge obtained data come lesson know city merely screen time time also need fly sight fiddle exploding radiator tramp around mud
224,Lobsters,visualization,Data Visualization,"Data visualisation, from 1987 to today",https://medium.economist.com/data-visualisation-from-1987-to-today-65d0609c6017,data visualisation today,data visualisation today jump forward year handdrawn halfpie chart archive march leroy stencil set letraset sheet cameraready artwork channel tunnel mask layer october author obviously pleased using macintosh iici around,data visualisation todaylooking back year making chart map economistif attend conference data visualisation probably hear least one speaker refer william playfair early line chart price wage published failing count someone refer florence nightingale rose diagram battlefield sanitary condition charles minard depiction napoleon disastrous loss russian campaign rapidly turn early example presentday tool r mobile scrollytelling skipping historical example present day mean little consideration time spent tool used making chart map computer came alongjump forward yearsi joined economist newspaper cartographer chevron oil earlier learned craft civilian cartographer britain ministry defence back called data visualiser ragtag collection classically trained cartographer graphic designer typographer technical draughtsman woman knew place label cared small detail could drawbefore computer creating chart lot like art data science mouse small rodent mcintosh popular variety apple chart produced limited sort thing might get school textbook single simple measure plotted time line chart column chart gave context broke monotony page added credibility occasionally would take deep breath generate semicircular pie chart represent political landscape new governmenthanddrawn halfpie chart archive march even seemingly simple chart challenge took lot time make data found book research department skilled art extracting obscure economic figure statistic copied scrap paper would use ruler divider protractor geometry thales theorem divide axis line equal part draw scale tick would plot data manually pencil special drawing board sketch wording title approval inked whole thing text added last using stencilling later letraset drytransfer lettering making spelling mistake distressing area filled stickyback plastic preprinted film cut scalpela leroy stencil seta letraset sheetmaps far time consuming required trip local map shop buy suitable starting point map placed grant projector huge machine projected scaled image onto glass plate using involved putting one head shroud like early photographer detail copied onto semitransparent tracing paper projected image later transferred onto drawing board mean carbon paper label would added pencil approval timeconsuming virtually irreversible inking took place pressure recall country name disproportionate number character certainly provided letraset sheet finding sheet enough deadline sometimes frustrating evidence fact carefully constructed artwork drawn twice final size use colour difference tone line style limited line would pecked dashed scraping away ink scalpel white correcting fluid tippex dried fast could overwritten friend tippex applicator brush invariably broken splayed inevitable mistake amendment artwork could look like teenager homework end night fortunately camera lie cameraready artwork would scaled half size projected onto bromide paper clean crisp image could pasted literally onto page layout paste cow gum uniquely addictive smell would allow repositioning without slippingas technology crept newsroom late began create artwork additional layer mask layer given colour available shaded area sea map chart background layer registration adjusted fit base camera scaling distortion never accuratecameraready artwork channel tunnel mask layer october steve job apple came rescue manual crafting macintosh plus spelt differently apple variety legal reason cost around quarter cartographer salary time quite investment pressure make productive macpaint hardly adobe illustrator today first used escape tyranny letraset lack using cute little machine corner typesetter would key text title print onto adhesive label spelling deteriorated almost overnight pressure making mistake removed keyboard incompetence long figured us apple mac became firm favourite adobe illustrator changed life rotring pen became thing pastthe author obviously pleased using macintosh iici around u survived heady day looking multiple screen full code data file software render world map second want river railway problem tippex long since dried worry squeeze look great big screen onto smartphone time however seems short supplygraham douglas data visualisation specialist economist
225,Lobsters,visualization,Data Visualization,your-web-app-is-bloated,https://github.com/dominictarr/your-web-app-is-bloated,yourwebappisbloated,web app bloated table content method work github mb top google mb top google result mb top duckduckgo mb top duckduckgo result mb top google image result mb top duckduckgo image result mb top wikipedia mb top wikipedia article mb top stackoverflow mb top google doc mb top google doc document mb top google sheet spreadsheet mb top hackmd document mb top sandstorm spreadsheet mb top toggl mb top social comms twitter mb top tweetdeck mb top twitter mobile top reddit mb top facebook mb top facebook newsfeed mb top facebook messenger mb top gmail basic mb top gmail mobile mb top gmail standard mb top google inbox mb top slack mb top rocketchat mb top riot mb top meatspace chat mb top video youtube mobile mb top youtube mobile playing video mb top youtube mb top youtube video mb top vimeo video top map googlemaps mb top openstreetmap mb top googlemaps mobile top googlemaps url news content nytimes mb top guardian mb top onion mb top medium mb top medium article mb top music soundcloud mb top soundcloud track open mb top bandcamp mb top bandcamp album page mb top spotify top video chat talky mb top google hangout mb top jitsi mb top pinterest mb top airbnb mb top open collective mb top patchless mb top social client datshoppinglist mb top shopping list app dat patchbay patchlite top patchbay patchfoo mb top pure html social client conclusion top,web app bloated using firefox memory snapshot tool measured heap usage variety web apps everything app memory mib b google inbox gmail standard google sheet spreadsheet slack googlemaps patchbay patchlite youtube video nytimes facebook messenger facebook newsfeed riot toggle google doc document soundcloud track open hackmd document reddit airbnb jitsi tweetdeck onion rocketchat open collective vimeo video youtube sandstorm spreadsheet pinterest imagesgoogle result twitter google doc facebook soundcloud spotify medium medium article bandcamp google result patchless googlemapsmobile google google hangout talky bandcamp album page datshoppinglist gmailmobile guardian duckduckgo image result github openstreetmap new york transportation layer wikipedia page duckduckgo meatspace chat duckduckgo result stackoverflow wikipedia gmail vintage patchfoo table content method opened site firefox used memory shapshot tool screen shotted output using scrot running ublock probably made site smaller work github mb top github homepage news feed google mb top empty google page surprising amount memory used since show nothing single field google result mb top prehaps still lot memory considering little image real time interaction duckduckgo mb top much le memory google guess tracking feature google us extra memory duckduckgo result mb top google image result mb top fairly efficient compared reddit youtube etc duckduckgo image result mb top memory google image us wikipedia mb top wikipedia article mb top static page image stackoverflow mb top static site google doc mb top google doc document mb top seems like necessary mainly j object google sheet spreadsheet mb top lot memory especially considering spreadsheet killer app back apple day lot people brought computer first time run visicalc memory hackmd document mb top google doc sandstorm spreadsheet mb top almost google spreadsheet toggl mb top time tracking software quite bloated social comms twitter mb top loaded twitter homepage nt scroll touch anything tweetdeck mb top twitter power user interface mention message one user feed search feed added twitter mobile top better regular web twitter reddit mb top reddit homepage infinite scroller usually mean lot javascript j object facebook mb top login page already lot javascript loaded bloated landing page twice much google wikipedia facebook newsfeed mb top lot object memory presumably using react facebook messenger mb top memory use fb news feed react course gmail basic mb top nearly nothing use daily really amazing level functionality userfriendlyness packed simple interface also nt kind dynamic update le distracting email interface intentionally check email notification changing favicons ugly beautiful gmail mobile mb top google mobile apps respectable pretending nexus gmail standard mb top amazingly bloated mostly massive amount javascript progress bar show startup j object mb google inbox mb top make standard gmail look tame take gmail standard add stuff slack mb top bloated largely javascript rocketchat mb top thing slack le javascript rocketchat mostly j object still le slack riot mb top j object slack le javascript meatspace chat mb top tight static site crazy javascript stuff video youtube mobile mb top landing page acceptable youtube mobile playing video mb top youtube mb top pretty light weight considering youtube youtube video mb top first thought reasonable since playing video discovered actually play video lot le vimeo video top map googlemaps mb top pretty heavy compared option informed us webgl mobile version us tile openstreetmap mb top memory google map essentially thing new york transportation layer enabled googlemaps mobile top pretending nexus much better also force version adding forcepwa googlemaps url news content nytimes mb top bloated guardian mb top pretty good onion mb top quite bloated nearly much reddit created entirely inhouse writer medium mb top could better bad others medium article mb top music soundcloud mb top better youtube soundcloud track open mb top better youtube bandcamp mb top front page listing memory use similar google search result best content site bandcamp album page mb top pretty tight spotify top impressive video chat talky mb top started call one else pretty tight google hangout mb top call self also surprisingly unbloated jitsi mb top google hangout pinterest mb top google image airbnb mb top searched san francisco lot memory used display list especially considering map displayed smell like react open collective mb top react site data change often pretty bloated patchless mb top social client heavy javascript including infinite scrollers datshoppinglist mb top simple shopping list app dat patchbay patchlite top slightly old version patchbay could bundled run inside firefox patchfoo mb top pure html social client formbased javascript conclusion top started exploring trying figure optimize apps memory use nt important thing easy measure proxy le memory usage probably simpler app probably performant le memory also mean lee garbage collection activity google apps particularly interesting provide worst offender gmail inbox doc mobile apps really solid recently web development style moved towards fully dynamic front end generates everything javascript app really highly dynamic guess somewhat excusable facebook slack site could static obviously us lot think show considerable room improvement term application efficiency
226,Lobsters,visualization,Data Visualization,Charting Browser Interoperability,https://blog.chromium.org/2018/08/charting-browser-interoperability.html,charting browser interoperability,,year google io ben galbraith malte ubl presented chart web keynote showing web getting interoperable trend really important chrome team web developer able target web platform four different though overlapping platform chart gleaned data web api confluence dashboard project originally designed browser engineer provides insight web interoperability tracking pagevisible javascript apis across many release four major browser engine example caption count browserspecific apis go browser first ship new api either second browser implement new api ii api failed build consensus removed one browser implemented chart plot count apis shipped one four browser vendor time interacting chart dashboard let open list apis corresponds count information help browser vendor prioritize work make web interoperable either removing old browserspecific apis working vendor implement apis yet widely supported apis collected order count apis web first define count web api web full useful feature hard define let alone detect analysis focused javascript apis visible developer page first load leaf several class feature like cs property html attribute apis available page load eg apis surfaced interaction userapi interaction available certain type worker nevertheless give u general view programmable browser capability javascript apifinding algorithm inspects javascript object graph exposed global window object check link detail managed extract apis javascript prototype help browserstack browseroperating system configuration able gather api data browser release going back far determining web healthy take look metric page dashboard see different chart generated shape web metric apis represent give web platform implementers insight apis fragmenting web apis fragment web shipped almost every browser quite removed one browser others shipped one browser others example data show safari major browser ship cssstyledeclaration backfacevisibility chrome removed number svgsvgelement apis still shipped major browser edge major browser shipping number bhxbrowser apis querying raw data dashboard intended replace tool like mdn doc caniusecom rather illustrate trend help browser vendor keep evolving web towards interoperability said catalog page dashboard give developer another source corroborate interop info manually curated source try playing around search box api catalog support basic structured query like notin apis firefox missing chrome rtcpeerconnection rtcpeerconnectionrelated apis shipped exactly two browser currently view clicking vertical ellipsis icon let add remove dozen browser release grid url bar always contains link get back current query validating mdn browser compat table clone mdn browser compatibility database git clone http githubcommdnbrowsercompatdatagit cd browsercompatdata install dependency npm install load confluence data serviceworker npm run confluence interfacesserviceworker take look difference applied working tree git diff read full list parameter try npm run confluence npm run confluence help conclusion hope browser engineer web developer benefit dashboard check let u know think github project host code posted mark dittmer software engineer working web ecosystem infrastructure
227,Lobsters,visualization,Data Visualization,Better Geometry Through Graph Theory,http://ideolalia.com/2018/08/28/artifex.html,better geometry graph theory,spent summer canonical textbook computational geometry project parametric curve polygon clipping doublyconnected edge list hard embracing uncertainty errorcorrecting code artifex,spent summer month ago decided implement set operation curved region canonical textbook computational geometry described approach polygon comprised straight line seemed like project extended technique parametric curve figured would take couple week unfortunately field computational geometry embodies fundamental contradiction geometry angle triangle add exactly radian u clockwise v v must counterclockwise u computer hand use floating point representation make mockery simple euclidean truth academic literature largely ignores algorithm proven geometrically sound robust implementation left exercise reader akin world hash collision caused unavoidable data loss academic response implicitly assume existence perfect hash function paper predicated unrealistic assumption evaluate term must understand empirically well function assumption broken mind look existing algorithm polygon clipping term art polygon set operation every technique variation common theme given two ring find every point intersection segment ring point intersection decide whether segment included based operation performed dozen paper subject differ third step since decision include segment typically inverts intersection point describe variety approach using decision one segment inform decision adjacent segment textbook described method using doublyconnected edge list generic geometric data structure assumed meant could reused problem started implementation month went finished implementation first week reliable dcel collection linked loop incrementally updated performing set operation incrementally bisect original set loop determine included despite best effort kept finding new shape caused adjacent face get tangled together creating strip simultaneously inside outside expected result slowly realized problem data structure first step every paper glossed finding intersection dcel assumes edge vertex total ordering previous edge directly clockwise next one directly counterclockwise miss intersection might conclude two curve clockwise relative causing everything fall apart began look better way find intersection hoping found approach sufficiently accurate work dcel could salvaged unfortunately approach found literature implemented wild better using data structure demanded precise input without internal contradiction deliver point began wonder missed something fundamental thought maybe dissected mature library handled pathological shape could work backwards see gone wrong began feed shape wellestablished project like paperjs found failed badly find pathological input using propertybased testing given random combination shape would perform pointinregion test compare reference result generated querying shape individually combining result according operation input worked fine hundred thousand input would inevitably find failure project turned little le eager find failure mode handful examplebased test others static suite thousand input used validate change missed something appeared one else expected operation particularly robust hard floating point arithmetic best understood simple maddening fact b necessarily equal b might equal might little relative larger two number mean compare two floating point number precise comparison ask whether differ le epsilon value epsilon represents level numerical uncertainty resigned vast folk wisdom around minimize uncertainty fact remains every arithmetic operation injects bit uncertainty grows cumulatively successive operation dealing small number uncertainty may dwarf value intersection precise mathematical sense occurs wherever distance curve exactly zero practical sense wherever distance curve close enough zero least one intersection could easily return three ten within overlapping range uncertainty anathema published technique rely counting intersection determine whether inside outside shape single spurious intersection may cause entire result vanish two object similar curvature move across result tend flicker existence technique may suffice straight line require smaller epsilon wholly unsuited relative imprecision parametric curve embracing uncertainty week passed error uncovered test went feeling random feeling malicious floating point arithmetic may deterministic watched screen waiting test fail imagined demon fpu nudging value flowed past trying move beyond threshold selfconsistency one day realized exactly narrative behind errorcorrecting code assume data randomly altered en route want return consistent state seem like could get right first time fix afterwards consider union two ellipsis ostensibly three point intersection one left two right reason described intersection routine likely find multiple point intersection left curve converge segment left small enough thus imprecise enough spatial intuition problem mislead u reason better think graph decide edge include exclude since trying find union want keep segment outside shape wellformed result single cycle remove cycle leftover edge rely getting lucky edge left might succumbed floating point error believed inside wellformed result cycle bunch leftover edge make consistent need either close loop remove leftover cost change measured aggregate length edge adding removing minimal set change equivalent shortest path dangling vertex found path invert inclusion every edge pass case pass one edge originally excluded add edge back return cycle created alternately edge might think outside case complete cycle extracted single leftover edge search remaining edge shortest path two dangling vertex since pass leftover edge remove every floating point inconsistency surface one two case combination thereof searching shortest path dangling edge find smallest possible edit yield consistent result course consistent result necessarily correct one fact floating point error tend cluster around smallest edge make reasonable heuristic importantly weathered ten million generative test case without issue complete implementation algorithm found sure novel approach least represents meaningful improvement state art open source intuitively feel like might mean avoid epsilon hell wide range geometric numerical algorithm anyone aware prior art vein interested see work artifex library ongoing hope prof useful others look forward sharing project enable near future thanks alex engelberg elana hashman angus fletcher reid mckenzie zack maril feedback early draft post
228,Lobsters,visualization,Data Visualization,Introduction to Digital Filters,https://karlhiner.com/jupyter_notebooks/intro_to_digital_filters,introduction digital filter,introduction digital filter jupyter notebook geometric interpretation digital audio filter june,need enable javascript run appintroduction digital filtersjupyter notebook geometric interpretation digital audio filtersjune
229,Lobsters,visualization,Data Visualization,Mapping a decentralized wireless network with Uber H3 hexagons,https://blog.helium.com/mapping-the-world-with-hexagons-49f57d8b3df5,mapping decentralized wireless network uber hexagon,mapping world hexagon precision proximity uber hexagonal hierarchical geospatial indexing system hexagonal grid system http documentationoverviewusecases,mapping world hexagonshexagons everywhere honeycomb fly eye soap bubble popular german board game settler catan good reason hexagon spaceefficient regular polygon tile plane bee term le wax honeybut hexagon helium helium building world first decentralized machine network physical network coverage device provided gateway hosted throughout world consequently location core tenet networkin addition need represent position world network also unique geospatial requirement need encode precision proximity precision ie talking single point space larger le precise area let u approximate range coverage anonymize gateway location degree proximity allows u reason gateway close one anotheruber hexagonal hierarchical geospatial indexing systemwhile plenty coordinate system uber hexagonal grid system natural fit unique set requirementswhy hexagon make good grid system turn hexagon useful property bee among u already know want tile plane regular polygon three option equilateral triangle square hexagon three option hexagon shape distance neighbor comparison square two different distance triangle three simple property vastly simplifies math around calculating neighbor region key function networksource http documentationoverviewusecaseshexagonal grid without weakness example square subdivide perfectly parent child whereas hexagon mean small degree error moving hexagonal hierarchy tradeoff acceptable network
230,Lobsters,visualization,Data Visualization,parsedmarc - Open source DMARC report analyzer and visualizer,https://github.com/domainaware/parsedmarc,parsedmarc open source dmarc report analyzer visualizer,parsedmarc feature resource dmarc guide spf dmarc record validation checkdmarc lookalike domain domainaware cli help configuration file cloudflare public resolvers url encoded strongly recommended cloudflare public resolvers sample aggregate report output example rfc appendix c json csv sample forensic report output xennn forensic report email sample json csv bug report http githubcomdomainawareparsedmarcissues,parsedmarc parsedmarc python module cli utility parsing dmarc report used elasticsearch kibana splunk work selfhosted open source alternative commercial dmarc report processing service agari brand protection dmarcian ondmarc proofpoint email fraud defense valimail feature par draft standard aggregaterua report par forensicfailureruf report parse report inbox imap transparently handle gzip zip compressed report consistent data structure simple json andor csv output optionally email result optionally send result elasticsearch andor splunk use premade dashboard optionally send report apache kafka resource dmarc guide spf dmarc record validation looking spf dmarc record validation parsing check sister project checkdmarc lookalike domain dmarc protects domain spoofing lookalike domain open source lookalike domain monitoring check domainaware cli help usage parsedmarc h c configfile stripattachmentpayloads output n nameservers nameservers dnstimeout offline debug logfile logfile v filepath filepath par dmarc report positional argument filepath one path aggregate forensic report file email optional argument h help show help message exit c configfile configfile configfile path configuration file silent implied stripattachmentpayloads remove attachment payload forensic report output output output output write output file given directory n nameservers nameservers nameservers nameservers nameservers nameservers query default cloudflare nameservers dnstimeout dnstimeout dnstimeout number second wait answer dns default offline make online query geolocation dns silent print error warning debug print debugging information logfile logfile output logging file v version show program version number exit note parsedmarc cli option moved configuration file described configuration file parsedmarc configured supplying path ini file parsedmarc c etcparsedmarcini example example comment general saveaggregate true saveforensic true imap host imapexamplecom user dmarcresports examplecom password upersecure watch true elasticsearch host ssl false splunkhec url http splunkhecexamplecom token hectokengoeshere index email full set configuration option general saveaggregate bool save aggregate report data elasticsearch andor splunk saveforensic bool save forensic report data elasticsearch andor splunk stripattachmentpayloads bool remove attachment payload result output str directory place json csv file offline bool use online query geolocation dns nameservers str comma separated list dns resolvers default cloudflare public resolvers dnstimeout float dns timeout period debug bool print debugging message silent bool print error default true logfile str write log message file path nprocs int number process run parallel parsing cli mode default chunksize int number file give process running parallel setting number larger one improve performance processing thousand file imap host str imap server hostname ip address port int imap server port default ssl bool use encrypted ssltls connection default true skipcertificateverification bool skip certificate verification recommended user str imap user password str imap password reportsfolder str imap folder incoming report found default inbox archivefolder str imap folder sort processed email default archive watch bool use imap idle command process message arrive delete bool delete message processing instead archiving test bool move delete message elasticsearch host str comma separated list hostnames port url eg http user secret localhost note special character username password must url encoded ssl bool use encrypted ssltls connection default true certpath str path trusted certificate indexsuffix str suffix apply index name monthlyindexes bool use monthly index instead daily index numberofshards int number shard use creating index default numberofreplicas int number replica use creating index default splunkhec url str url splunk http event collector hec token str hec token index str splunk index use skipcertificateverification bool skip certificate verification recommended kafka host str comma separated list kafka host user str kafka user passsword str kafka password ssl bool use encrypted ssltls connection default true skipcertificateverification bool skip certificate verification recommended aggregatetopic str kafka topic aggregate report forensictopic str kafka topic forensic report smtp host str smtp hostname port int smtp port default ssl bool require ssltls instead using starttls skipcertificateverification bool skip certificate verification recommended user str smtp username password str smtp password str header use email list list email address send subject str subject header use email default parsedmarc report attachment str zip attachment filename message str email message default please see attached parsedmarc report warning strongly recommended use nameservers setting default parsedmarc us cloudflare public resolvers much faster reliable google cisco opendns even local resolvers nameservers option used network block dns request outside resolvers warning saveaggregate saveforensic separate option may want save forensic report also known failure report elasticsearch instance particularly highlyregulated industry handle sensitive data healthcare finance legitimate outgoing email fails dmarc possible email may appear later forensic report forensic report contain original header email failed dmarc check sometimes may also include full message body depending policy reporting organization reporting organization send forensic report kind privacy reason aggregate dmarc report sent least daily normal receive forensic report alternative approach still collect forensicfailureruf report dmarc inbox run parsedmarc saveforensic true manually separate imap folder using reportsfolder option manually moved known sample want save folder eg malicious sample nonsensitive legitimate sample sample aggregate report output result parsing example report dmarcorg wiki actually older draft report schema standardized rfc appendix c draft schema still wide use parsedmarc produce consistent normalized output regardless report schema json xmlschema draft reportmetadata orgname acmecom orgemail noreplydmarcsupport acmecom orgextracontactinfo http acmecomdmarcsupport reportid begindate enddate error policypublished domain examplecom adkim r aspf r p none sp none pct fo record source ipaddress country u reversedns basedomain bellsouthnet count alignment spf true dkim false dmarc true policyevaluated disposition none dkim fail spf pas policyoverridereasons identifier headerfrom examplecom envelopefrom examplecom envelopeto null authresults dkim domain examplecom selector none result fail spf domain examplecom scope mfrom result pas csv xmlschema orgname orgemail orgextracontactinfo reportid begindate enddate error domain adkim aspf p sp pct fo sourceipaddress sourcecountry sourcereversedns sourcebasedomain count spfaligned dkimaligned dmarcaligned disposition policyoverridereasons policyoverridecomments envelopefrom headerfrom envelopeto dkimdomains dkimselectors dkimresults spfdomains spfscopes spfresults draft acmecom noreplydmarcsupport acmecom http examplecom r r none u true false true none examplecom examplecom examplecom none fail examplecom mfrom pas sample forensic report output thanks github user xennn anonymized forensic report email sample json feedbacktype authfailure useragent version originalmailfrom sharepoint domainde originalrcptto peterpan domainde arrivaldate mon oct messageid mailrelayde authenticationresults dmarcfail pnone disnone headerfromdomainde deliveryresult policy authfailure dmarc reporteddomain domainde arrivaldateutc source ipaddress country null reversedns null basedomain null authenticationmechanisms originalenvelopeid null dkimdomain null sampleheadersonly false sample received servernameonedomainlocal servernameonedomainlocal ntby mailrelayde maildomainde smtp id mon oct cest ndate oct mailrelayde nto peterpan domainde nfrom b sharepoint domainde nsubject subjectnmimeversion microsoft sharepoint foundation texthtml quotedprintablenn html head base head body doctype html public html n html head meta generator m exchange server versionn html n parsedsample displayname interaktive wettbewerberübersicht address sharepoint domainde local sharepoint domain domainde todomains domainde displayname null address peterpan domainde local peterpan domain domainde subject subject timezone mimeversion date contenttype texthtml xmailer microsoft sharepoint foundation body html head base hrefnwettbewerb head body doctype html public html html head meta name generator content m exchange server version html received servernameonedomainlocal servernameonedomainlocal mailrelayde maildomainde smtp id date mon oct cest hop dateutc delay contenttransferencoding quotedprintable messageid mailrelayde hasdefects false header received servernameonedomainlocal servernameonedomainlocal ntby mailrelayde maildomainde smtp id mon oct cest date oct messageid mailrelayde peterpan domainde interaktive wettbewerberübersicht sharepoint domainde subject subject mimeversion xmailer microsoft sharepoint foundation contenttype texthtml contenttransferencoding quotedprintable replyto cc bcc attachment filenamesafesubject subject csv feedbacktype useragent version originalenvelopeid originalmailfrom originalrcptto arrivaldate arrivaldateutc subject messageid authenticationresults dkimdomain sourceipaddress sourcecountry sourcereversedns sourcebasedomain deliveryresult authfailure reporteddomain authenticationmechanisms sampleheadersonly authfailure sharepoint domainde peterpan domainde mon oct subject mailrelayde dmarcfail pnone disnone headerfromdomainde policy dmarc domainde false bug report please report bug github issue tracker http githubcomdomainawareparsedmarcissues
231,Lobsters,visualization,Data Visualization,Women's Pockets are Inferior,https://pudding.cool/2018/08/pockets/,woman pocket inferior,sharon owen twitterrants article video billion dollar take look found jump ahead fashion function actually fit true different style back pocket reportedly stuffing london spectator reported ability method download data median waist size data collection sheet bic velocity travelambo thanks sharon owen,someone clever said woman allowed someone clever said woman allowed pocket case carried leaflet spread sedition mean unrest grandiose word commonsense fairness kindness equality lady start sewing dangerous coat made pocket sedition dangerous coat sharon owen thing frustrating collecting belonging realize pocket pant small hold worse fabric designed look like pocket merely decoration open wearer clothes struggle real look far find twitterrants article video people either complaining pocket rejoicing rare gem sure could carry handbag likely billion dollar purse industry hope everyone want carry bag afterall pant pocket basically pocket dream like many thing internet could find complaint anecdote galore little data illustrating inferior pocket really went measured pocket pant popular blue jean brand take look found head experience scrolldriven animation like skip jump ahead final state fashion function actually fit beyond obvious measurement difference wanted see functional pocket pocket good fit programmatically determined whether various everyday item could fit otherwise empty pocket jean worn object fit pocket pair jean hanger certainly fit wearing percent front pocket completely fit one three leading smartphone brand le half front pocket fit wallet specifically designed fit front pocket even cram average hand beyond knuckle majority front pocket explore item brand fit front pocket brand faded item fit click item test fit pocket woman pocket men pocket fit item iphone x samsung galaxy google pixel front wallet pen hand hand oops none jean measured meet criterion try selecting something else show generally speaking front pocket indeed smaller size disparity really limit item woman safely stow pocket may wondering caveat thinking men bigger woman sure average true measured pair jean boasted inch waistband meaning jean made fit size person question may asking different style predictably skinny jean closely hug hip smaller front pocket men woman gap jean still noticeable skinny straight style average skinny jean pocket inch shorter inch narrower skinny jean straight jean pocket inch shorter inch narrower highlight average biggest smallest back pocket gap back pocket le egregious pocket still smaller much skinny jean pocket inch shorter inch narrower straight jean pocket inch shorter inch narrower ultimately back pocket bit deeper width highlight average biggest smallest sheer inconvenience able keep belonging pocket may seem like small issue one woman faced century medieval time men woman tied around waist hidden underneath clothing akin highly embellished fanny pack century jacket pant adorned pocket sewn directly garment woman hand kept rocking fanny pack reportedly stuffing sort useful thing like perfume smalltooth comb spectacle box bonbon bottle gin last two absolutely essential deal state pocket toward end century fashion changed waistline crept silhouette slimmed pocket shrunk sometimes becoming nonexistent london spectator reported common thought woman four external bulge already two breast two hip money pocket inside dress would make ungainly famed fashion designer christian dior cemented patriarchy pocket allegedly saying pocket keep thing woman woman still equality pocket unlike purse hidden private space restricting space woman keep thing safe retain mobility hand also restricting ability public space carry seditious merely amorous writing travel think idea outdated think last time woman asked boyfriendmale friendanyone pant carry phonewalletkeys outing woman got right upset data prof want functional pocket want really like several century ago method download data brand mentioned study pair jean measured skinny straight style clothing style referred brand standard style unavailable style used instead although come across pocket completely sewn shut able find another version style brand include true pocket wherever possible used jean though occasion none available either high lowrise jean used substitute jean measured inch waistband designated sizing guide website although smaller median waist size woman u determined size regularly available cut info available sizing u store measurement took place brick mortar store nashville new york seattle measure pocket jean unbuttoned unzipped occasionally flipped completely insideout pocket measured inside jean overall height width pocket measured curvature pocket displayed article computer generated see pocket measured download data collection sheet measurement line measurement computergenerated curve determine whether object could completely fit within given pocket used largestrect function library determine largest rectangle could fit pocket aspect ratio width height object question object larger either height width wider opening pocket determined large fit measurement item taken directly product website bic velocity pen used standard pen size front pocket wallet used wallet average woman hand determined fit four finger could fit knuckle thumb fit inside pocket u consider hand thanks many thanks go sharon owen letting u include segment poem header image allowing u hide whole thing away seditious pocket essay also many thanks parker young allowing amber use jean measurement guinea pig listening extensively smallpocket rant carrying phone key id credit card want walk around city purse
232,Lobsters,visualization,Data Visualization,Working with timezones,https://davecturner.github.io/2018/08/12/working-with-timezones.html,working timezones,time timezones list counterexample localuniversal time graph utc changing offset property lutgs offset plausiblelooking code confuses horizontal vertical offset give undesirable result near transition transition occur indiana short notice future transition wrong blindly convert datetime value system utc storage prematurely converting future local time utc work transition linked timezones size offset size transition effect midnight special time midnight leap second tai choosing timezone udbxp mount washington observatory nice microsoft conclusion,enjoy thinking strange thing happen time timezones amusing occasionally useful read list counterexample reasonablesounding statement time hard actually get stuff done information alone counterexample might leave thinking dealing timezones basically impossible get right whereas fact difficult draw right picture thought useful share picture find helpful approaching timezonerelated problem localuniversal time graph basic tool visualising timezone something going call localuniversal time graph lutg sound awfully fancy really line graph relates universal time horizontal axis local time vertical axis lutg standard utc timezone look like think look fairly boring right utc fairly boring timezone lutg reflects perfectly marginally interesting timezone something like whose lutg look like still quite boring admittedly least show unambiguously whether add subtract hour necessary convert local time utc vice versa correct interpretation sign timezone offset thing seems stay head fact iana call called iso suggests people also struggle draw lutg find help changing offset fun game really begin start look timezones sometimes change offset utc happens two different way either set clock forward set back property lutgs thing notice graph firstly every utc instant welldefined local time corresponds local time also single welldefined universal time correspond however clock go back local time two corresponding utc time similarly clock go forward local time never occur away offset transition time proceeds rate ax line one thing perhaps obvious graph important transition time belongs later line segment time strictly transition time earlier offset time equal later transition time later offset draw open exclusive endpoint filled inclusive endpoint offset vertical important point offset utc drawn vertical distance line lutg utc think point absolutely crucial fully understanding timezone calculation tricky time vertical distance horizontal distance near transition true even horizontal distance unambiguous welldefined easy write plausiblelooking code confuses horizontal vertical offset give undesirable result near transition transition occur many timezones two transition year approximately month apart respectively set clock forward back hour transition long way apart shift clock much really interact calculation transition closer together larger local time might occur three time theory possible happen yet would slightly strange thing government decide still know happen future apis like javatimezonezonerules getvalidoffsets allow occur closest two transition current database occurred three day apart europewarsaw thing remember thinking transition happen southern hemisphere start year summertime forwardsbackwards shift clock way round timezones northern hemisphere timezones near equator may shift clock timezones morocco sometimes change clock time year returning standard time duration ramadan timezones also occasionally perform adhoc transition change alignment clock neighbour might even divide single timezone two part original timezone change rule indiana seems particularly prone sort thing subdirectory iana timezone database short fairly hopeless trying calculate transition might occur given timezone expect exactly two every year check database provided operating system library note also transition rule set political process change sometimes short notice mean update timezone database new decision made future transition future entry timezone transition database prediction educated guess based pattern past behaviour subject revision mean wrong blindly convert datetime value system utc storage human event like meeting legal event like deadline normally given local time know certain utc offset force time future event prematurely converting future local time utc work transition linked timezones working multiple linked timezones aware transition linked eu clock change universal time utc preserve difference offset neighbouring timezones however north america clock change local time temporarily change relative offset neighbouring zone given timezone offset agreed politically subject change kind linkage reliable much better ignore perform calculation properly using timezone database instead size offset majority offset utc whole number hour many historically many timezones set using solar time giving quite odd offset indeed since offset iana database multiple minute last one pacifickiritimati changed offset midnight say future change might introduce offset moment known one perfect world offset would utc however international date line straight island near seem prefer australasian side american side actual range offset found practice say future change might introduce offset outside range moment size transition regular transition shift clock whole hour fact one know australialordhowe shift clock minute adhoc transition shift clock amount largest clock change know antarcticadumontdurville sometimes utc sometimes tenhour clock change transition also numerous transition hour timezones shift across international date line one direction strictly clock change affect time day day still cause issue software effect midnight special time since transition cause local time skipped duplicated beware issue caused affecting special time like midnight transition try avoid affecting midnight like timezones like atlanticazores set clock back hour local time giving two midnight also mess caused setting clock back midnight make two day overlap term local time opposite occur clock set forward midnight application special local time eg trying round time nearest hour beware similar effect offset change amount whole multiple hour need decide whether keep rounding top hour keep interval hour long since leap second diagram treat universal time utc advance constant rate fact true tai advance fixed rate utc differs tai whole number second change time time via insertion leap second practice data come across tends already dealt leap second one way another utctolocal diagram appropriate difference important fine draw kind diagram tai horizontal axis instead utc choosing timezone addendum redditor udbxp point omitted talk choose appropriate timezone given calculation give example jerusalem choice timezone depends geography similar example mount washington observatory apparently keep even though geographically americanewyork choice timezone human activity reliable way choose timezone expose choice directly human guessing based factor likely fail user additionally using proper timezone name ui much better trying abbreviate cleverly hard trust ui describes uk timezone gmt suggests correct daylight saving nice microsoft gmt greenwich mean time dublin edinburgh lisbon london conclusion graph showing local time universal time useful thing draw work timezonesensitive system need help visualising thing might occur right picture much easier get thing right
233,Lobsters,visualization,Data Visualization,polyHédronisme – tool to construct and explore polyhedra,https://levskaya.github.io/polyhedronisme/,polyhédronisme tool construct explore polyhedron,héd onisme polyhedronbuilding operator ki expand,specification consists spacedelimited series polyhedral recipe recipe look like op op op base space string character base one tetrahedron c cube octahedron icosahedron dodecahedron pn nsided prism nsided antiprism yn nsided pyramid jn nth johnson solid op one polyhedronbuilding operator kn ki nsided face n general ki ambo g gyro dual r reflect e explode aka expand equiv aa b bevel equiv ta ortho equiv jj meta equiv tn truncate vertex degree n equiv dknd n truncate vertex j join equiv dad snub equiv dgd p propellor c chamfer w whirl q quinto also newer experimental operator l stellation nn insetn xn extruden z triangulate h hollowskeletonize useful printing make hollowfaced shell version polyhedron apply recipe un limited version goldbergcoxeter un operator triangular mesh complicated parameterized form k n n n inset depth applies inset operator nsided face insetting inset scaled extruding along normal depth negative k n depth applies ki operator nsided face setting pyramidal height along normal depth negative h inset depth applies hollowingskeletonizing operator face insetting inset scaled shell thickness depth note operation topology result uniquely specified great variety geometry possible maximum flexibility operator enforce convexity polyhedron planarity face step property desired final result following geometric refinement operator used operator canonicalizing polyhedral shape mainly intended making traditional convex polyhedron symmetric kn quick dirty canonicalization blow iteratively refines shape n time cn proper canonicalization intensive slow convergence iteratively refines shape n time flattens face typical n convex spherical adjustment iterates n time may give pleasing symmetry unstable certain shape blow geometry weirder polyhedron interesting printing export shape form appropriate printing shapeways export format preserve face color want use colored fusedsand process probably want rescale exported geometry nontiny size information thanks george hart original page artwork software characterizing higher polyhedron lars huttar adding several new operator helping improve site lei willems inventing quinto everyone else kind word suggestion
234,Lobsters,visualization,Data Visualization,Slicing through Monterey Bay: Creating 3D Maps with Rayshader,http://www.tylermw.com/3d-maps-with-rayshader/,slicing monterey bay creating map rayshader,northlandz map suffer one major disadvantage trying represent landscape hopelessly flat weight want map look like carefully crinkled sheet paper wanted representation looked like paper weight previous post lake mead want see local beach looked like sea level lower peak ice age grab bathymetric data set set water level easy depth field photographic image build ggplots rayshader github follow twitter,see bottom page description generated read rest article see use rayshader r make beautiful map kid dad would occasionally take trip flemington new jersey visit northlandz world largest model railroad museum kid single functional railroad loop home popsiclestick town place something else hundred model train driving mile track detailed town bridge gorgeous threestory handcarved miniturized could take entire landscape single room boy nirvana planted seed interest scale model stuck shaped latest feature rayshader map suffer one major disadvantage trying represent landscape hopelessly flat always enjoy wellcrafted informative map map suffer one major disadvantage trying represent landscape hopelessly flat add many contour raytracedlambertian shadow spherical uv texture try convey ebb flow abstraction take dumb primate brain far able touch landscape walk around examine human scale conveys far information carefully crafted contour ever could found great example recent visit volcano national park hawaii featuring topopgraphy bathymetry big island weatherized scale model allowed drag fingertip across landscape feel volcanic crater peak could walk around island easily compare slope kona relative flatness hilo figure bathymetric topographic physical representation big island hawaii also good honeymoon destination right released last version rayshader thought already elevation data surface texture hard would combine two representation topography looked documentation rgl package answer hard wrote function generated surface texture blown away combination hillshaded texture representation dragable interactive widget close tactile experience could computer setting field view remove perspective make scene isometric simulating model scratched childhood itch miniturizing landscape elevationmatrix sphereshade addshadow rayshade elevationmatrix addshadow ambientshade elevationmatrix figure river derwent tasmania slicing mount dromedary mount faulkner rotate palette builtin rayshader add water layer using rayshader detectwater feature also adjusted zscale argument slightly exaggerate heightmap floating surface beautiful tangible model feel still felt impossibly flat regardless addition dimension want map look like carefully crinkled sheet paper wanted representation looked like paper weight one could imagine setting work desk occasionally picking examining needed midday moment introspection ie fidgeting decided build base add shadow elevationmatrix sphereshade texture bw addshadow rayshade elevationmatrix addshadow ambientshade elevationmatrix addwater detectwater elevationmatrix color unicorn solid true shadow true figure adding base shadow topographic map default base depth minimum value elevation matrix user also able define depth actual base built drawing polygon level elevation value side matrix line indicating edge turned coloralpha also adjustable user also change shadow depth width worked pretty well succeeded real physical object effect going actual base completely customizable change color transparency height line property shadow depth shadow width want map look like carefully crinkled sheet paper wanted representation looked like paper weight right developed feature earthobserved livetweeting talk australian marine science association conference conference one particular tweet caught eye talk dr gary greene submarine canyon formation presentation particular image figure tweet dr robbi bishoptaylor earthobserved talk submarine canyon formation look familiar almost identical map already water inspired image drafted decade computer generated software would make visualizing something like easy decided add usercontrolled water layer map produced rayshader well result elevationmatrix sphereshade texture bw addshadow rayshade elevationmatrix addshadow ambientshade elevationmatrix solid true shadow true water true figure monterey bay topography bathymetry data similar process building base building surface involves creating polygon base level water level default water level line color transparency useradjustable also make extremely easy perform analysis like one previous post lake mead quickly set water level call directly rather data setting camera straight phi turning isometric view fov give standard gi overhead view adjusting water level trivial waterdepthvalues min elevationmatrix min elevationmatrix co seq pi lengthout thetavalues co seq pi lengthout elevationmatrix sphereshade texture addshadow rayshade elevationmatrix addshadow ambientshade elevationmatrix solid true shadow true water true waterdepth waterdepthvalues watercolor wateralpha waterlinecolor ffffff waterlinealpha waterlinewidth theta thetavalues phi rgl drain png figure draining monterey bay overhead side ease visualizing layer make performing analysis involving varying level water incredibly easy want see beachfront look sea level rose another meter get elevation map surface set water level meter want see worst case scenario global warming melting ice cap height change want see local beach looked like sea level lower peak ice age grab bathymetric data set set water level easy want see local beach looked like sea level lower peak ice age grab bathymetric data set set water level easy fully realized model surface water perform interesting visualization like one top page featured video monterey bay top simply involved slicing row elevationdepth matrix loop viewing slice directly side data used produce rotating image simply moving camera replacing row texture map also produced programmatically rayshader green whole process one piece data needed provide elevation matrix everything else programmatically generated always main goal rayshader beautiful map derived directly elevation matrix montereybayelevation sphereshade texture removeedges false montereybayelevation solid true background white solidlinecolor solidcolor watertrue waterdepth watercolor rgl montbayslice png rgl rglclose latest set feature next round include depth field photographic image well support using rayshader easily build ggplots link github page rayshader github want see cool stuff follow twitter sign newsletter latest update rayshader
235,Lobsters,visualization,Data Visualization,Polyhedra Viewer,https://polyhedra.tessera.li/,polyhedron viewer,,
237,Lobsters,visualization,Data Visualization,Your Friendly Guide to Colors in Data Visualisation,https://blog.datawrapper.de/colorguide/,friendly guide color data visualisation,wrote friendly guide color data visualisation datawrapper color color gradient copy others color gradient create distinctive color copy master distinctive color copy movie distinctive color copy others distinctive color create make sure color work fuuuuuuun color color video mood sight highlight great article andy kirk sight ice color gradient distinctive color color gradient distinctive color gradient one distinctive color copy others colorbrewer cartocolor list color palette create chromajs color palette helper nice explanation documentation tool chromajs colorpicker data data color picker colorgorical palette creator want hue tutorial copy master theory color josef albers thing say like johannes itten art pdf mark rothko art palette experiment copy movie cinemapalettes movie color color motion wes anderson palette r library color palette generator suggests using photo tropical fish basis color palette copy others colorhunt colordrop coolors lolcolors pigment adobe color cc material design google designspiration dribble winning entry information beautiful plenty colour create smashing magazine paletton make sure color work viz palette spectrum coblis sim daltonism integrated color blindness simulator part part part color review fuuuuuuun color sesame street video color love hue blog post twitter lisa datawrapperde hacker news,upon time tweeted urgent matter somebody tell get better color wrote color decision awful got lot reply link tool awesome collected blog post called friendly guide color data hit publish two year ago since great people released greater tool write confidently color time update time datawrapper blog instead personal blog tried stay close original post possible update screenshots improve explanation go edit august added new tool changed structure slightly also added table content jump interesting part color color gradient copy others color gradient create distinctive color copy master distinctive color copy movie distinctive color copy others distinctive color create make sure color work fuuuuuuun color color first watch video color decision important mix color two main aspect importance color color let set mood b use color guide eye draw attention particular feature color enables tell story aspect important data visualization pitch interactive set mood effectively visualisation drone strike victim pakistan sight red drop make almost see blood spread color data vi often used set highlight important tool one use guide eye like remind everyone whether want hear important color data referring great article andy kirk left sight pitch interactive right ice derek watkins nyt choose color project data vi way chose color depends data two option continuous data use color gradient categorical data use distinctive color explain bit depth would use color gradient data progress low high eg unemployment rate map color gradient communicate represent value bit higher lower color next would use distinctive color eg green yellow blue also called data category eg political party scream nothing color two use case come challenge work gradient main concern making sure difference color step large enough want reader able clearly differentiate light green green tool create beautiful subtle ui gradient like one sufficient job next section post introduce outline tool help solve problem working distinctive color mission find color go well together attract eye problem typical graphic design circle tool area popular mention second part color gradient copy others colorbrewer need mentioned first classic color tool color tool every ambitious data vi designer tool making choice also teach best use color data vi yet click question mark read wonderful explanation lot people use colorbrewer therefore well lot visualisation look similar come color want suggestion great color gradient go beyond colorbrewer try cartocolor like colorbrewer try gradient map copy hex value color beautiful need even longer list especially working r also check list color palette color gradient create chromajs color palette helper gregor aisch cto datawrapper one use often little tool help identify difference step showing actual step interested background gregor also wrote nice explanation tool advanced data vi people appreciate documentation tool chromajs explore functionality changing value directly sample code block another tool extremely helpful also help understand color better colorpicker data tristen brown design gradient make sure make use button top generates choropleth map gradient see might look use shame map page color picker hey better nothing case two tool help data color picker erik kennedy might help define first last color seems good job finding beautiful color gradient inbetween also advanced tool overkill fan eg colorgorical connor gramazio palette creator hcl wizard another one want hue promise data actually complicated even offer tutorial definitely easily understandable tool beginner use emojis rate differentiation color nice touch though covered gradient move distinctive color hue distinctive color copy master million color decide nice palette distinctive color hue asked question twitter three people recommended painter feel like demand cover honest appreciate old master bauhaus university alumna see special something get albers itten co ex weimar resident also see delight one get theory color color available back different see computer screen day start josef albers book thing say like visual perception color almost never seen really physically color composition beautiful indeed another bauhausstar fact one josef teacher bauhaus crazy johannes itten wrote book art pdf famous color sphere showed color like course need mention color hero american painter mark rothko famous huge portrait color rothko said moved color relationship missing point interested expressing big well definitely moved color coming slowly back present day art palette experiment google let choose five color show artwork color also upload image choose color within work really well distinctive color copy movie move art movie shaped master storytelling medium know use color set highlight influence mood lead eye delight u find color palette chosen movie still twitter account cinemapalettes blog movie color project color motion take artistic approach creates visual representation entire film taking average color frame stacking line sure would ever actually helpful definitely interesting one dude work especially well color wes anderson blog wes anderson palette kind legendary even r library inspired want examine color movie still image tool like color palette generator steven degraeve help upload photo automatically create color palette see palette turn far le saturated color might helpful create palette color photo movie still automated approach color picker help much always look greyish color appear bill hartdavidson suggests using photo tropical fish basis color palette see might work well said tool like palette generator definitely still helpful art graphic design work distinctive color copy others many color palette collection colorhunt colordrop coolors lolcolors pigment adobe color cc example wide range collection color lover around globe created get fix want especially digital sleek color palette material design google make happy color palette used practice ability search artwork color designspiration dribble help answer question biggest use case getting inpsiration additional color would go well existing palette personally prefer designspiration dribble since let search one multiple color also great idea get inspired bigger sense go museum gallery look art look data visualization winning entry information beautiful feature beautiful color look blog people enthusiastic color example plenty colour distinctive color create smashing magazine provides good introduction create first color palette especially like idea harmonious starting pure gray base overlaying main color never thought make lot sense way make color palette feel harmonious smashing magazine introduction also make use paletton advanced version adobe color cc know tool help lot make sure color work show aaaaall way get inspired color palette keep mind need deliver viz palette elijah meeks susie lu tool show well chosen color work tiny line big area also warns color name case make harder talk design viz palette also make easy check color distinguished colorblind people browser extension like spectrum online tool like coblis app like sim daltonism simulate color seen people different type colorblindness datawrapper integrated color blindness simulator external tool necessary learn visit threepart series visualizing data colorblind reader part part part case want place text color eg annotate map make sure visit color review tell contrast text color background color readable text size red blue example pas test fuuuuuuun color ok work watch sesame street video fabulous ok go peep done play game two one called color good name know feeling heard word many time loses quite bit addictive expected goal match color go love hue smartphone game need mosaic coloured tile perfectly ordered enjoyed lot reminded differently color look like depending color surround blog post want learn color context data visualisation well wrote one two could interest thanks people replied tweet helped discover treat also let know tool website missed blog post find twitter write email lisa datawrapperde also read comment article hacker news
238,Lobsters,visualization,Data Visualization,Seeing Whole Systems,http://longnow.org/seminars/02017/aug/07/seeing-whole-systems/,seeing whole system,finesse complexity,nicky case presentation ingenious compelling graphically rich visualizing tool game nicky creates understanding complex dynamic system case writes need see nonlinear feedback loop culture economics technology need see collective behavior emerges individual mind motif need new tool theory visualization help people talk across discipline nicky case creator parable polygon coming simulator become behold build better ballot loopy finesse complexity began hi nicky case explain complex system visual tangible playful way exactly brilliant slide clear terminology system engineer call negative feedback example case call balancing loop maintain value likewise positive feedback call reinforcing loop increase value using example story viciousness board game monopoly miracle selforganizing starling case laid visual basic finessing complex system reinforcing loop like ball top hill ready accelerate downhill set motion balancing loop like ball valley always returning bottom valley perturbed consider deal situation attractor deep valley attracts system toward failure situation precarious ball near hilltop reinforcing loop ball nudged top plummet bottom balancingloop valley stuck would take enormous effort raise ball might financial collapse civil war case solution try move ball move balancing reinforcing loop system weaken strengthen needed reconfigure whole system desired condition becomes dominant attractor add two characteristic real network chaos randomness make possible phenomenon emergence whole different sum part evolution evolution made selection managed reinforcing balancing loop plus variation unleashed dense network chaos control evolution try way lie totalitarianism ever popular overemphasis selection lead paralyzed autocratic government frozen business case urge attention variation harnessing network chaos bottom via connecting various people various field experimenting lot solution welcoming certain amount randomness play design evolution case say system surprise solution never thought make chaos friend stewart brand
239,Lobsters,visualization,Data Visualization,Explorable Explanations - Learn complex systems via interactive education,https://explorabl.es/,explorable explanation learn complex system via interactive education,,lion cub playfight learn social skill rat play learn emotional skill monkey play learn cognitive skill yet last century human convinced play useless learning supposed boring gosh wonder miserable welcome explorable explanation hub learning play disorganized movement artist coder educator want reunite play learning let get started check random explorables
240,Lobsters,visualization,Data Visualization,Interactive road orientation charts on a map,https://mourner.github.io/road-orientation-map/,interactive road orientation chart map,source code,source code
242,Lobsters,visualization,Data Visualization,Gio.js - A Declarative 3D Globe Data Visualization Library built with Three.js,https://github.com/syt123450/giojs,giojs declarative globe data visualization library built threejs,giojs english 中文 reactgiojs wechat usage giojs simple customize modern table content motivation giojs simple customize modern arm trade visualization project original post simplicity customization modernization getting started installation usage demo giojs api document example resource playground link resource resource api list json documentation getting started basic element apis developer guide giojsorg contributor emoji key allcontributors license,giojs english 中文 react version reactgiojs wechat minigame wechat usage giojs open source library web globe data visualization built threejs make giojs different simple use giojs customize data visualization model declarative way add data integrate modern web application table content motivation giojs open source library web globe data visualization built threejs make giojs different simple use giojs customize data visualization model declarative way add data integrate modern web application library inspired arm trade visualization project developed michael chang presented google idea info see original post giojs easy reproduce fantastic data visualization model integrate web application simplicity create global data visualization model data four line javascript code customization design globe style easy use apis giojs modernization build responsible fully interactive rich frontend application using giojs getting started installation include threejs dependency script src threeminjs script include local giojs library script src giominjs script cdn script src http threejsorgbuildthreeminjs script script src http cdnjsdelivrnetnpmgiojs script usage including threeminjs giominjs html create div render gio globe usage giojs little bit different wechat mini game checkout demo know doctype html html head include threeminjs library script src threeminjs script include giominjs library script src giominjs script head body container draw gio globe div id globalarea div body html initialize render gio globe script get container hold io globe var container documentgetelementbyid globalarea create controller io globe input container parameter var controller new giocontroller container use adddata api add data controller know data format check documentation data http giojsorghtmldocsdataintrohtml provide sample data test get sample data http controlleradddata data call init api show io globe browser controllerinit script everything go well shall see fancier usage giojs check giojs api document click codepen logo try codepen giojs introduction giojs released developer propose many cool constructive advise giojs implement feature giojs come many big feature example giojs many representative demo show work giojs mainly three example resource resource giojs playground playground playground link developer play giojs export giojs parameter resource github example folder giojs many api demo demo gathered example folder clone giojs repo try environment resource live demo codepen giojs codepen collection contains many live demo giojs click codepen logo try edit api list configure json configure controller setinitcountry isocode default cn set country initially selected lightenmentioned boolean default false make mentioned country brighter mentioned input dataset disableunmentioned boolean default false disables unmentioned country make unselectable showinonly boolean default false display line data flowing selected country showoutonly boolean default false display line data flowing selected country addhalo string enables halo around earth enabling halo color halo also specified removehalo disables halo around earth enablestats display stats upperleft corner scene disablestats hide stats upperleft corner scene settransparentbackground make default background transparent setautorotation make globe rotate automatically setstyle string set color scheme globe name setsurfacecolor string default ffffff set color surface globe setselectedcolor string default ffffff set color country selected state setexportcolor string default set color line setimportcolor string default set color line sethalocolor string default ffffff set color halo setbackgroundcolor string default set color background adjustoceanbrightness float default set brightness ocean adjustrelatedbrightness float default set brightness related country adjustmentionedbrightness float default set brightness mentioned country adddata json load data controller gio override previous data synchronously cleardata clear data globe remove spline system moving particle switchdataset switch data set data group added adddataasync url callback load data controller gio override previous data asynchronously liveload url callback duration load data controller periodically closeliveloader close live load function getscene get reference threejs scene object getstatsobject get reference statsjs panel object oncountrypicked callback fired selected country change switchcountry isocode change currently selected country documentation quick start checkout getting started learn basic element see full api document markdown format checkout apis contribute giojs code base read developer guide checkout gio official website giojsorg everything plus lot live example contributor thanks go wonderful people emoji key project follows allcontributors specification contribution kind welcome license
243,Lobsters,visualization,Data Visualization,A graph of programming languages connected through compilers,https://akr.am/languages/,graph programming language connected compiler,,try setting target javascript
244,Lobsters,visualization,Data Visualization,How much is time wrong around the world?,https://blog.poormansmath.net/how-much-is-time-wrong-around-the-world/,much time wrong around world,late dinner note hour later world map wikipedia sun rise set late day extreme canonical time practical day length city slightly different longitude would slightly different time mechanical clock railway network time zone system human geography note robinson like coffee miller see also two cent daylight saving time global time emotional time annoyance dst time take change time,year ago went spain first time like many surprised late dinner first night dined almost alone restaurant going away people starting come course mostly explained cultural reason clearly laterthanusual summer sunset must also played role shaping spanish day note click new updated version map discussion solar time v standard time time writing near winter solstice madrid sunset around hour later sunset example naples similar latitude difference hold summer solstice around year applies place time like naples feel natural probably nonspanish people looking region world peculiarity spain edited world map wikipedia show difference solar standard time turn many place sun rise set late day like spain lot early highlighted red green map respectively russia heavily red mostly zone scarce population exception st petersburg discrepancy two hour effect time mitigated high latitude extreme example spainlike time western china difference reach three hour solar time example today sun rise set solar noon country forced discrepancy way assign place canonical time follows main assumption observe instant day sun higher sky call practical least two important reason analemma sun one solar day length modern calendar compensates letting midday oscillate bit around year example midday naples go early november early february difference solar noon clock noon beautifully explained analemma picture exposure taken every day clock noon showing sun move sky height northsouth direction due different season also eastwest direction due precisely different length solar day importantly city slightly different longitude would slightly different time seems strange time system huge problem ever practical preindustrialrevolution world travel uncommon slow problem minor annoyance today hyper connected physically virtually world obviously option transition apparent solar time day different length solar mean time midday wanders around caused proliferation mechanical clock early century change time zone system solve second problem caused instead telegraph even spreading railway network second half century coincidence first country moving common time great britain indeed acknowledge two problem must solved natural result current time zone system immediate consequence western part time zone sun rise set later eastern part normally difference amount half hour either direction human geography sometime force greater difference spain case allow spain time central europe difference exceed ninety minute china instead decided adopt single time zone place center richer east forcing le populated west uncomfortable time indeed though officially recognized government people xinjiang china westmost region follow time zone closer apparent solar time shifted two hour beijing time note luckily map uploaded wikipedia svg simply edited text editor add gradient using inkscape match object id usually like cylindrical projection favourite robinson yes like coffee time made drawing gradient much easier miller fair enough compromise see also two cent daylight saving time global time emotional time annoyance dst time take change time
246,Lobsters,visualization,Data Visualization,Announcing idyll.pub: Publish interactive blog posts and explorable explanations with Idyll,https://idyll.pub/post/announcing-idyll-pub-0a3eff0661df3446a915700d/,announcing idyllpub publish interactive blog post explorable explanation idyll,publish interactive blog post explorable explanation idyll free hosting service idyll version http idyllpub install latest verion idyll follow instruction install create new post run dev server see doc info publish acknowledgement open collective star project github chatroom mailing list buy sticker star idyll framework authoring publishing interactive post web idylllangorg,publish interactive blog post explorable explanation idyll free hosting servicejune release idyll version today pleased announce http idyllpub static hosting server idyll project tl dr publish post free straight command line work like install latest verion idyll npm install g idyllthis give access global idyll command npm installed follow instruction install create new post idyll create cd mypostnamethe idyll create command create new folder generate basic file structure new post use cd navigate newly created post run dev server idyllthis open post web browser edit fileindexidyll make change browser automatically update change see doc publish idyll publishpublishing give stable shareable link post hosted idyllpub republish making update correction link reused feel confident sharing stage editing processthese link generated using post name unique identifier future able create user account use link look like http idyllpub username postslug acknowledgementswe like thank everyone helped u reach milestone including contributor github backer open collective special thanks jeffrey heer ben clinkinbeard albert wenger zachary kaplan ricky reusserif like pleasestar project githubjoin chatroom mailing listbuy stickerstaridyll framework authoring publishing interactive post web click arrow see example interactive component see idylllangorg info
247,Lobsters,visualization,Data Visualization,Scanline Flood Fill,http://will.thimbleby.net/scanline-flood-fill/,scanline flood fill,,spending looking decent scanline flood fill algorithm finding one built interactive example show scanline simple flood filling work draw test four different flood fill see compare filled area clicking holding show pixel tested button show heat map number time pixel tested scanline flood fill algorithm work scanning line adding range nextprevious line stack shape loop thin wall filled side scanline algorithm test pixel achieves skipping testing range pixel current line filled rough outline algorithm add starting range x stack range fill extend current range left right add new range previous next line overlap current range stack skip testing range pixel current range created implementation nice clean fast support diagonal filling value needed passed parameter floodfillscanline test x function return true pixel need filling paint x function paint pixel function fill connected pixel starting x long test paint defined x width height painted pixel test true function floodfillscanline x width height diagonal test paint xmin xmax true false extendleft extendright var range x x null true true paint x rangeslength var r rangespop var r true var r false extendleft var minx r var r r minx test minx paint minx var maxx r extendright r maxx test maxx paint maxx diagonal extend range looked next line minx minx maxx maxx else extend range ignored previous line r r function addnextline newy isnext downwards var rminx minx var inrange false var xminx x maxx x skip testing testing previous line within previous range var empty isnext x r x r test x newy inrange empty rminx x inrange true else inrange empty rangespush rminx newy downwards rminxminx false inrange false inrange paint x newy skip isnext xr x r inrange rangespush rminx newy downwards rminxminx true height addnextline true addnextline false
248,Lobsters,visualization,Data Visualization,Modal Logic Playground,https://rkirsling.github.io/modallogic/,modal logic playground,modal logic anyway modal logic necessity possibility modal propositional logic propositional logic modal propositional logic must may possible world necessary possible accessibility relation must must must epistemic deontic alethic valuation kripke model hungry,modal logic anyway modal logic type symbolic logic capturing inference necessity possibility logical system theory lie intersection mathematics philosophy important application found within computer science linguistics app graphical semantic calculator specific kind modal logic modal propositional logic extends propositional logic lack quantifier let take whirlwind tour propositional logic start let briefly recall language semantics propositional logic ie connective truth table usual connective following symbolread asoperationnatural language example lnot notnegationit raining land andconjunctionit snowing cold lor ordisjunctionit raining cold rightarrow implicationif snowing cold leftrightarrow typical longform truth table would look something like using false true p q qrightarrow p prightarrow qrightarrow p fixed truth value propositional variable truth value formula using variable deterministic modal propositional logic modal logic add two new unary connective familiar language symbolread asoperationnatural language example box boxnecessityit must cold outside diamond diamondpossibilityit may snowing semantically modal connective interpreted respect possible world conceive possible world various way depending interested modelling one hand possible world might hypothetical alternate universe actual world way thing really present moment well infinity world differ way subtle world pen simply opposite side desk dramatic world dinosaur still roam earth ce alternatively possible world might various state computer computer program another system evolves time regardless proposition p current world w box p hold p necessary p true world accessible w diamond p hold p possible p true least one world accessible w mean world accessible clearest example surely computer accessible state simply successor state one immediately reachable current state set possible world nt unstructured mess ordered accessibility relation say world get others let illustrate example linguistics one speaks may must view talking true possible world yet seldom concerned every single possible world conversing current weather thing like pen dinosaur typically far one mind rather concerned relevant subset world accessible actual world via implicit relation english sentence show three kind accessibility relation work example sentencemodality typeaccessible world must rained overnightepistemicworlds consistent one knowledge must arrive noondeonticworlds consistent one obligation triangle must three verticesalethicworlds consistent logic world sentence might represented box p box q box r box operator noticeably different interpretation case first case imagine someone upon leaving house morning notice sidewalk wet based observation conclude rained overnight world consideration consistent speaker knowledge particular observation sidewalk thus box mean something like given known must case knowledgebased interpretation modal operator known epistemic modality second sentence might uttered airport staff inform passenger time flight board case relevant world consistent passenger obligation namely get airplane punctually box mean given obligated must case obligationbased interpretation modal operator known deontic modality finally suppose remove restriction let modal operator range every single possible world talked infinity possible could possibly common one thing logical consistency socalled alethic modality box mean logically necessary interpretation may commonplace daily conversation useful discussing mathematics third sentence definition triangle three vertex otherwise would nt triangle conveniently view possible world semantics extension truth table propositional logic fix truth value propositional variable modal logic propositional variable take different truth value possible world even two world truth assignment formula box diamond might different truth value world since world accessible may thus might say possible world truth table complete assignment truth value variable world known valuation altogether set possible world accessibility relation valuation form semantic model modal logic known kripke model kripke model visualized directed graph node represent world set edge represents accessibility relation valuation indicated annotating node truth assignment culminating example let take look following graph happens initial model app using computer program metaphor imagine scenario p stand program running q stand program terminated state model represents state program launch neither running terminated state running nonterminated state state terminated longer running state accessibility relation readytolaunch state option transition running state running state program either continue run reflexive edge indicated bold circle terminate terminated state end line speak evaluate formula based model instance diamond plandlnot q say transition runningandnotterminated state ie state naturally program able run keep running formula true state false state expressed following notation double turnstile model read satisfies make true plandlnot q plandlnot q plandlnot q see action try using app evaluate p q state hungry whirlwind tour scratched surface modal curious learn useful resource
249,Lobsters,visualization,Data Visualization,Working With Neo4j Date And Spatial Types In A React.js App,https://medium.com/neo4j/working-with-neo4j-date-and-spatial-types-in-a-react-js-app-5475b5042b50,working date spatial type reactjs app,overview data yelp open dataset graph data model yelp open dataset model import super fast tool query dataset using cypher apply graph algorithm dataset import using mark needham already written needed import command hosting cloud let encrypt option deploying cloud query spatial query numbusinesses date query numreviews documentation adam cowley temporal type using javascript putting together numbusinesseswithreviews react app create react app create react app component app component map component panama paper address geocode example u congressional district map reactmapboxgl blog post tristen brown keplergl reviewsummary categorysummary component nivo chart component library autosizer component react virtualized library querying react app realistic architecture might create graphql api query database deploy netlify netlify netlify code project github try live try,includes support new spatial temporal functionality including point date type index enable querying using type thought would fun build simple app us spatial temporal featuresin post walk step build reactjs dashboard type application allows user search business location review within certain date range display chart based aggregation review explore use new spatial temporal type use new type cypher query driver fit react appdatafor example wanted dataset included space time component decided use yelp open dataset dataset released yelp includes subset data powering online review site including million review thousand business metropolitan area throughout u europe download data herethe graph data modelthe graph data model yelp open datasetthere example showing use yelp open dataset model import dataset including super fast tool query dataset using cypher find recommended business apply graph algorithm datasetimportwe first need import dataset yelp data provided streaming json format one json object per line several option could import use apocloadjson import json filesread json line pas parameter cypher statementconvert csv use load csvconvert csv use fast bulk loading importi opted last approach using dataset large enough faster use bulk import functionality instead load csv option colleague mark needham already written needed extended script support point date make use header file define property type import need update header file business review node first business id id business name address city state location point review id id review text star int date datewe need change csv file review since able parse date string format already used yyyymmdd need add point type business csv write data csv map dictionary contains latitude longitude dental design e warner rd ste ahwatukee az latitude longitude use import command passing csvs import data important note import create index u need explicitly create index want use initial data lookup case create index location property business node date property review node create index business location create index review date find full code import herehosting cloudsince building web app need host database somewhere also since probably want serve webpage secure http connection need generate trusted certificate web browser accept default use selfsigned certificate good enough configurationsfortunately use certbot tool let encrypt easily generate certificate authority signed certificate use certbot generate certificatescertbot certonly copy cert directorycp pathtocertsfullchainpem pathtocertsprivkeypem initially used process secure connection vps instance see page myriad option deploying ultimately used cloud take care hassle obtaining certificate sign early access cloud herequeriesnow created database write cypher query work data focus looking business within distance specific point finding review within specified date rangespatial queriesthe first bit functionality want support searching business location user selects point map need search business within userdefined distance say meter taking advantage spatial index point type created match b business distance blocation point longitude count b numbusinesses make use distance function filter business within meter point specify latitude longitudeif prepend query profile see execution plan verify indeed using spatial indexprofile result querying business within point using spatial indexthis query take laptop find business within point phoenix areadate queriesthe next query want write search review within certain date range say march april write query match r review date rdate date return count r numreviews option constructing date cypher could pas date component year month day integer done pas string parsed date function profile query ensure using temporal index query take laptop certainly better scan million review nodessearching review within time range using temporal indexwe touched small piece new temporal functionality also type likedatetime localdatetime take timezone account duration working time period learn feature documentation colleague adam cowley put together couple great post showing detail temporal type using javascriptputting togethernow seen search space time combine query search business location review within certain time range match b business review r review distance blocation point longitude date rdate date return count b numbusinesseswithreviews query giving u count business radius review within date range populate ui actually need bit information see full query section querying react app inspect profile query see query planner chooses use temporal index review date make sense since selective index index contain million entry review spatial index contains le thousand business sometimes want force use one index another using index hint example wanted use spatial index instead temporal index currently index hint supported spatial index added next releasereact appnow database query ready start building web appcreate react appcreate react app easiest way start react project tool creating react application skeleton without configure build tool like babel webpack creating react app createreactapp easy npx createreactapp spacetimereviewscomponentsa reactbased ui made component encapsulate logic render piece interface given data prop overview component create application app componentthis main component handle sending query database using javascript driver storing result maintaining application state component application child app componentmap componentthe job map component show map allows user select point display business map markersi previously used leafletjs mapbox different project like panama paper address geocode example u congressional district map react app first thing looked react component wrapper mapbox gl j found reactmapboxgl published uber data science team seemed like neededafter starting work reactmapboxgl however felt constrained working prop library make available fortunately found blog post tristen brown help explain use mapbox gl j alongside react basic idea use mapbox gl j library inside map component encapsulating use library within component felt le constraining sure could gotten app work reactmapboxgl since keplergl built using itwe also use react twoway data binding approach triggering call fetch fresh data user selects new location maphere event handler draggable marker map component user drag around map release select center new location search addition updating circle showing search area grab latitude longitude map well zoom level call thispropsmapsearchpointchange viewport function actually defined app component passed map component prop kind callback react two way data binding pattern work callback function passed child component prop implementation mapsearchpointchange app component mapsearchpointchange simply update state app component trigger rerender thus call update data new location selectedreviewsummary categorysummarycomponentsreviewsummary categorysummary purely presentational component responsible drawing chart based data received prop make use nivo chart component libraryas data retrieved app component passed two presentational component render chart showing histogram review count star pie chart business categoriesi found useful use autosizer component react virtualized library allow chart component resize taking full height width containersquerying react appto fetch data query database directly client application might ideal architecture real world application work fine app realistic architecture might create graphql api query databaseto actually fetch data create function fetchbusiness contains cypher query want execute update state app component result query call function appropriate component lifecycle function componentwillupdate componentdidmount note import date temporal type instantiate date object pas parameter querydeploy netlifybuild setting deploying netlifyto deploy react app need able serve static content lot option used netlify make easy build deploy appwe integrate netlify project github create git commit hook trigger build commit also specify environment variable mapbox token credential netlifyyou find code project github try live herethe spacetime review dashboard search business location review within time range try
250,Lobsters,visualization,Data Visualization,Visualising Information for Advocacy (2013),https://visualisingadvocacy.org/,visualising information advocacy,,fantastic addition anyone coffee table best read anyone interested data presented stunning infographics help transform nongovernmental organisation advocate communicate campaign
252,Lobsters,visualization,Data Visualization,LARNN: Linear Attention Recurrent Neural Network,https://github.com/guillaume-chevalier/Linear-Attention-Recurrent-Neural-Network,larnn linear attention recurrent neural network,larnn cell downloading dataset metaoptimize larnn visualize result hyperparameters space searched metaoptimization best result retrain best hyperparameters found metaoptimization debug larnn model thought selfassessment explored done reference paper citing arxiv license project mit license drawing ccby connect,fixedsize gobackk recurrent attention module rnn linear shortterm memory mean attention larnn model easily used inside loop cell state like rnn cell state keep k last state multihead attention mechanism larnn derived long shortterm memory lstm cell larnn introduces attention state past value certain range limited time window k keep forward processing linear time term sequence length time step therefore multihead attention positional encoding used recent past value inner state cell enable better midterm memory new time step cell look back previous cell state value attention query larnn cell note positional encoding concatenated rather added also elu activation used cell also batch normalization many place drawn multihead attention mechanism us elu activation rather unactivated linears key value query one query rather many query yes larnns downloading dataset cd data downloaddatasetpy cd metaoptimize larnn launch round metaoptimisation save result new result folder hyperoptoptimizepy dataset ucihar device cuda two training round executed renamed folder visualize result visually inspect effect every hyperparameter accuracy correlated effect navigating could also copy run one file new result simply changing result folder jupyternotebook new folder taken hyperparameters space searched metaoptimization hyperparameters respective value range explored hyperparametersspace optimization parameter loguniform scale multiply learning rate make vary exponentially multiplicative fashion rather linear fashion handle exponentialy varying nature learningrate hploguniform learningratemult many epoch learningrate multiplied decayeachnepoch hpquniform decayeachnepoch weight decay hploguniform number loop whole train dataset trainingepochs number example fed per training step batchsize lstmrnn parameter dropout hidden unit top larnn cell dropoutdropproba hpuniform dropoutdropproba let multiply default number hidden unit hiddensize hploguniform hiddensizemult number h attention head attention head attentionheads hpquniform attentionheads larnn linear attention rnn parameter restricted attention back time step across sequence larnnwindowsize hpuniform larnnwindowsize new attention placed lstm larnnmode hpchoice larnnmode residual attention added wx wh wx x wh h wa b layer attention postprocessed like wa concat x h b note k q v multiheadsoftmax q ksqrt dk v like attention need aiayn q wxh concat x h bxh v k wk larnnwindowsize number recent cell wheter use positional encoding similar one used http usepositionalencoding hpchoice usepositionalencoding false true wheter use bn elu linear layer key value multihead attention activationonkeysandvalues hpchoice activationonkeysandvalues false true number layer either stacked residualy stacked numlayers hpchoice numlayers use residual connection stacked layer isstackedresidual hpchoice isstackedresidual false true best result found hyperparameters test accuracy activationonkeysandvalues true attentionheads batchsize decayeachnepoch dropoutdropproba hiddensize isstackedresidual true larnnmode residual larnnwindowsize learningrate numlayers trainingepochs usepositionalencoding false retrain best hyperparameters found metaoptimization retrain best hyperparameters found command trainpy dataset ucihar device cuda note able run command need json file training result path resultsucihar currently best result found within folder could renamed make command work debug larnn model command practical want edit model potentially printdebug dimension larnnpy thought selfassessment although larnn cell obtains better result lstm cell explored larnn complicated hence lstm cell still interesting probably greater value however larnn would still compared deeply stacked setup done better result obtained using many cell mean current project could still perform better cell proper regularization seems positional encoding tried helpful learning overall despite larnn bringing huge improvement accuracy interesting thing project code reusable neat easily adaptable automatically hyperoptimize datasets network discovery adding activation multihead selfattention mechanism key query value performed well context better using activation best knowledge new neural attention data structure created using queue attention mechanism sliding time data structure could potentially interesting many application attention required figure reusable published ccby subfolder code published mit license also reusable current dataset solveable good accuracy without attention mechanism current project code something interesting genuinely try improve accuracy small dataset coded week could nt use complicated dataset rebuild complete data pipeline reuse old code mine already knew reference current project contains code derived project information piece code come header python file reference licensed permissive opensource license mit license apache license paper citing information see paper page arxiv license project freely available term mit license copyright c guillaume chevalier note drawing specially available ccby license rather mit license connect
253,Lobsters,visualization,Data Visualization,Visual Similarity Perception of Directed Acyclic Graphs: A Study on Influencing Factors,http://jgaa.info/accepted/recent/467.pdf,visual similarity perception directed acyclic graph study influencing factor,,obj goto endobj obj introduction endobj obj goto endobj obj related work endobj obj goto endobj obj study methodology endobj obj goto endobj obj research question endobj obj goto endobj obj dataset endobj obj goto endobj obj participant endobj obj goto endobj obj study procedure endobj obj goto endobj obj analysis result endobj obj goto endobj obj quantitative analysis endobj obj goto endobj obj qualitative analysis endobj obj goto endobj obj extended analysis endobj obj goto endobj obj factor specific analysis endobj obj goto endobj obj strategy analysis endobj obj goto endobj obj result summary discussion future work endobj obj goto endobj obj research question formed similarity group influencing factor endobj obj goto endobj obj extended analysis factor specific strategy endobj obj goto endobj obj conclusion endobj obj goto r fit endobj obj length filter flatedecode stream iҧ r ed z궆 e k f b k ɰ f endstream endobj obj type page content r resource r mediabox parent r annots r r r r r r r r r r r r endobj obj type xobject subtype form formtype ptexfilename c localtexmftexlatexjgaaartcubespreadpdf ptexpagenumber ptexinfodict r bbox resource xobject r procset pdf imagec length filter flatedecode stream endstream endobj obj moddate creationdate producer afpl ghostscript endobj obj length filter flatedecode decodeparms column predictor color width height bitspercomponent colorspace devicergb subtype image stream rfʤ v g u e ut ڐ hg v c 폏 qߺ b om j f e ҽ b kh ѧ iy iq g b u j ox dc iaa z c g
254,Lobsters,visualization,Data Visualization,Map of Metal,https://mapofmetal.com/,map metal,map metal continue need enable javascript website,map metal interactive overview metal history influential band helped shaped genre know today continue need enable javascript created patrick galbraith website
255,Lobsters,visualization,Data Visualization,EvilPlot — A combinator based plotting library for Scala,https://medium.com/@CiboEng/evilplot-a-combinator-based-plotting-library-for-scala-4531f00208,evilplot combinator based plotting library scala,evilplot combinator based plotting library scala getting started first plot import import import val new import import import val jump ahead bit default doc code,evilplot combinator based plotting library scalaby david hahnas data scientist cibo technology lot data visualization truthfully everyone cibo lot data visualization proper data visualization key work software stack mostly scala well known plotting library exist r python ecosystem since many u knew r satisfied plotting need unsatisfying serializing typed structured data scala csv r make simple plot maintaining large r codebase mostly plot started smell bit better wayexisting plotting library jvm largely modeled apis existing r python one felt could make something powerful extensible scala programmer oo side brain valued principle open extension closed modification fp side brain told u combinator pattern excellent way starting well defined initial building block combining higher higher order capabilitiesthus evilplot born evilplot open source combinator based pure scala plotting library run jvm browser via scalajs rendering either html canvaswe need data visualization better thing constantly implementing new minor variation plot evilplot design based belief handful primitive structure exist define graphic paired concept plot share information across ax label plot element express plot ever want combining small set graphical primitive higher higher order plotting capability thus open future without constantly messing around apigetting startedto get going evilplot need add buildresolvers resolverbintrayrepo cibotech public librarydependencies comcibo evilplot use instead using scalajsour first plotevilplot building larger graphical capability smaller one mean making simple plot easy spend lot time going feature get started let make first plot simple scatter plot sequential xvalues random yvaluesimport comciboevilplotplot import comciboevilplotplotaestheticsdefaulttheme import comciboevilplotnumericpointval data seqtabulate point itodouble scalautilrandomnextdouble scatterplot data render write new file tmpplotpng break evilplot us implicit theming system let control appearance plot wholesale case using builtin one import itscatterplot return plot object description data plotted plot point little circle screen component like ax background etc case used component get point screen finally render plot return drawable object think drawable fully specified description scene render perform sideeffects simply construct scene given plot sizethis plot interesting course probably add ax know range data label audience know talking easy well import comciboevilplotplot import comciboevilplotplotaestheticsdefaulttheme import comciboevilplotnumericpoint val data seqtabulate point itodouble scalautilrandomnextdouble scatterplot data xaxis yaxis frame xlabel x ylabel render adding thing simply matter calling additional method plot specifies exactly type component want addjump ahead bitlet take look complex example demonstrates evilplot power case plot distribution phi psi dihedral angle alanine dipeptide calculated molecular dynamic simulation six simulation total run different temperature using different parameter setsyou look example pick several building block using acontourplot create contour data simulation also make histogram angle phi psi individual plot evilplot let u add plot border easily even mark initial point plot use overlay compose multiple layer complex plot finally whole thing wrapped facet give u grid plot shared ax understandfacets alaninedataalldihedralsmap map p contourplot p surfacerenderer surfacerenderercontours dodgerblue overlay scatterplot pshead pointrenderer pointrendererdefault crimson topplot histogram psmap x rightplot histogram psmap frame toplabels alaninedatatempsmap k k k rightlabels seq xbounds ybounds xaxis tickcount yaxis tickcount xlabel phi ylabel psi render hopefully example convinces easy start simple visual compose complexity top using plot combinators first saw base plot customized using plotrenderers saw simple plot plot combinators add additional feature piecebypiece next saw multilayer plot expressed evilplot simply applying overlay function seq plot plot finally saw build multivariate faceted display plot easily regardless complicated individual plot arethis bit get started take look doc code continue journeydavid hahn data scientist cibo technology build software automate repetitive part data science make rigorous scientific work easy
256,Lobsters,visualization,Data Visualization,How 2 M.T.A. Decisions Pushed the Subway Into Crisis,https://www.nytimes.com/interactive/2018/05/09/nyregion/subway-crisis-mta-decisions-signals-rules.html,mta decision pushed subway crisis,one delay back subway worker safety rule change signal system made delay last longer costcutting deferred spending maintenance faulty signal force train operator slow much collision good signal misconfigured signal train operator slow poorly maintained reported village voice new safety rule meant protect worker led delay created track safety task force since safer faste r job delayed hour year overcrowding incorrectly blamed root cause delay fell recently acknowledged main enance cut seemingly small change added major impact subway resilience easy fix enough stopping distance asked,new york city commuter familiar wait descend bitter cold stifling heat find subway platform teeming body trying make work time delay ripple system barely room squeeze next train arrives year metropolitan transportation authority told u rising ridership overcrowding blame yet ridership actually stayed mostly flat delay rose authority recently acknowledged overcrowding fault instead two decision made mta year ago one slow train another tried improve worker safety appear pushed subway system current crisis easy fix one delay back subway understand mta change slowed train let look one delayed train represented single car train delayed next one may forced slow stop maintain safe amount space delay cascade line backing even train past subway could recover quickly cascading delay change mta hampered system ability bounce back worker safety rule change signal system made delay last longer two decision mta dealt subway system blow may felt well future first agency decided increase amount space required train installed modified hundred signal regulate train spacing process signal throughout system misconfigured set way slowed train even official intended second agency adopted new rule track work expanded safety zone increased setup time analysis internal mta document interview system manager train operator suggest two change removed extra capacity ability run train scheduled subway system top year costcutting deferred spending maintenance system longer able rebound disruption could conga line train way brooklyn said kimberly mclaurin train operator numbered line started one thing back line andy byford new president new york city transit asked analysis impact signal modification subway schedule part review announced january jon weinstein spokesman mta transit agency parent organization said email faulty signal force train operator slow much collision two train williamsburg bridge killed train operator injured passenger mta began installing modifying hundred signal prevent train going fast train pass signal switch timer start signal supposed work train cross signal switch triggering timer train reach next segment track faster speed limit allows signal automatically activate train emergency brake train cross signal switch triggering timer train reach next segment track faster speed limit allows signal automatically activate train emergency brake train cross signal switch triggering timer train reach next segment track faster speed limit allows signal automatically activate train emergency brake mta projected signal change would reduce number train could pas section track hour assumed signal would work properly train would operate speed limit good signal allows train pas speed limit misconfigured signal trigger automatic braking even speed limit train operator slow signal case passing faulty one reality many signal poorly maintained misconfigured triggering emergency braking speed listed limit unpublished internal mta analysis first reported village voice found signal change caused significant slowdown mta expected train operator face steep penalty number instance tripping signal like losing vacation day forced early retirement two type incident seen people forced retirement something like m mclaurin said noting always approach signal timer ready stop train regardless posted speed playing job added instructor one telling u go posted go mile lower instead someone fix adjust m mclaurin said signal change caused immediate slowdown station wall st bowling green fulton st wall st travel time increased second signal modified march increased second feb wall st bowling green fulton st wall st travel time increased second signal modified march increased second feb wall st bowling green travel time increased second signal modified march fulton st wall st increased second feb source internal mta document chart show median travel time station analysis stated mta known signal change would reduce number train able run congested line would made damage done signal change two fewer train could run southbound line hourly forcing thousand passenger train would carried squeeze already crowded car across entire system signal modified since new safety rule meant protect worker led delay two track worker died within week mta created track safety task force task force recommended new slow zone adjacent track crew working increase minimum crew size longer careful setup process work crew slow zone marked light flaggers alert train operator contributed increase workrelated delay new rule train traveling near track work must go le mph mph slower systemwide speed limit even far track work slow zone create bottleneck reduce number train able run delay caused track work increased time new rule added train delayed per incident service stopped dangerous setup new task force rule implemented including slow zone delay caused track work increased time new rule added service stopped dangerous setup new task force rule implemented including slow zone delay caused track work increased time new rule added service stopped dangerous setup new task force rule implemented including slow zone source internal mta document incident period planned unplanned weekday track work mta adopted safety rule share overall delay attributed planned track work increased percent percent despite similar amount work year protecting worker important part mta mission track still dangerous new rule last five year three worker died track near miss uncommon london underground system similar size age track worker fatality since tony utano president transport worker union local said would fight rule change could put worker risk many protection put place member maimed killed track said email mr weinstein mta said safety worker rider number priority declining answer specific question increase delay track work new york city subway world largest system making harder protect track worker maintenance without disrupting service even fastrack track shut overnight allow safer faster job start work delayed hour year overcrowding incorrectly blamed root cause delay delay began rise mta blamed rising ridership overcrowding delay kept increasing even ridership plateaued fell train dispatcher often used overcrowding catchall category delay without clear cause one caused crowded platform follow equipment failure track work disrupt regular service almost increase delay catchall overcrowding category incident per weekday subway ridership stayed nearly flat almost increase delay catchall overcrowding category incident per weekday subway ridership stayed nearly flat almost increase delay catchall overcrowding category incident per weekday subway ridership stayed nearly flat average weekday ridership actually decreased people january january train went time percent time percent mta recently acknowledged overcrowding actually root problem authority also blamed old equipment train dispatcher recorded instance electrical track problem causing delay despite maintenance cut seemingly small change added major impact subway resilience understand slowdown led current crisis simulate line subway train moving minute pas car represents entire train easy fix williamsburg bridge crash mta installed le expensive brake longer stopping distance without adjusting signal compensate afterward mta increased distance train also reduced speed train car installed speedlimiting signal either lowering speed increasing spacing would given train enough stopping distance avoid accident since making change brought system current crisis asked directly adjustment mr weinstein said repair upgrade continuing part subway action plan mta million emergency effort improve system percent subway action plan budget set aside signal maintenance march asked september long would take rider see impact subway action plan gov andrew cuomo told reporter would venture say looking carefully would see improvement already subway kept slowing february number delayed train percent since last september
257,Lobsters,visualization,Data Visualization,"Visualizing symptoms, sensations and stories",https://medium.com/pictal-health/visualizing-symptoms-sensations-and-stories-7de99c7ad1d8,visualizing symptom sensation story,drawing symptom body shape learn color red mean pain heat injury sharp shape indicate sharp pain radiating line wound mean pain dot showed itching crosshatching meant tightness people drew literal figurative sensation cool tone helped contrast area paininjury rest body participant different strategy visualizing mental state people used facial expression communicate mood sensation body fluid uti similarity diagnosis,drawing symptom body shapesome fascinating finding came analyzing body drawing represented someone body feeling came er empty worksheet looked like learn color red mean pain heat injuryi going start obvious one worth laying see rest examplessharp shape indicate sharp painespecially combined redorangeyellow color scheme star polygon lightning bolt combined redorangeyellow indicate sharp pain lower left image show swirly pattern inside perhaps meant colon interesting drawing seems show skewer head along pain left eye appears delicious slice pizza middle realized shining might migraine imageradiating line wound mean painthese line two different people drawing emanating wound combined color red seem indicate pain dot showed itching red dot used show itchy pain crosshatching meant tightness image left show crosshatching core muscle one right showing tight backback painpeople drew literal figurative sensationssome people drew organ like lung body find interesting many metaphor sensation able breathe drawing lung reasonable way explain going onboth people drew lung pink literal one left drew yellow liquid lungsat time people drew metaphor body drawing left show lower back fire one right show kind striated cube lower back interesting lower back image left show lower back cut open sharp knife flame coming cube right seems communicate tightnesscool tone helped contrast area paininjury rest bodylooking image together another trend surface people tended color entire body cool green blue hue indicate part body fine cool color indicate calm warm color used show something wrongparticipants different strategy visualizing mental statethere lot sensation mind hard communicate confusion wooziness lack concentration worry people tend draw sensation outside body especially head notice scribble cloud theme three image show cloud around head see word like woozy help person lower left seemed draw actual brain left right hemisphere combined word concentrate anything else two different people drew line coming head line seem indicate feeling alarm worrypeople used facial expression communicate mood sensationanother way reflect mental state draw expression person left clearly happy one right happy enough lot questionsone patient arthritis actually drew little face body shape indicate given part body felt fascinating way think pain make think people could draw paint actual body show feeling body fluidsone person drew body fluid sweat vomit note color sweat blue vomit green wound reduti similaritiesit fascinating see two different drawing urinary tract infection drawing different color overall similar include fever lower left back pain pain urinatingit hint potential drawing assist diagnosis given condition look like average symptomsensation perspective
258,Lobsters,visualization,Data Visualization,How To: Tune a Guitar,https://mathisonian.github.io/idyll/how-to-tune-a-guitar/,tune guitar,sad guitar electric tuner rescue keep thing work visualized raw waveform fourier transform tuning ear match reference tuning technique harmonic interval saint amazing grace find beat practice make perfect,sad guitartake second strum guitar sound good taken storage tune electric tuner rescuetune guitar using tuner click drag tuning knob right tighten loosen stringskeep sound tune quite yet scroll back try get tuning knob turn greenhow thing work guitar generate noise vibration string electric guitar one magnetic pickup convert vibration electrical signal sent tuner amplifierthis signal visualized raw waveform often want visualize frequency instead fourier transform mathematical function reveals audio frequency hidden wavestrum guitar see frequency visualizedtuning earnow tuned guitar using tuner let try tune guitar ear challenging may take time master guitar tune match referencewe start tuning reference note manipulate tuner right current note played reference noteturn distortion offthis easier cleaner sound match two sound get guitar tunetuning techniquesharmonic intervalsmost string guitar separated interval known perfect fourth perfect fourth beautifully resonant one pair string guitar separated perfect fourththe interval ggg bbb string major third major third sound happy uplifting interval show time music example major third found first two note saint first two note amazing grace form perfect fourthlearning hear interval help tune guitar without tunerfind beat two string played together produce third higher frequency known overtonewhen two string perfectly tune overtone inconsistent time produce wobbling beat overtone hear listen carefullyplay note hz difference listen beat turn distortion offas get pair string closer tune beat slow overtone perfectly amplified listening slowing beat helpful cue tuningpractice make perfecttry tuning guitar listening relationship adjacent string beat resultant overtoneshow tunerremove distortion tune guitar detune guitar
259,Lobsters,visualization,Data Visualization,mermaid: Generation of diagram and flowchart from text,https://github.com/knsv/mermaid,mermaid generation diagram flowchart text,mermaid edit page mermaid nominated j open source award category exciting use technology thanks involved people committing pull request people answering question special thanks tyler long helping maintain project mermaid live editor mermaid overview integration usage mermaid beginner guide usage cdn documentation contribution changelog example following example diagram chart graph made using mermaid markdowninspired text specific click jump text syntax doc live editor doc live editor doc live editor doc live editor doc live editor doc live editor live editor doc live editor related project contributor issue contribution guide appreciation jssequencediagram tyler long contributor,mermaid edit page mermaid nominated j open source award category exciting use technology thanks involved people committing pull request people answering question special thanks tyler long helping maintain project mermaid javascript based diagramming charting tool us markdowninspired text definition renderer create modify complex diagram main purpose mermaid help documentation catch development docrot mermaid help solve diagramming documentation cost precious developer time get outdated quickly diagram doc ruin productivity hurt organizational learning mermaid address problem cutting time effort tooling required create modifiable diagram chart smarter reusable content text definition mermaid diagram allows updated easily also made part production script piece code le time need spent documenting separate laborious task even nonprogrammers create diagram mermaid live editor mermaid overview video tutorial use mermaid favorite application check list integration usage mermaid detailed introduction mermaid basic us look beginner guide usage cdn documentation contribution changelog example following example diagram chart graph made using mermaid markdowninspired text specific click jump text syntax flow doc live editor graph td hard text b round b c decision c one result c two e result sequence doc live editor sequencediagram alice john hello john loop healthcheck john john fight hypochondria end note right john rational thought john alice great john bob bob john jolly good gantt doc live editor gantt section section completed done active active parallel parallel parallel parallel class doc live editor classdiagram averylongclass cool interface equal object elementdata size int chimp int gorilla class service int id size state doc live editor statediagram still still still moving moving still moving crash crash pie doc live editor pie dog cat rat git experimental live editor coming soon user journey doc live editor journey title working day section go work make tea go upstairs work cat section go home go downstairs sit related project contributor mermaid growing community always accepting new contributor lot different way help always looking extra hand look issue want know start helping detailed information contribute found contribution guide appreciation quick note knut sveidqvist many thanks project providing graphical layout drawing library thanks also jssequencediagram project usage grammar sequence diagram thanks jessica peter inspiration starting point gantt rendering thank tyler long collaborator since april thank evergrowing list contributor brought project far mermaid created knut sveidqvist easier documentation
260,Lobsters,visualization,Data Visualization,Head Light,https://www.sonycsl.co.jp/tokyo/4759/,head light,concept head light technology head light feel perceptual world specie superception concept head light technology head light feel perceptual world specie superception,headlight wearable wideangle projector system egocentric visual augmentation concept head light technology headlightはユーザが見ている物理環境と同期したcomputer head light feel perceptual world specie collaboration visual system 比嘉 了 satoru higa 右左見 拓人 takuto usami sound design shotaro hirata hardware design 小西 哲哉 tetsuya konishi 関連記事はこちらをご覧ください 関連サイト superception headlight wearable wideangle projector system egocentric visual augmentation concept superception super perception research framework us computer technology intervene process human perception connect multiple sens together one research project headlight system allows human experience perceptual world nonhuman specie personal projection mapping technology continued enhance human perceptual ability time worth noting different specie perceptual ability build subjective perceptual world different human hence perceptual ability specie different ability possessed human could integrate bring perceptual ability various creature human being head light aim expand human perception visually reproducing perceptive ability sensation various specie mean wearable projector head light technology consists laser source small project wide conversion lens headphone pose tracker headlight fisheye conversion lens projector enables much wider projection image however conversion lens produce strong distortion projected image pincushion shape headlight system compensates distortion based fisheye model distortion therefore headlight enables wide angle visual projection point view user degree diagonal angle minimum approx deg horizontal deg vertical cover large field view human headlight system threedimensional virtual space consistent physical environment rendered virtual camera based tracking information device processing inverse correction lens distortion projecting rendered image projector headlight performs consistent visual augmentation real world using threedimensional data physical environment source projected video system headlight project computer graphic aligned physical environment user watching projection mapping mode projected image appears existed physical surface addition since headlight system generate image synchronously one head movement motion parallax generated change projected imagedue perception depth caused moving parallax user feel virtual object exists front behind surface regardless physical arrangement actual projection plane head light feel perceptual world specie order experience potential sensory world built exhibition system headlight technology immersive visual experience designed inspiration perceptual ability specie including butterfly bat mosquito instance butterfly see world different color perception thus might perceive world totally different color another example bat use sound know distance surroundings called echo location thus recognize space even even complete darkness visualized sense sound propagation complete dark space scenario include seeing aerodynamics xray vision malleable sense time life environment designed based human perceptual ability however time real world wide variety specie different sensory ability human being able perceptual ability using technology believe human perceive real world new collaboration withvisual system satoru higa takuto usamisound design shotaro hiratahardware design tetsuya konishi click website superception
261,Lobsters,visualization,Data Visualization,How much time does cutting corners save?,https://masonsimon.com/2018/04/28/how-much-time-does-cutting-corners-save/,much time cutting corner save,mason simon b c c b b b b like,mason simon answer thought think piece craftsmanship thing hard way math time friend much time save going straight red point green point call side triangle b c question much shorter c b use pythagorean theorem call shorter two shortest side longer one b problem get simpler one two side always shorter equal instead b separate variable think b multiple take step set equal think hard enough make sense trust problem term single variable plot answer question two shorter side triangle equal left side plot get maximum benefit cutting across diagonal reduction distance traveled nearly preferred method crossing intersection stop sign go straight middle two shorter side triangle grow unequal benefit cutting corner fall limit code plot like like loading related published april
262,Lobsters,visualization,Data Visualization,The Wisdom and/or Madness of Crowds,http://ncase.me/crowds/,wisdom andor madness crowd,,wisdom andor madness crowd group people act smart dumb kind cruel interactive guide human network introduction connection contagion complex contagion bonding bridging small world conclusion credit sandbox mode bonus box link reference aあ translation
263,Lobsters,visualization,Data Visualization,D3 and ClojureScript,https://lambdaisland.com/blog/26-04-2018-d3-clojurescript,clojurescript,joanne cheng twitter ended working well visualizing u energy administration npr released slopegraphs slopegraph visualization setup install leiningen leiningen package manager choice install installation instruction official website figwheel figwheel http installing clojurescript javascript library cljsjs project code http svg data join mike bostock blog post interactive data visualization web svg code template mozilla web doc threadfirst macro clojurescript interop episode data u energy information administration drawing npr article svg text element intoarray clj j scale function formatters external library line generator slopegraph example clone finished project final thought figwheel additional clojure resource mariacloud figwheel resource,guest post joanne cheng twitter freelance software engineer visualization consultant based denver colorado taught workshop spoken conference visualizing data turn clojurescript great fit post show create visualization using power elegance clojurescript use drawing custom data visualization love using library wanted try one several compile javascript option decided look clojurescript ended working well going show created visualization using clojurescript visualizingthe u energy administration release data much energy u produce consumes type energy used npr released slopegraphs much type energy state u produce article inspired dive data create slopegraph show energy generation changed entire country last yearsi downloaded energy generation data u energy information administration data browser converted clojure hash map used create visualizationsetupinstall leiningenif clojure set machine installed year ago telling would look clojure one day going need install leiningen leiningen build tool dependency manager project use package manager choice install preferred check installation instruction official websitefigwheelwe going create new figwheel project figwheel going create new project directory build clojurescript code autoreload browser every time code changesin command line go directory want project live run following command lein new figwheel usenergyslopegraph sit back second make sure error appear output look like generating fresh lein new figwheel project change usenergyslopegraph directory run lein figwheel wait finish compiling open http browser change newly created project directory start figwheel cd usenergyslopegraph lein figwheel see something like lein figwheel figwheel cutting fruit sec figwheel validating configuration found projectclj figwheel configuration valid figwheel starting server http figwheel watching build dev compiling build dev resourcespublicjscompiledusenergyslopegraphjs src successfully compiled build dev resourcespublicjscompiledusenergyslopegraphjs second prompt show figwheel connects application dev cljsuser little browser pop figwheel welcome page located http clojurescript project set every time save file project directory figwheel automatically recompile reload browser need manually refresh pageonce fully loaded figwheel switch repl command line prompt let evaluate bit clojurescript allows enter bit clojurescript code directly terminal executed browsertype press enter jsalert look browser installing usenergyslopegraph project directory open file called projectclj insert list library name dependency look something like dependency orgclojureclojure orgclojureclojurescript orgclojurecoreasync going want figwheel install dependency restart figwheel hitting ctrld running lein figwheel figwheel install new dependency added projectcljopen srcusenergyslopegraphcorecljs mostly working file may notice line boilerplate code remove println defonce appstate line need project corecljs look something like n exampleprojectcore require enableconsoleprint defn onjsreload first line namespace definition also load package installed require file altering first two line look like n usenergyslopegraphcore require loading namespace make sure necessary javascript file get loaded typically define global variable access j prefix like wanted add react clojurescript project would add dependency require cljsjsreact access jsreactclojurescript javascript librariesusing existing javascript library clojurescript challenging clojurescript aggressive code optimization work compiler able analyze complete project including third party library always possible code found wild called extern provide extra hint compiler external reference optimized away cljsjs project bundle popular javascript library together necessary extern publishes clojure code repository clojarsmore recent version clojurescript support npm package directly time need cljsjs go away still convenient way include javascript library clojurescript projectcodelet first add scaffolding make sure reloading work smoothlywhen open http browser loading resoucespublicindexhtml let make change work better projectfirst add cs link head section head link href http rawgitcomlambdaislandusenergyslopegraphmasterresourcespubliccssstylecss rel stylesheet type textcss head replace body tag body div id slopegraph div script src jscompiledusenergyslopegraphjs type textjavascript script script usenergyslopegraphcoremain script body save reload page browser added div visualization extra script tag script call exported function called main usenergyslopegraphcore namespace called page load implement main function clojurescriptadd main function make sure onjsreload function corecljs export callable javascript defn export main println main function also call main function onjsreload defn onjsreload println onjsreload function main make change corecljs change string println function save file look browser javascript console see onjsreload get called every time make changeswhy using pattern figwheel autorefresher built load write browser want create main function define exactly happens app load first time happens subsequent reloadssvgone core concept data join tutorial go deep part completely unfamilar suggest looking mike bostock blog post book interactive data visualization webwe going drawing visualization using svg start need create svg element using continue might want grab code template github clojurescript quite particular order put thing template contains empty stub function simply fill named section make clear put rest data def height def width lifecycle defn appendsvg select slopegraph append svg attr height height attr width width appendsvg function selects html element id slopegraph appends svg element set height width attribute mozilla web doc resouce tell u attribute set certain svg element great reference working svg defined height width value first two line code example using throughout code examplein javascript appendsvg would look like function appendsvg return slopegraph append svg attr height height attr width width try calling appendsvg figwheel repl running terminal usenergyslopegraphcoreappendsvg inspect page browser see svg element html div id slopegraph svg height width svg div call appendsvg main function svg element work page load defn export main appendsvg save change inspect html indexhtml notice anything unusual two svg element save change onjsreload get called call main call appendsvgto solve issue let remove svg element onjsreload get called add removesvg function corecljs modify onjsreload call removesvg main called defn removesvg selectall slopegraph svg remove defn onjsreload removesvg main soon save change corecljs reload figwheel invoke onjsreload remove leftover svg element adding new one duplicate svg element notice used threadfirst macro appendsvg removesvg chaining call method threadfirst macro take starting value number function call starting value used first argument first function result used first argument next function forth help u chain selection method together without removesvg would look like defn removesvg remove selectall slopegraph svg period remove selectall indicate calling javascript method rather plain clojurescript functionsyou may also want check operator work similarly threadfirst prefix javascript method clojurescript interop episode lambda island explains syntaxthe benefit using allows freely mix clojurescript function javascript methodsthe datai used separate script transform csv data downloaded u energy information administration clojurescript hash map containing percentage energy source generated note renewables sum biomass geothermal solar wind data working draw slopegraph insert hash map definition corecljs def data naturalgas coal nuclear renewables naturalgas coal nuclear renewables drawing let create function called drawslopegraph take selection called svg data hash map update main call drawslopegraph svg element created appendsvg data hash map make sure visualization reflectes change make code defn drawslopegraph svg data defn export main let svg appendsvg drawslopegraph svg data column slope graph represents year column left display data column right display data look back slopegraph example npr article notice text element positioned vertically based associated numeric value text element case hash map key naturalgas coal etc numeric value hash map value percent use position name correctly columncreate function called drawcolumn drawcolumn take selection text element drawn inside year worth data column index additional svg attribute drawcolumn standard procedure creating new element data create placeholder selection bind data call enter create new element case svg text element set attribute text element defn drawcolumn svg datacol index customattrs svg selectall str textslopegraphcolumn index data intoarray datacol enter append text notice call intoarray pas data data call one thing find using javascript library clojurescript sometimes need turn clojurescript data structure plain javascript one intoarray turn clojurescript sequence type native javascript array could also used clj j clj j recursively turn clojurescript value data native javascript type mean use clojurescript method javascript valuesnow modify drawslopegraph make sure calling drawcolumn year data defn drawslopegraph svg data let get data get data drawcolumn svg x width drawcolumn svg x width setting x attribute column align horizontallysave change open indexhtml inspect html see anything page see created text svg element item datacolwe need set attribute text element set vertical position going create helper function return scale function help u translate value pixel value helper def heightscale scalelinear domain j range j height display text want display name energy source percent value example naturalgas natural gas helper function help u thatmodify require statement include clojurestring n usenergyslopegraphcore require clojurestring str add two helper defn formatpercent value format value defn formatname namestr namestr strreplace strcapitalize formatpercent us formatters convert decimal number percent string formatname simple string manipulation clean name string feel free try two function using repl dev cljsuser usenergyslopegraphcoreformatname naturalgas natural gas dev cljsuser usenergyslopegraphcoreformatpercent let set attribute text element created drawcolumn add attrs function modify drawcolumn helper defn attrs el doseq k v attr el k v draw function defn drawcolumn svg datacol index customattrs svg selectall str textslopegraphcolumn index data intoarray datacol enter append text classed str slopegraphcolumn index true text fn k v str formatname name k formatpercent v attrs merge customattrs fn v heightscale v attrs function helper function help u pas svg attribute selection using whole hash map rather calling attr every attribute want set without needing install external librarysave change look indexhtml see text still missing line header let first refactor code make drawing easier data join pattern going used let pull code separate function helper defn datajoin parent tag class data let join parent selectall str tag class data intoarray data enter join enter append tag classed class true join exit remove merge join enter draw function defn drawcolumn svg datacol index customattrs svg datajoin text str textslopegraphcolumn index datacol text fn k v str formatname name k formatpercent v attrs assoc customattrs fn v heightscale v datajoin place ready implement drawheader drawline def width def columnspace width defn drawheader svg year svg datajoin text slopegraphheader year text fn data str data attrs x fn index index columnspace defn drawline svg svg datajoin line slopegraphline attrs columnspace fn v heightscale v fn k heightscale get k call drawslopegraph defn drawslopegraph svg data let get data get data drawcolumn svg x drawcolumn svg x columnspace drawheader svg drawline svg going go detail api hope intuitively get sense going line connecting two column together us line generator work little differently text element drewthere lot thing make visualization readable maybe attach mouse handler highlight one column time like slopegraph example may want clone finished project try add feature using clojurescript final thoughtslearning new language overwhelming task pain learning new syntax paradigm also build tool editor tool decent number conceptual talk whole lot getting thrown face feel like much work get started languagepicking figwheel meant could learn clojure responsive environment pretty small setup process able apply javascript knowledge clojurescript start writing small visualization learn language slowly learned better way write code picked new editor repl tool continued clojure educationif learning clojure seems overwhelming figwheel project may right additional clojure resourcesif want dive straight clojure graphical environment zero setup also highly suggest resource
264,Lobsters,visualization,Data Visualization,2018 John Hunter Excellence in Plotting Contest,https://mail.python.org/pipermail/matplotlib-users/2018-April/001368.html,john hunter excellence plotting contest,matplotlibusers john hunter excellence plotting contest mdboom gmailcom http http information matplotlibusers mailing list,matplotlibusers john hunter excellence plotting contest michael droettboom mdboom gmailcom wed apr edt memory john hunter pleased reviving scipy john hunter excellence plotting competition open competition aim highlight importance data visualization scientific progress showcase capability open source software participant invited submit scientific plot judged panel winning entry announced displayed conference john hunter family numfocus graciously sponsoring cash prize winner following amount prize prize prize entry must submitted june form http winner announced scipy austin tx participant need attend scipy conference entry may take definition visualization rather broadly entry may example traditional printed plot interactive visualization web animation source code plot must provided form python code andor jupyter notebook along rendering plot widely used format may example pdf print standalone html javascript interactive plot video original data shared reason size licensing fake data may substituted along image plot using real data entry must include word abstract describing plot importance general scientific audience entry judged clarity innovation aesthetic importantly effectiveness communicating realworld problem entrant encouraged submit plot used course research work rather merely hypothetical scipy reserve right display entry whether prizewinning conference use material website attribution original author scipy john hunter excellence plotting competition cochairs thomas caswell michael droettboom nelle varoquaux next part html attachment scrubbed url http information matplotlibusers mailing list
265,Lobsters,visualization,Data Visualization,open-source data analysis and publishing platform,https://github.com/akvo/akvo-lumen,opensource data analysis publishing platform,akvo lumen pm development setup development environment integration data import readme thanks browserstack legal,akvo lumen opensource easy use data mashup analysis publishing platform pm development see setup development environment integration data import readme thanks browserstack supporting akvo allowing u use service infrastructure test code repository thank supporting open source community legal copyright present akvo foundation
266,Lobsters,visualization,Data Visualization,Mapping the whole internet with Hilbert curves,https://blog.benjojo.co.uk/post/scan-ping-the-internet-hilbert-curve,mapping whole internet hilbert curve,apr mapping whole internet hilbert curve русский really big lir cidr notation telnet introducing hilbert curve space filling curve tool already produce graph ripe recurse center twitter r,apr mapping whole internet hilbert curve translation available русский internet big really big believe vastly hugely mindbogglingly big mean may think got lir big peanut internet well actually long run need different story point common deployed version ip protocol set address limit address mean roughly billion ip address work except really large section usable ip range use local system local lan loopback link local local lan multicast future use block shown cidr notation already wipe address address however giving remaining address consider many perfectly within reach sending packet every single one first time someone done internet considerable amount background noise unsolicited packet mostly created system looking system hack see port far higher logarithmic scale port port telnet commonly used insecure router iot device known speeded ahead send icmp ping every host internet see much internet responds ping thus indicating connected computer side around day later sent billion packet large text file find way draw introducing hilbert curve problem displaying ip address single dimensional move however human good looking large amount single dimensional point way fill dimensional space also help structure graph stay shape luckily math back space filling curve make much sense numbered node passing though took even longer fully get realised still show animation unraveled single dimension anyway know graph work start applying ip address thankfully tool already produce graph relation ip address case loading data producing graph cat pingtxt pcregrep dddd labelsianaianalabelstxt outpng render hilbert curve color gradient showing many system online present internet april click image lossless full resolution version however warned last public scan know done carna botnet using data easily see change ripe even touched would later become block would use last allocation would give ip space every new member ripe make odd looking among block mass allocation block look spotty compared others ripe one completely used block time see different rirs consume block space year top also bonus scan apnic ip block every min hour data allows see internet breathe client come online morning offline night one interesting find gif look like dynamic ip pool isp showing client come online short amount time connecting getting new ip address hence active ip address moving day oh wondering look like form much using already enjoyed glad know going recurse center ny next week meaning follow twitter r keep silly sometimes sensible thing
267,Lobsters,visualization,Data Visualization,Graph Visualization With Neo4j Using Neovis.js: Leveraging Graph Algorithms For Data Visualization,https://medium.com/neo4j/graph-visualization-with-neo4j-using-neovis-js-a2ecaaa7c379,graph visualization using neovisjs leveraging graph algorithm data visualization,graph visualization using neovisjs leveraging graph algorithm data visualization update free ebook download sandbox neovisjs pagerank community detection neovisjs goal graph visualization exploring graph browser showing result analysis meant convey specific meaning neovisjs javascript driver visjs neovisjs graph visualization graph algorithm centrality algorithm community cluster edge weight getting started dataset nbc news creating graph visualization neovisjs project documentation resource,graph visualization using neovisjsleveraging graph algorithm data visualizationupdate reilly book graph algorithm apache spark book available free ebook download post use sandbox instance start twitter dataset run pagerank community detection data show embed graph visualization web app using neovisjsin post explore create graph data visualization use result graph algorithm like pagerank community detection running graph algorithm using library use javascript graph visualization library neovisjs create visualization embedded web app fetching data directly graph visualizationthere different motivation tool creating graph visualization includes tool exploring graph type interactive visualization might see browser visualization showing result analysis interactive something embedded web app even standalone application static meant convey specific meaning might used print blog postthis post focus one tool address specific goal graph visualization tool neovisjs used creating javascript based graph visualization embedded web app us javascript driver connect fetch data javascript library visualization called visjs rendering graph visualization neovisjs also leverage result graph algorithm like pagerank community detection styling visualization binding property value visual componentsthis screencast show use neovisjs library create graph data visualization styled result graph algorithm data visualization graph algorithmsthere three common way graph visualization enhanced graph algorithm specifically involves styling visual component proportionally result algorithm binding node size centrality algorithm degree pagerank betweenness centrality allows u see glance important node networkvisually grouping community cluster graph done use color quickly identify distinct groupingsstyling relationship thickness proportionally edge weight social network data might number interaction two character logistics routing data might distance two distribution center useful pathfinding algorithm dijkstra getting started datasetwe going use russian twitter troll sandbox dataset dataset contains tweet known russian troll account released publicly nbc news create sandbox instance herethe data model twitter troll dataset includes tweet user hashtags url shared tweet mention retweetsin graph data often interesting relationship inferred directly modeled data useruser retweet graph example user retweeting user important user retweet graph group user frequently retweet tweet posted user another user retweeted implies useruser retweets relationship first step find inferred retweets relationship run graph algorithmsto find important user community using retweet network first find troll user create retweets relationship connecting directly user graph store count property relationship representing number time user retweeted created retweets relationship run pagerank part graph could also use cypher query run pagerank projected graph without explicitly created relationship since specify write true run pagerank add pagerank property node contains pagerank score query using property value find top ten troll account pagerank score finally run community detection algorithm retweet network case label propagation add community property node indicating community algorithm determined node belongs toso run two graph algorithm pagerank label propagation make sense result visualization help u find insight datacreating graph visualization neovisjsin order create visualization neovisjs first need connect detail tab sandbox instance find connection detail instance server connection string username password included config object pas constructor neovis also need specify node label want visualize styled property determine node size color neovisjs work populating div element visualization need specify id element config object well connect instance property use determining node size color relationship thickness code generate graph visualization retweet network sandbox instance using pagerank property determine node size community color count relationship property relationship thickness visualization look configuration option read project documentationresourcesfree download reilly graph algorithm apache spark
268,Lobsters,visualization,Data Visualization,Free 10-part course on data visualization with D3.js,https://scrimba.com/g/gd3js,free course data visualization,javascript library manipulating document based data help bring data life using html svg cs emphasis web standard give full capability modern browser without tying proprietary framework combining powerful visualization component datadriven approach dom manipulation easy learn powerful yet simple javascript library allows play bring life document based data using html cs svg lot good resource available online learn free course created scrimba available free used also known short datadriven document javascript library producing dynamic interactive data visualization web browser make use widely implemented scalable vector graphic svg cascading style sheet cs standard,javascript library manipulating document based data help bring data life using html svg cs emphasis web standard give full capability modern browser without tying proprietary framework combining powerful visualization component datadriven approach dom manipulationis easy learn powerful yet simple javascript library allows play bring life document based data using html cs svg lot good resource available online learn free course created scrimba available free herewhat used also known short datadriven document javascript library producing dynamic interactive data visualization web browser make use widely implemented scalable vector graphic svg cascading style sheet cs standard
270,Lobsters,visualization,Data Visualization,Scientific Communication As Sequential Art,http://worrydream.com/ScientificCommunicationAsSequentialArt/,scientific communication sequential art,explorable explanation tom oreb portrait ward kimball,paper go identify several reallife network smallworld discus implication dynamical system apologize omitting good stuff note computer screen spaceconstrained like physical journal use many pixel need explain concept paradoxically making lavish use space result briefer writing illustration allow terser prose word count reading time graphic novel far le comparable prose novel algorithm described prose code typically given rule system ca nt see data state order understand algorithm play computer imagine state head illustrating state algorithm step make description dramatically easier follow used small amount lightweight interactivity via hoversliders allow reader see progression algorithm inplace many step interaction optional supplemental available reader want clarification skipped reader already understands nt care subtle supplemental interactivity see explorable explanation role picture prose fluid description algorithm picture coupled individual sentence even fragment word serve explain action picture whereas material near end picture coupled entire paragraph picture serve example concept conveyed word finally comicstyle need nt mean character dialog word balloon sound effect let alone superheroes anthropomorphic animal comic form sequence tightlyintegrated word picture together conveying message powerfully sum part potential form explain difficult concept unmatched underused another comicstyle explanation time art analysis see tom oreb portrait ward kimball
271,Lobsters,visualization,Data Visualization,Kernel Density Estimation,https://mathisonian.github.io/kde/,kernel density estimation,,
272,Lobsters,visualization,Data Visualization,"Python & Big Data: Airflow & Jupyter Notebook with Hadoop 3, Spark & Presto",http://tech.marksblogg.com/python-big-data-airflow-jupyter-notebook-hadoop-3-hive-presto.html,python big data airflow jupyter notebook hadoop spark presto,apache airflow spotify luigi building data pipeline airflow jupyter notebook apache zeppelin hadoop singlenode install guide installing dependency configuring jupyter notebook chesterish screen shot query spark jupyter notebook query presto jupyter notebook pyhive visualising data jupyter notebook sqlite airflow running connecting airflow presto downloading weather dataset airflow dag fivethirtyeight data repository creating airflow dag dag linkedin,python made language du jour data science machine learning deep learning world past year along sql get workload two programming query language sql great written give instruction english declarative meaning user asks want rather want query executed allows underlying query engine optimise query without needing change sql query python great brings huge number high quality library easy use job orchestration act taking routine task automating year past often done cron job last year business begun using system like apache airflow spotify luigi create robust system tool monitor job record outcome rerun job event failure anyone interested written blog post includes airflow back story blog titled building data pipeline airflow notebook tool data exploration visualisation also become popular data space past year tool like jupyter notebook apache zeppelin aimed fill need notebook show result analysis show code query produced result help spot oversight help analyst reproduce one another work airflow jupyter notebook work well together automatically feed new data data lake airflow data scientist analyse using jupyter notebook blog post take singlenode hadoop installation get jupyter notebook running show create airflow job take weather data feed store hdfs convert orc format export microsoft excelformatted spreadsheet machine using intel core cpu clocked ghz gb ram gb ssdbased storage capacity using fresh installation ubuntu lts singlenode hadoop installation built instruction hadoop singlenode install guide blog post installing dependency following install ubuntubased dependency git package used fetch weather dataset github remaining three package python python package installer python environment isolation toolkit sudo apt install git python pythonpip virtualenv airflow relying rabbitmq help keep track job following installs erlang language rabbitmq written echo deb http binarieserlangsolutionscomdebian xenial contrib sudo tee etcaptsourceslistderlanglist wget http binarieserlangsolutionscomdebianerlangsolutionsasc sudo aptkey add sudo apt update sudo apt install eslerlang following install rabbitmq echo deb http dlbintraycomrabbitmqdebian xenial main sudo tee etcaptsourceslistdbintrayrabbitmqlist wget http wwwrabbitmqcomrabbitmqreleasesigningkeyasc sudo aptkey add sudo apt update sudo apt install rabbitmqserver following install pythonbased dependency application used blog post virtualenv notebook source notebooksbinactivate pip install apacheairflow celery cryptography jupyter jupyterthemes pyhive request xlsxwriter configuring jupyter notebook create folder jupyter store configuration set password server password nt set given lengthy url key access jupyter web ui key change time launch jupyter notebook mkdir p jupyter jupyter notebook password jupyter notebook support user interface theme following command set theme chesterish theme following list theme currently installed builtin theme screen shot located github return default theme run following command query spark jupyter notebook first make sure hive metastore spark master slave service presto server running following command launch service hive service metastore sudo optprestobinlauncher start sudo optsparksbinstartmastersh sudo optsparksbinstartslavessh following launch jupyter notebook interact pyspark pythonbased programming interface spark pysparkdriverpythonipython pysparkdriverpythonopts notebook nobrowser pyspark master spark note master url contains ubuntu hostname hostname spark master server binded connect spark check spark master server log hostname chosen bind wo nt accept connection addressing hostnames confusing often expect hostnames like localhost would work regardless jupyter notebook service launched following open web ui open http prompted enter password set jupyter notebook entered top right create new notebook drop two notebook type interest python terminal terminal give shell access using unix account launched jupyter notebook working python notebook launched python notebook paste following code cell query data via spark adjust query work dataset created installation cabtypes sqlcontextsql select cabtype count tripsorc group cabtype cabtypestake output query look like single record two field returned row cabtypeuyellow count query presto jupyter notebook notebook used query spark also query presto presto might outperform spark certain query handy switch two notebook example using dropbox pyhive library query presto pyhive import presto cursor prestoconnect cursor cursorexecute select tripsorc limit cursorfetchall following truncated output query ucmt u n interested producing chart data jupyter notebook look visualising data jupyter notebook sqlite blog post several plotting example using sql work spark presto airflow running following create airflow folder setup sqlite database used store airflow state configuration set via web ui upgrade configuration schema create folder pythonbased job code airflow run cd airflow initdb airflow upgradedb mkdir p airflowdags default presto web ui spark web ui airflow web ui use tcp port launch presto spark presto fail start start spark presto presto launch spark master server take keep trying higher port find one free spark pick even higher port number spark worker web ui overlap normally nt issue production setting service would normally live separate machine tcp port taken installation launching airflow web ui port airflow webserver often use one following command see networking port used sudo lsof onp grep listen netstat tuplen s lntu airflow default configuration celery broker result backend expect use mysql default following change use rabbitmq instead vi airflowairflowcfg locate edit following setting brokerurl amqp airflow airflow celeryresultbackend amqp airflow airflow us airflow username password connect rabbitmq feel free pick credential following configure credential access airflow vhost rabbitmq sudo rabbitmqctl addvhost airflow sudo rabbitmqctl adduser airflow airflow sudo rabbitmqctl setusertags airflow administrator sudo rabbitmqctl setpermissions p airflow airflow connecting airflow presto following open airflow web ui open http airflow web ui open click admin navigation menu top select connection see long list default database connection click edit presto connection following change required airflow connect presto change schema hive default change port save change click data profiling navigation menu top select ad hoc query select prestodefault drop query box able execute sql code execute via presto following example query ran dataset imported installation select count tripsorc downloading weather dataset airflow dag thought job run schedule example take weather data provided fivethirtyeight data repository github import hdfs convert csv orc export presto microsoft excel format following clone fivethirtyeight data repo local folder called data git clone http githubcomfivethirtyeightdatagit data launch hive create two table one representing csv format dataset second presto sparkfriendly orcformat dataset create external table weathercsv date date actualmeantemp smallint actualmintemp smallint actualmaxtemp smallint averagemintemp smallint averagemaxtemp smallint recordmintemp smallint recordmaxtemp smallint recordmintempyear int recordmaxtempyear int actualprecipitation decimal averageprecipitation decimal recordprecipitation decimal row format delimited field terminated location weathercsv create external table weatherorc date date actualmeantemp smallint actualmintemp smallint actualmaxtemp smallint averagemintemp smallint averagemaxtemp smallint recordmintemp smallint recordmaxtemp smallint recordmintempyear int recordmaxtempyear int actualprecipitation double averageprecipitation double recordprecipitation double stored orc location weatherorc creating airflow dag python code airflow job also known dag every minute perform following action clear existing data weathercsv folder hdfs copy csv file data folder weathercsv folder hdfs convert csv data hdfs orc format using hive export orcformatted data using presto microsoft excel format one location refer csv location full path homemarkdatausweatherhistory csv python code change mark portion name unix account vi airflowdagsweatherpy datetime import timedelta import airflow airflowhooksprestohook import prestohook airflowoperatorsbashoperator import bashoperator airflowoperatorspythonoperator import pythonoperator import numpy np import panda pd defaultargs owner airflow dependsonpast false startdate airflowutilsdatesdaysago email airflow examplecom emailonfailure true emailonretry false retries retrydelay timedelta dag airflowdag weather defaultargsdefaultargs descriptioncopy weather data hdfs dump excel scheduleintervaltimedelta cmd hdfs dfs rm weathercsv csv true removecsvstask bashoperator taskidremovecsvs bashcommandcmd dagdag cmd hdfs dfs copyfromlocal homemarkdatausweatherhistory csv weathercsv csvtohdfstask bashoperator taskidcsvtohdfs bashcommandcmd dagdag cmd echo insert weatherorc select weathercsv hive csvtoorctask bashoperator taskidcsvtoorc bashcommandcmd dagdag def prestotoexcel context columnnames date actualmeantemp actualmintemp actualmaxtemp averagemintemp averagemaxtemp recordmintemp recordmaxtemp recordmintempyear recordmaxtempyear actualprecipitation averageprecipitation recordprecipitation sql select weatherorc limit ph prestohook cataloghive schemadefault data phgetrecords sql df pddataframe nparray data reshape columnscolumnnames writer pdexcelwriter weatherxlsx enginexlsxwriter dftoexcel writer writersave return true prestotoexceltask pythonoperator taskidprestotoexcel providecontexttrue pythoncallableprestotoexcel dagdag removecsvstask csvtohdfstask csvtoorctask prestotoexceltask name main dagcli code place open airflow web ui switch onoff toggle next weather dag bottom homepage scheduler create list job worker execute following launch airflow scheduler service one worker complete scheduled job airflow scheduler airflow worker thank taking time read post offer consulting handson development service client north america europe like discus offering help business please contact via linkedin
273,Lobsters,visualization,Data Visualization,"The sound of the dialup, pictured",http://www.windytan.com/2012/11/the-sound-of-dialup-pictured.html,sound dialup pictured,william terminus redbubble hello modem suppressing echo finding suitable modulation enough small talk talking mouthpiece update redbubble selling,ever connected internet probably remember made peculiar sound despite becoming familiar remained mystery u sound mean audio inline recording beginning telephone call made modem audio recorded william terminus imac many already know hearing often called handshake start telephone conversation two modem modem trying find common language determine weakness telephone channel originally meant human speech spectrogram handshake audio labeled signal according party transmitted also put concise explanation order poster highres print via redbubble hello modem first thing hear example dial tone tone would hear picking landline phone modem know connected phone line dial number number signaled network using dualtone multifrequency signaling dtmf sound telephone make dialing number remote modem answer distinct tone calling modem recognize exchange short burst binary data ass kind protocol appropriate called bi transaction suppressing echo modem must address problem echo suppression human talk one usually talking one listens telephone network exploit fact temporarily silence return channel suppress confusing echo talker voice modem nt like well talk time called fullduplex answering modem put special answer tone disable echo suppression circuit line tone also periodic snap phase transition aim disable yet another type circuit called echo canceller finding suitable modulation modem list supported modulation mode try find one know also probe line test tone see responds tone different frequency much attenuates signal exchange test result decide speed suitable line enough small talk modem go scrambled data put data special scrambling formula transmission make power distribution even make sure pattern suboptimal transfer listen sending series binary adjust equalizer optimally shape incoming signal soon modem speaker go silent data put connection audible one could ask back day telephone line used audio first modem even used telephone receiver like human talking mouthpiece newer modem developed could directly connect phone line even idea hearing happening phone line calling quite new modem would default exposing user handshake audio case accidentally called human would still time pick telephone explain situation silence handshake send command serial line dialing update due numerous request made poster redbubble selling per poster directed poor nerd made
274,Lobsters,visualization,Data Visualization,Generating Flowers Using Simplex Noise,https://www.benfrederickson.com/flowers-from-simplex-noise/,generating flower using simplex noise,simplex noise github randomly deformed circle simplex noise perlin noise opensimplexnoise package stacking circle flower github get new post email,working larger generative art project one thing need abstract representation something could conceivably eaten ant ant apparently eat almost anything decided use flower represent food since picture decomposing fruit nt end looking appealing post quick tutorial generated flower using simplex noise code generate ended couple line typescript whole range different abstract flower generated changing parameter included code along interactive visualization explain work even though code pretty simple output still look pretty cool code github want dive deeper going go interesting bit randomly deformed circle key idea represent flower bunch randomly deformed overlapping circle circle randomly modified using simplex noise simplex noise perlin noise booth smoothly interpolate certain point point getting value chosen random perlin noise picking point grid simplex noise instead us series ndimensional triangle look like grid triangle twodimensional space grid triangular pyramid threedimensional space simplex noise end faster compute perlin noise also avoiding artifact found perlin noise deformation sampling bunch point regular interval around circle point generate random value using opensimplexnoise package add value radius circle point implementation typescript draw deformed circle onto html canvas context look like import opensimplexnoise opensimplexnoise const noise new opensimplexnoise export function drawdeformedcircle ctx circle x number number radius number frequency number magnitude number seed number void ctxbeginpath sample point evenly around circle const sample mathfloor circleradius let j j sample j const angle mathpi j sample figure xy coordinate given angle const x mathcos angle const mathsin angle randomly deform radius circle point const deformation x frequency frequency seed const radius circleradius magnitude deformation extend circle deformed radius ctxlineto circlex radius x circley radius ctxfill ctxstroke since want circle tile properly passing xy coordinate instead angle simplex noise function individual circle requires noise however using noise allow circle flower get slightly different random disturbance two parameter control output look frequency parameter scale coordinate passed call larger value leading random peak magnitude parameter control big peak tweaking two parameter control deformed single circle sort interesting real fun begin start stacking multiple circle top stacking circle flower generate final image calling drawdeformedcircle function loop passing slightly different radius seed value time export function drawflower ctx circle x number number radius number frequency number magnitude number independence number spacing number count number void adjust radius roughly size irregardless magnitude let current circle currentradius magnitude let count draw circle final parameter controlling similar circle image drawdeformedcircle ctx current frequency magnitude independence shrink radius next circle currentradius spacing two extra parameter spacing parameter control close circle one another spacing done exponential decay larger value indicating circle farther apart independence parameter passed function control similar circle another passing value mean circle exactly random deformation applied lead series concentric circle drawn passing larger value circle change circle next parameter generate whole bunch different possible looking graph code pretty simple still like output look added everything github also code interactive visualization well code generate sample image top post published march get new post email enter email address get email whenever write new post
275,Lobsters,visualization,Data Visualization,A Tale of Two Cities,https://pudding.cool/2018/03/neighborhoods,tale two city,tale two city ilium blinderman amber thomas essay unique neighborhood business seattle wa amber thomas dog statue troll bronze shoe print arrow rainbow data visualization meetup coffee shop unique neighborhood business new york ilium blinderman coolest neighborhood thomas wolfe wrote surprising neighborhoodlevel shapefiles project analysis business category mapbox,tale two city exploring characterizes neighborhood ilium blinderman amber thomas often speak city singular entity truth amalgamation neighborhood say live new york really mean live bedfordstuyvesant work office chelsea spend weekend bushwick colleague amber meanwhile resident seattle accurate say life work belltown spends free time exploring green space broadmoor magnolia green lake amber attempt describe city neighborhood examined business common within neighborhood city whole eg personal shopper made business city comprising business neighborhood deemed uniquely representative neighborhood since time likely occur neighborhood city often describe essay datadriven particular topic story love letter place call home unique neighborhood business seattle wa told resident seattleite amber thomas used imagine one day choose next travel destination closing eye blindly pointing spot map decision move seattle quite haphazard much neither boyfriend city neither u job apartment family looking change orlando life thought seattle sounded like place speed luckily fell love city almost instantly somewhere tree coast mountain people found right home settled belltown little neighborhood right near touristy part city although may cup tea coffee love said goodbye car hello walking shoe bus pass contrary public opinion day green lovely gray dreary true seattle fashion dog come u every adventure characteristic fremont massage therapy acupuncture massage naturopathic medicine skincare see fremont troll idea everyone told see got seattle turn enormous statue troll beneath aurora bridge crushing volkswagen beetle statue endearing quirky turn fremont neighborhood call home different unofficial motto libertas think phrase fitting scene artistic entertaining analysis suggest neighborhood home unusually high number massage skin care acupuncture business worth every seattleite mentioned laugh say sound fremont characteristic capitol hill cocktail bar bar apartment new american food real estate agent first time ventured decided walk seattle neighborhood name generally kidding muscle burned made way unbelievably steep incline view top worth effort street busy way seattle looking bit closer people actually dancing albeit slightly awkwardly middle walkway bronze shoe print arrow adorning sidewalk broadway teaching passersby rumba foxtrot tango madeup dance happens walk directly towards someone street awkwardly try move one way sidewalk dancing entertaining day people genuinely trying learn step evening people left nearby bar nightclub take alcoholenhanced dancing skill street rainbow also visible throughout area capitol hill home largest lgbtq community sign hang nearly every shop window literally walk across rainbow passing intersection characteristic roosevelt family doctor physician reiki naturopathic medicine acupuncture moving seattle marked careertransition leaving behind world marine biology anxious change apartment even furnished trekked roosevelt neighborhood data visualization meetup held coffee shop whose slogan independent coffee naturally felt right home sat table sipping drink named scifi character another idea neighborhood even though data suggests people may visit roosevelt type medical care always think area place new beginning heard story everyone story tell explore data neighborhood seattle match experience area unique neighborhood business new york told one resident new yorkers ilium blinderman one spring day meandered brooklyn friend lost woman asking direction passersby little luck turned u help town montreal friend australian regretfully told much became exasperated anyone around actually new york always loved city perhaps grew russia canada australia always felt drawn new york great immigrant metropolis perhaps limitless size paired densely packed street continue yield surprise one wanders heady sense human industry soon step foot penn station celebrated literary artistic pedigree thing city would wart one distill many population center essence use concentrate build something anew truman capote said york real characteristic midtown bike rental hotel landmark historical building tour jewelry first time visited new york done family muggy summer evening passing blaring horn george washington bridge arrived like many new york visitor first time midtown never new york worse spot visit first midtown matter emphatically new yorker assure tourist trap yes filled bike rental shop hotel bus tour like analysis suggest someone never seen city smell hot dog seller roasted nut cart wafting nonstop light show time square wash singularly memorable experience characteristic east harlem university housing college university real estate photography latin american food towing moved new york attend graduate school columbia monthlong stint subletting bedroom crown height decided cut commute move closer school opted room apartment corner madison street evidently university housing characterizing neighborhood area remains hub college student new yorkers often say want right price location apartment pick two three mine fit equation sure east harlem room bike ride class also taken hour scrub tiny bathroom clean room cleaned year neither kitchen cabinet stove looked like hair growing air duct boot one roommate gouging rent paying nearly nothing moved shortly graduating characteristic bushwick pet photography musical instrument musician marketing taxi moved back new york winter settling quiet block bushwick neighborhood known little neighborhood beside fact rent somewhat cheaper much city quickly learned former warehouse influx twentysomethings given reputation next hub artist musician almost immediately charmed way almost deliberately played stereotype three thrift store upon exiting subway station series loft two coffee shop two block away stood soontobeclosed silent barn communal space hosted band workshop manner event speak fact bushwick new york home pet photographer data showed surprised see music emerge unusually popular neighborhood behind youthful facade however lay far le rosy bushwick one inhabited lifelong denizes rather new arrival felt epidemic overdoses much ascendance status coolest neighborhood contender explore character new neighborhood spread across five borough distinct feature upper west unique trait include personal shopping pet training interior design bedford stuyvesant overindexes videography photography thomas wolfe transplant new york wrote take guy lifetime know brooklyn even den yuh know brooklyn sense endless possibility characterizes large city sure data analysis show visible important facet neighborhood analyzed shop community center music venue landmark place core part identity manhattanite find columbus association private jet charter town car service surprising seattleites shocked overindexed business first hill office nevertheless data take u far helping unearth true nature neighborhood amber two recent transplant respective home experience seattle new york often touch characteristic identified also frequently diverge never encountered pet photographer bushwick yet notice abundance laundry service west queen anne still time get know better new arrival wolfe ballpark lifetime intend use whatever got left precisely method initially became interested exploring neighborhood discovering neighborhoodlevel shapefiles working project focused geographic difference popularity different cuisine originally decided compared neighborhood based myriad factor ranging census data nih map eventually settled yelp data coming across katie analysis yelp business san francisco zip code used similar approach isolated name neighborhood using shapefiles queried yelp api search neighborhood available yelp business category focusing toplevel category using radius mile using latlong coordinate business mapped category neighborhood polygon compared ratio business neighborhood ratio city whole eg hairdresser made particular business business city overall judged neighborhood visualized result mapbox view download aggregated data
276,Lobsters,visualization,Data Visualization,jp - simple terminal plots from JSON data,https://github.com/sgreben/jp,jp simple terminal plot json data,jp get download binary use example bar chart separate x value xy pair value xindex array data line chart array data separate x value array data xy pair value xindex scatter plot histogram auto bin number fixed bin number histogram heatmap jsonlines input jsonlines csv input screenshots licensing,jp dead simple terminal plot json csv data bar chart line chart scatter plot histogram heatmaps supported get go get u githubcomsgrebenjpcmdjp download binary release page linux curl lo http unzip o x curl lo http unzip window curl lo http unzip use jp read json csv stdin print plot stdout usage jp type value plot type one line bar scatter hist default line x string x value jsonpath expression string value jsonpath expression xy string x value pair jsonpath expression override x given bin uint number histogram bin default auto input value input type one json csv default json height int plot height default auto width int plot width default auto canvas value canvas type one full fullescape fullbw fullwb quarter braille auto default auto example bar chart separate x value examplestcptimejson jp x label count type bar xy pair examplestcptimejson jp xy label count type bar value xindex examplestcptimejson jp count type bar array data echo jp xy type bar line chart array data separate x value jq n range sin jp x array data xy pair jq n range sin jp xy value xindex examplestcptimejson jp duration scatter plot examplesmvrnormjson jp xy x type scatter histogram auto bin number examplesmvrnormjson jp x x type hist fixed bin number examplesmvrnormjson jp x x type hist bin histogram heatmap examplesmvrnormjson jp xy x type jsonlines input data consists whitespaceseparated json value known jsonlines newline separator use slurp mode jq aggregate data point single array passing jp echo jq jp csv input examplessincsv jp input csv xy screenshots licensing
277,Lobsters,visualization,Data Visualization,"Talent, luck and success: simulating meritocracy and inequality with stochasticity",https://medium.com/@hongsupshin/talent-luck-and-success-simulating-meritocracy-and-inequality-with-stochasticity-501e0c1b4969,talent luck success simulating meritocracy inequality stochasticity,talent luck success simulating meritocracy inequality stochasticity video self compassion paper people implement model python simulated various socioeconomic scenario paper event people capital people people amount capital normal distribution paper event simulation time step lucky unlucky lucky capital doubled unlucky halved key result paper paper paper unmeritocratic criticism better implementing model bernoulli process chance look like average people successful sample highly talented uniformly distributed talent interplay stochasticity luck normally distributed talent fun part meritocracy talentcapital scatter plot visualize meritocracy economic inequality stochasticity positive correlation meritocratic wide spread dot given talent value stochastic le meritocratic width capital distribution economic inequality effect stochasticity affected prevalence luck society talent matter imbalance return lucky unlucky event scenario balanced unlucky event people escape bad luck smart enough imbalanced balanced unlucky event capital talent playing stronger role steeper slope scenario talent directly affect return luck parameter governing stochasticity scenario default scenario talent affect return luck steeper slope scenario le talented harsher consequence bad luck scenario paycheck hard work pay regular income job neither lucky unlucky event occur amount one paycheck talented fatter paycheck get work bounce back bad luck paycheck main effect paycheck cause stable increase capital people recover worst situation paycheck inequality paycheck weight w get larger band dot get tighter le inequality v without paycheck without paycheck w increase capital capital stay higher le talented people scenario without paycheck paycheck shield bad luck scenario interest rate every time step every month capital increase based interest rate interest rate without paycheck interest rate paycheck axis log scale interest rate increase economic inequality interest rate paycheck paycheck interest rate low spread dot narrower capital mostly dominated paycheck interest rate r w wider distribution wealth scenario rich get luckier poor get unluckier recalibrating probability every time step based much capital person owns score capital within top chance lucky event capital within bottom population chance lucky chance unlucky scenario w talented get extremely rich huge inequality le talented get poor still paycheck worse w le talented people fall extreme poverty bounce back unlucky event extreme version inequality scenario income tax incomebased tax rate fall specific range defined minimum maximum rate capital within top bottom tax rate pevent w create le economic inequality antimeritocratic scenario social safety net one capital go lower starting amount social safety net w prevent u getting poor scenario uneven starting amount capital redistributing wealth total amount capital capitalism fraction poor labor go rich rich pay get away unlucky event group people inflicted bad event time rich live longer poor live shorter inheritance basic income stochastic pay timevariable pay poor pay buy thing rich wnyc medium podcast interesting fact poverty debt future idea fitting parameter timing event conclusion stochasticity disrupts meritocracy steepness talentsuccess slope related fairness inequality paycheck protect people poverty even worst case data visualization provide insight socioeconomic problem acknowledgment,talent luck success simulating meritocracy inequality stochasticityi remember fresh academia looking industry job work data scientist friend situation like mine got job easily case took long time finally land job whenever got rejection email interview harshly critical wrong better next time smart enough said difficult timesone day encourage watched video self compassion important lesson video underestimate luck idea reassured also made think often counterbalance luck build fairer society paper got really excited asks asymmetry wealth society exists whereas talent intelligence normally distributed live truly meritocratic society supposed happen based model simulation author concluded randomness play fundamental role selecting successful individualshowever people already criticized author basic job model simulation somewhat exaggerated result regardless shortcoming still found interesting showed example quantified luck socioeconomic setting since model quite simple decided implement model python modification manipulate model parameter also simulated various socioeconomic scenario find insight relationship talent luck successthe paperthe author used mathematical model simulate luck quantify effect model event happen people resource capital change time amount capital measure one people randomly placed space fig neither reproduce die beginning simulation everyone amount capital everyone talent parameter drawn normal distribution talent change time since talent follows normal distribution technically negative larger convenience assume fig simulation random event paperevents simulationa single run simulation equal year working life age time step month time step total given time step lucky unlucky event green red dot respectively fig beginning run dot randomly placed simulation start every time step dot move around space gas particle person hit green dot lucky event happens red unlucky eventwhen lucky event happens capital doubled talented enough get profit ie random draw smaller talent unlucky event happens capital always halved key resultsfig top talent distribution individual normally distributed paper bottom distribution final capital value single run simulation step papereven though talent normally distributed among population single run simulation year time step capital distribution becomes highly asymmetric many poor rich fig fig talentcapital scatter plot run simulation paperin run poorest person leftmost dot fig talent average richest person average talent make world unmeritocratic author ran multiple simulation found similar result concluded thatrandomness play fundamental role selecting successful individualscriticismfirst paper lack explanation methodology simulate randomness luck space author also provide explanation parameter value selection study like model simulation existing phenomenon often require careful parameter selection using meta analysis second even attempt vary parameter value jumped conclusion soon plus would nice tried validate theory fitting model realworld data finally making big statement like quote without careful evalutation model misleadingcan better implemented model python modification play various parameter model found interesting effect parameter talent success also modified model introduce socioeconomic scenariosimplementing modelinstead using simulation decided simulate random event simply using bernoulli process every time step flip coin probability pevent event happens either lucky unlucky eventif event occurs chance lucky unluckythis way easy quantify understand stochastic nature luck instance pevent lucky unlucky event occurs every year average everything else original model paper equal start capital normally distributed talent etc fig distribution talent capital single run simulation new modelthe new model create similar result paper capital distribution highly skewed even though started normally distributed talent also visualize change capital time fig notice particular individual talented due series bad luck red dot capital decreasedfig individual capital change time blue dot mean lucky event red unlucky eventwhy look like average people successfulfig show example talented person unsuccessful bad luck however really true luck play key role select successful individual author claimed fig talentcapital normally distributed talent scatter plot singlerun simulation every dot represents final amount capital individualsimilar author result fig simulation new model show average person successful highest capital talented highest talent case answer actually quite simple sample highly talented model capital increased lucky event although talent help get profit lucky event since probability multiple lucky event small expected number averagetalented people getting lucky multiple time higher hightalented people simply averagetalented people confirm idea using uniformly distributed talentfig talentcapital uniformly distributed talent scatter plot singlerun simulationnow averagetalented le likely outperform hightalented fact positive trend showing highly talented people tend wealthier others hence interplay stochasticity luck normally distributed talent make look like average people better talented randomness itselfnow fun part another reason found paper interesting tackle idea meritocracy affect many aspect life society assuming talent inherent trait would interesting see luck affect relationship talent success talentcapital scatter plot visualize meritocracy economic inequality stochasticityfig talentcapital relationship meaning term meritocracy economic inequality stochasticityif talent capital show positive correlation say world meritocratic talented successful likely bedue luck inevitably degree stochasticity creates cloud dot straight line wide spread dot given talent value may say world stochastic luckdriven turn make le meritocratic talented successful averagethe width capital distribution measure economic inequality wider becomes inequality existsfrom see many talentcapital relationship plot different parameter value scenario keep fig mind help understand plot term meritocracy inequality stochasticitythe effect stochasticityin new model defined pevent parameter probability lucky unlucky event given time step fact pevent probably interesting parameter show affected prevalence luck society simulation fig fixed event happens every year vary parameter pevent parameter interpreted following way small pevent value mean world deterministic predictablea large pevent value mean highly stochastic unpredictable worldfig talentcapital relationship various pevent value note event happens chance lucky unlucky axis log scalefig show stochasticity manifested talentcapital relationship mean event happen every year mean event happen every monthswhen pevent small nothing really happens everyone capital le start amount however stochastic world becomes wider cloud dot often life bombarded unpredictable lucky unlucky event creates large economic inequalitywith high stochasticity pevent talent becomes useful people smart enough profit lucky event therefore start seeing positive correlation high stochasticity setting mean talent matter settingalso high stochasticity people fall poverty imbalance return lucky unlucky event unlucky event always punish individualsbut lucky event take effect smart enough get profit scenario balanced unlucky eventsthe first thing wanted try fix imbalance instead always punished unlucky event let people escape bad luck smart enough pretty reasonable assumption new function unlucky event becomes notice conditional term lucky event functionfig comparing talentcapital relationship imbalanced balanced unlucky eventsafter fixing imbalance people capital fig people face unlucky event le frequently especially talented also see talent playing stronger role steeper slope talent affect lucky unlucky eventsscenario talent directly affect return lucknow let assume talent directly affect much profit lose event remove stochastic process lucky unlucky function rand come following one benefit scenario parameter governing stochasticity pevent reasonable assumption instance talent b lucky event occurs capital becomes b becomes b talented unlucky event occurs capital get losing b losing thus high talent helpful situationsfig comparing talentcapital relationship scenario default scenario talent affect return luck scenario look similar pevent get larger steeper slope scenario mainly due le talented getting poorer fig scenario coefficient fixed since possible meaning le talented harsher consequence bad luck scenario bad luck half capital mostscenario paycheck hard work pay far nothing happens given time step capital remains realistic general people regular income job implement idea adding term capital neither lucky unlucky event occur new term wt amount one paycheck w represents importance paycheck higher pay get w multiplied talent parameter implement meritocratic idea talented fatter paycheck getif work bounce back bad luck fig individual capital change time paycheck blue dot mean lucky event red mean unlucky event note axis linear scalethe main effect paycheck cause stable increase capital greatly help people recover worst situation eg series unlucky event instance fig show unlucky person capital change time many unlucky event many red dot thanks paycheck able bounce back keep earning money since kept making money even unlucky event even though another unlucky event hit capital plummet dramaticallypaycheck inequalityfig talentcapital relationship various paycheck weight w parameter valuesto understand fig might need recall everyone start amount capital determines magnitude paycheck relation starting capital instance person whose talent paycheck quite large contrary paycheck negligible compared initial amount w get larger band dot get tighter fig capital dominated paycheck deterministic randomness also mean le inequality narrower wealth distributionwith v without paycheckfig comparing talentcapital relationship without paycheck note w plotswe see interesting result compare model without paycheck fig first additional income paycheck increase capital general highstochasticity setting pevent fig instead showing linear talentcapital relationship yellow dot paycheck scenario form curved shape capital stay higher le talented people scenario without paycheck paycheck shield bad luck certain degree still make money working paycheck still increase capital even unlucky eventsscenario interest rateanother way increase capital nothing happens introduce interest rate r far capital increase scenario every time step every month capital increase based interest rate rule remain interest rate applied beginning time step event eg lucky unlucky event happeninterest rate without paycheckfig talentcapital relationship various interest rate r paycheckobviously higher interest rate increase capital fig much dot spread seem similar across different interest rate remember axis log scale although spread dot look similar leftmost plot rightmost actual capital difference much larger among population compound growth thus interest rate increase even capital individual increase economic inequalityinterest rate paycheckfig talentcapital relationship various interest rate r paycheck interest rate paycheck exist plot look slightly different fig interest rate low leftmost spread dot narrower see leftmost one fig scenario interest rate low capital mostly dominated paycheckfig comparing talentcapital relationship interest rate r note paycheck exists plotslet compare scenario without interest rate paycheck exists interest rate applied yellow dot fig world stochastic pevent get wider distribution wealth compared nointerest scenario blue dot fig note see jshape distribution pevent fig paycheck prevents le talented going extreme povertyscenario rich get luckier poor get unluckier one might say probably realistic scenario far one get rich likely influence power others thus might get luckier others hand one get poor might likely face unlucky event often others enough resource cope event unfortunately actually happens often societyso far model event happens equal chance either lucky unlucky introduce new unfortunate scenario need change probability event lucky unlucky recalibrating probability every time step based much capital person owns every time step compute zscore every individual based capital distribution population time stepthen compute cumulative probability zscore becomes probability event lucky next time stepfor instance given time step capital within top population next time step event happens chance lucky event chance unlucky eventon hand capital within bottom population next time step event happens chance lucky chance unluckyfig comparing talentcapital relationship scenario note maximum yaxis nearly used previous figure paycheck interest rate existwhen scenario applied see talented get extremely rich rightmost high stochasticity creating huge inequality fact maximum yaxis nearly almost time larger interesting though le talented get poor guessed still paycheck worse happens remove paycheck model fig talentcapital relationship scenario paycheck interest rate note minimum yaxis much smaller fig surprisingly paycheck gone le talented people fall extreme poverty bounce back unlucky event creates extreme version inequalityscenario income taxone measure reduce inequality impose income tax although u discrete tax bracket simplify matter used method similar one scenario implement incomebased tax rate first compute zscore every individual based capital among populationcompute rate compute probability event lucky scale number fall specific range defined minimum maximum ratesfor instance let assume range tax rate capital within top population tax rate bottom tax rate tax calculated paycheck earned deducted total capitalfig talentcapital relationship various tax rate pevent paycheck interest rate minimum tax rate set tax pay le capital tax reduce variance capital compare leftmost middle plot fig create le economic inequality however large tax rate fig rightmost also make slope flat playing antimeritocratic rolescenario social safety netfinally hard lower bound one capital social safety net example scenario one capital go lower starting amountfig comparing talentcapital relationship without social safety net paycheck exists interest rate start amount capital show social safety net effect pevent large implies even live world high randomness type social safety net prevent u getting poorother scenariosi chatted many people paper came additional scenario worth considering uneven starting amount capital paper scenario assume everyone start amount capital happen amount capital random number drawn distribution uniform normal lognormal redistributing wealth total amount capital never tracked total amount capital rich make lot money poor going happen distribute rich high income poor kind redistribution strategy choose capitalism fraction poor labor go rich capitalistic society employee work employer fraction value employee labor go employer definitely going worsen inequality much rich pay get away unlucky event also see happening society rich pay certain price change fate would talentcapital relationship look group people inflicted bad event time similar natural disaster scenario simulation actually useful although redefine lucky unlucky eventsthe rich live longer poor live shorter far assumed everyone number time step unfortunately real world rich likely access better medical service might live longer thatinheritance speaking lifespan happens individual reproduce pas wealth child basic income saw helpful paycheck prevent people falling poverty however model paycheck depends talent term constant independent talent effect compared paycheck stochastic pay paycheck model deterministic proportional one talent know case real world talented people hard time getting decent job might end menial job low pay mean luck affect paycheck welltimevariable pay people paycheck may vary time well get promotion time make money opposite occurthe poor pay buy thing rich last year listening wnyc medium podcast learned interesting fact poverty poor expensive instance buy thing bulk end paying buy healthy food become sick pay money medical expense ironic fact implemented model would talentcapital relationship look debt model capital go low possible never negative reality people may borrow money accumulate debt going happen allow debt society interest rate applied debt well capital future ideasfitting parametersa great benefit building quantitative model fit parameter real data estimate parameter instance estimate pevent given society tell u often random event occurs society even go estimate parameter different society country quantitatively answer question large effect luck society compared others often random event happen country affect people life timing eventswe discussed much timing event scenario timing matter however complicated scenario timing may make visible difference instance easier recover bad luck unlucky event happen one one extended question people prepare future kind economic measure take protect senior citizen conclusionsstochasticity disrupts meritocracyif lucky event bring large amount profit unlucky event bring huge loss individual due stochastic nature life inevitably disrupt meritocracy even without socioeconomic situation aggravate phenomenon appears people average talent often better talented simply many people average talent luckythe steepness talentsuccess slope related fairness inequalityin meritocratic society positive correlation talent success steep relationship talentsuccess slope steep ie small talent difference cause large capital gap might end wide distribution wealth severe economic inequality hand slope quite flat ie big talent difference make little difference capital society weak meritocracy may disincentivize people achievement right degree steepness depends one defines fairness much inequality society handlepaychecks protect people poverty even worst caseone interesting result found effect paycheck stable income obvious retrospect even worst case someone faced many unlucky event paycheck stable income always bounce back recover bad luck plus saw economic inequality diminished paycheck large fraction one capital personally already knew stable income useful especially poor simulating using simple mathematical model interesting meaningful experiencedata visualization provide insight socioeconomic problemalthough simplified complex topic like meritocracy economic inequality still able visualize various socioeconomic parameter influence talentsuccess dynamic data visualization help understand term quantitative model interact also inspire u explore new idea variation old one visualizing data important start simple run sanity check like summary statistic scaling ask whenever find interesting patternsacknowledgmentmany interesting discussion paper helped develop idea write post biggest help came brilliant husband gabe bodeen brainstormed challenged idea came interesting scenario able implement roni kobrosly data scientist one best friend contributed idea counterbalance luck society reading group arm research presented paper coworkers shared idea encouraged write post genuinely appreciate help received finally would like thank pluchino biondo rapisarda interesting inspiring research
278,Lobsters,visualization,Data Visualization,Violin Plots 101: Visualizing Distribution and Probability Density,https://blog.modeanalytics.com/violin-plot-examples/,violin plot visualizing distribution probability density,distribution plot box plot fret violin plot kernel density plot anatomy violin plot interquartile range seaborn want make violin plot mode sign open new report data modeanalyticschickweights basic violin plot mode analytics click horizontal violin plot observation mode analytics click grouped violin plot mode analytics click grouped violin plot split violin mode analytics click longtail distribution tool making violin plot reading new data analysis sql python recommended article,sometimes median mean nt enough understand dataset value clustered around median clustered around minimum maximum nothing middle question like distribution plot friend box plot old standby visualizing basic distribution convenient comparing summary statistic range quartile nt let see variation data multimodal distribution multiple peak particularly limiting fret violin plot come violin plot hybrid box plot kernel density plot show peak data anatomy violin plot violin plot many summary statistic box plot white dot represents median thick gray bar center represents interquartile range thin gray line represents rest distribution except point determined outlier using method function interquartile range side gray line kernel density estimation show distribution shape data wider section violin plot represent higher probability member population take given value skinnier section represent lower probability enough theoretical let look example using seaborn python library purposebuilt making statistical visualization want make violin plot mode sign account open new report begin data table modeanalyticschickweights contains record sixweekold baby chicken aka chick includes observation particular feed type sex weight basic violin plot mode analytics click see complete python notebook generating plot violin plot show relationship feed type chick weight box plot element show median weight horsebeanfed chick lower feed type shape distribution extremely skinny end wide middle indicates weight sunflowerfed chick highly concentrated around median horizontal violin plot observation mode analytics click see complete python notebook generating plot like horizontal bar chart horizontal violin plot ideal dealing many category swapping ax give category label room breathe remove traditional box plot element plot observation point point come handy dataset includes observation entire population rather select sample whole population disposal nt need draw inference unobserved population ass front reducing kernel bandwidth generates lumpier plot aid identifying minor cluster tail caseinfed chick grouped violin plot violin plot also illustrate secondorder categorical variable create group within category instance make plot distinguishes male female chick within feed type group mode analytics click see complete python notebook generating plot grouped violin plot show female chick tend weigh le male feed type category draw conclusion sex delta varies across category median weight difference pronounced linseedfed chick soybeanfed chick grouped violin plot split violin instead drawing separate plot group within category instead create split violin replace box plot dashed line representing quartile group mode analytics click see complete python notebook generating plot split violin help compare distribution group instance might notice female sunflowerfed chick longtail distribution first quartile whereas male longtail third quartile tool making violin plot reading new data analysis try free sql python tutorial get started recommended article
279,Lobsters,visualization,Data Visualization,Time-series histograms with Rothko — Observability for IoT,https://innovation.vivint.com/time-series-histograms-with-rothko-observability-for-iot-ce39a09c35fc,timeseries histogram rothko observability iot,timeseries histogram rothko metric collection large deployment metric graphite influxdb prometheus atlas grafana quantiles rothko performance get rothko github readme,timeseries histogram rothko metric collection large deploymentswe excited announce new metric collection system rothko metric metric log trace telemetry observability monitoring oh paying attention engineering organization increasingly instrumenting software understand working scale heard term forefront idea improve measure measuring software field vital improving itmany engineering organization start log aggregation log aggregation collect log system put log sort log search tool try make sense increasing amount organization moved metric metric generally counter stats software easier log find quantiles find outlier find median aggregate system report metric operator store metric time timeseries graphsan example timeseries graph wholesystem data transfer rate timeif heard graphite influxdb prometheus atlas etc common tool displaying querying metric time graph generated graphite frontend grafana great system key rule scaling metric reporting system sampling certain point impossible save everything must choose save throw away hopefully statistically biasfree way million device reporting metric million metric coming every second get expensive really quickly keep track metric separately graphite example let choose time window sampling fundamental data model assumes want store data every reporting service get graphite scale million reporting service mean selecting maybe lot metric simply ignore coming cloudonly environment imagine metric system collecting timeseries data million server vivint front line putting device people home massive amount device scale operate measuring device behaving come new challenge satisfied tradeoff deciding ignore device sought another way want timeseries graph overall distribution across reporting device metric built rothkoquantilesto understand rothko first need take quick detour explain quantiles heard quartile percentile etc quantiles quantile way describing fraction node certain value rangelet say interested service request kept track long request took request time look like want statistic try make sense value start averaging even though request finished average response time mean average kind useless haha mean quantiles come request finished request finished request finished request finished request finished request finished request finished request finished request finished request finished lesshere percentile quantile might notice percentile quantile commonly called medianquantiles really useful getting better picture going system taking look quantiles request time immediately clear one request took lot longer othersit worth pointing percentile request took percentile request took morein real world system average usually uninteresting actively misleading keeping track quantiles much better way aggregate keep track metric across diverse array sourcesrothkoinstead timeseries graph small amount discrete metric time rothko timeseries quantile system displayed somewhat like timeseries histogram named metric assumed reported million individual device instead recording value device separately rothko record distribution seen value metric suffice say rothko scale much much betterso rothko look like threedimensional data represented colored heatmap xaxis bottom time yaxis left quantile percent reporting device given value le zaxis color value given right side value metricthis graph much cpu idle across thousand device closer dark purple le cpu idle closer yellow cpu idle around seemingly peak idleness across device percentile time seems idle recent data right seems like starting get cpu usage percentile dropped idlenote value associated color right linear big drop choose color based recent data node idle cpu node always idle cpu recent time sliceperformancefrom start design rothko focused performance goal cheaply store useful information across large fleet good performance critical succeed goalto give number instance rothko running production storing metric per second single cpu core configured write histogram every metric every minute completes writing distinct metric second average spending per metric since write second every minute disk utilization around since writes low pressure highly optimize read data layout set reading metric straight line read file disk read even cold metric observing response time fully rendered imageget rothko check github readme instruction build deploy believe combination cheap operation good performance global analysis might strike nice balance organization
280,Lobsters,visualization,Data Visualization,Data Visualization with Haskell: NYC Public Urination by David,https://lettier.github.io/posts/2016-06-01-data-visualization-with-haskell-nyc-public-urination.html,data visualization haskell nyc public urination david,complaint opendata data set soda api time haskell chart bucketed day line chart bucketed month line chart bar chart borough total aggregate count borough population size estimated day week box plot box plot recap appendix full source code,complaint found among nyc opendata service request present data set new york city used city official one several source measurement information performance city service important date history new york service include december received record high call due first day new york city transit strike june received millionth call data set contains varied amount complaint type ranging blocked driveway noise residential using soda api collect public complaint created time one way analyze data chartplot complaint occurred time using haskell chart library bucketed day first chart bucket createddates day would fall bucket every complaint bucketed count amount complaint day bucket count charted time line chart visualize day bucket using line chart immediately see large spike around september late summer exception see similar late summer spike also large falloff occurring end beginning year winter month bucketed month add clarity bucket complaint month bucket way would fall bucket word event per year month fall first month line chart see line follows overall shape line chart bucketed day count higher since event occurred particular month reported aggregate month bucketing complaint month occurred clearly see spike notice late summer spike still present break pattern spiking earlier year smaller spike occurring later see bucketed day month charted together bar chart alternatively truncate createddate time stamp yyyymm bucket complaint truncated date bucket use bar chart since sorting bucket numerically yearmonth label view bar chart histogram label quantitative v categorical see spike falloff borough another way visualize data look borough new york city made five borough new york city often referred collectively five borough term used refer new york city whole unambiguously avoiding confusion particular borough greater new york metropolitan area total aggregate count go ahead plot bar chart category borough value many complaint reported belonging borough year span see manhattan brooklyn queen bronx staten island coming second third four respectively borough population size make borough count interesting also chart population size u census bureau estimated population size bronx brooklyn manhattan queen staten island looking bar chart see population size necessarily relate complaint count least manhattan course population size estimated complaint count aggregated year period interesting spike occurring late summer zero see large spike saw occurring september complaint recorded single month borough count roughly proportion borough count aggregated across whole six year span comparing estimated population size complaint borough count see relative population complaint count proportion entirely related day week last visualization complaint count per day week box plot haskell chart outofthebox solution box plot however repurpose candlestick chart interface use bucketed day count day week collect fell list day week list count found scan day bucket jan jan may may etc count sorted day week calculate min lower quartile median upper quartile max sunday start rest day week follow monday tuesday etc see tuesday wednesday largest middle ranging zero two thursday max eight seen september spike min zero recap using haskell queried processed visualized complaint recorded definite cyclic pattern seen year year spike occur late summer falloff occur fall winter month saw largest spike september recorded complaint large spike early part year appendix find supplementary material full source code source written haskell heavily document david lettier c http wwwlettiercom language overloadedstrings language derivegeneric module main import ghcgenerics import systemdirectory import networkwreq import controllens import datafixed import datatime import datadates import datahashable import datahashabletime import qualified datalist dl import qualified datahashmap dhm import qualified databytestringlazy dbsl import qualified datasequence dseq import dataaeson import datadefaultclass import datacolour import datacolournames import graphicsrenderingchart import graphicsrenderingchartbackendcairo data complaintentry complaintentry uniquekey string createddate string complainttype string borough string locationtype maybe string incidentaddress maybe string incidentzip string deriving show generic instance fromjson complaintentry parsejson object v complaintentry v uniquekey v createddate v complainttype v borough v locationtype v incidentaddress v incidentzip instance tojson complaintentry main io main complaint getcomplaints print length complaint print mincreateddate complaint print maxcreateddate complaint renderabletofile def chartscomplaintcountsperdayofweekpng chartdaysofweekcomplaintcounts complaint renderabletofile def chartsboroughspopsizespng chartboroughspopsizes complaint renderabletofile def chartsyearmonthcountspng chartcomplaintscountbyyearmonth complaint renderabletofile def complaint renderabletofile def chartsboroughscountspng chartcomplaintscountbyboroughs complaint renderabletofile def complaint renderabletofile def chartscreateddatescountsmonthpng chartcomplaintscountbycreateddatesatmonth complaint renderabletofile def chartscreateddatescountsdaypng chartcomplaintscountbycreateddatesatday complaint renderabletofile def chartscreateddatescountsmonthdaypng chartcomplaintscountbycreateddatesatmonthday complaint return complaintentrymaybevalue complaintentry maybe string complaintentry string complaintentrymaybevalue f complaint case f complaint nothing locationtype complaintentry string locationtype complaintentrymaybevalue locationtype incidentaddress complaintentry string incidentaddress complaintentrymaybevalue incidentaddress complaintentryvalueswfilter complaintentry complaintentry complaintentry string complaintentry string complaintentryvalueswfilter complaintentryvalueswfilter f g x map g f x complaintentryvalues complaintentry string complaintentry string complaintentryvalues complaintentryvalueswfilter filter x true filtercreateddateyear string complaintentry complaintentry filtercreateddateyear year filter dlisinfixof year createddate complaintentry complaintentry filtercreateddateyear borough complaintentry string borough complaintentryvalues borough complaintentry string complaintentryvalueswfilter borough createddates complaintentry string createddates complaintentryvalues createddate complaintentry string complaintentryvalueswfilter createddate yearmonths string string yearmonths map take daysofweek string daysofweek sunday monday tuesday wednesday thursday friday saturday createddatesyearmonths complaintentry string complaintentry string createddatesyearmonths createddatesyearmonths f x yearmonths f x createddatesyearmonthsall complaintentry string createddatesyearmonthsall createddatesyearmonths createddates complaintentry string createddatesyearmonths minmaxcreateddate string string complaintentry string minmaxcreateddate minmaxcreateddate f x f createddates x mincreateddate complaintentry string mincreateddate mincreateddate x minmaxcreateddate minimum x maxcreateddate complaintentry string maxcreateddate maxcreateddate x minmaxcreateddate maximum x complaintscountbyhashable hashable k ord k complaintentry k complaintentry k int complaintscountbyhashable f dlsorton fst dhmassocs hashablecounts f complaintscountbyboroughs complaintentry string int complaintscountbyboroughs complaintscountbyhashable borough complaintentry string int complaintscountbyhashable complaintscountbyyearmonth complaintentry string int complaintscountbyyearmonth complaintscountbyhashable createddatesyearmonthsall complaintentry string int complaintscountbyhashable complaintscountbycreateddatesattrunc dtfmttrunc complaintentry localtime int complaintscountbycreateddatesattrunc trunc complaintscountbyhashable createddates createddates complaintentry localtime createddates map datetimestringtolocaltime trunc createddates complaintscountbycreateddatesatmonth complaintentry localtime int complaintscountbycreateddatesatmonth complaintscountbycreateddatesattrunc atmonth complaintscountbycreateddatesatday complaintentry localtime int complaintscountbycreateddatesatday complaintscountbycreateddatesattrunc atday complaintscountsperdayofweek complaintentry string int complaintscountsperdayofweek x daysofweekcounts complaint x daycounts complaintscountbycreateddatesatday complaint localtimetodayofweek localtime string localtimetodayofweek lt show dateweekday daytodatetime localday lt filterdayofweek string localtime int localtime int filterdayofweek filter x localtimetodayofweek fst x dayofweekcount string int dayofweekcount map snd filterdayofweek daycounts daysofweekcounts map x x dayofweekcount x daysofweek boroughspopsizes string int boroughspopsizes zip boroughnames boroughnames bronx brooklyn manhattan queen staten island bronx brookly manhatt queen si threeoneonelayouttitle string threeoneonelayouttitle nyc complaint barchart string string string int colour double renderable barchart title layouttitle count color torenderable layout xaxislabels map fst count yaxisvalues map x snd x count barchart plotbarstitles title plotbarsvalues addindexes yaxisvalues plotbarsstyle barsclustered plotbarsspacing barsfixgap plotbarsitemstyles repeat solidfillstyle opaque color nothing def layout layouttitle layouttitle layoutxaxis laxisgenerate autoindexaxis xaxislabels layoutleftaxisvisibility axisshowticks false layoutplots plotbars barchart def layout plotindex int chartboroughspopsizes complaintentry renderable chartboroughspopsizes complaint barchart title layouttitle count color count boroughspopsizes title borough population size layouttitle estimated nyc borough population size color blueviolet chartcomplaintscountbyboroughs complaintentry renderable chartcomplaintscountbyboroughs complaint barchart title threeoneonelayouttitle count color title complaint count borough take mincreateddate complaint take maxcreateddate complaint count complaintscountbyboroughs complaint color plum complaintentry renderable complaint barchart title threeoneonelayouttitle count color title complaint count borough count complaint color plum chartcomplaintscountbyyearmonth complaintentry renderable chartcomplaintscountbyyearmonth complaint barchart title threeoneonelayouttitle count color title complaint count per year month count complaintscountbyyearmonth complaint color turquoise complaintentry renderable complaint barchart title threeoneonelayouttitle count color title complaint count per year month count complaint color turquoise linechart ord ord plotvalue plotvalue plot renderable linechart lineplots torenderable layout layout layouttitle threeoneonelayouttitle layoutxaxis laxisoverride axisgridhide layoutplots lineplots layoutgridlast false def lineplotatmonth complaintentry plotlines localtime int lineplotatmonth complaint plotlinesstyle solidline opaque skyblue plotlinesvalues complaintscountbycreateddatesatmonth complaint plotlinestitle complaint count time bucketed month def lineplotatday complaintentry plotlines localtime int lineplotatday complaint plotlinesstyle solidline opaque tomato plotlinesvalues complaintscountbycreateddatesatday complaint plotlinestitle complaint count time bucketed day def chartcomplaintscountbycreateddatesatmonth complaintentry renderable chartcomplaintscountbycreateddatesatmonth complaint linechart plot plot toplot lineplotatmonth complaint chartcomplaintscountbycreateddatesatday complaintentry renderable chartcomplaintscountbycreateddatesatday complaint linechart plot plot toplot lineplotatday complaint chartcomplaintscountbycreateddatesatmonthday complaintentry renderable chartcomplaintscountbycreateddatesatmonthday complaint linechart plot plot map toplot lineplotatday complaint lineplotatmonth complaint chartdaysofweekcomplaintcounts complaintentry renderable chartdaysofweekcomplaintcounts complaint torenderable layout layout layouttitle threeoneonelayouttitle layoutplots toplot candlechart def daysofweekcounts complaintscountsperdayofweek complaint makecandle string int candle int int makecandle dayofweekcounts candle xindex low open med close high dayofweek fst dayofweekcounts count dlsort snd dayofweekcounts xindex case dlelemindex dayofweek daysofweek nothing low minimum count open case median take index count nothing fst medianindex case median count nothing med fst medianindex index snd medianindex close case median drop index count nothing fst high maximum count candle map makecandle daysofweekcounts candlechart plotcandlelinestyle linewidth linecolor opaque mediumaquamarine def plotcandlefill true plotcandlerisefillstyle fillcolor opaque mediumaquamarine def plotcandleticklength plotcandlewidth plotcandlevalues candle plotcandletitle complaint count per day week sunday def complaintsurl string complaintsurl http complaintsfile string complaintsfile datacomplaintsjson getcomplaints io complaintentry getcomplaints fileexists doesfileexist complaintsfile fileexists getcomplaintsfromfile else complaint getcomplaintsfromurl dbslwritefile complaintsfile encode dseqfromlist complaint return complaint getcomplaintsfromfile io complaintentry getcomplaintsfromfile complaintsraw dbslreadfile complaintsfile let complaint case decode complaintsraw maybe complaintentry nothing c c return complaint getcomplaintsfromurl io complaintentry getcomplaintsfromurl let opts default param complainttype like uri public param order createddate desc param limit r asjson getwith opts complaintsurl io response complaintentry print r responsestatus let complaint case r responsebody nothing c c return complaint hashablecounts hashable k ord k k dhmmap k int dhmmap k int hashablecounts mpin mpin hashablecounts x mpin hashablecounts mpout value case dhmlookup x mpin nothing v v mpout dhminsert x value mpin hashablecounts hashable k ord k k dhmmap k int hashablecounts dhmempty hashablecounts x hashablecounts x dhmempty data dtfmttrunc atmonth atday atsecond deriving enum datetimestringtolocaltime dtfmttrunc string localtime datetimestringtolocaltime trunc case trunc atmonth localtime fg midnight atday localtime fg midnight atsecond localtime fg tod year read take integer month read take drop int day read take drop int hour read take drop int minute read take drop int second read take drop pico fg fromgregorian year month day fg fromgregorian year month tod timeofday hour minute second median ord maybe int median nothing median x quickselect mideven x x x mideven mideven length x div quickselect ord int maybe quickselect nothing quickselect n n nothing quickselect n pivot case found true pivot false case gohigher true quickselect n length pivot lower higher false quickselect n lower lower filter pivot higher filter pivot partitioned lower pivot higher found partitioned n pivot pivotindex case dlelemindex pivot partitioned nothing error pivot found gohigher n pivotindex
282,Lobsters,visualization,Data Visualization,Mapping Incomes,http://storymaps.esri.com/stories/2018/mapping-incomes/index.html,mapping income,,story map requires javascript running javascript currently allowed web browser wish view story please enable javascript browser try different browser
283,Lobsters,visualization,Data Visualization,The Story behind Russian Twitter Trolls: How They Got Away with Looking Human – and How to Catch Them in the Future,https://neo4j.com/blog/story-behind-russian-twitter-trolls/,story behind russian twitter troll got away looking human catch future,backstory russian troll network list false twitter account help make sense russian account recently open sourced data interference work typical american citizen local medium outlet local political party amplification network graph graph identify community detection algorithm show three clear community russian troll retweet network node size proportional pagerank score node showing importance account network mueller indictment mueller indictment graph show tweet account named mueller indictment hashtags used see small overlap hashtags used two account conclusion matter connection simple graph algorithm pagerank take word explore tweet graph database russian troll dataset available via sandbox click get started explore russian troll tweet,secret russian operative used twitter social medium platform attempt influence recent u presidential election cycle fake news question people asking importantly government social medium vendor detect sort behavior future unforeseen consequence backstory russian troll network first background u presidential election twitter used propagate fake news presumably influence presidential election house intelligence committee released list false twitter account believed operated known russian troll factory internet research agency twitter immediately suspended account removing information tweet public view even though account tweet removed twittercom twitter api journalist nbc news able assemble subset tweet using able analyze data help make sense russian account nbc news recently open sourced data hope others could learn dataset inspire caching tweet contribute combined database two day later mueller indictment named internet research agency several twitter account hashtags used nbc news data specifically news article explain happened important question happen order prevent future abuse interference work interference worked several stage development twitter account used common hashtags posting reply tweet popular account gain visibility follower chart show vast majority tweet retweets roughly original content tweet break analysis peraccount level see many account retweeting others amplifying message posting much account classified roughly three category typical american citizen screenshot profile image user leroylovesusa one account twitter identified operated internet research agency russia many account intended appear normal everyday american like one account often tried associate realworld event mueller indictment revealed many operative traveled u possible actually participated event image leroylovesusa taking credit posting controversial banner bridge washington dc local medium outlet another type russian troll account presented local news outlet onlinecleveland another iracontrolled account appears local news outlet cleveland account often posted exaggerated report violence example account category include kansasdailynews worldnewspoli local political party third type russian troll account appeared affiliated local political party account tengop intended appear account connected tennessee republican party account specifically named mueller indictment amplification network analyzing data able determine original tweet written russian troll network written small number user tengop mentioned majority overall tweet retweets many russian troll account solely retweeting account attempt amplify message apply graph analysis retweet network see graph partition three distinct cluster community run pagerank centrality algorithm identify influential account within cluster community detection algorithm show three clear community russian troll retweet network node size proportional pagerank score node showing importance account network look hashtags russian troll using see red group tweeting mainly rightwing politics voterfraud trumptrain yellow group left leaning necessarily positively obamaswishlist rejecteddebatetopics purple group covered topic black life matter community blacklivesmatter racism blm three cluster tended small number original content generator bulk community amplifying message example one account thefoundingson sent original tweet averaging tweet per day hand account like ameliebaldwin authored original tweet sent mueller indictment mueller indictment specifically name two twitter account tengop marchfortrump nbc news dataset captured thousand tweet two user graph show tweet account named mueller indictment hashtags used see small overlap hashtags used two account conclusion social medium platform government monitor prevent future abuse first matter connection today hyperconnected world difficult identify relationship dataset using technology purposebuilt storing connected data even difficult looking connection first place second storing looking connection within datasets essential detect understand pattern behavior reflected connection case simple graph algorithm pagerank able illustrate russian troll account behaved like singleminded bee focused job like normal human using connectionsfirst approach analyzing sort datasets government social medium platform proactively detect deter sort meddling behavior chance derail democracy poison civil conversation take word explore tweet graph database russian troll dataset available via sandbox click get started explore russian troll tweet
284,Lobsters,visualization,Data Visualization,The Building Blocks of Interpretability,https://distill.pub/2018/building-blocks,building block interpretability,feature visualization making sense hidden layer network see concept assembled spatial attribution saliency map channel attribution making thing humanscale nip disentangling workshop space interpretability interface trustworthy interface article appendix twitter thread conclusion future work,growing success neural network corresponding need able explain decision including building confidence behave realworld detecting model bias scientific curiosity order need construct deep abstraction reify instantiate rich interface exception existing work interpretability fails concert machine learning community primarily focused developing powerful method feature visualization attribution dimensionality reduction reasoning neural network however technique studied isolated thread research corresponding work reifying neglected hand humancomputer interaction community begun explore rich user interface neural network yet engaged deeply abstraction extent abstraction used fairly standard way result left impoverished interface eg saliency map correlating abstract neuron leave lot value table worse many interpretability technique fully actualized abstraction pressure make generalizable composable article treat existing interpretability method fundamental composable building block rich user interface find disparate technique come together unified grammar fulfilling complementary role resulting interface moreover grammar allows u systematically explore space interpretability interface enabling u evaluate whether meet particular goal present interface show network detects explain develops understanding keeping amount information humanscale example see network looking labrador retriever detects floppy ear influence classification interface speculative one might wonder reliable rather address point piecemeal dedicate section end article article use googlenet image classification model demonstrate interface idea neuron seem unusually semantically meaningfulwe actively investigating hope uncover principle designing interpretable model meantime demonstrate technique googlenet provide code try model although made specific choice task network basic abstraction pattern combining present applied neural network domain making sense hidden layer much recent work interpretability concerned neural network input output layer arguably focus due clear meaning layer computer vision input layer represents value red green blue color channel every pixel input image output layer consists class label associated probability however power neural network lie hidden layer every layer network discovers new representation input computer vision use neural network run feature detector every position image think layer learned representation threedimensional cube cell cube activation amount neuron fire x yaxes correspond position image zaxis channel detector run cube activation neural network computer vision develops hidden layer different slice cube allow u target activation individual neuron spatial position channel make semantic dictionary pair every neuron activation visualization neuron sort magnitude activation marriage activation feature visualization change relationship underlying mathematical object activation map iconic representation instead abstract index many appearing similar salient human idea floppy ear dog snout fur use optimizationbased feature visualization avoid spurious correlation one could use method semantic dictionary powerful move away meaningless index express neural network learned abstraction canonical example image classification neural network learns set visual abstraction thus image natural symbol represent working audio natural symbol would likely audio clip important neuron appear correspond human idea tempting reduce word however lossy operation even familiar abstraction network may learned deeper nuance instance googlenet multiple floppy ear detector appear detect slightly different level droopiness length surrounding context ear also may exist abstraction visually familiar yet lack good natural language description example take particular column shimmering light sun hit rippling water moreover network may learn new abstraction appear alien u natural language would fail u entirely general canonical example natural way represent foreign abstraction neural network learn native human language bringing meaning hidden layer semantic dictionary set stage existing interpretability technique composable building block shall see like underlying vector apply dimensionality reduction case semantic dictionary allow u push technique example besides oneway attribution currently perform input output layer semantic dictionary allow u attribute toandfrom specific hidden layer principle work could done without semantic dictionary would unclear result meant introduce semantic dictionary term neuron used basis activation explore later network see applying technique activation vector allows u see network detects position also network understands input image whole working across layer eg observe network understanding evolves detecting edge earlier layer sophisticated shape object part latter visualization however omit crucial piece information magnitude activation scaling area cell magnitude activation vector indicate strongly network detected feature position concept assembled feature visualization help u answer network detects answer network assembles individual piece arrive later decision decision made attribution set technique answer question explaining relationship neuron wide variety approach attribution far seem clear right answer fact reason think present answer quite right think lot important research done attribution method purpose article exact approach taken attribution matter use fairly simple method linearly approximating relationshipwe attribution linear approximation interface estimate effect neuron output activation time rate increasing activation increase output talk linear combination activation attribution thought linear combination attribution unit equivalently dot product activation combination gradient spatial attribution additional trick googlenet strided max pooling introduces lot noise checkerboard pattern gradient avoid interface demonstration dominated noise relaxation gradient max pooling distributing gradient input proportional activation instead winner take b cancel checkerboard patternsthe notebook attached diagram provide reference implementation could easily substitute essentially technique future improvement attribution course correspondingly improve interface built top spatial attribution saliency map common interface attribution called saliency map simple heatmap highlight pixel input image caused output classification see two weakness current approach first clear individual pixel primary unit attribution meaning pixel extremely entangled pixel robust simple visual transforms eg brightness contrast etc farremoved highlevel concept like output class second traditional saliency map limited type interface display attribution single class time allow probe individual point deeply explicitly deal hidden layer difficult fully explore design space instead treat attribution another user interface building block apply hidden layer neural network change question pose rather asking whether color particular pixel important labrador retriever classification instead ask whether highlevel idea detected position floppy ear important approach similar class activation mapping cam method interpret result back onto input image miss opportunity communicate term rich behavior network hidden layer interface affords u flexible relationship attribution start perform attribution spatial position hidden layer shown output class order visualize thousanddimensional vector use dimensionality reduction produce multidirectional saliency map overlaying saliency map magnitudesized activation grid provides information scent attribution space activation grid allow u anchor attribution visual vocabulary semantic dictionary first established hover update legend depict attribution output class ie class spatial position contribute perhaps interestingly interface allows u interactively perform attribution hidden layer hover additional saliency map mask hidden layer sense shining light black box type layertolayer attribution prime example carefully considering interface design drive generalization existing abstraction interpretability diagram begun think attribution term higherlevel concept however particular position many concept detected together interface make difﬁcult split apart continuing focus spatial position concept remain entangled channel attribution saliency map implicitly slice cube activation applying attribution spatial position hidden layer aggregate channel result tell specific detector position contributed final output classification alternate way slice cube channel instead spatial location allows u perform channel attribution much detector contribute final output approach similar contemporaneous work kim et al attribution learned combination channel diagram analogous previous one saw conduct layertolayer attribution time channel rather spatial position use icon semantic dictionary represent channel contribute final output classification hovering individual channel display heatmap activation overlaid input image legend also update show attribution output class ie top class channel support clicking channel allows u drill layertolayer attribution identifying channel lower layer contributed well channel higher layer supported diagram focus layertolayer attribution still valuable focus single hidden layer example teaser figure allows u evaluate hypothesis one class succeeded attribution spatial location channel reveal powerful thing model especially combine together unfortunately family approach burdened two significant problem one hand easy end overwhelming amount information would take hour human auditing understand longtail channel slightly impact output hand aggregation explored extremely lossy miss important part story could avoid lossy aggregation working individual neuron aggregating explodes first problem combinatorially making thing humanscale previous section considered three way slicing cube activation spatial activation channel individual neuron major downside one us spatial activation channel miss important part story example interesting floppy ear detector helped u classify image labrador retriever much interesting combined location fired one try drill level neuron tell whole story ten thousand neuron simply much information even hundred channel split individual neuron overwhelming show user want make useful interface neural network enough make thing meaningful need make human scale rather overwhelming dump information key finding meaningful way breaking activation good reason believe decomposition exist often many channel spatial position work together highly correlated way useful think one unit channel position little activity ignored highlevel overview seems like ought able find better decomposition right tool entire field research called matrix factorization study optimal strategy breaking matrix flattening cube matrix spatial location channel apply technique get meaningful group neuron group align naturally cube grouping previously looked instead combination spatial location channel moreover group constructed explain behavior network particular image would effective reuse grouping another image image requires calculating unique set group addition naturally slicing hidden layer cube activation neuron spatial location channel also consider arbitrary grouping location channel group come factorization atom interface user work unfortunately grouping inherently tradeoff reducing thing human scale aggregation lossy preserving information matrix factorization let u pick grouping optimized giving u better tradeoff natural grouping saw earlier goal user interface influence optimize matrix factorization prioritize example want prioritize network detected would want factorization fully describe activation instead wanted prioritize would change network behavior would want factorization fully describe gradient finally want prioritize caused present behavior would want factorization fully describe attribution course strike balance three objective rather optimizing one exclusion others following diagram constructed group prioritize activation factorizing activation matrix factorization algorithm library set minimize mean squared error reconstruction matrix give way hack library achieve general objective clever manipulation provided matrix see broadly matrix factorization optimization problem custom tool achieve sort custom factorization nonnegative matrix factorization name suggests nonnegative matrix factorization nmf constrains factor positive fine activation relu network must positive well experience group get nmf seem independent semantically meaningful without constraint constraint group nmf le efficient representing activation would without experience seem independent semantically meaningful notice overwhelmingly large number neuron reduced small set group concisely summarizing story neural network figure focus single layer saw earlier useful look across multiple layer understand neural network assembles together lowerlevel detector higherlevel concept group constructed optimized understand single layer independent others understand multiple layer together would like layer factorization compatible group earlier layer naturally compose group later layer also something optimize factorization formalize compatibility manner described although confident best formalization surprised superseded future work consider attribution every neuron layer set n group want compatible basic idea split entry activation matrix n entry channel dimension spreading value proportional absolute value attribution corresponding group factorization matrix induces factorization original matrix collapsing duplicated entry column factor however resulting factorization try create separate factor activation channel different attribution different place section recognize way break apart cube activation important interface decision rather resigning natural slice cube activation construct optimal grouping neuron improved grouping meaningful humanscale making le tedious user understand behavior network visualization begun explore potential alternate base providing better atom understanding neural network example focus creating smaller number direction explain individual example recently exciting work finding globally meaningful direction base could especially helpful trying understand multiple example time comparing model recent nip disentangling workshop provides promising direction excited see venue developing area research space interpretability interface interface idea presented article combine building block feature visualization attribution composing piece arbitrary process rather follows structure based goal interface example interface emphasize network recognizes prioritize understanding develops focus making thing humanscale evaluate goal understand tradeoff need able systematically consider possible alternative think interface union individual element element display specific type content eg activation attribution using particular style presentation eg feature visualization traditional information visualization content life substrate defined given layer network broken apart atom may transformed series operation eg filter project onto another substrate example semantic dictionary use feature visualization display activation hidden layer neuron one way represent way thinking formal grammar find helpful think space visually represent network substrate layer display break apart grid content style presentation plotted grid point connection setup give u framework begin exploring space interpretability interface step step instance let u consider teaser figure goal help u compare two potential classification input image feature visualization understand classification focus channel layer feature visualization make channel meaningful filter output attribution next filter specific class calculating output attribution drill hover hovering channel get heatmap spatial activation article scratched surface possibility lot combination building block left explore design space give u way systematically moreover building block represents broad class technique interface take one approach saw section number alternative feature visualization attribution matrix factorization immediate next step would try using alternate technique research way improve finally complete set building block new one discovered expand space example koh liang suggest way understanding influence dataset example model behavior think dataset example another substrate design space thus becoming another building block fully composes others imagine interface allow u inspect influence dataset example final output classification koh liang proposed also example influence feature hidden layer influence relationship feature output example consider labrador retriever image see dataset example influenced model arrive classification also dataset example caused floppy ear detector fire dataset example caused detector increase labrador retriever classification new substrate interface understand dataset example influence output classification presented koh liang interface showing example influence channel hidden layer interface identifying dataset example caused particular detector increase output classification beyond interface analyzing model behavior add model parameter substrate design space allows u consider interface taking action neural networksnote essentially interpretability technique differentiable backprop model today trained optimize simple objective function one easily describe many thing like model real world subtle nuanced hard describe mathematically extreme example subtle objective problem something like creating interesting art much mundane example arise le whenever human involved one promising approach training model subtle objective learning human feedback however even human feedback may still hard train model behave way want problematic aspect model surface strongly training regime human giving feedback lot reason problematic behavior may surface may hard evaluator give feedback example discrimination bias may subtly present throughout model behavior hard human evaluator critique model may making decision way problematic consequence consequence never play problem training human feedback model decision making process facilitated interpretability interface could powerful solution problem might allow u train model make right decision make right reason however danger optimizing model look way want interface careful may lead model fooling u related idea occasionally discussed term cognitive steganography another exciting possibility interface comparing multiple model instance might want see model evolves training change transfer new task might want understand whole family model compare existing work primarily focused comparing output behavior model recent work starting explore comparing internal representation well one unique challenge work may want align atom model completely different model find analogous neuron zooming develop interface allow u evaluate large space model trustworthy interface order interpretability interface effective must trust story telling u perceive two concern set building block currently use first neuron relatively consistent meaning across different input image meaning accurately reified feature visualization semantic dictionary interface build top premised question true second attribution make sense trust attribution method presently much prior research found direction neural network semantically meaningful one particularly striking example semantic arithmetic eg king man woman queen explored question depth googlenet previous article found many neuron seem correspond meaningful ideaswe validated number way visualized without generative model prior content visualization causally linked neuron firing inspected spectrum example cause neuron fire used diversity visualization try create different input cause neuron firefor detail see article appendix guided tour twitter thread actively investigating googlenet neuron seem meaningful besides neuron however also found many neuron clean meaning including polysemantic neuron respond mixture salient idea eg cat car natural way interface could respond could use diversity visualization reveal variety meaning neuron take rotate semantic dictionary component disentangled course like model fooled feature make including adversarial example view feature need flawless detector useful u think fact interesting identify detector misfire regard attribution recent work suggests many current technique unreliable one might even wonder idea fundamentally flawed since function output could result nonlinear interaction input one way interaction pan attribution pathdependent natural response would interface explicitly surface information pathdependent attribution deeper concern however would whether pathdependency dominates attribution clearly concern attribution adjacent layer simple essentially linear mapping may technicality correlated input believe attribution firm grounding even layer apart experience attribution highlevel feature output much consistent attribution input believe pathdependence dominating concern model behavior extremely complex current building block force u show speciﬁc aspect important direction future interpretability research developing technique achieve broader coverage model behavior even improvement anticipate key marker trustworthiness interface mislead interacting explicit information displayed cause user implicitly draw incorrect assessment model see similar principle articulated mackinlay data visualization undoubtedly interface present article room improve regard fundamental research intersection machine learning humancomputer interaction necessary resolve issue trusting interface essential many way want use interpretability stake high safety fairness also idea like training model interpretability feedback put interpretability technique middle adversarial setting conclusion future work rich design space interacting enumerative algorithm believe equally rich space exists interacting neural network lot work left ahead u build powerful trustworthy interface interpretability succeed interpretability promise powerful tool enabling meaningful human oversight building fair safe aligned ai system
285,Lobsters,visualization,Data Visualization,What does VR reveal about the 4th dimension?,http://www.albert-hwang.com/blog/2016/6/what-does-vr-reveal-about-the-4th-dimension,vr reveal dimension,download hypercube demo wenbo lan ken perlin source code instruction reddit post,download hypercube demo htc vive required run created wenbo lan ken perlin source codeinstructions one one two controller work need get controller register figure one ispressing touchpad change different objectsgrip drag translates objecttrigger drag outside sphere rotates drag inside sphere rotates lastly reddit post additional discussion
286,Lobsters,visualization,Data Visualization,Six Degrees of Wikipedia,https://www.sixdegreesofwikipedia.com/,six degree wikipedia,six degree wikipedia,six degree wikipediasorry internet hipster little side project requires javascript
287,Lobsters,visualization,Data Visualization,Using Quality Views to Communicate Software Quality and Evolution,http://blog.colinbreck.com/using-quality-views-to-communicate-software-quality-and-evolution/,using quality view communicate software quality evolution,article basis talk qcon london also wrote followup article reflection using quality view streamingdata system team lead mistakenly assume edward tufte michael feather conway law organize organization optimal development inspired idea system evaluation criterion code test deployment monitoring alerting security high availability scalability risk quality view endtoend system test practical consideration excellent website summary,article basis talk qcon london also wrote followup article reflection using quality view worked infrastructural software entire streamingdata system industrial application infrastructural software often foundational supporting service application rather product make difficult communicate current state software well evolution people intimately familiar generally new feature added customerfacing application easy colleague customer appreciate change application well quality implementation infrastructural software hand could undergo significant transformation appreciable change customerfacing behaviour example team might make major investment improve scalability service support anticipated without changing immediate experience individual customer might investment improve security testing highavailability monitoring deployment also fall category since becoming team lead looking way communicate two thing regarding software team responsible first current state software want communicate quality system term business reliability scalability security system well receptive software change order meet future business need legacy component lack test converge developer expertise could extremely difficult risky costly change whereas welldesigned wellfactored application good test coverage developer familiar code might evolved reliably efficiently addition legacy component effective serving current function people often mistakenly assume extended support additional functionality may case second thing would like communicate evolution product road making investment system changing time want communicate two aspect effectively within team equally importantly externally business stakeholder product manager colleague develop application top system inspired edward tufte approach rich visual presentation data former team lead mine used stacked bargraph communicate investment made investment currently made investment made near future well close project overall completion really effective technique communicating stakeholder project well u team much subsequent team lead adopted approach considered using use approach fails address investment made highlight overall quality software system notable business risk month ago watched michael feather excellent presentation entitled conway law organize organization optimal development cover many interesting topic related communication within organization including idea using quality view communicate software quality particularly nontechnical people give example classcoupling diagram contrasting large coupled module module small lack coupling describes even someone programmer understand making change highlycoupled system difficult take longer present risk modifying lesscoupled system inspired idea wanted experiment extending combine architecture diagram tufte dense visual presentation information colleague stacked bargraph approach show quality component evolution system rest article chronicle approach experience system consider following fictitious iot system foundation developing quality view system comprised two loadbalanced endpoint data ingestion one supporting majority client supporting small number legacy client number stateless web server durable messagebus application par incoming message store sensor data database set loadbalanced server serving http api data system also includes two legacy application one performing data mapping another storing subset production data external business system load balancer durable messagebus database either opensource technology service offered cloudcomputing platform rest component developed maintained software development team size element represent relative size server term memory core io capacity example server used load balancer legacy client smaller server used load balancer regular client directed linesegments represent direction data flow well volume number message per thickness line dashed line represent security trustboundaries external system diagram rich vehicle communication describes component comprise system detailing inside domain outside domain interface many server server redundant one magnitude data flow visual representation become even richer however addition information related software quality system evolving evaluation criterion evaluate quality software infrastructure chose evaluate component based following criterion different system might choose different set criterion considering criterion provides broad perspective quality system example development team might think code really great shape application ca nt reliably deployed production alert generated application failing support business function overall quality poor code code good shape well factored maintainable reasonably easy extend application add new functionality component development team maintain directly like opensource database criterion used judge well component supporting need product term functionality reliability test component test support making change without introducing regression undue risk test repeatable reliable executed reasonable timeframe test include performance scalability reliability security requirement component deployment component deployed efficient reliable repeatable manner support development testing production environment monitoring monitoring available someone developing troubleshooting operating system insight behaviour include expected behaviour unexpected behavior monitoring might include among thing logging realtime metric collection eg connection count query latency dashboard notification support ad hoc data exploration alerting component serving business function alert generated someone take action timely manner rectify situation security component security consideration consistent business requirement threat model developed component test independent verification critical security requirement high availability component designed highavailability redundant replicated load balanced appropriate backup procedure restore backup tested scalability component scaledup meet dynamic load growing demand adding compute resource instance risk component carry significant business risk might include code developed individual departed company one else familiar code one primary programming language used development team component lack security measure component lack redundancy highavailability scaleout strategy meet growing demand component performance scalability limitation untested therefore unknown quality view using nine criterion developed quality view system scoring component one point category satisfies mapping score colour gradient component satisfies none criterion score represented dark red component satisfies criterion score represented white purpose demonstration imagine system evolved proofofconcept supporting speculative business venture venture look promising want formalize system something reliable sustainable initial quality view follows component lack monitoring alerting component endtoend system test making difficult evolve component reliably independently component deployed automated fashion making deployment burdensome slow brittle major concern around scalability dataprocessing pipeline database without able monitor component difficult even construct performance scalability test focusing automating deployment adding facility monitoring alerting improving automated test coverage overall quality system improved significantly component evolve however notably data mapping service legacy data logger component developed programming language platform business longer want use prototype application developed monitoring testing mind decision made retrofit two application monitoring alerting accept risk quality view clearly highlight decision characterization test developed data mapping service since eventually replaced new service perform similar function legacy data logger eventually eliminated investment made regard testing component quality view invite holistic view system presented similar scenario quarterlyplanning meeting director product development remarked come two component still red constructive discussion followed came agreement investing component would cost effective comfortable accepting shortterm risk discussion would nt taken place presented thing working highlighting working key discussion instead risk ignored understood team considered explicitly everyone helped align everyone understanding system significant risk system remained dataprocessing pipeline data logger redundant scalability uncertain database meeting business requirement term reliability query performance iteration investing improvement two component system evolved following data logger significantly refactored improved redundant support highavailability legacy data logger entirely eliminated functionality subsumed data logger two server added database cluster increasing number server three five addition server computing resource term memory cpu disk remains uncertainty business risk regard scalability database longterm additional investment need made address quality system much improved original quality view clear future investment made understanding overall scalability dataprocessing pipeline developing strategy scaling business need grow legacy data mapping application also need reimplemented suitable framework characterization test developed earlier support work might also investigate possibility eliminating endpoint legacy client reduce development operational cost provide better customer experience observing improvement quality satisfying fuel prideofworkmanship within team teammate remark really interested see quality view improved recent change rather knowing done good job made significant improvement nice able reflect milestone highlight others practical consideration initial approach using colour represent quality use different shade red green represent poor quality good quality respectively highlycontrasted approach however challenging digest visually addition difficult someone redgreen colourblind interpret switched using sequential shade finding excellent website designing colour scheme based nature underlying data sequential shade approach also advantage working grayscale one use colour component logo like opensource database use logo rather text label component make visualization even rich also easier interpret since digested symbolically use approach however wanted presentation technology agnostic one might also consider using colour directed linesegments communicate quality protocol interface apis used service yet experimented approach risk category useful considering highlighting business risk given one nine criterion however misrepresent component pose significant business risk example component lack security consideration otherwise good shape term code testing deployment etc could seriously misrepresented case useful express risk criterion well produce realistic representation overall quality component lack security consideration would represent code testing deployment monitoring alerting poor quality since none element include security consideration require investment would represent overall quality rather presenting quality view discussion useful supplemental table listing component evaluation criterion detailed note people refer understand categorization component summary presented approach developing quality view animating typical architecture diagram graduated colour scheme represent software quality show change system time approach offer dense visual presentation data quality view somewhat subjective found effective representing system holistically describing making investment highlighting risk demonstrating system evolving useful communicating within team well externally technical nontechnical stakeholder invaluable aligning mental model system
288,Lobsters,visualization,Data Visualization,ColorBrewer: Color Advice for Maps,http://colorbrewer2.org,colorbrewer color advice map,export selected color scheme,number data class export selected color scheme
290,Lobsters,visualization,Data Visualization,sinc lowpass in time domain,http://guu.fi/g/sinc-lowpass.html,sinc lowpass time domain,sinc lowpass filter discrete convolution kaiser window,interactive demonstration sinc lowpass filter time domain input signal sine wave adjustable frequency phase filter sinc function sinc sin pi pi equal zero control cutoff frequency multiplied adjustable parameter greater multiplier result shorter period narrower peak vice versa changing multiplier also change filter amplitude gain proportional area curve taken account scaling final output filtering performed using discrete convolution input signal first multiplied sinc filter every point along horizontal axis giving u green curve point curve added together sum scaled undo effect filter amplitude gain clarity magnitude single sample centered sinc filter peak computed represented orange line modulating input phase observe orange line trace sine wave like input possibly different amplitude reset value carefully drag sinc cutoff observe final amplitude reaching zero setup input cutoff frequency slightly phase peak input wave coincides peak sinc filter however sinc peak clearly wider negative value input wave multiplied positive number yielding mostly negative value green curve effect continues onwards side input sine flip sign sinc filter opposite sign green curve pushed underneath horizontal axis negative part green curve add cancel big positive peak center follow curve far enough left right eventually filter input would phase yielding positive sample point amplitude sinc wave small sample would close zero multiplication contribution would quite insignificant increase input frequency way observe input wave rapidly flipping sign right main peak sinc filter signal cancel right extended side sinc input curve quite evenly distributed around center line illustrate real filter finite length brickwall frequency response input cutoff frequency get closer side filter become increasingly important needed cancel main peak longer longer filter needed tighter cutoff hand even short filter much beyond main peak effective culling high frequency example implicitly us rectangular window considering sample make curve screen real world use filter performance improved multiplying sinc another function kaiser window
291,Lobsters,visualization,Data Visualization,Caviar’s Word2Vec Tagging For Menu Item Recommendations,https://medium.com/square-corner-blog/caviars-word2vec-tagging-for-menu-item-recommendations-13f63d7f09d8,caviar tagging menu item recommendation,walkthrough approach step model vector averaging gensim wikipedia google news step candidate tag selection looking ahead step validation via cluster visualization tensorflow embedding projector step cuisine type visualization step automated recommendation collection,walkthroughapproachas mentioned approach recast would typically classification problem similarity search problem basic step followed train model using caviar restaurant menu corpusconvert menu item vector using modelcurate set candidate tag perform remaining step distinct setconvert candidate tag vector using modelfor menu item vector compare candidate tag vector classify menu item candidate tag similaroptionally filter menu item whose similar candidate tag minimum thresholdvalidate classification result via cluster visualizationselect menu item given tag display recommendation collection caviar appsteps model vector neural network word embedding technique learns vector space model corpus text related word closer space nonrelated word allows interesting operation like similarity comparison vector algebra concept purpose like see vector space model similar following example vector space trained menu data similar food closer otherwe used gensim package train model corpus caviar restaurant menu number good pretrained model based large corpus wikipedia google news tried first found perform well custom model trained caviar restaurant menu alone appears food language menu qualitatively different food language general source like encyclopedia news something plan explore futureone limitation purpose deal individual word formulation work need able create fixedlength vector many multiword tag menu item eg tag indian curry menu item big bob chili sombrero burger advanced technique found simply averaging vector word phrase worked well practiceexample vector averaging indian curry step candidate tag selectiona key step approach selecting candidate tag primary method compile set related tag cuisine type eg pizza burger thai curry dietary restriction eg vegetarian vegan gluten free expect menu item best classified one tag set used cluster visualization demonstrate approach cuisine type additional promising method crafting individual multiword tag capture broader concept eg cake cooky pie match menu item beyond listed tag eg match cupcake donut item cake cooky pie crafting type tag iterative process akin coming good search engine query explored approach couple inapp collection shown later sectionlooking ahead step validation via cluster visualizationas mentioned introduction wanted avoid cost supervised method specifically creation ground truth set training validation however still needed way validate tag compromise leveraged interactive cluster visualization ad hoc manual validation instead adapted tensorflow embedding projector purpose caviar menu item classification projectorcaviar menu item classification projector menu item selectedsteps cuisine type visualizationby following outlined step every menu item cuisine type candidate tag set obtained cosine similarity score tag classified menu item cuisine type highest similarity score following sequence figure highlight exploration validation performed resulting datain following figure cluster colored similar tag minimum similarity threshold set high recall scenario quite noisy see number misclassified menu item case menu item hard classify many case though menu item true cuisine type present cuisine type candidate tag set eg include tag kombucha cheesecake coconut water minimum similarity threshold set incorrect naive classification madecolored similar tag minimum similarity threshold set high recall scenariothe following figure demonstrates one many correct classification panang curry correctly classified thai curry following figure demonstrates one misclassification scenario case tom yum noodle soup incorrectly classified thai curry harder classify correctly due tom yum closely related thai cuisine typical soup like chicken noodle minestrone tom yum noodle soup incorrectly classified thai curry closer association thai cuisine soupthe following figure demonstrates primary misclassification scenario case gyro plate incorrectly classified fry due menu item cuisine type eg mediterranean gyro present cuisine type candidate tag set gyro plate incorrectly classified fry due missing tagin following figure cluster colored similar tag minimum similarity threshold set ie classification cosine similarity greater kept high precision scenario much better see good visual separation via inspection find almost misclassified menu item beyond ambiguous case discus next colored similar tag minimum similarity threshold set high precision scenarioin next figure wonder pizza fry answer pizza fry menu item high score pizza fry tag pizza edging fry menu item located equidistantly two distinct cluster demonstrates one intuitive strength method reason classify item like multiple best tag pizza fry answer pizza fry menu item high score pizza fry tag pizza edging fry next two figure cluster labeled classified tag rather menu item name first figure colored classified tag second figure colored similarity pizza tag first figure see pasta pie item closer pizza le similar item like sushi dumpling second figure thanks similarity gradient easily see range pizza pizza another demonstration intuitive mapping spatial arrangement similarity allowed u perform ad hoc validation result colored labeled best tag view demonstrates intuitive spatial arrangement get similarity pizza item near pasta itemscolored similarity pizza tag see similarity range pizza pizza demonstrating intuitive spatial arrangement get similaritiesstep automated recommendation collectionsour ultimate goal work automate menu item recommendation collection taggings already implemented example following figure demonstrate collection simpler cuisine type tag advanced multiword concept tagsin following figure show recommendation collection pizza thai curry tag promising showing range item standard eg cheese pizza panang curry exciting eg calabria pizza chicken pumpkin curry cuisine type menu item recommendation collection pizza thai curry tagsin following figure show recommendation collection based interesting approach crafting multiword concept tag used cake cooky pie tag sweet tooth concept collection tikka tandoori biryani tag north indian fare concept collection promising sweet tooth collection see item beyond cake cooky pie tag cupcake donut ice cream even ice cream scoop north indian fare concept collection see item beyond tikka tandoori biryani tag saag paneer itsy bitsy naan bite recommendation collection concept sweet tooth north indian fare
292,Lobsters,visualization,Data Visualization,Monitor OpenSMTPD using Logstash and Grafana,https://www.tumfatig.net/20180129/monitor-opensmtpd-using-logstash-grafana/,monitor opensmtpd using logstash grafana,need configuration snippet beauty graph like joel carnat view post joel carnat,log usefull graph sexy way get view happens opensmtpd traffic using web tool namely logstash grafana would aware tool logstash kind logparser eat syslog formatted log write elasticsearch document format grafana web frontend dig various database render graphic request go whole install process installation quite straight forward online documentation quite clear need opensmtpd deal email log activity via syslog syslog configured send log logstash logstash set rule configured transform textoriented information searchable documentoriented data transformed data stored elasticsearch elasticsearch provides web api search find stuff grafana connects el get data draw graph configuration snippet nothing special opensmtpd tell syslog forward log logstash instance case openbsd log sent logstash host port cat etcsyslogconf course configure tl logstash side used nginx streamproxy logstash may able expose tl port log parsed logstash using grok expression mine look like cat confdcarnatnetconf opensmtpd log program smtpd grok match message subsystem mda word envelopeid word subsystem event data event evpid data evpid data data user username user method data method delay data delay result word result stat word stat subsystem smtp word envelopeid word subsystem event username event address ip address host iporhost host command data command reason word reason result data result subsystem mta word envelopeid word subsystem event username event evpid word evpid address ip address addresssmtptls ip address posint host iporhost host cipher data cipher reason word reason msgid word msgid notspace notspace rcpt notspace rcpt source ip source size int size ndest int ndest proto word proto relay data relay delay word delay result word result stat data stat message int message unmatched message greedydata opensmtpdunmatched removefield message may missing thing found opensmtpd logformat documentation simple configuration complex configuration may required modify rule log stored el queried rendered grafana beauty graph record got minute using collectd facette design slick distraction requires bit training browse history worked get grafana simple smtp fact taste colour may choose grafana really easy use although requires bit training able query various database displaying single dashboard case speak elasticsearch hood detail turn let u know achieved like like loading related author joel carnat work technical architect sysadmin home openbsd fo karate kobudō jōdō bodyweight workout photography music view post joel carnat
293,Lobsters,visualization,Data Visualization,Random Noise and Procedural Generation,https://unwttng.com/how-does-procedural-generation-work-random-noise,random noise procedural generation,unwttngcom procedural generation work universe single seed procedural flatland making wave sine randomness unpredictability ken perlin perlin noise share visualisation personal twittersphere simplex noise extra credit support true randomness great show cooool little app support home blog follow jack unwttng,unwttngcomprocedural generation work universe single seedprocedural procedural generation set technique used heavily video game development computer graphic provides method generating large amount content algorithmically rather manually software generate game map weather even music rather handcrafted artist designer thanks game size disk much reduced include way content bigger world present highly unpredictable replayable experiencesas tool pro come con whilst procedural generation bring great benefit term memory usage artist time replayability experience danger feeling poorly designed unnatural nt want rpg dungeon riddled tediously empty room overpowered monster tuning generated content intended gameplay much part game developer craft creating first placein article go basic concept powering procgen game interactive example code snippet javascript mean essential understand order follow alongflatlandlet work little project going make game right browser well game world least running jumping animation wait another daywe call flatland flatland place solid ground clear sky scroll left right really drink vistasi think exciting made would probably think little boring however flatland represents pretty much prototypical trivial example procedural generation generated pretty uninspired proceduresthe game running drawing terrain following simple process x value horizontal coordinate call function called getgroundheight value x function return number representing high low ground x valuefunction getgroundheight x return getgroundheight powering flatland value x imaginable say ground height hence flatness drawn result call getgroundheight black dot show landbut nt scoff yet infinite world could say hey getgroundheight height ground x value like still would nt take time would nt need go load map file disc internet able tell memaking wavesobviously steam review nt going lighting flatland need land little bit le flat need new implementation getgroundheight guess new name introducing waveland function getgroundheight x return mathsin x cooking math using slightly interesting repeating function like sine mathsin javascript got satisfying hillsjust like flatland function provides u infinite amount ground game mathsin nice bounded somewhere much mathsin guaranteed never get crazy high hill deep valley player ca nt traverse scroll game left right check nt go looking anything interesting wavy hill though sine repeat repeat infinity directionsrandomness unpredictabilitystill good enough really waveland gently undulating hill might work specific case terrain nt realistic grippingso problem essentially function using thus far predictable without even bothering actually calculate concrete value getgroundheight tell flatland waveland look like step x direction flat wavey respectivelywith mind need introduce randomness equation going throw definition explore coming example random noise functionsa random noise function function n given real value satisfies two condition n x inclusive value x n perceived degree randomnessit hard find precise definition agreed everyone us random noise obviously point quite subjectively phrased form think would happy hope see definition flatland waveland generator noise function since although satisfy point fall short let take crack new ground generator satisfies condition first fullyqualified noise function another function mean another game name say hello noiseland function getgroundheight x return mathrandom ahno wo nt wo nt allwhat happened totally random noise indeed random really little bit random mathematically continuous meaning closetogether x value lead farapart height value set hill could fall impale little aside explain bit code mathrandom give random number multiply subtract getting random number per definition noise thankfully man named ken perlin lot work coming continuous still randomseeming noise function load people probably widelyused noise function modern practice produced function known perlin noise achieved academy award technical achievement usefulness function digital art actually developed disney tron neatperlin noise little bit complex include code snippet like really need know function x like one return value like one particular function give much natural feel take look click regenerate scroll around time get feel kind output get hereshare visualisation personal twittersphereshare twitter bit like hill whole look lot realistic unpredictable guaranteeably continuous far definition concerned great noiseanother noise function named simplex noise widely used aim provide essentially effect perlin noise improvement speed calculated terrain generated using simplex noise give couple refreshes see give pretty similar result aboveextra creditthe basic concept procedurally generated terrain twodimensional world move talking practicality making replayable game random number let look neat technique based around noisesince play arbitrarily amplitude height frequency wide ness wave shape produced noise function play one final trick make hill even lovelier world perlinland generate base ground map perlin noise like point black dot generate another loweramplitude higherfrequency perlin noise pink red dot add noise base noise give cool weatheredlooking landscape bit richnesslayering like valuable technique coercing relatively smooth output noise function various shape texture desired creative effect mentioned introduction tuning shaping procedurally generated content huge part skill creating game use one reason wrong think procedural generation way game designer escape creative artistic work take slightly different form painting texture handcrafting mapswhat weather let add rain guess let add another noisegenerated layer time measure rain intensity drawn layer blue dot along rain threshold rain intensity go level rain line doesntwe keep going theme long like example nt throw temperature function could tell u whether rain actually snow time yellow series threshold temperature level make rain snowget keep using different noise function throughout game add loot determine much foliage appear hillside calculate risk enemy encounter list go onsupport mefind help write like thistrue randomnesslet talk regenerate button example every time click get different set perlin simplex noisepowered hill work noise function rely heavily generating lot random number turn slightly tricky beaststo start truly random number sometimes nt look random stupid true true random number generator exist happily spit sequence pretty much recipe boring hill theoretically sequence le likely produced true random number generator interesting sequencesecondly truly random number random mean entirely unpredictable unpredictability come unreproducibility great game able spit one million different possible world many reason important game developer software developer generally able game thing automatic testing relies heavily quality since hard define produced code nature change every time runsthe player care lot game give player ability share unique id usually referred seed getting guaranteeably always generate exact world community dedicated listing seed generate especially good world possible algorithm rely random number answer nt rely psuedorandom number different kettle fish entirelypseudorandom number generated shock pseudorandom number generator prngs avoiding formal technical definition prngs procedure generating long list randomseeming number avoid two problem truly random number spoken two consecutive number generated prng vanishingly unlikely force prng generate exact sequence number saw pastthis achieved using something called seed sometimes called random seed prngs always created initial input input take many form number integer string whatever important thing prng seeded value sequence pseudorandom number produce point exactly every timefor cool example look man sky hello game procedural poster child man sky map seed distributed player integral entire experience say every copy man sky distributed base seed code mean infinite universe possibility game infinite universe possibility every single player byte need stored server hard disk every bit procedurally generatedthe way every timegreat show moregladly tip huge infinite iceberg let wrap nice example picture procedural generation rich field talked basicsa lot post focussed onedimensional noise function perlin simplex noise fact generate two three general ndimensional version noise imagine onedimensional noise single line graph rise fall like hill simple game twodimensional noise look something like sheet laid hill real worldthe top half image describing bottom half another way visualise twodimensional noise usually called heatmap case low noise value coloured black high white everything various gray set live version twodimensional simplex noise coooolshare twitter load stuff kind noise could use generate height temperature precipitation map terrain map surface two dimension visual effect also become available u continuously generate similar twodimensional slice like showed get something look pleasantly like surface water press play excuse resolution make red serf pretty passable flame technique allow good graphical texture generarated onthefly game rather shipping storage fact ability perlin noise emulate various natural process texture specifically ken perlin academy award fori finish think super interesting topic much covered deliberately light procedural generation application graphic sound since wanted focus example world generation rest assured used much example little app let enter seed generate piece music quick search procedurally generated graphic procedurally generated music throw kind rabbit hole follow anyway tara see next time nt forget follow twitter via r update futuresupport mehelp make like thishomewhat else going blogread archivefollow jack unwttnga god damn thrill ride money back
294,Lobsters,visualization,Data Visualization,Strava heatmap can be used to locate military bases,https://twitter.com/tobiaschneider/status/957317886112124928,strava heatmap used locate military base,,detected javascript disabled browser would like proceed legacy twitter yes
296,Lobsters,visualization,Data Visualization,Ranking Programming Languages by GitHub Users,http://www.benfrederickson.com/ranking-programming-languages-by-github-users/,ranking programming language github user,github archive ghtorrent ghtorrent github detailed note resolving programming language repository written major language using limited subset c allowed write cleaner code language learn code post go google announced first class support kotlin android early language look intriguing though new sampling profiler ruby new autodifferentiation framework language maybe avoid scientific language functional language approach post github get new post email,recently become obsessed sheer amount development activity happening site like github first project working data thought would fun rank programming language counting many people github use language using github archive ghtorrent project data source analysis github archive provides record every public event github since early includes event every time someone pushed new code forked starred repository opened issue github overall github archive billion event million different repository ghtorrent go even hit github api event let resolve language repository cool thing usernames associated event mean count many different people using language every time user interacts repository counting user using language repository aggregating month calculate many monthly active user mau language since data go back year also plot popular programming language time reveals interesting pattern looking trend line figure programming language worth learning programming language probably avoided code post github planning keep ranking date rerunning analysis quarterly also detailed note resolving programming language repository written turned far away difficult part entire project repo overall ranking language also including save click overall ranking pretty interesting worth taking deeper look language performing time major language major programming language relatively stable usage mostly expect javascript python java c c popular year data tracking nt see changing anytime soon javascript continues dominate language used make sense since one language basically programmer need use point python growing time recently overtook java become second popular language github lot python growth seems coming interest machine learning fact overall popularity python might undercounted later c also seems gaining c make sense even project like gcc converted c c order get access feature c since c mostly superset c gcc team found using limited subset c allowed write cleaner code language learn best thing looking programming language trend like identifying upandcoming language quickly growing user base language fastestgrowing user base go typescript kotlin rust based analysis learning go typescript last couple week wrote code post go also working generative art project using typescript language fantastic niche go great writing concurrent serverside program couple week using typescript may never willingly use javascript kotlin seems mostly used android app development almost see slope change graph around google announced first class support kotlin android early language look intriguing though considering using next project jvm need work rust growing slower language many amazing project written last couple week seen new sampling profiler ruby new autodifferentiation framework written rust rust used countless interesting project one interesting thing language common sponsored major company google started go microsoft typescript jetbrains kotlin mozilla rust successfully launching new programming language requires fair bit effort enough develop elegant language also grow community ecosystem behind language thing like ide support library package common task tool documentation matter immensely getting people use language requires significant effort language maybe avoid also interesting looking language declining metric ruby php objectivec coffeescript perl percentage user github decline significantly last year based somewhat hesitant use new project ruby seen steepest decline timeframe going popular language user popular today user shocking decline worth pointing stats given percentage github user base github growing fast total number user github appear public timeline exploded last year user growth increased github last year day seen user committing github month mean even language declining market share still growing user base data language nt normalize number active user looking way ruby number active user using language nt grown nearly fast language causing perform relatively worse analysis also couple factor work first github grown naturally grown mainstream github started prominent member ruby community much code written ruby caused attract large number ruby programmer early day causing ruby overrepresented github grew user base naturally reached programmer language see java user grew github take java nt increase popularity much java programmer started use github second thing note certain newer language seem cannibalizing user share older language instance decline objectivec usage corresponds rise swift also coffeescript seems mostly supplanted typescript objectivec declining seems overall io development relatively stable likewise coffeescript seems paved way typescript got programmer used idea transpiling javascript scientific language one fastgrowing language included result purposefully left juptyer notebook seen significant steady growth last couple year however seems mostly growth python data science jupyter support many language python every case looked jupyter notebook written python mean popularity python potentially undercounted analysis also github assigns language repo looking language byte repo since jupyter notebook include image noncode thing mean frequently largest file byte even necessarily line count lead several python repository incorrectly labeled juptyer notebook future might merge juptyer python together running analysis functional language finally thought would interesting take look functional language github given relatively small number noise ranking also convinced apparent decline thing like clojure haskell anything result github growing mainstream time elixir seems worth keeping eye though narrowly missed top language approach bunch approach tracking programming language popularity time thought link quickly popular one hardly first attempt track programming language usage prefer approach tracking number unique user interacted language tracking raw number time something occurs bias towards thing small number user lot activity instance bot github commit thousand time day skew result look raw activity count easily handled counting user instead event code post github well overall ranking planning keeping data date update quarterly long sufficient interest published january get new post email enter email address get email whenever write new post
298,Lobsters,visualization,Data Visualization,Improving Sapiens' timeline page,https://truffles.me.uk/improving-sapiens-timeline-page,improving sapiens timeline page,writing javascript c compiler realtime easy way eventsource,yuval harari book sapiens includes timeline text take look consider notice data quick glance nothing really jump visually however big message shock earliest ancestor still stunningly young relative earth especially universe life earth far day ancestor emerged last two minute shock concealed due textcentric way number formatted ie using billion rather prose great much easier people play count comma presenting set number numeric representation number superior make huge variance value visually obvious take look communicates variance typographical length decimal number definition visually logarithmic scale eg billion thus character comma million character first longer presented number word encoding nt encode length visually nt engage visual part reader mind help understand data small decision like big impact comprehension presenting data find vital understand story data choosing representation next writing javascript c compiler previous realtime easy way eventsource
299,Lobsters,visualization,Data Visualization,PUBG Match Deaths and Statistics CSV dump (65+M records),https://www.kaggle.com/skihikingkevin/pubg-match-deaths/data,pubg match death statistic csv dump record,,
300,Lobsters,visualization,Data Visualization,"A collection of Soviet control rooms pictures. Power stations, control towers etc.",http://blog.presentandcorrect.com/27986-2,collection soviet control room picture power station control tower etc,,
301,Lobsters,visualization,Data Visualization,DéjàVu: a map of code duplicates on GitHub,https://blog.acolyer.org/2017/11/20/dejavu-a-map-of-code-duplicates-on-github/,déjàvu map code duplicate github,déjàvu map code duplicate github publicly available index code duplication defining duplicate sourcerercc analysis reveals many duplicate actionbarsherlock cordova turn repo software factory npm debacle partly fault nodemodules git search github still show plenty nodemodules commit activity,déjàvu map code duplicate github lope et al oopsla déjàvu drew attention grabbing abstract paper analyzes corpus million nonfork project hosted github representing million file written java c python javascript found corpus mere million unique file mean chance file looking duplicate somewhere else github immediate thought possibly right result seem considerably le dramatic understand dominant cause though motivation study aid selecting random sample code base used basis study common software engineering research analyse project github result show simple random selection likely lead sample including high duplication may bias result research clone map produced author used understand similarity relation sample project curate sample reduce duplicate déjàvu publicly available index code duplication break rest writeup three section first let understand author mean say duplicate look duplication finding finally get question causing much duplication first place defining duplicate outset work planning study different granularity duplication result came staggering rate filelevel duplication drove u select three simple level similarity file hash give measure file copied across project without change token hash capture minor change space comment ordering lastly sourcerercc capture file token similarity give idea many file edited cloning create token hash comment white space terminal removed file token grouped frequency result string void print system token hash tokenized output string addition filelevel duplication author also look project overlap ie project contain number file common statement cloned b x mean x file project also found project b author look project java cc python javascript per table excludes project fork hence expect contain duplication data show long tail small active project great surprise python javascript project especially discounting file downloaded npm checked source code control tend smaller java cc project analysis reveals looking across whole corpus author find following level duplication amount duplication varies language javascript ecosystem contains largest amount duplication file filehash clone java ecosystem contains smallest amount even java file duplicate c python ecosystem copy respectively nearduplicates sourcerercc java contains largest percentage file nearduplicate clone one outlier probably remove straight away empty file size duplicated time another trivial file frequently duplicated file containing empty line author redid analysis time excluding small file le token leaf u following picture looking file level look project level find high level cloning project javascript come top respect amount projectlevel duplication project file duplicated project equally impressive project duplicated remember fork dataset many duplicate number presented previous section portray image github seen however quantitative analysis open question file copied around explains difference language ecosystem javascript ecosystem much chart term duplication answer found project dependency popular framework code generation reason duplication level high javascript turn related npm many project committing library available npm part application code practice single biggest cause large duplication javascript even though project include nodemodules directory ultimately responsible almost entire file ever felt like downloading universe running npm install data prove including nested dependency nesting level deep discovered median number unique included project median maximum worst culprit project generated angular full stack generator yeoman outside npm popular library framework still widely duplicated java common culprit actionbarsherlock cordova cc boost freetype outside npm jquery popular javascript world python seems greater diversity presence external library within project source code show form dependency management occurs across language namely dependency sourcecopied project committed project repository independent installed package manager investigating sourcerercc duplicate reveals another kind cloning clone pair randomly selected analysis categorised intentional copypaste clone ii unintentional accidental clone iii autogenerated clone interesting note clone category ii iii unavoidable created use popular framework majority clone pair fall autogenerated category generated example apache axis android jaxb java universe django python djangoadmin startproject angular express project file javascript lot generation project might want check atomist turn repo software factory source control system upon github built git encourages forking project independent development however lot duplication code happens github go fork mechanism instead go via copy paste file even entire library github full cloned dependency autogenerated code know think pretty fair reflection many modern software development project project starter pretty common nearly always building top huge pile dependency percentage truly unique code write one project probably pretty tiny count may still wondering going javascript project npm duplication prior official advice npm check dependency source code control system see eg npm debacle partly fault short version npm designed used development environment part deployment process advice changed introduction npm shrinkwrap without challenge compromise make dedicated nodemodules repository commit git see example nodemodules git quick search github still show plenty nodemodules commit activity time writing
302,Lobsters,visualization,Data Visualization,mutt cheat sheet,http://sheet.shiar.nl/mutt,mutt cheat sheet,,index home row ctrl delete thread f forget passphrase g j k extract pub key l redraw index home row shift delete pattern f toggle important g fetch pop h screen top j k l reply list enter command pipe shell index home row create alias move delete f forward g reply h toggle header j message k message l limit pattern apply tagged search flag home row ctrl f g j k l search flag home row shift superseded deleted f flagged g encrypted spam attribute j k receivd search flag home row subject date sent range g signed header j k pgp key l mailing list compose home row ctrl disposition toggle f forget passphrase g j k l redraw compose home row shift attach message delete attachment f filter attachment g get attachment h screen top j k l screen bottom enter command pipe attachment compose home row attach file edit subject describe attachment f edit fcc g h display message j entry k entry l print attachment apply tagged message flag w home row ctrl f g j k l message flag w home row shift deleted f g h j k l message flag w home row wd f g h j k l
304,Lobsters,visualization,Data Visualization,A bogus study on code review,http://blog.wesleyac.com/posts/bogus-code-review-data,bogus study code review,article blog post graph taken marketing page contradictory claim made,saw article today code review included couple graph purportedly coming study code review author nt refer graph article instead interleaving unrelated text sort eyecandy graph question found implausible several reason defect per kloc metric go case strike quite implausible code review would find code pr wrong even look defectskloc outlier fact datapoints defectskloc strike surprising look two graph provided clearly different datasets many datapoints exist first graph exist second one line drawn graph seem completely arbitrary used seeing line best fit red line defect density v loc graph clearly showing line best fit sure supposed take away line look blog post graph taken us defect density v loc graph make claim keep review line code however two data point entire graph loc impossible make sort statistically significant claim additionally datapoints defect density zero loc clustered loc range given way defect density used study defect density zero would indicate complete failure reviewer find analysis data say nothing point found claim made graph unbelievable tracked initial decided look thing immediately popped first one graph defect density v loc graph actually completely false reason defect per kloc figure popped suspicious scale incorrect real show amount care put article cite study let carry next thing popped number sample study marketing page claim review considered definitely nt see datapoints graph happened reading study found since defect manually counted statistic took sr review reduce amount manual labour required reasonable nt look like datapoints graph give luckily embedded graph pdf way somewhat possible recover inkscape get count point still curious went let look one point appear defect density zero point appear change loc interesting appears directly contradiction main claim paper blog conclusion graph passed around scale factor actual data statistically significant prove claim made even significant actually show exact opposite claimed none matter look convincing enough first glance get passed around spread internet quite certain author blog post initially found using image nt read study graph pulled nt think unique image find look actual study claim pulled almost always contradictory claim made significant statistical issue reader article encourage think critically data presented find original source determine methodology used collect data least double check graph show actually support claim made
305,Lobsters,visualization,Data Visualization,Dynamicland,https://dynamicland.org,dynamicland,community space possible future one step project project,nonprofit longterm research group spirit doug engelbart xerox parc inventing new computational medium people work together real object real world alone virtual object screen building community workspace heart oakland ca entire building computer mission incubate humane dynamic medium whose full power accessible people communal computer computing together computing together dynamicland screen device ordinary physical material paper clay token toy car brought life technology ceiling every scrap paper capability full computer remaining fullyfunctional scrap paper dynamicland computational medium nt hidden away isolated virtual world real stuff everyone see get hand everyone get hand everything walk see someone making play trade idea sit work together happens constantly everyone learns everyone time dynamicland computer people literally work together facetoface eye contact many hand multiplayer real world agency apps normal person see app think make even modify actually computational medium dynamicland feel like stuff anyone make pen scissors stapler genuinely powerful tool make interactive book tape hole punch humane dynamic medium gently lead people path playing crafting remixing programming program small real world work program flexible compose readily importantly program real thing touch see everywhere run visible change anything see happens black box everyone constantly grabbing remixing work mashups happen second social dynamic programming completely bonkers dynamicland authoring environment everyone author people make need learn immersion true power dynamic medium programmability everyone thinking like whole human people think hand people think body people spread walk around compare possibility people improvise experiment everything humane dynamic medium embrace countless way human being use mind body instead cramming people tiny box pixel one guest spending time dynamicland held smartphone shouted thing prison dynamicland communal computer designed agency apps people think like whole human next step mission incubate humane dynamic medium whose full power accessible people computer future product place community space possible future dynamic medium serve foundation new mode thought communication must lift people traditionally advantaged technology product ship achieve goal instead building dynamicland community space people oakland come shape medium u actively drawing community diverse set people focus underserved alienated current form computing community space model new kind civic institution public library literacy workspace gallery resident visitor alike create dynamic medium exhibit learn others freely remixâ everything new kind makerspace meet new kind exploratorium town hall future hosting talk discussion issue importance community place invent new form conversation beyond talking point powerpoints student age actively working student via afterschool summer program well hosting university work next generation take dynamic medium granted one step project cdg research lab cofounded alan kay bret victor reinvent computing century dynamicland vision technology emerged year exploration hundred working prototype multiple wholesystem iteration founding dynamicland oakland built first fullscale realization vision inviting thousand people space collaborate together artist scientist teacher student programmer nonprogrammers created hundred project would impossible anywhere else bringing together everything learned create next iteration realtalk computing system form foundation next decade research application dynamicland meet world form new kind library museum classroom science lab art venue business empower community build need design future dynamicland every neighborhood following model carnegie library century ago like library museum dynamiclands run local community reflect local culture contrast franchised clone massproduced product perhaps existing library dynamiclands dynamic medium everywhere built infrastructure electric lighting today nonprofit free obligated whatever take ensure pervasive medium safe empowers people rather prioritizing corporate nefarious interest project writing print transformed humanity computing great effect shape transformation lift people widen gap give people agency give product consume bring people together isolate deepen people connection body hand real world depend abstract human being pixel database entry time decide
306,Lobsters,visualization,Data Visualization,Mapping Reddit Communities [img],https://i.redd.it/5e7ebb4ivo201.png,mapping reddit community img,,ihdr p plte aaabbbcccdddeeefffggghhhiiijjjkkklllmmmnnnooopppqqqrrrssstttuuuvvvwwwxxxyyyzzz aaabbbcccdddeeefffggghhhiiijjjkkklllmmmnnnooopppqqqrrrssstttuuuvvvwwwxxxyyyzzz phys j sx h q b p p
307,Lobsters,visualization,Data Visualization,Visualizing Newton's method using WebGL,https://lukezapart.com/newtons-method,visualizing newton method using webgl,visualizing newton method using webgl webgl work getwebglorg look like disabled javascript alternative link newton method newton method root quadratic equation quadratic formula analytic expression rootfinding algorithm differentiable function derivative complex number real example general solution fundamental theorem algebra newton fractal newton fractal choosing pixel color hsv argument origin work working equation abstract syntax tree nearley differentiation rule glsl shaders fragment shader making interactive uniform factored form touch alternative algorithm halley method alternative link note accuracy writing function available expression trigonometric inverse trigonometric hyperbolic keyboard shortcut tip see also newton halley method math webgl code,visualizing newton method using webgl newton method halley method householder method wanted something webgl much simpler thought ended writing made effort make article readable browser much better webgl enabled strongly recommend turning knowing work required enjoy animation feel free skip math section interest already know webgl work seems webgl nt start visit getwebglorg find enable webgl browser also try another browser maybe even mobile phone keep reading added youtube embeds image case look like disabled javascript strongly encourage enable javascript post rather keep reading added youtube embeds image case video newton method video alternative link newton method newton method algorithm finding root also called zero function input function becomes zero word solving f z might familiar finding root quadratic equation bz c using quadratic formula many function nt analytic expression like one finding root case use rootfinding algorithm newton method algorithm differentiable function function normally encounter start guess iterates following expression value either converge fail converge z derivative f z working complex number naturally lend image compared regular real number complex number pair number complex number z x represented point plane coordinate x alternatively pair x example let find root f z newton method general solution cubic function tad unwieldy derivative f z iteration becomes small note click link look like change current rendered equation starting arbitrarily picked get iteration converges indeed fundamental theorem algebra know f z exactly complex root two go shown table starting get last root found starting iteration step shown complex plane successive zn value newton fractal example saw depending initial choice end different root set initial value give u given root called root basin attraction visualize newton iteration coloring every basin attraction different color equation value end red one give colored blue one give green basin attraction colored red blue green without shading also saw guess better others took step faster took step use shade image number step taken better initial guess lighter guess take long time converge dark kind visualization called newton fractal choosing pixel color equation number root want color basin attraction differently need choose color algorithmically problem map neatly onto hsv color model choose hue corresponds root angle argument phase set color value v hsv based number step taken make good starting point lighter darkens converge slower one problem remains two different root angle lie line starting origin one example differentiate set saturation closer root saturated becomes float hue saturation v choose hue angle argument hue carg z pi saturate root closer saturation sqrt cab z make root close white cab z saturation darken based number step taken v max step make root large value black cab z v choosing hsv fragment shader work generating graph somewhat computationally intensive every pixel need perform separate newton iteration input function complicated operate complex number pair float rather float even something simple multiplication two complex number take operation complex cmul complex complex b return complex ax bxay ax byay bx glsl code complex multiplication generating realtime high resolution frame rate high level language cpu nonstarter fortunately problem lends really well parallelization today powerful gpus increasing webgl support run iteration parallel browser breaking step process go like parse equation abstract syntax tree compute derivative symbolically generate glsl fragment shader compile shader attach webgl context run shader every pixel every frame working equation newton method requires u compute derivative function want solve first parse equation abstract syntax tree ast using nearley library abstract syntax tree ast allow u perform transformation equation first symbolically compute derivative using differentiation rule f g c f g z f g sin z co z zn co z z f g g ez ez fg f ln z selected differentiation rule result automatic differentiation contain unnecessary junk multiplying number simplify derivative ast applying common identity z z z simplify operation replace help frame rate especially slower machine example differentiation yield simplifies finally convert asts original function derivative glsl cbased language shaders written put simply shaders gpu program bulk code fragment shader put color pixel independently parallel f cpow z complex complex df cmul complex cpow z complex generated glsl making interactive way rendering static newton fractal relatively fast take step animate introduce two parameter real time complex mouse coordinate declare parameter uniform shader input constant stay across pixel typedef glsl use define define complex uniform complex uniform complex uniform declared fragment shader every frame update uniform value without recompiling shaders var glgetuniformlocation program var glgetuniformlocation program mousex mousey time setting uniform value time using time real parameter allows u look fractal evolves term becomes dominant example degree term constant term reminder click also add oscillation effect using sin sin z sin circular motion exploiting co ci short example sec z ci sin z sin sec z ci sin z sin sec z ci mouse position remember complex number correspond point plane mouse position set precisely complex number pointed cursor let u get better feel function eg co z work touch mobile device way use study earlier example behaves change exponent fractional negative imaginary value another example add root polynomial factored form multiplying zm pointing new root zm zm zm peek value parameter real time using advanced tab bonus iphones higher touch force recent iphones feature called touch measure much force applying touching display thought would fun add mix represent touch force real parameter f run example add root factor exponent previous example play order like zm canvasaddeventlistener touchforcechange function event eventtoucheslength nt fire multitouch return var touch eventtouches settouchforce touchforce eventpreventdefault canvasaddeventlistener touchend function event settouchforce eventpreventdefault detecting touch force change alternative algorithm rootfinding algorithm use derivative one halley method converges faster newton requires computation existence second derivative derivative derivative fortunately compute derivative compute second derivative easily however purpose method usually slower second derivative tends much complex zn f zn zn zn f zn zn halley method video halley method video alternative link another one householder method also requires second derivative interesting compare graph generated generated newton method difference well similarity restart rolling demo see difference variety function zn f zn f zn zn zn zn householder method note accuracy different webgl implementation may produce slightly different result sometimes glitch might show also might bug shader code especially exotic complex function web glsl nt exactly easy test writing function write equation one way get started playing existing function change constant add thing multiply thing wrap thing function change function function let know find anything interesting available expression arithmeticzw zw z w zw zw trigonometricsin z co z tan z cot z sec z csc z ci z inverse trigonometricasin z acos z atan z acot z asec z acsc z hyperbolicsinh z cosh z tanh z othersqrt z ln z exp z pi e variablesm keyboard shortcut zoom zoom ctrl take screenshot open new window tip add timed circular motion use ci short co getting lot black divergence add simple term z multiply equation z see also webgl code slow device check prerendered video newton halley method math webgl code subscribe email follow twitter
309,Lobsters,visualization,Data Visualization,A DIY Dashboard with Grafana,https://appliedgo.net/diydashboard/,diy dashboard grafana,github page home page time series grada note using grada collecting time series data two caveat get run code install run grafana step download run grafana docker image step step configuring grafana dashboard login create data source tip connecting host work step build run container add dashboard happy coding,recently time play grafana github page home page opensource data dashboard monitoring kind time series data grafana come many prebuilt data source wellknown metric collector service time series database immediately thought something different could feed time series code grafana dashboard turned easy way help generic backend datasource named simplejson datasource first sends json query given url order retrieve available metric server connecting dashboard panel metric grafana query server periodically metric data easily connect go code grafana dashboard panel wrote package grada grafana dashboard collect simple time series data make data available grafana instance via http server running background note time writing grada proof concept intended use production environment article walk step writing sample code setting local grafana server start creating dashboard like one let start writing test code reason first set grafana server already running immediately connect custom data source see everything work intended using grada collecting time series data small piece code follows demonstrates create two custom metric two data feed data current cpu load two cpu core captured every second able find package read cpu load least three major os linux macos window created fake cpu load generator instead point see nice graph screen replace data generator useful real data source later let start two caveat two thing consider using grada first creating metric choose longest time range dashboard might request example plan monitor data last hour choose timeframe even time set dashboard monitor last half hour metric type store exactly amount data point occur given time range given data rate example code delivers new data every second maximum time range monitor minute recent data point stored second data point stored memory data point struct containing timetime value struct consumes byte persistant storage behind metric object plan monitor large time range andor highfrequency data source verify required buffer still fit main memory get run code step go get code note flag prevents autoinstalling binary gopathbin go get githubcomappliedgodiydashboard step cd source code directory cd gopathsrcgithubcomappliedgodiydashboard step run binary go run diydashboardgo server running data source start generating data next step install grafana install run grafana grafana come osspecific installation package feel free pick one o follow installation documentation go different way install grafana docker container really easy also almost platform support docker using macos window keep mind docker run inside linux vm two platform problem run docker mac almost linux downside container need access url host machine seems universal solution os mac dead easy solution os mileage may vary docker installed decide right install docker may follow step go step download run grafana docker image shell prompt run command docker run p name grafana mount srcgrafanastorage dstvarlibgrafana e gfinstallpluginsgrafanasimplejsondatasource grafanagrafana quite mouthful command let take apart look detail run container background expose port port host machine p name container grafana name grafana create mount docker volume persistent storage mount tell grafana install simplejson datasource plugin e gfinstallplugins grafana recognizes environment variable downloads installs plugins listed run container image grafanagrafana download image required layer dockerhubdockerstore required whew simple docker run actually quite lot behind scene container running test running see something like container id image command created status port name grafanagrafana runsh second ago second grafana everything ok far head step step step ok let move configuring grafana configuring grafana dashboard get quite screenshotey word claim creatorship one subject saying go picture worth thousand word first one login default credential adminadmin course change login successful login arrive home dashboard create data source first thing set custom data source click add data source screen open fill following field name choose name like default ensure check box new panel select data source default type select simplejson url go code listening use docker mac set http docker vm macos provides magic url http dockerformaclocalhost access web server host machine using docker internal dns resolve domain name dockerformaclocalhost host ip address magic happens linux window need determine host ip address seen within container use url like http connect go app rest setting left asis click add add data source provided go app still running container network access host page look like everything look fine click menu top left select dashboard return home dashboard tip connecting host work trouble connecting grafana container host machine try two alternate option option install grafana locally without docker option run go app within docker container connect two container via internal network second option take extra step step build run diydashboard container using dockerfile gopathsrcgithubcomappliedgodiydashboard create docker container contains nothing else go app dockerfile twostage file golang latest buildstage workdir gosrcdiydashboard copy run go get githubcomchristophbergergrada run go build scratch workdir app copy frombuildstage gosrcdiydashboarddiydashboard expose entrypoint appdiydashboard first stage compiles go code binary second stage creates container empty scratch image contains diydashboard binary run dockerfile shell start resulting container cd gopathsrcgithubcomappliedgodiydashboard docker build diydashboard docker run name diydashboard rm diydashboard step connect two container need connect grafana container diydashboard container internal docker network create new network named diy docker network create diy docker network connect diy grafana docker network connect diy diydashboard point grafana container find diydashboard container name docker internal dns server map container name container ip address internal network insert url http click add save test get data source working message add dashboard go ahead create dashboard click create first dashboard screen change first thing change time range dashboard request data source click text upper right corner say last hour dropdown appears click last minute make dashboard fetch new data regularly click refreshing every dropdown box select suitable interval say click apply save setting top still empty dashboard couple panel select click graph create graph panel see new empty panel bring life answer obvious configure panel click title popup dialog appears click edit enter edit modej ensure metric tab active tab show data source panel read set custom data source default change data source setting otherwise click default select custom data source data source couple dropdown box first row say timeserie select metric mean panel expects receive time series data option table receiving tabular data ensure go app still running click select metric dropdown open see two data source created go app grafana query app available metric present select graph area immediately show data far go app already generated starting dashboard contain many panel want give panel name also need click select general tab change title string really meaningful name like diy panel want panel show one metric app generates two metric let add panel click close button top right corner exit edit mode everything went fine see congrats personal dashboard running edit panel play around look feel add panel like single value singlestat panel bar graph plain list course go ahead connect time series data dashboard network activity disk usage number email inbox temperature history death valley data think find write go library happy coding
310,Lobsters,visualization,Data Visualization,Bringing still photos to life,https://research.fb.com/bringing-still-photos-to-life-and-3d-photography-to-your-phone/,bringing still photo life,siggraph asia bringing portrait life bringing portrait life casual photography casual photography next also presented siggraph asia fast gazecontingent optimal decomposition multifocal display,facebook researcher transforming photography entirely new consumer still portrait emotion movement bringing photography casual photographer facebook team present latest research also place work broader context evolution computer graphic photography keynote address siggraph asia bangkok michael cohen facebook director computational photography group selected deliver siggraph asia keynote keynote address michael cohen facebook director computational photography group trace work beginning computer graphic incorporation computer vision two technology blend seamlessly new consumer level experience talk focus line blurred simple photograph enhanced experience capture moment creative way also exemplified two paper facebook researcher presenting conference bringing portrait life facebook researcher michael f cohen johannes kopf hadar averbuchelor daniel cohenor telaviv university present paper bringing portrait life inspired harry potter movie image wall newspaper could spring life even react viewer given single image top row method automatically generates photorealistic video express various emotion use driving video different subject mimic expressiveness subject driving video representative frame video displayed photographer lauren ferstl brooke cagle guillaume bolduc ilya yakover drew graham ryan holloway research present technique automatically animate still portrait subject photo come life express various emotion using driving video different subject transfer expressiveness subject driving video target portrait contrast previous work requires input video target face reenact facial performance new technique us single target image target image animated warp imitate facial transformation driving video warp alone carry full expressiveness face add finescale dynamic detail commonly associated facial expression crease wrinkle also hallucinate region hidden input target face notably inner mouth primary application creating reactive profile people still image automatically interact viewer express emotion send reactive portrait someone include part comment someone else post portrait reflects emotion rather static profile picture fig generated reactive profile context mocked facebook page video present complete demonstration video future team consider combining technique method example face departs frontal facing pose map face template face use rotated model allow wider motion facial region expect fun application emerge work example one imagine coupling work ai create interactive avatar starting single photograph could come life reacting various facial expression casual photography also presented siggraph asia paper casual photography peter hedman university college london facebook suhib alsisan richard szeliski johannes kopf introduces technology make photography accessible mass imagine could capture place digitally preserve way allows friend virtually immerse scene reexperience sensation imagine nearly easy taking picture today using phone camera already could capture share space visit friend feel connected preserve personally treasured place forever digital memory paper team present technology enables casual photography moving u closer towards fulfilling vision person capture scene moving handheld camera sideways half arm length taking series still image possibly help dedicated capture app capture unstructured ie motion precisely executed take second minute depending desired amount coverage given input algorithm automatically reconstructs photo ie textured panoramic multilayered geometric mesh representation algorithm reconstructs photo ie multilayered panoramic mesh reconstructed surface color depth normal casually captured cell phone dslr image viewed full binocular motion parallax vr well regular mobile device web browser reconstructed depth normal allow interacting scene geometryaware lighting effect team developed novel system construct seamless twolayer photograph sequence casually acquired photograph work build strong foundation sparse dense mv algorithm enhanced result due novel near envelope cost volume prior parallaxtolerant stitching algorithm remove many outlier depth artifact produce front back surface panorama wellreconstructed depth edge start depth map whose edge aligned reference image color edge fusion algorithm fuse front back panorama single twolayer photo one primary design goal make photo capture process easy inexperienced user capture handheld take long captured existing lowcost camera requirement influenced many algorithmic design decision pipeline research present step towards goal people easily capture world around enough fidelity reexperience next facebook want deliver range experience help people share important moment communicate others using visual medium two paper part different puzzle one enables new way capturing sharing image new way capturing sharing experiencing world computational photography team explores everything happen light entering device light leaving device image video interactive experience also working short form video augmented reality experience well traditional us computational photography simply make image video look better power camera sensor well computation mobile device allow u create even surprising way communicate fun exploring world around u also presented siggraph asia oculus researcher collaborator also present paper fast gazecontingent optimal decomposition multifocal display
311,Lobsters,visualization,Data Visualization,Geocoding Paradise Papers Addresses In Neo4j To Build Interactive Geographical Data Visualizations,http://www.lyonwj.com/2017/11/28/geocoding-paradise-papers-neo4j-spatial-visualization/,geocoding paradise paper address build interactive geographical data visualization,geocoding paradise paper address build interactive geographical data visualization paradise paper international consortium investigative journalist icij data icij offshore leak site geocoding address google geocoding api open street map nominatim craig apoc cypher procedure library note approach used paid google goeocoding api otherwise exceed rate limit building interactive geographical data visualization leafletjs leafletjs marker cluster markercluster plugin leaflet heatmap different leaflet heatmap plugins heatcanvas using data javascript driver sheldon adelson bermudabased company github live map visualization download paradise paper database icij sandbox,geocoding paradise paper address build interactive geographical data visualization nov post explores build spatial data visualization using address data paradise paper leak offshore corporation people connected first geocode address leaked data build heatmap interactive map exploring data offshore legal entity paradise paper latest data journalism investigation international consortium investigative journalist icij like anyone working complex highly connected data think chain ownership offshore legal entity icij use find connection data read graph database used icij paradise paper investigation data anyone download paradise paper database database icij offshore leak site note database includes data number icij investigation including panama paper paradise paper bahamas leak offshore leak data model look like see officer entity intermediary node connected address node registeredaddress relationship case paradise paper dataset address found leaked document corporate registry particularly interested analyzing data using geographic component use cypher ask question data example officer address san mateo popular offshore jurisdiction legal entity match address registeredaddress officer connectedtoofficerof e entity aname contains san mateo return ejurisdictiondescription juris count num order num desc juris num bermuda cayman island mauritius seychelles since address use process called geocoding find latitude longitude address enabling u build spatial data visualization exploring data geocoding address according wikipedia geocoding computational process transforming postal address description location earth surface spatial representation numerical coordinate several service provide geocoding including google geocoding api open street map nominatim thanks spatial guru craig use geocoding service directly cypher part apoc cypher procedure library installed apoc setting add dbmssecurityproceduresunrestrictedapoc apocspatialgeocodeprovidergoogle sure throttle using free osm api need throttle using paid google api apocspatialgeocodegooglekeyyourgoogleapikeyhere geocode single address using apocspatialgeocodeonce procedure call apocspatialgeocodeonce trophy hill drive la vega nevada united state america formattedaddress trophy hill dr la vega nv usa geometry viewport southwest lng lat northeast lng lat location lng lat locationtype rooftop type streetaddress addresscomponents longname shortname type streetnumber longname trophy hill drive shortname trophy hill dr type route longname summerlin shortname summerlin type neighborhood political longname la vega shortname la vega type locality political longname clark county shortname clark county type political longname nevada shortname nv type political longname united state shortname u type country political longname shortname type postalcode longname shortname type postalcodesuffix placeid interested latitude longitude grab location column call apocspatialgeocodeonce trophy hill drive la vega nevada united state america yield location description trophy hill dr la vega nv usa latitude longitude want iterate address node paradise paper dataset send address text geocoding service store three additional property address node latitude longitude description match address limit call apocspatialgeocodeonce aname yield location locationlatitude latitude locationlongitude longitude locationdescription description set alatitude latitude alongitude longitude adescription description work address process making one request time result request per second using paid google geocoding api rate limit requestssecond let take advantage use apocperiodiciterate parallelize request periodiciterate take two cypher query run first query passing result second query run batch optionally choose run batch parallel note approach used paid google goeocoding api otherwise exceed rate limit call apocperiodiciterate match address return call apocspatialgeocodeonce aname yield location locationlatitude latitude locationlongitude longitude locationdescription description set alatitude latitude alongitude longitude adescription description parallel true executing geocode procedure parallel batch increase throughput significantly geocoded address thing like calculate distance using cypher address dataset within offshore legal entity associated match e entity connectedtoofficerof officer registeredaddress address exists alatitude exists alongitude distance point point latitude longitude return distinct ename offshoreentity ejurisdictiondescription jurisdiction aname officeraddress offshoreentity jurisdiction officeraddress autochina international cayman island hobart ave san mateo california united state america mill river limited bermuda bovet road san mateo united state indigo reinsurance ltd bermuda bovet road san mateo united state asurion japan reinsurance bermuda bovet road san mateo united state international wireless bermuda el camino real suite latin america san mateo ca ltd state america renter reinsurance company bermuda chukker court san mateo ltd united state h reinsurance company bermuda chukker court san mateo united state farallon reinsurance company bermuda chukker court san mateo ltd united state h f rose investor ltd bermuda ridgeway road california united america h f international rose bermuda ridgeway road ltd california united america h f corporate investor iv bermuda ridgeway road ltd california united america celtic pharma development bermuda chukker ct san mateo bermuda ltd united state mill river limited bermuda south el camino real san mateo united state indigo reinsurance ltd bermuda south el camino real san mateo united state also build really cool interactive map based visualization data building interactive geographical data visualization using leafletjs build interactive geographic visualization want pull data annotate map make use leafletjs couple plugins javascript driver leafletjs leafletjs opensource javascript library creating interactive map create simple map like html head style map height style script src http script link rel stylesheet href http head body div id map div script var baselayer ltilelayer http tileosmorg z x png attribution openstreetmap minzoom maxzoom var map new lmap map center new llatlng zoom layer baselayer script body html give u map let add data leaflet allows u create multiple layer showhide various layer create base map layer map tile data visualization live map layer plotted top map tile make use two type geographical data visualization heat map marker cluster marker cluster adding marker map simple leaflet add marker address paradise paper dataset map soon look like pin cushion fortunately markercluster plugin leaflet includes logic clustering marker together depending zoom level example add marker leaflet map var markerlayer new lmarkerclustergroup var new lmarker new llatlng hq var new lmarker new llatlng philz coffee var new lmarker new llatlng san mateo public library markerlayeraddlayer markerlayeraddlayer markerlayeraddlayer mapaddlayer markerlayer marker clustered together zoomed zoom see individual marker heatmap heatmap data visualization often imposed map could done matrix well color used represent data value geographical data visualization data point often sparse form interpolation often used different leaflet heatmap plugins choose like heatcanvas api provides several configuration option configuring formula used determine value pixel add simple heatmap leaflet map using heatcanvas var heatmap new ltilelayerheatcanvas degree heatcanvaslinear opacity heatmappushdata hq heatmappushdata philz coffee heatmappushdata public library mapaddlayer heatmap heatmap show spend much time coffeeshop library work using data seen create map using leaflet adding marker marker cluster heatmap let see pull data populate map since previously added latitude longitude property address node use mark point map also like include information officer connected address legal entity officer connected cypher query find registered address officer paradise paper dataset able geocode well connected offshore legal entity match address registeredaddress officer connectedtoofficerof e entity exists alatitude exists alongitude return aname address alatitude latitude alongitude longitude collect distinct oname officer collect distinct ename entity collect distinct ejurisdictiondescription jurisdiction count strength make use javascript driver run query add data map record returned var driver bolt mypassword var session driversession session run match address registeredaddress officer connectedtoofficerof e entity exists alatitude exists alongitude return aname address alatitude latitude alongitude longitude collect distinct oname officer collect distinct ename entity collect distinct ejurisdictiondescription jurisdiction count strength subscribe onnext function record consolelog record var marker new lmarker new llatlng recordget latitude recordget longitude markerbindpopup b address b recordget address br b officer b recordget officer tostring br b entity b recordget entity tostring br b offshore country b recordget jurisdiction tostring markerlayersaddlayer marker heatmappushdata recordget latitude recordget longitude recordget strength oncompleted function var overlaymaps marker markerlayers heatmap heatmap var control lcontrollayers null overlaymaps collapsed false autozindex true map new lmap map center new llatlng zoom layer baselayer mapaddlayer markerlayers mapaddlayer heatmap controlsaddto map sessionclose onerror function error consolelog error interactive geographic visualization address paradise paper dataset explore heatmap show u area high concentration address associated officer offshore entity also explore marker find officer connected offshore legal entity see casino owner sheldon adelson bermudabased company used registering private aircraft type geographical data visualization particularly useful data journalist interested finding story relevant certain geographic area code available github try live map visualization download paradise paper database icij try sandbox
312,Lobsters,visualization,Data Visualization,NCurses Disk Usage,https://dev.yorhel.nl/ncdu,ncurses disk usage,ncurses disk usage download change arm musl online browsing package port aix alpine linux alt linux arch linux crux cygwin debian fedora freebsd frugalware gentoo gnu guix nixos openbsd openwrt fink homebrew macports puppy linux solaris slackware slax linux ubuntu void linux open build service pkgsrc similar project duc tdu tdu treesize baobab gdmap filelight kdirstat qdiskusage xdiskusage fsv philesight,ncurses disk usage ncdu disk usage analyzer ncurses interface designed find space hog remote server nt entire graphical setup available useful tool even regular desktop system ncdu aim fast simple easy use able run minimal posixlike environment ncurses installed download latest version closefile kib byte pgp change also convenient static binary linux closefile kib byte pgp closefile kib byte pgp closefile kib byte pgp closefile kib byte pgp download extract run compilation installation necessary us musl development version recent code available git repository cloned git clone git gblickynetncdugit repository also available online browsing ncdu entirely written c available liberal mit license package port ncdu packaged quite system list one aware aix alpine linux alt linux arch linux crux cygwin debian fedora freebsd frugalware gentoo gnu guix nixos openbsd openwrt macos fink homebrew macports puppy linux solaris slackware slax linux ubuntu void linux package rhel open suse found open build service package netbsd dragonflybsd mirbsd others found pkgsrc port zos available similar project duc multiple user interface quite similar ncdu different approach tdu another small ncursesbased disk usage visualization utility tdu go commandline tool ncdu json export treesize gtk using treeview baobab gtk using piecharts treeview treemap come gnome gdmap gtk treemap display filelight kde using piecharts kdirstat kde treemap display qdiskusage qt using piecharts xdiskusage fltk treemap display fsv visualization philesight webbased clone filelight
313,Lobsters,visualization,Data Visualization,Applied Data Science with Python (free courses),https://cognitiveclass.ai/learn/data-science-with-python/,applied data science python free course,,data science course learn use python language clean analyze visualize data guided lecture lab get handson experience tackling interesting data problem actionpacked learning path data science enthusiast want work real world problem using python make sure take learning path solidify data skill python diving machine learning big data deep learning python
314,Lobsters,visualization,Data Visualization,Remove the legend to become one,http://www.eugenewei.com/blog/2017/11/13/remove-the-legend,remove legend become one,credible sense surprise moneyball naysaying amazon profitless business model lie visual display quantitative information,started first job amazoncom first analyst strategic planning department inherited work producing analytics package capitalize term serious tool making business legible job production month ruled life yearback analytics nt even real word know tried look term hoping clarify meant could nt find dictionary internet age volume search result average search engine returned first began using internet force remember pocket wisdom hidden eclectic newsgroups yahoo organized directory web hand later many google search returned little nothing back russian wanted hack election might planted story somewhere recartscomics radicalized nerd itthough could nt find definition word nt difficult guess noun form analysis analytics package selfdescribing literally came single page cover letter always short preamble describing purpose jumped textual summary information within almost like research paper abstract letter shareholder like think jeff bezos famous company policy instituted many year later banning powerpoint favor written essay origin analytics package cover letter way back animating idea ca nt explain something writing another human really understand interview loop amazon ended hour head recruiting time ryan sawyer gone gauntlet interview included almost senior executive including people like jeff bezos joy covey brilliant people ever met life thought perhaps requisite hr interview would letup ryan asked explain complex thing understood way understand would good preparation jobwhat within analytics package required written explanation graph page page graph every aspect amazon business revenue editorial marketing operation customer service headcount g customer sentiment market penetration lifetime value customer inventory turn usually four graph page laid landscapethe word package might seem redundant analytics noun saw one knew called package started amazon analytics package maybe thirty forty page graph moved product management year later pushing hundred page working supplemental report customer order trend addition analytics might refer deliverable practice analysis analytics package like phone book restoration hardware catalog heftthis back day entire company focused building internal dashboard analytical tool analytics package done might today consider comparable twig dirt sophistication entered data hand excel table generated laid chart excel printed paper copiesone worst part whole endeavor getting page number entire package correct behind analytics package whole folder linked spreadsheet since different chart came different workbook print entire analytics package get ordering correct insert page number hand obscure print setting menu needle say ensuring page break landed wanted like defusing bombnowadays company hang flat screen tv hanging wall running display variety chart everyone ignores spirit right transparent time understanding human nature ignore thing shown u time however month huge packet chart dropped desk cover letter summarizing result ceo peer received package day piece work included chart part business running damn well paid attention like person turning index book company see mentioned ritual mattersthe package went senior manager around company first defined official level hierarchy though thing go became source monthly contention add distribution one might suspect went head owning distribution list fact cared print collate physical copy every monthi rarely use copy machine day year life used day came day still come say confidence among least reliable machine ever made mankindit game one whose goal minimize pain hundred copy hundred page document machine break point sheet jam somewhere ink cartridge go dry many collated copy risk printing go setup process many risk midjob error might cascade series ever complex task like trying collate page still remaining merging page already completed wondered insert page number hand nt ease referencing particular graph discussion also could figure page missing copy copy machine crapped could try resuming task clearing paper jam practice never really worked learned copy machine jam job magnitude practical purpose failure machine could recoveri became shaman copy machine headquarters columbia building knew one capable heavy duty task reliable one machine reliability fluctuated elusive alchemy time usage date last service visit since generally worked late every night save mass copy task end day run building copy machinessometimes could sense paper jam coming sound machine internal roller gear unhealthy machine would wheeze like smoker sometimes put hand machine performed service like healer laying hand sick patient would call copy machine whisperer addressed always slew expletive never whispered late tenure analyst got budget hire temp help actual printing monthly analytics package keep touch date bonded endured sisyphean labormy source grief another tool deep fragility linked spreadsheet excel day advocate excel best tool microsoft office suite still serious work top spreadsheet planet however never forget nightmare linked workbook excel idea sounded promising theory worked inconsistently practicewhy use one giant workbook various department submit data different graph back complete mess multiple people work excel spreadsheet simultaneously figuring whose change stuck whole process diffs untenable created excel workbook different department data collect enter hand department younger employee time wherewithal enter maintain data organizationeven process much could go wrong tried create guardrail preserve formula linking workbook everything locked cell bold colorful formatting indicate editable cell spreadsheet survives engagement casual user someone might insert column row delete formula mistake one month user might rename sheet decide add summary column quarter none existed suddenly slew error show cell place unlucky figure remain wrong nt realize itthus part every month going spreadsheet fixing link pointer reconnecting chart searching table longer insidiously pointing wrong area right tableeven done though sometimes cell would calculate correctly deterministic whole idea spreadsheet error user error cell master workbook would point cell another workbook match value yet opened workbook one would display would display button force recalculation every cell press repeatedly sometimes would sometimes would nt sometimes try ctrl alt shift sometimes prayone time cried work late one night short time mom passed away cancer left leg cast aclmcl rupture could understand workbook nt checking lost moment wrestle universe submission nt circular reference knew could fixed pursued end earth least bound workbook inherent fragility linked workbook excel random flaw godless program felt likely person entire universe fated suffer arbitrary punishmenti wanted leave office tired go far crutch one around section office hour turned computer turned light put head desk moment passed booted pc back opened two workbook looked two cell question still differed pressed matched month finished collating copy analytics package clipping small later medium finally large binder clip deliver copy hand dropping recipient empty desk late night welcome break get desk stroll office maybe stop chat whoever burning midnight oil felt like paper boy route often hourfor painful memory cling analytics package consider one formative experience career producing felt entire organism business laid bare complexity inner working made legible way imagine programmer visualizing data moving table three dimensional space could trace entire ripple customer desire purchase book dollar cash flowed entire anatomy business knew salary every employee could sense cost time order book worked way distributor warehouse shelf conveyor belt box delivery truck could predict like blackjack player counting card shoe customer every hundred order would reach u issue would type issuesi knew gained customer one month many friend family would become new customer next month word mouth knew hundred customer made first order january would order february march average basket size order would grew gained leverage could see impact cash flow negotiating longer payable day publisher distributor see gross margin inch upwards every time negotiated better discount list priceswhat comfort live realm frequent transaction normal distribution realm law large number rule law observing consistency predictability human purchase book later cd dvd month like spotting crystal structure nature microscope nt envy company like snapchat twitter pinterest social network gone public likely someday company play social network business trying manage investor expectation business large yet still volatile revenue stream even fun grow exponential trajectory social network fun twitter trying explain every quarter missed number le fun pretend know happen revenue one quarter let alone two threeat amazon could see revenue next quarter within percentage point accuracy beyond decision much tell wall street anticipated revenue back always underpromised revenue knew overdeliver question much still maintain credible sense surprise next earnings callthe depth knowledge business continues exceed company worked since much credit go jeff demanding level detail one set standard accountability like person top much credit go joy manager keith making analytics package one strategic planning department central task keith pushed arm tufte changed everything still credit belongs people helped gather obscure bit data part business colleague accounting every department company many built model area maintaining iterating regular cadence knew every month come knocking asking questionsi convinced joy knew every part business well better almost anyone running one rare cfo play offense addition defense almost every cfo met hews close stereotype always reigning spending urging fiscal conservatism casting skeptical eye bold financial transaction joy could better next cfo appropriate would urge u spend zeal matched jeff like many visionary ceo knew sometimes best defense offense especially come internet market pocket winnertakeall contest first mover advantage network effectsit still surprise many company nt help employee understand numeric working business one go orientation hears culture travel policy supply cabinet maybe discussion mission statement valuable course last time orientation featured graph business nt trust numeracy employee fear level radical transparency overwhelm perhaps mechanism control sort nt worry little mind number focus piece puzzle knowing number nt enough book like moneyball make clear reveal hidden truth unknown vector value example case billy beane oakland base percentage day people still commonly talk amazon able turn profit many year ponzi scheme late one night day started third fourth time reading recent edition analytics package cover back knew hidden truth naysaying amazon profitless business model lie every dollar profit nt reinvest business every dollar nt raise investor add investment would kneecapping governor potential breadth ambition line graph month two job manager sent seminar passed seattle full day course centered around wisdom one book taught author book visual display quantitative information cult bestseller amazoncom type long tail book age amazon might remained niche reference book author edward tufte difficult conjure demand full list important book read onemy manager sent seminar could apply principle book chart analytics package copy book sits shelf home book recommend work colleaguesin contrast post buried lede far may never find tufte book open concise summary key principle
315,Lobsters,visualization,Data Visualization,An In-Depth Graph Analysis of the Paradise Papers,https://neo4j.com/blog/depth-graph-analysis-paradise-papers/,indepth graph analysis paradise paper,publicly released data website graph database type nosql database public web application open source previous post cypher graph querying data model node relationship property exploratory query shortest path queen england rex tillerson graph algorithm offshore legal entity wilbur ross connected geo analysis heatmap paradise paper geocoded address try live panama paper heatmap panama paper geocoded address revealed connection bermuda company annotated map geocoded address paradise paper showing registered address node connected legal entity jurisdiction try live entity jurisdiction find sandbox great resource learning cypher graph database generous donation github want learn graph technology click get free copy reilly book discover harness power connected data download free copy,today icij publicly released data recent yearlong investigation offshore industry known paradise paper last week since icij announced investigation seen many report published covering activity company like nike apple queen england estate connection russian investment politician like wilbur ross company like facebook twitter million leaked document email database record analyzed using text analysis fulltext facetedsearch interestingly u graph visualization graphbased search international consortium investigative journalist icij make use graph database internally aid investigation icij say website graph database best way explore relationship people entity much intuitive use purpose sql database type nosql database addition graph allow understand network intuitive way easily discover connection icij built powerful search engine sits atop allows searching paradise paper dataset made available public web application however releasing data database enables much powerful analysis data since open source database mean everyone access powerful tool making sense data previous post showed graph analysis cypher query language graph used query data find connection paradise paper data post show technique querying analyzing data including create data visualization help draw insight use graph analysis learn offshore finance industry graph querying thorough overview data model example query see previous post data model paradise paper dataset us property graph data model represent data offshore legal entity officer may beneficiary shareholder entity intermediary acted create legal entity node graph entity relationship connect also store keyvalue pair property node relationship name address data provenance attribute graph visualization powerful way explore data example identifying highly connected cluster node done visually examining graph exploratory query also perform aggregation query tabular data let examine overall size shape paradise paper dataset many node paradise paper dataset match n return label n label count count order count desc label count officer address entity intermediary see data consists information officer people company play role offshore company connection almost offshore legal entity across address address become important u later made use location data also count number different type relationship dataset match r return type r count order count desc type r count officerof registeredaddress connectedto intermediaryof samenameas sameidas compute degree distribution give u idea connected different piece graph average match n label n type size n degree return type max degree max round avg degree avg round stdev degree stdev type max avg stdev address intermediary officer entity shortest path queen england rex tillerson one powerful feature graph database like ability query path arbitrary length allows u find connection node know connection even length path curious see indirect connection two public figure appear paradise paper dataset rex tillerson u secretary state connection bermudabased oil gas company operation yemen queen england whose estate reported investor bermudabased company easily query path using cypher match pshortestpath rex officer queen officer rexname tillerson rex queenname duchy lancaster return p show u single shortest path connecting queen england rex tillerson path go several offshore entity officer connection entity adjust query slightly include shortest path see several officer path share connection many legal entity match pallshortestpaths rex officer queen officer rexname tillerson rex queenname duchy lancaster return p quick google search reveals individual corporate service manager individual paid serve director offshore entity handle administration entity graph algorithm querying data using cypher useful exploring graph answering question offshore legal entity wilbur ross connected want know influential node network element graph highest transitive relevance easily run pagerank centrality algorithm whole graph dataset using cypher call algopagerank null null write true writeproperty pagerankg query entity node highest pagerank score match e entity exists epagerankg return ename entity ejurisdictiondescription jurisdiction epagerankg pagerank order pagerank desc limit entity jurisdiction pagerank worldcare limited bermuda ferrous resource limited isle man american contractor insurance group ltd bermuda gulf keystone petroleum limited bermuda warburg pincus bermuda private equity x lp bermuda madagascar oil limited bermuda coller international partner ivd lp cayman island milestone insurance co ltd bermuda cl acquisition holding limited cayman island alpha omega semiconductor limited bermuda coller international partner va lp cayman island geo analysis registered address many officer legal entity available paradise paper data using service nominatim api google geocoding api perform lookup turn address string latitude longitude point geocoded address use geographic analysis find insight data javascript driver make easy build web application query using cypher one visualization tool use heatmap observation represented color intense color mean address area examining heatmap paradise paper address show high concentration address atlantic coast north america many address bermuda known offshore jurisdiction heatmap paradise paper geocoded address try live compare heatmap heatmap geocoded address panama paper dataset earlier leak investigated icij see quite different geographic distribution address instead large concentration atlantic see higher concentration asia lesser degree europe panama paper leak high number address singapore kuala lumpur heatmap panama paper geocoded address using geocoded address also interactively explore paradise paper map clicking address marker interest issue cypher query find officer entity node connected address exploring ritzy suburb la vega see many address show paradise paper fact easily stumble upon casino magnate sheldon g adelson revealed connection bermuda company us register casino private jet transferring ten million dollar taxfree jurisdiction annotated map geocoded address paradise paper showing registered address officer node connected legal entity jurisdiction try live entity jurisdiction looking implication structure offshore finance industry one question investigative journalist try answer enablers one aspect finding enablers look jurisdiction make offshore industry possible one theorize historical legal economic reason jurisdiction may chosen citizen certain country data like paradise paper important gaining insight offshore finance industry much world secretive next examine jurisdiction information data match e entity ejurisdictiondescription juris count count count return order count asc see bermuda cayman island far outnumber jurisdiction make sense given know main source data law firm office bermuda many country extend analysis begin answer question certain jurisdiction citizen particular country prefer popular offshore jurisdiction country residence beneficiary officer begin take look answer creating bipartite graph officer country entity jurisdiction visualize data chord diagram show u relative distribution flow bipartite graph match address officer e entity acountries officercountry ejurisdictiondescription juris count num return order num desc diagram show u united state far popular country officer give registered address officer address u bermuda cayman island popular offshore jurisdiction surprising saw earlier two jurisdiction far popular dataset find overview nowpublic paradise paper dataset released icij icij released leaked data packaged database enable everyone use open source software use making sense complex web offshore finance industry find paradise paper dataset available sandbox soon available download database icij website encourage explore data see insight find offshore finance industry explore data sure check great resource learning cypher graph database like work icij remember independent medium organization rely generous donation operate find code generating visualization post github want learn graph technology click get free copy reilly graph database book discover harness power connected data download free copy editor note icij published data following note legitimate us offshore company trust intend suggest imply people company entity included icij offshore leak database broken law otherwise acted improperly many people entity similar name suggest confirm identity individual entity located database based address identifiable information
316,Lobsters,visualization,Data Visualization,"Scraping Russian Twitter Trolls With Python, Neo4j, and GraphQL",http://www.lyonwj.com/2017/11/12/scraping-russian-twitter-trolls-python-neo4j/,scraping russian twitter troll python graphql,scraping russian twitter troll python graphql twitter account russia internet research agency internet archive internet archive http twittercomtengop finding available cached page importing several option importing data graph query graphql api react app grandstack http githubcomjohnymontanarussiantwittertrolls,scraping russian twitter troll python graphql nov last week result house intelligence select committee investigation twitter released screen name twitter account tied russia internet research agency involved spreading fake news presumably goal influencing election post explore scrape tweet user page cached version page import analysis build simple graphql api exposing data graphql twitter released screen name user id account release data tweet follower network information associated account fact twitter suspended account mean tweet removed twittercom longer accessible twitter api analyzing tweet made account first step understanding social medium account run russia may used influence u election first step simply find potential source data internet archive internet archive nonprofit library provides cached version website snapshot webpage given point time viewed later one option obtaining russian troll tweet using internet archive find twitter user page may cached internet archive example visit http twittercomtengop see twitter page tengop one russia troll account designed look like account associated tennessee republican party snapshot page contains several tengop recent tweet snapshot taken internet archive finding available cached page using screen name provided house intelligence committee use internet archive wayback api see user twitter profile page cached internet archive point time write simple python script iterate list russian troll twitter account checking wayback api available cached page making request http archiveorgwaybackavailable urlhttp twittercomtwitterscreennamehere return url timestamp cache made exist iterate list twitter screen name checking wayback api available cache import request item initial http archiveorgwaybackavailable iterate list flagged twitter screen name open datatwitterhandleurlscsv f line f params url line r requestsget initial paramsparams rjson print itemsappend write url available archive file open dataavailurlstxt w f item item archivedsnapshots item closest item archivedsnapshots fwrite item archivedsnapshots closest url n end file twitterhandleurlscsv contains list internet archive url russian troll account archived internet archive unfortunately find russia troll account cached internet archive tiny sample overall account still able scrape tweet user ready scrape html internet archive cache extract tweet content make use beautifulsoup python package help u extract tweet data html first use chrome devtools inspect structure html seeing element contain data looking since cache taken different time structure html may changed need write code handle parsing different format found two version twitter user page cache one one used around code scraping data one version full code available import urllib import beautifulsoup import csv import request testing new version url http twittercomalwayshungrybae page requestsget url text soup beautifulsoup page htmlparser tweet soupfindall li attrs dataitemtype tweet tweet tweetobj tweetobj tweetid tget dataitemid tweetcontainer tfind div attrs class tweet tweetobj screenname tweetcontainerget datascreenname tweetobj permalink tweetcontainerget datapermalinkpath tweetcontent tweetcontainerfind p attrs class tweettext tweetobj tweettext tweetcontenttext tweetobj userid tweetcontainerget datauserid tweettime tweetcontainerfind span attrs class timestamp tweetobj timestamp tweettimeget datatimems hashtags tweetcontainerfindall attrs class twitterhashtag tweetobj hashtags tweetobj link ht hashtags htobj htobj tag htfind b text htobj archivedurl htget href tweetobj hashtags append htobj link tweetcontainerfindall attrs class twittertimelinelink li link liobj liget dataexpandedurl liobj url liget dataexpandedurl elif liget dataresolvedurllarge liobj url liget dataresolvedurllarge else liobj url litext liobj archivedurl liget href tweetobj link append liobj print tweetobj beautifulsoup allows u select html element specifying attribute match inspecting structure html page see bit tweet stored different html element know grab beautifulsoup build array tweet object parse tweet page tweetid screenname alwayshungrybae permalink tweettext happy super bowl sunday n superbowlfood userid timestamp hashtags tag superbowlfood archivedurl twittercomhashtagsuperbowlfood srchash link url archivedurl http url http large archivedurl extracted tweet write json file write tweet file import json open datatweetsfulljson w f jsondump tweetarr f ensureasciifalse sortkeystrue end finding tweet twitter account fraction tweet sent russian troll still much data u analyze reading every tweet make use graph database help u make sense data using able ask question hashtags used together frequently domain url shared tweet mention trump importing scraped tweet data ready insert several option importing data import loading json data passing parameter cypher query using python driver use simple graph data model treating hashtags link node graph well tweet user posted tweet datamodel import graphdatabase import json driver graphdatabasedriver bolt open datatweetsfulljson jsondata tweetarr jsonload jsondata importquery tweetarr tweet unwind tweet tweet merge u user userid tweetuserid create set uscreenname tweetscreenname merge tweet tweetid tweettweetid create set ttext tweettweettext tpermalink tweetpermalink merge u posted foreach ht tweethashtags merge h hashtag tag httag create set harchivedurl htarchivedurl merge hastag h foreach link tweetlinks merge l link url linkurl create set larchivedurl linkarchivedurl merge haslink l def addtweets tx txrun importquery tweetarrtweetarr driversession session sessionwritetransaction addtweets graph query data write query help make sense russian troll tweeting interesting query tweet tengop match u user posted tweet hastag h hashtag uscreenname tengop optional match haslink l link return common hashtags match u user posted tweet hastag ht hashtag return httag hashtag count num order num desc limit hashtag num jugendmitmerkel tagderjugend politics news sport merkel columbianchemicals worldelephantday crime hashtags used together frequently match hashtag hastag tweet hastag hashtag id id return count num order num desc limit num jugendmitmerkel tagderjugend tagderjugend worldelephantday jugendmitmerkel worldelephantday jugendmitmerkel dschungelkönig tagderjugend dschungelkönig merkel jugendmitmerkel merkel tagderjugend cdu jugendmitmerkel cdu tagderjugend tagderjugend thailand common domain shared tweet match tweet haslink u link replace replace uurl http http url return count num head split url order num desc limit num head split url pictwittercom bitly nn pbstwimgcom vkcom riafanru inforeactorru nevnovru goodspblivejournalcom graphql api addition querying using cypher directly also take advantage integration easily build graphql api tweet first define graphql schema type tweet tweetid id text string permalink string author user relation name posted direction hashtags hashtag relation name hastag direction link link relation name haslink direction type user userid id screenname string tweet tweet relation name posted direction type hashtag tag id archivedurl string tweet first int tweet relation name hastag direction type link url id archivedurl string type query hashtag tag id first int offset int hashtag graphql schema defines type field available data well entry point graphql service case single entry point hashtag allowing u search tweet hashtag integration graphql schema map graph database model translates arbitrary graphql query cypher allowing anyone query data graphql api without writing cypher implementing graphql server simply matter passing graphql query integration function resolver import const resolvers root entry point graphql service query fetch movie title substring hashtag object params ctx resolveinfo inspects graphql query schema generate single cypher query resolve graphql query assuming driver instance exists context query executed return object params ctx resolveinfo react app one advantage graphql api make easy build web mobile application consume graphql service make data easily searchable make simple react web app allows searching tweet hashtag searching tweet contain hashtag crime see russia troll account onlinecleveland tweeting fake news crime ohio making seem crime occurring cleveland would russia troll account tweeting crime cleveland leading election typically voter want tough crime politician elected vote post scraped tweet data internet archive imported analysis built graphql api exposing data simple grandstack app allowing anyone easily search tweet hashtag able find small fraction tweet posted russian twitter troll account continue explore option finding data code available github http githubcomjohnymontanarussiantwittertrolls
317,Lobsters,visualization,Data Visualization,Binder: an awesome tool for hosting Jupyter notebooks,https://jvns.ca/blog/2017/11/12/binder--an-awesome-tool-for-hosting-jupyter-notebooks/,binder awesome tool hosting jupyter notebook,pull request http mybinderorg panda cookbook binder jupyter notebook example notebook analyzing montreal bike path data made jupyter notebook easy share online sharing interactive copy important jupyterhub binder amazing binder http colaboratory,thanks pull request today learned thing called binder http mybinderorg binder tool let people easily launch interactive copy jupyter notebook stoked exists wanted forever panda cookbook binder need wait load click cookbook try jupyter notebook jupyter notebook formerly called ipython notebook awesome way combine code text image interactive document especially love data analysis basically life changing example notebook analyzing montreal bike path data made see code explanation output code one place jupyter notebook easy share online want share jupyter notebook internet super super easy least different service use github nbviewer nbviewer github done long time great nbviewer interactive show readonly version edit code experiment sharing interactive copy important used occasionally run free python intro data science workshop install panda jupyter notebook fun data analysis learn basic would go write bunch material workshop try write really good installation instruction advance go workshop someone running window prepare struggle installation everyone mostly survive install bunch software really suck trying get started new thing getting scientific python stack set pain though tool like anaconda definitely made lot easier today actually software designed exactly use case set jupyterhub server workshop attendee sign exist running workshop exists look awesome still need set server nontrivial seems way better supporting people installation issue binder amazing binder let easily host interactive jupyter notebook let anyone internet use interactively immediately us jupyterhub hood want try right go http launch githubcomjvnspandascookbook repository wait build click launch click cookbook click notebook play around quick tour ipython notebook notebook show basic feature apparently us kubernetes docker hood interesting must much much expensive run readonly service useful cool thing hope continues exist also colaboratory google kinda thing work github support chrome le exciting still cool
318,Lobsters,visualization,Data Visualization,Whiteboard tips and tricks,https://medium.com/graphicfacilitation/whiteboard-tips-and-tricks-92966fdef3fe,whiteboard tip trick,whiteboard tip trick drawing nice dotted line avoiding messy spot erasing unwanted element colour shading drawing drawing even level grid making sure text readable point room template multiple us going,whiteboard tip tricksover past several year using whiteboards intensely many way type medium proven useful variety task peer individual preparation thinking idea conversation people discus topic communication platform presentation workshop confidently state several easy use time powerful trick could boost efficiency daily use whiteboard hence share drawing nice dotted linesyou know guy dotted line help illustrate weak relationship missing link drawing tricky whiteboard producing nice looking dashed linesso first draw straight line turned dotted one wait ink dry use finger remove section line voila dotted line avoiding messy spot erasing unwanted elementsif tried trick hurried without letting ink dry get messy spot like one beware halfdried inkthis happens try remove ink fast solvent liquid evaporates whiteboard marker claimed drywiping implies let dry several second attempting wipe drying time vary manufacturer manufacturer rule thumb count three wipe usually work colour shading drawingsometimes might want emphasise part diagram stress thing make strong point color work great whiteboards usually color option available popular color range black red green blue also hard cover area color evenly result look nice neat overcome limitation technology developed approach work least highlight element different color create focusso start laying major drawing decide part requires emphasis select color try lay parallel line closely precisely next main line practice bit good careful overlapping main black color though lighter color usually dirtythis technique applied sophisticated shape well example show color shading may used mark role involvement certain process use multiple color forget provide color legendthe main conclusion need go crazy color use limited coloring wisely drawing even level gridsthere two difficult thing drawing come drawing large space like whiteboards one drawing big perfect circle rarely worry thing drawing long horizontal vertical line look levelmy personal analysis use grid whiteboards case like pareto serving need dynamic decision making either planning time schedule deciding option process would usually involve sticky note far sticky note popular two format common size sticky notestherefore empirically come universal format grid minimum cell size would standard inch sticky note need space eg anticipate sticky note single cell adjust size gridwith said ready discus method simple straightforward first need map future grid according cell size need case create grid cell size regular inch sticky note plot future grid using sticky note templatemove sticky note around get mapping future grid plot future grid using sticky note templateonce ready connect dot finalizing gridwith method get two bird price single stone get straight line pivotal point guide well grid capable hold standard sticky note easy move stickies around planning whatever want using making sure text readable point roomone important thing commonly overlooked make sure every participant session involving use whiteboard easily read written whiteboard put aside problem good handwriting issue choosing proper size lettersbut challenge control size letter word processing program easy set font size draw reliable measuring tool yourselfmy method implies using finger session start write three text sample progressing size one finger high two finger high three finger high walk till farthest end room ass legibility writingconsider various font size use finger sizing referencein case twofingers high fine larger room shortsighted people room might need larger threefingers high textsanother inherent advantage method easily check time session adjust writing template multiple usesthis method developed together colleague mine verify list issue people individual session since list issue tricky sensitive wanted make sure enable secure environment get know people really think issue challenge collect information quickly accurately able easily analyse result want use electronically enabled tool like spreadsheet wanted really engage people must something visual something people could interact withso came idea draw issue tree whiteboard ask interviewee map opinion template would state assumption around organisational issue would look like possible root cause backdrop assessmentwhen interviewee started session u would name top forget later contributing use colour map whether assumption would true false opinion individual assessment accomplished top backbone templatethen would erase individual information prepare board next interviewee would reiterate another individual assessment accomplished top templateonce completed interview would snapshot summary would assemble slide deck quickly browse look patternsof course example specific one main point use whiteboard support easy removal drawing whatever purpose smart sophisticated manner like back going way enrich use whiteboard even introducing additional dimension game use sticky note actor user journey method extremely helpful need dynamic explanation find handy training educational session problem solvingexcept sticky note whiteboard friend magnet specific using various object make visualization dynamicthe advantage using magnet obvious place replace use illustrate certain element part diagram etcyou limited imagination herethese thing wanted share hope like could use themwhat tip find useful tip know please share comment
320,Lobsters,visualization,Data Visualization,Feature Visualization,https://distill.pub/2017/feature-visualization,feature visualization,feature visualization attribution feature visualization optimization enemy feature visualization optimization objective optimization objective n x z k neuron channel layer class logits class probability visualize optimization diversity achieving diversity optimization learned prior interaction neuron random direction enemy feature visualization spectrum regularization three family regularization preconditioning parameterization preconditioning parameterization conclusion,growing sense neural network need interpretable human field neural network interpretability formed response concern matures two major thread research begun coalesce feature visualization attribution feature visualization answer question network part network looking generating example attribution young field neural network interpretability yet standardized terminology attribution gone many different name literature including feature visualization recent work seems prefer term like attribution saliency map study part example responsible network activating particular way article focus feature visualization feature visualization powerful tool actually getting work involves number detail article examine major issue explore common approach solving find remarkably simple method produce highquality visualization along way introduce trick exploring variation neuron react interact improve optimization process feature visualization optimization neural network generally speaking differentiable respect input want find kind input would cause certain behavior whether internal neuron firing final output behavior use derivative iteratively tweak input towards goal starting random noise optimize image activate particular neuron layer unit conceptually simple subtle challenge getting optimization work explore well common approach tackle section enemy feature optimization objective want example core question working example regardless whether searching dataset find example optimizing image create scratch wide variety option search different optimization objective show different part network looking n layer index x spatial position z channel index k class index neuronlayern x z channellayern z layerdeepdreamlayern class logitspresoftmax k class probabilitysoftmax k want understand individual feature search example high value either neuron individual position entire channel used channel objective create image article want understand layer whole use deepdream objective searching image layer find interesting want create example output class classifier two option optimizing class logits softmax optimizing class probability softmax one see logits evidence class probability likelihood class given evidence unfortunately easiest way increase probability softmax give class often make alternative unlikely rather make class interest likely experience optimizing presoftmax logits produce image better visual quality standard explanation maximizing probability work well push evidence class alternate hypothesis harder optimize softmax function understand sometimes issue adversarial example solution optimize logsumexp logits instead equivalent optimizing softmax generally tractable experience logsumexp trick seem better dealing raw probability regardless happens fixed strong regularization generative model case probability principled thing optimize objective mentioned scratch surface possible objective lot one could try particular note objective used style transfer teach u kind style content network understands objective used optimizationbased model inversion help u understand information model keep throw away beginning understanding objective interesting lot room work area visualize optimization optimization give u example input cause desired behavior bother look dataset example cause desired behavior turn optimization approach powerful way understand model really looking separate thing causing behavior thing merely correlate cause example consider following neuron visualized dataset example optimization optimization also advantage flexibility example want study neuron jointly represent information easily ask particular example would need different additional neuron activate flexibility also helpful visualizing feature evolve network train limited understanding model fixed example dataset topic like one would much harder explore hand also significant challenge visualizing feature optimization following section examine technique get diverse visualization understand neuron interact avoid high frequency artifact diversity example show u full picture create example optimization something need careful entirely possible genuine example still mislead u showing u one facet feature represents dataset example big advantage looking dataset find diverse example give u one activating neuron intensely look across whole spectrum activation see activates neuron different extent contrast optimization generally give u one extremely positive example creative negative example well way optimization could also give u diversity achieving diversity optimization given feature network may respond wide range input class level example classifier trained recognize dog recognize closeup face well wider profile image even though quite different visual appearance early work wei et al attempt demonstrate intraclass diversity recording activation entire training set clustering optimizing cluster centroid revealing different facet class learned different approach nguyen yosinski collaborator search dataset diverse example use starting point optimization process idea initiate optimization different facet feature resulting example optimization demonstrate facet recent work combine visualizing class generative model sample diverse example first approach limited success generative model approach work well discus section regularization learned prior bit tricky find simple way achieve diversity adding diversity term article use approach based idea artistic style transfer following work begin computing gram matrix ggg channel gi jg j gi dot product flattened response filter iii filter jjj gi ylayern x x j g j sum x text layer ntext x cdot text layer ntext x j gi x x j compute diversity term negative pairwise cosine similarity pair visualization vec ga gb ga gb c text diversity sum sum bneq frac text vec ga cdot text vec gb text vec ga text vec gb maximize diversity term jointly regular optimization objective one objective push multiple example different diversity term take variety form much understanding benefit yet one possibility penalize cosine similarity different example another use idea style transfer force feature displayed different style lower level neuron diversity term reveal different facet feature represents simple optimization optimization diversity reveals four different curvy facet layer unit dataset example diverse feature visualization allow u closely pinpoint activates neuron degree make looking dataset example check prediction input activate neuron example let examine simple optimization result simple optimization looking isolation one might infer neuron activates top dog head optimization show eye downward curved edge looking optimization diversity however see optimization result include eye also one includes upward curved edge thus broaden expectation neuron activates mostly fur texture checking hypothesis dataset example show broadly correct note spoon texture color similar enough dog fur neuron activate optimization diversity layer unit dataset example effect diversity even striking higher level neuron show u different type object stimulate neuron example one neuron responds different kind ball even though variety appearance simple optimization optimization diversity reveals multiple type ball layer unit dataset example simpler approach number shortcoming one pressure make example different cause unrelated artifact eye appear additionally optimization may make example different unnatural way example example one might want see example soccer ball clearly separated type ball like golf tennis ball dataset based approach wei et al split feature apart naturally however may helpful understanding model behave different data diversity also start brush fundamental issue example represent mostly coherent idea also neuron represent strange mixture idea neuron responds two type animal face also car body simple optimization optimization diversity show cat fox also car layer unit dataset example example like suggest neuron necessarily right semantic unit understanding neural net interaction neuron neuron right way understand neural net real life combination neuron work together represent image neural network helpful way think combination geometrically let define activation space possible combination neuron activation think individual neuron activation basis vector activation space conversely combination neuron activation vector space framing unifies concept neuron combination neuron vector activation space allows u ask expect direction basis vector interpretable direction vector space szegedy et al found random direction seem meaningful direction basis vector recently bau zhou et al found direction basis vector interpretable often random direction experience broadly consistent result find random direction often seem interpretable lower rate basis direction dataset example optimized example random direction activation space direction shown handpicked interpretability also define interesting direction activation space arithmetic neuron example add black white neuron mosaic neuron obtain black white version mosaic reminiscent semantic arithmetic word embeddings seen generative model latent space jointly optimizing two neuron get sense interact example show u neuron jointly represent image better understand neuron interact also interpolate optimization objective linear interpolation individual channel objective get interpolation look better also add small alignment objective encourages lower layer activation similar additionally use combination separate shared image parameterizations make easier optimization algorithm cause object line still giving freedom create image need similar interpolating latent space generative model starting scratch surface neuron interact truth almost clue select meaningful direction whether even exist particularly meaningful direction independent finding direction also question direction interact example interpolation show u small number direction interact reality hundred direction interacting enemy feature visualization want visualize feature might optimize image make neuron fire unfortunately really work instead end kind neural network optical illusion image full noise nonsensical highfrequency pattern network responds strongly even carefully tune learning rate get noise optimization result enlarged show detail artifact pattern seem image kind cheating finding way activate neuron occur real life optimize long enough tend see neuron genuinely detects well image dominated high frequency pattern pattern seem closely related phenomenon adversarial example fully understand high frequency pattern form important part seems strided convolution pooling operation create highfrequency pattern gradient strided convolution pooling creates checkerboard pattern gradient magnitude backprop highfrequency pattern show u optimization based visualization freedom constraint appealing doubleedged sword without constraint image end adversarial example certainly interesting want understand model work real life need somehow move past spectrum regularization dealing high frequency noise one primary challenge overarching thread feature visualization research want get useful visualization need impose natural structure using kind prior regularizer constraint fact look notable paper feature visualization one main point usually approach regularization researcher tried lot different thing think approach living spectrum based strongly regularize model one extreme regularize end adversarial example opposite end search example dataset run limitation discussed earlier middle three main family regularization option erhan et al introduced core idea minimal regularization szegedy et al adversarial example visualizes dataset example mahendran vedaldi introduces total variation regularizer reconstructs input representation nguyen et al explores counterexample introduces image blurring mordvintsev et al introduced jitter multiscale explored gmm prior class øygard et al introduces gradient blurring also us jitter tyka et al regularizes bilateral filter also us jitter mordvintsev et al normalizes gradient frequency also us jitter nguyen et al paramaterizes image gan generator nguyen et al us denoising autoencoder prior make generative model three family regularization let consider three intermediate category regularization depth frequency penalization directly target high frequency noise method suffer may explicitly penalize variance neighboring pixel total variation implicitly penalize highfrequency noise blurring image optimization step think blurring fourier space equivalent adding scaled penalty objective penalizing fouriercomponent based frequency unfortunately approach also discourage legitimate highfrequency feature like edge along noise slightly improved using bilateral filter preserve edge instead blurring work us similar technique reduce high frequency gradient accumulate visualization technique way similar way radically different examine next section preconditioning parameterization frequency penalization directly target high frequency noise transformation robustness try find example still activate optimization target highly even slightly transform even small amount seems effective case image especially combined general regularizer highfrequencies concretely mean stochastically jitter rotate scale image applying optimization step stochastically transforming image applying optimization step suppresses noise learned prior previous regularizers use simple heuristic keep example reasonable natural next step actually learn model real data try enforce strong model becomes similar searching dataset approach produce photorealistic visualization may unclear came model visualized came prior one approach learn generator map point latent space example data gan vae optimize within latent space alternative approach learn prior give access gradient probability allows jointly optimize prior along objective one optimizes prior probability class one recovers generative model data conditioned particular class finally wei et al approximate generative model prior least color distribution penalizing distance patch output nearest patch retrieved database image patch collected training data preconditioning parameterization previous section saw method reduced high frequency gradient rather visualization clear really regularizer resists high frequency still allows form gradient consistently push regularizer transforming gradient like transforming gradient like actually quite powerful tool called preconditioning optimization think steepest descent optimize objective another parameterization space different notion distance gradient blurring equivalent gradient descent different parameterization image space high frequency dimension stretched make moving direction slower gradient laplacian pyramid normalization kind adaptive learning rate approach space change direction descent steepest fast optimization move direction change minimum many local minimum stretch shrink basin attraction changing one optimization process fall result using right preconditioner make optimization problem radically easier choose preconditioner give u benefit good first guess one make data decorrelated whitened case image mean gradient descent fourier basis point profound fact fourier transform long correlation consistent across spatial position correlation pixel left neighbor across position image fourier coefficient independent variable see note spatially consistent correlation expressed convolution convolution theorem becomes pointwise multiplication fourier transform frequency scaled equal energy note careful get color decorrelated fourier transforms decorrelates spatially correlation still exist color address explicitly measure correlation color training set use cholesky decomposition decorrelate compare direction steepest decent decorrelating color correlated color decorrelated color let see using different measure distance change direction steepest descent regular gradient quite different direction steepest descent metric decorrelated space three direction steepest descent different notion distance direction valid descent direction objective see radically different notice optimizing decorrelated space reduces high frequency using increase using decorrelated descent direction result quite different visualization hard really fair comparison hyperparameters resulting visualization seem lot better develop faster combining preconditioning transformation robustness improves quality even unless otherwise noted image article optimizing decorrelated space suite transformation robustness technique image optimized step colordecorrelated fouriertransformed space using adam learning rate used following transformation given order step optimization padding input pixel avoid edge artifact jittering pixel scaling factor randomly selected list rotating angle randomly selected list degree jittering second time pixel cropping padding preconditioner merely accelerating descent bringing u place normal gradient descent would brought u patient enough also regularizing changing local minimum get attracted hard tell sure one hand gradient descent seems continue improving exponentially increase number optimization step converged moving slowly hand turn regularizers preconditioner seems reduce highfrequency pattern conclusion neural feature visualization made great progress last year community developed principled way create compelling visualization mapped number important challenge found way addressing quest make neural network interpretable feature visualization stand one promising developed research direction feature visualization never give completely satisfactory understanding see one fundamental building block combined additional tool empower human understand system remains still lot important work done improving feature visualization issue stand include understanding neuron interaction finding unit meaningful understanding neural net activation giving holistic view facet feature
321,Lobsters,visualization,Data Visualization,Making WebGL Dance,http://acko.net/files/fullfrontal/fullfrontal/webglmath/online.html,making webgl dance,bresenham line scanline rendering snap pixel antialiasing subpixel accuracy sample vector world raster world sampling nearest neighbour filter bilinear filter aliasing anisotropic filtering sampling theorem nyquist frequency jaggies sampled edge antialiasing aa blur thing pixel coverage box filter supersampling ssaa multisampling msaa sampled box filter bilinear filter distance function pixelwide gradient aa filter sampling subpixel aa rgb height map perlin derivative noise depth zbuffer shadow map normal deferred lighting affine transforms rotation scaling skewing parallel line vector basis new basis disassemble reassemble matrix matrixvector multiply disassemble reassemble matrixmatrix multiplication ordinary space projective space z vector translation scale xy vector perspective projective transform matrix object space world space world space view space view space screen space back vertex shader fragment shader normal map color map normal mapping parallax mapping wrong camera uniform correct camera uniform,bresenham line scanline rendering snap pixel antialiasing subpixel accuracy sample vector world raster world sampling nearest neighbour filter bilinear filter aliasing anisotropic filtering sampling theorem nyquist frequency jaggies sampled edge antialiasing aa blur thing pixel coverage box filter supersampling ssaa multisampling msaa sampled box filter bilinear filter distance function pixelwide gradient aa filter samplinggaussian blur mip mapping anisotropic filter subpixel aa rgb webkitfontsmoothing pixel deadlong live pixel height map perlin derivative noise depth zbuffer shadow map normal deferred lighting affine transforms rotation scaling skewing parallel line vector basis new basis disassemble reassemble matrix begin bmatrix class mjblue class mjgreen class mjblue class mjgreen end bmatrix matrixvector multiply class mjpurple vec v mathbf cdot class mjorangered vec v begin bmatrix class mjpurple x class mjpurple end bmatrix begin bmatrix class mjblue class mjgreen class mjblue class mjgreen end bmatrix cdot begin bmatrix class mjorangered x class mjorangered end bmatrix disassemble reassemble class mjpurple vec v mathbf cdot class mjorangered vec v begin bmatrix class mjpurple x class mjpurple end bmatrix class mjorangered x cdot begin bmatrix class mjblue class mjblue end bmatrix class mjorangered cdot begin bmatrix class mjgreen class mjgreen end bmatrix matrixmatrix multiplication class mjpurple vec v mathbf cdot class mjorangered vec v mathbf r cdot mathbf cdot class mjorangered vec v begin bmatrix class mjpurple x class mjpurple end bmatrix begin bmatrix class mjblue class mjgreen class mjblue class mjgreen end bmatrix begin bmatrix class mjorangered x class mjorangered end bmatrix begin bmatrix class mjblue class mjgreen class mjblue class mjgreen end bmatrix begin bmatrix class mjblue class mjgreen class mjblue class mjgreen end bmatrix begin bmatrix class mjorangered x class mjorangered end bmatrix class mjpurple vec v mathbf cdot class mjorangered vec v begin bmatrix class mjpurple x class mjpurple class mjpurple z end bmatrix begin bmatrix class mjblue class mjgreen class mjred g class mjblue b class mjgreen e class mjred h class mjblue c class mjgreen f class mjred end bmatrix begin bmatrix class mjorangered x class mjorangered class mjorangered z end bmatrix class mjpurple vec v mathbf cdot class mjorangered vec v begin bmatrix class mjpurple x class mjpurple class mjpurple z class mjpurple w end bmatrix begin bmatrix class mjblue class mjgreen e class mjred class mjindigo class mjblue b class mjgreen f class mjred j class mjindigo n class mjblue c class mjgreen g class mjred k class mjindigo class mjblue class mjgreen h class mjred l class mjindigo p end bmatrix begin bmatrix class mjorangered x class mjorangered class mjorangered z class mjorangered w end bmatrix ordinary space projective space z vector translation scale xy vector perspective projective transform xyz matrix translation perspective begin bmatrix class mjblue class mjgreen e class mjred class mjindigo class mjblue b class mjgreen f class mjred j class mjindigo n class mjblue c class mjgreen g class mjred k class mjindigo class mjorangered class mjorangered h class mjorangered l end bmatrix object space world space world space view space view space screen space back vertex shader global variable uniform projectionmatrix uniform viewmatrix uniform modelmatrix per vertex attribute attribute position per vertex code void main glposition projectionmatrix viewmatrix modelmatrix position fragment shader global variable uniform color uniform direction interpolated pervertex quantity varying vnormal per fragment code void main float diffuse dot vnormal direction glfragcolor diffuse color normal map color map global variable uniform colormap interpolated pervertex quantity varying vuv per fragment code void main glfragcolor colormap vuv specular map normal map normal mapping parallax mapping wrong camera uniform correct camera uniform
322,Lobsters,visualization,Data Visualization,js2flowchart - visualization library to convert any JavaScript code into beautiful SVG flowchart,https://github.com/Bogdan-Lyashenko/js-code-to-svg-flowchart,visualization library convert javascript code beautiful svg flowchart,underthehoodreactjs bliashenko multifiles support checkout codecrumbs project building right codepen sample code editor download svg file defined abstraction level custom abstraction level support presentation generator defined flow tree modifier destruction modifier custom flow tree modifier support flow tree ignore filter focus node entire code logic branch blur node entire code logic branch defined style theme support custom theme support custom color style support explaindocument learn create cli api example doc directory example make simpler run without boilerplate default defined abstraction level custom abstraction level label advanced function dependency source code entrydefinitionsmapjs presentation generator defined color theme custom color theme custom style shape tree editor flow tree modifier custom modifier debug rendering tool hood babylon flowtreebuilder svgrender thing planned todo contributing license version,working underthehoodreactjs spent enormous amount time creating scheme change code flowchart affect entire scheme instantly forcing move align broken piece repeated manual work like project follow twitter bliashenko hear thing building multifiles support checkout codecrumbs project building right imagine library take j code generate svg flowchart work client server allows easily adjust style scheme context demonstrate code logic different abstraction level highlighting destructing whole block custom modifier need etc tool generating beautiful svg javascript code get started install package npm yarn add try right away codepen sample play demo check live code editor paste code download svg file flowchart take j code return svg flowchart work clientserver support main feature defined abstraction level render importexports classesfunction name function dependency learnexplain code step step custom abstraction level support create one presentation generator generate list svgs order different abstraction level defined flow tree modifier map wellknown apis like ie map foreach filter loop structure scheme etc destruction modifier replace block code one shape scheme custom flow tree modifier support create one flow tree ignore filter omit code node completely ie log line focus node entire code logic branch highlight important section scheme blur node entire code logic branch hide lessimportant stuff defined style theme support choose one like custom theme support create one fit context color better custom color style support provides handy api change specific style without boilerplate use case explaindocument code flowchart learn code visual understanding create flowchart process simply described valid j syntax cli simply generate svg file local j file using cli tool install globally running yarn global add project running yarn add dev open terminal navigate needed directory j file want visualize eg myprojectmainjs run command installed globally mainjs add packagejson file script run either npm yarn yarn run mainjs script executed observe log svg file created svg file placed new directory near j file api example find source example explained doc directory example library included explicitly script tag accessed global variable window make simpler run without boilerplate feel free use module well babel webpack local server configured access apis injected html page const convertcodetoflowtree convertflowtreetosvg import nodemodules import convertcodetoflowtree convertflowtreetosvg way import way default code function classic case binary search const code function indexsearch list element let currentindex currentelement minindex maxindex listlength minindex maxindex currentindex mathfloor minindex maxindex currentelement list currentindex currentelement element return currentindex currentelement element minindex currentindex currentelement element maxindex currentindex return let convert svg simplest way const svg code result need modify default behavior split two building block flow tree building shape printing const convertcodetoflowtree convertflowtreetosvg const flowtree convertcodetoflowtree code const svg convertflowtreetosvg flowtree xml string need full control create main instance manually const createflowtreebuilder createsvgrender const flowtreebuilder createflowtreebuilder svgrender createsvgrender const flowtree flowtreebuilderbuild code shapestree svgrenderbuildshapestree flowtree const svg shapestreeprint xml string see example running check complete source code defined abstraction level called abstraction level let say would like omit detail like eg given module interested module export class contains list defined level accessible abstractionlevels interface function functiondependencies class import export let take example module import export code printutiljs const code import format trim formattier import log logger const data export default print list listforeach consolelog export const formatstring str formatter str export const maxstrlength need instantiate flowtreebuilder assign abstraction level const abstractionlevels createflowtreebuilder convertflowtreetosvg const flowtreebuilder createflowtreebuilder pas one level multiple level flowtreebuildersetabstractionlevel abstractionlevelsimport abstractionlevelsexport const flowtree flowtreebuilderbuild code const svg convertflowtreetosvg flowtree result see example running check complete source code custom abstraction level label advanced want level api endpoint flowtreebuildersetabstractionlevel provide configuration object example look code function dependency abstraction level check export export const getfunctiondependencieslevel defined tokentypescallexpression custom getcustomfunctiondeclaration getcustomassignmentexpression getcustomvariabledeclarator format data need pas flowtreebuildersetabstractionlevel defined tokentypescallexpression custom getcustomfunctiondeclaration getcustomassignmentexpression getcustomvariabledeclarator behind getcustomassignmentexpression example token parsing config type tokentype see type tokentypes map getname path extract name token ignore path return true want omit entry body true contain nested block check token parsing configs source code entrydefinitionsmapjs presentation generator learn code good go different abstraction level take look module export function class contains etc submodule createpresentationgenerator generate list svgs order different abstraction level let take next code example const code import format utilstring function formatname name name return noname return format name class animal constructor breed thisbreed breed getbreed return thisbreed setname name thisnameexist return thisname name class man extends animal sayname consolelog name thisname export default man pas const createpresentationgenerator const presentationgenerator createpresentationgenerator code const slide presentationgeneratorbuildslides array svgs result one slide switch slide prevnext button see example running check complete source code defined color theme apply different theme svgrender instance simply calling eg svgrenderapplylighttheme apply light scheme next predefined color scheme default applydefaulttheme blackandwhite applyblackandwhitetheme blurred applyblurredtheme light applylighttheme let simple code sample switch statement mozzila web doc const code function switchsamplefrommdn const foo switch foo case consolelog negative break case consolelog case consolelog return default consolelog default apply scheme render const createsvgrender convertcodetoflowtree const flowtree convertcodetoflowtree code svgrender createsvgrender applying another theme render svgrenderapplylighttheme const svg svgrenderbuildshapestree flowtree print result see example running check complete source code custom color theme well would like different color sure example light theme color created manually svgrenderapplycolorbasedtheme strokecolor defaultfillcolor fff textcolor arrowfillcolor rectanglefillcolor bbdefb rectangledotfillcolor functionfillcolor rootcirclefillcolor loopfillcolor conditionfillcolor destructednodefillcolor classfillcolor debuggerfillcolor exportfillcolor throwfillcolor ffccbc tryfillcolor objectfillcolor callfillcolor debugmodefillcolor custom style need different style color svgrenderapplytheme apply style current theme overriding behaviour need let take example return statement svgrenderapplytheme returnstatement fillcolor red roundborder please check definition defaultbasetheme see possible shape name property shape tree editor submodule modifying shape tree called shapestreeeditor provides next interface findshape applyshapestyles blur focus blurshapebranch focusshapebranch print let learn usage example well code devmode hook const code const dostuff stuff stuff devflag log perf start dorecursion log perf end return dorecursion end else throw new error stuff return null want blur devbranch condition interferes code readability const convertcodetoflowtree createsvgrender createshapestreeeditor const flowtree convertcodetoflowtree code svgrender createsvgrender shapestree svgrenderbuildshapestree flowtree const shapestreeeditor createshapestreeeditor shapestree shapestreeeditorblurshapebranch shape shapegetname devflag const svg shapestreeeditorprint result see example running check complete source code flow tree modifier submodule modifying flow tree called flowtreemodifier allows apply modifier defined separately existing flow tree let take simple usecase want change name title treenodes define modifier actually behaviour already know need modify flow tree let look array iterators like foreach map know behave like loop right let treat loop const code function print list const newlist listmap return newlistforeach consoledebug iteration start consolelog consoledebug iteration end const createflowtreebuilder createflowtreemodifier convertflowtreetosvg modifierpresets const flowtreebuilder createflowtreebuilder flowtree flowtreebuilderbuild code const flowtreemodifier createflowtreemodifier flowtreemodifiersetmodifier flowtreemodifierapplytoflowtree flowtree const svg convertflowtreetosvg flowtree result see iterators handled loop foreach omit functioncallback well see example running check complete source code one defined modifier node destruction take block specified destruct block flowtreemodifierdestructnodetree node nodenameindexof foreach print list want custom modifier flowtreemodifierregisternewmodifier node nodenameincludes hello name world debug rendering want select shape applying special style want unique id selector pas debug flag print const convertcodetoflowtree createsvgrender createshapestreeeditor const svgrender createsvgrender const shapestree svgrenderbuildshapestree convertcodetoflowtree code const shapestreeeditor createshapestreeeditor shapestree shapestreeeditorapplyshapestyles shape shapegetnodepathid nodeid thisnamentccp fillcolor const svg shapestreeeditorprint debug true result see example running check complete source code tool thanks lucasbadico got visual studio extension check hood main stage get ast code babylon parser used develops babel team convert ast flowtree remove combing node flowtreebuilder create svg object based flowtree svgrender print svg object xml string thing planned todo full cli support jsx support flow support typescript support multi file support webstorm plugin chrome extension devtools contributing feel free file issue nt work code sample please add breaking line code possible identify thing think improved highly appreciated join help todos thanks license mit license version first shoot take easy check version number npm badge
323,Lobsters,visualization,Data Visualization,"Vector Fields, Math and Art",https://anvaka.github.io/fieldplay/,vector field math art,,
325,Lobsters,visualization,Data Visualization,Practical applications of the dot product,https://medium.com/vertices-and-faces/practical-applications-of-the-dot-product-c5503c2e454e,practical application dot product,practical application dot product cover projecting vector onto vector math notation refresher proof step resolving cosine cosine trigonometric identity step restructure dot product http step calculate projection vector finding orthogonal component vector another vector finding shortest distance point segment link interested content like hiring http appstandardcyborgcomcareers,practical application dot producti recently started standard cyborg ramping computational geometry started diving lower level source code see tick post document learning dot productwhat coverprojecting vector onto vectorfinding orthogonal component vector another vectorfinding shortest distance point segmentprojecting vector onto vectorprojecting vector one simpler practical thing dot productbelow proof explaining demo work shorter related demo proofsmath notation refresheras courtesy touched math notation linear algebra notation using aka hat known unit vectorprooflet orange blue vertex axis vector orange green offshoot vector largest proof take stepsstep resolving cosinewe angle θ vector angle scenario assuming π θ π θ θ θ θ πin first scenario θ first focus θ sake brevity going handwave existence right triangle projection vector please see gist end robust proofvisualization right triangleby cosine trigonometric identity θ build similar triangle yield co θ equationfor second scenario θ θ offshoot vector orthogonal thus projection vector zero vector still use co θ equationfor third scenario π θ θ π focus θ π build right triangle similar φ cosine trigonometric identity right trianglesdefinition supplementary anglessubstitution φequivalence via cosine identitiesmultiplication π θ case build similar triangle yield co θ equationnow resolve cosine scenario consolidate co θ let otherwise let allows u restate new cosine definition directionadditionally define projection unit vector using piecewise axis projection unit vector definitiondirection based axis projection unit vector definitionstep restructure dot productto make final derivation easier going restructure dot product little first let start writing knowns definition unit vectorsdot product derivation http knowns restructure axis projection vector follows taken knowns abovesubstitute cosine equation previous stepcancel fractionsdivide side direction axis vector lengthstep calculate projection vectortaken knowns abovesubstitute unit vector axis projection length previous stepscancel directionssubstitute unit vector definitionsimplify formula vector time scalarand go formula projection vector finding orthogonal component vector another vectorwith calculation derive orthogonal component vector respect another vectorthis practical computing angle vector around given axis dimensional space eg rotation around fixed axis proof already resolved vector via right triangle construction opposite edge ie green line result use vector addition resolve orthogonal vector construction vector via right trianglesubtraction rearrangement vectorsfor sanity also think vector space axis actual axis definition offshoot term vectorsdefinition axisprojection term vectorssubtraction definition proof orthogonalityfinding shortest distance point segmentfor proof solve piecewise fashion scenario point behind segmentour point segmentour point ahead segmentin behind ahead scenario shortest distance closest vertex scenario shortest distance perpendicular line segment pointto determine scenario point fall find projection vector compare segment vector simplify little comparison scalar vectorsequations previous resolution projecting vector onto vector ratio axis projection axis vectorsthis ratio tell u much offshoot vector projecting onto axisif ratio negative know point behind segment length distance orange point green point otherwise ratio greater know projection vector longer axis vector thus point ahead segment length distance blue point green point otherwise ratio inclusively projection vector fall onto segment thus shortest distance line perpendicular line calculated via orthogonal component vector ideal length definitionvector addition expansionsubstitution axis projection calculationwe shorten little bit variable reuse substitution ratio calculated abovehere final solution piecewise format linksinterested content like hiring http appstandardcyborgcomcareers
326,Lobsters,visualization,Data Visualization,Learn Git Branching,https://learngitbranching.js.org/,learn git branching,,application simulates git repository browser need j use app try enabling refreshing page thanks
327,Lobsters,visualization,Data Visualization,A visualisation of Langton's ant,http://langton-ant.s3-website-eu-west-1.amazonaws.com,visualisation langton ant,,
328,Lobsters,visualization,Data Visualization,The Million-Key Question—Investigating the Origins of RSA Public Keys,https://www.usenix.org/system/files/conference/usenixsecurity16/sec16_paper_svenda.pdf,millionkey origin rsa public key,,obj stream k g jx w p uk q endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream b p endstream endobj obj stream endstream endobj obj stream sce bq
329,Lobsters,visualization,Data Visualization,Visualizing Rails logs With Jupyter Notebook,http://blog.scoutapp.com/articles/2017/10/13/visualizing-rails-logs-with-jupyter-notebook,visualizing rail log jupyter notebook,visualizing rail log jupyter notebook post show sliceanddice rail application log uncover performance issue edge setup jupyter notebook rail app lograge logstashevent logstashlogger quick start adding custom field scout accumulate field thread local variable subscribe process controller event see subscriber source jupyter notebook installing jupyter notebook follow guide importing rail log jupyter notebook file notebook file markdown format highlevel view data finding request one user know takeaway identify trigger,visualizing rail log jupyter notebook rail app appears humming along fine blue one important customer email support team site loading slowly something frantically browse around site everything seems fine doublecheck chart thing look normal customer trying trick monitoring broken post show sliceanddice rail application log uncover performance issue edge new super power able find needle haystack setup rail log data analysis recipe two part couple ruby gem log request machinereadable format json jupyter notebook opensource web app run locally analyze rail logging data going use python ruby data analysis python excellent collection data science tool first exposure python via jupyter notebook nt need know inner working python extract data need start updating rail app log json format rail app default rail log file nt machinefriendly change gem lograge logstashevent logstashlogger lograge let u shrink large number line generated default rail logger log single request single line methodget formatjson controllerjobscontroller actionshow great start json output would easier parse use logstash output format request becomes use logstash format lograge install gem logstashevent quick start add following gemfile configure lograge via configinitializerslogragerb file adding custom field back original problem single user reporting performance problem would great could find every request user sent app well tell u definitively rail app slow log custom field scout accumulate field thread local variable accumulate important field store thread local variable via beforefilter store current user subscribe processactionactioncontroller event event sent rail completes serving request subscribe adding additional field collected processing request see subscriber source logging data request json format ready move onto analyzing data use jupyter notebook jupyter notebook jupyter notebook bit like google doc data scientist write code snippet leveraging panda python library generate helpful analysis visualization data rail log file installing jupyter notebook follow guide install jupyter notebook required data science library importing rail log jupyter grabbing rail log file generated step fire jupyter notebook create new notebook ultimately want import data panda dataframe dataframe store request data tabular data structure query sort data science like spreadsheet set column row data column utilizing jsonnormalize function import rail log panda dataframe rather walking required plumbing point jupyter notebook load data notebook file notebook file markdown format highlevel view data loading data panda dataframe see get work first sanity check data via dataframehead got column row request looking good next look data aggregate use dataframedescribe analyzes column data set one shot learned rail app processed request oneday period mean time spent database perrequest m mean request duration m histogram response time filtering slow outlier surface nothing alarming aggregate data monitoring nt broken important customer dave truthful response time finding request one user drag dave bus let see performance app perspective going filter data see request experienced dave scoutapmcom able app useremail custom field nothing crazy dave scoutapmcom request execute m let look controlleractions user accessing response duration second getting somewhere appsdata frequent slow controlleraction user endpoint load monitoring data app specified via params id critical part app ui slow experience feel pokey dave mischievous might specific apps potentially data load slower one app slow request appsdata params id know using process learned specific condition dave seeing majority slow request accessing appsdata controlleraction using params id dave wrong overall monitoring data nt wrong hard see behavior one user much data takeaway performance woe seem random first however many problem easily reproducible identify trigger jupyter notebookpandas loweffort approach digging rail log
330,Lobsters,visualization,Data Visualization,The Python Graph Gallery,https://python-graph-gallery.com/,python graph gallery,,
331,Lobsters,visualization,Data Visualization,Analysing C# code on GitHub with BigQuery,http://www.mattwarren.org/2017/10/12/Analysing-C-code-on-GitHub-with-BigQuery/,analysing c code github bigquery,analysing c code github bigquery open source code github available querying run terabyte query month free c fhbigquery githubextractscontentsnetcs gb tab space banned okay case k r allman c devs like put brace c developer like writing functional code statement widely used nuget package often included net project many line code loc typical c file widely thrown asyncawait thing c developer like using keyword updated popular repository c code many file repository popular c name foocs programcs something else common file name gist regular expression two problem tab space space tab us space default github repository billion file terabyte code space tab banned okay case query used k r allman c devs like put brace query used c developer like writing functional code lambda operator query statement widely used full result available pointed nuget package often included net project contentsnetpackagesconfig jsonnet many line code loc typical c file raw data available clean code widely thrown query asyncawait thing asynchronous code much easier c developer like using keyword update jairbubbles pointing many file repository popular repository c code query used popular c name regex correct foocs programcs something else common file name hacker news rcsharp information bigquery work put end blog post bigquery analysis programming language,analysing c code github bigquery oct word year ago google made open source code github available querying within bigquery enough run terabyte query month free post going looking c source code github find handily smaller c dataset made available bigquery charged per byte read called fhbigquery githubextractscontentsnetcs unique c file line code loc gb data pretty comprehensive set c source code rest post attempt answer following question tab space region banned okay case k r allman c devs like put brace c developer like writing functional code moving onto le controversial c topic using statement widely used nuget package often included net project many line code loc typical c file widely thrown exception asyncawait thing c developer like using var keyword updated end looking repository individual c file popular repository c code many file repository popular c class name foocs programcs something else common file name want try query find mistake available gist good chance regular expression miss edgecases regular expression two problem people confronted problem think know use regular expression two problem tab space entire dataset file include one line starting tab space tab tab space space total clearly c developer github prefer space tab let endless debate continue think explained fact visual studio us space default want see c compare programming language take look github repository billion file terabyte code space tab region banned okay case turn impressive c file million contain least one region statement query used hoping lot file autogenerated tool k r allman c devs like put brace c developer overwhelmingly prefer putting opening brace line query used separate line line line initializer total brace total code line initializers include code like new name new c developer like writing functional code slightly unscientific wanted see widely lambda operator used c code query yes know want write functional code net really use f c become functional year wanted see much code taking advantage raw percentile percentile line using lambda say c code github us le line c file lambda almost line use line file lambda line line code pretty impressive using statement widely used bit substantial widely used using statement c code top look like full result available using statement count using systemcollectionsgeneric using system using systemlinq using systemtext using systemthreadingtasks using systemruntimeinteropservices using systemio using systemruntimecompilerservices using systemcollections using systemreflection however pointed top included default add new file visual studio many people remove applies systemruntimeinteropservices systemruntimecompilerservices include assemblyinfocs default adjust list take account top look like using statement count using systemio using systemcollections using systemreflection using systemdiagnostics using systemthreading using systemcomponentmodel using systemweb using systemwindowsforms using systemglobalization using systemdrawing finally interesting list top using statement system microsoft window namespaces using statement count using nunitframework using unityengine using xunit using newtonsoftjson using newtonsoftjsonlinq using moq using unityengineui using unityeditor using amazonruntime using nuget package often included net project turn also separate dataset containing packagesconfig file github called contentsnetpackagesconfig entry querying see jsonnet clear winner package count newtonsoftjson microsoftwebinfrastructure microsoftaspnetrazor microsoftaspnetwebpages microsoftaspnetmvc entityframework microsoftaspnetwebapiclient microsoftaspnetwebapicore microsoftnethttp jquery microsoftbclbuild microsoftbcl nunit owin microsoftowin microsoftaspnetwebapiwebhost webgrease microsoftaspnetweboptimization microsoftaspnetwebapi many line code loc typical c file c developer prone creating huge file go one line well fortunately minority u note yaxis line code logarithmic raw data available oh dear uncle bob going happy whilst file loc le clean code case wondering top longest c file file line marmotinputtestmarmotcs srccodenamegeneratorwordreposlastnamesrepositorycs srcml mwbsdictionarydefaultworddictionarycs urduproofreaderurdulibsutilscs cssstylecs widely thrown exception interesting result query instance knew many applicationexceptions thrown notsupportedexception high list bit worrying exception count throw new argumentnullexception throw new argumentexception throw new notimplementedexception throw new invalidoperationexception throw new argumentoutofrangeexception throw new notsupportedexception throw new httpresponseexception throw new validationexception throw new objectdisposedexception throw new applicationexception throw new unauthorizedexception throw new formatexception throw new serializationexception throw new ioexception throw new indexoutofrangeexception throw new nullreferenceexception throw new invaliddataexception throw new apiexception throw new invalidcastexception asyncawait thing addition async await keywords c language make writing asynchronous code much easier public async task int getdotnetcountasync suspends getdotnetcountasync allow caller web server accept another request rather blocking one var html await httpclientdownloadstringasync http dotnetfoundationorg return regexmatches html net count much used using query select count count fhbigquery githubextractscontentsnetcs regexpmatch content rsasyncssawaits found file least one usage async await c developer like using var keyword le use async await file least one usage var keyword update thanks jairbubbles pointing var regex wrong supplying fixed version use async await file least one usage var keyword many file repository repository c file file le file le file le yaxis file logarithmic top largest repository number c file shown repository file http http http githubcommicrosoftreferencesource http githubcomdotnetcorefx http githubcomapojprojectsworking http githubcommicrosoftcodecontracts http githubcomdrazenzadravecnequeo http githubcomclearcanvasclearcanvas http githubcommwilliamsonfireflyawssdknet http popular repository c code time going look popular repository based github star contain least c file query used repo star file http githubcomgrpcgrpc http githubcomdotnetcoreclr http githubcomdotnetroslyn http githubcomfacebookyoga http githubcombazelbuildbazel http githubcomdotnetcorefx http githubcomseleniumhqselenium http githubcommicrosoftwinobjc http githubcomqianlifengwox http githubcomwoxlauncherwox http githubcomsharexsharex http githubcommicrosoftwindowsuniversalsamples http githubcomnancyfxnancy http githubcomchocolateychoco http githubcomjamesnknewtonsoftjson interesting top spot google repository c file sample code using grpc library net popular c class name assuming got regex correct popular c class name following class name count class c class program class test class setting class resource class class app class b class startup class foo yay foo sneaking top foocs programcs something else common file name finally let look different class name used using statement dominated default one used visual studio template file count assemblyinfocs programcs resourcesdesignercs settingsdesignercs appxamlcs globalasaxcs startupcs homecontrollercs routeconfigcs mainwindowxamlcs discus post hacker news rcsharp information always read far present yet blog post read enjoy bigquery work put end blog post bigquery analysis programming language
333,Lobsters,visualization,Data Visualization,Metaballs and Marching Squares,http://jamie-wong.com/2014/08/19/metaballs-and-marching-squares/,metaballs marching square,metaballs marching square metaballs metaballs math marching square linear interpolation linear interpolation voronoi diagram metaballs khan academy application square made marching marching cube marching cube,metaballs marching square click animation pause something making visually interesting simulation play get really excited programming particularly cool algorithm bit math backing reading bit particle simulation wikipedia stumbled upon metaballs metaballs look something like metaballs wikipedia looked like potential yield cool behaviour decided dive start wanted circle bouncing around like sweet next step make thing blobby math bit refresher equation circle centered radius r x wanted model point inside boundary circle would x leq rearranging little get frac x geq bunch circle bouncing around model point inside circle like circle defined radius ri center xi yi max n frac x xi yi geq thing make metaballs blobbylike instead considering circle separately take contribution circle model point inside metaballs sum n frac x xi yi geq going using left hand side inequality quite bit let say f x sum n frac x xi yi sample f x grid plot result get something like cell highlighted green sample f x center increase resolution start getting kind amoebablobby effect might thinking still look little blocky sampled grid sample every pixel instead make look smoother well bouncing circle grid would order million operation want nice smooth animation would million operation per second javascript engine may fast nowadays fast thankfully much nicer algorithm get smooth approximation boundary dividing area inequality hold area marching square marching square algorithm generates approximation contour line two dimensional scalar field put another way function find approximation line point line function value case trying find outline f x instead cell drawn based one sample cell going sample corner cell something intelligent draw line cell instead filling entire square sampling corner look like corner f x geq highlighted green something intelligent relies fact every case corner f x geq corner f x lt case diagram know part boundary blob run cell since possible configuration cell corner enumerate configuration number computed assigning value corner f x lt value f x geq interpreting bit binary number ordered southwest southeast northeast northwest keen observer notice configuration ambiguous sure center cell inside boundary outside sake simplicity assume always inside boundary perform mapping process cell grid end something like increase resolution get rid debugging information wind look little nicer solid block really done turned degree angle degree angle able get smoother without increasing sampling resolution linear interpolation categorized cell one type retained one bit information corner use original sample value give u much better approximation contour line really intersects cell consider example see even though type underlying sample intuitively result noticeably different line even though cell would classified type green line approximating set point within cell f x vary dramatically depending underlying sample value calculate adjust line based original corner sample value going apply linear interpolation given point label diagram let work math finding qx qy process would px py point either side case cell configuration starter know looking diagram qx bx even though f x linear linear interpolation still give good enough result provide u visually meaningful smooth contour line say frac qy dy approx frac f qx qy f bx f dx dy f bx since trying get q lie roughly counter line f x want f qx qy approx let substitute rearrange qy dy left frac f bx f dx dy f bx right value right hand side known plug result something like crank resolution hide debug info left pretty result bonus also implemented blocky version marching square khan academy computer science platform using voronoi diagramesque coloring cell metaballs khan academy application turn algorithm actually useful likely example seen elevation contour map crazy high resolution satellite imaging everything could taken elevation sample grid drawn contour line fixed number elevation create map like another application might seen without realizing applying tilesets game great explanation blog post called square made marching project renegade linear interpolation apply version algorithm project renegade extend method get marching cube algorithm concept far configuration deal working use algorithm visualize thing like mri slice want draw isosurfaces equivalent contour line representing surface equal density marching cube wikipedia enjoying introduction computer graphic c uwaterloo remembering much enjoyed helping friend want get back graphic stuff think start delving stuff soon nice gentle wading back visually interesting work teensy math component hopefully like come
334,Lobsters,visualization,Data Visualization,ReportsKit – Interactive charts and tables for Ruby on Rails,https://www.reportskit.co/,reportskit interactive chart table ruby rail,feature,feature subset reportskit many feature browse rest site see
335,Lobsters,visualization,Data Visualization,Sorting Visualizations,https://imgur.com/gallery/RM3wl,sorting visualization,javascript disabled browser enable j,seeing message mean javascript disabled browser please enable j make imgur work
336,Lobsters,visualization,Data Visualization,Hasse diagram of the 2008 Olympic medal table,https://tartarus.org/~simon/2008-olympics-hasse/,hasse diagram olympic medal table,hasse diagram olympic medal table simon tatham partial order beijing olympics result hasse diagram graphviz,hasse diagram olympic medal table simon tatham different people different convention rank olympic medal result people prefer count total medal first look individual number gold silver bronze medal order break tie people hand prefer count gold medal first break tie using silver medal break persisting tie using bronze two extreme number reasonable ranking instance one could adopt point system allocating three point gold medal two silver one bronze better still allocated gold π silver bronze could never tie total score except two country exactly medal count three category ranking system quite others could reasonably argued sort measurement successful absolute term country winning medal would place medalwinning country different overall order scope reasonable disagreement anything agree much hierarchy medal table indisputable much depends point view restrict following discussion absolute ranking country solely medal count lot scope reasonable comparison try offset country natural advantage due size wealth interested kind sport others outside scope discussing two basic constraint common possibility must obeyed reasonable absolute ranking system must consider medal better fewer thing equal country least many gold least many silver least many bronze country b must surely consider done least well must consider higher medal better lower country c one silver country one fewer bronze must surely consider done unambiguously better sensible ranking score country would one bronze medallist done little better silver instead want say one country done strictly better another medal score latter transformed former sequence medal addition medal upgrade bit thought show exactly equivalent defining partial order triple medal triple g b considered least good another triple g b satisfies three condition g g g g g b g b based criterion analyse result olympic game determine unarguable relationship within medal ranking table distinguish matter opinion present result applying procedure beijing olympics result diagram hasse diagram country unarguably done better another country chain arrow running former latter two country connected chain arrow either direction mean scope legitimate dispute done better transitive reduction graph drawing courtesy rather nifty graphviz
337,Lobsters,visualization,Data Visualization,Locality sensitive hashing explained,https://medium.com/engineering-brainly/locality-sensitive-hashing-explained-304eb39291e4,locality sensitive hashing explained,locality sensitive hashing lsh explained jaccard index string distance metric min part minhash hash part minhash lsh tweaking,locality sensitive hashing lsh explainedthe problem finding duplicate document list may look like simple task use hash table job done quickly algorithm fast however need find exact duplicate also document difference typo different word problem becomes much complex case find duplicate long list given questionsjaccard indexfirst need define method determining whether question duplicate another experimenting string distance metric levenshtein jarowinkler jaccard index come conclusion jaccard index performs sufficiently use case jaccard index intersection union count amount common element two set divide number element belong either first set second set let look example assuming two following question first ruler poland first king poland visualize following set size intersection size union thus jaccard index equal conclude common word bigger jaccard index probable two question duplicate set threshold pair would marked duplicate let assume threshold real life need get value experiment could stop current solution make number comparison growing quadratically n number question min part minhashit shown earlier jaccard good string metric however need split question word compare two set repeat every pair amount pair grow rapidly somehow created simple fixedsize numeric fingerprint sentence compare fingerprint section use following question first king poland first ruler poland last pharaoh egypt jaccard index j first king poland first ruler poland first king poland last pharaoh egypt first ruler poland last pharaoh egypt calculate minhash need create dictionary set word question create random permutation last egypt king ruler poland pharaoh first iterate row writing index respective cell word checked present sentencenow second row rest first word occurrence relevant giving minimal index hence name minhash minimum value question first part fingerprint get second one need create another random permutation retrace step repeat permuting searching many time big want fingerprint purpose example consists item already let create permutation first king egypt pharaoh last poland ruler ruler king poland pharaoh first egypt last king poland ruler last pharaoh egypt first pharaoh ruler poland egypt king last first complete minhashes minhash first king poland minhash first ruler poland minhash last pharaoh egypt check similar two minhashes calculating jaccard index minhashsimilarity first king poland first ruler poland first king poland last pharaoh egypt first ruler poland last pharaoh egypt really close jaccard index permutation closer approximation get possible let analyze calculate jaccard index need look table considering two question create table like following word present question b present one c dictionary neither questionswe write formula jaccard index ab number row type b type bnow since random permutation let count probability two question equal fingerprint component skip type c row since interfere way component value calculation consider two question probability take type row set b row p b exactly jaccard index explains approximation close permutation mean better approximationshash part minhashwe algorithm could potentially perform better document bigger dictionary thus higher cost creating permutation time hardware instead creating n permutation take hash function like etc use every word question find minimal hash value first element fingerprint take another hash function n element fingerprint wait work let wonder permutation basically map word dictionary different number fact mapped number integer increased one important uswhat hash function simplifying map string number basically permutation better need whole dictionary new question appears easily calculate minhash also need scan whole dictionary question create permutation whole dictionary operation pretty costly saved lot computer timeso compute fingerprint compare easily still need compare every fingerprint others bad exponentially badlshlet look back minhashes minhash first king poland minhash first ruler poland minhash last pharaoh egypt group three element minhash first king poland minhash first ruler poland minhash last pharaoh egypt see duplicate one common group first unique common group since still talking probability influenced issue let calculate probability least one common group duplicate probability one specific element common fingerprint jaccard index element one group identical jaccard index number element group power group different group different number group power finally probability least one group common general equation look like jn b j jaccard index n number element groupb number groupsand probability unique question much lower could also make group element plot let analyze pair j b probability would find duplicate however b probability would mark duplicate mean practice false positive b false negative b need choose carefully parameter laternow need count anything common group mark duplicate create list single group first king poland first ruler poland last pharaoh egypt first king poland first ruler poland last pharaoh egypt look familiar hashtable put column group hash table check collision collision mean hit duplicate operation hash table worst case scenario complexity n algorithm course depends implementation potential also n complex way better beginningtweakingafter learned far know lsh take argument k number element minhash n number element group bucket b number bucket b n must equal kour goal mark duplicate every pair jaccard index probability chart look like achieving step function impossible case manipulating parameter need approximate close possible mind bigger k computing power need hash calculate experiment found k good starting value also many divisor although would next shotas see b n b n one closest reference use compare resultsone thing left get hash function two example solution use murmurhash different seedscreate hash function taking output another hash function making xor random number example python code def myfirsthash string return hash def mysecondhash string return hash loop warning lsh sometimes produce accidental collision end still need compare question given collision much much fewer operation comparing otherand would next article show example implementation benchmark
338,Lobsters,visualization,Data Visualization,Illustrating Group Theory: A Coloring Book,http://www.coloring-book.co/#!/?pageNumber=0&pageName=cover,illustrating group theory coloring book,,
339,Lobsters,visualization,Data Visualization,Calculating the Distance Between Points in “Wrap Around” (Toroidal) Space,https://blog.demofox.org/2017/10/01/calculating-the-distance-between-points-in-wrap-around-toroidal-space/,calculating distance point wrap around toroidal space,like,let say trying find distance two point point universe wrap around like old video game leaving screen right left top bottom side make reappear opposite edge universe actually shaped like toroid also known doughnut actually impossible object flat torus exactly doughnut whatever imagine surface doughnut would behave exactly way go end previously considered go far enough left end previously considered right would calculate distance two point universe like let imagine situation trying find distance red point green point one way would pick one point picking red case clone time surround cell like calculate distance green point red point whatever distance smallest would answer something desirable take distance calculation find minimum distance work squared distance instead regular distance avoid square root distance calculation still bit calculation going dimension make problem even worse requires distance calculation find shortest point distance calculation luckily better way approach let say universe image unit unit big aka working texture uv look image copy red dot see possible combination axis added red dot coordinate possible combination x axis added valid location red dot looking distance formula see minimize axis individually also end minimal distance overall better way minimize axis individually x axis find x axis distance red green point minimal subtract red dot x axis position leave alone add whichever x axis value red dot give minimal x axis distance x axis location use repeat axis get axis location use would repeat ax higher dimension give closest point plug distance formula get distance point wrap around space actually better though still working axis individually calculate absoluate value distance two point axis distance greater real distance axis intuition repeating space going b half distance mean went wrong way going way shorter distance way one minus whatever distance calculated since distance one point axis use distance distance formula get actual distance let minimize distance without explicitly figure combination make point closest importantly let efficiently calculate distance two point toroidal space doughnut space computational complexity lot better linear number dimension instead c show would work float toroidaldistance float float float float float dx std ab float dy std ab dx dx dx dy dy dy return std sqrt dx dx dy dy hit problem trying make tileable texture needed place circle texture circle close even texture tiled calculation gave basic tool needed able calculate distance point subtracting circle radius distance point let get toroidal distance circle make sure place closely let make image kept distance constraint even tiled example image image tiled like like loading related
340,Lobsters,visualization,Data Visualization,Visualizing Your Ruby Heap,http://tenderlovemaking.com/2017/09/27/visualizing-your-ruby-heap.html,visualizing ruby heap,ruby object layout recap page object belong many object page data acquisition visualizing heap,previous post wrote bit ruby object laid memory today use information write program allow u take ruby heap dump visualize layout fragmentation heap ruby object layout recap recap ruby object fixed width every ruby object size byte object really allocated malloc instead placed inside page ruby process many page page many object page object belong object allocated page page byte word ruby object allocated one time gc allocates one page also known arena new ruby object requested placed inside page page exactly byte allocate page want page aligned operating system memory page total malloc size need number le multiple o page size since malloc system call overhead subtract amount actual malloc size ruby page aligns fit contiguous o page padding size use sizeof sizet size page actually sizeof sizet page header contains information page size header sizeof void mean maximum number ruby object stored ruby page sizeof sizet sizeof void since number object per page bounded apply bitmask bottom bit remember page size iow left shifted ruby object address calculate page object life bitmask ascii art say ruby object address binary page address object id object id chart traditional ruby object id part bit represent individual object page entire address considered traditional object id let extract number ruby code require fiddle sizeofheappageheaderstruct fiddle sizeofvoidp sizeofrvalue heappagealignlog heappagealign heappagealignlog heappagealignmask heappagealignlog requiredsizebymalloc fiddle sizeofsizet heappagesize heappagealign requiredsizebymalloc heappageobjlimit heappagesize sizeofheappageheaderstruct sizeofrvalue mentioned little earlier explicit ruby page allocated aligned mallocs word ruby page allocated allocated address divisible size page slightly smaller let write function given object address return address page object placed def pageaddressfromobjectaddress objectaddress objectaddress heappagealignmask end let print page address object address p pageaddressfromobjectaddress p pageaddressfromobjectaddress p pageaddressfromobjectaddress see output first two object live page third object life different page many object page ruby object also aligned aligned inside existing page aligned byte also size object mean every ruby object address guaranteed divisible statement true non heap allocated object like number ruby object never allocated placed inside page allocated page aligned every number divisible also evenly divisible mean page store object others page evenly divisible store one object object let write function given page address calculates number object store well object placed return object represents page information page structnew address objstartaddress objcount def pageinfo pageaddress limit heappageobjlimit objstartaddress pageaddress sizeofheappageheaderstruct objstartaddress sizeofrvalue delta sizeofrvalue objstartaddress sizeofrvalue objstartaddress delta limit heappagesize objstartaddress pageaddress sizeofrvalue end pagenew pageaddress objstartaddress limit end get information page object stored let examine page information object address working previous example pageaddress pageaddressfromobjectaddress p pageinfo pageaddress pageaddress pageaddressfromobjectaddress p pageinfo pageaddress pageaddress pageaddressfromobjectaddress p pageinfo pageaddress first two object live page page store object third object life different page page store object may seem like key piece information need order visualize content heap data acquisition order visualize heap actually need heap visualize use objectspace dump heap json file used code along json parser chunkypng generate graph test program require objspace x objectnew gcstart fileopen heapjson w f objectspacedumpall output f allocate bunch object gc dump heap json file called heapjson line json document one object ruby heap let write program process json file change page class keep track object living page iterate json document add object respective page class page structnew address objstartaddress objcount def initialize address objstartaddress objcount super liveobjects end def addobject address liveobjects address end end page fileopen heapjson f feachline line object jsonload line object type root address object address toi pageaddress pageaddressfromobjectaddress address page page pageaddress pageinfo pageaddress pageaddobject address end end end visualizing heap far processing program divided object page belong time turn data visualization heap unfortunately one slight problem heap dump gave u information live object system visualize empty space heap bit information use figure empty spot heap first know object address divisible second know address first address storage page objstartaddress third know many object page store page objcount start objstartaddress increment sizeofrvalue either find read address json file read address json file know live object empty slot let add method page object iterates possible object address page yield full object empty object class page structnew address objstartaddress objcount def eachslot return enumfor eachslot unless blockgiven objs liveobjectssort objcounttimes expected objstartaddress sizeofrvalue objsany objsfirst expected objsshift yield full else yield empty end end end end page page able differentiate empty slot full slot let use chunkypng generate png file column png represent one page x pixel square page represents object color object red full leave empty empty require chunkypng page pagesvalues height heappageobjlimit width pagessize png chunkypng imagenew width height chunkypng color transparent pageseachwithindex page pageeachslotwithindex slot j slot full j j png j chunkypng colorrgba png j chunkypng colorrgba png j chunkypng colorrgba png j chunkypng colorrgba end end end pngsave heappng interlace true running file output called heappng one generated one look neat filled heap let try dumping heap relatively empty process see look like ruby robjspace efileopen heapjson wb objectspacedumpall output process heap output look like ok end thank find full code listing post
341,Lobsters,visualization,Data Visualization,Compression Decompressed,https://unwttng.com/compression-decompressed,compression decompressed,unwttngcom making thing smaller visual introduction basic yeah ok pixel art neat better show friend support compression ratio small go kolmogorov complexity kolmogorov complexity andrey nikolaevich kolmogorov loss png jpeg representation everything omg article ca nt even support home blog follow jack unwttng,unwttngcomor making thing smaller visual introductioncompression everywhere used efficiently store data hard drive send tv signal transmit web page like one stream netflix video package video game distribution list endless almost significant area modern computing exists nt make use compression technologiesso whether using desktop compression software year never thought article try explain little go hood squash file stream video look answer big question probably raise new one along waywhat mean compress something make something smaller already practically go let get work toggle pointless gifs offthe basicsbefore even go anywhere near computing digital information find useful introduction compression take following word english counting symbol use express see used four fine bad look like written say japanese oho one symbol expressed different idea different piece information managed reduce pagespace required write idea tree done nothing magical decided express idea different way chosen different efficient representation information spoiler turn important concept piece pay attentionyeah ok pixel art hear cry example written language translate world strictlydefined digital data let think class data hear pretty popular day image keep thing simple going try compress high resolution instagram photo anything instead let go pixel artpretty made tenbyten grid pixel colour represent one character b ghow represent digitally file storing image pretty much raw form might following content charactersall done write corresponding colour character pixel left right top bottom expect come character let assume mean byte taken disk hopefully agree give pretty good upper bound sensible size file representing image anything bigger would either kind pointless attempting pack information image metadata something try little thought experiment go asked write paper representation image le character might go ahead mull cup tea waittoggle pointless gifs offgot something good tooi going call method runlength encoding rle jks nt come nt get name around since least sixty basic compression technique willing bet least literally came nowrunlength encoding work noticing something image file great big long stretch write colour look b kick surely repetition something squash course instead characterswe wrote seems promising turned character abbreviating long repeated string character repetitive string called run way hence runlength encoding encoded data writing length run instead every element information lost simple program able render previous file format easily modifiable read new format image would look identicalthe live demo display original image along long representation runlength encoded onetap click pixel change colour observe charactersneat better show friendsshare twitter support mehelp make like thisyou notice something play amount able compress long form dependent image whole thing one solid block one colour long run get small output smallest get file using version runlength encoding byte another thing algorithm go really really wrong fact make file bigger raw pixelbypixel representation notice take two character write pixel art mess run length charactersamazingtime learn terminologytoggle pointless gifs offcompression ratiohow measure well compression algorithm actually making data smaller well pretty much might guess calculate ratio data uncompressed size compressed sizeif take byte pixel art image algorithm compress byte managed compression ratio best solid colour image algorithm managed whopping compression ratio singlepixelperrun image designed mess algorithm managed protip compression ratio le frowned uponwe see compression ratio achieved basic rle algorithm incredibly sensitive structure input data pretty common naive approach algorithm make lot assumption shape data expects find reasonable job repeated adjacent run exact byte must present cleverer rle implementation might attempt runlength encode data using repeated charactershell even writing english managed better ratio couple approach nice concise file format onto bit winner compared first tryhow small go natural big question seems correct reasonably welldesigned compression algorithm able reduce input least bit colloquial technical meaning bit work well unfortunately simple say algorithm let call given input whatsoever capable achieving compression ratio strictly greater could input could othersif algorithm existed would able simply apply input run data every time applied size data would decrease least one bit nt take big leap see would eventually take u single bit even zero bit toggle pointless gifs offthat nt seem possible nt even without recursive proof impossibility algorithm think nine different file possible way compress without throwing away information let say three bit eachthree bit give u eight unique representation even superpowerful compression algorithm capable taking first eight file unique representation compressed form ninth file would one nt enough unique representation cover eight uncompressed piece data given algorithmhere important takeaway hard limit compression ratio given algorithm achieve generic data ca nt get round applying one algorithm stop useful trying another one might eek little compression fact many established compression software exactly eventually hit something ca nt compress really repeated application different algorithm another compression algorithm rule still applieskolmogorov complexitythe disappointment nt stop either algorithm theoretical limit compression data inherent complexitylook following two string exactly length one clearly complex see easily using human brain concretely know fact apply basic rle first one take three character kolmogorov complexity brain child andrey nikolaevich kolmogorov soviet mathematician capture concept pretty well far measure thing serf well kolmogorov complexity piece data defined length shortest possible computer program capable generating data outputobviously good upper bound kolmogorov complexity string write program return bit reductive since measure include length entire program interpreter compiled code included purpose discussion fine think length shortest piece code could write generate datakolmogorov complexity nt particularly sensitive choice programming language shown choice language program impact complexity constant factor quite key tell u matter choose express data limit succinctly data need space represent million green pixel always willon lossdo nt give hope though everything covered far referred lossless compression lossless compression defined compression allows original data reconstructed perfectly compressed form c compression algorithm corresponding decompression algorithm expect c x x data xthis useful compressing written text like literature blog article tax archive lowresolution pixel data almost certainly want losslessly application exact content ordering every character likely importantbut option available compression make guarantee perfectly reproduced data known lossy compression everywherethe usecases lossy compression many human sens forgiving error patchy information data represents visuals audio prime candidate lossinessneed example look two image barack obamathe first roughly kilobyte png file png lossless image compression format treat reference point second result saving png jpeg much lossy format come around kilobyte meaning compressed original image ratio around badcan see difference probably get close screen squint turn head bit look detail hair literally pick hair see fuzziness none point nt perfect reproduction point good enough sending data internet fifteen time compression ratio much valuable pixelperfect imagerythat say ca nt go wrong though jpeg throw lot information achieve kind compression whilst attempt pretty intelligently push far play live demo see quality really drop ask much jpeg also notice much get away image start look bad said eye forgivingvideo streaming service like netflix youtube audio streaming like spotify soundcloud use lossy compression buffering stalling content engagement killer service go length possible get useful video music network often see dynamicallycompressed data coming video begin heavily pixellated rapidly increase quality site app detects network handle le lossily compressed datasee giphy gifs using throughout piece thing happening check load slow connection yes took gif loading process embedded using giphy problem weird right first load lowquality still first frame gif bigger data available start get gif get frame get frame eventually entire gif renderingthis modern streaming medium compression look like hybrid strategy designed almost exclusively make sure get fluid content front user byte therefore little time possible lossless compression like rle file place still core many best desktop file archiving tool lossy compression get game throne onto telly box smoothly quickly feasiblerepresentation everythingi think need call day lot said compressionwe look basic idea found important philosophical nugget hidden amongst technicality image text video music information single true raw form le efficient way representing itcompression finding efficient way write data impressive compression finding way matter data isthanks reading appreciate effort gone live demo please feel free share friendsomg article ca nt evenshare twitter support mehelp make like thishope learned something homewhat else going blogread archivefollow jack unwttnga god damn thrill ride money back
342,Lobsters,visualization,Data Visualization,How I Make Explorable Explanations,http://blog.ncase.me/how-i-make-an-explorable-explanation/,make explorable explanation,explorable explanation start writing math perplexed traumatized evolution trust parable polygon got make love question ladder abstraction start ground move step step video essay structuring video essay ladder abstraction end ballot firefly emoji simulator beginning start giving player question end want explore question tutorial making cool visual effect game solve problem puzzle r true learning neverending process,want share powerful idea idea could really enrich life whoever gift communication hard share idea way make sure message received well easy like nah kidding actual process lot painful post going share make explorable explanation interactive thing help learn playing although creative process involves lot backtracking wrong turn general flailing found nice pattern teaching thing plugandchug formula hopefully post help help others learn something new whether reading watching playing first thing start start make traditional teaching ineffective answer question student thought ask help love question steven strogatz writing math perplexed traumatized practicing preach blog post start important question everyone care share idea nt make question blatantly inyourface evolution trust posed question form story wwi soldier create peace trench parable polygon posed question form game small individual bias result large collective segregation however choose got make reader viewer player curious got make love question motivated make long hard climb ladder abstraction yeah mixing metaphor bit hill ladder whatever point got start grounded move way step step slowly may think obvious seeing many lecturer spew abstract jargon talking cloud audience still ground yeah apparently obvious alternatively people try dumb public goal nt dumb idea smart people start ground first thing give reader concrete experience parable polygon start directly dragging dropping neighborhood shape evolution trust start directly playing bunch opponent trick pick experience good foundation everything else building top move step step think good logical argument like good story nt one damn thing another matt stone trey parker said instead making story like happens happens happens etc make story like happens therefore happens happens therefore happens etc idea watch tony zhou brilliant video essay structuring video essay true good explanation evolution trust tried connect many point could win cooperate single game cheat repeated game cooperation succeed scenario cheater take short term long term cooperator succeed like big buts lie mean show new counterintuitive idea every minute story packed plot twist note may also sometimes want step back abstract concrete check bret victor ladder abstraction inspired like work anyway helped reader reach top hill ladder whatever metaphor using best end end want share powerful idea powerful idea let people see end explorables sandbox mode sandbox end polygon trust ballot firefly emoji simulator yeah honest bit cliché point reason sandbox beginning start giving player question end want explore question helped someone get top hill student see hill nt see hill even nt see true value ending openended question allows student go beyond teacher feel like finally made top tiny hill made first explorable explanation year ago tutorial making cool visual effect game learnt heck lot since learn realize much yet learn much want try heck list explorables nt singleplayer explorables use realworld data explorables actually solve problem puzzle explorables nt follow set linear story change lesson based reader interest prior knowledge explorables partially usergenerated explorables allow dialogue peer learner explorables nt standalone experience something come back time explorables vr ar r explorables actually make project making explorable trying seems pretty daunting eat elephant one bite time lot people also interested making explorables impossible one person climb hill collectively explore wild weird terrain together bite lot elephant okay metaphor getting really mixed point true learning neverending process start end like sisyphus every time get top hill go back perform climb would nt way tiger got hunt bird got fly man got sit wonder tiger got sleep bird got land man got tell understand kurt vonnegut
344,Lobsters,visualization,Data Visualization,0ldskool Plasma Effect,https://www.bidouille.org/prog/plasma,plasma effect,intro building plasma adding color glsl implementation final word,intro recently write intro screen android app working decided go old school use plasma article result investigation recreating wellknown effect let build unnecessary suspense final result look like building plasma plasma basically function space created adding together sinusoid combining different type sine adding time component illusion motion achieved example different type sinusoid use illustration without time component first sinusoid simply taken along xaxis coordinate square right go x formula obviously also possible take another sinusoid along yaxis diagonal angle make angle change time look like formula last type sinusoid use concentric sinusoid starting point also animate move center point around lissajous figure adding square root term avoid visible dot center fold zero mix match function hopefully get nice plasma effect simply adding together adding color got something pretty cool looking obviously good one saw demo assembly time add color preserve organic fluid look plasma color scheme discontinuity however adding sine together plasma value necessarily constrained nice known interval like easy way solve problem take sinus value obtained end plasma function use create rgb component color example r g b red green blue component color lowest intensity black highest fully saturated color component glsl implementation knowing formula implementing fragment shader glsl straightforward fragment shaderprecision mediump float define pi uniform float utime uniform uk varying vcoords void main float v c vcoords uk v sin cxutime v sin cyutime v sin cxcyutime c sin co v sin sqrt cx cxcy utime v col sin pi v co pi v glfragcolor col shader two uniform parameter uk used scale factor utime current time second avoid precision issue using float value kept relatively small encoutered issue time went minute periodically reset time zero plasma actually periodic function case period looping utime back zero made seamlessly multiple second varying parameter vcoords come vertex shader contains interpolated fragment coordinate case used full screen quad coordinate could also used place texture object potentially interesting result final word thanks simple math achieved pretty nice old school effect lot variation obviously easy fast computer graphic today calculated everything frame good old time various sinusoid would needed precomputed displayed offset rotozoomed browser compatibility example page written using canvas element also easily efficiently written fragment shader rendered using opengl simply take look source page javascript code
345,Lobsters,visualization,Data Visualization,A new kind of map: it’s about time,https://blog.mapbox.com/a-new-kind-of-map-its-about-time-7bd9f7916f7f,new kind map time,new kind map time opportunity prior art isochrone step try live map expand contract note tech geocoding api mapbox matrix api mapbox gl,new kind map timeby peter liuhow would describe morning commute like people start ballpark estimate long usually take maybe several estimate depending leave work bad traffic whether walking driving taking busthere something strange answering question trip physical space number unit time often trip road take landmark along way mile kilometer traveled come later allan opportunityalmost year digital mapping interesting crossroad map useful understanding literally lay land guide direct interaction land computer also gotten really good task gps pinpoint current location geocoders look street address navigation apps plan crosscountry trip split second together assure u never really completely lost every destination somehow reachableat time decisionmaking around place go lunch certain day trip feasible yes whether commute practical shifted toward long take get still rely traditional map eyeballing straightline distance running alchemy guesswork firsthand experience long trip would takewhat would directly useful visualization indeed map time look like prior arta pedestrian map downtown oakland cain city center lot walking traffic may see map overlaid progressively larger circle estimate travel time based simple physical distance assumes people move like crow fly straightline road anywhere want go concrete wall lake without traffic ever slow u urban setting none practical assumption makea map travel time central melbourne via rail extending swiftly along rail line isochrone decay sharply around individual station rider must disembark proceed footisochrones get u bit closer starting point mode travel examine actual geometry surrounding road delineate area based long take get area within isochrone greek time take similar time reach tendril extend along fastmoving corridor squeeze wrap around mountain river natural barriersa step furtherbut core map still serve double duty visualizing space time recently thinking visualization cut directly way people make decision go would map look like swept physical world away completely favor time needed move around prototyping simple discovery tool idea take search result foursquare api array around user center try live map time map preserve direction point relative user visual distance center point determined time take get whether driving biking footby removing literal geography map closely reflects way think environment cluster restaurant five minute way versus ten minute watch surroundings literally expand contract different mean travel choosing destination think road turn specific get therenotes techundergirding course bag lowlevel tool heavy lifting mapbox geocoding api positioning location foursquare mapbox matrix api travel time calculation mapbox gl visualizationfrom design perspective piece smallest complete articulation solution problem modular format affords developer maximum expressiveness flexibility incorporate exactly toolkit need becomes ever critical continually push tailor redefine user experience build
346,Lobsters,visualization,Data Visualization,PlotEx: a tool for exploring puzzle plot constraints,http://eblong.com/zarf/plotex/index.html,plotex tool exploring puzzle plot constraint,plotex tool exploring puzzle plot constraint ce forman article graphviz graph enchanter read plotex script documentation regtest zarfhome map,plotex tool exploring puzzle plot constraint release plotex script public domain designing large puzzle adventure game whether textbased graphical requires lot persnickety detail work one also keep track underlying perhaps overfloating plot also requires lot annoying detail imagine threequarters way building game decide one particular puzzle alternate solution get past guardian pheebor using either potion invisibility rod lordly tights plot player save potion muffin griffon thus bypassing puzzle nt supposed solvable chapter using plot talk player advancement game mechanic sort plot may faintly tied game story digression different time clever designer many trick deal typically name critical resource make sure one chain neatly next hang rest game might get fancy make several plot thread available parallel long jump back together clearlyspecified point simple structure often come across simplistic however player see trick quoting rob wheeler playing start feel diagram whiteboards led experience context could nt let admirable distillation lost history designer one hold much one head time smarter player unlikely advice even internet turned player unstoppable puzzledevouring hydra game designer mathier one least often talked plot graph way visualize design see eg ce forman article xyzzynews spoiler enchanter graph directed acyclic graph say pedant exactly right structure expressing puzzle requirement interact nt solve problem part draw graph game give good idea game broad narrow plot element must tapped right away deferred end game graph nt good finding design problem looking variation article linked chart enchanter however nt try represent fact kulcad spell unravel many different obstacle cast choose poorly game becomes unwinnable arguably trickiest challenge game player point view add variation chart would clutter kulcad node would study result carefully understand one way win want way graph game reassure structure work way want plotex simple python tool accomplish start simple example action findsword set swordtrue findlamp set lamptrue entercave chain lamptrue set undergroundtrue feedself lose food feedcyclops chain undergroundtrue lose food set kitchentrue feedorc chain lose food set pantstrue kitchencook chain kitchentrue set foodtrue sole starting state start state foodtrue hopefully pretty clear even first glance bar browwrinkling need capitalized sometimes quote mark notional game seven action example findsword represents player finding handy sword hanging mantel action set sword true findlamp see entercave chain together two piece player lamp player reach underground feedself action player greedily devouring food also possible feed orc underground cyclops finally kitchencook way get food player reached kitchen last line action player starting state helpfully start food since kitchen immediately available question player reach kitchen wearing pant daily challenge many selfemployed programmer graph story wind unenlightening straight chain might add deadend side branch feed orc soon eat food awkward running plotex display following python plotexpy lamp pant sword underground findlamp entercave findsword feedorc lamp sword underground findlamp entercave findsword feedself food kitchen lamp pant sword underground findlamp entercave findsword feedcyclops kitchencook feedorc kitchencook terminal state preferred reached word game three final outcome one player eats food one player feed orc first one full cyclopskitchenorc solution case see many action needed asterisk indicates third solution better others notice action nt onceonly third outcome player kitchencook twice food get used orc player immediately run back get food player course le enlightening plot diagram way nonetheless answer question want graph plotex provide one help graphviz application state somewhat collapsed simplicity arrow show action see important three final state highlighted dotted line get shortly though far get never manage find kitchen python plotexpy block kitchencook kitchen lamp sword underground findlamp entercave findsword feedcyclops lamp pant sword underground findlamp entercave findsword feedorc lamp sword underground findlamp entercave findsword feedself terminal state preferred reached temporarily remove kitchencook action scenario script tell u three final outcome none reaching kitchen python plotexpy block findsword lamp pant underground findlamp entercave feedorc lamp underground findlamp entercave feedself food kitchen lamp pant underground findlamp entercave feedcyclops kitchencook feedorc kitchencook terminal state preferred reached without sword player fine obvious upon inspection original code nothing depends sword look example script allows display intermediate state like filter output state including particular quality also see action lead state wo nt force example point back explain underlying assumption model state set quality far seen boolean quality quality also number string set could set state like start state foodtrue allyelf spell summon light quality type must match across entire scenario ca nt set food true one place another action change one state another else fails nothing since state set quality action simply change quality perhaps checking quality see succeed important thing default quality assumed positive adventurer know food better food might need food point general never need food could throw food away similarly three coin better two coin coin knowing summon light better knowing summon allied elf better alliance underlies earlier claim game outcome better others food kitchen lamp pant sword underground strictly better lamp pant sword underground quality positive plotex take granted let optimize computation also make easier set scenario second important thing action strictly improves position free example picking sword lamp free action nt cost anything go entering cave cooking food prerequisite cost plotex collapse free action together text graph output never reason right might well group arrow graph multiple action labeled also explains dotted arrow plotex point view start state already includes lamp sword underground first three action free nt need represented separately would confusing leave start state include dotted line notice strict narrow sense improvement winning game course good necessarily better every state get stuck early nt still invisibility potion never reached point use far plotex concerned valid alternate outcome traded victory potion could walk away would better outcome ca nt contrast feedself action example completely useless player never want eat food nothing gained exchange hunger timer different kettle sotospeak fish might set losing food exchange increasing nourishment quality would nt decrease hunger quality though hunger nt positive really need negative quality use quality name begin underscore plotex presume state worse state worse hunger positive quality usually make sense genuine choice saw nocooking example player could wind lamp pant sword underground kitchen lamp sword underground quality lack neither better also use string quality allyelf neither better worse allydwarf although either preferable alliance noted spell book revisit enchanter complete script output python enchanterpy adventurer bread exex friendlyturtle gondar guncho incastle incourtyard knife krebf light melbor ozmoo rezrov shredscroll vaxum water zifmia didopenoven selfglow filljug frotzitem getrezrov opengate explorecastle findgondar findportrait getknife cutopenbox opennorthgate searchcell sleepinbed talktoturtle frotzself getkulcad openegg fixscroll summonadventurer friendlyadventurer openoven solveterror spellopenbox adventurer bread exex friendlyturtle gondar guncho incastle incourtyard knife krebf light melbor ozmoo rezrov shredscroll vaxum water zifmia didopenoven selfglow filljug frotzitem getrezrov opengate explorecastle findgondar findportrait getknife cutopenbox opennorthgate searchcell sleepinbed talktoturtle frotzself getkulcad openegg fixscroll summonadventurer friendlyadventurer openoven spellopendoor solveterror adventurer bread exex friendlyturtle gondar incastle incourtyard intower knife krebf krill light melbor ozmoo rezrov shredscroll vaxum water win zifmia didopenoven selfglow filljug frotzitem getrezrov opengate explorecastle findgondar findportrait getknife cutopenbox opennorthgate searchcell sleepinbed talktoturtle frotzself getkulcad openegg fixscroll summonadventurer friendlyadventurer openoven passstairs meetkrill solveterror win terminal state preferred reached winning game last outcome others represent mistake use kulcad spell jewelled box use kulcad guarded door previous release plotex also listed frotz mistake cast frotz thus making impossible visit darkened gallery find ozmoo spell however inadequate description game cast frotz long picking ozmoo output demonstrates one feature state description dense collection label hard see difference plotex work difference u python enchanterpy common state adventurer bread exex friendlyturtle gondar incastle incourtyard knife krebf light melbor ozmoo rezrov shredscroll vaxum water zifmia didopenoven selfglow guncho filljug frotzitem getrezrov opengate explorecastle findgondar findportrait getknife cutopenbox opennorthgate searchcell sleepinbed talktoturtle frotzself getkulcad openegg fixscroll summonadventurer friendlyadventurer openoven solveterror spellopenbox guncho filljug frotzitem getrezrov opengate explorecastle findgondar findportrait getknife cutopenbox opennorthgate searchcell sleepinbed talktoturtle frotzself getkulcad openegg fixscroll summonadventurer friendlyadventurer openoven spellopendoor solveterror intower krill win filljug frotzitem getrezrov opengate explorecastle findgondar findportrait getknife cutopenbox opennorthgate searchcell sleepinbed talktoturtle frotzself getkulcad openegg fixscroll summonadventurer friendlyadventurer openoven passstairs meetkrill solveterror win terminal state preferred reached three state described term difference common state shown top common state nt necessarily reachable greatest common denominator three listed state understand going first two state wind keeping guncho never chance use second state note marked lacking two outcome flag associated picking pencil using kulcad guarded door third state win graph enchanter warning large confusing actually useful look seems sufficiently interesting justify effort try blocking various action see player wind getting stuck learned first state explode faster expected enchanter example run state thought could cut using worsebetter comparison shortcircuiting state strictly worse state already found turn easy could take every new state compare every existing state find whether trump trumped known state ca nt anything information obvious shortcut asymmetrical resulting graph depends order action tried nt want running state fast brandnew mac second probably pretty painful older computer model great representing achievement fine representing scarce resource remember mark action onceonly terrible representing timed puzzle nt try work enchanter hunger thirst sleep timer example would way forman graph general handwave eat drink least fighting krill would nt even attempt set change weather move counting model also nt good math complex algorithmic constraint unless broken simple dependency hadean land wanted set bit transitive closure like b b like c like c one trio quality easy across whole group required write custom action said extending script generate chart would great thought would useful run scenario far possible without action add action mix see much farther get script let hard display result interesting way blocking action turn straightforward python metaclasses confusing help zack weinberg aahz got straightened thanks update release pretend blog post dunno see got chart capability although realsized game chart large make sense finally figured right way think improvement action business improvement free original release plotex nt notion formal find closure state action strictly improve since action available state x available state strictly better x divide state equivalence class based maximal mostimproved state search equivalence class instead state simpler problem man nt chance break equivalence class year cut enchanter state run almost forty time fast put optimization well mind still pretty easy overload system old hadean land overview scenario state current hl scenario including every puzzle element state first chapter first chapter represented pretty clear run thing segment want finish lifetime last updated june read plotex script documentation script regtest zarfhome map
348,Lobsters,visualization,Data Visualization,Visualizing lazy evaluation,http://www.well-typed.com/blog/2017/09/visualize-cbn/,visualizing lazy evaluation,fast track haskell haskell performance optimization haskell type system github hackage earlier blog post topic prev next prev next prev next monad prev next conclusion repo,haskell callbyneed language use lazy evaluation default evaluation strategy beginner advanced programmer alike sometimes confusing welltyped core part business teaching haskell public course upcoming skill matter course fast track haskell haskell performance optimization haskell type system private inhouse course targeted specific client need course writing blog post order help u design course developed tool called visualizecbn simple interpreter mini haskelllike language output state program every step human readable format also generate htmljavascript version button step program released tool open source github hackage hope useful others readmemd file repo explains run tool blog post illustrate one might take advantage revisit infamous triple function foldr foldl foldl show behave slightly advanced example also study memory behaviour mapm maybe monad hopefully showratherthantell blog post might help people understand function better throughout section use definition enumfromto enumfromto n n n enumfromto n else say corresponds enumfromto foldrfoldrlfoldl section examine difference three function study function directly however study slightly simpler variant form three definition length list indepth discussion triple function see earlier blog post topic foldr consider naive definition length length x case x x x length x corresponds defining length foldr x n n consider happens compute length click prev next step execution prev next step step status step notice going first apply definition length step length need case analysis force u apply enumfromto evaluate toplevel con constructor step point execute pattern match process continues evaluate enumfromto add step note expression add evaluated although used twice sharing computation make haskell true lazy callbyneed language opposed callbyname language animation shared expression shown separately expression think accordingly animation also show expression garbage collected egâ step note step build call add resolved end source memory leak definition length corresponding foldr foldl foldlstyle definition length introduce accumulator length acc x case x acc x x length acc x corresponds defining length foldl n x n unlike previous definition tailrecursive however still suffers memory leak due extremely lazy nature see step execution prev next step step status notice still building chain addition except accumulator instead chain resolved garbage collected end step foldl final definition make sure evaluate accumulator go length acc x case x acc x x let acc add acc seq acc length acc x corresponds defining length foldl n x n step note evaluate accumulator immediately step moreover garbage collection happen compute well prev next step step status mapm maybe monad final example slightly advanced nature try predicting happen run ghci case mapm return x x try result expected perhaps stepping following evaluation mapm return weakhead normal form whnf constructor toplevel help understand prev next step step status note expression reduces whnf entire list evaluated moreover requires n nested pattern match takeaway point example mapm applied long list monad result memory leak conclusion laziness tricky understand sometimes able go evaluation program step step helpful visualizecbn tool used generate htmljavascript file used visualize evaluation shown blog post alternatively also write evaluation trace console source file various definition length found repo feedback pull request course always welcome
350,Lobsters,visualization,Data Visualization,The worst volume control UI in the world,https://uxdesign.cc/the-worst-volume-control-ui-in-the-world-60713dc86950,worst volume control ui world,want can need shoulds reddit post felt urge innovating matter want need,see full post example reddit want can need shoulds original reddit post hundred example terrible volume ui keep growing fun exercisejoke strengthen one creative muscle ability think outside box people participating simply fun coming absurd weird interaction interface elementsbut definitely reflection point state industry herei sure lot people reading point career felt urge innovating matter uncontrollable desire redesigning something redesigned long recreated innovative right want can need shoulds story come ineverybody want innovate design industry keep nudging u creative innovative deliver design solution never thought pressure u bombarded message telling u order considered solid designer innovate costa lot people innovate definitely redesign volume control ui take bit creativity moderate design skill prototyping tool becoming increasingly accessible well technology allow bring fruition whatever idea come mind hour front principle framer let create extremely refined prototype interaction envisioning also decide create appsitechatbot solve issue canno one need let honest volume control design pattern around decade work pretty well majority user incredibly familiar lot people need reinvent itbut shouldshould redesign volume control ui interesting subjectiveness question make sense asked first person know much design able answer understand business technology culture people answering question skill get many many year answering question alikewe try quantify measure make sense time part ever intuition
351,Lobsters,visualization,Data Visualization,PostgreSQL workings in one picture,http://blog.postgresql-consulting.com/2017/09/postgresql-workings-in-one-picture.html,postgresql working one picture,,illustration attempted capture key process encompass postgres workflow quick overview let take look diagram start first flow right left corner client connected postgres get dedicated backend provide service query client client send reading renewal query postgres turn generates planning execution query execution process data inputoutput performed level table index process directly involved updating shared buffer area data required query execution found shared buffer loaded disc result generates additional inputoutput data every change data placed shared buffer area exception special case unlogged table logged wal write ahead log result query reported back client addition servicing client query another function postgres execution background process several example autovacuum launcherworker backgroundwriter checkpointer logger stats collector main purpose background process support healthy working postgresql system necessarily connected background service however two important point remember able exchange data use shared buffer area b result performance modify data within shared buffer change logged wal among background process connected streaming replication wholly rely data wal normally transfer data throughout system also process would save dirty page shared buffer memory persistent storage eg disc also track change take place shared buffer area based wal record performed change onto disc image also added stats monitor activity helpful navigation monitoring postgres performance hope find helpful
352,Lobsters,visualization,Data Visualization,House Address “Twins” Proximity,http://www.paulplowman.com/stuff/house-address-twins-proximity/,house address twin proximity,analysis name town street address twin found wondering shortest distance two house number streetname town street name search apps result george street accrington lancashire george street george street sunk cost fallacy misconception truth result part number manchester road answer question shortest distance two house number streetname distance private house,previous post bit analysis name town street however clearly enough sate bizarre interest thing addressbased streetnamebased nerdery spent far much effort trying answer pretty inconsequential question end discovering something quite remarkable address twin lived house address station road probably surprise learned another house somewhere country also address station road street named station road uk fact sometimes get street quite close together name confusing london sign platform abbey road dlr station telling tourist via medium appalling pun looking abbey road made famous beatles fact wrong place beatles abbey road away abbey road dlr station found wondering shortest distance two address twin house number streetname unfortunately find publiclyavailable list every house uk royal mail house address data pay minimum licence ordnance survey list every street uk plan find every pair street name calculate distance sort nearest furthest go list looking google streetview found two house number easy removed uniquelynamed street calculated distance two street name found pair street metre apart look map discovered appeared street spur coming spur sometimes listed separate street also discovered street fairly long past something happened split street two like built park school middle two end street listed two different street obviously neither case would housenumbers common needed get rid thought discarding pair street closer certain distance maybe kilometre check look random addresspairs around kilometre boundary found two street name le kilometre apart least one housenumber common blimey um instead discarding everything kilometre could actually discard everything kilometre wow least mean huge reduction amount data still left lot data though way could think procedurally remove spur street split street mentioned went data hand took age way showed load error ordnance survey data o manage vast amount data error bound appear error type unlikely spotted normal usage data might never found weirdo come along us data unorthodox way find hidden flaw made town street name search apps already found numerous error o data found load especially duplicated street one case seven street named church meadow within metre turned street seven street give twentyone pair street erroneous aaaarrrgh result yes bit actually care first wrote blog post top five closest address twin reason get later reduced number one distance frontdoor frontdoor measured google earth ruler rounded nearest five metre george street accrington lancashire george street george street accrington lancashire metre apart yes right twin le sixth mile apart set find closest twin thought might perhaps around mile half apart would quite silly metre definitely thinking category possible stand point midway two house see without moving sadly quite see one house happy result wrote blog post even visited house accrington took photo exhibition posted discovered hm land registry make available data website property sale england wale download standard additional price paid data transaction received hm land registry january current monthly data got copy nosey noticed amongst thing data contained house number street name postcode almost every house sold since obviously complete list every house uk nearest thing found list individual house intrigued whether might show additional insight nearest addresstwins obviously lot data geographic data could use directly calculate distance house generated list every pair house number street name different postcode postcode differed last letter guessed close address twin likely similar postcode data incomplete anyway curiosity checking random house pair found oh realised one fundamental assumption incorrect assumed get two house close together number street clearly could two house metre apart bugger work done point nothing quiet sobbing choice ordnance survey data longer useful wanted continue land registry data would mean lot processing data start none position data also even found closest address twin way knowing genuinely closest real life data complete list every house well including scotland possible entire street house sold last year sunk cost fallacy misconception make rational decision based future value object investment experience truth decision tainted emotional investment accumulate invest something harder becomes abandon go removed duplicate address house sold twice appeared list twice etc removed flat share address screw result found every pair address twin grouped pair street geolocated postcode every pair street calculated distance sorted list nearest furthest took age resulting list still needed work factor firstly original file contained legacy data house changed postcode reason might listed postcode secondly appears sometimes newbuild house sold postcode assigned first time sold use random nearby postcode mean house might appear two different postcode thirdly postcode geolocation data wrong course enthusiasm starting flag point thought first thing find two nearest address twin completely different postcode area involved processing much le data least result description would hopefully incentive find ultimate result result part expect almost immediately find ultimate holy yes big see two house number manchester road one left bolton one right salford greater manchester literally next door get ridiculous situation possible live house nextdoor neighbour street house number spoke chap lived side road quite rightly wanted know taking photo people house apparently trying age get two council put signage clarify situation see photo sign salford side say manchester road clifton without corresponding sign bolton side maybe arrow indicate clifton refers area right sign really help answer question shortest distance two house number streetname distance p may noticed house mentioned north england particularly northwest seems trend many twinstreets looked mentioned say least north particularly northwest sure guess people used localised life matter lot street name reason situation remains northwest guessing compared area country little regeneration taken place since pps unlikely thinking actually visiting house nerdy enough might also case remember private house hassle people live try look like planning robbery know sensible originally post confused salford manchester salford manchester postcode area corrected sorry salfordians
353,Lobsters,visualization,Data Visualization,Exploring and Visualizing an Open Global Dataset,https://research.googleblog.com/2017/08/exploring-and-visualizing-open-global.html,exploring visualizing open global dataset,,latest news google ai
354,Lobsters,visualization,Data Visualization,Non-expert interpretations of hurricane forecast uncertainty visualizations,http://regehr.org/sarah/Ruginskietal2016_NonExpertHurricaneForecastInterpretations.pdf,nonexpert interpretation hurricane forecast uncertainty visualization,,obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj subtypeformbbox matrix length stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream yn endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream y endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream ye endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream ya endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream yj endstream endobj obj stream endstream endobj obj stream yw endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream endstream endobj obj stream c l p h ԟp f r aa r j nev ԗb c oһ b endstream endobj obj stream l ǉ bf y endstream endobj obj stream w endstream endobj obj stream l e cbh j qhf g ph endstream endobj obj stream n b po p e j pg c õ c vd ԇ w x l l ycl v z ho j hf h endstream endobj obj stream pe wy wy w mw x v ӭpe f p endstream endobj obj stream q endstream endobj obj stream c
355,Lobsters,visualization,Data Visualization,Is It Better to Rent or Buy?,https://www.nytimes.com/interactive/2014/upshot/buy-rent-calculator.html,better rent buy,initial cost recurring cost opportunity cost net proceeds initial cost recurring cost opportunity cost net proceeds,cost top rent fee pay broker opportunity cost security deposit expense typically negligible impact methodology calculator keep running tally common expense owning renting also take account something known opportunity cost example return could earned investing money instead spending payment calculator assumes profit would made investment would taxed longterm capital gain adjusts bottom line accordingly calculator tabulates opportunity cost part buying renting situation figure current dollar buying initial cost cost incur go closing home purchasing includes payment fee recurring cost expense pay monthly yearly owning home include mortgage payment condo fee community living fee maintenance renovation cost property tax homeowner insurance property tax interest part mortgage payment case portion common charge tax deductible resulting tax saving accounted item total mortgage payment amount increase year term loan tax credit shrink year interest portion payment becomes smaller opportunity cost tracked initial purchase cost recurring cost former give idea much could made invested payment instead buying home net proceeds amount money receive sale home minus closing cost includes broker commission fee remaining principal balance pay mortgage bank tax pay profit exceeds capital gain exclusion total negative mean done well made enough profit covered cost home also recurring expense renting initial cost include rent security deposit applicable broker fee recurring cost include monthly rent cost renter insurance opportunity cost calculated year initial cost recurring cost net proceeds include return rental security deposit typically occurs end lease
356,Lobsters,visualization,Data Visualization,Fantasy Football for Hackers - Building a draft strategy from the ground up,https://intoli.com/blog/fantasy-football-for-hackers/,fantasy football hacker building draft strategy ground,first time everything understanding basic scraping projection fantasy shark basic weekly point projection baseline subtracted projection bestfantasyfootballleaguecom draft algorithm conclusion please get touch,first time everything like million american playing fantasy football year unlike know virtually nothing football would estimate watched somewhere around five game total life super bowl know rule beyond basic name single nfl player top head lack knowledge doubt significant handicap hoping make area equally strong area like statistic programming machine learning simulation weak knowledge football within league quite probably best worst two respective front plenty people strong category find somewhat interesting positioned two opposite extreme particular think put good position describe basic component strategy people background similar eg hacker know nothing football make minimal assumption acronym rule game use analytical method far state technically interesting right start introductory article constructing draft strategy draft basically consists team taking turn picking next player making smart decision pick essential ending strong team plan write python code scrape projection use construct algorithm help make smart decision get feedback sort article filling useful niche perhaps also write trading strategy detailed simulation future understanding basic basic idea behind fantasy football make virtual team real player team earns total number point based performance player respective realworld game team matched different virtual team league week whichever team get point win one obvious way award point would get number point player team score game admittedly vaguely imagined thing worked fairly recently couple reason make good system award virtual team point player get would position valuable others basically worthless player best nfl defensive position might worth le relatively mediocre player solely offensive position big issue approach lot randomness many touchdown player score game player probably score point game necessarily result playing well address problem complicated scoring system used different point amount assigned different action position valuable impact randomness significantly reduced example player might lose point fumbling ball gain number point every yard run python code express specific rule league point calculated rule playerrules pas yds pas yard pas tds pas touchdown int interception rush yds rush yard rush tds rush touchdown rec yds reception yard rec tds reception touchdown fum fumble fgm yard field goal fgm yard field goal fgm yard field goal fgm yard field goal fgm yard field goal xpm extra point def calculateplayerpoints performance point rule value playerrulesitems point float performanceget rule value return point performance parameter dictionary containing many action player performed game really big fan using abbreviation key make sense chose start looking external data source addition individual player performance special defence position corresponds entire real team defensive performance anybody team make interception make defensive touchdown get attributed team analogous rule point calculation look like teamrules scks sack int interception fum fumble deftd defensive touchdown safts safety def calculateteampoints performance point rule value teamrulesitems point float performance rule value special bracket point pointsagainst float performance pt agn pointsagainst point elif pointsagainst point elif pointsagainst point return point specify position performance position let denote defence make general calculatepoints method handle defensive team position well regular player position def calculatepoints performance performance position return calculateteampoints performance return calculateplayerpoints performance fundamental concept need go let first take look getting data different player use calculate point revisit rule surrounding team lineup explored individual player value developed little intuition different position scraping projection prediction player performance different action like game predict total number point using calculatepoints function defined earlier scratch would large undertaking luckily number website provide exact prediction need one use fantasy shark free site provides fairly detailed weekly projection example projection look like fantasy shark website see chose abbreviated dictionary key earlier match exactly table header fantasy shark projection make easier use projection calculate number point player expected play might also notice tooltip visible screenshot saying andrew luck uncertain week included emphasize strategy point projection thing like injury suspension cause actual point differ wildly projection take projectioncentric approach limited understanding component game anything else scrape fantasy shark projection start simple fetchprojectionspage method construct url fetch projection specific position week season import urllibrequest def fetchprojectionspage week positionid assert week finvalid week week baseurl http wwwfantasysharkscomappsbertforecastsprojectionsphp url f baseurl position positionid segment week request urllibrequestrequest url requestaddheader useragent projectionscraper urllibrequesturlopen request response return responseread construct full projection simply need loop week season six position interested position abbreviation id positionmap figured visiting various projection page manually import time import beautifulsoup def scrapeprojections week range positionmap rb wr te qb k position positionid positionmapitems timesleep polite html fetchprojectionspage week positionmap position soup beautifulsoup html lxml table soupfind table idtooldata headerrow tablefind tr columnnames thtext th headerrowfindall th row tablefindall tr columnentries trtext tr rowfindall td exclude repeated header row tier n row len columnentries len columnnames continue extract fantasy shark player id playerlink rowfind playerid int playerlink href split strip yield dictionary player weekly projection player id playerid week week position position key entry zip columnnames columnentries player keylower entry yield player running generate sequence projection correspond expected performance player given week pas one weekly projection calculatepoints method get expected number point given specific rule league might noticed actually pt column fantasy shark website supposed correspond total projected point point calculated using different set rule custom league rule therefore projected point different looking ratio projected point given custom league rule given default rule see wide receiver wr quarter back qb systematically receive le point league would default scoring using default score projection would therefore resulted overvaluing position also number tool let enter rule though really unique advantage anything basic weekly point projection one interesting thing look point projection distributed different position see quarter back highest scorer really huge gap higher lower scorer kicker k defence somewhat similar getting around point per game much unimodally distributed running back rb wide receiver wr seem roughly comparable perhaps best running back slightly higher scorer finally tight end te seem similar lower scoring wide receiver running back give insight valuable different position end scarcity strategy matter lot well difference point really good kicker bad kicker much smaller difference really good running back bad running back reason would far preferable good running back bad kicker vice versa prioritizing running back pick kicker might make sense even kicker projected score point detail really depend number team specific team composition though baseline subtracted projection one key rule fantasy football mentioned yet concept called waiver wire limit number player fantasy team limit low enough always number player anybody team option time week drop player team pick player waiver wire player currently team team somewhat equilibrated kind make sense think player value much better freely available replacement player rather many raw point score essentially consider projection best available replacement player position sort baseline subtract appropriate baseline projection player use baseline subtracted projection compare value player different position fairly course need idea team composed order know good replacement player position requires u get larger scale rule league estimate team roster end looking like implement basic representation team function python code use form estimate roster calculate player value relative waiver wire player league us site called bestfantasyfootballleaguecom league called miniflex league team league limit player per team resulting total player team given time despite player team pick starting player actually play week player score point miniflex league need specifically play qb rb wr te flex choose one wr rb te k seen abbreviation except flex defined choice wide receiver running back tight end eventually want build representing entire team code first let build cleaner abstraction individual player projection far individual weekly projection without concept player performance across week build simple player class aggregate point projection across week class player def init self id position name team selfid id selfposition position selfname name selfteam team selfpointsperweek def addprojection self projection assert selfid projection id selfpointsperweek projection week calculatepoints projection def seasonpoints self return sum selfpointsperweek def weekpoints self week assert week return selfpointsperweek week populate playersbyid dictionary player object actual player playersbyid projection scrapeprojections player playersbyidget projection id player player player projection id projection position projection player projection tm playersbyid projection id player playeraddprojection projection note id actually id fantasy shark us internally build analogous team class capable computing team projected point single week entire season class team allowedflexpositions rb te wr maximumplayers startingpositions k flex qb rb rb te wr wr week list range def init self selfplayersbyid def addplayer self player assert selfplayercount selfmaximumplayers selfplayersbyid playerid player def removeplayer self player del selfplayersbyid playerid def clearplayers self selfplayersbyid def player self return selfplayersbyidvalues def playercount self return len selfplayersbyid def teamfull self return selfplayercount selfmaximumplayers def starter self week remainingplayers sorted selfplayersbyidvalues keylambda player playerweekpoints week reversetrue starter flexcount position selfstartingpositions handle flex player later position flex flexcount continue fnd best player position player enumerate remainingplayers playerposition position startersappend player del remainingplayers break flex player range flexcount j player enumerate remainingplayers playerposition selfallowedflexpositions startersappend player del remainingplayers j return starter def seasonpoints self return sum selfweekpoints week week selfweeks def weekpoints self week return sum playerweekpoints week player selfstarters week logic bit complicated mainly consists picking best starting lineup week calculating projected point starter finally add one higher level abstraction represent entire league collection import defaultdict import random class league numberofteams teamclass team def init self player selfteams selfteamclass range selfnumberofteams selfallplayers player player player selfavailableplayers player player player def clearteams self selfavailableplayers player player selfallplayers team selfteams teamclearplayers def calculatebaselines self projection defaultdict list player selfavailableplayers point sum playerweekpoints week week selfteams week projection playerposition append point return position max point position point projectionsitems def optimizeteams self samepositionsfalse cycle pick available player optimal false trade optimal optimal true team sorted selfteams keylambda randomrandom originalplayer list teamplayers find best trade available player originalpoints teamseasonpoints teamremoveplayer originalplayer bestplayer bestpoints originalplayer originalpoints newplayer selfavailableplayers samepositions newplayerposition originalplayerposition continue nt bother computing new player strictly worse newplayerposition originalplayerposition week teamweeks newplayerweekpoints week originalplayerweekpoints week break else strictly worse continue teamaddplayer newplayer newpoints teamseasonpoints newpoints bestpoints bestpoints newpoints bestplayer newplayer teamremoveplayer newplayer update team available player better bestplayer originalplayer optimal false trade selfavailableplayersappend originalplayer selfavailableplayersremove bestplayer teamaddplayer bestplayer else teamaddplayer originalplayer def fillteamsgreedily self selfclearteams range selfteamclassmaximumplayers team sorted selfteams keylambda randomrandom bestplayer bestpoints none none newplayer selfavailableplayers teamaddplayer newplayer newpoints teamseasonpoints bestplayer newpoints bestpoints bestpoints newpoints bestplayer newplayer teamremoveplayer newplayer teamaddplayer bestplayer selfavailableplayersremove bestplayer def randomizeteams self selfclearteams team selfteams teamteamfull index randomrandint len selfavailableplayers teamaddplayer selfavailableplayerspop index def setweeks self week team selfteams teamweeks week code relates populating team player randomizeteams method populates team randomly fillteamsgreedily attempt sort pseudodraft team chooses player increase season projection pick finally optimizeteams simulates team dropping picking player waiver wire improve projected score team stablize bit crude basic idea approach realistic equilibrium term team composition use instance league find season projection best player position still available waiver wire equilibrium reached populate team bring equilibrium league league playersbyidvalues leaguefillteamsgreedily leagueoptimizeteams calculate waiver wire baseline baseline leaguecalculatebaselines give baseline season projection listed following table position baseline point k qb rb te wr reassuring see running back tight end wide receiver fairly similar value fact three played flex position mean big difference projection would likely indicate inefficient team composition something optimizeteams explicitly tried avoid also interesting note quarter back high baseline compared position largely due fact starting quarter back least running back wide receiver team allowed two quarter back baseline would likely plummet took starting lineup rule account simulating team roster league relative scarcity different position therefore reflected baseline subtract baseline player season projection see player position compare seems valuable player running back followed closely wide receiver would suspect position dominate first draft round also interesting much valuable top six player everybody else pick league counting valuable player david johnson value valuable player lamar miller tremendous drop value draft algorithm drafting site used allowed rank player ahead time would automatically pick next best available player make choice quickly enough filled using baseline subtracted season projection draft ended relying heavily later round tried get bit fancy earlier round putting together little tool help make pick tool calculates season projection point team sort available player based much would improve team total projected point next pick instead using baseline subtracted projection player calculated weekly projected point position greater value player team could play hypothetical baseline player could pick waiver wire basic effect baseline subtraction felt intuitive accurate term considering team composition weekly basis also added concept throwaway game could specify number game would ignored calculating improvement team projected point set two initially allowed time coalesce strongly around total game look screenshot tool see first six pick shared two byeweeks week play real life therefore score point turned throwaway game parameter zero initial roster filled improve coverage week clear algorithm well later draft pick retrospect would liked add parameter control calculating season projection averaged different scenario current player injured would allowed put together team robust injury something realized really lacking initial roster filled likely try incorporate something like future trade algorithm conclusion well story stumbled first fantasy football draft little knowledge experience football illusion anywhere close optimal strategy wanted figure thing think reasonably well thing considered pretty sure embarrass badly couple people even included playoff prediction case certainly lot fun would like say big thanks everyone league especially ted giving advice max hosting u really hope people able find interesting please feel free reach let know would interested future article advanced strategy season also available hire consulting contracting service relating data acquisition analysis something looking help please get touch
357,Lobsters,visualization,Data Visualization,Visualizing Entropy in Binary Files,https://teaearlgraycold.me/visualizing-entropy-in-binary-files/,visualizing entropy binary file,binimage,lot data store redundant tell computer keep record information compression algorithm attempt avoid waste using python zlib package see humanreadable pattern turned noisy string byte import zlib import uncompressed ab abababab abababab compressed zlibcompress testencode decode print compressed compressing algorithm use domainspecific knowledge reduce number byte needed store something need look data byte level order remove repetition way agnostic type file compressed however ability witness compression usually come nothing seeing file size decrease nt normally get see repetitiousness uncompressed file noise compressed file naively interpret byte file pixel image get feel happening file compressed excerpt wav file look converted image bit audio data per pixel actually possible see two seperate channel wav file area excerpt look noisy lot repetition example black bar middle image compressing wav file apparent something changed pretty much look like static information entropy file much higher per byte disk phenomenon noticed image file uncompressed bmp image interpretting image raw byte yield visualization cropped bit image data per pixel compressed png image look like pure noise exception header footer data interestingly image significantly smaller dimension original bmp image image size visually representative file size image post rendered tool called binimage wrote
358,Lobsters,visualization,Data Visualization,Learn Graphviz and Up Your Diagramming Game [2016],http://naildrivin5.com/blog/2016/12/08/learn-graphviz-and-up-your-diagramming-game.html,learn graphviz diagramming game,book great software engineer graphviz formal specification attribute,learning write one best skill learn developer take entire chapter book great software engineer writing specific way communicate idea diagramming powerful tool well often moreso able quickly create diagram make difference expressing clearly graphviz great tool pocket graphviz amazing piece technology take input text file produce diagram input treat everything graph sufficient semantics create software diagram might need example show class hierarchy digraph class rankdirbt node shaperecord user activerecordbase address activerecordbase product activerecordbase specialproduct product running dot tpng oclassespng classesdot produce graphviz handle highly complex information suppose wish diagram complex user flow online checkout digraph checkout productpage checkout checkout calculatetax checkout applycredit label tax holiday calculatetax applycredit applycredit chargecard chargecard checkout label processor declined chargecard success running dot tpng ocheckoutpng checkoutdot produce typing checkout flow would bear sometimes easier diagram creating diagram tool like omnigraffle bad would still cumbersome also get lost font line arrangement begin able quickly create diagram like reduces friction idea expression others beyond figuring layout diagram graphviz allows highly customize output suppose want better font maybe want action happening webpage box oval want exceptional flow bright red dotted line graphviz covered digraph checkout node fontname avenir edge fontname avenir productpage checkout checkout calculatetax checkout applycredit label tax holiday colorred styledotted calculatetax applycredit applycredit chargecard chargecard checkout label processor declined colorred styledotted chargecard success productpage shapemrecord label product page checkout button checkout shapemrecord label checkout page show current cart success shapemrecord label success page order number shown produce language called dot may seem archaic quite powerful dot formal specification find easier start simple example like diagram tweak using attribute reference next time trouble expressing idea try diagram try graphviz leave example using graphviz draw microservices architecture diagram diagram service dependent upon another connected use circo layout arrange thing radially hack graph lay service circle digraph use radial layout instead hierarchical one layout circo meat dependency application service wms invlocservice wms customerservice wms shippinglabels wms productservice wms checkout wms metric wms addressservice clearance orderservice clearance invlocservice pickandship pickingservice pickandship metric pickingservice orderservice pickingservice invlocservice admin schedulingservice admin orderservice admin shippinglabels admin productservice admin customerservice orderservice productservice orderservice shippinglabels productservice invlocservice force circular layout penwidth arrowhead setting end ensure edge wo nt visible ensure service arranged circle wms checkout invlocservice addressservice metric pickandship pickingservice clearance orderservice shippinglabels admin schedulingservice customerservice productservice wms arrowheadnone configure visuals apps service userfacing apps use double circle headless service use single one wms shapedoublecircle clearance shapedoublecircle pickandship shapedoublecircle admin shapedoublecircle metric shapedoublecircle invlocservice shapecircle label inventory location pickingservice shapecircle label picking checkout shapecircle label financial transaction orderservice shapecircle label order shippinglabels shapecircle label shippinng label schedulingservice shapecircle label scheduling customerservice shapecircle label customer productservice shapecircle label product addressservice shapecircle label address work like said graphviz awesome
362,Lobsters,visualization,Data Visualization,Analyzing Cryptocurrency Markets Using Python,https://blog.patricktriest.com/analyzing-cryptocurrencies-python/,analyzing cryptocurrency market using python,datadriven approach cryptocurrency speculation predict happen next great overview step setup data laboratory http wwwcontinuumiodownloads step retrieve bitcoin pricing data quandl free bitcoin api panda kraken plotly matplotlib coinbase panda plotly step retrieve altcoin pricing data poloniex api ethereum litecoin ripple ethereum classic stellar dash siacoin monero nem happening hedge fund recently begun publicly trading cryptocurrency market ripple stellar chipper turn maybe better event registry gdelt google trend poloniex coinbase share finding,datadriven approach cryptocurrency speculation bitcoin market behave cause sudden spike dip cryptocurrency value market different altcoins inseparably linked largely independent predict happen next article cryptocurrencies bitcoin ethereum rife speculation day hundred selfproclaimed expert advocating trend expect emerge lacking many analysis strong foundation data statistic backup claim goal article provide easy introduction cryptocurrency analysis using python walk simple python script retrieve analyze visualize data different cryptocurrencies process uncover interesting trend volatile market behave evolving post explaining cryptocurrencies want one would recommend great overview opinion piece specific currency rise fall instead concerned tutorial procuring raw data uncovering story hidden number step setup data laboratory tutorial intended accessible enthusiast engineer data scientist skill level skill need basic understanding python enough knowledge command line setup project completed version notebook result available step install anaconda easiest way install dependency project scratch use anaconda prepackaged python data science ecosystem dependency manager setup anaconda would recommend following official installation instruction http wwwcontinuumiodownloads advanced user nt want use anaconda totally fine assume nt need help installing required dependency feel free skip section step setup anaconda project environment anaconda installed want create new environment keep dependency organized run conda create name cryptocurrencyanalysis create new anaconda environment project next run source activate cryptocurrencyanalysis linuxmacos activate cryptocurrencyanalysis window activate environment finally run conda install numpy panda nbconda jupyter plotly quandl install required dependency environment could take minute complete use environment plan developing multiple python project computer helpful keep dependency software library package separate order avoid conflict anaconda create special environment directory dependency project keep everything organized separated step start interative jupyter notebook environment dependency set run jupyter notebook start ipython kernel open browser http create new python notebook making sure use python conda env cryptocurrencyanalysis kernel step import dependency top notebook got blank jupyter notebook open first thing import required dependency import o import numpy np import panda pd import pickle import quandl datetime import datetime also import plotly enable offline mode import plotlyoffline py import plotlygraphobjs go import plotlyfigurefactory ff pyinitnotebookmode connectedtrue step retrieve bitcoin pricing data everything set ready start retrieving data analysis first need get bitcoin pricing data using quandl free bitcoin api step define quandl helper function assist data retrieval define function download cache datasets quandl def getquandldata quandlid download cache quandl dataseries cachepath pklformat quandlid replace try f open cachepath rb df pickleload f print loaded cacheformat quandlid except oserror ioerror e print downloading quandlformat quandlid df quandlget quandlid return panda dftopickle cachepath print cached format quandlid cachepath return df using pickle serialize save downloaded data file prevent script redownloading data time run script function return data panda dataframe familiar dataframes think superpowered spreadsheet step pull kraken exchange pricing data let first pull historical bitcoin exchange rate kraken bitcoin exchange pull kraken btc price exchange data btcusdpricekraken getquandldata bchartskrakenusd inspect first row dataframe using head method btcusdpricekrakenhead open high low close volume btc volume currency weighted price date next generate simple chart quick visual verification data look correct chart btc pricing data btctrace goscatter xbtcusdpricekrakenindex ybtcusdpricekraken weighted price pyiplot btctrace using plotly generating visualization le traditional choice established python data visualization library matplotlib think plotly great choice since produce fullyinteractive chart using chart attractive visual default easy explore simple embed web page quick sanity check compare generated chart publicly available graph bitcoin price coinbase verify downloaded data legit step pull pricing data btc exchange might noticed hitch dataset notable downspikes particularly late early spike specific kraken dataset obviously nt want reflected overall pricing analysis nature bitcoin exchange pricing determined supply demand hence single exchange contains true master price bitcoin solve issue along downspikes likely result technical outage data set glitch pull data three major bitcoin exchange calculate aggregate bitcoin price index first download data exchange dictionary dataframes pull pricing data btc exchange exchange coinbase bitstamp itbit exchangedata exchangedata kraken btcusdpricekraken exchange exchange exchangecode bcharts usdformat exchange btcexchangedf getquandldata exchangecode exchangedata exchange btcexchangedf step merge pricing data single dataframe next define simple function merge common column dataframe new combined dataframe def mergedfsoncolumn dataframes label col merge single column dataframe new combined dataframe seriesdict index range len dataframes seriesdict label index dataframes index col return pddataframe seriesdict merge dataframes together weighted price column merge btc price dataseries single dataframe btcusddatasets mergedfsoncolumn list exchangedatavalues list exchangedatakeys weighted price finally preview last five row result using tail method make sure look ok btcusddatasetstail bitstamp coinbase itbit kraken date price look expected similar range slight variation based supply demand individual bitcoin exchange step visualize pricing datasets next logical step visualize pricing datasets compare define helper function provide singleline command generate graph dataframe def dfscatter df title seperateyaxisfalse yaxislabel scalelinear initialhidefalse generate scatter plot entire dataframe labelarr list df seriesarr list map lambda col df col labelarr layout golayout titletitle legenddict orientation h xaxisdict typedate yaxisdict titleyaxislabel showticklabels seperateyaxis typescale yaxisconfig dict overlaying showticklabelsfalse typescale visibility visible initialhide visibility legendonly form trace series tracearr index series enumerate seriesarr trace goscatter xseriesindex yseries namelabelarr index visiblevisibility add seperate axis series seperateyaxis trace yaxis format index layout yaxis format index yaxisconfig tracearrappend trace fig gofigure datatracearr layoutlayout pyiplot fig interest brevity wo nt go far helper function work check documentation panda plotly would like learn easily generate graph bitcoin pricing data plot btc exchange price dfscatter btcusddatasets bitcoin price usd exchange step clean aggregate pricing data see although four series follow roughly path various irregularity want get rid let remove zero value dataframe since know price bitcoin never equal zero timeframe examining remove value btcusddatasetsreplace npnan inplacetrue rechart dataframe see much cleaner looking chart without downspikes plot revised dataframe dfscatter btcusddatasets bitcoin price usd exchange calculate new column containing average daily bitcoin price across exchange calculate average btc price new column btcusddatasets avgbtcpriceusd btcusddatasetsmean new column bitcoin pricing index let chart column make sure look ok plot average btc price btctrace goscatter xbtcusddatasetsindex ybtcusddatasets avgbtcpriceusd pyiplot btctrace yup look good use aggregate pricing series later order convert exchange rate cryptocurrencies usd step retrieve altcoin pricing data solid time series dataset price bitcoin let pull data nonbitcoin cryptocurrencies commonly referred altcoins step define poloniex api helper function retrieving data cryptocurrencies using poloniex api assist altcoin data retrieval define two helper function download cache json data api first define getjsondata download cache json data provided url def getjsondata jsonurl cachepath download cache json data return dataframe try f open cachepath rb df pickleload f print loaded cacheformat jsonurl except oserror ioerror e print downloading format jsonurl df pdreadjson jsonurl dftopickle cachepath print cached format jsonurl cachepath return df next define function generate poloniex api http request subsequently call new getjsondata function save resulting data basepolourl http poloniexcompublic commandreturnchartdata currencypair start end period startdate datetimestrptime get data start enddate datetimenow today pediod pull daily data second per day def getcryptodata poloniexpair retrieve cryptocurrency data poloniex jsonurl basepolourlformat poloniexpair startdatetimestamp enddatetimestamp pediod datadf getjsondata jsonurl poloniexpair datadf datadfsetindex date return datadf function take cryptocurrency pair string btceth return dataframe containing historical exchange rate two currency step download trading data poloniex altcoins bought directly usd acquire coin individual often buy bitcoins trade bitcoins altcoins cryptocurrency exchange reason downloading exchange rate btc coin use existing btc pricing data convert value usd download exchange data nine top cryptocurrencies ethereum litecoin ripple ethereum classic stellar dash siacoin monero nem altcoins eth ltc xrp etc str dash sc xmr xem altcoindata altcoin altcoins coinpair btc format altcoin cryptopricedf getcryptodata coinpair altcoindata altcoin cryptopricedf dictionary dataframes containing historical daily average exchange price altcoin bitcoin preview last row ethereum price table make sure look ok altcoindata eth tail close high low open quotevolume volume weightedaverage date step convert price usd combine btcaltcoin exchange rate data bitcoin pricing index directly calculate historical usd value altcoin calculate usd price new column altcoin dataframe altcoin altcoindatakeys altcoindata altcoin priceusd altcoindata altcoin weightedaverage btcusddatasets avgbtcpriceusd created new column altcoin dataframe usd price coin next reuse mergedfsoncolumn function earlier create combined dataframe usd price cryptocurrency merge usd price altcoin single dataframe combineddf mergedfsoncolumn list altcoindatavalues list altcoindatakeys priceusd easy let also add bitcoin price final column combined dataframe add btc price dataframe combineddf btc btcusddatasets avgbtcpriceusd single dataframe containing daily usd price ten cryptocurrencies examining let reuse dfscatter function earlier chart cryptocurrency price chart altocoin price dfscatter combineddf cryptocurrency price usd seperateyaxisfalse yaxislabelcoin value usd scalelog nice graph provides pretty solid big picture view exchange rate currency varied past year note using logarithmic yaxis scale order compare currency plot welcome try different parameter value scalelinear get different perspective data step perform correlation analysis might notice cryptocurrency exchange rate despite wildly different value volatility look slightly correlated especially since spike april even many smaller fluctuation appear occurring sync across entire market visuallyderived hunch much better guess stats back test correlation hypothesis using panda corr method computes pearson correlation coefficient column dataframe column revision note section revised order use daily return percentage instead absolute price value calculating correlation coefficient computing correlation directly nonstationary time series raw pricing data give biased correlation value work around first applying pctchange method convert cell dataframe absolute price value daily return percentage first calculate correlation calculate pearson correlation coefficient cryptocurrencies combineddf combineddfindexyear corr methodpearson dash etc eth ltc sc str xem xmr xrp btc dash etc eth ltc sc str xem xmr xrp btc correlation coefficient place coefficient close mean series strongly correlated inversely correlated respectively coefficient close zero mean value correlated fluctuate independently help visualize result create one helper visualization function def correlationheatmap df title absoluteboundstrue plot correlation heatmap entire dataframe heatmap goheatmap zdfcorr methodpearson asmatrix xdfcolumns ydfcolumns colorbardict titlepearson coefficient layout golayout titletitle absolutebounds heatmap zmax heatmap zmin fig gofigure data heatmap layoutlayout pyiplot fig correlationheatmap cryptocurrency correlation dark red value represent strong correlation note currency obviously strongly correlated dark blue value represent strong inverse correlation light blueorangegraytan color inbetween represent varying degree weaknonexistent correlation chart tell u essentially show little statistically significant linkage price different cryptocurrencies fluctuated test hypothesis cryptocurrencies become correlated recent month let repeat test using data combineddf combineddfindexyear corr methodpearson dash etc eth ltc sc str xem xmr xrp btc dash etc eth ltc sc str xem xmr xrp btc somewhat significant correlation coefficient strong enough use sole basis investment certainly notable however almost cryptocurrencies become correlated across board correlationheatmap cryptocurrency correlation huh rather interesting happening good question really sure immediate explanation come mind hedge fund recently begun publicly trading cryptocurrency market fund vastly capital play average trader fund hedging bet across multiple cryptocurrencies using similar trading strategy based independent variable say stock market could make sense trend increasing correlation would emerge indepth xrp str instance one noticeable trait chart xrp token ripple least correlated cryptocurrency notable exception str token stellar officially known lumen stronger correlation xrp interesting stellar ripple fairly similar fintech platform aimed reducing friction international money transfer bank conceivable bigmoney player hedge fund might using similar trading strategy investment stellar ripple due similarity blockchain service use token could explain xrp much heavily correlated str cryptocurrencies quick plug contributor chipper earlystage startup using stellar aim disrupting microremittances africa turn explanation however largely speculative maybe better foundation made hundred different path take continue searching story within data idea add data cryptocurrencies analysis adjust time frame granularity correlation analysis fine coarse grained view trend search trend trading volume andor blockchain mining data set buysell volume ratio likely relevant raw price data want predict future price fluctuation add pricing data stock commodity fiat currency determine correlate cryptocurrencies please remember old adage correlation imply causation quantify amount buzz surrounding specific cryptocurrencies using event registry gdelt google trend train predictive machine learning model data predict tomorrow price ambitious could even try recurrent neural network rnn use analysis create automated trading bot trading site poloniex coinbase using respective trading apis careful poorly optimized trading bot easy way lose money quickly share finding best part bitcoin cryptocurrencies general decentralized nature make free democratic virtually asset open source analysis participate community maybe write blog post html version python notebook available hopefully skill analysis think critically speculative cryptocurrency article might read future especially written without data back provided prediction thanks reading please comment idea suggestion criticism regarding tutorial find problem code also feel free open issue github repository got second potentially third part work likely following idea listed stay tuned coming week
363,Lobsters,visualization,Data Visualization,Visualizing the Heart of Some PRNGs,http://www.pcg-random.org/posts/visualizing-the-heart-of-some-prngs.html,visualizing heart prngs,randograms expected histogram lcg family pcg linear congruential generator pcg xsh rr post stream pcg marsaglia xorshift family vanilla xorshift xorshift untruncated halfstate multiply xorshift truncated fullstate multiply xoroshiro family vanilla xoroshiro raw output xoroshiro additive output function big fail xoroshiro truncated fullstate multiply conclusion,major point made pcg paper get useful insight testing small version prngs mini version may small useful practice structure give u good sense structure larger counterpart post look version several popular prngs draw get sense structure particular going look pattern occurrence pair output word pair output occur never occur occur multiple time randograms expected histogram much post looking plot state space tiny version generation technique output randograms help drive intuition expect phenomenon see small scale continue larger scale equivalent visualization would huge unmanageable first approximation randogram look nt prove sufficient statistical quality hand something leap eye clearly obvious structure know looking flaw randograms use post little different one pcg paper intensity dot represents many occurrence pair indicated x coordinate pixel every occurrence half intensity pixel zero occurrence white one grey two grey etc also give histogram data random sample point would expect following binomial distribution pair occurrence occur count lcg family pcg begin looking lcg output see difference one standard pcg output function make linear congruential generator use lcg multiplier since pcg us lcgs used different multiplier pattern would different general idea would high eight bit sometimes known say see clear repetitive structure also point two pair small number darker dot right next light dot pair omitted histogram occurrence wrong many pair occur exactly see issue histogram occur count low eight bit low bit poweroftwo lcg terrible short period nt expect much good histogram unsurprisingly also terrible histogram occur count pcg xsh rr tiny quartersized cousin us lcg put state xsh rr output function result look right random regular see generator randogram look like likewise histogram good consistent random sample histogram occur count one concern might although histogram consistent random sample seem characteristic one particular histogram stuck forever might feel like kind bias pair likely others agree pcg stream come varying lcg additive constant result four randomly chosen additive constant â â histogram histogram occur count histogram occur count histogram occur count histogram occur count histogram different stream stream choose thus nt locked always histogram stare four randograms long enough may able convince perhaps scrolling random picture really scrolling picture histogram would quite case nevertheless stream nt different enough feel like statistically independent usefully distinct find whole question stream interesting see post stream pcg area short version steam would different varied pcg permutation lcg multiplier marsaglia xorshift family okay let move looking classic xorshift generator proposed marsaglia whereas lcgs vary increment parameter get different stream xorshift varying algorithmic parameter get different stream trickier parameter result generator full period vigna discovered parameter conform mathematical rule suggested marsaglia nt good tested implementation xorshift hand selected four shift parameter combination make four different generator calling variant b c first part discussion may start question choice thing get better assure vanilla xorshift low bit parameterizations b c â â histogram occur count histogram occur count histogram occur count histogram occur count well certainly quite different sometimes say g lfsrs may able see diagram histogram reason agree although vague intuitive characterization applies way including way lfsrs get mired area neighboring bad state high bit parameterizations b c â â histogram occur count histogram occur count histogram occur count histogram occur count funky think see want add decent output function condition output something reasonable xorshift untruncated halfstate multiply look online see people producing generator apply mcg multiplication would otherwise output xorshift generator unfortunately really right thing see randograms different really better low bit parameterizations b c â â look histogram see nothing really changed shuffled value around made difference histogram occur count histogram occur count histogram occur count histogram occur count high bit parameterizations b c applies high bit â â histogram occur count histogram occur count histogram occur count histogram occur count xorshift truncated fullstate multiply let try different output function take bit xorshift state perform mcg multiply truncate result keeping high eight bit suddenly four previously horrible looking generator looking quite wonderful â â histogram look right histogram occur count histogram occur count histogram occur count histogram occur count plausible like thing work way course four different histogram unlike way add stream small number stream best get via reparameterization xoroshiro family vigna xoroshiro family nt provide tiny version theory using marsaglia nt hard make version size vanilla xoroshiro raw output â histogram occur count histogram occur count missing pair top corner square see two half xoroshiro state equidistributed nt random sample twodimensional equidistribution single occurrence pair arrangement certain elegance statistical standpoint still flawed yes pair omitted except missing pair also repeat statistically repeat happen internal state xoroshiro output xoroshiro additive output function vigna output function add together two half state end product histogram occur count graph histogram see result nt good bad perhaps lcg vanilla xorshift nevertheless much worse truncated xorshift pcg numerous generator might wonder issue really persist larger size xoroshiro like yes detection technique different drawing picture ca nt plot whole period generator know looking nt hard find handcoded exploration given length post leave part exercise reader tall order expect general prng test suite find kind issue generator output since talking tracking repeat pair value outlined previous post well big territory amount data needed discover flaw vast xoroshiro truncated fullstate multiply swap vigna output function oldschool truncated multiply get much better result histogram occur count much better vigna though get using conclusion looking cutdown version prngs tell useful thing also think show value certain kind playfulness informality valuable able express mathematical formalism writing program show thing look like sometimes give insight proof especially world random number generation mathematics alone currently fails characterize going
364,Lobsters,visualization,Data Visualization,Short Interview with Shirley Wu on getting started with Data Visualization,https://medium.com/@Matt24Ray_74743/qq-with-shirley-wu-junior-edition-df3f6316d839,short interview shirley wu getting started data visualization,qq shirley wu junior edition streaming work twitch shirley wu http sxywucom asked shirley three question common question asked junior developer one selfexploratory one one detailed one andy kirk blocksorg interactive data visualization web action currently working datasketches keep skill,qq shirley wu junior editionintroducing today qq quick question featuring shirley wu shirley incredible thing data science data visualization make want change career streaming work twitch watch got catch stream live last week super fun couple month back reached question shirley got back summer busy wanted pick back short interview todaytwitter shirley wuwebsite http sxywucomi asked shirley three question common question asked junior software developer currently working keep skill common question asked junior developer actually get asked time get data visualization pick answer first question rather simple one official way find data visualization web exciting field new academic majorminor data visualization everybody come different background computer science design data science computational biology architecture astronomy etc lot fell role necessity job lot material help make transition like one jim vallandingham selfexploratory one nadieh bremer also fantastic post data visualization book like one nathan yau detailed one nadieh looking work data visualization forming thought work find andy kirk little visualization design series fantatistic lot resource ten thousand example blocksorg scott murray interactive data visualization web great beginner guide wait bit coming update heard great thing elijah meek action shameless plug also frontend master workshop main goal cover core concept teach enough get going rest library basically take wish learned currently working desperately trying finish datasketches collab nadieh project month pick topic visualize topic end month writeup datasketchcode process month left year long project hoping time catch reading tv showshow keep skill well datasketches definitely keeping skill lot side project find curiosity go get data visualize usually process gave enough technical challenge always learned something new starting data visualization biggest advice pick curiosity dive right build something make sure whatever decide build start something small achievable really easy get discouraged dream something grand get easily hoping give small goal start achieve give pat back give next small achievable goal bunch small achievable goal something grand
365,Lobsters,visualization,Data Visualization,Creating a visual map between code and its parse tree,http://blog.loadzero.com/blog/parse-tree-vis/,creating visual map code parse tree,background yacc lex implementation jison high level overview grammar lexer demo parser demo renderer demo end,article present technique exploring parse tree visually browser first part article provides context demonstrates basic idea second part delf implementation detail provides javascript demonstration lexer parser renderer background recently work transpiler project deal parsing c code got far soon realized needed brush c grammar skill cracked open copy k r started pore grammar section small snippet grammar rule shown rule tell build parser recognize c code nt really lot enlighten rule map source code read started doodle piece paper writing small fragment code circling annotating like virtuous lazy programmer soon tired endeavour decided build something well exactly visual tool would let visually explore mapping chunk source code parse tree derived started sketch rough design would consist code pane left tree layout right warning programmer art mainly wanted able select bit code left examine parse tree right select node right see relevant bit code highlighted left started nut realised piece sitting front browser already come tooling inspecting dom even highlight matching part document dev tool figured could parse source code emit right kind html could get visual source code mapping tool free quickly whipped prototype using yacc lex parsed code generated html result initial prototype shown using fragment code emulator project working typedef unsigned int static int opbeq struct mipsemu emu r rt broff emu regs rt emu regs r emu delaypc broff else emu delaypc emu pc emu nextisdelay return inspect c code div using dev tool structure parse tree becomes apparent rule used parse particular piece code turned class label becomes easy ascend descend tree match parse tree node chunk code get highlighted intended effect displayed screenshot figure parse tree node marked class selected dev tool make browser highlight matching fragment code emu pc document snippet yacc grammar involved particular rule highlighted additive expression rule offset additiveexpression multiplicativeexpression additiveexpression multiplicativeexpression additiveexpression multiplicativeexpression happy prototype ported javascript could easily share demonstrate technique implementation detail covered next section implementation bulk work done parser lexer written using jison derived jeff lee grammar originally published usenet jeff lee grammar available high level overview overall flow data program follows lexer parser renderer browser lexer us regular expression recognize token input hand parser parser recognizes group token specified grammar executes action specified rule action build syntax tree syntax tree picked renderer make adjustment handle comment whitespace recurses tree emitting html appropriate node finally browser render html along cs syntax highlighting parse tree represented dom node inspected using dev tool jison grammar lexer parser published grammar source code lexer parser renderer published github shortly meantime obtained inspecting source code demo next section lexer demo input pane inputting standard ansi source code preprocessor directive click lex lexer lex source code first pane display token recognized second pane parser demo first pane inputting source code click parse parser parse source code first pane display syntax tree second pane renderer demo first pane inputting source code click render renderer render syntax tree syntactically marked html second pane discussed background section inspecting element second pane dev tool allow visually explore parse tree hovering parse tree node represented span element dev tool make browser highlight matching source code fragment taking advantage syntactical markup basic syntax highlighting added colour nicked gvim using cs snippet shown else switch return color fontweight bold storageclassspecifier typequalifier color fontweight bold end concludes presentation thanks reading trying demo
366,Lobsters,visualization,Data Visualization,Tron: Legacy Encom Boardroom Visualization,https://www.robscanlon.com/encom-boardroom/,tron legacy encom boardroom visualization,wikipedia stream info wikipedia irc feed freegeoipnet scene standalone library rob,wikipedia stream info txt x close looking visualization live update wikipedia data streamed realtime wikipedia public irc feed location information available anonymous user form ip address mapped real location using freegeoipnet wikipedia version quite complete yet populated historic data pulled image wikipedian profile page yet github version bit complete attempted stay true film simply nt practical recreate every element portrayed scene graphic displayed film contain remarkable amount detail despite visible couple second awe put together focus globe made available standalone library interested element loose adaptation film version site associated wikipedia tron legacy disney tribute thanks stopping rob
367,Lobsters,visualization,Data Visualization,The Graph of Thrones [Game of Thrones Season 7 Contest for Neo4j],https://neo4j.com/blog/graph-of-thrones/,graph throne game throne season contest,data kaggle fourth post instead feverishly awaiting next episode publish graph fun game throne data could one lucky winner,mentioned beginning tomaz bratanic great job already game throne series import data kaggle fourth post started analyze draw first insight around battle death allegiance excerpt blog post number four series create network person fought side year match person b battle person type type merge friend run algorithm write back result property node community call algounionfind person friend write true partitionproperty community show result computation match p person return pcommunity community collect pname member count count order count desc limit observe different community partition exist good representation state alliance fought together specific year could analysis couple different year compare alliance year change fun watching new game throne season already forget read book well instead feverishly awaiting next episode publish graph fun game throne data could one lucky winner
368,Lobsters,visualization,Data Visualization,Discover structure behind data with decision trees,http://vooban.com/en/tips-articles-geek-stuff/discover-structure-behind-data-with-decision-trees/,discover structure behind data decision tree,discover structure behind data decision tree http githubcomvoobandecisiontreesforknowledgediscovery star fork decision tree car evaluation data set http archiveicsuciedumldatasetscarevaluation overview car car acceptability buying maint safety comfort attribute instance class distribution number instance instance completely cover attribute space load car evaluation data set python train decision tree scikitlearn define feature preprocess car evaluation data set data set shape train simple decision tree fit data set plot save tree tree also viewed online plot importance input feature simple tree let generate fully perfect complex tree go deeper plot full tree tree also viewed online extract tree true code create function finally full feature importance conclusion repeat experiment using xgboost,discover structure behind data decision treesnote project also available github python notebook http githubcomvoobandecisiontreesforknowledgediscoverystar forklet understand model hidden structure behind data decision tree tutorial explore inspect model decision car evaluation data set decision tree work simple clause dichotomically chained together splitting data flow recursively reach leaf categorize data data inspection could used reverse engineer behavior functionsince decision tree good algorithm discovering structure hidden behind data use model car evaluation data set prediction problem deterministic surjective function mean input example data set cover possibility possible input value one answer predict thus two example input value would never different expected prediction point view data science property dataset need use test set use cross validation thus error obtain modelizing dataset would equal true test error test setthe attribute predict data set could example created programmatic function basically reverse engineer logic mapping input output recreate function able explain visuallyabout car evaluation data setfor information http archiveicsuciedumldatasetscarevaluationoverviewthe car evaluation database derived simple hierarchical decision model originally developed demonstration dex bohanec v rajkovic expert system decision making sistemica pp model evaluates car according following concept structure car car acceptabilityprice overall price buying buying pricemaint price maintenancetech technical characteristic safety estimated safety carcomfort comfort door number door person capacity term person carry lugboot size luggage boot input attribute printed lowercase besides target concept car model includes three intermediate concept price tech comfort every concept original model related lower level descendant set examplesthe car evaluation database contains example structural information removed ie directly relates car six input attribute buying maint door person lugboot safetybecause known underlying concept structure database may particularly useful testing constructive induction structure discovery methodsattributes instance class distributionnumber instance instance completely cover attribute space load car evaluation data set python train decision tree scikitlearnin define feature preprocess car evaluation data setwe preprocess attribute redundant feature using integer index linear represent value attribute well also using onehot encoding attribute possible value new feature despite fact redundant help make tree smaller since choice split data branchin data set shapetrain simple decision tree fit data set first let define hyperparameters depth treein decision tree trained error accuracy plot save treein note tree also viewed onlineplot importance input feature simple tree note feature importance according simple shallow tree fully complex tree would surely include featuresattributes different proportionsin let generate fully perfect complex treelet go deeper let build deeper tree least simple tree like one interesting simplfied view true logic behind datain decision tree trained error accuracy plot full treein note tree also viewed online would also possible extract tree true code create functionfinally full feature importance conclusionto sum managed get good classification result able explain result visually automatically note would possible solve regression problem algorithm predicting price rather categorysuch technique useful reverse engineering existing system old one coded peculiar programming language employee coded left technique also used data mining gaining business intelligence insight datain case data represent pure function like two input example possible two possible different prediction tree model data set accuracy hopefully situation logic behind data perfect possible repeat experiment using xgboost help incrementally training many tree reduce error training optimized fashion disadvantage boosted forest would harder explain due fact would many tree
369,Lobsters,visualization,Data Visualization,Visual 6502 in JavaScript,http://www.visual6502.org/JSSim/expert.html,visual javascript,,use z zoom x zoom click probe signal drag pan
371,Lobsters,visualization,Data Visualization,building lattice reduction (LLL) intuition,https://kel.bz/post/lll/,building lattice reduction lll intuition,ecdsa implementation leverage biased rngs tweet suggested background think would good thing read first lll inrelation euclid algorithm euclid algorithm finding gcds lll inrelation gramschmidt gramschmidt lll inrelation gaussian lattice reduction gauss algorithm reducing base dimension help proof technical explanation lll tl dr ordering input basis nt affect result deeper dive lll wikipedia mu length reduction lovász condition swap step stackoverflow post introduction mathematical cryptography thing stumped learning lll gaussian lengthreduction step guaranteed provide short nearly orthogonal vector stackoverflow post nt gaussian lattice reduction easily generalize work lattice vector mathematics public key cryptography lll use g guide quoting others,lll algorithm algorithm efficiently transforms bad basis lattice l pretty good basis lattice transformation bad basis better basis known lattice reduction useful application example attack ecdsa implementation leverage biased rngs lead private key recovery however experience learning lll work pretty rough material covering lll seems targeted towards mathematician guess wanted spend lot time trying weasel intuition mechanic algorithm blog post semiorganized brain dump process goal cover lll way slowly ratchet handwaving feel free read happy level understanding aside wrong anywhere please correct hitting nice balance mathematical accuracy intuition tough nt aim blatantly wrong please feel free tweet screwed super possible suggested background nt think lll make much sense nt decent grasp least wrote another blog post lattice used form asymmetric cryptosystem think would good thing read first cover suggested background lll inrelation euclid algorithm lll often get compared euclid algorithm finding gcds imperfect analogy highlevel core similarity namely lll euclid algorithm could broken two step reduction swap illustrate consider following pseudocode algorithm def euclidgcd b b base case return x mod b reduction step return euclidgcd b x swap step dont try grok yet def lll basis k n j reverse range reduction step loop mu k j basis k basis k mu basis j vector reduction update orthogonalized basis lovaszcondition k else basis k basis basis basis k swap step update orthogonalized basis k max return basis squint bit see similarity pseudocode think core idea algorithm use reduceandthenswap technique achieve goal point roughly say lll extension euclid algorithm applies set nvectors instead integer personally nt find explanation satisfying see could useful developing understanding lll inrelation gramschmidt another algorithm similar lll gramschmidt orthogonalization process highlevel gramschmidt g take input basis vector space return orthogonalized ie vector basis orthogonal one another basis span space leveraging vector projection decompose vector related component removing redundant component vector g nt make much sense suggest checking going much post algorithm similar lll lll us gramschmidt subroutine may say nt use g reduce lattice basis cant life suck sometimes g may get u closer basis want g guaranteed produce orthogonal vector form basis lattice check sage mage import matrixutils http githubcomkelbyludwigmage use installsh script install sage vector zz sage vector zz sage b matrix zz sage br bgramschmidt sage pplot b b sage pplot plot br colorgrey linestyle legendlabelunmodified legendcolorblue sage pplot plot br colorgrey linestyle legendlabelorthogonalized legendcolorgrey sage pplot notice orthogonalized grey vector touching lattice point fortunately u g still pretty useful understanding lll total loss lll inrelation gaussian lattice reduction unless basically sorceress imagine may find starting lattice basis reduction useful thankfully gauss algorithm reducing base dimension great couple reason gaussian lattice reduction also pretty similar lll gaussian lattice reduction analogous euclid algorithm lll act bridge two analogy use vector easy graph visualize gauss algorithm defined follows def gaussreduction true swap step round return reduction step let break bit gaussreduction take two vector represent lattice basis ignoring loop second first step swap step swap step ensures length smaller among thing ensure result gaussreduction ordered according length help proof ensure algorithm work well represent scalar projection onto longer vector onto shorter vector scalar produced g process gauss algorithm round nearest integer ensure still working vector within lattice important idea let visualize process first project onto projected vector look like rounding compute new reduced vector reduction step rounding cool huh rounding prior reduction sorta knocked new reduced vector becomes vector basis interesting reduced appears shorter length original coincidence guarantee reduction step additionally resultant basis vector nearly orthogonal exactly want nt want bog anyone detail work yet impatient jump technical explanation let wave hand say gaussreduction terminate return good ie short nearly orthogonal basis dimension base lll tl dr lll extends gauss algorithm reduction work n vector highlevel lll iterates input basis vector performs length reduction vector close gauss algorithm point however dealing n vector instead two need way ensure ordering input basis nt affect result assist ordering reduced basis length lll us heuristic called lovász condition determine vector input basis need swapped lll return basis vector gone least one reduction new basis roughly ordered length deeper dive lll help understand mechanic lll dig implementation algorithm python pseudocode repurposed wikipedia def lll b delta q gramschmidt b def mu j v b u q j return v u u u n k bnrows k n length reduction step j reversed range k ab mu k j b k b k round mu k j b j q gramschmidt b swap step q k q k delta mu k q q k k else b k b b b k q gramschmidt b k max return b lll pretty concise definitely seemingly magical logic first glance let start mu mu mu function produce scalar vector reduction similar scalar projection gramschmidt orthogonalization gaussian reduction major difference mu projecting lattice vector onto vector also lattice like gauss algorithm mu projecting lattice vector onto g orthogonalized vector word suppose b input basis q result gramschmidt applied b without normalization constant produced mu j scalar projection ith lattice basis vector b onto jth gramschmidt orthogonalized basis vector q j gif brief demonstration mu already know applying g wo nt necessarily give u basis lattice give u ideal orthogonalized matrix since use ideal matrix directly like think mu leveraging g orthogonalized matrix reference successful reduction length reduction isolating length reduction pseudocode lll n k bnrows outer loop condition k n length reduction loop j reversed range k ab mu k j reduce b k b k b k round mu k j b j recalculate g new basis b q gramschmidt b line establish two variable outer loop condition le concern length reduction step head straight length reduction loop length reduction loop iterates basis vector towards basis vector check absolute value mu k j greater significant since rounding value mu k j absolute value le would subtracting zero vector would nt reduce vector could remove statement line would superfluous assignment ie b k b k iteration length reduction step basically gramschmidt reduction step minor modification another way write lll length reduction step omitting condition vector length reduction loop b b b b round mu b b b round mu b round mu b b k b k round mu k b round mu k b round mu k b comparison gramschmidt vector calculated q b q b mu q q b mu q mu q q k b k mu k q mu k q mu k q finally modify basis b need keep orthogonalized basis uptodate line update q definitely efficient way keep q uptodate copied wikipedia ツ lovász condition swap step extracting swap step wikipedia pseudocode get u swap step q k q k delta mu k q q k k else b k b b b k q gramschmidt b k max return b point algorithm finished round lengthreduction lll must determine vector focus next lovász condition tell u whether continue next basis vector line whether place kth basis vector position line putting meaning lovász condition aside swap step reminiscent sorting algorithm recall k index basis vector lll focusing suppose lll kth vector lovász condition true lll move onto vector line stage lll basically saying kth vector roughly sorted length may change next round reduction though lovász condition false kth basis vector placed position line lll refocuses line vector position another reduction round done back swap step brings another way describe lll lll vector sorting algorithm occasionally screw ordering making vector smaller resort lovász condition said earlier basically heuristic determines vector good order aside nt much add unfortunately intuition still shaky multiple equivalent representation lovász none really felt right best explanation found thus far stackoverflow post introduction mathematical cryptography introduction mathmetical cryptography discus equivalent representation lovász condition comparison length projection basis vector onto orthogonal complement space spanned subset basis vector anyone reading link decently intuitive explanation describe lovász memorable way please let know thing stumped learning lll gaussian lengthreduction step guaranteed provide short nearly orthogonal vector made connection yet value gaussian reduction nearest integer mu value gramschmidt may seem obvious rounding result mu using scalar would produce good basis gramschmidt using exact value mu allows ideal decomposition vector used orthogonalize vector relation basis vector gaussian reduction rounding result could affect orthogonality fortunately even rounding mu length reduction step produce nearly orthogonal vector fact new lengthreduced vector b k b k b k round mu j b j always angle b j lie degree guarantee stem another fact b k projection onto b j always lie b j j latter fact true intuitively removed possible integer component b j b k therefore resultant projection b k onto b j must lie b j j suppose reduced b k know projection b k onto b j lie b j b j using definition vector projection see image rewrite inequality b k co theta proj b k onto b j b k ab co theta b j b k b j ab co theta alluded earlier gaussian two dimensional reduction make reduced vector b k shorter b j proof introduction mathematical cryptography according stackoverflow post two fact prove nearly orthogonal property output vector actually sure proof correct think made mistake nt proof either say much nt gaussian lattice reduction easily generalize work lattice vector found explanation mathematics public key cryptography explain well finally remark natural analogue gaussian reduction dimension hence natural try generalise lagrangegauss algorithm higher dimension generalisation dimension three given vallee semaev generalising higher dimension introduces problem example choosing right linear combination size reduce bn using solving cvp sublattice hard problem furthermore guarantee resulting basis actually good property high dimension refer nguyen stehl e full discussion issue algorithm work dimension lll overcome like think lll break ndimensional problem bunch case work little time technique plus lengthsorting approximation seems work well practice lll use g guide quoting others smarter noted example computational problem lattice easy one basis orthogonal sufficiently close orthogonal simple important observation one determine basis close orthogonal considering length gramschmidt vector precisely lattice basis close orthogonal length gramschmidt vector decrease rapidly thanks chris bellavia providing valuable feedback writeup
372,Lobsters,visualization,Data Visualization,Exploring Histograms,http://tinlizzie.org/histograms/,exploring histogram,build histogram rightskewed parameter sturges formula scott choice freedmandiaconis choice offset formulalike derivation r histogram data,build histogram gather data histogram based collection data numeric variable first step gather value variable initial dataset consider consists fuel consumption mile per gallon sample car model available yes rather date visualize dataset pool item item identified theory let u see item make hard get gestalt variable common value lot variation sort ordered list useful first step towards describing variable distribution sort item list see maximum value minimum value beyond hard say much center shape spread distribution part problem list completely filled space two item matter dissimilar value may need way see item relate clustered around specific value one lonely item value far removed others draw number line common convention use number line higher value displayed right smaller negative value left draw line representing possible number minimum maximum data value add data number line map item dot appropriate point along number line visualization draw path followed item way list line helping reveal adjacent list item end close far apart number line depending value first sample dataset mpg two item exactly value broaden understanding included two datasets animation scroll next see dataset opposite extreme type many data point nba dataset list age national basketball association athlete age rounded whole year multiple item ie multiple athlete age value show repeated value stacking top one another scrolling see third sample dataset geyser collection timing second eruption old faithful geyser yellowstone national park dataset value multiple multiplicity occurs value rounded integer timing measured multiple decimal place almost certainly would duplicate small datasets stack dot often called dotplot may give good sense distribution data however many realworld datasets value repeated many hundred thousand time practical standpoint becomes hard plot dot conversely dataset could duplicate even dense region item would appear unremarkable smear along number line histogram provide way visualize data aggregating bin used data size notice button bottom visualization allow switch sample datasets time portioning item essence histogram item placed along number line drawing histogram involves sectioning number line bin counting item fall bin notice distribution shown histogram echo distribution dot plot gathering item bin help u answer question distribution data like imagine trying describe dataset phone rather mechanically reading entire list value would useful provide summary saying whether variable distribution symmetric centered whether extreme value histogram another kind summary communicate overall property term portion ie bin data example geyser data described bimodal histogram two peak nba unimodal perhaps rightskewed bin height decrease towards right maybe histogram visually similar bar chart easy think also similarly objective unlike bar chart histogram governed many parameter describing dataset someone based see histogram need know whether different parameter value might led different description binbreaks bin start probably noticed histogram shown sample datasets different number bin used sturges formula common method estimating number bin histogram given size dataset given suggested number bin decide precise value bin boundary socalled break used common method look nearby round number break mpg multiple nba multiple two datasets bin turn cover range item value rather tidily look first last bin geyser placement relative value range look little arbitrary right fact hardandfast rule drawing histogram instead sturges formula could chosen number bin using scott choice freedmandiaconis choice among many method certainly rule saying binbreak value rounded nearest multiple important whether given histogram representative summary underlying dataset one way judge try varying position break see impact summary histogram conveys varying bin offset first let try shifting bin left right along number line based offset setting watch happens relative bin height offset change item moved one bin another changing aggregation therefore height bin typically various histogram shape look quite alike occasionally strangely different picture pop mouse scenario switcher take control animation also try switching available datasets varying bin width fix leftmost bin break minimum data value instead vary bin width width value try defined term default width used earlier stage width argued valid others example setting width year nba dataset item value always integer asking trouble bin inevitably span two value others include one generally bin width integer multiple precision used measuring data mpg value measured nearest dataset bin width mpg would fine unmasking magic maybe talk formula rule variation made feel histogram complicated thing calling complicated tool next section aim show case summarizing dataset bin even experimenting binning parameter achieved rather simple code code series formulalike derivation adjustable parameter offer candidate value select try hovering mouse pointer value width row see histogram different bin width fix value clicking clicking green square left side row turn sweep width value creating cloud semitransparent histogram different bin width creating sweep add annotation row table sweep affect try creating sweep mousing column right see various width affect derived bin broader bin tend capture item narrower bin fewer hard compare histogram different bin width narrow bin appear unfairly short solution plot histogram effect count per unit width use density checkbox toggle option switching density preserve overall shape histogram boost height narrow bin conversely tames broad one making comparison across bin width easier play sample datasets see find histogram changing bin width change visual center distribution adjustment added row let vary offset note taken account modified derivation break try setting sweep width mousing different value offset may want switch density plotting easier comparison explore parameter may come across parameter combination lead vastly different shape distribution often result mismatch scale data scale bin several stack dot get caught single bin way feel unexpected one thing bin openness focusing effect bin offset bin width least one parameter important openness bin openness deal item fall exactly bin boundary get counted belonging lower bin higher bin would mean boundary item counted twice histogram data item must assigned exactly one bin lower higher every histogramdrawing tool default policy might reveal policy let alone enable try alternative essay default leftopen mean item exactly value bin left ie lower limit counted belonging bin much difference choice leftopen rightopen make largely depends particular occurrence data value highly stacked ie multiple item course whether bin boundary happens fall exactly stack among sample datasets predictably nba greatest propensity dramatic variation try switching open l r notice data point exactly bin boundary jump moved neighboring bin hopefully convinced histogram quite sensitive parameter choice never good idea accept default bin provided visualization tool see histogram wild interested bin chosen sometimes author cherrypick parameter value show story nt really data ideal world people making histogram would understand parameter choice affect create people reading histogram would opportunity play parameter convince story seeing robust nt think every histogram need accompanied machinery shown essay simple interaction make easy people interact parameter governing histogram made control much lightweight drag bin left right adjust bin offset watch ghostly history histogram possibility trail behind drag width control adjust bin width see cloud histogram click sweep switch also made two larger datasets available exploration first diamond dataset come r package full dataset includes information diamond taken subset lessexpensive diamond explore choice bin width bin offset change shape center spread distribution find author package forgot page data second larger dataset marathon reference histogram marathon finishing time showed introduction histogram new york time visualizes data finishing time almost million marathon finisher use entire dataset rather sampled data take finisher new york city marathon wide bin data look roughly symmetric centered around fourandahalf hour decrease bin size pattern described wolfers nyt article becomes running marathon aim round number try hovering bin get sense spike occur would nt good every published histogram support simple exploration like hereby call visualizationsoftware builder make
373,Lobsters,visualization,Data Visualization,Gnod - The Global Network Of Discovery,http://www.gnod.com,gnod global network discovery,,global network discovery let use latest technological advance make u discover better thing
374,Lobsters,visualization,Data Visualization,Counterintuitive problem: Everyone in a room keeps giving dollars to random others,http://www.decisionsciencenews.com/2017/06/19/counterintuitive-problem-everyone-room-keeps-giving-dollars-random-others-youll-never-guess-happens-next/,counterintuitive problem everyone room keep giving dollar random others,main department electrical engineering computer science northwestern uri wilensky r tidyverse gganimate paper post post,main surprising policy effect giving talk department electrical engineering computer science northwestern met uri wilensky shared u simulation like assign imagine room full people dollar every tick clock every person money give dollar one randomly chosen person time progress money distributed quick reflection thought le equally alone asked supersmart phd question initial intuition distribution look play movie see work movie show clock tick le minute axis show number dollar person start dollar xaxis people red bar show wealth person tick clock blue bar red bar sorted show wealth distributed rightmost blue bar height highest red bar believe play r tidyverse gganimate code inequality arise seemingly innocuous policy need keep eye addendum confusion comment site thought address point people become rich never lose top position run infinitely contain every possible sequence good bad luck every person richest become poorest everyone experience every rank interesting thing simple simulation arrives stationary distribution skewed exponential shape due boundary zero wealth imagine people consider think problem quickly see paper see mathematician jordan ellenberg post post
375,Lobsters,visualization,Data Visualization,Image formats comparison,http://wyohknott.github.io/image-formats-comparison/,image format comparison,imageformatscomparision speed lossy compression metric evolution codec made document note jpeg jpeg xr webp xiphorg originally developed xooyoozoo text file,lossless large medium small tiny v lossless large medium small tiny imageformatscomparision speed lossy compression metric evolution codec made document note large image first encoded bpg filesizes medium large small medium tiny small everything else matched filesize due codec constraint ane lossless image pik instead displayed maximum quality available similarly minimum quality available produce file bigger codecs one compare quality tiny quality pik image subsampled full range ycbcr prior compression bpg jpeg jpeg xr webp decoded javascript needed rescaling page based xiphorg daala comparison page originally developed xooyoozoo list source image found text file last updated february
376,Lobsters,visualization,Data Visualization,Visualizing Sorting Algorithms in Color,http://jackxmorris.com/posts/color-sort,visualizing sorting algorithm color,different color space sorter comment powered disqus,different color space correct way sort list color every color mapped vector threedimensional space word color defined three unique number competing model representing space computer science probably familiar one redgreenblue rgb color space cubic model break color piece red green blue another color model common computer science huesaturationvalue space space map color onto cylinder highlighting different characteristic color sometimes helpful rgb description given set different color single way sort could sort redness hue combination saturation brightness way human familiar ordering color however order appear natural rainbow equivalent sorting hue unsorted color color sorted hue sorter since human used seeing color sorted hue realized easy way see large amount data determine whether data sorted mocked proofofconcept color sorter also work nice way visualize different sorting algorithm browser support canvas tag clear discrete clear random sort bubble insertion pixel changed please enable javascript view comment powered disqus
378,Lobsters,visualization,Data Visualization,Line breaking (2014),http://xxyxyz.org/line-breaking/,line breaking,line breaking brute force dynamic programming shortest path binary search total monotonicity divide conquer reading,line breaking line breaking also known word wrapping paragraph formation problem dividing text sequence line every line span fixed widthone way solving problem gradually form line word word case concatenating one word line would exceed prescribed width simply move word next line continue greedy algorithm simple fast may leave much whitespace end line reasoning visual disparity capture attention therefore alter reading arbitrary way word might advantageous make use full line width might help even line later consider following example b c e f g h j k l n p qqqqqqqqq b c e f g h j k l n p qqqqqqqqq counter wildly different line length one could measure cost breaking line particular way penalize huge gap much smaller one idea come configuration line break minimizes total sum penalty strategy know minimum raggedness line exceeding allowed width incur infinitely large penalty otherwise cost follow quickly growing function squared size gapas side note line breaking defined special case least weight subsequence problemthe word used diagram length time value best run pypy forcean immediate approach try search trough possible break configuration return best one since two consecutive word might get split break order n alternative consequently feasible form paragraph wordsfrom itertools import combination chain def powerset iterable list iterable return chainfromiterable combination r r range len def naive text width word textsplit count len word minimum break b powerset range count j chain b count w len join word j w width break width w j else minimum minimum break b line j chain break count linesappend join word j j return line dynamic programmingthe deficiency first idea lie repeatedly solves subproblems yet suppose optimal configuration line plucking last line would still keep layout optimal otherwise would possible improve together removed line would result even better configuration contradicting optimality solve subproblem necessary find later reuse line ending word contributes least overall cost n word could terminate n potential line algorithm run n def dynamic text width word textsplit count len word slack count range count range count slack width len word j range count slack j slack j len word j minimum count break count j range count j slack j cost else cost minimum slack j minimum j cost minimum j cost break j line j count j break j linesappend join word j j linesreverse return line shortest paththe previous way sped even length offset used calculate line length constant time easily preprocessed n rather n point putting ever word line reach allowed width performance improves n width exactly result text thought topologically sorted directed acyclic graph node arc representing word break respectively substituting penalty weight problem becomes one finding shortest path known solvable linear time note number edge remains n width flat us latter methoddef shortest text width word textsplit count len word offset w word offsetsappend offset len w minimum count break count range count j j count w offset j offset j w width break cost minimum width w cost minimum j minimum j cost break j j line j count j break j linesappend join word j j linesreverse return line binary searchthe method using dynamic programming written two nested loop outer one iterates every word inner one search suitable break hirschberg larmore showed algorithm able use binary search instead inner loop case weight function concave turn penalty discussed thus far made satisfy property handling infinity slightly differently giving overall time n log n similar algorithm due galil giancarlo given belowthe concave property say w j w j w j w j j jfrom collection import deque def binary text width word textsplit count len word offset w word offsetsappend offset len w minimum count break count def c j w offset j offset j w width return w width return minimum width w def h l k low high l count low high mid low high c l mid c k mid high mid else low mid c l high c k high return high return l q deque j range count l q c j j c l j minimum j c j j break j j qclear qappend j j else minimum j c l j break j l c j q c q q qpop qappend j h j q j q qpopleft else q q q line j count j break j linesappend join word j j linesreverse return line total monotonicityeach iteration dynamic programming scheme also seen filling matrix cell add least overall cost subproblem column minimum penalty concave weight function implies matrix totally monotone shor moran aggarwal wilber klawe devised algorithm find row maximum matrix linear time even though smawk modified find column minimum instead possible apply directly online matrix might try evaluate available cell ie cell dependent yet unknown column minimum however wilber came algorithm pretend know minimum still run n time ordered algorithm obeys availability matrix presented aggarwal tokuyama followsdef linear text width word textsplit count len word offset w word offsetsappend offset len w minimum count break count def cost j w offset j offset j w width return w width return minimum width w def smawk row column stack len row stack c column len stack cost stack c cost row c len stack len column stackappend row else stackpop else stackappend row row stack len column smawk row column j j len column j len column end break column j else end row c cost row column j c minimum column j minimum column j c break column j row row end else j n count offset true r min n edge offset smawk range offset edge range edge r offset x minimum r offset j range r cost j offset r offset x n j offset j break else r n break line j count j break j linesappend join word j j linesreverse return line divide conquerone additional option replace preceding smawk routine fairly large constant factor simple divide conquer monotone matrix search complexity drop back n log n smaller problem instance may actually run faster asymptotically superior approachdef divide text width word textsplit count len word offset w word offsetsappend offset len w minimum count break count def cost j w offset j offset j w width return return minimum width w def search stack stack stackpop j range c cost j c minimum j minimum j c break j stackappend break j stackappend break j j n count offset true r min n edge offset search offset edge edge r offset x minimum r offset j range r cost j offset r offset x n j offset j break else r n break line j count j break j linesappend join word j j linesreverse return line readingd e knuth f plass breaking paragraph line software practice experience hirschberg l l larmore least weight subsequence problem siam journal computing hirschberg l l larmore new application failure function journal association computer machinery aggarwal klawe moran p shor r wilber geometric application matrixsearching algorithm algorithmica wilber concave leastweight subsequence problem revisited journal algorithm galil r giancarlo speeding dynamic programming application molecular biology theoretical computer science galil k park lineartime algorithm concave onedimensional dynamic programming information processing letter eppstein sequence comparison mixed convex concave cost journal algorithm eppstein z galil r giancarlo g f italiano sparse dynamic programming ii convex concave cost function journal acm becker construction nearly optimal multiway tree cocoon vol lecture note computer science de moor j gibbon bridging algorithm gap lineartime functional program paragraph formatting technical report oxford brooke university aggarwal tokuyama consecutive interval query dynamic programming interval discrete applied mathematics
379,Lobsters,visualization,Data Visualization,The Decline of Imgur on Reddit and the Rise of Reddit's Native Image Hosting,http://minimaxir.com/2017/06/imgur-decline/,decline imgur reddit rise reddit native image hosting,reported public bigquery u presidential election imgur made beta rollout sitewide release market share rpics rgifs silver lining pushed app downloads disabling uploads conclusion giphy million r notebook github repository patreon,last week bloomberg reported reddit raising million venture capital valuation billion since reddit data public bigquery quickly checked recent user engagement growth spurt could justify high worth example bigquery aggregate total number reddit submission made month end april standardsql select datetrunc date timestampseconds createdutc month mon count numsubmissions fhbigqueryredditposts tablesuffix tablesuffix group mon order mon turn reddit indeed get large boost activity toward end likely due heated discussion event around u presidential election reddit maintained growth rate since appealing potential investorshow site benefiting reddit growth imgur imagehost developed de facto image hosting service reddit shared reddit continual imgur submission activity abruptly dropped happened coincidentally reddit made image host submission site initially limited uploads via iosandroid apps reddit allowed desktop user upload image beta rollout starting may full sitewide release june many reddithosted image submission compared number imgur submission wow native reddit image caught onmarket sharedid rise reddithosted image cause decline imgur reddit let look daily number imgur submission reddithosted image submission december april normalized total number sitewide submission day give u reddit market share metric servicesadditionally plot vertical line representing date reddithosted image rolled limited beta release full sitewide release see link event submission behaviorbefore reddit added native image hosting imgur accounted submission reddit reddithosted image shared reddit image imgurinstead looking reddit spam subreddits could skew result also look largest imageonly subreddits rpics rgifs part beta rollouthere impact two rollouts much noticeable immediate increase reddithosted image market share rollout proportional decrease imgur market share growth rate beta release flat service reddit image hosting becomes sitewide market share reddithostedimgur image increasedecrease linearly time user officially learn native image upload functionality exists trend appear slowing downa silver lining obviously imgur like losing large chunk traffic possibility outcome better business implied chart abovehosting image internet free bandwidth cost primary reason dedicated image host died year direct image link show user image nothing else convenient pure loss service image host encourage linking image landing page website filled ad generate expected revenue greater cost serving imageafter user uploads image imgur desktop user given two share link submitted site like reddit image link go image ad direct link imagerecently imgur pushed app downloads visiting site iosandroid device including disabling uploads mobile browser sharing image imgur app way share image image link could lead increase proportion adfilled imgur image link reddit said increase could counteract decrease total imgur submission imgur could actually come aheadwith bigquery check percentage imgur submission reddit direct link percentage indirectlead landing page see ratio change along time horizon used welp significant change ratio time eliminating possible silver liningconclusionnote decline imgur reddit say nothing imgur business entirely possible imgur traffic main site sufficient growth loss reddit traffic certainly ignored interesting visualize quickly service replaced equivalent native featureit worth nothing new competitor image space giphy utilize image hosting secondary service instead focus building repository image licensed accessed programmatically service like slack facebook twitter giphy raised million total approach perhaps image hosting market indeed changedyou view r code bigqueries used visualize reddit data r notebook also view imagesdata used post github repositoryyou free use data visualization article however wish would greatly appreciated proper attribution given article andor liked blog post set patreon fund machine learningdeep learningsoftwarehardware need future crazy yet cool project monetary contribution patreon appreciated put good creative use
380,Lobsters,visualization,Data Visualization,Numbers Every Programmer Should Know By Year,https://people.eecs.berkeley.edu/~rcs/research/interactive_latency.html,number every programmer know year,,
381,Lobsters,visualization,Data Visualization,Plain old graphs that solve your problems,https://www.zeroequalsfalse.press/2017/03/11/graphs/,plain old graph solve problem,introduction graph representation vertex node edge adjacency matrix finite graph directed edge undirected adjacency list post graph search dfs depth first search bfs breadth first search queue dfs bfs search heuristic cost function consistent conclusion,introduction graph computer software little different bar graph high school sure still mapping relation represented differently graph actually help solve really large number problem used solve problem social networking eg finding relation friend friend friend gps navigation finding optimal route house nearest shopping centre graph used regularly robotics ai example sometimes maintaining possible state robot allowed nt break stuff move wall great scheduling problem like schedule traffic flow solved graph colouring ahhh list go solve many realworld problem graph representation real important understand basic concept graph even might boring pay back tenfold long run start top graph well little point right oh yeah connect point together somehow voila graph point called vertex node using node terminology consistency line called called edge ok cool get graph node edge connected way maybe looking something like property help define graph directed edge point oneway example directed graph might road map consisting oneway street travel undirected edge point way go road weighted weighted graph sort cost travelling particular edge eg min travel street unweighted costnassociated edge acyclic never encounter node twice connected node graph way connected graph physical model could pick since connected graph wo nt fall apart disconnected graph made subgraphs bipartite represent code answer many way really depends problem represent graph two goto adjacency matrix adjacency matrix used represent finite graph important note problem dealing continuous space better choice represent graph adjacency matrix essentially matrix sparse mostly filled row associated column node graph might look something like relationship directed edge looking something like want undirected relationship must look row column write matrix denote edge undirected edge look something like making bidirectional function direction use adjacency matrix f godly lookup speed possible directly query graph see connection two node simply looking index matrix eg matrix j row j column performs constant time nt waste time searching entire matrix need ca nt good space conscious adjacency matrix take lot space precise v number node graph simply store every possible combination edge node even denoting edge node also take extra time look adjacent node search node graph efficient would pick adjacency matrix amount node graph relatively small need fast access time adjacency list favorite adjacency list used represent finite graph essentially list node node list maintains pointer list neighbouring node something like easily implemented using hashtable nt read post hash table check detail work hood implement using hashtable simple one approach could using objectoriented approach representing node graph object inserting node object hashtable key list neighbouring node object value list neighbour empty ok good adjacency list good graph representation possible retrieve neighbour node constant time could translate realworld problem hmm maybe finding friend person x social network thinking problem node object could replaced person object property person object could name dob age etc lookup hashtable person x receive back list person object aka friend social circle graph search brief intro actually represent graph wanted use graph time come friend search answer topic extremely broad many search method go popular one hopefully also touching advanced search method one thing note always want end goal state finding goal node must start initial node travel path reach goal graph world initial node also referred root node use root initial interchangeably dfs depth first search dfs depthfirst search method used searching graph start search root node selects neighbouring node start exploring connected node explored think going tree exploring child node hit bottom tree come back selects next neighbouring node repeat process expanding tree million node graph looking goal node hmm could problem especially branching factor quite large goal node deep tree could also work quite well hard say usually depends problem implementing dfs use stack pseudocode dfs follows dfs graph root goal let stack spush root empty node spop node goal return node node labeled discovered label node discovered edge node neighbour graphadjacentedges node spush neighbour bfs breadth first search bfs breadthfirst search another method searching graph mostofthetime preferred using dfs explores graph level even search nature goal node somewhat closer root node bfs probably better choice dfs bfs thing start search root node expands neighbour first level directly connected root selects neighbour expands node first level go back selects next connected nodeneighbour expands node first level process repeated goal node finally found implementing bfs use queue pseudocode bfs follows bfs graph root goal create empty set create empty queue q rootparent null add root qenqueue root q empty current qdequeue current goal return current node n neighbour current n add n nparent current qenqueue n dfs bfs classified uninformed search method blindly searching goal node another thing add extremely helpful understand algorithm work visual representation way see algorithm suppose work making easier represent code check two link youtube clip demonstrating dfs youtube clip demonstrating bfs ok question better bfs dfs way inform search expand node optimal path goal node search search extension dijkstra algorithm used get shortest path two node make different us heuristic guide search direction goal node search work expected must heuristic admissible mean never overestimate cost reaching goal node shown following h n h n h n cost reach goal n applies cost function neighbouring node current node beginning search current node would initial starting node would apply cost function neighbouring node cost function represented f n g n h n f n total estimated cost reach goal node g n estimated cost get node h n heuristic estimating cost reach goal node n implementing search use priority queue pseudocode follows graph root goal initial root create empty priorityqueue q qadd initial q empty current qremove label current visited current goal return current node n neighbour current g n g current cost n f n g n h n qadd n f n set node child current call remove priority queue assuming remove node minimum f value calculated using cost function f n might wondering heuristic come remember used calculate f n one thing note h n f n g n estimated cost get node algorithm reverts back dijkstra algorithm guaranteeing shortest path h n exact cost get goal node never expand node optimal path goal node making algorithm blazingly fast order optimal heuristic h n must never overestimate cost reaching goal node consistent consistent heuristic heuristic consistent cost current node neighbouring node plus h value neighbouring node le equal h value current node cost current neighbour h neighbour h n wtf mean solution always give shortest path matter node start happens heuristic fails overestimate cost goal well algorithm misjudge node actually worthwhile expanding perform optimally use also searching continuous space essentially never ending amount graph possible discretize graph use search discretized version find goal node state conclusion graph constructed many way used solve many problem considering use graph good practice model problem try adapt graph scenario fit well yes awesome use graph plenty technology available build solution every programming language data structure available standard library always learn graph hope post sparked interest graph mine
383,Lobsters,visualization,Data Visualization,"Tabs, spaces and your salary - how is it really?",http://evelinag.com/blog/2017/06-20-stackoverflow-tabs-spaces-and-salary/index.html,tab space salary really,developer use space make money use tab bbc news story original finding original blog post exploring data linear regression later diving deeper linear regression full model reduced model open source contributor use space tab tab space open source salary fit together exploring salary distribution importance version control version control summary version control important summary data trap summary code used blog post github,couple day ago david robinson published article stack overflow blog provocative title developer use space make money use tab us data stack overflow developer survey show indeed using space associated higher salary even account experience level start using space instead tab increase salary answer clearly correlation imply causation intuitively indentation source code direct causal link anyone salary whole story left lot people scratching head even made bbc news story believe data science answering question providing new insight data unfortunately original article offer many answer fun correlation behind blog post attempt shed light issue original article encouraged people explore data precisely like invite follow little data science detective story deep dive data stack overflow survey see tab space seem spoiler salary type company environment work rather type indentation use original finding original blog post david show using space instead tab associated higher salary effect seems hold regardless experience level also people mix tab space similar salary people prefer tab intresting right also effect seem related programming language type developer go size company employed better paid developer prefer space clear must confounding variable sure present survey started investigation looking linear regression model original blog post exploring data linear regression original post included linear regression model predicts salary based several variable country year programming experience tab space usage developer type language level formal education eg bachelor master doctorate whether contribute open source whether program hobby company size decided closer look result play modified model linear regression concentrated developer located united state partly largest group developer survey looking one country remove much regional variation also doubt salary reported country later please bear get statistical always skip directly plot result want show line reasoning followed lead insight diving deeper linear regression like note changed regression model used david original post excluded bias term intercept lead anovatype model used standard linear regression including intercept fitted two regression model full model information tab space included reduced model without information tab space comparing two model tell much information get including preferred indentation method model predict salary similarly well similarly badly based inclined look know look coefficient determination say much variance salary explain using input variable year experience programming language etc higher coefficient better able model salary combination factor model coefficient determination adjusted adj full model reduced model linear model similar performance explain variance salary full model higher expected model variable adjusted adj value used compare two model see one provides better fit full model higher adj difference seems knowledge tab space usage although significant contribute much extra information reduced linear regression model partly compensate missing information using variable model checked collinearity always danger predictive model collinearity situation variable highly correlated make difficult extract individual effect interestingly sign happening regression coefficient change massively two model anything change full reduced model decided look pvalues regression coefficient represent significance variable model significance parameter increase significantly looked variable pvalues dropped least order magnitude see variable became important reduced model compared full model variable gained significance reduced model year programming experience contributing open source php coefficient variable also changed dramatically together mean remove information tab space model model compensates boosting experience open source contribution also work php experience obvious factor affect salary surprising first candidate investigation open source looked open source contribution detail interesting insight contributing open source related higher salary least live u possibly people higher salary likely contribute open source effect also hold across experience level open source contributor use space tab open source relate original tab versus space debate turn people contribute open source use space much people roughly similar number people use tab use space among contribute open source look people contribute open source twice likely use space rather tab difference also statistically significant pvalue time trend hold internationally well although slightly people using tab open source think getting closer potential causal explanation main advantage using tab set displayed ide space layout fixed mean code look different different people using tab people start mixing two one person using tab using space within file lead mess theory diverse people working open source project together without enforced coding style possible formatting mess nudging people towards using space simply code consistent everyone one possible theory look see possibly language community use predominantly space like python ruby active open source correlation imply causation tab space open source salary fit together question open source work account higher salary people use space tab plot salary based open source contribution indentation method get complex picture compared original compared tab space junior developer using tab space contributing open source slightly higher median salary people using space contributing open source contributor year experience use tab higher median salary people use space additionally le year professional experience use tab contributing open source related higher salary use space better paid also contribute open source take result grain salt count group getting relatively small overall effect still change global picture people use space generally higher salary people use tab something else play well exploring salary distribution point convinced variable affecting salary tab space user simple regression model want go wild goose chase start adding available variable categorical decided look salary distribution different indentation method space user generally higher salary tab user subgroup space user skew result plotted distribution different experience level graph show salary density developer le five year experience effect clearest three distribution main mode peak around salary value usd peak represents junior developer seems using tab space make difference salary interesting salary distribution space user actually bimodal two peak people similar salary developer subgroup people use predominantly space paid much rest group people differ rest looked make different across question survey used test see number people different category significantly different tab space user importance version control number programmer higher salary category large ended lot potential candidate one variable jumped significantly different higher paid group rest surprised version control filtered version control system used frequently among junior developer u least user survey higher salary lower salary git use system subversion team foundation server surprisingly turn version control system usage independent indentation method across developer worldwide junior u one pvalue mean quite strong link tab space version control system let closer look among u developer two common version control system least user dataset git team foundation server tfs effect developer salary people use git higher salary across experience level interesting insight might also connected previous investigation open source contributor importantly version control relate tab space usage together salary interestingly version control system break pattern higher salary always associated space user company using git mostly higher salary regardless indentation method least developer year experience people using tab git larger salary people using space tfs across experience level within git using group people using space still higher salary people using tab within tfs group pattern clear people using space tfs lowest salary group internationally picture partly different seems probably want programmer year experience use space tfs completeness looked also subversion slightly common tfs internationally subversion follow pattern space user overall larger salary tab user git tab user similar salary subversion space user git tab space user summary version control important sum combination open source contribution version control system usage account least difference salary tab space user mean start using git contribute open source get paid although would great anyway believe two factor together point towards different environment different type company traditional use modern technology traditional oldschool company use git open source code seem lower salary general type environment hard measure directly survey factor point direction definitely whole story sure variable shed light tabsspaces salary inequality conclusion also based mainly u developer effect clearest issue salary country discsuss whole analysis concentrated mainly u developer salary reason looking distribution salary respect various factor one thing caught attention make much sense data working contained professional developer working full time yet quite large group people low annual salary usd unfortunately strange lot inequality worldwide weird country people reporting low salary country largest number notsowell paid developer india make sense context average salary india significantly lower oecd country look country india poland russia even germany may gigantic salary le usd full time developer extremely low come czech republic domain knowledge region suspicion happening data checked salary distribution couple country central eastern europe distribution compare country part world country uk france even india salary distribution single peak hand central eastern european country bimodal salary distribution two peak first peak corresponds low salary second corresponds larger believable annual salary le pronounced germany poland much russia checked couple country including czech republic ukraine trend hold across country region seem bimodal salary distribution happening based experience czech always discus salary term annual salary term monthly salary never ever heard czech person referring annual salary checked polish friend told exact story nobody ever talk annual salary monthly salary considering seems likely many people simply read survey question properly reported monthly salary instead simply number used think fix data somehow example fit mixture model data multiply lowsalary group get annual salary create salary distribution lefttruncated represents actual salary country better original distribution example poland summary data trap main conclusion salary issue always careful data many hidden bias survey quite unexpected aware people talk monthly salary would probably assumed country lot badly paid internshipstyle position skewing data sure country discus salary term annual salary reason used mainly u data analysis hopefully data consistent unfortunately people always fill survey correctly hard discover might affected tab versus space question well based reaction social medium seems people filledin use tab press tab key even though tab implicitly converted space editor summary sum quite convinced difference salary tab space user mainly due type company environment work environment people use git contribute open source associated higher salary space rather tab sure factor well let know think beware never trust data completely finally like thank david providing code used blog post stack overflow publishing data developer survey get code used produce analysis github
384,Lobsters,visualization,Data Visualization,Brendan Gregg Shouting in the Datacenter (2008),https://youtu.be/tDacjrSCeq4,brendan gregg shouting datacenter,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature shouting datacenter youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature shouting datacenter youtube
385,Lobsters,visualization,Data Visualization,Intro to SDR and RF Signal Analysis,https://www.elttam.com.au/blog/intro-sdr-and-rf-analysis/,intro sdr rf signal analysis,introduction basic rf theory terminology radio frequency rf frequency wavelength amplitude phase frequency wavelength wave cycle frequency wavelength band amplitude phase phase modulation modulation carrier wave analogue modulation scheme digital modulation symbol amplitude shift keying frequency shift keying phase shift keying identify modulation captured signal note complex digital modulation quadrature phase shift keying qpsk quadrature amplitude modulation qam spread spectrum system direct sequence spread spectrum ds frequency hopping spread spectrum software defined radio sdr note capturing analysing rf signal samplerate bandwidth gain note note baudrate methodology reversing rf signal hitb want hack radio open source intelligence osint characterise channel identify modulation determine symbol rate determine synchronisation extract symbol analysing common household rf device newish cheap wireless doorbell leet doorbell hax old weird garage door remote note replay attack common home business security system replay attack rolling code wifi demodulation learned,introduction increasing popularity internet thing iot device becoming wireless much apparent today society availability modern software defined radio sdr hardware become accessible cheaper easier ever examine radio frequency rf signal used device communicate following discussion attempt understand communication information transmitted rf sdr may used analyse possibly reverse engineer signal back understandable data achieve rf signal number simple household rf device examined visually effort identify characteristic transmitted signal along data transmitted basic rf theory terminology radio frequency rf talk rf first understanding electromagnetic radiation emr charged particle accelerated space emitted antenna produce two oscillating field occur perpendicular electric field magnetic field oscillating field called em wave visualised shown following image x time e electric field b magnetic field image ref http commonswikimediaorgwikifile emwavegif already know em wave deal daily basis radio wave microwave infrared radiation visible light ultraviolet light xrays gammarays emr difference type emr frequency range em wave oscillate rf generally thought emr em wave frequency range mostly used radar wireless communication easy example rf communication wifi operates frequency range purpose need identify basic characteristic em wave order analyse given signal frequency wavelength amplitude phase frequency wavelength previously discussed frequency wave rate em field oscillating generally electric field measured wave cycle oscillating pattern wave pattern repeat frequency f therefore number em wave cycle occur within given unit time generally measured hertz hz number wave cycle per second seen following image show ten wave cycle signal frequency hz image ref http frequency also close relationship wavelength λ distance wave travel one wave cycle emr travel speed light c vacuum frequency wavelength inversely proportional calculate formula λ f v may used v velocity given medium generally around km approx speed light vacuum frequency categorised frequency band seen following image also showing relationship frequency wavelength wavelengthimportant ask directly relates choosing appropriate antenna length given signal cover later image ref http frequency chosen depending need application instance lower frequency tend propagate longer distance higher frequency used application like overthehorizon radar similar frequency also interfere hence radio station separated frequency many country government body control rf spectrum avoid interference application regulate rf use within australia australian communication medium authority acma example spectrum allocation found small portion rf spectrum allows transmission without need licence amplitude amplitude rf signal thought measure change electric field oscillation single period sinusoidal wave magnitude wave swing reference value measured way peak peaktopeak root mean square rms amplitude shown following image item respectively image ref http enwikipediaorgwikiamplitude mediafile sinevoltagesvg purpose need observe change amplitude signal need measure value however within telecommunication value usually measure voltage current field intensity power phase lastly let look phase characteristic rf signal phase wave thought position single point time wave cycle sinusoidal wave usually expressed degree radian shown following image image ref http enwikipediaorgwikiphase wave mediafile oscillatingsinewavegif see wave shifted degree phase would complete opposite original waveform modulation useful form communication rf signal must way carry information previous three wave characteristic frequency amplitude phase make building block modifying rf signal way carry data called modulation involves mixing modulating signal contains information transmitted periodic waveform called carrier wave cw propagates signal environment analogue modulation scheme analogue modulation involves sending analogue data signal analogue carrier wave example would analogue tv radio station transmission analogue modulation scheme however simplest amplitude frequency phase modulation amplitude modulation amplitude modulation amplitude carrier wave modulated data signal seen diagram image ref http frequency modulation fm frequency modulation seen diagram show data signal used modulate frequency characteristic carrier wave image ref http phase modulation pm analogue phase modulation look similar frequency modulation may difficult differentiate two without prior knowledge signal modulated modulation carrier wave phase either pushed forward backward modulating data signal image ref http digital modulation digital modulation come need represent digital signal ie one zero analogue medium rf transmission achieve discrete rf energy state used representing quantity digital information called symbol three basic modulation scheme transmitting digital data amplitude shift keying frequency shift keying phase shift keying amplitude shift keying ask keying ook ask involves using digital data modulate amplitude carrier wave may altering amplitude simply turning signal forming pulse energy called onoff keying ook following image show binary data might modulate carrier wave ask ook image ref http many form radar transmit pulse energy like listen weak reflection pulse order determine position object environment frequency shift keying fsk similar ask fsk modulates frequency carrier wave binary data forming symbol distinct change frequency represent bit seen image ref http phase shift keying psk finally psk us digital data modulate phase carrier wave form distinct angular change phase signal represent binary data symbol image ref http identify modulation captured signal knowing learned respect basic modulation scheme identify modulation used following captured signal analogue digital note animated gif signal show waterfall plot time v frequency higher amplitude also showing brighter green top plot amplitude v frequency bottom image follows animated gif show subsection waveform represents wave amplitude v time signal signal signal said first second fm third ask ook correct however third signal implement slightly complex type ask known pulse duration modulation pdm duration pulse relates modulating data complex digital modulation even high speed system transmission digital data format symbol represents single one zero slow increase speed data transfer complex form modulation used single symbol represents several bit give idea might implemented quickly look quadrature phase shift keying qpsk quadrature amplitude modulation qam modulation component wifi signal quadrature phase shift keying qpsk qpsk involves modulating signal achieve four distinct phase shifted symbol representing combination two bit shown following image image ref http visualised plotting point circular nature sinusoidal pattern shown diagram plane represents inphase component q quadrature image ref http enwikipediaorgwikiphaseshiftkeying mediafile qpskgraycodedsvg modification exist add phase point produce distinct symbol increase data rate quadrature amplitude modulation qam qam furthers concept qpsk adding modulation amplitude addition phase signal good example seen following image show image ref http see sixteen distinct symbol relating four bit binary data spread spectrum system combination digital modulation transmission data spread across multiple frequency called spread spectrum used reduce effect interference possibly make signal difficult detect appears similar noise two common form spread spectrum direct sequence spread spectrum ds frequency hopping spread spectrum ds take transmitted bit represents multiple bit called spreading code transmitted wide frequency range fhss hop transmission predetermined set frequency receiver synchronised transmitter software defined radio sdr example signal captured using hardware sdr device displayed using signal analysis software baudline radio equipment expensive usually specific particular application sdr solves problem removing component would usually implemented hardware mixer amplifier modulators demodulator implement software mean analyse raw signal received however u implement component software order retrieve original data requires deeper understanding purpose use inexpensive sdr hardware software take look captured signal go visually analysing several good relatively inexpensive sdr hardware device market used receive transmit rf one used following rtlsdr hackrf one yardstick one sdr used receive transmit modulated signal software tool found helpful capturing analysing rf signal linux platform follows baudline recording analysis osmocomfft recording analysis inspectrum analysis gnu radio companion recording analysis demodulation whole bunch software tool free many including lot automatically demodulate data specific rf system note sdr quite resource intensive amount data captured small time frame large also requires high bandwidth usb port sdr device attached also cause issue using virtual machine plenty information online setting sdr device software google friend capturing analysing rf signal sdr convert analogue signal received digital data something note concept samplerate bandwidth samplerate refers number sample taken analogue signal per second directly relates bandwidth frequency spectrum visible particular point time example higher samplerate frequency see however also increase amount data received samplerate possible depends sdr device ability particular computing resource gain also another important concept relates amplification signal worthwhile read respect particular sdr device start view analyse specific rf signal found easiest way particular resource pipe data received sdr device baudline quite simple rtlsdr device hackrf using cli command rtlsdr hackrftransfer respectively however characteristic particular device need known rtlsdr hackrf use two channel sample quadrature value q previously talked case hackrf sample signed value need relayed baudline order correctly interpret data make easier wrote following bash script pipe hackrf output baudline allow realtime viewing spectrum binbash hackrfbaudlinesh frequency samplerate ifgain bbgain pipe hackrf output baudline hackrftransfer r f l g baudline reset basefrequency samplerate channel format quadrature flipcomplex stdin example running hackrfbaudlinesh might give something similar following image baudline noise set however show portion rf spectrum around centre frequency mhz several fm radio station range visible note something mention see constant distinct signal right centre frequency called direct current dc offset artifact measurement system implemented device apparently common quadrature sampling system however seemed particularly pronounced hackrf easiest way deal offset centre frequency slightly frequency wish analyse osmocomfft also useful looking large portion rf spectrum order identify particular signal however baudline appears lot feature analysing signal although many feature idea one found useful follows usually found rightclicking within baudline window input color aperture playing setting help reduce noise input device decimate mixer setting help reduce visible spectrum focus specific signal process transform size increase decrease size internal fast fourier transform help give better view either frequency time domain display waveform give waveform output signal pause used pause output inspect signal measure system delta selected used measure time instance ook pulse precision also increased periodicity bar used pressing holding mouse button tapping shift help measure symbol interval using alt arrow key zoom within window baudline osmocomfft option save file also possible straight rtlsdr hackrf command line tool rtlsdr hackrftransfer note quick note antenna antenna theory whole science however improve received signal good idea use antenna quarter wavelength desired frequency receive telescopic antenna may simple extending approximately correct length quarter wavelength centimetre approximated dividing frequency mhz multiplying dividing another useful tool inspectrum inspectrum load view frequency spectrum captured use one tool however offer nice cursor function allows easily identify symbol symbol rate otherwise known baudrate see use garage door example later section methodology reversing rf signal ultimate goal reverse engineer rf signal understand protocol nice methodology follow found hack box hitb conference talk matt knight marc newlin found hitb want hack radio discus following step open source intelligence osint attempt easily find characteristic modulation signal characterise channel find frequency bandwidth signal operating identify modulation determine type modulation used determine symbol rate calculate baudrate signal determine synchronisation identify preamble synchronisation pattern signal extract symbol demodulate extract binary data continue reverse like software reversing purpose visually analysing rf signal mainly look aspect step analysing common household rf device newish cheap wireless doorbell first take look cheap wireless doorbell system purchased local electronics store specifically rf signal doorbell remote transmits doorbell receiver doorbell remote question seen following image already determine operating frequency looking back device part number model number also seen may useful online osint opening device information found shown following image avoid ruining surprise osint performed device fire hackrf baudline take look rf signal produced pressing button doorbell remote using previously mentioned script pipe received data baudline enter argument ensure correct frequency range viewed something like hackrfbaudline using functionality baudline zero signal remote button pressed waterfall plot signal seen following image characterise channel operating base frequency mhz narrow bandwidth knowing basic characteristic em wave else tell signal amplitude changing fact signal appears pulsed likely form ask ook also appears number repeating packet short gap within baudline pause output take closer look signal opening waveform window scroll entire transmission packet sequence ook shown image clearly see ook however definite short pulse long pulse visible likely pdm answer modulation question need work symbol rate case see two distinct symbol used represent different information one might short gap long pulse long gap short pulse use previously mentioned delta selected functionality baudline measure time symbol calculate many would occur within one second determine baudrate baud symbol per second however case might want transmit signal later need represent symbol instance short pulse symbol may represented measure shortest pulse gap appears using shortest pulse get baud knowing pdm assume short pulse may represent whilst long pulse may represent assumption say doorbell transmits multiple packet binary data click button capturing another click remote sequence change also notice short pulse start shown waveform sequence repeating packet likely kind synchronisation receiver exactly preamble something know rf signal channel mhz centre frequency modulation pulse duration modulation pdm symbol rate baud synchronisation short pulse occurs repeating packet symbol made assumption two symbol representing binary data keying one button remote unable determine structure packet without another device however let go ahead test know transmitting data attempting ring doorbell case use yardstick one usb device transmit data sent rfcat similar tool netcat rf write python script interact yardstick one send data need represent data respect baudrate previously mentioned assumed symbol representing long gap short pulse need transmit symbol representing need transmit consideration gap packet measured four symbol duration also synchronisation pulse appears measured occur four symbol prior first packet resulting python script seen usrbinpython import sys rflib import import bitstring basefreq mhz baudrate key pad rfcat dsetmdmmodulation modaskook setting modulation dsetfreq basefreq setting tx frequency dsetmdmsyncmode sync mode dsetmdmdrate baudrate symbol rate dsetmaxpower max power yolo dsetpktpqt preamble quality threshold fullpwm format key pad rfdata bitstringbitarray binfullpwm tobytes convert byte dmakepktflen len rfdata set packet length byte print transmitting key format rfdataencode hex print packet length str len rfdata drfxmit tx synchronisation pulse drfxmit rfdata tx repeated packet print done dsetmodeidle leet doorbell hax video old weird garage door remote another device looked old see strange wireless garage door remote looking device quickly determine operating frequency mhz shown image commonly used frequency type device anymore fact antenna length needed bigger telescopic antenna go however much issue internals device reveal includes ability set code via dip switch order pair garage door receiver shown note big cylinder centre ferrite coil antenna clearly device made era electronic component much bigger without osint take look signal produce help hackrf baudline first thing notice signal transmits remote button held transmit constantly seen apparent change frequency narrow bandwidth signal taking look waveform see following looking change phase appears subtle change amplitude likely ask within baudline modified aperture color order see change amplitude clearly waterfall plot unsuccessful decided save signal load inspectrum successful viewing amplitude change fiddling power max power min setting able eliminate highest amplitude started see repeating pattern packet one packet seen repeating packet change repeated press garage remote button enabling cursor functionality helped discern high low amplitude along symbol rate assuming low amplitude represents high amplitude represents packet data appeared however interested related dip switch position inside device sixteen dip switch two set eight thought might relate directly apparent symbol set dip switch lower position call setting take another look signal time get following ok added seventeenth symbol remained let try setting first dip high setting get following alright symbol position two went seventeenth symbol remains let try first dip second set eight dip switch change dip switch fact changing second set eight dip would produce result trying first dip adding second dip get following seeing relationship first dip seems relate second symbol position second dip seemed relate twelfth position trying dip switch first set eight dip call set able determine following relationship symbol point seemed simple mapping dip symbol however trying dip first dip second set eight call set b relationship seemed become little complex shown notice first symbol position also second position expecting seemed dip modified resulting value dip trying corresponding b dip produced respective result playing around realised could describe modification result symbol position respect b dip switch pair discrete mathematics seen following table explain table b refer respective dip switch position high low b refers odd symbol binary dip b whilst ab refers even symbol binary b original dip position see result however correspond saw analysing signal still need apply previous relationship first noted dip symbol position shown blue arrow see result discrete math corresponds correctly given captured signal garage remote reliably able determine sixteen dip switch position without ever seeing would liked attempt transmit signal similar manner doorbell however yardstick one unable transmit particular frequency however transmitted data never change garage door system vulnerable replay attack signal simply recorded retransmitted hackrf ability common home business security system another system take look common security system seems used many home business relatively modern system incorporates multiple sensor alarm polling security company monitoring service system includes keypad arm disarm alarm however also includes number remote allow arming disarming security system outside building briefly look case key blatantly display operating frequency device however simple discover rf spectrum operated mhz range similar doorbell remote common type remote look signal baudline see following observing seems number packet sent click disarm button however signal seems much shorter quicker doorbell remote little difficult see pausing output zooming time domain waterfall plot able better discern signal shown able determine frequency see narrow bandwidth looking similar doorbell remote signal taking look waveform see following much easier see complete packet modulation pdm packet appears wellformed doorbell appears preamble initial seven long pulse trailing sequence short pulse data must represent button pressed separate button arm disarm along others packet sequence sent click disarm button one would expect packet would different packet sent another key press let take look another press disarm button exactly security system suffers security vulnerability doorbell garage door remote simply record replay signal replay attack disarm security system home business wherever system implemented prevent issue really rolling code system coding signal change press remote button could analysed trying different button observing change however purpose discussion went wifi curiosity let take look ghz wifi see complex signal modulation using baudline observe portion wifi frequency range see following see flash wireless packet four distinct channel peak smoothing enabled show wide bandwidth channel spectrum display bottom image wide frequency bandwidth signal due wifi using spread spectrum scheme ds decimating input view one channel looking waveform signal see following example signal much difficult determine modulation use visually osint would necessary case looking wifi modulation show complex form qam used demodulation ultimately conduct proper reverse engineering effort rf signal using sdr requires better understanding rf engineering use gnu radio companion properly demodulate signal possibility find already made gnu radio workflow software demodulate rf signal particular characteristic leaf initial digital data may analysed using regular software reverse engineering technique learned looked rf theory get good basic understanding rf data transmitted using rf signal discussed common analogue digital modulation scheme basis complex modulation briefly described sdr including hardware software sdr tool useful rf signal analysis reverse engineering along tip using tool capture view rf signal identified good methodology attempting reverse engineer understand wireless protocol finally looked rf signal produced common device effort determine characteristic identified security issue along way although discussion exactly deep guide reversing rf signal sdr hopefully learned something least found interesting read
386,Lobsters,visualization,Data Visualization,Solving Graph Problems with City Bikes of Helsinki,https://medium.com/@lhartikk/solving-graph-problems-with-city-bikes-of-helsinki-c02a90584814,solving graph problem city bike helsinki,solving graph problem city bike helsinki city bike helsinki shortest path minimum spanning tree travelling salesman problem creating graph raph api http codepeniolhartikkpenqjayld shortest path dijkstra algorithm priority queue http codepeniolhartikkpenxgkvzw minimum spanning tree minimum spanning tree kruskal algorithm http codepeniolhartikkpenrwmkem travelling salesman problem travelling salesman problem nphardness travelling salesman greedy algorithm http codepeniolhartikkpenerdjzg cool video travelling salesman mst shortcut preorder http codepeniolhartikkpenjwmqlq conclusion,solving graph problem city bike helsinkii like casual biking algorithm especially like city bike helsinki network station allows conveniently travel city center take return bike station bike station network also give nice context solve wellknown graph problemsin blog post following problem addressed wellknown algorithm shortest path minimum spanning tree travelling salesman problem focus visualization algorithmscreating grapha graph abstract data type consist node edge station found api used create graphin real life could travel directly two station would edge station every station however visualization graph would inconvenient since would overwhelmed edge graph created way travel nearest station stationthe initial graph code http codepeniolhartikkpenqjayldshortest pathdijkstra algorithm probably known method solve distance two node graph implementation dijkstra node visited neighbor node added priority queue priority current distance node next node visited extracted priority queue every time unvisited node reached current distance node must shortest possibledijkstra algorithm code http codepeniolhartikkpenxgkvzwminimum spanning treeminimum spanning tree mst shortest tree every node contained context mst could represent eg minimun number cable required get connection every station another station use kruskal algorithm generate mstthe algorithm work first sorting edge distance edge added graph starting shortest however edge would result cycle graph discarded node contained tree terminate algorithm resulting set edge mstminimum spanning tree kruskal code http codepeniolhartikkpenrwmkemtravelling salesman problemin travelling salesman problem tsp problem find shortest tour way node visited turn polynomial time algorithm solve problem even verifying given solution correct requires exponential time nphardness tsp quite popular problem since easy grasp difficult solve solve tsp using two approximation approach greedy algorithm minimum spanning tree shortcut algorithm produce shortest tour run decent time produce meaningful visualizationstravelling salesman greedy algorithmthe greedy algorithm simple choose closest unvisited node easily seen resulting route optimalsolving tsp greedy version http codepeniolhartikkpenerdjzghere cool video found show optimization top greedy algorithmtravelling salesman mst shortcutsin approximation first calculate minimum spanning tree traverse tree preorder result tour every node visited also use possible shortcutsvisualizing mstshortcuts algorithmthe resulting algorithm context city bike station shown blue line represent mst traversed visualization shortcut drawn directly two node even though edge would exit graphsolving tsp minimun spanning tree shortcut http codepeniolhartikkpenjwmqlqconclusionsgraph algorithm reallife graph give nice context visualize logic wellknown algorithm many case visualization provide better understanding general concept algorithm pseudocode implementation check provided codepens want examine closely algorithm really implemented
387,Lobsters,visualization,Data Visualization,"How we got 1,500 GitHub stars by mixing time-tested technology with a fresh UI",https://medium.freecodecamp.com/how-we-got-1-500-github-stars-by-mixing-time-tested-technology-with-a-fresh-ui-b310551cba22,got github star mixing timetested technology fresh ui,got github star mixing timetested technology fresh ui graphql voyager star yet another article backstory apisguru graphql graphql visualizer fatal flaw graphviz emscripten cytoscapejs update lesson learned lab web assembly emm promised tell get lot star awesome example set demo github corner make something useful,roman hotsiyhow got github star mixing timetested technology fresh uiphoto credit released opensource tool called graphql voyager surprisingly got first page hacker news github trending gained star first day starspeople loved slick ui interactive feature animation used typescript react redux webpack even postcss yet another article let look backstoryit started month ago friend call apisgurus looking idea project around graphql query language apis developed facebook research interesting tool caught eye graphql visualizeroutput graphql visualizerwe wanted add color black white looked boring panandzoominteractive feature like selecting node edgesbut looking source code found fatal flaw tool used graphviz decade old tool written plain c compiled unreadable javascript using emscripteneven worse usual uglifyjs outputhow could use something hipster god sake reactjs webpack typescript postcss work tool written oldfashioned c little research found best library cytoscapejs written lovely javascript even supported running csslike selector graph great result week intensive coding result le satisfying see visualised graph using cytoscapejsand without even displaying many detail graph mess although code much cleaner endresult much worse compared original tool completely unusableit appeared way cytoscapejs edge cross node tried everything toolbox googled asked stackoverflow even bothered svg guru knew zero success last resort even tried hack cytoscapejs produce readable result little research made give apparently visualizing graph rocketscience even master degree applied math dawned u take output graphviz plain svg sprinkle cs j trick better le day coding adding bit color logo loading animation useful feature final resultyes wrote hundred line ugly dom manipulation yes packed mess pure reactredux component yes graphviz code huge split separate file work nobody care star github confirms thisupdate since time article submitted project adopted company field eg graphcool featured graphql europe star confirm lesson learned seen little standing shoulder giant issac newtondon judge code age especially written tech giant lab place unix c c language born unfortunately affected cognitive bias old code bad code truth opposite old code battletested thousand user hundred different project critical bug fixed documentation complete ton question answer stackoverflow quorawe live ui definitely acceptable graph mathematics behind change muchthe line thought applied many domain old code given chance especially since always wrap modernlooking uithat see huge potential web assembly allow fuse timeproven algorithm implementation modern uis eager see awesome thing people build emm promised tell get lot star ok got wanted make title catchy enoughbelow checklist important tip trick use opensource project try use technology name part project name eg graphqlsomething reactsomething etc way project better rank github search result technologiesyour readme catch people eye added animated gif top readme people could immediately understand project console app add gif console awesome awesome example bell whistle add badge add nicelooking logo add emojis set demo possible add link description field repositoryagain set demo forget add link demo back github use github corner posting hackernewsredditetc gain initial number star posting le popular resource sharing friend people le likely click star project zero starstry gain star first day way likely get featured github trending language another source trafficmake something usefulthere article promote opensource project herethat folk ever wrapped old code new shiny ui tell story comment
388,Lobsters,visualization,Data Visualization,Colourful visualization tool for binary files,https://github.com/FireyFly/pixd,colourful visualization tool binary file,join github today sign file permalink pixd xvilka list supporting terminal emulator screenshot license see also hexd topic resource license reload reload,colourful visualization tool binary file dismiss join github today github home million developer working together host review code manage project build software together sign file permalink failed load latest commit information type name latest commit message commit time pixd tool visualizing binary data using colour palette lot way akin hexdump tool except using coloured square represent octet pixd us color sgr escape sequence list terminal emulator support see xvilka list supporting terminal emulator screenshot license mit license enjoy see also hexd conventional hexdump tool colourful output also pixd code based colourful visualization tool binary file topic resource license perform action time signed another tab window reload refresh session signed another tab window reload refresh session
389,Lobsters,visualization,Data Visualization,From GraphQL to CSV: the story of API accessibility,https://blog.apis.guru/from-graphql-to-csv-6df5e5462793,graphql csv story api accessibility,graphql csv story api accessibility roman hotsiy apisguru hackathon graphql lodash link url point csv importdata lyonwj takeaway,graphql csv story api accessibilitygraphql hot topic moment even started appearing job listing csv totally different story hit peak popularity majority u even born old something new graphql designed make life easier frontend developer facebook engineer done great job became enjoyable querying sql directly especially since join anymore result graphql query always json fine build website mobile app suitable importing party tool csv hand de facto standard analyst data scientist everyone work spreadsheetsbeing programmer roman hotsiy apisguru experience problem decided take part hackathon found helpful inspiring bring people activity graphql community one database graphqlapi endpointit contains tweet github repository stackoverflow question answer meetup event user tag related themwrite mobile demo application dashboard visualization timeline react component whatever want backendwe found hackathon friday lunch time saturday noon start journey graphql europe really tied schedule build something could publicly release brainstormed crazy idea involving image recognition machine learning fell back dashboard idea suggested organizersthe first step write query provide data interesting insight graphql community example effort facebook put reference implementation surprise j quite popular community language bellow query get primary language github repository mentioning graphql keyword next logical step would count number repository per language would great directly inside query something like count function sql month ago idea result graphql lodash born allows use many filtering aggregation etc function popular lodash library let add countby query look great test visualize data comfort zone specialize tooling around apis much experience visualization library like decided hackathon style use google spreadsheet dashboard wanted graph update based latest data since called dashboard otherwise needed figure way query data within spreadsheetgraphql query usually sent http post however majority server also support http get query specified inside url click link see resulting jsonthe title article suggests google spreadsheet allow importing data json support xml html csv simpler csv stringify value join comma used little bit lodash dark magic got result look strange actually json object single data property contains csv value standard wrapper graphql response last barrier u decided use brute force set proxy would remove screenshot see unwrap data checkbox add unwraptrue data link url manipulation received url point csv directly project really straightforward used importdata function import csv spreadsheet additional click got u nice chart repeating process query hackathon submission done really great hear lyonwj giving shout project stage graphql europe moreover prize got nice tshirts two pair airpodstakeawaya real lesson got hackathon api accessibility importantfor something simple making report writing code overkill url csv file allows anyone dig data without coding hackathon project proof concept built le day provide real solution figure replace lodash dark magic something intuitivewe need feedback graphql csv proxy something help everyday task
390,Lobsters,visualization,Data Visualization,Animated Data Structure Visualizer (video),https://www.youtube.com/watch?v=KwZmAgAuIkY,animated data structure visualizer video,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature big update lucidity youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature big update lucidity youtube
391,Lobsters,visualization,Data Visualization,Cloud Native Landscape Project,https://github.com/cncf/landscape,cloud native landscape project,cloud native landscape cncf redpoint venture amplify partner http githubcomcncflandscapeapp trail map interactive version landscapecncfio new entry cloud native landscapeyml logo http cloudconvertcom nt use svgs embedded text logo grpc logo filetype svg nt use svgs embedded text direction correction landscapeyml processedlandscapeyml crunchbase external data landscapeyml crunchbase data processedlandscapeyml file best practice badge http bestpracticescoreinfrastructureorg without graduate nonupdated item http landscapecncfiocategoryprovisioning runtime orchestrationmanagement appdefinitionanddevelopment paascontainerservice serverless formatcardmode groupingno licenseopensource sortlatestcommit http landscapecncfiocategoryprovisioning runtime orchestrationmanagement appdefinitionanddevelopment paascontainerservice serverless observabilityandanalysis formatcardmode groupingno licensenotopensource sortlatesttweet license crunchbase http datacrunchbasecomdocsterms landscapeyml creative common attribution license format installation install direction landscapeyml vulnerability reporting issue info cncfio adjusting landscape view,cloud native landscape cncf cloud native landscape project intended map previously uncharted terrain cloud native technology attempt categorize project product offering cloud native space many route deploying cloud native application cncf project representing particularly welltraveled path built collaboration redpoint venture amplify partner software interactive landscape extracted http githubcomcncflandscapeapp used landscape well repo includes data image specific cncf landscape trail map cloud native trail map provides overview enterprise starting cloud native journey interactive version please see landscapecncfio new entry cloud native project least github star clearly fit existing category generally included put project single category best fit generally list company product one box represent major bestknown offering occasionally make exception large company note allowed listing product project multiple box logo landscape would multiply many time many unlikely create new category productsprojects rather find best home current option generally including commercial version open source software exception showing certified kubernetes implementation closed source product need link clear description product stealth mode company project company need logo logo need include name crunchbase organization company organization control software normally owner trademark whether trademark formally filed think company project included please open pull request add landscapeyml logo either upload svg hostedlogos directory put url value fetched netlify generate staging server preview update please check logo information appear correctly add lgtm pull request confirming review requesting merge logo following rule produce readable attractive logo require svgs smaller display correctly scale work modern browser logo another vector format like ai eps please open issue convert svg often http cloudconvertcom note may need zip file attach github issue please note require pure svgs reject svgs contain embedded pngs since problem bigger scaling seamlessly also require svgs convert font outline render correctly whether font installed see nt use svgs embedded text multiple variant exist use stacked horizontal logo example use second column stacked first horizontal cncf project logo nt use reversed logo ie nonwhite nontransparent background color reversed logo create issue attached produce nonreversed version logo must include company product project name english fine also include word another language nt version logo name please open issue create one please specify font match item name english word logo acme rocket logo show rocket product name rocket logo show acme rocket product name acme rocket otherwise logo look place sort alphabetically logo include company andor product name tagline allows larger readable exception format logo ever shown includes tagline google image often best way find good version logo ensure uptodate version search grpc logo filetype svg substitute project product name grpc either upload svg hostedlogos directory put url value fetched nt use svgs embedded text direction fixing correction please open pull request edits landscapeyml file processedlandscapeyml generated never edited directly error data crunchbase open account edit data nt like project description edit github project nt showing license correctly may need paste unmodified text license license file root project github order github serve license information correctly external data canonical source data landscapeyml day download data project company following source project info github funding info crunchbase market cap data yahoo finance cii best practice badge data update server enhances source data fetched data save result processedlandscapeyml json file latter app load display data best practice badge explained http bestpracticescoreinfrastructureorg linux foundation lf core infrastructure initiative cii best practice badge way freelibre open source software floss project show follow best practice project voluntarily selfcertify cost using web application explain follow best practice cii best practice badge inspired many badge available project github consumer badge quickly ass floss project following best practice result likely produce higherquality secure software interactive landscape display status nonexistence badge opensource project also feature available filter bar see item without badge note passing badge requirement project graduate cncf nonupdated item generally remove open source project commit month note project hosted github need mirror github fetch update try work project mirror broken view project sorted last update ignoring category like kcsps certified kubernetes member http landscapecncfiocategoryprovisioning runtime orchestrationmanagement appdefinitionanddevelopment paascontainerservice serverless formatcardmode groupingno licenseopensource sortlatestcommit generally remove closed source product tweeted month nt apply chinese company without twitter account since twitter blocked view product sorted last tweet ignoring category like kcsps certified kubernetes member http landscapecncfiocategoryprovisioning runtime orchestrationmanagement appdefinitionanddevelopment paascontainerservice serverless observabilityandanalysis formatcardmode groupingno licensenotopensource sortlatesttweet item removed apply readded using regular new entry criterion license repository contains data received crunchbase data licensed pursuant apache license subject crunchbase data access term available http datacrunchbasecomdocsterms permitted used linux foundation landscape project everything else apache license version except project product logo generally copyrighted company created simply cached reliability trail map static landscape serverless landscape landscapeyml file alternatively available creative common attribution license format cncf trail map available format cncf cloud native landscape available format cncf serverless landscape available format installation install run locally install direction necessary install locally want edit landscapeyml via github web interface vulnerability reporting please open issue sensitive information email info cncfio adjusting landscape view file describes key element landscape big picture specifies put section app definition development orchesteration management runtime provisioning cloud platform observability analyzis special also specifies locate link serverless preview info qr code element top left width height property position row col specify much column row expect given horizontal vertical section see element fit section need either increase width horizontal section increase height amount row single horitzontal section adjust position section beside adjust width parent div width srccomponentsbigpicturefullscreenlandscapejs width toolsrenderlandscapejs zoom margin serverless approach file srccomponentsbigpictureserverlesscontentjs srccomponentsbigpicturefullscreenserverlessjs toolsrenderlandscapejs full width zoom margin sometimes total height changed need adjust height way adjust width experimental fitwidth property good want get rid extra space right section best way test layout ok visit landscape serverless look ok run babelnode toolsrenderlandscape see rendered png file srcimages folder
392,Lobsters,visualization,Data Visualization,Swype right,https://jasmcole.com/2017/06/04/swype-right/,swype right,qwerty keyboard nltk library calculating average word distance optimisation procedure optimised keyboard layout performance comparison palapalai papal jalapa banana j energy code http githubcomjasmcoleblogtreemasterswype like,wrote blog post saw woman throw banana russell brand bear one yes upon witnessing act fruitbased aggression immediately related incident friend typing message struck effort required type word banana brand modern swypestyle phone keyboard incredibly annoying poor thumb scythed back forth across screen n seemed like hour must better way thought minimise distance thumb move thus delay inevitable repetitive stress injury left hand post discus optimising layout english qwerty keyboard effort minimise average distance digit must travel type word let look qwerty keyboard let start considering standard english language keyboard layout qwerty talk unit distance horizontal vertical offset letter unit distance required type word qwerty unit tree would unit example plot distance every pair letter plot darker colour correspond greater distance immediately see largest distance letter like q p however matter much english two letter sit next often word sanity check plot average distance letter letter might look think fine q right edge keyboard used infrequently maybe would better bit closer centre used much frequently quantify notion took reuters corpus nltk library tallied frequency transitioning different letter english language popular pairing letter appear th minimise average distance spent swiping around keyboard might want get pair letter close together possible visualise key contribute word distance taking transition frequency account multiplying distance qwerty keyboard really jump transition occupies huge amount distance swyping english language distance n largest keyboard letter pair appears often total distance large also see total distance key largest due fact common letter sits edge keyboard due large distance average distance required per letter english language approximately average thumb skip key letter qwerty layout move optimising sorry situation let briefly go calculating number calculating average word distance two important quantity letter transition matrix counting probability transitioning letter note mean j using index letter alphabetically letter b etc function language english letter distance matrix containing physical distance letter function keyboard layout plotted qwerty total distance travelled letter note symmetric write compactly need account occurrence probability letter english calculate reuters corpus note describes markov chain left eigenvector eigenvalue simply letter frequency finally average distance keyboard encoded simply quantity written top previous plot optimisation procedure constraint possible keyboard layout namely must exactly key key position change letter must appear exactly searching permutation space possible legal keyboard layout corresponds permutation applied equally row column apply permutation perform calculation retrieve average distance value unfortunately permutation consider check brute force therefore tried two different approximate search algorithm simulated annealing repeatedly randomly swap two key calculate change average distance accept change probability temperature new permutation shorter distance change always accepted avoid stuck local minimum also possible accept change increase average distance much larger converge solution gradually lower iteration naive hill climbing starting random initial configuration check possible letter swap pick one delivers improvement repeat none better terminate optimised keyboard layout technique performed similarly slightly surprisingly finding many possible improved keyboard layout neither exact approach may better layout best one dub nalmyzvdnalmygiero average distance exact improvement standard qwerty mean average thumb skip one key letter rather good configuration found average distance slideshow requires javascript see commonality approach e key uniformly placed centre keyboard easy access n always next n always next r always clustered together z q k j x always relegated outer region keyboard beyond obvious trick also important get second tier letter right spot including h c l letter usually want near particular letter exact placement depends quite sensitively detail central core frequent letter performance comparison directly compare efficacy nalmy compared qwerty example calculating distance every word english language two approach following plotted distance per letter every word distribution english word immediately clear many word nalmy require distance le unit key per letter much better qwerty average around worst word type qwerty based distance required per letter palapalai papal jalapa worst word type nalmy based distance required per letter syzygy uzbek cozy also plot word distance joint distribution black line mark equality layout point line represent word made longer nalmy made shorter obviously vast majority made shorter worse approach obvious word look qwerty uniquely optimised also hilariously word pookoo improved nalmy word like alan land dial previously necessitated ponderous swoop across keyboard banana getting crux issue irritation word banana really justified well whole english language benchmark confirm qwerty banana requires distance per letter putting percentile english word nalmy banana requires distance merely per letter dropping percentile success final justification effort suppose english speaking world around million people switched nalmy swypeesque keyboard person typed around character per day phone distance per key around nalmy would save million kilometre thumb motion per day say thumb motion burn around j energy gj energy saved per day decrease average global human power expenditure mw code shoddy code behind post found repository blog jupyter notebook full cryptic indexing singlecharacter variable used interchangeably http githubcomjasmcoleblogtreemasterswype much welcome comment efficient approach problem like like loading related
393,Lobsters,visualization,Data Visualization,GraphQL Meets Graph Database: A GraphQL + Neo4j Integration,https://neo4j.com/blog/graphql-neo4j-graph-database-integration/,graphql meet graph database graphql integration,graphql project project cypher sandbox command line tool example movie schema graphql europe conference michael michael hunger presenting graphql europe graphql community graph hackathon graphql community graph graphqlcommunitygraphorg sashko great starter kit overview hackathon submission graphql daily betty niclas graphql daily graphql daily present three interesting graphqlrelated link per day nice clean ui content focused helping graphql community grow encourage contribution graphql csv google sheet chart dashboard ivan roman apis guru graphqllodash graphql map frederick fogerty graphql map nextjs commandline tool enables user quickly spin graphql api using userdefined graphql schema optionally annotated cypher query commandline tool quickly spin sandbox instance server extension github organization developer page feedback devrel slack new world cypher get free copy reilly book dive emerging world graph technology get free copy,part work developer relation team interested integrating technology framework ensuring developer always use favorite technology interesting development recent month graphql api query language especially targeted frontend mobile developer developed facebook project want enable user interested using graphql get running quickly spent last week working project server extension allows turn graphql query cypher run graph data using sandbox infrastructure spin instance hosting graphql schema command line tool npm install g schemagraphql also allow cypher embedded graphql schema essentially mapping graphql field result cypher query see example movie schema graphql europe conference gather feedback learn graphql community presented work graphql europe conference last sunday berlin colleague michael gave lightning talk many fruitful discussion graphql user interested learning michael hunger presenting graphql europe graphql community graph hackathon conference organized hackathon based graphql community graph asking developer build apps queried graphql endpoint contains data activity graphql community graphql community graph graphql api expose data graphql community github project stack overflow question answer tweet meetups related graphql hackathon challenged participant build something cool consumes endpoint allows user draw insight data even chance submit project hackathon time still make use graphql community graph graphql endpoint available graphqlcommunitygraphorg also wanted give special shout sashko apollo built great starter kit show use apollo client community graph endpoint provided great starting point participant overview hackathon submission number really cool interesting project people built choose winner first valid submission receive pair apple airpods equivalent value gift card space describe project folk submitted wanted highlight thought particularly well done interesting graphql daily betty niclas built graphql daily android app present three interesting graphqlrelated link per day including unanswered stack overflow question github repository high number open issue encourage participation highly ranked tweet graphql daily present three interesting graphqlrelated link per day nice clean ui content focused helping graphql community grow encourage contribution graphql csv google sheet chart dashboard ivan roman apis guru wrapped graphql community graph api graphqllodash adding ability filter perform aggregation perform projection client lodash syntax used create graphql csv google spreadsheet pipeline chart show top project language tweet graphql community updated live graphql map frederick fogerty created graphql map us graphql community graph show graphql meetup event google map using nextjs reactjs deployment thank everyone participated many great submission amazed wide variety technology used android react native react angular python javascript shell script great learning experience see tool folk using quickly build application work graphql apis graphql designed used database existing api persistence layer sought build integration graphql make super simple spin graphql apis wanted expose power cypher graphql allow powerful graph query built initial version integration work endtoend graphql community graph mentioned built integration commandline tool enables user quickly spin graphql api using userdefined graphql schema optionally annotated cypher query come two part commandline tool quickly spin sandbox instance given schema file movie example server extension extension work server extension either infer schema type field relationship graph schema take graphql schema file provided user accepts graphql query user transformed single cypher query using new mapprojection pattern comprehension feature available cypher query executed graph data nested result rendered back client really cool see easy property graph model represent graphql schema well tree input query could mapped cypher schema interpretation support almost feature graphql added relation directive represent relationship bring power cypher graphql also enabled use cypher directive object type field query type mutation allows provide computed value like aggregation score related entity recommendation completely custom query data update single line cypher find relevant code github organization detail graphql integration developer page feedback would love hear think graphql working together work run issue suggestion improvement new feature email u devrel join u channel slack raise issue github repository linked new world cypher get free copy reilly graph database book dive emerging world graph technology get free copy
394,Lobsters,visualization,Data Visualization,Miniball,https://d3.express/@mbostock/miniball,miniball,,
395,Lobsters,visualization,Data Visualization,TLDR Stock Options,https://tldroptions.io/,tldr stock option,,
396,Lobsters,visualization,Data Visualization,Analyzing 5 Years of Police Call Data,https://jordan-wright.com/blog/post/2016-05-06-exploring-sapd-call-data-with-elk/,analyzing year police call data,according yelp sapd open data initiative million call data record getting call data little format publishes historical call incident number category problem type response date address hoa school district council district scraping data ssl configuration use million record analyzing data theft crime people crime happen traffic related call call issue geocoding finding geocoder generic address sweet sweet dashboard basically make batman data jwsec,san antonio great city according yelp place get taco could great unfortunately time get huge group people together crime sa exception sapd stay busy constantly putting life line keep city safe thankful work amateur api aficionado excited find sapd open data initiative contains wealth information activity sapd perform specifically wanted see kind analytics could gather exploring historic sapd call data post explain able gather analyze million call data record basically became extremely boring part batman getting call data little format first thing get call data part open data initiative sapd publishes historical call website interface let search call responded sapd officer dating back january call record following detail incident number unique identifier call sapdyyyyxxxxxxx format category category call eg crime person call problem type subtype call narrow root category eg robbery individual response date datetime response given call address address incident occurred hoa homeowner association incident occurred applicable school district school district incident occurred council district council district incident occurred ton great data however searching data manually pain see obvious bulk export feature time get whiskey beautifulsoup get scraping scraping data scraping site turned chore multiple reason first due ssl configuration use wound use custom tl adapter get request library negotiate tl connection address restriction could search filter certain category could get result per query put thing perspective let usually get week call labelled one say officer busy ended hacking together scraper ran like every category try get week worth call call get week day time make sure miss anything store result current code warned hacky manually changing category make sure thing going smoothly ymmv finishing scraping left million record work analyzing data grabbing data wrote quick script dump elk loading kibana see sweet sweet data immediately see call surprisingly consistent term frequency digging data find neat insight theft crime people started filtering data looking theftburglary crime people looking top call type generic call description theft consistently highest data easy track dangerous zip code address filtering crime person category right around call zipcode mapped account crime people filtering find dangerous school district san antonio isd come highest call around crime happen interesting one since find good way display kibana python whiskey excel go wrote quick script parse crime person call find distribution minute obviously depend live time year etc graph traffic related call call labelled traffic related deal traffic stop dwis etc analysis find traffic related call happen got result looking top address traffic stop dwi see downtown place incident happen call category give interesting datapoints deal various disturbance example see number firework disturbance call always spike around july new year eve birthday really issue geocoding original intent geocode record could plot heatmap fashion unfortunately ran couple challenge finding geocoder even though unique address found data still ran issue finding free service geocode many address started working mapzen pretty awesome discovered problem generic address many address dataset incredibly vague example address number traffic related call ih w followed nw loop go figure made difficult come meaningful heatmaps show crime sa region anyone idea hit sweet sweet dashboard one best part elk stack ability create dashboard like one dashboard give great overview call detail ability drill call care think stretch say visibility crime across city basically make boring part batman ever seen batman room think data since purpose open data initiative share information community want part making dataset available json people much better analyzing large data set find new insight help make sa safer place live dataset contains record january november pulled data download full dataset let help officer make city safer jordan jwsec
397,Lobsters,visualization,Data Visualization,When Random Numbers Are Too Random: Low Discrepancy Sequences,https://blog.demofox.org/2017/05/29/when-random-numbers-are-too-random-low-discrepancy-sequences/,random number random low discrepancy sequence,discrepancy wikipedia equidistributed sequence quasi monte carlo dimensional sequence grid random number white noise subrandom number uniform sampling jitter irrational number wikipedia van der corput sequence van der corput sequence sobol ruler function hammersley poisson disc dimensional sequence grid expected uniform point would non zero discrepancy random uniform grid jitter subrandom reedbeta halton irrational number bart wronski golden ratio sequence lowdiscrepancy sampling hammersley poisson disc n rook sobol sobol sequence made simple link dithering game wikipedia low discrepancy sequence wikipedia halton sequence wikipedia van der corput sequence using fibonacci sequence generate color deeper info usage case low discrepancy sequence poissondisc sampling free blue noise texture problem blue noise stippling blue noise vegetation placement witness marcbreynolds sobolh weyl sequence code like,random number useful graphic game development pesky sometimes undesirable habit clumping together problem path tracing monte carlo integration take n sample sample well spread across sampling range also problem situation like randomly placing object world generating treasure treasure chest want randomly placed tree one part forest want player get trash item godly item open treasure chest ideally want randomness want random number generator give similar random number problem random number random like see clump large gap sample case like want random number little bit well distributed might find use low discrepancy sequence standalone c code one source file standard header library link used generate data image bottom post well link resource discrepancy context discrepancy measurement highest lowest density point sequence high discrepancy mean either large area empty space area high density point low discrepancy mean neither point le pretty evenly distributed lowest discrepancy possible randomness dimensional case mean point evenly distributed grid monte carlo integration game dev usage case mentioned want randomness want random point spread little evenly formal math notation thing discrepancy defined read formal definition wikipedia equidistributed sequence monte carlo integration specifically behavior thing give high discrepancy random number white noise aka uniform distribution lower sample count convergance slower higher variance due possibility getting good coverage area integrating higher sample count problem disappears hint real time graphic preview rendering use smaller number sample lowest discrepancy regular grid cause aliasing unlike random based sampling trade aliasing noise noise preferred aliasing low discrepancy low discrepancy sequence lower number sample faster convergence better coverage sampling space use randomness get rid aliasing introducing noise also interesting note quasi monte carlo provably better asymptotic convergence regular monte carlo integration dimensional sequence first look dimensional sequence grid sample evenly spaced random number white noise actually high discrepancy sequence generate use standard random number generator pick point used std std uniformrealdistribution subrandom number subrandom number way decrease discrepancy white noise one way break sampling space half generate even numbered sample first half space odd numbered sample second half space reason generalize division space though split space region region region region way generate subrandom number though one way generate random number add last sample plus give random walk type setup uniform sampling jitter take first subrandom idea logical maximum break sample space n section place one point within n section make low discrepancy sequence made n point another way look uniform sampling add random jitter sample half uniform sample size keep sample area heard pixar invented technique interestingly irrational number rational number number described fraction expressed irrational number number described fraction pi golden ratio square root prime number interestingly use irrational number generate low discrepancy sequence start value could could random number add irrational number modulus get next sample add irrational value modulus rinse repeat get many sample want value work better others though apparently golden ratio provably best choice say wikipedia golden ratio using different random white noise starting value used square root different starting random number lastly pi random starting value van der corput sequence van der corput sequence equivelant halton sequence talk later generate value van der corput sequence convert index sample base instance base would convert index binary base would convert index hexadecimal instead treating digit etc b base instead treat word multiply digit fraction add result show couple quick example let say wanted sample sequence base first convert binary right left digit place place place see fact binary get van der corput value instead treating digit treat digit sample van der corput sequence using base let try sample base first convert base verify right seeing instead digit going treat like digit sample van der corput sequence using base van der corput sequence base base base base sobol one dimensional sobol actually van der corput sequence base rearranged little bit generated differently start either using sample sample matter sample calculate ruler function value current sample index info second make direction vector shifting left binary ruler time xor last sample direction vector get new sample interpret sample floating point number divide might sound completely different van der corput sequence actually thing reordered final step dividing really interpreting binary number fraction like left digit spot right digit ruler function go like pretty easy calculate calculating ruler function index starting zero based index right digit converting number binary binary ruler binary ruler binary ruler binary ruler binary ruler sobol hammersley one dimension hammersley sequence base van der corput sequence order sound strange sequence broke sequence comparison one thing hammersley make unique case truncate bit seem useful hammersley truncate bit knowing useful info guess look version hammersley get fairer look meant sequence hammersley bit truncated bit truncated poisson disc poisson disc point point densely packed minimum distance computer scientist still working good algorithm generate point efficiently use mitchell bestcandidate mean want generate new point sequence generate n new point choose whichever point farthest away point generated far n dimensional sequence next let look dimensional sequence grid uniform sample grid note uniform grid particularly low discrepancy case info expected uniform point would non zero discrepancy random random point uniform grid jitter uniform grid random jitter applied point jittered grid pretty commonly used low discrepancy sampling technique good success subrandom like dimension apply subrandom idea dimension divide x axis many section randomly choose point section divide x number section though going problem area going point reedbeta pointed instead using x could use x ix make pick point region picking different number x another way give good result dividing x section respectively choose coprime number division axis get maximal period repeat coprime last example good example large enough sample almost jittered grid axis subrandom number start random value x add random number also adding make random walk type setup halton halton sequence van der corput sequence using different base axis halton sequence x use base using base base irrational number irrational number technique used well able find make give decent looking output obvious diagonal pattern bart wronski shared neat paper explains use golden ratio great success golden ratio sequence lowdiscrepancy sampling us golden ratio x axis square root axis random starting point make give different sequence x axis us square root axis us square root random starting point give discrepancy hammersley dimension hammersley sequence us hammersley sequence x axis instead treating binary version index binary treat fraction like van der corput sum fraction axis reverse bit hammersley sequence note would take sample wanted fill entire square sample truncating bit bit useful bit truncated bit truncated poisson disc using method generate point space n rook sampling pattern called nrooks put n rook onto chess board arrange two row column way generate sample realize one rook per row none ever column make array number shuffle array index array row value array column rook sobol sobol two dimension complex explain link source used sobol sequence made simple sobol already covered used x axis something complex used axis link bart wronski really great series related topic dithering game wikipedia low discrepancy sequence wikipedia halton sequence wikipedia van der corput sequence using fibonacci sequence generate color deeper info usage case low discrepancy sequence poissondisc sampling low discrepancy sequence related blue noise white noise contains frequency evenly blue noise high frequency fewer low frequency blue noise essentially ultimate low discrepancy expensive compute page blue noise free blue noise texture problem blue noise stippling blue noise vegetation placement witness link marcbreynolds sobol lowdiscrepancy sequence stratified classic binaryreflected gray code sobolh weyl sequence code define crtsecurenowarnings include windowsh bitmap header performance counter sorry non window people include vector include stdinth include random include array include algorithm include stdlibh include set typedef define numsamples simplify code must square define numsamplesforcoloring turning slow thing significantly operation define calculatediscrepancy define define define define define imagepad define define define define define axisheight define dataheight define datawidth define colorfill scolor define coloraxis scolor struct simagedata simagedata mwidth mheight sizet mwidth sizet mheight sizet mpitch std vector mpixels struct scolor scolor r g b r r g g b b b g r bool saveimage const char filename const simagedata image open file file file file fopen filename wb file printf could save sn filename return false make header info bitmapfileheader header bitmapinfoheader infoheader headerbftype headerbfoffbits infoheaderbisize infoheaderbiwidth long imagemwidth infoheaderbiheight long imagemheight infoheaderbiplanes infoheaderbibitcount infoheaderbicompression infoheaderbisizeimage dword imagempixelssize infoheaderbixpelspermeter infoheaderbiypelspermeter infoheaderbiclrused infoheaderbiclrimportant headerbfsize infoheaderbisizeimage headerbfoffbits write data close file fwrite header sizeof header file fwrite infoheader sizeof infoheader file fwrite imagempixels infoheaderbisizeimage file fclose file return true void imageinit simagedata image sizet width sizet height imagemwidth width imagemheight height imagempitch width imagempixelsresize imagempitch imagemwidth std fill imagempixelsbegin imagempixelsend void imageclear simagedata image const scolor color row imagempixels sizet rowindex rowindex imagemheight rowindex scolor pixel scolor row std fill pixel pixel imagemwidth color row imagempitch void imagebox simagedata image sizet sizet sizet sizet const scolor color sizet row imagempixels imagempitch scolor start scolor row std fill start start color float distance float float float float float dx float dy return std sqrtf dx dx dy dy scolor datapointcolor sizet sampleindex scolor ret float percent float sampleindex float numsamplesforcoloring retr percent retg retb percent float mag float sqrt retr retr retg retg retb retb retr float retr mag retg float retg mag retb float retb mag return ret float randomfloat float min float max static std randomdevice rd static std mt rd std uniformrealdistribution float dist min max return dist mt sizet ruler sizet n sizet ret n n n ret return ret float const std array float numsamples sample info calculating discrepancy http calculates discrepancy data assumes data valid sample range std array float numsamples sortedsamples sample std sort sortedsamplesbegin sortedsamplesend float maxdifference sizet startindex startindex numsamples startindex startindex startindex sortedsamples etc float startvalue startindex startvalue sortedsamples startindex sizet stopindex startindex stopindex numsamples stopindex stopindex sortedsamples startindex n etc float stopvalue stopindex numsamples stopvalue sortedsamples stopindex float length stopvalue startvalue open interval startvalue stopvalue sizet countinside float sample sample sample startvalue sample stopvalue countinside float density float countinside float numsamples float difference std ab density length difference maxdifference maxdifference difference closed interval startvalue stopvalue countinside float sample sample sample startvalue sample stopvalue countinside density float countinside float numsamples difference std ab density length difference maxdifference maxdifference difference return maxdifference float const std array std array float numsamples sample info calculating discrepancy http calculates discrepancy data assumes data valid sample range get sorted list unique value axis std set float setsamplesx std set float setsamplesy const std array float sample sample setsamplesxinsert sample setsamplesyinsert sample std vector float sortedxsamples std vector float sortedysamples sortedxsamplesreserve setsamplesxsize sortedysamplesreserve setsamplesysize float f setsamplesx sortedxsamplespushback f float f setsamplesy sortedysamplespushback f get sorted list sample x axis faster interval testing std array std array float numsamples sortedsamplesx sample std sort sortedsamplesxbegin sortedsamplesxend const std array float itema const std array float itemb return itema itemb calculate discrepancy float maxdifference sizet startindexy startindexy sortedysamplessize startindexy float startvaluey startindexy startvaluey sortedysamplesbegin startindexy sizet startindexx startindexx sortedxsamplessize startindexx float startvaluex startindexx startvaluex sortedxsamplesbegin startindexx sizet stopindexy startindexy stopindexy sortedysamplessize stopindexy float stopvaluey stopindexy sortedysamplessize stopvaluey sortedysamples stopindexy sizet stopindexx startindexx stopindexx sortedxsamplessize stopindexx float stopvaluex stopindexx sortedxsamplessize stopvaluex sortedxsamples stopindexx calculate area float length stopvaluex startvaluex float height stopvaluey startvaluey float area length height open interval startvalue stopvalue sizet countinside const std array float sample sample sample startvaluex sample startvaluey sample stopvaluex sample stopvaluey countinside float density float countinside float numsamples float difference std ab density area difference maxdifference maxdifference difference closed interval startvalue stopvalue countinside const std array float sample sample sample startvaluex sample startvaluey sample stopvaluex sample stopvaluey countinside density float countinside float numsamples difference std ab density area difference maxdifference maxdifference difference return maxdifference void const char filename const std array float numsamples sample create clear image simagedata image imageinit image imagepad imagepad setup canvas imageclear image colorfill calculate discrepancy calculatediscrepancy float discrepancy sample printf discrepancy n filename discrepancy endif draw sample point sizet float f sample sizet po sizet f float imagepad imagebox image po po dataheight dataheight datapointcolor draw ax line horizontal first two vertical imagebox image imagepad imagepad coloraxis imagebox image imagepad imagepad axisheight axisheight coloraxis imagebox image imagepad imagepad axisheight axisheight coloraxis save image saveimage filename image void const char filename const std array std array numsamples sample create clear image simagedata image imageinit image imagepad imagepad setup canvas imageclear image colorfill calculate discrepancy calculatediscrepancy float discrepancy sample printf discrepancy n filename discrepancy endif draw sample point sizet const std array float sample sample sizet posx sizet sample float imagepad sizet posy sizet sample float imagepad imagebox image posx posx posy posy datapointcolor horizontal line imagebox image imagepad imagepad imagepad imagepad coloraxis imagebox image imagepad imagepad imagepad imagepad coloraxis vertical line imagebox image imagepad imagepad imagepad imagepad coloraxis imagebox image imagepad imagepad imagepad imagepad coloraxis save image saveimage filename image void bool jitter calculate sample point const float ccellsize float std array float numsamples sample sizet numsamples sample float float jitter sample randomfloat ccellsize ccellsize save bitmap etc jitter sample else sample void calculate sample point const float chalfjitter float numsamples std array float numsamples sample sizet numsamples sample randomfloat save bitmap etc sample void sizet numregions const float crandomrange float numregions calculate sample point const float chalfjitter float numsamples std array float numsamples sample sizet numsamples sample randomfloat crandomrange sample float numregions float numregions save bitmap etc char filename sprintf filename zubmp numregions filename sample void calculate sample point std array float numsamples sample float sample randomfloat sizet numsamples sample std fmodf sample randomfloat sample sample save bitmap etc sample void testvandercorput sizet base calculate sample point std array float numsamples sample sizet numsamples sample float denominator float base sizet n n sizet multiplier n base sample float multiplier denominator n n base denominator base save bitmap etc char filename sprintf filename zubmp base filename sample void float irrational float seed calculate sample point std array float numsamples sample float sample seed sizet numsamples sample std fmodf sample irrational sample sample save bitmap etc char irrationalstr sprintf irrationalstr f irrational char seedstr sprintf seedstr f seed char filename sprintf filename sbmp irrationalstr seedstr filename sample void calculate sample point std array float numsamples sample sizet sampleint sizet numsamples sizet ruler ruler sizet direction sizet sizet sizet ruler sampleint sampleint direction sample float sampleint std pow save bitmap etc sample void sizet truncatebits calculate sample point std array float numsamples sample sizet sampleint sizet numsamples sizet n truncatebits float base sample n n sample base n base save bitmap etc char filename sprintf filename zubmp truncatebits filename sample float const std array float numsamples sample sizet numsamples float x used poisson return minimum distance point x away sample point numsamples float minimumdistance sizet numsamples float distance std ab sample x distance minimumdistance minimumdistance distance return minimumdistance void every time want place point generate many point choose one farthest away point largest minimum distance const sizet cbestofattempts calculate sample point std array float numsamples sample sizet sampleindex sampleindex numsamples sampleindex generate random point keep one largest minimum distance existing point float bestx float bestmindistance sizet attempt attempt cbestofattempts attempt float attemptx randomfloat float mindistance sample sampleindex attemptx mindistance bestmindistance bestx attemptx bestmindistance mindistance sample sampleindex bestx save bitmap etc sample void bool jitter calculate sample point std array std array float numsamples sample const sizet coneside sizet std sqrt numsamples const float ccellsize float sizet iy iy coneside iy sizet ix ix coneside ix sizet sampleindex iy coneside ix sample sampleindex float ix float coneside jitter sample sampleindex randomfloat ccellsize ccellsize sample sampleindex float iy float coneside jitter sample sampleindex randomfloat ccellsize ccellsize save bitmap etc jitter sample else sample void calculate sample point std array std array float numsamples sample const sizet coneside sizet std sqrt numsamples const float chalfjitter float coneside sizet numsamples sample randomfloat sample randomfloat save bitmap etc sample void sizet regionsx sizet regionsy const float crandomrangex float regionsx const float crandomrangey float regionsy calculate sample point std array std array float numsamples sample sizet numsamples sample randomfloat crandomrangex sample float regionsx float regionsx sample randomfloat crandomrangey sample float regionsy float regionsy save bitmap etc char filename sprintf filename zu zubmp regionsx regionsy filename sample void calculate sample point float samplex randomfloat float sampley randomfloat std array std array float numsamples sample sizet numsamples samplex std fmodf samplex randomfloat sampley std fmodf sampley randomfloat sample samplex sample sampley save bitmap etc sample void testhalton sizet basex sizet basey calculate sample point std array std array float numsamples sample const sizet coneside sizet std sqrt numsamples const float chalfjitter float coneside sizet numsamples x axis sample float denominator float basex sizet n n sizet multiplier n basex sample float multiplier denominator n n basex denominator basex axis sample float denominator float basey sizet n n sizet multiplier n basey sample float multiplier denominator n n basey denominator basey save bitmap etc char filename sprintf filename zu zubmp basex basey filename sample void calculate sample point x axis std array std array float numsamples sample sizet sampleint sizet numsamples sizet ruler ruler sizet direction sizet sizet sizet ruler sampleint sampleint direction sample float sampleint std pow axis code adapted http webmathsunsweduaufkuosobol us number direction number std vector sizet v vresize sizet ceil log double numsamples log v sizet sizet sizet vsize v v v sample sampleint sizet numsamples sizet ruler ruler sampleint sampleint v ruler sample float sampleint std pow save bitmap etc sample void sizet truncatebits figure many bit working sizet value sizet numbits value numsamples value numbits calculate sample point std array std array float numsamples sample sizet sampleint sizet numsamples x axis sample sizet n truncatebits float base n n sample base n base axis sample sizet n truncatebits sizet mask sizet numbits truncatebits float base mask n mask sample base mask base save bitmap etc char filename sprintf filename zubmp truncatebits filename sample void make shuffle rook position std randomdevice rd std mt rd std array sizet numsamples rookpositions sizet numsamples rookpositions std shuffle rookpositionsbegin rookpositionsend mt calculate sample point std array std array float numsamples sample sizet numsamples x axis sample float rookpositions float axis sample float float numsamples save bitmap etc sample void float irrationalx float irrationaly float seedx float seedy calculate sample point std array std array float numsamples sample float samplex seedx float sampley seedy sizet numsamples samplex std fmodf samplex irrationalx sampley std fmodf sampley irrationaly sample samplex sample sampley save bitmap etc char irrationalxstr sprintf irrationalxstr f irrationalx char irrationalystr sprintf irrationalystr f irrationaly char seedxstr sprintf seedxstr f seedx char seedystr sprintf seedystr f seedy char filename sprintf filename sbmp irrationalxstr irrationalystr seedxstr seedystr filename sample float const std array std array float numsamples sample sizet numsamples float x float used poisson return minimum distance point x away sample point numsamples float minimumdistance sizet numsamples float distance distance sample sample x distance minimumdistance minimumdistance distance return minimumdistance void every time want place point generate many point choose one farthest away point largest minimum distance const sizet cbestofattempts calculate sample point std array std array float numsamples sample sizet sampleindex sampleindex numsamples sampleindex generate random point keep one largest minimum distance existing point float bestx float besty float bestmindistance sizet attempt attempt cbestofattempts attempt float attemptx randomfloat float attempty randomfloat float mindistance sample sampleindex attemptx attempty mindistance bestmindistance bestx attemptx besty attempty bestmindistance mindistance sample sampleindex bestx sample sampleindex besty save bitmap etc sample int main int argc char argv test false true testvandercorput testvandercorput testvandercorput testvandercorput golden ratio mod aka sqrt sqrt pi mod test false true testhalton testhalton testhalton x axis golden ratio mod aka sqrt axis sqrt mod x axis sqrt mod axis sqrt mod std fmodf float std sqrt std fmodf float std sqrt std fmodf float std sqrt std fmodf float std sqrt calculatediscrepancy printf n system pause endif like like loading related
399,Lobsters,visualization,Data Visualization,Beaker Extensions for Jupyter Notebook,https://github.com/twosigma/beakerx,beaker extension jupyter notebook,beakerx beaker extension jupyter documentation binder cheatsheet beaker notebook source code archive two sigma open source hiring documentation dependency build install linux mac build install win build install jupyter lab running docker update java change update j change run typescript unit test testreadmemd run python unit test groovy interactive plotting autotranslation python javascript interactive table table display conda package notebook lab architecture code overview beakerx configures ipython groovy magic queue doc starthereipynb docker dockerbase j jslab jsnotebook kernel kernelbase test webdriver contributing contributingmd releasing releasemd faq faqmd attribution lappsgrid antlr ipython ipythoncontrib scala guava apache spark http http,beakerx beaker extension jupyter beakerx collection jvm kernel interactive widget plotting table autotranslation extension jupyter notebook documentation consists tutorial notebook github try cloud free binder cheatsheet beakerx successor beaker notebook source code archive come two sigma open source yes hiring readme developer user see documentation homepage install run beakerx dependency build install linux mac conda env create n beakerx f configurationyml conda activate beakerx conda version prior run source activate beakerx cd beakerx pip install r requirementstxt verbose beakerx install beakerxdatabrowser install build install win conda env create n beakerx f configurationyml activate beakerx cd beakerx pip install r requirementstxt verbose cd beakerx install beakerxdatabrowser install build install jupyter lab conda env create n labx f configurationyml conda activate labx conda version prior run source activate labx conda install c condaforge cd beakerx pip install r requirementstxt verbose beakerx install jupyter labextension install jupyterwidgetsjupyterlabmanager nobuild cd jslab jupyter labextension install nobuild cd jslabthemedark jupyter labextension install nobuild cd jslabthemelight jupyter labextension install nobuild jupyter lab build running docker docker run p beakerxbeakerx update java change kernel installed run repo local build suffice cd kernel gradlew build update j change notebook extension installed run repo local build suffice cd jsnotebook yarn run build beakerx install run typescript unit test java typescript unit test run every build see testreadmemd run test run python unit test cd beakerx python unittest cd beakerxtabledisplay python unittest groovy interactive plotting autotranslation python javascript interactive table table display conda package notebook conda create name beakerxtd source activate beakerxtd conda install beakerxtabledisplay lab conda create name labxtd source activate labxtd conda install c condaforge jupyterlab conda install beakerxtabledisplay beakerxtabledisplay install lab architecture code overview beakerx collection kernel extension jupyter code organized subdirectory follows beakerx python package main beakerx package customized kernelspec allow beakerx configure jvms run kernel server extension javadoc setting version autotranslation endpoint beakerx command line program converter server utility install uninstall function python api runtime table plot easyform including automatically installing displayer panda table autotranslation nbextension webpack compiled javascript typescript cs font image compiled java jar kernel directory shared jar separate python package beakerxmagics groovy magic loaded without loading regular beakerx package would turn display panda table table widget beakerx configures ipython automatically load magic beakerxmagics package loadext required groovy magic us standard jupyter api jupyterclientmanagerkernelmanager start kernel proxy comm inner kernel package also support python magic order jvm kernel able start jupyter kernel need able call python beakerx subcommand purpose internal use user call groovy magic comm proxy implemented python beakerx implement autotranslation server extension metaprogramming glue language glue make beakerx object proxy rpc call server extension using json serialization javascript proxy object us comm reach kernel forward server extension autotranslation server separate thread control jupyter manages port protects accepting local connection requiring secure password passed kernel via environment variable extra thread necessary avoid deadlock tornado might better done queue explained see plan improve architecture shared memory apache arrow doc documentation consisting executable tutorial notebook starthereipynb top level link intended way navigate subdirectory language docker configuration file creating docker image subdirectory dockerbase image beakerx dependency ubuntu conda package main image built compiling beakerx installing beakerx base image j two subdirectory javascript typescript jslab jsnotebook new code written typescript lab subdirectory extension jupyter lab distributed npm notebook two extension one widget included lab well also separately distributed npm embedded application nbviewer one notebook application add tab tree view option panel regular notebook page extension handle running initialization cell publication autotranslation getcodecells runbytag apis callback table plot action ui customizations changing font allowing wide code cell disabling autosave kernel java implementation kernel main directory kernelbase generic code language base kernel class jupyter comm protocol layer zmq magic classpath including loading maven kernel part widget apis also subdirectory language evaluator language scala wrapper widget native type test test made webdriver selenium chromedriver jasmine contributing see contributingmd releasing see releasemd faq see faqmd attribution beakerx contains depends many project including kernel originally derived lappsgrid rewritten java refactored expanded java support us adrian witas orgabstractmetatoolbox antlr copyright c terence parr sam harwell copyright c michael bostock ipython copyright c ipython development team copyright c fernando perez copyright c janko hauser copyright c nathaniel gray table content init cell extension come ipythoncontrib copyright c ipythoncontrib developer scala copyright c epfl copyright c typesafe inc guava copyright c guava author apache spark copyright c onwards apache software foundation database engine software contains unmodified binary redistribution database engine http dual licensed available mpl mozilla public license epl eclipse public license original copy license agreement found http
400,Lobsters,visualization,Data Visualization,Medieval Fantasy City Generator,https://watabou.itch.io/medieval-fantasy-city-generator,medieval fantasy city generator,enter c p w r b l development news related stuff please check dedicated monthly challenge proceduralgeneration subreddit fantasycitieswatabouru city viewer use map created generator like copy modify include commercial rpg adventure etc attribution appreciated required please consider supporting project,application generates random medieval city layout requested size generation method rather arbitrary goal produce nice looking map accurate model city maybe future use code basis game maybe click one button create new city map desired size rightclick add landmark entercreate new city size groupccastle onoffpplaza onoffttemple onoffwcity wall onoffsshanty town onoffrriver onoffocoast onoffbbuildings onoffllegend onoff development news related stuff please check dedicated reddit community first version generator created monthly challenge proceduralgeneration subreddit generator also available fantasycitieswatabouru copy share permalinks specific map respect difference view model city export json import file city viewer use map created generator like copy modify include commercial rpg adventure etc attribution appreciated required please consider supporting project made haxe openfl source code available
401,Lobsters,visualization,Data Visualization,A brief visual history of MARC cataloging at the Library of Congress,http://sappingattention.blogspot.com/2017/05/a-brief-visual-history-of-marc.html,brief visual history marc cataloging library congress,,library congress released marc record next several month understand book classification first stab though wanted simply look history library digitized card catalog begin couple note technically inclined year pulled field nt exist unparseable field year nonwestern calendar often converted correctly obviously book nt included book mean item lc recentlyreleased retrospective book marc file http wwwlocgovcdsproductsproductphp serial map etc file total number million item see break r code create chart initial version jacob talking comment myannotate function lab label col eeeeee annotate geom text labelstrwrap label width width family opensanscondensedlight colcol plot data filter marcrecordcreatedyear marcrecordcreatedyear recorddate recorddate ggplot geomraster aes xrecorddate ymarcrecordcreatedyear filltextcount scaleycontinuous positionc right expandc scalexcontinuous positionc bottom breaksseq limitsc expand c scalefillgradientn numbernof booksncataloged trans color rev magma breaksouter c c asvector unique themebw theme legendkeyheight unit plottitle elementtext annotate segment color white lab x year book year marc record title marc cataloging library congress subtitle brief visual history comparing year record created left right year book described published strwrap coordflip myannotate label book along dashed line cataloged year published always common practice col black myannotate label anything upper left line supposedly cataloged published impossible error type col black myannotate label marc cataloging began first year new book added col eeeeee annotate geom segment col grey myannotate label early cataloger began input older book hundred book year entered early twentieth century col eeeeee annotate geom segment col dddddd annotate geom segment col dddddd annotate geom segment col dddddd myannotate label took backlog mostly cleared lighter patch show record midtwentieth century digitized col eeeeee annotate geom segment col dddddd annotate geom segment col dddddd myannotate label dark band year used catchall year book published anytime century annotate rect fillna color dddddd annotate rect fillna color dddddd myannotate label horizontal line show especially furious year digitizing older record century myannotate label staircase pattern moving right show smaller effort proceeded chronological order subcollection took year catalog year worth book col annotate geom segment annotate geom segment annotate rect fillna color black annotate rect fillna color black ggsave plot device png filename picturesmarcpng
402,Lobsters,visualization,Data Visualization,Relevant Search Leveraging Knowledge Graphs with Neo4j,https://neo4j.com/blog/relevant-search-knowledge-graphs-neo4j/,relevant search leveraging knowledge graph,knowledge graph introduction automatically extract knowledge use case ecommerce relevant search text search nlp social medium recommendation knowledge graph model previous blog post conceptnet infrastructure view connector role elasticsearch search elasticsearch acid elasticsearch nosql database conclusion nlp graphawarecom graphaware graphconnect europe join u europe premier graph technology event get ticket graphconnect europe see may qeii centre downtown london get ticket reference http http wwwambiversecomknowledgegraphsencyclopaediasformachines,relevance practice improving search result user satisfying information need context particular user experience balancing ranking impact business need providing relevant information user performing search query navigating site always complex task requires huge set data process progressive improvement selftuning parameter together infrastructure support search infrastructure must introduced seamlessly smoothly existing platform access relevant data flow provide always uptodate data moreover allow easy addition new data source cater new requirement without affecting entire system current relevance information must stored managed correctly well take account relationship individual item providing model access pattern also processed automatically artificial mind machine model generally referred knowledge graph become crucial resource many task machine learning data mining artificial intelligence application knowledge graph introduction knowledge graph multirelational graph composed entity node relationship edge different type describe fact world many feature involved processing data source create knowledge graph natural language processing nlp play important role assist reading understanding text automatically extract knowledge large number data source search goal varies based domain used would differ substantially amongst web search product catalog navigation ecommerce site scientific literature discovery expert search prominent medicine law research domain differ term business goal definition relevance synonym ontology blog post introduce knowledge graph core data source top relevant search application built describe detail data model feeding updating process entire infrastructure applied concrete application consider product catalog generic ecommerce site use case article however concept idea could applied easily scenario use case ecommerce ecommerce site text search catalog navigation entry point user also main salesperson compared web search engine use case advantage set item searched controlled regulated however lot critical aspect peculiarity need taken account designing search infrastructure specific application multiple data source product related information come various heterogeneous source like product provider information provider seller multiple category hierarchy ecommerce platform provide multiple navigation path simplify access several perspective shorten time desire purchase requires storing traversing multiple category hierarchy subject change time based new business requirement marketing strategy new promotion offer marketing campaign created promote site specific product affect affect result boosting user signal interaction order provide better customized user experience click purchase search query user signal must captured processed used drive search result supplier information product supplier important provide information like quantity availability delivery option timing change product detail business constraint ecommerce site business interest must also return search result generate profit clear expiring inventory satisfy supplier relationship requirement data could affect relevance several way search well product catalog navigated keeping constraint mind designing relevant search infrastructure ecommerce vendor requires entire ecosystem data related data flow together platform manage relevant search relevant search revolves around four element text user context business goal information extraction nlp key providing search result mostly satisfy user text query term content user modelling recommendation engine allow customizing result according user preference profile context information like location time refine result based need user performing query business goal drive entire implementation search exists contribute success profitability organization previous blog post text search nlp social medium recommendation described use advanced nlp feature graph combine text user profile behaviour customize search experience using recommendation engine relevant search also require context information previous search current business goal feedback loop customize user experience increase revenue must stored processed way easily accessed navigated search without affecting user experience term response time quality search knowledge graph model order provide relevant search search architecture must able handle highly heterogenous data term source schema volume speed generation data includes aspect textual description product feature marketing campaign business goal moreover accessed single data source must normalized stored using unified schema structure satisfies informational navigational requirement relevant search graph data model considered storage query model provides right support component relevant search graph right representational option following reason information extraction attempt make text semantic structure explicit analysing content identifying mention semantically defined entity relationship within text relationship recorded database search particular relationship infer additional information explicitly stated fact basic data structure like token event relationship reference extracted text provided related information extended introducing new source knowledge like ontology conceptnet wordnet dbpedia domain specific ontology processedextended using service like alchemyapi recommendation engine build model user itemsproducts based dynamic user previous session static description data represent relationship interest hence graph effective structure store query relationship even allowing merged source knowledge user item profile context information multidimensional representation status event type number dimension change greatly graph allows required high degree flexibility graph used define rule engine could enforce whichever business goal defined search lately use graph representing complex knowledge storing easytoquery model become prominent information management term knowledge graph becoming increasingly popular sometimes defined encyclopaedia machine knowledge graph become crucial resource advanced search machine learning data mining application nowadays graph construction one hottest topic artificial intelligence ai knowledge graph data model perspective multirelational graph composed entity node relationship edge different type instance edge triple r describes directed relationship r two entity according definition designed following logical schema specific use case schema merges multiple knowledge graph one big knowledge graph easily navigated many relationship schema explicitly loaded using data source like price product description relationship product like isusefulfor others inferred automatically machine learning tool logical model extended generic versatile design various type relationship consider sample representation product attribute specific relationship describe product feature instance hassize hascolour replaced general dynamic schema p productdata hasattribute attribute haskey k key ref size hasvalue v value data gb part model built using nlp processing information available product detail case graphaware nlp framework described previous blog post used extract knowledge text first round text processed organized tag described schema information extended using conceptnet add new knowledge like synonym specification generalization localization interesting relationship processing allows computing similarity product clustering automatically assigning multiple keywords describe cluster knowledge graph heart infrastructure central aiding search also living system growing learning day day following user need evolving business requirement infrastructure view considering relevant search goal described earlier model knowledge graph designed specific use case type amount data processed together related data flow requirement term textual search capability defined following architecture described highlevel term data flow composed several data source like product information source product offer seller click stream feedback data item flow outside inside data architecture using apache kafka queue streaming platform building realtime data pipeline information go multistep process transformed stored main database infrastructure order avoid concurrency issue one microservice read queue writes raw source enriched processed new relationship object created way knowledge graph created maintained many machine learning tool data mining algorithm well natural language processing operation applied graph new relationship inferred stored order process huge amount data apache spark cluster seamlessly integrated architecture connector point data transformed several document type sent elasticsearch cluster stored document elasticsearch document analyzed indexed providing text search frontend interacts providing advanced feature require graph query expressed using document simple text search describe detail two core element infrastructure role core architecture main database single source truth product catalog since store entire knowledge graph search navigation performed viable tool relevant search ecosystem offering suitable model representing complex data text user model business goal context information also providing efficient way navigating data real time moreover early stage search improvement process help relevance engineer identify salient feature describing content user search query later help find way instruct search engine feature extraction enrichment data stored go process enrichment comprises three main category cleansing existing data augmentation data merging first cleansing usually well worth time parse document look mistake misspelling document duplication correct otherwise user might find document contains misspelling query term may find duplicate document would effect pushing relevant document end search result page graphaware nlp framework provide feature find duplicate synonym relate well search misspelling word second existing data postprocessed augment feature already instance machine learning technique used classify cluster document possibility endless new metadata attached document serve valuable feature user search finally new information merged document external source ecommerce use case product sold often come external vendor product data provided vendor sparse instance missing important field product title case additional information appended document existing product code used look product title missing description written hand goal provide user every possible opportunity find document looking mean richer search feature elasticsearch search worth noting elasticsearch database built providing text search superhigh speed cluster node also provide full acid support lucene elasticsearch built notion transaction elasticsearch hand transaction typical sense way rollback submitted document submit group document either none indexed however writeaheadlog ensure durability operation without expensive lucenecommit also specify consistency level indexoperations term many replica must acknowledge operation returning visibility change controlled index refreshed default per second happens shardbyshardbasis source elasticsearch nosql database nonetheless opinion used main data store often approach could lead lot issue term data consistency ease managing data stored document elasticsearch provide efficient interface accessing catalog information providing advanced text search capability also sort aggregation faceting faceting capability grouping search result providing predefined filter allowing user simply refine search example amazon also useful providing analytics well capability like collapsing result latter added latest version time writing allows group result avoid show result contain minor difference among many others reason proposed architecture elasticsearch used frontend search interface provide product detail well autocomplete suggestion functionality conclusion post continues series advanced application feature built top graph database using knowledge graph play fundamental role since gather represents data needed organic homogeneous form allows access navigation extensibility easy performant way core complex data flow multiple source feed elasticsearch frontend blog post presentation complete endtoend architecture illustrates advanced search infrastructure power highly relevant search believe graphaware nlp framework expertise knowledge graph would useful project organisation please drop email nlp graphawarecom specifying knowledge graph subject one graphaware team member get touch graphaware gold sponsor graphconnect europe use discount code get ticket training join u europe premier graph technology event get ticket graphconnect europe see may qeii centre downtown london get ticket reference turnbull j berryman relevant search manning l farris g ingersoll morton taming text manning google knowledge graph http l del corro knowledge graph encyclopaedia machine http wwwambiversecomknowledgegraphsencyclopaediasformachines e gabrilovich n usunier constructing mining webscale knowledge graph sigir proceeding international acm sigir conference research development information retrieval
403,Lobsters,visualization,Data Visualization,A DSL for drawing hierarchically nested box diagrams (esp. architecture diagrams),https://tex.stackexchange.com/questions/367778/any-recommendations-for-drawing-a-hierarchically-nested-box-diagram/369116,dsl drawing hierarchically nested box diagram esp architecture diagram,github repository,ended designing implementing small domainspecific language representing figure language allows define horizontal vertical framed box hbox vbox plain unframed composite box pbox horizontal vertical label hl vl box put side side blank line continues layout next line python script generates standalone latex document find script example github repository example image corresponding code hbox hl kernel space hbox hl system call interface vl break vl cemt vl vl unlink vl wait vl write hbox boot loader vbox hl kernel utility function vl alloc vl free vl wakeup vl mget vl access vl iget pbox hbox hl io subsystem hbox pbox special device named socket hbox hl special device vl line discipline vl raw character vl raw disk hbox hl filesystem hbox inode layer hbox block layer hbox hl device driver hbox hl character device vl keyboard vl printer vl paper tape vl hbox hl block device vl rk disk vl rf disk vl mem hbox hl process control subsystem vl scheduler vl swap manager vl memory manager vl
404,Lobsters,visualization,Data Visualization,Voronoi Tessellations,http://datagenetics.com/blog/may12017/index.html,voronoi tessellation,voronoi tessellation georgy feodosevich voronoi generating voronoi diagram matt keeter mnbayazit fortune algorithm interactive demo voronoi painter application voronoi tessellation major airport tube station smallsatsorg delaunay triangulation boris delaunay article flipping trying delaunay mesh,voronoi tessellation week going talk voronoi diagram construction really pretty simple explain imagine desert two well obtain water want go nearest well well visit clearly depends one standing possible draw line dividing desert line nearer go well well line closer go well line dividing well nearer straight line also infinitely small foot stood anywhere line equidistant well easy see dividing line bisects perpendicular straight line connecting well additionally drew two circle arbitrary radius greater half distance well would overlap line happens add third well fourth get region like boundary partition space well nearer voroni diagram sometimes called voronoi tesesellations dirichlet tessellation thiessen polygon named georgy feodosevich voronoi ukrainian mathematician died celebrate centenary voronoi ukraine released twohryvnia coin rather simply showing boundary shade region colour representing pixel closest node example region tessellate perfectly easy decode couple animated version point moving mesmerizing watch region morph node pas region representing nearest point change geometery generating voronoi diagram many way generate voronoi diagram easiest understand simple brute force approach pixel care simply calculate distance node whichever distance shortest colour pixel colour done brute force approach efficient code end calculating distance node clearly running another possible strategy kind flood fill generate circle everincreasing radius node touch could think crystal growing nucleation site couple animation analogous way think growing circle imagine cone extruding plane imagine cone apex node cone slowly pushed plane pas generate circle circle continue grow hit edge cone give hint voronoi diagram generated using graphic technique using cone plotted depth buffer graphic card use zbuffer value pixel display determine nearest pixel viewer perform hidden surface removal thus render pixel object nearest image matt keeter image mnbayazit another interesting algorithm named steven fortune published paper fortune algorithm sweep straight line across region diagram left point right sweeping red straight line considered yet sweep line drag behind beach line curve composed parabola beach line divide region known node closest yet determined point left sweep line one define parabola point equidistant point sweep line beach line boundary union parabola sweep line progress vertex beach line two parabola cross trace edge voronoi diagram beach line progress keeping parabola base exactly half way point initially swept sweep line new position sweep line link detail fortune algorithm interactive demo want experiment creating diagram highly recommend playing application page voronoi painter written johan nordberg make easy see going press p toggle display point pretty fun toy play application voronoi tessellation pilot aircraft time might want know nearest available airport could land inflight emergency occured interactive demo based major airport fabulous map tube station london underground show nearest tube station location noteworthy application appeared john snow analysis london cholera outbreak map bellow included snow report cholera outbreak parish st james westminster show distribution death due cholera bar represents death snow considered source drinking water pump distributed throughout city drew line labeled boundary equal distance broad street pump pump indicated broad street pump voronoi cell map supported snow hypothesis cholera death associated contaminated water case broad street pump snow recommended pump handle removed action cholera outbreak quickly ended snow work helped develop modern field epidemiology map called famous century disease map voronoi map us archeology anthropology identify region influence different clan biology compare plant animal competition geography marketing used map region based sparse sample earliest recorded us voronoi diagram astronomy descartes using describe influence region star galaxy image smallsatsorg job build nuclear waste storage depot crieterion far away possible city see must located voronoi edge maybe fly spy plane across country want select path furthest distance away every radar station minimize chance detected maximally clear path follow line edge voronoi tessellation need traverse battlefield keeping maximal distance group sniper le severe application technique could used autonomous vehicle drone plot path congested space keep far away possible detected obstacle see left see next voronoi tessellation application making efficient triangular mesh incredibly useful finite element anlysis computer graphic video game modeling delaunay triangulation create dual graph voronoi diagram connect node every node share edge end graph dalaunay triangulation construct interesting voronoi tessleations sure feature future blog posting diagram left red line represent delaunay triangulation delaunay triangulation leveraged heavily many application especially computer graphic way break region triangle graphic card optimized render triangle efficiently three point make triangle one way happen soon polygon three vertex however break shape plurality triangle multiple way happen example look quadrilateral break two triangle two way better way graphic russian mathematician mountain climber boris delaunay described determinitic criterion identifying triangular mesh constructed best way break larger polygon triangle delaunay also credited organizer first mathematical olympiad high school student soviet union criterion based circular test goal minimze occurence sliver triangle triangle one two extremely accute angle undesirable interpolation rendering pretty simple test draw circle three vertex triangle grid grid meet delaunay test additional vertex inside circle quaderlateral triangulation right pass test one left therefore correct way triangulate way right delaunay triangulation maximize minimum angle angle triangle triangulation sligtly larger mesh circle rendered addition maximizing minimum angle triangle property delaunay mesh vertex make convex hull shape get put elastic band around point information convex hull check article delaunay triangulation maximizes minimum angle compared triangulation point smallest angle delaunay triangulation least large smallest angle however delaunay triangulation necessarily minimize maximum angle delaunay triangulation also necessarily minimize length edge circle passing two vertex nt contain segment connecting two vertex edge delaunay triangulation flipping note certain quadrilateral broken two triangle certain way mean division always vertex added line flip time new vertex added test need applied see still valid cascading flipping one algorithm used generate delaunay mesh efficient trying nice little page allows experinent interact creation delaunay mesh find complete list article click receive email alert new article
405,Lobsters,visualization,Data Visualization,Are Pop Lyrics Getting More Repetitive?,https://pudding.cool/2017/05/song-repetition/,pop lyric getting repetitive,complexity song measuring repetitiveness repetitiveness compressibility lempelziv algorithm repetition pop music lyric repetitive song responsible madness repetitiveness per artist,great computer scientist donald knuth published paper called complexity song basically one long joke repetitive lyric newfangled music example quote advent modern drug led demand still le memory ultimate improvement theorem consequently announced going try test hypothesis data analyzing repetitiveness dataset song charted billboard hot measuring repetitiveness know repetitive song hear one translating intuition number nt easy one thing might try looking number unique word song fraction total number word metric would call following lyric excerpt equally repetitive baby nt need dollar bill fun tonight love cheap thrill baby nt need dollar bill fun tonight love cheap thrill nt need money long feel beat nt need money long keep dancing sia cheap thrill tonight need dollar bill nt keep fun cheap thrill long feel money bill nt need dancing baby fun dollar dancing thrill baby need nt fun nt dancing fun tonight beat nt feel thrill love dancing money colin morris original composition word long use word vocabulary first one clearly repetitive arranges word predictable repetitive order repetitiveness compressibility may heard lempelziv algorithm probably use every day lossless compression algorithm power gifs pngs archive format zip gzip rar pop music lempelziv algorithm work exploiting repeated sequence efficiently lz compress text directly related number length repeated section text work explore example algorithm applied full song turn example entire lyric cheap thrill reduce size compressed lot distribution size reduction percentage across almost song dataset repetition pop music distribution compressibility song excluding outlier may noticed percentage xaxis evenly spaced using logarithmic scale property given song song compress half small fixed distance away example distance using kind scale throughout excluded repetitive song dataset chart see look like understand uberrepetitive outlier around world daft punk get reduced whopping go character small enough fit tweet twice lyric familiar song check others repetitive song song billboard hot intuitively around world definitely feel like repetitive song several familiar entry list essentially novelty song macarena barbara streisand thong song cotton eye joe famed silly refrain inspires confidence metric using music getting repetitive current decade pretty wellrepresented top also bit overrepresented dataset easier find lyric recent song need look lot data sure responsible madness let look average repetitiveness prolific artist dataset least charting song solo artist repetitiveness per artist genre seem like differentiating factor artist actually separate pretty cleanly two cluster country music hiphop whatever john mayer left pop rock right variation artist considerable backstreet boy average compression ratio brad paisley word asked backstreet boy brad paisley write word song compressed expect brad compressed song bigger bsb let zoom specific artist say gwen stefani circle represents song discography background blob histogram song dataset one mirrored average gwen music extremely repetitive wide spread incessantly repetitive hollaback girl laidback ballad cool far le repetitive median song dataset search favorite artist dropdown interesting example click artist name jump chart people described album taylor swift fully transitioned country singersongwriter popstar data add flavour claim repetitive song madonna long consistent legacy highly repetitive music interestingly two least repetitive song arguably two nt belong pop genre musical evita written tim rice andrew lloyd weber rapper like j cole eminem tend consistently nonrepetitive wonder rihanna title repetitive artist dataset half dozen song sit far right distribution including appropriately pon de replay
406,Lobsters,visualization,Data Visualization,Unix Architecture Evolution Diagrams,https://www.spinellis.gr/blog/20170510/,unix architecture evolution diagram,diagram depicting architecture unix operating system nine table unix history repository available online umlgraph query texstackexchangecom available online read post comment,today put online two diagram depicting architecture unix operating system one first research edition one freebsd one direct descendant detail created diagram basis study evolution unix facility past five decade catalogued facility appeared manual page form nine table one section unix manual early edition unix handcleaned printed ocrd manual later version wrote script extract available manual page source code tree obtained source code tree successive release unix history repository git repo hosted github contains history unix unnamed edition today corresponding data code available online came problem depicting sophisticated architecture diagram whenever possible try express complex diagram declarative fashion text automatically generate graphical form example devised umlgraph allows declarative specification drawing uml class sequence diagram case nt know suitable tool would allow draw nested block diagram query texstackexchangecom nt turn useful result decided create new small domain specific language purpose language allows specify nested horizontal vertically labeled box existence language helped lot created perfected freebsd diagram many iteration also tore diagram bit order create first edition one also sure prove beneficial accepting correction contribution data code drawing diagram also available online implemented language python script par input file using regular expression language grew complex found associating box type specific python class made code clear easier maintain example rotate box degree counterclockwise built vertical text need rotate degree appear upside small subclass allowed succinctly express behavior architecture diagram first research edition unix see although system consisted thousand line code already form function system recognize today unix first edition unix architecture architecture diagram modern freebsd system system without port ten million line large many box first edition contain individual function contain complete subsystem many area networking entirely new however system architecture still carry key idea ancestor freebsd unix architecture read post comment share
407,Lobsters,visualization,Data Visualization,District: A Game About Representation & Redistricting,http://polytrope.com/district/,district game representation redistricting,,district game representation redistricting skip end
408,Lobsters,visualization,Data Visualization,"3 Million Instacart Orders, Open Sourced",https://tech.instacart.com/3-million-instacart-orders-open-sourced-d40d29ead6f2,million instacart order open sourced,million instacart order open sourced application xgboost annoy data http term condition data dictionary opendata instacartcom word privacy interesting finding career site,million instacart order open sourcedcurious food american eat look furtherinstacart excited announce first public dataset release instacart online grocery shopping dataset anonymized dataset contains sample million grocery order instacart usersfor user provide order sequence product purchased order also provide week hour day order placed relative measure time ordersin post briefly introduce dataset important instacart provide link download datathen finish highlighting interesting pattern found data guess product likely ordered late night applicationswe hope machine learning community use data test model predicting product user buy try first time add cart next sessioninstacart currently us xgboost annoy production similar data sort item user buy recommend item user shop data algorithm trained upon enabling instacart revolutionize consumer discover purchase groceriesthe datathe dataset provided asis noncommercial use downloaded http subject term condition information content file see data dictionaryfor example first two order userid first two order userid make use dataset please use following citation instacart online grocery shopping dataset accessed http date question dataset reach u directly opendata instacartcoma word privacywe taken great care protect privacy user retail partner ensure data entirely anonymous information provided user sequence order product ordersall id dataset entirely randomized linked back idonly product bought multiple people multiple retailer included retailer id providednote dataset includes order many different retailer heavily biased subset instacart production data representative sample product user purchasing behaviorsome interesting findingsthere many interesting pattern found datasetfor example plot show common aisle likely reordered fromthe percent reorder purchase versus number purchase aisle colored department fruit reordered frequently vegetable perhaps vegetable intermittently purchased recipe staple like soup baking ingredient least likely reordered perhaps le frequently neededwe also see time day user purchase specific productspopular product purchased earliest day green latest day red healthier snack staple tend purchased earlier day whereas ice cream especially half baked tonight dough far popular customer ordering eveningin fact top latest ordered product first ice cream last one course frozen pizzawe excited see research data inspires enables interested joining u work real check career site
409,Lobsters,visualization,Data Visualization,Learning Music (Beta),https://learningmusic.ableton.com/index.html,learning music beta,get started making music,get started making music lesson learn basic music making prior experience equipment required everything right browser get started check box one contains small piece music click box turn playing box discover certain combination like many type music created exactly way mixing matching small musical idea make interesting combination changing combination time combined premade musical pattern next make pattern
410,Lobsters,visualization,Data Visualization,How to Spot Visualization Lies,https://flowingdata.com/2017/02/09/how-to-spot-visualization-lies/,spot visualization lie,data design goof laugh bit lying statistic went far much detail misstep spurious correlation project fun one xkcd said best look big picture useful honest mistake,used see poorly made graph data design goof laugh bit carry point though past year especially grew difficult distinguish visualization snafu bias deliberate misinformation course lying statistic thing long time chart tend spread far wide day lot tell truth maybe glance simple message stick build know leonardo dicaprio spin top table one care fall continues rotate important quickly decide graph telling truth guide help spot visualization lie bar chart use length visual cue someone make length shorter using data truncating value axis chart dramatizes difference someone want show bigger change actually went far much detail misstep using dual ax magnitude shrink expand metric typically done imply correlation causation thing happened see clear spurious correlation project tyler vigen great example chart specifically show part whole part add whole problem example pie chart represent percent something wedge add peculiar fun one everything relative say town dangerous another first one two robbery one first town time population first often useful think term percentage rate rather absolute total xkcd said best easy cherrypick date timeframes fit specific narrative consider history usually happens proper baseline compare interesting thing show look big picture instead showing full range variation dataset someone might try oversimplify complex pattern easy transform continuous variable categorical one broad binning useful complexity often make thing worth looking wary oversimplification area visual encoding one size area someone linearly size areabased encoding like square circle might sniffing dramatics sometimes honest mistake wary maybe someone know area visual encoding work go something like seen anything dramatic matter time bet form pictograms watch see threedimensional chart three dimension good reason question data chart maker everything based chart important absolutely mean visualization lying exhibit one previously mentioned quality darrell huff put lie statistic title book thing might seem imply operation product intent deceive president chapter american statistical association called chicanery much time said incompetence course make much better still truth mind make sure right reaction call someone liar rule thumb scrutinize chart shock seem dramatic thought chart make something true data make something true bend show many thing keep eye open
411,Lobsters,visualization,Data Visualization,HyperTools: A python toolbox for visualizing and manipulating high-dimensional data,http://hypertools.readthedocs.io/en/latest/,hypertools python toolbox visualizing manipulating highdimensional data,,
412,Lobsters,visualization,Data Visualization,"Idyll: a markup language for dynamic, text-driven web pages",https://idyll-lang.github.io/,idyll markup language dynamic textdriven web page,,
413,Lobsters,visualization,Data Visualization,"Datasaurus Dozen: Same Stats, Different Graphs",https://www.autodeskresearch.com/publications/samestats,datasaurus dozen stats different graph,anscome quartet known alberto cairo datasaurus download csv datasaurus dozen method simulated annealing example paper downloaded violin plot datasets code download github cran package stephanie locke lucy mcgowan acknowledgement asked drawmydata fraser anderson hear graph show data viz important automatically generate datasets teach people create statistical mirage summary statistic completely different plot coïncidences surprenantes mais banales datasaurus dozen infovis paper chi anscombe quartet democratization data datasaurus dozen making datasaurus datasaurus monstrous anscombe century stats different graph wary boxplots might hiding important information los doce del datosaurio misma estadística diferentes gráficas statistic mislead th edatasaurus dozen recreating datasaurus dozen using tweenr stats different graph generating datasets summary stats different graph datasaurus tell u data picture cool datasaurus nt trust summary statistic alone na deze grafieken kijk je nooit meer hetzelfde naar het gemiddelde kwartet anscombe datasaurus czyli po co w ogóle rysować statistic triad part vii mapping datasaurus dozen avoid danger zone metric always visualize data probability theory thrown bus stats different graph dataviz methodviz year data visualization favorite information research paper justinmatejka autodeskcom justinmatejka,make calculation graph sort output studied contribute understanding f j anscombe echoed nearly talk data visualization difficult demonstrate importance data visualization people impression chart simply pretty picture important information divined statistical analysis effective often used tool used demonstrate visualizing data fact important anscome quartet developed fj anscombe anscombe quartet set four datasets produce summary statistic mean standard deviation correlation could lead one believe datasets quite similar however visualizing plotting data becomes clear datasets markedly different effectiveness anscombe quartet due simply four different datasets generate statistical property four clearly different visually distinct datasets producing statistical property contrast unstructured quartet right figure also share statistical property anscombe quartet however without obvious underlying structure individual datasets quartet nearly effective demonstrating importance visualizing data fig anscombe quartet left unstructured quartet right datasets summary statistic anscombe quartet lack underlying structure visual distinction popular effective illustrating importance visualizing data around nearly year known anscombe came datasets developed technique create type datasets identical range statistical property yet produce dissimilar graphic recently alberto cairo created datasaurus dataset urge people never trust summary statistic alone always visualize data since data exhibit normal seeming statistic plotting data reveals picture dinosaur inspired anscombe quartet datasaurus present datasaurus dozen download csv fig datasaurus dozen different appearance dataset summary statistic mean standard deviation pearson correlation two decimal place datasets datasaurus plus others summary statistic xy mean xy standard deviation pearson correlation two decimal place drastically different appearance work describes technique developed create dataset others like method key insight behind approach relatively difficult generate dataset scratch particular statistical property relatively easy take existing dataset modify slightly maintain statistical property choosing point random moving little bit checking statistical property set nt strayed outside acceptable bound particular case ensuring mean standard deviation correlation remain two decimal place fig making number small change dataset left maintaining overall statistical property two decimal place shown right repeating subtle perturbation process enough time result completely different dataset however mentioned order datasets effective tool underscoring importance visualizing data need visually distinct clearly different accomplish biasing random point movement towards particular shape animation show process iteration perturbation towards circle shape fig transforming random cloud point circle maintaining statistical property move point towards particular shape perform additional check random perturbation besides checking statistical property still valid also check see point moved closer target shape condition met accept new position move next iteration mitigate possibility getting stuck locallyoptimal solution globallyoptimal solution closer target shape possible use simulated annealing technique begin accepting solution point move away target early iteration reduces frequency acceptance time generate datasaurus dozen created shape direct dot towards resulting plot summary statistic original datasaurus fact intermediate frame well process converting datasaurus shape seen course technique limited shape collection line segment could used target fig creating datasets datasaurus dozen input datasaurus dataset left set target shape middle iteration leading final datasets shown right datasets frame animation summary statistic x x pearson iterating datasets sequentially see data point morph one shape another maintaining summary statistical value two decimal place throughout entire process fig animation showing progression datasaurus dozen dataset target shape example besides datasaurus dozen created several example datasets using technique explained detail paper downloaded visualization one interesting property technique work visualization scatter plot statistical property besides standard summary statistic example datasets start normal distribution point boxplot shown bottom standard tukey boxplot show quartile median quartile value box whisker showing location furthest data point within interquartile range quartile boxplots commonly used show distribution dataset better simply showing mean median value however see distribution point change boxplot remains fig three varying distribution data boxplot representation another way look distribution consider dataset seven category figure data category shifting overtime clearly seen raw data view yet boxplots remain static violin plot good method presenting distribution dataset detail available traditional boxplot say using boxplot never appropriate going use boxplot important make sure underlying data distrubuted way important information hidden fig seven distribution data shown raw data point stripplots boxplots violinplots datasets code datasets presented page paper available download python source code available download tried remove many extra thing code possilbe make readable still bit rough would like put github soon enough interest turn real library researcher would like see original code even though might run properly qutie researchy please contact amazingly without work part datasets turned r package github cran package effort led stephanie locke lucy mcgowan thanks acknowledgement special thanks alberto cairo creating datasaurus asked saved datapoints original tweet nt graciously quickly created new even better dinosaur drawing using fantasitc drawmydata tool also thanks fraser anderson idea start existing dataset desired statistical property rather try create one scratch medium coverage following link attention article received found additional coverage love hear high volume tweet selected newsblog coverage fast co design graph show data viz important may boing boing automatically generate datasets teach people create statistical mirage may flowingdata summary statistic completely different plot may pour la science coïncidences surprenantes mais banales spécial november microsoft revolution datasaurus dozen may eager eye infovis paper chi may linear digression podcast anscombe quartet june digital analytics power hour podcast democratization data july jwz datasaurus dozen may locke data making datasaurus may dabbling data datasaurus monstrous anscombe century may hacker news front page stats different graph may reddit front page wary boxplots might hiding important information aug meneame spanish front page los doce del datosaurio misma estadística diferentes gráficas aug tomaz tonguz statistic mislead may waxyorg th edatasaurus dozen may jake thompson recreating datasaurus dozen using tweenr may prior probability stats different graph may command line generating datasets summary stats different graph may introduction new statistic datasaurus tell u data picture cool may psychometric studio datasaurus may lars p syll nt trust summary statistic alone may de correspondent dutch na deze grafieken kijk je nooit meer hetzelfde naar het gemiddelde july blog statystyczny polish kwartet anscombe datasaurus czyli po co w ogóle rysować may qed insight statistic triad part vii mapping datasaurus dozen aug informationweek avoid danger zone metric sept urban demographic always visualize data oct intuition machine probability theory thrown bus nov morning paper stats different graph oct robert grant stats dataviz methodviz year dec yannick assogba data visualization favorite dec information information please see research paper watch longer video embedded question please contact justin matejka email justinmatejka autodeskcom twitter justinmatejka
414,Lobsters,visualization,Data Visualization,How ZIP codes nearly masked the lead problem in Flint,http://theconversation.com/how-zip-codes-nearly-masked-the-lead-problem-in-flint-65626,zip code nearly masked lead problem flint,flint water crisis dr mona hannaattisha spatial analysis blood lead level rise state official pushing back hurley child hospital research project geocoding geographer quirkier geography unacceptability boundary line modifiable areal unit problem zip code insufficient measure geographically specific phenomenon key determinant health created mail health care delivery u postal service go,write approach first anniversary involvement flint water crisis ongoing catastrophe basic failure government accountability soon approach three year sept received call colleague nowrenowned dr mona hannaattisha asking could run basic spatial analysis blood lead data collected area pediatric clinic heard rumbling blood lead level rise flint state official pushing back finding job examine blood lead data local hurley child hospital flint spatial pattern neighborhoodlevel cluster elevated level could quash doubt state official confirm concern unbeknownst research project would ultimately help blow lid water crisis vindicating month activism outcry dedicated flint resident ran address precise parcellevel geocoding process visually inspected individual blood lead level immediately struck disparity spatial pattern obvious flint child become far likely outcounty child experience elevated blood lead compared two year prior state blatantly callously disregarded information geographer trained extensively geographic information science computer mapping answer obvious upon hearing unit analysis zip code zip code data included people appeared live flint receive flint water actually making data much le accurate appeared zip code bane existence geographer confused childhood friend believing lived entirely different city add cachet part community think generating skepticism toward others relegated le sexy zip code dr tony grubesic arizona state university professor called one quirkier geography world dr nancy krieger harvard university professor colleague called unacceptability smallarea analysis simply summarized blood lead statistic zip code pattern would striking state done incorrectly concluded change water source discernible effect flint child exactly zip code poorly suited analyzing flint water crisis share reason argue public health researcher move away sole reliance zip code least admit shortcoming zip code analysis boundary line zip code city boundary flint align author provided author provided flint case state error introduced flint zip code align well city flint water system city water system almost percent coterminous share boundary onethird home flint zip code lie outside city thus state number flint watered additional percent address city using flint water referred geography modifiable areal unit problem residential zip code flint mailing address lie completely within city zip split city flint outlying municipality zip contains home actually city flint total flint zip code used state analysis blanket part eight different municipality seven township one city surrounding flint solution error simple pinpointing patient address rather relying zip code frightening appalling reflects fundamental ignorance geography tendency uncritically accept number face value analysis zip code tends default analysis public health professional researcher make foray mapping research past two decade suggested reliance zip may misplaced zip code insufficient measure geographically specific phenomenon folly reflects alltoocommon reliance arbitrary boundary defining public health issue zip code recently garnered attention key determinant health curbing old idea biology primary director one health idea behind zip code matter live influence opportunity conduct healthy lifestyle emphasis neighborhoodspecific effect important focus urban planning geographical inquiry decade use zip code mask local issue truly useful unit analysis defining neighborhood effect health geographic area relatively homogeneous term social built environmental characteristic unlike postal code country represent small area suitable indepth geographic inquiry google canadian example zip code woefully unqualified unit analysis created mail health care delivery zip zone improvement plan code designed u postal service logistical solution sorting mail growing city thus zip code designation based area collection mail carrier could reasonably cover day little geography municipal boundary zip code arbitrarily delineated covered range neighborhood type small midsized city one zip code cover urban suburban rural neighborhood highly variable socioeconomic characteristic public health field learning heterogeneity actually make poor representation understanding exposure health disparity zip code even contiguous area actually linear feature along road yet influence many aspect life including car insurance rate sale tax assignment home appraisal value name reality tangible urban amenity including school attendance zone city boundary water system voting district coterminous zip code boundary useful unit census block group ward planning district municipal designation neighborhood within city adhere temporally consistent spatially bounded definition appropriately used understand one neighborhood varies compared another use zip code public health medical field primary way understand health statistic thus concerning heterogeneous population mask inequality well program deployment based zip code inquiry often well aligned geographically population need assistance go still careful remove zip code consideration entirely still useful characterizing phenomenon manifest disparity large scale rate chronic disease exposure nonpoint source pollution regional employment trend must critical toward unusual geography particularly topic interest local solution zip code problem could come either side example u postal serviceled redesign zip code something coherent planning tool would enable continued use public health greater integrity conversely critical eye toward zip code public health profession would open field better spatial measure exposure either way current arrangement clearly working content using zip codelevel data leave open possibility health issue could masked quirky geography flint water crisis example zip code hiding public health problem one apparent zip code final arbiter health statistic risk assuming public health issue packaged neatly box
415,Lobsters,visualization,Data Visualization,Visualizing Concurrency in Go,http://divan.github.io/posts/go_concurrency_visualize/,visualizing concurrency go,http wwwyoutubecomwatch tony hoare csp hello concurrent world go interactive webgl animation goroutine id timer go interactive webgl animation pingpong advanced go concurrency pattern go interactive webgl animation link go interactive webgl animation fifo queue receiver go interactive webgl animation fanin go interactive webgl animation worker go interactive webgl animation go interactive webgl animation server go interactive webgl animation simplicity complicated go interactive webgl animation server worker go interactive webgl animation concurrent prime sieve go concurrency pattern sieve eratosthenes go interactive webgl animation gomaxprocs gomaxprocs webgl animation webgl animation goroutines leak start goroutine fall scope expvarmon go interactive webgl animation parallelism concurrency well covered great talk rob pike go interactive webgl animation go interactive webgl animation made threejs execution tracer githubcomdivangotrace,prefer video blog post talk gophercon http wwwyoutubecomwatch one strongest side go programming language builtin concurrency based tony hoare csp paper go designed concurrency mind allows u build complex concurrent pipeline ever wondered various concurrency pattern look like course thinking mostly visualization one form another ask something involving number image series head even without realizing example imagine line going number turn degree right continues recall young period life kindergarten number cloakroom written along wall number exactly corner probably image number another common example visual representation full year four season people see box circle anyway want show attempt visualize common concurrency pattern using go webgl le represents way see concurrent program head would pretty interesting hear much differs image head especially would love see rob pike sameer ajmani imagine concurrency bet quite interesting let start basic hello concurrent world example get familiar concept attempt hello concurrent world code quite simple single channel single goroutine one write one read package main func main create new channel type int ch make chan int start new anonymous goroutine go func send channel ch go interactive webgl animation blue line represent goroutines running time thin blue line connecting main go mark start stop goroutine revealing parentchildren relation finally red arrow show u sendrecv action actually two separate action try animate single event send b goroutine name actual goroutine internal id obtained runtime trick suggested scott mansfield goroutine id article timer fact build simple timer approach create channel start goroutine writes channel given duration return channel caller func caller block reading channel exact amount time let run timer time try visualize package main import time func timer timeduration go interactive webgl animation pretty neat right let move pingpong nice concurrency example found great talk googler sameer ajmani advanced go concurrency pattern course pattern advanced get familiar go concurrency may look quite fresh interesting channel table pingpong game ball integer variable two goroutinesplayers hit ball increasing value hit counter package main import time func main var ball int table make chan int go player table go player table table go interactive webgl animation point suggest click link interactive webgl animation ctrlcmdclick open new tab play around interactively slowdown animation speedup see different angle let run three player instead two go player table go player table go player table go interactive webgl animation see player take turn sequentially may wonder see strict order goroutines receiving ball answer go runtime hold waiting fifo queue receiver goroutines ready receive particular channel case every player get ready passed ball table let check complex example run table tennis player go player table go interactive webgl animation fifo order obvious spawn million goroutines cheap goal would overkill let see something different play example common messaging pattern fanin one popular pattern concurrent world called fanin pattern opposite fanout pattern cover later short fanin function reading multiple input multiplexing single channel example package main import fmt time func producer ch chan int timeduration var int ch go interactive webgl animation see first producer generates value millisecond second one millisecond reader receives value producer immediately effectively multiplexing happens range loop main worker opposite pattern fanin fanout worker pattern multiple goroutines read single channel distributing amount work cpu core hence worker name go pattern easy implement start number goroutines channel parameter send value channel distributing multiplexing done go runtime automagically package main import fmt sync time func worker tasksch go interactive webgl animation one thing worth note parallelism see goroutines run parallel waiting channel give work given animation easy spot goroutines receive work almost immediately one another unfortunately animation show color goroutine really work wait input exact animation recorded goroutines effectively run parallel get subject shortly let something complex start worker worker subworkers package main import fmt sync time const worker subworkers task subtasks func subworker subtasks chan int task ok go interactive webgl animation nice course set number worker subworkers much higher value tried make animation clear understandable even cooler fanout pattern exist like dynamic amount workerssubworkers sending channel channel idea fanout clear server next common pattern similar fanout goroutines spawned short period time accomplish task typically used implementing server create listener run accept loop start goroutine accepted connection expressive allows implement server handler simple possible take look simple example package main import net func handler c netconn cwrite byte ok cclose func main l err netlisten tcp err nil panic err c err laccept err nil continue go handler c go interactive webgl animation interesting seems nothing happens term concurrency course hood ton complexity deliberately hidden u simplicity complicated let go back concurrency add interaction server let say handler want write asynchronously logger logger example separate goroutine job package main import fmt net time func handler c netconn ch chan string ch go interactive webgl animation quite demonstrative easy see logger goroutine quickly become bottleneck number request increase logging action take time preparing encoding data example use already known fanout pattern let server worker server worker example bit advanced version logger work sends result work back pool using result channel big deal extends logger example something practical let see code animation package main import net time func handler c netconn ch chan string addr cremoteaddr string ch go interactive webgl animation distributed work goroutines effectively improving throughput logger animation see logger still may source problem thousand connection converge single channel distributed may result logger bottleneck course happen much higher load concurrent prime sieve enough faninfanout fun let see sophisticated concurrency algorithm one favorite example concurrent prime sieve found go concurrency pattern talk prime sieve sieve eratosthenes ancient algorithm finding prime number given limit work eliminating multiple prime sequential manner naive algorithm really efficient especially multicore machine concurrent variant algorithm us goroutines filtering number one goroutine per every prime discovered channel sending number generator filter prime found sent via channel main output course algorithm also efficient especially want find large prime look lowest big complexity find extremely elegant concurrent prime sieve package main import fmt send sequence channel ch func generate ch chan go interactive webgl animation feel free play animation interactive mode like illustrative really help understand algorithm better generate goroutine emits every integer number starting new goroutine filter specific prime multiple sending first found prime main rotate see top see number sent goroutines main prime number beautiful algorithm especially gomaxprocs let go back worker example remember told run animation art work real trace real program let refresh memory gomaxprocs gomaxprocs set maximum number cpu executing simultaneously cpu mean logical cpu course modified worker example bit make real work sleep use real cpu time ran code without modification except setting different gomaxprocs value linux box cpu core resulting core first run demonstrates program running core second using power core availiable webgl animation webgl animation time speed animation different wanted animation fit timeheight difference obvious next worker start real work previous finish work speedup huge overhead multiplexing negligible important understand though increasing gomaxprocs always boost performance case actually make worse goroutines leak else demonstrate concurrent thing go one thing come mind goroutines leak leak happen example start goroutine fall scope simply forget add finish condition run loop first time encountered goroutine leak code scary image appeared head wrote expvarmon next weekend visualize scary image webgl take look go interactive webgl animation feel pain even simply looking line wasted resource ticking bomb program parallelism concurrency last thing want illustrate difference parallelism concurrency topic well covered great talk rob pike subject one mustwatch video really video short parallelism simply running thing parallel concurrency way structure program thus concurrent program may may parallel concept somehow orthogonal seen earlier demonstration gomaxprocs setting effect repeat linked article talk picture worth thousand word visualize difference parallelism many thing running parallel go interactive webgl animation also parallelism go interactive webgl animation concurrency also concurrency made create animation wrote two program gotracer gothreejs library first gotracer following parse ast tree go program insert special command output concurrency related event startstop goroutine create channel sendreceive tofrom channel run generated program analyze special output produce json description event timestamps example resulting json next gothreejs us power amazing threejs library draw line object using webgl little wrapper fit single html page approach though super limited accurately choose example rename channel goroutines make le complex code produce correct trace approach easy way correllate channel goroutines different name mention channel sent channel type chan also huge issue timing output stdout take time sending value case place timesleep amount millisecond get proper animation basically reason opensourcing code yet playing dmitry vyukov execution tracer seems provide good level detail event contain info value sent maybe better way achieve desired goal write twiter comment idea would super great extend twoweekends tool real debuggingtracing instrument suitable go program also would happy visualize interesting concurrent algorithm pattern listed feel free write one comment happy coding upd tool available githubcomdivangotrace using go execution tracer patched runtime generate trace also open new job interesting companyteam challenging problem solve use go open remote barcelona hiring let know
416,Lobsters,visualization,Data Visualization,Simple Algorithms for Network Visualization: A Tutorial,http://profs.etsmtl.ca/mmcguffin/research/2012-mcguffin-simpleNetVis/mcguffin-2012-simpleNetVis.pdf,simple algorithm network visualization tutorial,,obj stream l z c ŗ ޓε єw v ɞ q jz q eb ĸ v
417,Lobsters,visualization,Data Visualization,Banning exploration in my infovis class,https://medium.com/@eytanadar/banning-exploration-in-my-infovis-class-9578676a4705,banning exploration infovis class,banning exploration infovis class purpose eda know worked surprise framework system lineup dust magnet teaching infovis elsewhere,patent diving apparatus marine exploration like banning exploration infovis classi banned word explore project proposal infovis class explore exploration exploratory may create tool allow analyst explore bird strike data build system exploration microarray data make framework exploratory network analysis nothe line use student one paid explore paid find trying clever ninety percent dreading grading output project feature exploration objectivei got lunch john tukey many year ago talked birding wish talked exploratory data analysis clever name created thing software bit cepstrum quefrency eda name fundamentally problematic ambiguous explore transitive seek something intransitive wander seeking nothing particular tukey book seems emphasize former full unique graphical tool find certain pattern data distribution type difference distribution outlier many useful statistical pattern problem student think meant lattersomehow term given student professional license totally imprecise building critically evaluate whether worked seeking anything particular tool let meander data perfectly reasonable make job deriving insight completely responsibility enduser world decision reasonable one evaluation unnecessary grade real world banned explore exploration unbounded context building tool need able decide exploration terminates forcing student tell want enduser find andor decision want enable led better project mean student potentially client evaluate design decision context specific set task ask question visualization make salient information need purpose edamy model exploratory data analysis consists two main part type finding perceptual classification analyst look data match see familiar pattern call patternfinding time series show upward trend analyst know different trend normal distribution histogram analyst know different histogram mean outlier scatter plot obvious cluster random noise md plot big change two bar etc exploring one recognizes pattern data make decision time buy run parametric test remove outlier k set run ttest compare null model perceptual clustering analyst find group similar pattern without necessarily leveraging known pattern call patternmaking analyst looking repeating pattern within context dataset rather relative past experience domain knowledge time series plot seem similar five go three period three flat period dropping row microarray heatmap different context class maybe broadly successful exploratory tool one let analyst find pattern looking data quickly accurately reliably scaleably explicit pattern critical step defining project somehow existence word exploratory let student think could get away without step banning force contend finding bitshow know worked tried different strategy early teaching emphasized evaluation validate success interface student often flustered would eventually begin define research instrument based thing found caught validation might include supporting analyst testing hypothesis finding significant difference outlier pattern etc really caught start articulate decision enabled based found pattern mean buy stock pattern b mean sell unfortunately catch common occurrence tell would evaluate exploratory tool based analyst insight research practice might specific definition insight student insight vague explore actually fairly sympathetic student struggle think going student confusing exploration data enduser exploration look like mistaking design task familiarizing data analyst might student often engaging exploration purpose identifying pattern influence design often missing background knowledge develop step exploration analyst may already mental model interesting uninteresting pattern fine mean explore data engage patternmaking understand patternmaking analyst patternmakingpatternfindingdecisionmaking goal different forcing definition project goal term specific task enabled decision ensures task grounded realistic analyst bit cruel also real goal client goalsin denying student ability frame main task exploration forced concede want find enduser may looking engage client create reasonable one real task decision b understand data task much deeply c identify good validation strategy insight surprise every get push back ban surprise common refrain tukey said greatest value picture force u notice never expected see nice think meant build tool walk aimlessly forest eventually run zebrastriped unicorn something neither designer analyst could predicted encountering would impossible design likely interpretation build tool let u see manmade cabin forest expecting see tree natural tree expected thing natural possible eg man made cabin surprising given analyst expectation put statistical example may expect see normal distribution surprise interesting would change behavior default analysis would see poisson distribution making sure see something strange poisson deviation normal support forcing notice never expected see student often start idea possible surprised focus specific objective serendipity constrained taken extreme lead model purely openended solution one specific target pushed reasonable way lead surprising finding well maybe think far likely lead apophenia rather serendipity even likely analyst find nothingregardless surprise relative term one anchored observation differ expectation come exploratory analysis conception data might probability distribution pattern far le think talking detectable visual pattern example expect see pattern b c subset expect see e f walking analysis certainly different confidence expectation amount surprise different see expectation exploration process validating expectation finding expectation metthe model universe pattern unbounded odd superficially true subset look like pattern u trend seasonality correlation community outlier etc eda tool way tukey describes built target help eye find pattern statistical interest even tukey continues exploratory data analysis detective work purest sense finding revealing clue always feel little bad eliminating exploration remove romantic notion joy surprise joke must german word finding joy clicking random link wikipedia certainly joy clicking random filter visual analytics system zooming around large network end joy come occasionally finding something unexpected confirming internal hypothesis case build visualization make finding salient framework system problem teaching student generic tool technique eg tableau parallel coordinate lineup etc focus fact applied many specific domain problem suggest building one final project often miss point suggest wide array abstract exploratory task never anchor project domainbased case studiessomehow read framework system maybe fault teaching certain way want build generic tool need support diverse set application know application need support openended explorationthis somewhat broken model acknowledge tool technique solution wicked design problem system notable pattern make salient one occlude parallel coordinate dust magnet lineup broadly intended multivariate datasets tool emphasizes certain pattern consequently task encoding choice interactivity feature endusers pick specific tool tool better finding specific pattern thus enabling decision care aboutagain eliminating exploration even student work broader framework forced contend specific finding task want support added benefit forcing find real example use case study validate ideasteaching infovisi taught infovis class number year found project much successful banned exploration sure possible guide student good project enough feedback iteration become impractical given time constraint growth classmaybe obvious started teaching thought openended allowed better somehow would lead diverse cool weird novel project way true argued elsewhere teaching infovis wicked design problem yes want creativity also need make sure student learn key concept skill forcing specific language think struck right balance still get interesting occasionally weird project project quality increased number learning objective student hit comparing alternative arguing one solution another designing validation exploration exploratory exploring explorethanks jessica hullman feedback
418,Lobsters,visualization,Data Visualization,1.1 Billion Taxi Rides with MapD 3.0 & 2 GPU-Powered p2.xlarge EC2 Instances,http://tech.marksblogg.com/billion-nyc-taxi-rides-aws-ec2-p2-8xlarge-mapd.html,billion taxi ride mapd gpupowered instance,rebranded gpu wrapping software aws google cloud azure singlepage summary gpupowered aws cluster downloading billion taxi journey billion taxi ride redshift mapd running recommendation info mapdcom importing billion trip mapd nvidia tesla benchmarking mapd benchmark recap board linkedin,update mapd rebranded omnisci april mapd released one big announcement release support clustering across multiple machine native software motherboards support one graphic card point run pcie bus bottleneck add nvidia driver limit number gpus visible one machine able use multiple machine help get around limitation scaling mapd past used gpu wrapping software cluster several graphic card separate machine together one virtual graphic card still useful gpuaccelerated application mapd clustering support added advantage able use gpus cpu memory disk drive across cluster well allows horizontally scalable deployment three major cloud provider aws google cloud azure include nvidia tesla instance offering nvidia graphic card based kepler microarchitecture rather maxwell pascal nonetheless sport two gpus combined cuda core x memory bus gb ram access memory quickly aggregated throughput speed gb whereas conventional cpu might able access ram gb might nvidia latest telsaseries offering still beast benchmark see well tesla card spread across two instance perform querying billion taxi trip using dataset used benchmark amazon athena bigquery clickhouse elasticsearch emr kdbq postgresql redshift vertica singlepage summary benchmark gpupowered aws cluster using two instance amazon oregon region benchmark machine come nvidia virtual cpu reported intel xeon cpu clocked gb ram gbps network connection launched ondemand instance cost hour check spot price history putting blog post together last week common price hour availability zone output nvidia system management interface instance see list gpus across card individually nvidiasmi driver version gpu name persistencem busid dispa volatile uncorr ecc fan temp perf pwr usagecap memoryusage gpuutil compute tesla na default tesla na default tesla na default tesla na default tesla na default tesla na default tesla na default tesla na default first instance launched cluster mapd leaf aggregator node second instance mapd leaf string dictionary node machine belong security group allows communicate one another tcp port aggregator server tcp port leaf communication tcp port string dictionary server using ami image machine instance tb eb volume filesystem size used avail use mounted devtmpfs dev tmpfs devshm downloading billion taxi journey instance set aws cli tool use concurrent request better saturate network connection downloading taxi trip dataset aws configure set download gb csv data created billion taxi ride redshift blog post onto instance data sits across gzip file decompresses around gb raw csv data mkdir csvdata cd csvdata aws sync csv gunzip tripsx csvgz mapd running everything unless otherwise noted run instance going install nvidia driver along two requirement gcc kernel development package provides header needed compile kernel module sudo yum install gcc kerneldevel uname r curl http sudo binbash per amazon recommendation going switch nvidia driver persistent mode turn autoboost set gpu compute clock speed mhz gpu memory clock speed mhz sudo nvidiasmi pm sudo nvidiasmi sudo nvidiasmi ac mapd commercial software disclose full url downloaded selfextracting archive nonetheless step needed install mapd interested copy mapd info mapdcom able help mkdir p prodinstalls cd prodinstalls curl server chmod x ln prodmapd add mapd path environment variable java installation library path export path export ldlibrarypath first instance create folder setup system cluster configuration file following content mkdir p prodmapdstorage data vi prodmapdstorageclusterconf host port role dbleaf host port role dbleaf host port role string set leaf node configuration following vi port httpport data readonly false quiet false stringservers web port frontend set aggregator node configuration following vi port httpport data readonly false quiet false cluster web port frontend initialise leaf aggregator database launch respective service cd initdb data mapdserver config mapdconf cd initdb data mapdserver config mapdconf second instance setup string dictionary server configuration mkdir p prodmapdstorage string data vi prodmapdstoragemapdsdsconf port path set leaf node configuration following vi prodmapdstoragemapdconf port httpport data readonly false quiet false stringservers web port frontend set second node clusterconf file following vi prodmapdstorageclusterconf host port role dbleaf host port role dbleaf host port role string initialise leaf node database launch two service cd prodmapdstorage initdb data mapdserver config mapdconf stringdictionaryserver config mapdsdsconf importing billion trip mapd following schema taxi trip table fragment size tell mapd many record spread across gpu set million exercise vi createtripstablesql create table trip tripid integer vendorid varchar encoding dict pickupdatetime timestamp dropoffdatetime timestamp storeandfwdflag varchar encoding dict ratecodeid smallint pickuplongitude decimal pickuplatitude decimal dropofflongitude decimal dropofflatitude decimal passengercount smallint tripdistance decimal fareamount decimal extra decimal mtatax decimal tipamount decimal tollsamount decimal ehailfee decimal improvementsurcharge decimal totalamount decimal paymenttype varchar encoding dict triptype smallint pickup varchar encoding dict dropoff varchar encoding dict cabtype varchar encoding dict precipitation smallint snowdepth smallint snowfall smallint maxtemperature smallint mintemperature smallint averagewindspeed smallint smallint pickupctlabel varchar encoding dict pickupborocode smallint pickupboroname varchar encoding dict varchar encoding dict varchar encoding dict pickupcdeligibil varchar encoding dict pickupntacode varchar encoding dict pickupntaname varchar encoding dict pickuppuma varchar encoding dict smallint dropoffctlabel varchar encoding dict dropoffborocode smallint dropoffboroname varchar encoding dict varchar encoding dict varchar encoding dict dropoffcdeligibil varchar encoding dict dropoffntacode varchar encoding dict dropoffntaname varchar encoding dict dropoffpuma varchar encoding dict create environment variable credential mapd read mapdpassword export mapdpassword execute sql script aggregator table created leaf node mapdql p mapdpassword port createtripstablesql cutting dataset roughly half node holding around record node distinctive version loadsql script load different part dataset script first node copy trip csv headerfalse copy trip headerfalse copy trip headerfalse script second node copy trip csv headerfalse copy trip headerfalse copy trip headerfalse avoid going aggregator become bottleneck following command coordinated first server executed independently individual leaf node time mapdql p mapdpassword server time mapdql p mapdpassword server first node loaded dataset minute second second node loaded dataset minute second load time clustered approach really begin shine last june benchmark nvidia tesla single machine took minute second import dataset great see two machine able break apart job complete roughly half time data loaded connect via aggregator see billion record visible mapdql p mapdpassword port mapdql select count trip benchmarking mapd time quoted lowest query time seen series run benchmark use lowest query time way indicating top speed mapdbinmapdql mapd u mapdusername p mapdpassword following completed second select cabtype count trip group cabtype following completed second select passengercount avg totalamount trip group passengercount following completed second select passengercount extract year pickupdatetime pickupyear count trip group passengercount pickupyear following completed second select passengercount extract year pickupdatetime pickupyear cast tripdistance int distance count thecount trip group passengercount pickupyear distance order pickupyear thecount desc although result place benchmark place benchmark recap board worth mentioning recap board sorted fastest query time query time outperformed one benchmark query time fastest ever query seems scale linearly number node cluster run query past single machine number execution took almost twice long first heard mapd would natively support clustering wondered impact network overhead would implementation great see mapd still optimises data locality extremely well network chatter nt seem noticeable impact query time launched cluster using spot instance would spent hour pretty sure best price performance seen benchmark benchmark ran twogenerationsold microarchitecture nvidia ca nt imagine kind number would seen pascalpowered gpus time would look like used two instance performance result impressive say least impressive know lot performance yet unlocked thank taking time read post offer consulting handson development service client north america europe like discus offering help business please contact via linkedin
419,Lobsters,visualization,Data Visualization,Animated Bézier Curves,https://www.jasondavies.com/animated-bezier/,animated bézier curve,jason davy animated curve curve similar animation wikipedia mike bostock paper primer curve jason davy privacy policy,jason davy animated curve animated curve play control point modify curve animation illustrate parametric curve constructed parameter range simplest case firstorder curve curve straight line control point secondorder quadratic curve first find two intermediate point along line three control point perform interpolation step find another point along line two intermediate point plotting last point yield quadratic curve step repeated higher order inspired similar animation wikipedia thanks mike bostock suggestion citing paper want know curve highly recommend mike interactive online book primer curve jason davy privacy policy
420,Lobsters,visualization,Data Visualization,Hacking the Hivemind: Predicting Comment Karma on Internet Forums (2014),"http://cs229.stanford.edu/proj2014/Daria%20Lamberson,Leo%20Martel,%20Simon%20Zheng,Hacking%20the%20Hivemind.pdf",hacking hivemind predicting comment karma internet forum,,obj length filter flatedecode stream ow uu hp p z v c e ו f j ڂ endstream endobj obj length filter flatedecode stream z h f 㿤 v cbpl ga endstream endobj obj length filter flatedecode stream jf q x otn bʌ q x v z yd f gd n h x n endstream endobj obj type xobject subtype image width height bitspercomponent colorspace devicergb smask r length filter flatedecode stream c ݳgπ f
421,Lobsters,visualization,Data Visualization,An Open Letter to Boring Avatars Everywhere — Meet Foxes,https://patreonhq.com/an-open-letter-to-boring-avatars-everywhere-meet-foxes-6575f0b5de31,open letter boring avatar everywhere meet fox,subscribe newsletter,subscribe newsletterevery week share hardhitting advice successful creator industry expert join creative professional already receiving case study indepth guide
422,Lobsters,visualization,Data Visualization,The Day of The Tentacle: Dependency Graph Analysis,http://thewebsiteisdown.com/twidblog/day-of-the-tentacle-dependency-graph/,day tentacle dependency graph analysis,day tentacle puzzle dependency graph primer dependency graph analysis puzzle puzzle puzzle dependency graph puzzle dependency graph primer yed cam laverne green hoagie orange feature graph make bushy talking graph character cooperation swimlanes expanding contracting expanding puzzle higher outdegree indegree meaning open nonlinear branching expand number puzzle available solved contracting puzzle higher indegree outdegree meaning close nonlinear branching reduce number puzzle available solved narrative structure puzzle dependency graph primer detailed example hoagie journey deconstructing hoagie bernard journey laverne great rule adventure game summary file yed png yed png puzzle puzzle,part two three part series analyzing day tentacle puzzle dependency graph primer dependency graph analysis puzzle puzzle post analysis puzzle dependency graph day tentacle classic lucasarts adventure game released starring irrepressible nerd evil tentacle three generation mad scientist quickly captured heart adventure going public day lighthearted game focus exploration narrative humor creative team included dave grossman tim schafer ron gilbert gary winnick cartoonish surface game highly polished elaborate design complex puzzle structure post focus puzzle dependency graph way puzzle integrated narrative puzzle dependency graph purpose analyzing game reconstructed puzzle dependency graph described part puzzle dependency graph primer used yed build graph cam gantt chart graph laid vertically top bottom node colored show game character required solve puzzle color assigned follows bernard blue laverne green hoagie orange start end node created player action satisfy downstream dependency create node act picking item lying around walking new area action technically fit criterion usually earlier puzzle actually allowed player take action dependency assigned upstream puzzle recommended part used layout place puzzle highest layer possible still keeping dependency flowing downwards note three graph shown post represent dependency graph data different layout initial graph grouping node shown dependency graph displayed using compact layout nonlinear midgame kicked dramatically find super battery plan puzzle downstream puzzle feature graph graph single initial starting node input edge starting condition one destination node outbound edge victory condition horizontal layer give indication amount nonlinear branching happening given point game puzzle layer completed puzzle next layer guaranteed dependency satisfied available solving course player need solve puzzle layerbylayer number puzzle available given time could le number particular branch size layer give u general idea degree nonlinear branching phase game valid order player may solve puzzle known topological order due high degree nonlinear branching game vast number valid topological order exact number known lower bound determined looking number permutation possible largest layer puzzle fourth layer billion possible order player might solve gantt chart nice way look size layer visually show number puzzle available layer green box vertical column see game short linear introductory segment followed nonlinear middlegame kind puzzle available solving degree nonlinear branching reduced slowly game wind finish completely linear segment puzzle end gantt chart day tentacle puzzle game could dependency graph different feature game multiple starting condition would one initial node first layer game multiple victory condition optional puzzle contribute final victory would one leaf node shape dependency graph gantt chart also instructive game purely linear would straight line node start finish one dependency even higher degree nonlinear branching result would wider graph puzzle individual layer game follows advice noah falstein said make bushy advocating graph balance linear nonlinear branching shape resembles bush shape also mentioned ron gilbert talking graph current game thimbleweed park considering possible type graph allows u think day tentacle constructed choice clearly made designer incorporate every puzzle narrative alternate ending even optional easteregg puzzle focus nonlinearity give player plenty available puzzle midgame benefit giving plenty thing time avoids holding game player stuck single puzzle choice carefully crafted game however many game begin feel aimless random many possibility clear goal day tentacle manages retain benefit nonlinearity avoiding pitfall large part due puzzle structure character cooperation key game device day tentacle ability switch character somewhat unusual adventure game unusual actually work gameplay story perspective game require player juggle multiple character work nearly well including maniac mansion one reason think succeeds combination timetravel narrative device restriction setting different version mansion two element combine enable many cooperative puzzle one character action contribute puzzle another done passing item via chronojohns taking action past affect future testament high caliber design game two basic action used never seem lose charm magic swimlanes tell exactly many puzzle involve kind intercharacter cooperation looking dependency graph grouped lane lane group puzzle solved individual character look edge node cross one lane another easily see puzzle dependency character puzzle type interdependent puzzle half gameplay therefore relies either cooperating directly character via chronojohns taking action one character enables puzzle another character usually crossing time dependency graph shown separated lane dependency graph grouped swimlanes character puzzle require cooperation character seen edge cross lane expanding contracting discover analyzing graph looking degree node see puzzle open close branching degree clear puzzle open branching game really open find super battery plan open downstream puzzle player spends rest game finding closing branch puzzle close generally reduce branching meaning indegree outdegree certainly design choice would interesting know approach tried discarded clear looking table way game play small number puzzle dramatically open nonlinear branching game expands quickly take long time close back expanding puzzle higher outdegree indegree meaning open nonlinear branching expand number puzzle available solved puzzle degree degree find super battery plan disguise laverne find dr fred secret lab laverne access outside get laverne tree enter human show get crowbar contracting puzzle higher indegree outdegree meaning close nonlinear branching reduce number puzzle available solved puzzle degree degree get super battery mummy fashion get tiny sweater get dusty warm hamster back present get vinegar build fire start storm get lab coat get kite charge battery denture laverne get rid harold win human show get skunk plug laverne chronojohn get toasty warm hamster power laverne chronojohn rescue dr fred get signed contract mail contract past narrative structure discussed puzzle dependency graph primer nonlinear branching puzzle structure pose complication narrative factorial expansion order player may solve puzzle day tentacle address problem isolating narrative subplots almost totally distinct puzzle tree see clearly organizing puzzle dependency graph group based downstream goal graph show nonlinear branching puzzle day tentacle aligns closely major subplots game single cross dependency exists group clear graph essentially three totally separate game map directly primary subplots see possible play entire subtree power laverne chronojohn without ever puzzle either two subtrees likewise get diamond without single puzzle outside subtree one puzzle dependency outside group get vinegar requires access history room denture laverne puzzle act like gate requires player least get laverne tree disguised hoagie continues end story gate internal story tree explore fact game broken three siloed subplots completely masked character switching dynamic since subplots require extensive cooperation character never feel like working isolated puzzle group also given vast number order puzzle solved player unlikely resolve one plot completely even starting another one anyway great player experience free make progress three subgoals time noticeable player point keeping puzzle subgraphs narrative standpoint keeping subplots isolated seems key maintaining coherent story regardless order puzzle solved puzzle fourth layer billion possible order player may solve attempt turn order coherent story obviously impossible solution day tentacle take isolate subplots even divide small subtrees able solved essentially linearly subdividing puzzle part equation however interesting note dialogue npc action go along puzzle subplot reference subplots puzzle plot point together make subplot completely selfcontained coherent regardless unit player also experienced see two design choice made first breaking puzzle narrative distinct unit second refrain making narrative reference information outside unit seem fundamental way day tentacle provide high degree nonlinear branching without introducing lot logical narrative bug impossible maze dialogue tree account different order player may visit story brap detailed example hoagie journey demonstrate design feature narrative isolation walk hoagie narrative beginning game point plug chronojohn review narrative broken isolated subplots compare relevant subtrees dependency graph see relate story begin purple tentacle drink toxic sludge turn mutant decides take world dr fred tie tentacle secret lab planning kill hamster go bernard house warn bernard decides rescue tentacle bringing two friend hoagie laverne along arriving house kid split bernard discovers secret lab release tentacle point dr fred show reminds bernard purple tentacle incredibly evil planning taking world hope turn sludgeomatic yesterday using time machine bernard hoagie laverne travel time chronojohns due immitation diamond machine malfunction bernard end back present hoagie go year past laverne year future goal shift rescuing two friend instruction dr fred bernard realizes must get real diamond use time machine figure way hoagie laverne plug chronojohns since hoagie year past way use dr fred patented super battery dr fred flush plan battery chronojohn sends time hoagie dr fred instructs take plan long distant ancestor red edison floundering founding father battery going super red edison tell hoagie make super battery oil vinegar gold oil found kitchen item need work hoagie discovers founding father holed mansion trying write constitution writer block making much progress gold quill table let hoagie grab jefferson time capsule though hoagie put bottle wine time capsule order send future make vinegar giving george washington exploding cigar hoagie knock teeth replaces chattering teeth present day mansion make george look cold jefferson start fire fireplace hoagie put blanket hancock wearing top chimney filling room smoke setting fire alarm founding father jump window give hoagie chance snag gold quill laverne get access history room future able get vinegar send back hoagie oil vinegar gold return red edison basement lab hand red edison construct super battery however super battery need charged power chronojohn ben franklin experience finding ben franklin field trying discover electricity hoagie realizes might able power super battery ben got experiment work sunny storm collect brush bucket soap water wash buggy front house order make rain unfortunately make franklin go back house kite work get wet give red edison help wanted sign present day get hired moronic drone benefit giving access lab coat franklin cut make allseason frankocopter fly rain go back field hoagie slip super battery kite get hit lightning battery charged deconstructing hoagie hoagie journey three main story thread involved getting hoagie back present building charging super battery founding father ben franklin three story branch incident hoagie traveling past come back together hoagie getting super battery charging plugging chronojohn two event story diverge subplots follow inverted dependency tree back upwards get super battery see puzzle also exist isolated subgraphs possible get gold without making progress another tree likewise possible get kite vinegar without even given plan red edison key thing note none dialogue narrative around three story make assumption player done outside small subplot question hoagie never mention oh great need gold get super battery bet charge super battery kite player may even given plan red edison getting gold getting kite may even know ingredient required battery need charging restricting reference dialogue action puzzle story small subgraph game avoided kind bug story bernard journey bernard story three linear subplots bernard laverne story use similar mechanism bernard simplest two serial subplots maximum three puzzle single layer bernard goal get contract rescue dr fred irs get diamond bernard story differs hoagie part linear must happen sequence enforced two gated section get rope opened safe get signed contract rescue dr fred bernard subplots essentially form single serial narrative possibility narrative information incorrectly referenced order laverne great laverne story much different longest complicated four subplots biggest puzzle group game subplots gain freedom win human show free edison power chronojohn using hamster laverne disguised freely roam around future mansion puzzle solved eventually play narrative motivated anything example likely player get sweater sleeping conventioneer without knowing time used example key lock puzzle lead player confusion see reference ron gilbert rule adventure game part fact need hamster frozen warm dusty otherwise motivated laverne get basement find generator number puzzle player may solve quite large laverne complicated winning human show hand well set number clear guidepost narrative subplot encapsulated solved start finish outside dependency two subplots completed resolve primary story power chronojohn get back present kid gang resolve overarching plot saving world purple tentacle getting dr fred house summary seen puzzle narrative broken three almost totally isolated group broken little subplots well encapsulated minimal external narrative reference design game seems greatly simplified instead attempting write dialogue action around vast number possible story scenario based order player might solve puzzle problem reduced simple linear storytelling within subplots believe key day tentacle benefit high degree nonlinear branching effectively allowing player choose order story told still avoiding mistake reference made event player yet experienced file interested exploration dependency graph graph various format day tentacle dependency graph swimlanes grouped character yed png day tentacle dependency graph grouped sub goal yed png feel free make use file research publish something would love link thank even yet day tentacle analysis please see last part series puzzle puzzle
424,Lobsters,visualization,Data Visualization,File Format Posters,https://github.com/corkami/pics/tree/master/binary,file format poster,,
425,Lobsters,visualization,Data Visualization,agate -- a Python data analysis library that is optimized for humans instead of machines,https://agate.readthedocs.io/en/1.6.0/,agate python data analysis library optimized human instead machine,,county countycost sedgwick coffey montgomery johnson saline finney brown kiowa wilson ford
426,Lobsters,visualization,Data Visualization,How Uber Uses Behavioral Science Tricks to Push Its Drivers’ Buttons,https://www.nytimes.com/interactive/2017/04/02/technology/uber-drivers-psychological-tricks.html,uber us behavioral science trick push driver button,senior official faster pickup time mean idle driver allegation sexual harassment evade regulatory scrutiny heated argument driver like postmates similar approach company calculated written paper gross fare information presentation motivates seeing gain fearing loss found evidence debate published study rideshare company benefit get driver focus dollar target instead working busiest time writes book rise bingewatching study turn influential paper driver road benefit rideshare company driver profit surge pricing scarcity rank effort industry insider estimate,secretive ridehailing giant uber rarely discus internal matter public march facing crisis multiple front top official convened call reporter insist uber changing culture would longer tolerate brilliant jerk notably company also announced would fix troubled relationship driver complained year falling pay arbitrary treatment underinvested driver experience senior official said reexamining everything order rebuild love yet even uber talk determination treat driver humanely engaged extraordinary behindthescenes experiment behavioral science manipulate service corporate growth effort whose dimension became evident interview several dozen current former uber official driver social scientist well review behavioral research uber innovation reflect changing way company managing worker amid rise freelancebased gig economy driver officially independent business owner rather traditional employee set schedule allows uber minimize labor cost mean compel driver show specific place time lack control wreak havoc service whose goal seamlessly transport passenger whenever wherever want uber help solve fundamental problem using psychological inducement technique unearthed social science influence long driver work quest perfectly efficient system balance rider demand driver supply lowest cost passenger company employing hundred social scientist data scientist uber experimented video game technique graphic noncash reward little value prod driver working longer harder sometimes hour location le lucrative faster pickup time mean idle driver change number driver rideshare simulation faster pickup time rider require greater percentage driver idling unpaid keep driver road company exploited people tendency set earnings goal alerting ever close hitting precious target try log even concocted algorithm similar netflix feature automatically load next program many expert believe encourages bingewatching uber case mean sending driver next fare opportunity current ride even happens without giving whiff coercion show driver area high demand incentivize drive said michael amodeo uber spokesman driver stop work literally tap button decision whether drive percent uber recent emphasis driver accident problem mounted company allegation sexual harassment office revelation created tool deliberately evade regulatory scrutiny uber made softening posture toward driver litmus test ability become better corporate citizen tension particularly evident chief executive travis kalanick engaged heated argument driver captured viral video obtained bloomberg prompted abject apology examination new york time found uber continuing apace struggle wield upper hand driver socalled platformmediated work like driving uber increasingly becomes way people make living company example illustrates pulling psychological lever may eventually become reigning approach managing american worker uber arguably biggest sophisticated player inducing worker serve corporate goal gig economy platform also involved uber main competitor lyft popular delivery service like postmates rely similar approach company individual posting assignment crowdsourcing site like amazon mechanical turk hundred thousand worker earn piecerate wage completing discrete task course many company try nudge consumer buying product service using psychological trick extending effort work force potentially transformative though employer long borrowed insight social science get worker tech company like google calculated employee interact unfamiliar colleague graze together snack bar constrained large body law custom united state hold employer far power employee business customer must provide far greater protection least minimum wage overtime pay uber exists kind legal ethical purgatory however driver independent contractor lack protection associated employment mastering worker mental circuitry uber like may taking economy back toward prenew deal era business enormous power worker check ability exploit talking kind manipulation literally affect people income said ryan calo law professor university washington alex rosenblat written paper way company use data algorithm exploit psychological weakness uber official said using know driver control interface term transaction channel behavior driver direction want go early group roughly uber employee responsible signing driver getting drive voted change name supply growth driver growth vote unprompted much previous year uber executive agonized lower rate driver deserting platform alongside uber already daunting target expanding pool driver meet mounting demand high turnover threatened cap company growth throw crisis uber conducted interview focus group executive peppered employee question like empathy driver side equation underlying tension fact uber interest driver odds level driver typically keep left gross fare uber take roughly percent commission prefer scarcity rank keep busier push earnings part uber desperate avoid shortage seeking instead serve every customer quickly ideally five minute le particularly true shortage pronounced create surge higher fare normal surge mitigate shortage part repelling passenger something directly odds uber longterm goal dominating industry u better surge said daniel graf uber vice president product surge produce ride result much uber communication driver year aimed combating shortage advising driver move area exist might arise uber encouraged local manager experiment way achieving day long every day text email popups hey morning rush started get area demand biggest said ed frantzen veteran uber driver chicago area always constantly trying get certain direction local manager men went far adopt female persona texting driver found uptake higher laura would tell driver hey concert let head said john p parker manager uber dallas office referring one persona overwhelmingly male driver population uber acknowledged experimented female persona increase engagement driver friction meeting demand compounded complaint arrangement like aggressive car lease required many driver work upward hour week eke profit uber official began worry driver backlash putting strategic disadvantage competition lyft cultivated reputation driverfriendly uber long reflection mr kalanick charismatic hardcharging chief often involved corporate minutia according article information mr kalanick complained subordinate informed sooner glitch company push notification personally weighed time employee could receive free dinner uber began process effect becoming little le like mr kalanick little like lyft rethought lease program softened hectoring tone message limited volume time became positively cheery roughly period uber increasingly concerned many new driver leaving platform completing ride would earn signing bonus stem tide uber official city began experimenting simple encouragement almost halfway congratulation experiment seemed warm innocuous fact exquisitely calibrated company data scientist previously discovered driver reached threshold rate attrition fell sharply psychologist video game designer long known encouragement toward concrete goal motivate people complete task getting internalize company goal said chelsea howe prominent video game designer spoken coercive psychological technique deployed game internalized motivation powerful kind mr amodeo uber spokesman defended practice try make early experience good possible also realistic possible said want people decide driving right making driver feel good could compatible treating lab subject surprise none lyft shown much several year earlier company hired consulting firm figure encourage driving platform busiest hour time lyft driver could voluntarily sign advance shift consultant devised experiment company showed one group inexperienced driver much would make moving slow period like tuesday morning busy time like friday night per hour another group lyft reversed calculation displaying much driver losing sticking tuesday latter significant effect increasing hour driver scheduled busy period kristen berman one consultant explained presentation experiment root field behavioral economics study cognitive hangups frequently skew decisionmaking central finding derived concept known loss aversion hold people dislike losing like gaining m berman said motivates seeing gain fearing loss still m berman disclosed interview lyft eventually decided using lossaversion approach suggesting company drawn brighter line come potential manipulation tried log new year day last year josh streeter uber driver tampa fla area received message company driver app headline make text explained away making net earnings sure want go offline two prompt go offline keep driving latter already highlighted got screen shot dozen message said mr streeter began driving full time lyft uber quit last year invest real estate mr streeter alone month driver tried log app would frequently tell certain amount away making seemingly arbitrary sum day matching earnings point one week earlier message intended exploit another relatively widespread behavioral tic people preoccupation goal nudge driving longer past year behavioral economist found evidence phenomenon known income targeting worker decide long work day like cabdriver goal mind say much way marathon runner try get time four hour three hour debate among economist widespread practice strictly cabdriver follow target top official uber lyft certainly concluded many driver set income goal others motivated income target sure said brian hsu lyft vice president charge supply hear story people want buy next thing added started allow driver set goal well app uber even published study last year using vast pile data driver ride hour finding substantial although fraction partner practice extreme form income targeting start platform though abandon gain experience strict income targeting highly inefficient lead driver work long hour day business slow hourly take low knock early day business brisk rideshare company benefit get driver focus dollar target instead working busiest time tip watch hourly wage rate beauty message uber sent mr streeter fellow driver driver need even specific income goal mind order message work addictive game ever made like hit tetri rely feeling progress toward goal always beyond player grasp psychologist adam alter writes book irresistible mental state name ludic loop term coined anthropologist slot machine expert natasha schüll uber part appears aware ludic loop message driver included graphic engine gauge needle came tantalizingly close still short dollar sign ludic loop far video game feature uber adapted way keeping driver road moment app show driver many trip taken current week much money made much time spent logged overall rating passenger metric stimulate competitive juice drive compulsive gameplaying whole thing like video game said eli solomon veteran uber lyft driver chicago area said sometimes fight urge work glancing data sometimes socalled gamification quite literal like player video game platform xbox playstation pogo uber driver earn badge achievement like beyond denoted app cartoon rocket blasting excellent service marked picture sparkling diamond entertaining drive pair groucho marx glass nose eyebrow course manager borrowing logic game generation set contest competition among worker overt form gamification proliferated past decade example microsoft used approach entice worker perform otherwise sleepinducing task software debugging uber go much mediates driver entire work experience app limit element gamify uber collect staggering amount data allow discard game feature work refine worker contractor gamification strategy hemmed employment law kevin werbach business professor written extensively subject said gamification could force good gig economy example creating bond among worker share physical space danger abuse basically saying found cheap way get work without paying pay badge cost anything manipulative way go said driver precisely effect scott weber said drove full time week last year picking passenger tampa area uber lyft yet made le expense like gas maintenance business loss said mr weber looking another job using payday loan still asked badge earns driving uber mr weber practically gushed got currently excellentservice nine greatconversation badge said interview early march tell asked whether uber product manager data scientist akin developer social gaming company like zynga jonathan hall uber head economic policy research accepted analogy rejected implication think something ultimately zynga worry mostly fun game rather trying get play little bit trick said argued exploiting people psychological tic unlikely marginal effect long played zynga game drove uber icing cake said mr hall clearly right effect certain technique like pitched driver tendency set income target focus loss gain hand even feature produce relatively small change driving pattern become quite important company like uber according mr parker former uber manager dallas increasing number driver road percent certain hour day busy part town rein large fare surge important psychological lever uber pull increase supply driver quite powerful effect consider algorithm called forward dispatch lyft similar one dispatch new ride driver current one end forward dispatch shortens waiting time passenger may longer wait driver minute away second driver dropping passenger two minute away perhaps le important forward dispatch cause driver stay road substantially longer busy period key goal company uber lyft explain essentially way driver keep telling u worst thing idle long time said kevin fan director product lyft slow going go sign want make sure constantly busy unquestionably true another way think logic forward dispatch override selfcontrol perhaps prominent example automatic queuing appears fostered rise bingewatching netflix one program nearing end running time netflix automatically cue next episode series wrote scholar matthew pittman kim sheehan study phenomenon requires little effort binge netflix fact take effort stop keep going viewer bingewatching many driver appear enjoy forwarddispatch feature increase earnings keeping busier also work interest increasing number driver road defusing fare surge whether enjoy separate question agency whether whether company uber official say feature initially produced many ride time driver began experience chronic netflix ailment inability stop bathroom break amid uproar uber introduced pause button driver saying never go offline continuous trip problem redesigned said maya choksi senior uber official charge building product help driver middle trip say stop giving request control want stop driving true driver pause service automatic queuing feature need refill tank empty case may yet log back accept next ride feature kick disable would pause every time picked new passenger contrast even netflix allows user permanently turn automatic queuing feature known postplay preemptive hardwiring huge influence behavior said david laibson chairman economics department harvard leading behavioral economist perhaps notably m rosenblat luke stark observed influential paper practice uber app let driver see passenger going accepting ride making hard judge profitable trip sometimes necessary mere setting socalled default human tend governed inertia automatically enrolling retirement saving plan allowing opt result far higher participation letting opt making postplay default effect done right thing socially beneficial mr laibson said think sort choice architecture quite contrary human wellbeing even mr hall uber research director downplayed importance behavioral economics company make least one concession optimal default set want much work said company app required mean default driver road benefit rideshare company driver profit surge pricing scarcity rank rideshare company bear direct cost driver idle want many driver available possible simulation detail driver surge price increase passenger request reduced passenger cancel minute waiting without driver accepting request regular fare cost minute driver expense minute app company take booking fee plus perminute fee aspect platform genuinely increase driver control work life uber frequently point unlike worker uber driver put hour day dropping child school picking afternoon uber even process developing feature allows driver tell app advance need arrive given location given time need pick kid soccer practice pm said nundu janakiram uber official charge product improve driver experience start give trip take general direction get specific place time also possibility online gig economy matures company like uber may adopt set norm limit ability manipulate worker cleverly designed apps kelly peter chief executive beworks management consulting firm specializing behavioral science argued data make easier uber nudge driver working additional minute also make hard escape obligation look example company access variety metric like braking acceleration speed indicate whether someone driving erratically may need rest next step may individualized targeting nudging moment m peter said hey got three passenger row said felt unsafe go home uber already rolled effort vein numerous city moment maturity appear arrived yet however consider prompt uber rolled year inviting driver press large box want app navigate area higher chance finding passenger accompanying graphic resembles one indicates area fare surging except case fare necessarily higher driver believe intent trick driving uber want go rather driving would profitable implying find surge trying move people want said mr weber tampaarea driver get nothing happens time mr weber noted design graphic make prompt much easier accept decline requires pressing small rectangle top left corner uber said feature experiment intended primarily help new driver frequently say know find passenger could changed driver dissatisfied individual feature aside broader question much uber seek influence driver behavioral science may come much business model requires company made secret investment selfdriving car could decade completely replace human driver meantime long uber continues set growth passenger volume critical goal incentive make wringing hour driver higher priority driver bottom line whenever face close call two also incentive obtain hour cheaply possible simply cheaper way hiring contractor nudging drive needed industry insider estimate relying independent contractor rather employee lower direct cost roughly percent moreover contractor model provides strong impetus company like uber grow many company gig economy simply enough worker rich enough data worker behavior navigate busy period using nudge like avoid chronic understaffing switched employee model allows compel worker log company need company achieve certain scale hand enter virtuous cycle risk understaffing drop big enough pool worker cost saving using contractor begin outweigh inefficiency turn free money enter new market acquire new customer make contractor model still efficient throw still saving result hard imagine future massive digital platform like uber appetite ten million worker ferrying people also delivering food retail good hard imagine worker obliging perhaps skill match need traditional employer need supplement wage economy expert say using big data algorithm manage worker simply niche phenomenon may become one common way managing american labor force player entering space assumption vast army underemployed people looking extra hour control every nuance pay said david weil top wageandhour official president barack obama stop consider enormous cost advantage mr weil said say area grow fast
427,Lobsters,visualization,Data Visualization,The Mandelwat Set,http://blog.jfo.click/the-mandelwat-set/,mandelwat set,watch amount time one two video reference issue using cs lot method call context also using random color function another post numerical value bit float screen door effect set wtf set set mandelbrot set cartesian plane real number khan academy video package npm probably look like fuzzy potato small refactor color come speaker http mandelbrotjfoclick greggman twgljs shadertoy market cornered mandelbrot render glsl reference pauljean letourneau someone found julia evans sept update initiative image used lara hogan designing performance,never seen mandelbrot set also favor watch amount time one two video real quick know right thing wanted learn mandelbrot set thought neat thing wonder could make one turn hard really understand math also thing pretty hard least great math even though love also mandlebrot set fractal fractal bonkers thought hey web developertm use javascript javascript best lol going jump right try explain practically feel little lost want something reinforced jump reference bottom good resource video watch draw mandlebrot set something draw land thing canvas look like canvas canvas let put border see canvas style border solid black canvas default dimension canvas element pixel tall pixel wide funny size sure default case almost always going want set width height either cs programatically j land attribute directly canvas element since issue using cs nt intend resize canvas dynamically j code set attribute directly canvas style border solid black width height canvas need slap id grab javascriptville canvas id style border solid black width height canvas html side rest canvas look except incrementing id many wonderful thing canvas first need grab reference thing var canvas documentgetelementbyid instantiate context drawing going stick basic fetched call like var context canvasgetcontext lot method call context affect canvas following example notice access canvas width height attribute know big rectangle draw common pattern important later right drawing rectangle fill whole canvas though also using random color function found another post run example press button labeled run right run contextbeginpath contextrect canvaswidth canvasheight contextfillstyle randcolor contextfill also thing like drawing line randinavian contextlinewidth contextstrokestyle randcolor contextbeginpath contextmoveto contextlineto canvasheight contextstroke contextbeginpath contextmoveto contextlineto canvaswidth contextstroke let look little closer line contextlinewidth contextstrokestyle randcolor contextbeginpath contextmoveto contextlineto contextstroke number passing moveto lineto x value sort indexed upper left corner exceed width height canvas go straight side contextlinewidth contextstrokestyle randcolor contextbeginpath contextmoveto contextlineto contextstroke clearly account size canvas really designed keep mind seems like really supposed interact canvas definitely hinted name draw stroke shape achieve final result interested lower lever api drawn line shape though achieve granular control pixel interact directly pixel canvas using representation called imagedata calling createimagedata height width return imagedata object contains three thing contextcreateimagedata width height expected see thing array byte x seems like x imagedata contain item since represents pixel contains pixel represented byte one red green blue alpha transparency channel ensures value inside integer simulating hard type single byte important javascript nt otherwise sense integer type internally represents numerical value bit float might expect array like p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p p sort pixel object address attribute like pr pg pb pa lower level literally one dimensional array let play though example simply fill channel pixel random value notice look little pastel since average transparency applied pixel rgb noise var imagedata contextcreateimagedata canvaswidth canvasheight var imagedatadatalength imagedatadata mathrandom contextputimagedata imagedata course useful need look pixel value chunk change accordingly simple little loop example simply turn every pixel blue transparency blue clear var imagedata contextcreateimagedata canvaswidth canvasheight var canvaswidth canvasheight imagedatadata imagedatadata imagedatadata imagedatadata contextputimagedata imagedata small exercise thought would one make widget us imagedata technique create randomly colored background one allows user input rgba value canvas map mouse position color canvas change move around idea would nt use imagedata exclusively course easier way simply change background color minor inconvenience address pixel value linearly like really like able address coordinate inside canvas remedy problem little bit math helper function indextocoord take index value computes x pixel offset index imagedata object note canvas must scope valid canvas work address thoroughly later var indextocoord function index index mathfloor index coord x index canvaswidth mathfloor index canvaswidth return coord let say canvas small canvas lol guess want address pixel marked imagedata object size would contain byte value byte associated pixel would index pretty straight forward put indextocoord function get something little palatable x tell lot pixel location almost want able use coordinate coordinate plane still indexed top left also want decouple coordinate pixel simply able scale whatever range want scaling value going r value let say want coordinate plane go ax know example var indextocoord function index index mathfloor index var r coord x index mathfloor index coordx coordx r canvasheight coordy coordy r canvaswidth return coord let also assume much larger canvas x interesting x give u imagedata object byte quite lot way turn index coordinate scaled according trying see given canvas x scale yield something close expect indextocoord indextocoord indextocoord indextocoord begging abstracted going first constructor take one thing string represents canvas id dom assign canvas context private variable also going go ahead allocate imagedata object graph reuse function graph canvasid var canvas documentgetelementbyid canvasid var ctx canvasgetcontext var imagedata ctxcreateimagedata canvaswidth canvasheight next add indextocoord method put r value center value attribute object manipulate outside added aspect ratio scale coordinate correctly case canvas writing real graphing library something would want settable well stepping stone mandelbrot rendering always function graph canvasid var canvas documentgetelementbyid canvasid var ctx canvasgetcontext var imagedata ctxcreateimagedata canvaswidth canvasheight var aspectratio canvasheight canvaswidth thisr thiscenter x var indextocoord function index index coord x index canvaswidth mathfloor index canvaswidth coordx coordx thisr canvaswidth thisr thiscenterx aspectratio aspectratio coordy coordy thisr canvasheight thisr thiscentery return coord bind thisrender function var imagedata contextcreateimagedata canvaswidth canvasheight var imagedatadatalength imagedatadata mathrandom contextputimagedata imagedata also added rgb noise example render function object interact canvas something like run var graph new graph canvasid graphrender pixel viewed single discrete coordinate plane centered anywhere two dimensional plane scaled depending want see packing away abstraction explaining set want add one thing render function randomly set pixel value course want control change render method accept predicate function instead thisrender function predicate var canvaswidth canvasheight set predicate indextocoord imagedatadata imagedatadata imagedatadata imagedatadata set contextputimagedata imagedata every pixel given graph predicate called coordinate return whether filled black first three value per pixel rgb value last one alpha channel set transparency pixel higher opaque setting maximum value make pixel black going interact graph object canvas next section like var graph new graph canvasid graphr graphrender function coord ok let play graphrender function coord return coordx coordy coordx coordy coordx coordy coordx coordy coordx coordy coordx coordy coordx coordy see predicate function basically say current pixel line described one equation fill nt notice line totally smooth instead made dot dash seeing kind sort version screen door effect individual pixel say equation x pixel coordinate must match exactly output equation order qualify filled mean even multiple size canvas much likely filled building fully functional graphing library would deal issue many wo nt adequate let talk set set wtf set going get set theory nt know really anything maybe worth mention wonder would really good succinct wrong explanation set theory let say set pretty much think describe set set completely enumerated number nt really anything common typed number number x dream x either set x set yes hey actually javascript syntax exactly var myset new set mysethas mysethas mysethas mysethas mysethas mysethas work graphr var myset new set x graphrender function coord return mysethas coord hmm javascript equality rule object compared value whit falsy thing thing thing thing object instead equal actually object meaning two side double triple equal refer memory var whatever whatevar var get idea could write deep checking set class coordinate build coordinate real object function nt really want instead going talk set generally set defined set whatever write whatevers like example work great something like var myset obviously ca nt write check arbitrary number member set simple function var isinthesetofallevenintegers function x return x hey cool like programaticalized way test set membership particular set number graphr graphrender function coord return coordx getting somewhere one set point whose x value higher whose value higher graphr graphrender function coord return coordx coordy cool way graphing set set pretty boring though know boring mandelbrot set ok mandelbrot set set complex number remain bounded iterated equation fc z c ok real talk like thing definition totally understand started project going explain one one let start equation fc z c part pretty easy function feed number get number back function thinger z return mathpow z c course borked thinger referenceerror c defined thinger object anonymous modulecompile objectmoduleextensions j moduleload trymoduleload functionmoduleload modulerunmain run startup c must defined define function thinger z c return mathpow z c cool cool plug whatever great thinger thinger thinger ok iterated mean mean take output function feed back function initial z input always function thinger z c return thinger mathpow z c c obviously also borked rangeerror maximum call stack size exceeded objectpow native recursive function base case bounded part come given input equation exhibit one two behavior iteration either stay bounded explode infinity make little sense see output add counter increment call give u way get recursive loop function thinger z c return var next mathpow z c consolelog next return thinger next c see interesting stuff thinger infinity exponent joke decidedly remain bounded one thinger hmm one thus mandelbrot set wait though talking complex number number coordinate integer make dimensional graph one number two question answer mandelbrot set plotted cartesian plane point represented pair number x plotted complex plane point represented single complex number complex number expression form x yi x real number unit imaginary number though alone real number coefficient combined x complex plane plot x real part complex number x axis imaginary part complex number axis took understand pretty simple really khan academy video explains detail cartesian coordinate would represented complex plane complex number remember wanted feed complex number function ca nt javascript nt complex number type course package npm probably going use reason seriously one application hand learn new thing complex number made real part imaginary part never two shall meet wanted add two complex number together alright j could keep track two part separately realone imaginaryone realtwo imaginarytwo consolelog realone realtwo imaginaryone imaginarytwo returning tuple two value could use object wanted first real imaginary second real imaginary consolelog real firstreal secondreal imaginary firstimaginary secondimaginary real imaginary see see dying made prototype implement basic math stuff oh man really want going also need able multiply complex number order square look like look like algebra remember foil first outer inner last remember actually square root let go back testing function need replace z c complex number made zr z real zi z imaginary cr c real ci c imaginary keep index var around well going change iteration little clarity function thinger zr zi cr ci iteration iteration return var nextr zr zr zi zi cr var nexti zr zi ci consolelog nextr nexti return thinger nextr nexti cr ci iteration nextr nexti expression get factor real imaginary operation foil procedure trick right sort winging iteration count really know point set sum square real imaginary part complex number ever exceed complex number mandelbrot set little useful function thinger zr zi cr ci iteration iteration return true var nextr zr zr zi zi cr var nexti zr zi ci consolelog nextr nexti mathpow nextr mathpow nexti return false return thinger nextr nexti cr ci iteration getting condition stated met number set reached maximum iteration count far know number set going important later cute recursive unnecessary formula look cleaner loop le computationally expensive let state internal leave function signature matter fact dropping recursion mean nt pas inital zr zi either hell nt change name thinger something little descriptive function ismandlebrot cr ci var zr cr var zi ci var zr zi return false newzr zr zr zi zi cr newzi zr zi ci zr newzr zi newzi return true ok remember predicate function took coord x value value nt look suspiciously similar got function ismandlebrot coord var cr coordx var ci coordy var zr cr var zi ci var zr zi return false newzr zr zr zi zi cr newzi zr zi ci zr newzr zi newzi return true var graph new graph graphrender ismandlebrot old friend mandelbrot set look like fuzzy potato yeah might look boring sitting totally remember built graph object made r zoom factor center accessible totally change looking graph rerender fly x x x x small refactor point going drop general graph abstraction hardcode object predicate mandelbrot test pretty much look like would expect function mandelbrot canvasid var canvas documentgetelementbyid canvasid var ctx canvasgetcontext var imagedata ctxcreateimagedata canvaswidth canvasheight var aspectratio canvasheight canvaswidth thisiterations thisr thiscenter x var indextocoord function index index coord x index canvaswidth mathfloor index canvaswidth coordx coordx thisr canvaswidth thisr thiscenterx aspectratio aspectratio coordy coordy thisr canvasheight thisr thiscentery return coord bind var ismandlebrot function coord var cr coordx var ci coordy var zr coordx var zi coordy var thisiterations zr zi return false newzr zr zr zi zi cr newzi zr zi ci zr newzr zi newzi return true bind thisrender function predicate var canvaswidth canvasheight set predicate indextocoord imagedatadata imagedatadata imagedatadata imagedatadata set ctxputimagedata imagedata bind something like var mb new mandelbrot mbrender one important change mandelbrot object see exposed another attribute thisiterations used maximum value loop mandelbrot function iteration important well iteration use fine grained mandlebrot displayed look var mb new mandelbrotone var iteration var x setinterval function mbiterations iteration x iteration x else iteration x mbrender iteration cycle back forth see edge set get definition could go infinitely though see high fidelity get zoom level since pixel definite size small may seem color come speaker let talk trippy as color see zoom youtube right got pretty simple true false test tell u pixel set far know every extra iteration increase fidelity second category see doodad thing throwing away information throwing away many iteration took u figure point set really interesting information currently render function us boolean value returned ismandlebrot decide whether set opacity byte either thisrender function var canvaswidth canvasheight set ismandlebrot indextocoord imagedatadata imagedatadata imagedatadata imagedatadata set ctxputimagedata imagedata bind change ismandlebrot return tuple instead two thing original boolean value iteration required divine var ismandlebrot function coord var cr coordx var ci coordy var zr coordx var zi coordy var thisiterations zr zi return false newzr zr zr zi zi cr newzi zr zi ci zr newzr zi newzi return true bind back render function use information color pixel according iteration score thisrender function var canvaswidth canvasheight thing ismandlebrot indextocoord set thing thing thisiterations imagedatadata set imagedatadata set imagedatadata set imagedatadata ctxputimagedata imagedata bind set value first normalizing scaling extracting rgb value kind bit twiddling sorry explaining morebetter turning iteration count color value drastically cooler looking var mb new mandelbrot mbrender remember little thingers look look like color x x x x alright totally work beautiful slow one hand course lot computation hand better way way better made little doodad computes mandelbrot gpu using webgl life http mandelbrotjfoclick illustration nt example canvas made tool really enjoyed playing even resize canvas download high resolution background large want though course bigger go slower run give try see find going explain code webgl widget yet reason first really happy final product turned code wreck organizationally anyway boilerplate get webgl connected running part nt boilerplate nt substantially different code shown vanilla javascript course post hacked together widget using author greggman also maintains library called twgljs making webgl api le verbose definitely going use next time íñigo quílez created shadertoy also practically market cornered mandelbrot render link served inspiration whole thing wait compute realtime model porting j code webgl shader thank incredible coloring function used base mine still entirely sure work caveat nt really designed mobile ux wise definitely importantly mobile platform nt seem caliber graphic processing lap desktop nt really huge surprise might able get render something promise also unfortunately current glsl natively support bit float use gpu run precision relatively quickly widget barely see pixel become blockish highest zoom nt mistaken end set set go forever technique work around achieve higher precision mandelbrot bike shed nt need another coat paint shipping likely try get around sometime put bit float native platform reference thing found really helpful working project unfortunately last one probably best nt able find online anywhere one saw loaned fellow fractal enthusiast etsian pauljean letourneau thanks pauljean update someone found also thanks julia evans talking math early helping complex number algebra kept messing produced weird blob canvas hope interesting going shut computer rest day thinking picking one day week looking screen least staring computer screen whole day one secretely favorite sept update part self hosting image initiative updated example page much hire web optimized image look good despite weight lighter image used special thanks lara hogan whose book designing performance able figure make quality size balance work optimally
428,Lobsters,visualization,Data Visualization,<wbr>luanfujun/deep-photo-styletran<wbr>sfer</wbr></wbr>,https://github.com/luanfujun/deep-photo-styletransfer,wbr luanfujundeepphotostyletran wbr sfer wbr wbr,deepphotostyletransfer deep photo style transfer disclaimer software published academic noncommercial use setup usage quick start basic usage note please make sure content image resolution consistent matting laplacian computation matlab style transfer torch otherwise result wo nt correct cudnntorch image segmentation dilatednet automatic manual example acknowledgement code code citation contact cornelledu,deepphotostyletransfer code data paper deep photo style transfer disclaimer software published academic noncommercial use setup code based torch tested ubuntu lts dependency cuda backend download sh modelsdownloadmodelssh compile cudautilscu adjust prefix nvccprefix makefile machine make clean make usage quick start generate result example using provided script simply run run genlaplaciangenlaplacianm matlab octave python genallpy python final output examplesfinalresults basic usage given input style image semantic segmentation mask put example respectively following filename form examplesinputin id png examplesstyletar id png examplessegmentationin id png examplessegmentationtar id png compute matting laplacian matrix using genlaplaciangenlaplacianm matlab output matrix following filename form id mat note please make sure content image resolution consistent matting laplacian computation matlab style transfer torch otherwise result wo nt correct run following script generate segmented intermediate result th neuralstyleseglua contentimage input styleimage style contentseg inputmask styleseg stylemask index id serial intermediatefolder run following script generate final result th deepmattingseglua contentimage input styleimage style contentseg inputmask styleseg stylemask index id initimage intermediatefolderout id serial finalfolder fradius fedge pas backend cudnn cudnnautotune lua script step potentially improve speed memory usage libcudnnso must ldlibrarypath requires cudnntorch image segmentation note main paper generate comparison result using automatic scene segmentation algorithm modified dilatednet manual segmentation enables diverse task hence provide mask examplessegmentation mask color used could add color extractmask function two lua file color variable rgb value hex value blue green black white ffffff red yellow grey lightblue purple automatic manual tool creating segmentation mask photo image automatic manual example result algorithm left right input style output acknowledgement torch implementation based justin johnson code use anat levin matlab code compute matting laplacian matrix citation find work useful research please cite article title deep photo style transfer author luan fujun paris sylvain shechtman eli bala kavita journal arxiv preprint year contact feel free contact question fujun luan cornelledu
429,Lobsters,visualization,Data Visualization,NCSU Data Visualization Workshops,https://ncsu-libraries.github.io/data-viz-workshops/,ncsu data visualization workshop,data visualization workshop data visualization workshop series ppt pdf pdf doc dataset ppt instruction dataset youtube screencast pdf ppt instruction dataset video ppt pdf instruction dataset youtube screencast video ppt pdf instruction material resource part ii slide exercise solution dataset rstudio cloud workspace tidyverse set package slide exercise solution datasets rstudio cloud workspace instruction slide exercise solution rstudio cloud workspace instruction slide ppt pdf instruction datasets slide material ppt pdf activity material part teaching visualization literacy slide instruction part ii teaching tableau slide instruction dataset page contributor alblaine batlopez jengarrett contact mike nutt,data visualization workshop material popular data visualization workshop series nc state university library introductory workshop data visualization participant gain understanding process making good visualization practice two tool tableau raw slide ppt pdf instruction pdf doc dataset workshop participant opportunity strengthen understanding process making good visualization review core design concept learn various chart type best case us participant also practice visualization makeover slide ppt instruction dataset youtube screencast tableau free data visualization software introductory workshop tableau participant learn upload dataset tableau learn visualization type available tableau create multiple visualization dashboard including bar chart map line chart tree map also learn publish visualization slide pdf ppt instruction dataset video advanced tableau workshop participant learn advanced visualization technique filtering creating using set using multiple measure selected highlighting quick table calculation dual axis chart combination chart story point slide ppt pdf instruction dataset youtube screencast video making chart graph survey data great way communicate finding audience quick analysis interpretation workshop provide handson activity dataset set participant visualize survey data tableau data structuring cleaning visualizing step covered slide ppt pdf instruction material workshop aim introducing web javascriptnovices data visualization data driven document javascript library popular data visualization web environment part worksop series introduces attendee basic web concept including html cs javascript part ii provides introduction resource part ii introduction r statistical computing software participant little prior experience coding slide exercise solution dataset rstudio cloud workspace workshop provide participant overview handson practice using data cleaning function r specifically tidyverse set package topic include loading data subsetting filtering creating new column merging data stripping unwanted character reshaping data bygroup processing handson workshop suited participant prior familiarity r slide exercise solution datasets rstudio cloud workspace workshop introduces provides handson experience r markdown text formatting tool publishing code written r python language document multiple format r markdown allows researcher publish code along research enabling reproducibility instruction workshop provide introductory overview handson practice making data visualization r statistical computing language topic covered include overview visualization package including ggvis plotly leaflet others consideration creating publicationquality graphic using r handson activity consist creating visualization using r rstudio development environment slide exercise solution rstudio cloud workspace workshop provide introductory overview handson practice machine learning field computer science artificial intelligence become vital many industry usefulness data analysis handson activity consist creating model common machine learning algorithm using r rstudio development environment instruction slide open refine free open source tool make easy clean transform large data set workshop introduce clean data remove problematic character whitespaces symbol error missing element inconsistency slide ppt pdf instruction datasets workshop cover basic creating digital poster academic presentation including design tip handson activity participant get create sample poster using provided template slide material workshop participant explore difference infographics data visualization learn best practice infographic design practice building infographic piktochart slide ppt pdf activity material twopart workshop designed help faculty instructor improve student success increasing data visualization literacy student goal workshop provide training resource instructor able teach student create welldesigned visualization order communicate research finding clearly effectively part workshop cover bestpractices visualization effective visualization design pedagogical consideration evaluation method helping student become better communicator using data visualization part ii cover use tableau classroom part teaching visualization literacy slide instruction part ii teaching tableau slide instruction dataset page contributor alison blaine alblaine natalia lopez batlopez jennifer garrett jengarrett contact contact mike nutt
430,Lobsters,visualization,Data Visualization,The code behind the story: Dissecting Trump's Most Rabid Online Following,https://github.com/fivethirtyeight/data/tree/master/subreddit-algebra,code behind story dissecting trump rabid online following,file permalink subreddit algebra dissecting trump rabid online following google bigquery found reload reload,file permalink failed load latest commit information type name latest commit message commit time subreddit algebra directory contains code data behind story dissecting trump rabid online following raw data online cache reddit comment going back google bigquery information data found detail three file code folder file description processdatasql sql code filtering processing formatting reddit comment data google bigquery note click raw data link sql query automatically loaded subredditvectoranalysisr conduct latent semantic analysis subreddits creates vector representation one based commenter cooccurence also implement subreddit algebra ability add subtract different subreddits reveal relate one another computeuseroverlapsql separate sql query used computing user overlap rthedonald subreddits perform action time signed another tab window reload refresh session signed another tab window reload refresh session
431,Lobsters,visualization,Data Visualization,Dissecting Trump’s Most Rabid Online Following,https://fivethirtyeight.com/features/dissecting-trumps-most-rabid-online-following/,dissecting trump rabid online following,aclu government ethic accountability former bush administration official nothing unbridled enthusiasm rthedonald fifthmostpopular website god emperor daddy mobilized comb played large role great meme war played clinton campaign gaffe basket deplorables convoluted history coopted white nationalist sort unofficial mascot shitposted rushed deploy change reddit algorithm million according former staffer ask anything serve conduit creating meme posting stolen celebrity nude birthing hacker collective anonymous accused offering safe harbor mobilized emboldened group home vile thread rnba rminnesota rtimberwolves rsports rsneakers prominent nonsport component rconservative rasktrumpsupporters rhillaryforprison runcensorednews white nationalist moderator rnews raskreddit rpolitics rfatpeoplehate nowbanned subreddit rthedonald rpolitics rfatpeoplehate rtheredpill rmrtrump rcoontown miss piggy weight rtheredpill discussion sexual strategy culture increasingly lacking positive identity men heart modern misogyny rmrtrump altright uncucked subreddit populist whitenationalist movement increasingly allpurpose insult rcoontown home unrepentant racism many user supported trump pol board reurope rgames reuropean host antisemitism racism rkotakuinaction misogynistic gamergate movement rconservative rpolitics rmary rrcia rtelaigne dedicated glorification biblical mary related subreddits rsandersforpresident rhillaryclinton rfeminism rthebluepill rbasicincome universal basic income work latent semantic analysis determine related one book looking word show around looking angle gradeschool arithmetic closest result vector queen also exposed routdoors rnutrition positive pointwise mutual information value sure meaningful rpersonalfinance rfrugal rwallstreetbets data code behind analysis google bigquery find code,rthe donald rpolitics runcensorednews rconspiracy rfatpeoplehate rhillaryforprison editor note story contains two slur appear name subreddits link reddit may also contain offensive material president donald trump administration turbulent first month drawn fire left right including aclu government ethic accountability group former bush administration official one group shown nothing unbridled enthusiasm president action thus far member rthedonald one thousand comment board reddit fifthmostpopular website u subreddit poster refer president trump god emperor daddy arguably epicenter trump fervor internet membership grown steadily since presidential election though member especially active campaign mobilized comb hacked democratic national committee email published wikileaks played large role spreading information theory email broadly waged great meme war effort get trump elected bombarding internet socialmediaready content promoting trump bashing democratic candidate hillary clinton meme played clinton campaign gaffe use phrase basket deplorables others involved emerging protrump iconography centered around image pepe frog cartoon character convoluted history gained especial prominence coopted white nationalist sort unofficial mascot member rthedonald like say shitposted donald trump office regardless whether flood meme swung election overwhelm front page reddit extent site ceo rushed deploy change reddit algorithm limit influence single subreddit say animating force behind rthedonald one universal among trump supporter nearly million american voted trump member rthedonald represent le percent subreddit vocal dedicated membership find influential strain trump boosterism according former staffer trump campaign team monitored subreddit message resonated trump participated ask anything rthedonald july since election subreddit continued serve conduit fringe conspiracy theory often started site like freewheeling imagebased message board best known creating meme posting stolen celebrity nude birthing hacker collective anonymous enter larger online discourse striking example pizzagate false idea pizza parlor washington dc center childtrafficking ring involving clinton campaign manager john podesta prompted man north carolina selfinvestigate shop fired rifle several time threatened employee rthedonald repeatedly accused offering safe harbor racist white nationalist congregate express view much way trump campaign said mobilized emboldened group indeed rthedonald home pretty vile comment thread subreddit moderator declined talk u community accused fivethirtyeight fake news regardless think way get nature rthedonald rigorous quick scan comment certainly objective simply soliciting opinion group fan detractor adapted technique used machine learning research called latent semantic analysis characterize active subreddits based billion comment posted jan dec way allows u quantify similar essence one subreddit another heart analysis based commenter overlap two subreddits deemed similar many commenters posted often also make possible call subreddit algebra adding one subreddit another seeing result resembles third subreddit subtracting component one subreddit character seeing left detailed explanation analysis work bottom article simple example using technique add primary subreddit talking nba rnba main subreddit state minnesota rminnesota closest result rtimberwolves subreddit dedicated minnesota pro basketball team similarly take rnba subtract rsports result rsneakers subreddit dedicated sneaker culture prominent nonsport component nba fandom may seem pretty abstract algebra applied rthedonald happens break rthedonald subgroup using subreddit subtraction happens add unrelated subreddits rthedonald get question let take look subreddits similar rthedonald according analysis rconservative rasktrumpsupporters top list followed rhillaryforprison subreddit refers hillary clinton pronoun note bold sidebar putting behind bar fun runcensorednews subreddit started white nationalist moderator found existing extremely popular rnews subreddit liberal mean user comment rthedonald comment rconservative subreddit eight percent rthedonald user also commented rconservative onefifth size rthedonald conversely percent commenters rconservative commented rthedonald raw number shared commenters informative example almost every subreddit lot overlap big really popular subreddits raskreddit million member analysis bit subtle weight overlap commenters according essence surprising overlap much two subreddits user base overlap would expect based chance alone since essentially every subreddit overlap heavily super popular group like raskreddit result longer surprising get lower weight rise top unlikely result characteristic specific subreddit rather common reddit whole looking weighted commenter overlap ranking across thousand subreddits built profile subreddit help capture defines average commenter specific subreddit nothing revealing list subreddits explicitly protrump anticlinton politically conservative let use subreddit algebra dissect rthedonald constituent part happens filter commenters general interest politics figure subtract rpolitics rthedonald result closely match rfatpeoplehate nowbanned subreddit dedicated ridiculing bullying overweight people rthedonald rpolitics sharing insult aimed overweight people banned misogynistic subreddit nominally devoted sexual strategy subreddit formed moderator schism rthedonald enthusiastic racism black people banned post subreddit algebra quite simple b c like b closer c anything else also pretty similar far e subtract rpolitics rthedonald actually get list every subreddit analysis ranked order similarity result subtraction showing top five top five exactly pretty though support theory least subset trump supporter motivated racism presence rfatpeoplehate top list echo president trump behavior including referring miss universe winner alicia machado miss piggy insulting rosie donnell weight secondclosest result rtheredpill describes sidebar place discussion sexual strategy culture increasingly lacking positive identity men named scene matrix group belief woman run world men oppressed class belief spring ideology described heart modern misogyny rmrtrump selfdescribes altright uncucked subreddit referring populist whitenationalist movement increasingly allpurpose insult meant denigrate others masculinity appallingly named rcoontown nowbanned previously central home unrepentant racism reddit finally coming subreddit dedicated posting screenshots thread found many user supported trump president pol board particular strongly racist bent dissected rthedonald bunch way using subreddit algebra interesting result even adding innocuous subreddits reurope rgames rthedonald result something ugly hatebased reuropean frequently host antisemitism racism rkotakuinaction reddit main home misogynistic gamergate movement raise question hateful community linked specifically trump supporter reddit common politically active reddit user general get question let try subtracting rpolitics rconservative rconservative rpolitics devotee biblical mary considering converting catholicism rcia mean rite christian initiation adult discussing rifle space catholic redditors pray redditors name latin web fire find top result subreddit dedicated glorification biblical mary related subreddits similarly focused christianity except dedicated famous rifle presidential candidate trump reddit following compare hillary clinton democratic primary candidate bernie sander whose rsandersforpresident subreddit still member analysis let u take subreddit say trumpish v clintonish sandersish selection subreddits plotted threeway spectrum rthedonald rsandersforpresident rhillaryclinton subreddits dedicated politics news smack middle rfeminism sandersclinton side spectrum though slightly closer clinton rthebluepill feminist parody rtheredpill rbasicincome subreddit advocating universal basic income also liberal side though slightly closer sander hatebased subreddits decidedly rthedonald corner work latent semantic analysis lsa technique natural language processing adapted analysis often used determine related one book article speech another basic idea document using similar word similar frequency probably closely related word lsa also allows ass similar word looking word show around example two word might rarely show together say dog cat often word nearby pet vet deemed closely related way work every word say book assigned value based cooccurrence every word book result set vector one word compared numerically technical level way determine similar two word like dog cat looking angle two vector visual guide understanding concept vector interesting enormous multidimensional thing contain huge amount information still use gradeschool arithmetic machinelearning researcher google tried adding word vector together subtracting one another discovered semantically meaningful relationship example take vector king subtract vector man add vector woman closest result vector queen slightly subtle relationship also exposed eg rome plus germany equal berlin turned powerful way analyzing language also using cooccurrence try uncover nature different subreddits relationship one another idea cooccurrence clear talking word mean subreddits found relationship looking many commenters various subreddits common measure cooccurrence simplified example work let say want see subreddits world health exercise related one another plot every subreddit term two key subreddits rnutrition routdoors let start rrunning subreddit let say one commenter also commented rnutrition three also commented routdoors give vector let add two subreddits rweightlifting rfitness rweightlifting three commenters common rnutrition one routdoors rfitness four three respectively addition combining vector add rweightlifting rrunning get third vector look similar rfitness angle two give u measure similar instead king man woman queen get running weightlifting fitness subreddits span huge range topic get bit complicated instead characterizing term two subreddits like routdoors rnutrition ranked subreddits number unique commenters pulled subreddits whose unique commenter rank tie used subset subreddits characterize active subreddits combined resulting subreddit vector big matrix row column converted raw cooccurrences positive pointwise mutual information value similarity subreddits based cosine similarity vector measure angle perform subreddit algebra subreddit vector added subtracted using standard linear algebra cosine similarity calculated rank subreddits similarity combination sure meaningful test analysis looked case subreddit algebra result obvious like example adding rnba rminnesota yield rtimberwolves best fit combination sport location similarly result locationspecific discussion sport also looked test case involving hardertosee relationship take subreddit managing money investing rpersonalfinance subtract subreddit frugality rfrugal resulting similar subreddit rwallstreetbets subreddit taking extreme risk stock market data code behind analysis reddit comment data collection hosted google bigquery billion comment january december analysis done r find code development justin mccraw
432,Lobsters,visualization,Data Visualization,LOOPY: interactive simulations of feedback systems,http://ncase.me/loopy/,loopy interactive simulation feedback system,,world filled evermorecomplex technological sociological ecological political economic system tool make interactive simulation may much help certainly try play simulation ancient timehonored way learning messing around seeing happens play simulation ask question get intuition system work programming drawing raw code inaccessible also draganddrop mainstream loopy model system simply drawing circle arrow like wee baby remix others simulation want build upon friend model challenge enemy model loopy let conversation simulation go thinking system talking system
433,Lobsters,visualization,Data Visualization,Experiments in Handwriting Generation with a Neural Network,http://distill.pub/2016/handwriting,experiment handwriting generation neural network,four experiment handwriting neural network let start generating new stroke based handwriting input looking output model good primer examining internals model tsne conclusion,four experiment handwriting neural network let start generating new stroke based handwriting input neural network extremely successful approach machine learning tricky understand behave way sparked lot interest effort around trying understand visualize think far scratching surface possible article try push forward direction taking generative model visualizing number way model quite simple run well browser generated output mostly produce gibberish letter word albeit gibberish look like real handwriting still useful purpose exploring visualization technique end ultimate answer visualization interesting idea share ultimately hope make easier divine meaning internals model looking output model first experiment obvious want see well someone learned task usually ask demonstrate let ask model write something u see well mark gibberish many surprisingly convincing real realish word even start appear one surprising thing notice general style handwriting le consistent within sample type architecture used model lstm mechanism remembering previous stroke therefore able remember thing like loopy jerky handwriting letter preceeded current one lstms remember chris olah good primer even memory technique generating sample neural network probabilistic meaning sample one much much larger possibility space viewing one time feel unsatisfying infer much one two sample nearly infinite possibility something look wrong know something fundamentally wrong model dumb luck iteration model could produced many path instead picking one throwing rest away let draw say green stroke place model would veered rightward chosen stroke orange would veered leftward technique casting light wider possibility space see area general consensus next area anything happen next feeling others seem show possible fork road drawing g step later clear model converged cursive g addition visualizing sample generated model technique also applied humangenerated sample see model would done point taken person obvious experiment model learned quite lot human handwriting sort raise question extract knowledge meaningful way rather blindly using mimic handwriting examining internals model model cell act sort memory use part input deciding generate see cell model progress may able gain intuitive understanding model begin showing activation cell time column heatmap represents one line segment handwriting row represents one cell model colored activation part stroke inspecting diagram may able see pattern way certain cell activate certain type stroke change cell used color stroke clicking diagram may able pick one two cell interesting pattern reason believe cell work tandem individual cell activity may interesting group cell way order cell make structure clearer found applying onedimensional tsne activation cell time organize bringing cell similar behavior close together make diagram easier read use small trick achieve best version find clear behavior example cell top seem sensitive slightly different direction curvature pen path see particular cell hand bottom cell seem focused pen lift example cell seems predict whether pen lifted middle see variety cell including tracking absolute position cell neighbor seem concerned horizontal position cell around seem concerned vertical position cell appears track position within word another way explore activation give sample interactively see activation write see activation cell real time clear conclusion black box reputation machine learning model well deserved believe part reputation born programming context locked experience easily inspectable model available programming context interactive visualization environment javascript proved productive prototyping exploring new idea post able move programming context user interface work done believe see richer mode humanai interaction flourish could marked impact debugging building model sure also model used machine learning research typically seek mimic substitute human increasingly able seems le explored using machine learning augment human sort complicated humanmachine interaction best explored full capability model available user interface context
434,Lobsters,visualization,Data Visualization,Visualizing Garbage Collection Algorithms,https://spin.atomicobject.com/2014/09/03/visualizing-garbage-collection-algorithms/,visualizing garbage collection algorithm,githubcomkenfoxgcviz cleanup end aka gc reference counting collector marksweep collector markcompact collector copying collector,developer take automatic garbage collection granted another amazing feature provided language runtimes make job easier try peek inside modern garbage collector difficult see actually work thousand implementation detail confuse unless already good understanding trying go fantastically wrong built toy five different garbage collection algorithm small animation created runtime behavior find larger animation code create githubcomkenfoxgcviz surprised much simple animation reveals important algorithm cleanup end aka gc simplest possible way cleaning garbage wait task done dispose everything surprisingly useful technique especially way breaking task piece apache web server example creates small pool memory per request throw entire pool away request completes small animation right represents running program entire image represents program memory memory start colored black mean used area flash bright green yellow memory read writes color decay time see memory used also see current activity watch carefully see pattern emerge program begin ignore memory area become garbage used reachable program everything else garbage live program easily fit memory without needing worry cleaning garbage program running going stick simple program rest example reference counting collector another simple solution keep count many time using resource object memory case dispose count drop zero common technique developer use add garbage collection existing system garbage collector easily integrates resource manager existing code base apple learned lesson releasing marksweep collector objectivec caused many problem retracted feature replaced automated reference counting collector work much better existing code animation show program time try dispose garbage keeping reference count object memory red flash indicate reference counting activity useful property reference counting garbage detected soon possible sometimes see flash red immediately followed area turning black unfortunately reference counting lot problem worst handle cyclic structure common anything parent reverse reference creates cycle leak memory reference counting also high overhead see animation red flash constantly happening even memory use increasing arithmetic fast modern cpu memory slow counter loaded saved memory often counter update also make difficult readonly threadsafe data reference counting amortized algorithm overhead spread runtime program accidentally amortized algorithm guarantee response time example say program working large tree structure last piece program us tree trigger disposal entire tree murphy guarantee happens user least desire delay none algorithm amortized either though accidentally amortized may feature depending data algorithm concurrent partiallyconcurrent variation beyond capability toy program demonstrate marksweep collector marksweep eliminates problem reference count easily handle cyclic structure lower overhead since need maintain count give able detect garbage immediately see animation period activity without red flash suddenly bunch red flash indicate marking live object marking finished sweep memory disposes garbage see animation several area turn black instead spread time reference counting approach marksweep requires implementation consistency reference counting difficult retrofit existing system mark phase requires able traverse live data even data encapsulated within object object provide traversal probably risky attempt retrofit marksweep code weakness marksweep fact sweep phase must sweep memory find garbage system generate much garbage issue modern functional programming style generates enormous amount garbage markcompact collector one thing may noticed previous animation object never move object allocated memory stay place even memory turn fragmented sea island surrounded black next two algorithm change completely different approach markcompact disposes memory marking free moving object free space object always stay memory order object allocated another object always lower memory gap caused disposed object closed object moving crazy idea moving object mean new object always created end used memory called bump allocator cheap stack allocation without limitation stack size system using bump allocator even use call stack data storage allocate call frame heap treat like object another benefit sometimes theory practice object compacted like program better memory access pattern friendly modern hardware memory cache far certain see benefit though memory allocator used reference counting marksweep complex also well debugged efficient markcompact complex algorithm requiring several pass allocated object animation see red flash live object marking followed lot read writes destination computed object moved finally reference fixed point object moved main benefit complexity operating extremely low memory overhead oracle hotspot jvm us several different garbage collection algorithm tenured object space us markcompact copying collector last algorithm animated foundation highperformance garbage collection system moving collector like markcompact incredibly simple us two memory space simply copy live object back forth practice two space space used different generation object new object created one space get copied another space survive finally copied tenured space longlived hear garbage collector described generational ephemeral usually multispace copy collector simplicity flexibility main advantage algorithm spends time live object separate mark phase must later swept compacted object immediately copied live object traversal object reference patched following brokenheart reference object used animation see several collection almost data copied one space terrible situation algorithm show one reason people talk tuning garbage collector size memory tune allocation object dead collection begin get fantastic combination safe functional programming style high performance
435,Lobsters,visualization,Data Visualization,Analyzing the 2016 World Chess Championship,https://medium.com/pachyderm-data/analyzing-the-2016-world-chess-championship-b823d0d2fd11,analyzing world chess championship,pachyderm pachyderm statistical analysis chess blunder world chess championship magnus carlsen sergey karjakin pachyderm pachyderm pachyderm pachyderm pachyderm website pipeline doc pachyderm analysis stockfish chess engine centipawns pachyderm pachyderm pachyderm stage annotating game pgn format chessgamescom go program stockfish chess engine stage analyzing game python program python panda matplotlib stage aggregating result another python program result world chess championship pachyderm data repository per movegame insight pachyderm sergey karjakin game one beautiful stunning move history world chess championship championship insight,secret pachyderm team love chess fact one first demonstration pachyderm statistical analysis chess blunder world chess championship decided updated analysis see could learn match magnus carlsen sergey karjakinin following analysis implemented pachyderm data pipeline attempted learn game championship crucial moment turned tide one player anddid player noticeably fatigue throughout championship evidenced blunder chose run analysis pachyderm necessitated use variety technology pachyderm language agnostic allowed u quickly easily commit new game data triggered automatic update analysis read pachyderm pipeline pachyderm website visit pipeline doc learn run analysis pachydermthe analysis care technical detail analysis want see pretty picture skip section entitled result gain insight crucial game moment fatigue going game championship use stockfish chess engine annotate game annotation include played move score best move score ie score best move determined chess engine unit centipawns going visualize analyze annotation extract insightsall pachyderm pipeline includes following stage utilizes pictured technology see variety language framework working together pachyderm pipeline analyze chess gamesthere go program python program obscure chess engine etc pachyderm allows u put thing together accomplish common goalstage annotating gameto programmatically annotate chess game create pipeline stage take game file pgn format chessgamescom input output annotation file game stage executes go program par game file utilizes stockfish chess engine generate annotation game annotation found include variety interesting data move game however analysis particularly interested played move score score measured centipawns move actually played respective player andthe best move score score also measured centipawns move determined best chess engineby examining difference two number determine goodness badness move whether move played player determined best number centipawns worse best movestage analyzing gamein analysis stage execute python program par json game annotation game calculates difference played move score best move score move game score difference output csv file game player analyze data repo like examine herein addition saving raw score difference use python panda matplotlib generate plot game plot include visualization player score difference played move score minus best move score move game visualization chess engine indication winning game move plot game also saved analyze data repo png filesstage aggregating resultsfinally aggregation stage execute another python program read csv file game count number pawn blunder player game count visualized bar chart show number blunder player throughout championshipthe idea bar chart player fatiguing throughout championship might see trend upward blunder towards later game event interesting see worst move played throughout championshipthe resultsas result world chess championship rolling committing new game data pachyderm data repository triggered analysis update automatically new data committed ton fun watch result take form hope also enjoy insight per movegame insightsas mentioned pachyderm pipeline generates visualization game visualization show player score difference played move score minus best move score move game chess engine indication winning game movefor example game championship visualization look like notice following thing chess engine suggested magnus carlsen might slight advantage time game possibly negligible advantage game eventually ended drawthe score difference played move score minus best move score player hovered around zero throughout game mean least according chess engine player playing near best move throughout game note deviation zero expected caused noise chess engine score calculationsok maybe looking draw super exciting let look crucial game championship let take look game ended victory challenger sergey karjakin visualizing game way see following carlsen made small mistake white move le pawn mistake started tipping balance favor karjakinshortly carlsen make pawn blunder white move surely good changesthen something interesting happens black move karjakin make series smaller mistake momentary give carlsen better chance regaining advantagein end however carlsen capitalize eventually dip defeatdespite performance game carlsen end winning game tie championship eventually rapid tie break take championship carlsen win game illustrated visualization want explore game sort visualization find rest plot including game carlsen made slate called one beautiful stunning move history world chess championship championship insightsour second question championshipwide question learn detect anything related fatigue player throughout championship example one might expect player get tired make blunder near end championship true mentioned analysis section counted pawn mistake per player per game created bar chart illustrating aggregation
436,Lobsters,visualization,Data Visualization,Immersive linear algebra - The world's first linear algebra book with fully interactive figures,http://immersivemath.com/ila/index.html,immersive linear algebra world first linear algebra book fully interactive figure,learn twitter facebook,replaced browser width stuff immersive linear algebra j k ã isbn u world first linear algebra book fully interactive figure learn check u twitter facebook word book navigate notation recap math think already know concept vector introduced learn add subtract vector powerful tool take two vector produce scalar threedimensional space produce vector two vector using tool way solve system linear equation enter matrix fundamental property square matrix discover behaviour matrix learn harness power linearity chapter value
437,Lobsters,visualization,Data Visualization,"The eigenvector of ""Why we moved from language X to language Y""",https://erikbern.com/2017/03/15/the-eigenvector-of-why-we-moved-from-language-x-to-language-y.html,eigenvector moved language x language,eigenvector moved language x language stochastic matrix go future programming javascript framework database notescaveats discussion hacker news rprogramming switched language language scrape google get number search result proxymesh power iteration github tagged math popular misc software,eigenvector moved language x language reading yet another blog post titled team moved language x language forgot one started wondering generalize bit possible generate n n contingency table moving language x language wrote script query google script get number search result using tiny snippet tried different query string like move language language switch language language one end get nice n n contingency table language cool part begin actually treat probability switching language say something future language popularity one key stationary distribution process depend initial distribution turn basically first eigenvector matrix really nt make assumption popular right hypothetical future stationary state independent need make stochastic matrix describes probability going state state j easy interpret contingency matrix transition probability normalizing across row give rough approximation probability switching language language j finding first eigenvector trivial multiply vector many time matrix converge towards first eigenvector way see note bunch discussion go future programming without ado top language stationary distribution go c java c python took stochastic matrix sorted future popularity language predicted first eigenvector surprisingly least go big winner ton search result people moving x go even sure feel mixed feeling go guess infallible analysis point inevitable conclusion go something worth watching c language turned year old year really well bunch manual search many case lot result really people writing optimize certain tight loop moving code x c etc incorrect nt think c lingua franca computer work people still actively moving piece code c stay seriously think c going strong birthday endorsement c linkedin expect recruiter reach c opportunity well actually taking back hopefully c outlive linkedin analysis pretty much predicts would expect java stay perl dead rust pretty well btw analysis reminds old tweet javascript framework analysis frontend framework expected react come top interestingly vue really well also surprised well angular stack anecdotally seems like mass exodus away database started looking ride sharing apps deep learning framework thing data far sparse le reliable keep posted notescaveats see discussion hacker news rprogramming blog post another inspiration switched language language scrape google get number search result unfortunately google rate limit query ip ended using proxymesh scrape n n combination note searched exact query putting quotation mark eg switch go c attentive reader might ask javascript nt included analysis reason frontend kind stuck anyway moving involved except crazy stuff like transpiling really super common b everyone refers javascript backend node diagonal element course really big probability people stay certain programming language ignoring turn search result thing like stay swift related taylor swift b stationary distribution actually independent adding constant diagonal identity matrix c blog post whatever want b true e alpha e e ldots denotes first eigenvalue identity matrix nt exactly map reality probability stay certain language may different across language method repeated multiplication get first eigenvalue called power iteration model eigenvectors superaccurate description reality probably old quote george box come mind model wrong useful also know chain ergodic bunch thing reality basically always case code available github tagged math popular misc software
438,Lobsters,visualization,Data Visualization,Drawing a map of distributed data systems,https://www.oreilly.com/ideas/drawing-a-map-of-distributed-data-systems,drawing map distributed data system,designing dataintensive application learn faster dig deeper see farther click larger version tolkienesque style engraved copper plate click larger version kraken rough pencil sketch shabbir diwan edie freedman ron bilodeau marie beaugureau attempted venn diagram mind map atlas experience place geographic map originally dutch phantom tollbooth similar thing represent online community history relational database programming language explain library related react sea monster wonderful map iceland mount hekla wikimedia common stratum hadoop world san jose download jpg version free website wellactually return distributed system quick simple definition,navigating diverse landscape technology processing storing data check designing dataintensive application martin kleppmann designing dataintensive application book working four year finally finished available favorite bookstore next week two incomplete beta early release edition available last year continued working final chapter throughout process quietly working surprise something part early release book fact something never seen tech book today excited share learn faster dig deeper see farther designing dataintensive application chapter accompanied map map kind graphical table content chapter showing main idea chapter relate example chapter storage engine figure map illustration designing dataintensive application medium click larger version take little tongueincheek taken artistic license thing included map exhaustive reflect structure chapter political geographic region represent way something city represent particular implementation approach similar thing likely close together road river represent concept connect different implementation region computing book describe one particular piece software discus aspect work book structured differently start highlevel approach might solve problem comparing pro con point piece software use approach map use structure region city located tell approach us example map see highlevel subdivision two country transaction processing analytics within transaction processing two region logstructured storage btrees two way implementing oltp storage engine within btree region see database like mysql postgresql within logstructured region see database like cassandra hbase analytics side see mountain range representing column storage reach data warehousing hadoop region since approach applies map black white practicality printing also looking tolkienesque style course welcome color fact coloring would following fine tradition three century map printed black white engraved copper plate colored hand chapter map like focusing particular aspect discussed chapter mean city appear multiple data landscape multidimensional city may lie one conceptual realm example map chapter topic replication figure map illustration designing dataintensive application medium click larger version city representing cassandra mongodb mysql others appear map chapter map map shipping route connect port shown map case noteworthy link chapter map island exception give away much want kraken incredibly delighted willing take crazy idea creating map took whole team make happen rough pencil sketch showed structure absolutely zero artistic value shabbir diwan edie freedman ron bilodeau created beautifully illustrated version see marie beaugureau patiently managed several round revision painstakingly polished detail perhaps curious know got onto idea creating map early early release book reader told would love kind flowchart help decide quickly database use application flowchart attempted never liked tempting read context jump conclusion quickly simplify issue point almost intellectually dishonest goal designing dataintensive application different good faith give recommendation one particular tool know enough particular requirement however teach question ask evaluate claim critically requires subtlety detail expressed onepage flowchart book page long one page however think kind graphical representation main idea structure would useful thought venn diagram excruciatingly boring thought mind map started taking bit literally thought atlas experience louise van swaaij jean klare sublime book represents aspect human life fictitious place geographic map originally dutch english translation sadly print phantom tollbooth norton juster jules feiffer similar thing closer technology similar mapstyle visualization used represent online community visualize history relational database programming language explain library related react simply love style inspiration ornate map produced medieval renaissance period especially come whimsical sea monster example around abraham ortelius published wonderful map iceland mount hekla spewing fire surrounded fantastical sea monster figure map abraham ortelius ca source wikimedia common feel map sea monster reflect sense excitement explore earth discover new place well danger sailing across unknown sea perhaps bit excitement exists today exploration technology storing processing using data seems lot potential also really know sometimes bit dangerous raise hand lost data point something went wrong hope map designing dataintensive application help convey excitement also make smile print ebook edition map chapter appears start chapter taken individual chapter map assembled archipelago island representing technology sea distributed data poster also includes bonus sea monster course stratum hadoop world san jose week drop booth pick free print poster something geeky cool hang wall office alternatively download jpg version free website personal noncommercial use hope enjoy designing dataintensive application map much enjoyed making figure designing dataintensive application author martin kleppmann footnote wellactually crowd yes know hash index gist postgresql various index type database fact mysql index type actually matter storage engine innodb detail beside point highlighting dichotomy pageoriented updateinplace approach logstructured compactionbased approach distinction best explained concrete example graphical representation capture subtlety discussed text book return read system quick simple basic overview distributed system recommended resource
439,Lobsters,visualization,Data Visualization,Seeing Theory: A Visual Introduction to Probability and Statistics,http://students.brown.edu/seeing-theory/index.html,seeing theory visual introduction probability statistic,chapter frequentist inference,chapter frequentist inference frequentist inference process determining property underlying distribution via observation data go frequentist inference
440,Lobsters,visualization,Data Visualization,Science Isn’t Broken,https://fivethirtyeight.com/features/science-isnt-broken/,science broken,editor wrote announcement pvalue problem nature researcher degree freedom point bad incentive blocking good science subscribe fivethirtyeight podcasts harking hypothesizing result known published research finding false brian nosek center open science feedback team different decision researcher got variety result eric luis uhlmann medpage today retraction watch case scott reuben write blog retraction marc hauser harvard psychologist caught fabricating data macarthur foundation grant twothirds retraction due misconduct rose tenfold done fraudulent peer reviewing statistical editor journal european urology anesthesia pain pediatrics list socalled predatory journal publisher international journal advanced chemical research pubmed common pubpeer hired publication ethic manager highprofile failure science broken center open science seth lloyd correct falsehood internet slow change face new evidence true evidence breakfast effect body weight tenuous circumstantial overstating evidence using causative language describe association breakfast obesity primed find causality even exist coffee good one day bad next correction aug pm,going rely science mean reaching truth still best tool important understand respect difficult get rigorous result could pontificate reason science arduous instead going let experience one welcome wild world phacking tweaked variable proved democrat good economy congrats go vote hillary clinton sense purpose go bragging friend could proved republican data interactive tool narrowed expanded phacked make either hypothesis appear correct answering even simple scientific question party correlated economic success requires lot choice shape result mean science unreliable mean challenging sometimes give credit political party best economy seems like pretty straightforward question saw much easier get result get answer variable data set used test hypothesis possible combination yielded publishable pvalue mean showed party office strong effect economy pvalue reveals almost nothing strength evidence yet pvalue become ticket get many journal dominant method used evaluate evidence pvalue said michael evans statistician university toronto pvalue well known work well scientist overreliance pvalues led least one journal decide enough february basic applied social psychology announced longer publish pvalues believe p bar easy pas sometimes serf excuse lower quality research editor wrote announcement instead pvalues journal require strong descriptive statistic including effect size scientist really want know whether hypothesis true strong finding pvalue give never give said regina nuzzo statistician journalist washington dc wrote pvalue problem nature last year instead think pvalue index surprise surprising would result assumed hypothesis false manipulated variable phacking exercise shaped result exploiting psychologist uri simonsohn joseph simmons leif nelson call researcher degree freedom decision scientist make conduct study choice include thing like observation record one compare factor control case whether measure economy using employment inflation number researcher often make call go often obviously correct way proceed make tempting try different thing get result looking point bad incentive blocking good science subscribe fivethirtyeight podcasts scientist fiddle around like simonsohn told usually committing fraud intending falling prey natural human bias lead tip scale set study produce falsepositive result since publishing novel result garner scientist reward tenure job ample incentive phack indeed simonsohn analyzed distribution pvalues published psychology paper found suspiciously concentrated around everybody phacked least little bit simonsohn told mean researcher bunch huckster la lacour mean human phacking similar type manipulation often arise human bias unconscious way done unconscious way simonsohn said really believe hypothesis get data ambiguity analyze first analysis try spit result want keep trying find one work always fall back harking hypothesizing result known subtle notsosubtle manipulation like plague many study stanford metascience researcher john ioannidis concluded famous paper published research finding false really difficult perform good study told admitting surely published incorrect finding many potential bias error issue interfere getting reliable credible result yet despite conclusion ioannidis sworn science instead sworn protect illustration shout phacking generally thought cheating made compulsory instead purpose study push frontier knowledge perhaps playing around different method thought dirty trick encouraged way exploring boundary recent project spearheaded brian nosek founder nonprofit center open science offered clever way nosek team invited researcher take part crowdsourcing data analysis project setup simple participant given data set prompt soccer referee give red card darkskinned player lightskinned one asked submit analytical approach feedback team diving analysis twentynine team total analyst took part researcher used wide variety method ranging interested methodological gore simple linear regression technique complex multilevel regression bayesian approach also made different decision secondary variable use analysis despite analyzing data researcher got variety result twenty team concluded soccer referee gave red card darkskinned player nine team found significant relationship skin color red card variability result due fraud sloppy work highly competent analyst motivated find truth said eric luis uhlmann psychologist insead business school singapore one project leader even skilled researcher must make subjective choice huge impact result find disparate result mean study inch u toward truth one hand study show result heavily reliant analytic choice uhlmann told hand also suggests hard look data say bias darkskinned player similarly permutation could test study politics economy produced best weak effect suggests relationship number democrat republican office economy strong one important lesson single analysis sufficient find definitive answer every result temporary truth one subject change someone else come along build test analyze anew make science powerful selfcorrecting sure false finding get published eventually new study come along overturn truth revealed least supposed work scientific publishing great track record come selfcorrection ivan oransky physician editorial director medpage today launched blog called retraction watch adam marcus managing editor gastroenterology endoscopy news anesthesiology news two professional acquaintance became friendly covering case scott reuben anesthesiologist caught faking data least study first retraction watch post titled write blog retraction five year later answer seems selfevident without concerted effort pay attention nobody notice wrong first place thought might one post month marcus told think either u thought would become two three day interview public radio medium attention highlighting blog coverage marc hauser harvard psychologist caught fabricating data tip started rolling became clear large number people science frustrated way misconduct handled people found u quickly oransky said site draw unique view month site still focus retraction correction also cover broader misconduct error importantly platform people discus uncover instance data fabrication said daniele fanelli senior research scientist stanford metaresearch innovation center reader tip helped create surge content site employ several staff member building comprehensive freely available database retraction help macarthur foundation grant marcus oransky contend retraction automatically viewed stain scientific enterprise instead signal science fixing mistake retraction happen variety reason plagiarism image manipulation rigging image microscope gel instance show desired result two common one marcus told outright fabrication relatively rare error honest mistake study university washington microbiologist ferric fang colleague concluded twothirds retraction due misconduct number retraction issued scientific literature rose tenfold remains matter debate whether misconduct increasing easier root fang suspect based experience journal editor misconduct become common others sure easy show done growth retraction accounted number new journal retracting fanelli said still even rise retraction fewer percent publication retracted annually peer review supposed protect shoddy science november oransky marcus cat ferguson staff writer retraction watch uncovered ring fraudulent peer reviewing author exploited flaw publisher computer system could review paper close colleague even legitimate peer reviewer let plenty error andrew vickers statistical editor journal european urology biostatistician memorial sloan kettering cancer center year back decided write guideline contributor describing common statistical error avoid preparation writing list colleague looked back paper journal already published go back paper found one without error told journal alone similar problem turned said anesthesia pain pediatrics numerous type journal many reviewer check method statistic section paper arthur caplan medical ethicist new york university told partly paid rewarded timeconsuming peer review work study get published peer review socalled predatory publisher flood scientific literature journal essentially fake publishing author pay jeffrey beall librarian university colorado denver compiled list socalled predatory journal publisher journal often legitsounding name like international journal advanced chemical research create opportunity crackpot give unscientific view veneer legitimacy fake get fucking mailing list simpson paper published journal predatory journal flourish part sway publication record come landing job grant creating incentive researcher pad cv extra paper internet changing way scientist distribute discus idea data may make harder pas shoddy paper good science today researcher publish study peer standing online discus critique sometimes comment posted journal website form rapid response new project pubmed common pubpeer provide forum rapid postpublication peer review discussion new publication also commonly take place science blog social medium help spread information disputed corrected result one thing campaigning scientist journal university stop acting fraud something never happens oransky told bad player science business politics difference science actually mechanism selfcorrection always work retraction watch role watchdog forced accountability publisher journal biological chemistry example grew tired retraction watch criticism hired publication ethic manager help scientific record become selfcorrecting retraction watch put journal notice try retract paper without comment expect called discussion science shortcoming gone public deluge retraction story fraudsters false positive highprofile failure replicate landmark study people begun ask science broken spent many month asking dozen scientist question answer found resounding science broken untrustworthy difficult u realize apply scrutiny study design require careful statistic analytic method partial solution make science reliable need adjust expectation science great lowyield experiment fail mean challenge worth expect every dollar turn positive result thing try work nature process science magic wand turn everything touch truth instead science operates procedure uncertainty reduction said nosek center open science goal get le wrong time concept fundamental whatever know best approximation truth never presume everything right default biased try find extreme result ioannidis stanford metascience researcher told people want prove something negative result satisfy craving ioannidis seminal study one identified way scientist consciously unconsciously tip scale favor result seeking methodological flaw researcher identified explain researcher arrive false result get bottom problem understand prone holding wrong idea requires examining something fundamental biased way human mind form belief bias helpful least point take instance naive realism idea whatever belief hold believe true mindset almost essential science quantum mechanic researcher seth lloyd mit told believe whatever working right solution give energy passion need work hypothesis usually incorrect result overturn beloved idea researcher must learn experience keep lloyd described hopeful notion ok maybe idea right next one science great lowyield fang told experiment fail mean challenge worth expect every dollar turn positive result thing try work nature process rather merely avoiding failure need court truth yet even face overwhelming evidence hard let go cherished idea especially one scientist built career developing anyone ever tried correct falsehood internet know truth always win least initially process new evidence lens already believe confirmation bias blind u fact quick make mind slow change face new evidence year ago ioannidis colleague searched scientific literature reference two wellknown epidemiological study suggesting vitamin e supplement might protect cardiovascular disease study followed several large randomized clinical trial showed benefit vitamin e one metaanalysis finding high dos vitamin e actually increased risk death human fallibility send scientific process hurtling fit start misdirection instead straight line question truth despite contradictory evidence rigorous trial first study continued cited defended literature shaky claim beta carotene ability reduce cancer risk estrogen role staving dementia also persisted even overturned definitive study idea becomes fixed difficult remove conventional wisdom sometimes scientific idea persist beyond evidence story tell feel true confirm already believe natural think possible explanation scientific result put context ascertain plausible problem come fall love explanation reject evidence refuting medium often accused hyping study scientist prone overstating result take instance breakfast study published examined whether breakfast eater weigh le skip morning meal breakfast could protect obesity obesity researcher andrew brown colleague found despite mention hypothesis published medium journal evidence breakfast effect body weight tenuous circumstantial yet researcher field seemed blind shortcoming overstating evidence using causative language describe association breakfast obesity human brain primed find causality even exist scientist immune society story science work also prone error standard way thinking scientific method ask question study get answer notion vastly oversimplified common path truth look like ask question study get partial ambiguous answer another study another keep testing potential hypothesis homing complete answer human fallibility send scientific process hurtling fit start misdirection instead straight line question truth medium account science tend gloss nuance easy understand one thing reporter editor cover science always training interpret study headline read weak unreplicated study find tenuous link certain vegetable cancer risk fly newsstand bring click fast one scream food fight cancer people often joke herkyjerky nature science health headline medium coffee good one day bad next back forth embodies exactly scientific process hard measure impact diet health nosek told variation result occurs science hard isolating coffee affect health requires lot study lot evidence time course many many study evidence start narrow conclusion defensible variation finding seen threat nosek said mean scientist working hard problem scientific method rigorous path knowledge also messy tough science deserves respect exactly difficult get everything correct first try uncertainty inherent science mean use make important policy decision mean remain cautious adopt mindset open changing course new data arises make best decision current evidence take care lose sight strength degree certainty accident every good paper includes phrase study needed always learn correction aug pm earlier version phacking interactive article mislabeled one economic variable gdp productivity
441,Lobsters,visualization,Data Visualization,Chaotic Planets,http://labs.minutelabs.io/Chaotic-Planets/,chaotic planet,teaser video nick bartzokas,chaos theory amongst star play chaotic behavior planet influence newtonian gravity share creation noticed yet firefox buggy work around best viewed chrome safari watch teaser video special thanks nick bartzokas help code
442,Lobsters,visualization,Data Visualization,Announcing ggraph: A grammar of graphics for relational data,http://www.data-imaginist.com/2017/Announcing-ggraph/,announcing ggraph grammar graphic relational data,prior post layout node edge philosophy future focus github issue feature besides layout node edge themegraph facetting facetnodes facetedges facetgraph,absolutely thrilled announce ggraph finally released cran ggraph ambitious package date early genesis described prior post mention ggraph completely new short term ggraph extension api support relational data network tree feel fairly confident saying ggraph powerful way create static network based visualization r leading release three main concept ggraph described detail blog post layout node edge reiterated instead talk bit philosophy behind package well show feature fall three main concept philosophy shortage software creating network visualization shortage said visualization often though visualization impressive informative easy feel main task show really dealing complex data led certain disdain classic network visualization perfectly encapsulated nickname hairball like greatness lie allows user quickly iterate visualization approach thus better ensuring best visualization approach reached extended relational data belief user would likely try make plot meaningful want interpretability right consider try different network visualization package different apis versus mixing matching layout geoms iterative process know way prefer goal ggraph thus clear provide everything related visualization relational data api lessen cognitive load experimenting different visual representation yet feel current version represents solid foundation user feel many limitation contrary believe user feel like chain come set free future focus pointed ggraph far done try keep development focus open putting thing roadmap github issue honorable mention include matrix sankey layout expanded support edge ending choice grid arrow provides edge routing avoid node collision textbox node welcome suggestion world network visualization moving fast keep top everything feature besides layout node edge understanding node edge geoms along layout defined get long way towards visualizing network still ggraph offer discussed themegraph consider following plot library ggraph library igraph graph graphfromdataframe highschool p ggraph graph layout kk geomedgelink aes colour factor year geomnodepoint ggtitle example p heritage clearly show due grey background white grid line whole concept x ax often redundant network visualization distraction ggraph provides theme optimized network visualization called themegraph facilitates clean beautiful visualization p themegraph themegraph besides removing ax grid border change font arial narrow overridden furthermore make easy change coloring plot p themegraph background textcolour white adding theme every plot tedious ggraph provides way avoid using setgraphstyle themegraph set default extra benefit textbased geoms get default updated text automatically us style theme setgraphstyle p facetting powerful underutilized way gaining insight network using small multiple technique reduce edge overplotting meaningful way spreading node edge based attribute benefit small multiple unique relational data popularity facetting functionality show base facetting function provided bad fit network though working two distinct type data facet node attribute edge would plotted panel despite terminal node present expect ggraph come set facetting function tailored network data facetnodes facetedges two function equivalent facetwrap functionality address node edge data respectively using facetnodes edge drawn panel terminal node present using facetedges node always drawn panel even node data contains attribute named one used edge facetting assign node random class v graph class sample letter gorder graph true make year character e graph year ascharacter e graph year p ggraph graph layout kk geomedgefan aes alpha index colour year geomnodepoint aes shape class scaleedgealpha guide none p facetedges year often working small multiple nice visual separation plot setting foreground color themegraph add strip background border also use thforeground helper p facetnodes class thforeground foreground border true let add everytime setgraphstyle foreground facetgraph facetting two variable simultaneously powerful something supported facetgrid ggraph possible using facetgraph take behavior facetnodes facetedges combine p facetgraph year class facetgrid marginal plot supported well p facetgraph year class margin true default put facet row edge column node free change using rowtype coltype argument nothing stopping facetting type dimension either facet edge class start node well year p facetgraph year coltype edge hope convinced facetting context relational data easy well extremely powerful avoiding hairball one prime goal network visualization using small multiple fantastic way cutting number node edge still getting full picture
444,Lobsters,visualization,Data Visualization,Revisiting the vaccine visualizations,http://www.randalolson.com/2016/03/04/revisiting-the-vaccine-visualizations/,revisiting vaccine visualization,vaccination debate brilliant series heat map notebook categorical color palette used display continuous value quantiles multihue color palette take color blindness account color blindness simulator audience color display specific value well sometimes show much data aside science behind vaccination debate conclusion python data visualization video course,last year vaccination debate rage provaxxers loudly proclaiming everyone get vaccinated discussing science behind antivaxxers casting doubt still refusing get vaccinated personal reason around time wall street journal released brilliant series heat map showing infection rate various disease time broken state heat map easily demonstrated one important fact vaccination debate time time vaccine work today would like revisit wsj heat map lens data visualization practitioner particular would like show heat map possibly improved upon reviewing basic rule data visualization trying method displaying data going walk four major criticism show addressing possibly improve original work curious released notebook python code used generate new visualization categorical color palette used display continuous value perhaps one straining issue original wsj heat map use custom categorical color palette display infection rate palette run color rainbow seeminglyrandom interval possible calculated quantiles determine range color bin indicated methodology case rarely good idea use multiple color display single continuous variable want use color show infection rate year use one color reader constantly refer back legend figure color mean unnecessary cognitive strain reader instead use singlecolor sequential palette lighter shade indicate lower value darker shade indicate higher value reworked polio heat map one exception rule course diverging color palette clear divide continuous variable example displaying gain loss company could appropriate use diverging color palette one color represent gain value another represent loss value multihue color palette take color blindness account color blindness probably one mostoverlooked issue data visualization wsj heat map great example ran wsj heat map color blindness simulator redgreen color blindness common form color blindness result disastrous much color gradient lost yellowgrey abyss dark purple color represent low value whereas lighter yellow dark grey color represent higher value color palette survives better main message still mostly communicated wsj color palette certainly far ideal comparison ran rework redgreen color blindness simulator see simple sequential color palette practically unaffected form color blindness problem solved main lesson always run color palette color blindness simulator committing roughly audience experience data visualization lens color display specific value well one major drawback heat map rely color communicate specific value cell always important display precise value sometimes important trend hiding small difference reason reworked polio heat map simple line chart light line state dark line median value state year chart useful data messy make much sense statebystate trend however decline infection rate introduction vaccine abundantly clear even case post mine complete without small multiple let give try state chart state dc put time axis line tell story story masked heat map small multiple allow use see specific statebystate trend example polio outbreak already decline south dakota even introduction polio vaccine meanwhile polio outbreak worst new hampshire prior introduction polio vaccine made short order polio immediately thereafter always ask designing data visualization care broader story smaller story case could go either way direction go depends story want tell sometimes show much data another fair criticism data visualization shown far show much data main message wsj heat map simple introduced human population vaccine work need show statebystate trend fact may overwhelming reader providing much data get right point example happened polio utah infection rate doubling introduction polio vaccine south dakota polio seems mostly eliminated even vaccine made available outlier distraction overall trend overcome distraction applying simple statistical analysis data show overall trend confidence bound done plotting median polio infection rate across state dark line bootstrapped confidence interval shaded area summarizing data basic statistic removed distraction gotten straight point overall u polio outbreak rise onward right introduction polio vaccine immediately saw decline polio outbreak practically eliminated always consider story designing data visualization one clear story want communicate consider reducing amount data show point effectively honestly communicate story point confusing reader unnecessary detail unless detail contain important caveat aside face value chart demonstrate correlation vaccination introduced population prevalence infectious disease decreased shortly thereafter believe important point even though want focus data visualization technique post science behind vaccination debate chart fact demonstrating proven causal relationship please waste time typing correlation causation comment conclusion wrap lesson drawn revisiting popularized vaccine visualization use sequential color scheme presenting continuous value consider color blindness committing color scheme presenting specific value important use color represent value show enough data effectively honestly tell story liked saw post want learn check python data visualization video course made collaboration reilly one hour cover topic much provide strong starting point career data visualization
445,Lobsters,visualization,Data Visualization,Prophet: forecasting at scale,https://research.fb.com/prophet-forecasting-at-scale/,prophet forecasting scale,open sourcing prophet prophet shine forecast package r causalimpact anomalydetection capacity prophet work additive regression model peyton manning wikipedia page wikipediatrend stan hamiltonian monte carlo use prophet quick start guide comprehensive documentation wikipediatrend help u improve prophet welcome pull request contribute,today facebook open sourcing prophet forecasting tool available python r forecasting data science task central many activity within organization instance large organization like facebook must engage capacity planning efficiently allocate scarce resource goal setting order measure performance relative baseline producing high quality forecast easy problem either machine analyst observed two main theme practice creating variety business forecast completely automatic forecasting technique brittle often inflexible incorporate useful assumption heuristic analyst produce high quality forecast quite rare forecasting specialized data science skill requiring substantial experience result theme demand high quality forecast often far outstrips pace analyst produce observation motivation work building prophet want make easier expert nonexperts make high quality forecast keep demand typical consideration scale implies computation storage much concern forecasting found computational infrastructure problem forecasting large number time series relatively straightforward typically fitting procedure parallelize quite easily forecast difficult store relational database mysql data warehouse hive problem scale observed practice involve complexity introduced variety forecasting problem building trust large number forecast produced prophet key piece improving facebook ability create large number trustworthy forecast used decisionmaking even product feature prophet shine forecasting problem solved procedure prophet optimized business forecast task encountered facebook typically following characteristic hourly daily weekly observation least month preferably year history strong multiple humanscale seasonalities day week time year important holiday occur irregular interval known advance eg super bowl reasonable number missing observation large outlier historical trend change instance due product launch logging change trend nonlinear growth curve trend hit natural limit saturates found prophet default setting produce forecast often accurate produced skilled forecaster much le effort prophet stuck result completely automatic procedure forecast satisfactory analyst training time series method improve tweak forecast using variety easilyinterpretable parameter found combining automatic forecasting analystintheloop forecast special case possible cover wide variety business usecases following diagram illustrates forecasting process found work scale modeling phase forecasting process currently limited number tool available rob hyndman excellent forecast package r probably popular option google twitter released package specific time series functionality causalimpact anomalydetection respectively far tell open source software package forecasting python frequently used prophet replacement forecast package many setting two main advantage prophet make much straightforward create reasonable accurate forecast forecast package includes many different forecasting technique arima exponential smoothing etc strength weakness tuning parameter found choosing wrong model parameter often yield poor result unlikely even experienced analyst choose correct model parameter efficiently given array choice prophet forecast customizable way intuitive nonexperts smoothing parameter seasonality allow adjust closely fit historical cycle well smoothing parameter trend allow adjust aggressively follow historical trend change growth curve manually specify capacity upper limit growth curve allowing inject prior information forecast grow decline finally specify irregular holiday model like date super bowl thanksgiving black friday prophet work core prophet procedure additive regression model four main component piecewise linear logistic growth curve trend prophet automatically detects change trend selecting changepoints data yearly seasonal component modeled using fourier series weekly seasonal component using dummy variable userprovided list important holiday example characteristic forecast logscale page view peyton manning wikipedia page downloaded using wikipediatrend package since peyton manning american football player see yearly seasonality play important role weekly periodicity also clearly present finally see certain event like playoff game appears may also modeled prophet provide component plot graphically describes model fit plot clearly show yearly seasonality associated browsing peyton manning page football season playoff well weekly seasonality visit day game sunday monday also notice downward adjustment trend component since retired recently important idea prophet better job fitting trend component flexibly accurately model seasonality result accurate forecast prefer use flexible regression model somewhat like curvefitting instead traditional time series model task give u modeling flexibility make easier fit model handle missing data outlier gracefully default prophet provide uncertainty interval trend component simulating future trend change time series wish model uncertainty future seasonality holiday effect run hundred hmc iteration take minute forecast include seasonal uncertainty estimate fit prophet model using stan implemented core prophet procedure stan probabilistic programming language stan performs map optimization parameter extremely quickly second give u option estimate parameter uncertainty using hamiltonian monte carlo algorithm allows u reuse fitting procedure across multiple interface language currently provide implementation prophet python r exactly feature providing implementation hope make forecasting approach broadly useful data science community use prophet simplest way use prophet install package pypi python cran r read quick start guide dive comprehensive documentation looking fun source time series data recommend trying wikipediatrend package download historical page view wikipedia page help u improve prophet two main way help u improve prophet first try tell u result always looking use case order understand prophet performs well second plenty feature left build welcome pull request bugfixes new feature check contribute look forward engaging community make prophet even broadly useful
446,Lobsters,visualization,Data Visualization,Seeing Theory - Visual intro. to Probability and statistics,http://students.brown.edu/seeing-theory/,seeing theory visual intro probability statistic,chapter frequentist inference,chapter frequentist inference frequentist inference process determining property underlying distribution via observation data go frequentist inference
447,Lobsters,visualization,Data Visualization,"Finding Radiohead’s most depressing song, with R",https://www.r-bloggers.com/finding-radioheads-most-depressing-song-with-r/,finding radiohead depressing song r,radiohead ranked track according gloom index interactive version highcharter package r valence score httr package genius rvest package tidytext package following method described myles harrison fitter happier,radiohead known fairly maudlin song track depressing data scientist r enthusiast charlie thompson ranked track according gloom index created following chart gloominess band nine studio album click interactive version crated highcharter package r allows explore individual track familiar album look pretty reasonable radiohead debut honey pablo fairly poppy musically contained pretty dark lyric especially breakout hit creep recent album moon shaped pool fantastic listen nt exactly going get party started gloom index charted combination three quantity scaled radiohead gloomiest song true love wait cheeriest step first quantity spotify valence score spotify describes quantity describing musical positiveness track valence score range song sound depressed angry song happy euphoric charlie extracted list radiohead single valence score spotify developer api using httr package r useful right several song valence score charlie also look song lyric differentiate themthe second quantity percentage word lyric sad charlie scraped song lyric genius using rvest package used tidytext package break lyric word eliminate common stop word like count number negative sentimentthe third quantity lyrical density following method described myles harrison number word per second easily calculated spotify track length data word count calculated prior stepthe three quantity combined together create gloom index follows mathrm gloomindex frac valence frac mathrm pctsad lyricaldensity roughly average valence score almost number sad word per second guessing charlie add lyrical density get two term scale equal weight would interesting compare gloom index radiohead famously downbeat artist say bon iver low need away scaling gloom index charlie done formula could easily adapted make universal score like give try r code included charlie blog post linked belowrcharlie fitter happier
448,Lobsters,visualization,Data Visualization,Image-to-Image Demo - Affine Layer,http://affinelayer.com/pixsrv/index.html,imagetoimage demo affine layer,paper catbeholder database shoe picture deeplearnjs datasets section,interactive image translation model work training pair image building facade label building facade attempt generate corresponding output image input image give idea straight paper good read trained stock cat photo edge automatically generated photo generates catcolored object nightmare face best one seen yet catbeholder picture look especially creepy think easier notice animal look wrong especially around eye autodetected edge good many case nt detect cat eye making bit worse training image translation model facade trained database building facade labeled building facade nt seem sure large empty area put enough window often reasonable result draw wall color rectangle erase thing nt name different part building facade guessed called trained database shoe picture collected zappos along edge generated picture automatically really good drawing edge shoe try produce new design keep mind trained real object draw thing seems work better similar previous one trained database handbag picture collected amazon automatically generated edge picture draw shoe instead handbag get oddly textured shoe implementation model trained exported script interactive demo made javascript using canvas api run model using deeplearnjs pretrained model available datasets section github one released alongside original implementation available model used javascript implementation available
449,Lobsters,visualization,Data Visualization,Open Data & Government White Papers,https://medium.swirrl.com/the-future-of-white-papers-2fa6a8ab4945,open data government white paper,future white paper linked data strengthen connection policymaking evidence housing white paper fixing broken housing market people written posttruth world statistic could provide essential public service see talk jeni tennison ceo open data institute english housing survey linked open data dclg open data community inline data provenance link directly dataset page also link directly chart home ownership amongst year old decade ago home ownership amongst year old toda find open data community,future white papersor linked data strengthen connection policymaking evidencethe housing white paperon february department community local government published white paper fixing broken housing market white paper like attract lot interest broad range people deal big issue issue come much bigger housing especially acknowledgement foreword prime minister say broken housing market one greatest barrier progress britain today paper describes scale challenge sort thing need done tackle housing shortage people written paper going particular interest amount data quoted paper right beginning opening foreword prime minister theresa may state today average house cost almost eight time average earnings alltime record rest paper littered number map chart factsin unrelated article published guardian website january national statistician john pullinger wrote fact posttruth world statistic could provide essential public service say statistic help u make decision based good evidence rather prejudice something particularly interested term available data used inform decisionmaking note inform rather drive see talk jeni tennison ceo open data institute also people make decision provide evidence back wider populationso back white paper mentioned paper full data definitely mean data used inform decision pretty good indication considered problem accessible could page paragraph footnote section paragraph page quote statistic statistic superscripted number number point reader footnote bottom page directs reader source data case english housing survey googling specific stat take series news article english housing survey website govuk long list linksnow footnote use almost year certainly suggesting get rid think better way dealing providing better link datastatistics used document like thislinked open data dclgthis particular white paper written published department community local government dclg dclg team within analysis data directorate called open data community odc odc responsibility dclg open data part host website also called open data community actually linked data site using swirrl publishmydata platformodc currently host around datasets dclg one great thing linked data odc thing datastore webpage mean theme dataset even datapoint observation url anyone browse view information wider context metadata associated data related resource depending thing viewed url anyone copy send someone else exactly way might share news articleso back white paper paper already contains hyperlink document footnote page document mentioned paper linked footnote provide additional context way dclg store data open data community fantastic opportunity link data statistic equivalent observation linked data page internetinline data provenanceto try explain little better annotated page white paper possibilitiespage annotatedpage contains statement say since ratio average house price average earnings doubled actual white paper footnote suggests come dclg live table table created linked dataset open data community could link directly dataset page documentthis useful allows reader immediate access data metadata thing like definition dataset checked see regional data provided would simple see whether region saw increase ratio also easy enough look year see whether specifically chosen baseline inflate message seem similar vein page chart mention specific figure within body text page annotatedas datasets referenced hosted open data community link directly dataset page internet actually go though chart top page simple visualisation single row data row data viewed odc could link also link directly chartthere also couple figure referenced page home ownership amongst year old link two observation home ownership amongst year old decade agohome ownership amongst year old todayagain use find information figure quoted publishes data next updated example also see figure context looking trend even seeing year old way data structured use explore data clicking social renter chart open different slice data reference could repeated throughout document wherever data stats mentioned providing direct link evidence used inform policy choice exercise onerous data already sourced documentwhilst used recent white paper example method could applied sort thing official report academic paper even blog social medium post creating truly webenabled document using linked open data powerful way make document useful decision transparent supplying provenance data used inform decisionsfind open data community
450,Lobsters,visualization,Data Visualization,A Fourier Synthesis Character Generator,http://www.glensstuff.com/fouriersynthchargen/fouriersynthchargen.htm,fourier synthesis character generator,schematic diagram logic board schematic diagram filter board rom board deflection board schematic logic board interface board power supply board wiring diagram,system introduction unit alphanumeric character generator produce deflection banking signal trace display oscilloscope screen display produced consists programmable character arranged row complete character set comprised number letter f giving total unique character addition blank space unit therefore suitable display computer data hexadecimal format noteworthy aspect unit character generation based analogue principle actual rom effectively contains data tracing individual character fact completely analogue character produced fourier synthesis technique found outlined article entitled generating character published january issue electronics engineering edition author lincoln laboratory mit detail demonstration unit generating arabic octal numeral synthesising deflection waveform character artificially generated sine cosine term harmonic frequency reference frequency khz system described displayed eight numeral face oscilloscope crt four row deep character total design somewhat inflexible however selection specific character available location made hardwired diode matrix reading article fascinated immediately enamoured concept fourier synthesis producing display alphanumeric character much design construct practical useful version provide useful data display analoghybrid digital computer project settled upon expanded specification character set plus bank space displayed row rather hardwired diode matrix specific character displayed avaliable location stored volatile static ram sram remotely programmable wide parallel port common system described cited reference unit synthesizes character sine cosine term harmonic similarity practical circuit realisation end implementation described character visibly traced six eighth u period khz fundamental reference remote programming display parallel port asynchronous mean buffering data transfer sram blanking interval produce glitch visible interruption generated display manner achieved mean simple discrete logic circuitry detailed following paragraph firstly brief demonstration video unit operation operational outline display control logic blanking interval mentioned system introduction two eighth period u duration comprised u end one complete period u start immediately next period beam cathode ray tube cutoff period time complete visible tracing one character next beam cathode ray tube invisibly manoeuvred position end point one traced character starting point next timing interval illustrated figure showing actual synthesized x horizontal vertical deflection waveform necessary scribing numeric character onto cathode ray tube face relation blanking interval zmodulation waveform figure synthesized waveform generating character character row traced sequentially endless loop left right top row bottom row sequential position character identified number actual address location sram ranging first topleftmost character therefore identified position last bottomrightmost character identified position remote programming simple first bit wide programming word designated applied parallel programming port sram address bit select character position set remaining bit programming word designated sram data bit select actual character displayed nominated addressed position data value range fhex corresponds directly alphanumeric character displayed example data value display data value ehex display data bit required select one available character displayed final data bit required select blank space data bit high character displayed addressed position irrespective logic state bit blank space romgenerated character programmed high given character position blanking interval position simply extended full u period partially reiterating process programming character display involves applying correct address data value simultaneously wide programming port final step assert single control line designated however mentioned previously programming asynchronous therefore necessary requirement restriction control logic ignores status write pin u blanking interval write pin must therefore asserted pulled high duration least couple u greater u data presented programming port must course stable complete period holding write pin high greater u ensures even occurrence partially coincident blanking interval write status always gated control logic coincident blanking interval either immediately prior immediately write strobe passed edgetriggered monostable circuit generates internal write pulse internal data latch writing storing presented programming port effective memory point onwards status programming port pin longer matter write pin logic state may return low convenient write pin strobe duration approximately half way next subsequent blanking interval content data latch automatically seamlessly transferred sram control logic address bit directly address sram data bit written addressed location programming cycle single character position complete sequence event detailed clear programming cycle occur repetition rate greater u however much limitation concerning dynamic generated display example write strobe repetition rate u permit entire displayed character programmed updated le m faster blink eye generating sine cosine reference term x deflection waveform required scribe unique character synthesized five harmonic fundamental frequency khz amplitudestable reference harmonic frequency sine cosine term plus inverse must generated total twenty peak reference sinusoid generated tabulated thus term harmonic frequency khz phase degree sin wt sin wt co wt co wt sin wt sin wt co wt co wt sin wt sin wt co wt co wt sin wt sin wt co wt co wt sin wt sin wt co wt co wt mean combination bandpass filtering allpass filtering inversion twenty reference sinusoid produced five reference square wave khz square wave correct phase relationship respect derived single master crystal clock source combination synchronised digital division phaselockedloopbased multiplication square wave generated pcb entitled logic board oscilloscope screen photo five square wave displayed simultaneoulsy shown figure figure reference schematic diagram logic board reference frequency source khz generated combination mhz oscillator module decade divider first three internally cascaded toggle flipflop stage ripple counter divide khz reference harmonic reference frequency khz required duty cycle ripple counter quad nand gate form combination counter dividing khz reference khz divided first three stage ripple counter produce succession fundamental harmonic reference square wave khz khz khz nand gate produce brief pulse falling edge khz square wave pulse used reset ripple counter effectively locking phase khz reference square wave synchronisation others others generation harmonic reference square wave little trickier unlike harmonic frequency khz derived khz reference integer division divide evenly however harmonic must ultimately derived common reference maintain correct lockedin phase relationship harmonic frequency generated multiplying khz fundamental ripple counter conjunction quad nand gate form fixed loop divider phase locked loop vco therefore oscillates time reference frequency khz reference square wave routed header logic board processing sine cosine filter board five harmonic frequency processed filter board identical manner therefore signal path fundamental frequency processing detailed reference schematic diagram filter board khz square wave first passed two cascaded multiplefeedback bandpass mfb filter stage based opamps mfb filter stage q passband gain unity tuned resonance trimmer potentiometer respectively mfb filter zero phaseshift resonance mfb filter tuned fundamental frequency square wave attenuating harmonic component produce clean sinusoid phase unprocessed square wave output pin note shown figure generated phaselocked reference square wave common coincident falling rather rising edge square wave therefore inverse term harmonic frequency sinusoid thus produced output therefore wt sinusoid amplitude scaled peak inverting amplifier stage trimmer potentiometer provided amplitude calibration due signal inversion scaled signal output sin wt inverting unitygain allpass filter based opamp produce phaseshifted co wt term sin wt term trimmer potentiometer provided calibration degree phaseshift signal routed header filter board rom board filter board therefore produce required sin n wt harmonic term n wt harmonic term ten waveform shown cathode ray oscilloscope screen photo figure figure character generation fourier rom sixteen complementary x deflection signal required scribe sixteen individual alphanumeric character finally assembled reference term rom board rom board therefore essentially hardwired readonly memory containing unique fourier component composition deflection waveform sin n wt co n wt term signal filter board routed rom board header buffered opamps b c wired unity gain voltage follower unity gain inverting stage based opamps finally produce sin n wt co n wt term unique deflection waveform synthesized simply passively summing resistor required fourier component required amplitude dc term either positive negative necessary also passively summed combined synthesized deflection waveform finally buffered opamps though wired unity gain voltage follower routed deflection board via header deflection board contains pair multiplexer addressed together data stored sram automatically select synthesized x waveform specific character scribed onto crt display given instant probably need said figuring fourier component value character thus resistor value rom board particularly tedious laborious task character first traced graph paper periodic waveform closed function character manually scribed curve closed segment length commensurate proportion time blanking interval net u period achieved measuring total length visible portion character curve length string string cut length correct proportion six eighth visible two eighth blanked used aide trace segment length closing curve number evenly spaced point numbering approximately plotted along closed curve x cartesian coordinate value point tabulated numbered point starting begin end middle segment length added close curve tabulated x value transferred excel spreadsheet x deflection waveform reconstructed value respectively spreadsheet also used compute fourier coefficient value dc term deflection board referring deflection board schematic wired form pair multiplexer multiplexer addressed data bit sram resides logic board data line routed multiplexer via header logic board header deflection board x deflection waveform specific character selected multiplexer present pin deflection board respectively signal buffered unity gain voltage follower passed via potentiometer pair inverting summing amplifier stage based opamps respectively potentiometer permit width height displayed character varied independently user preference summing amplifier combine synthesized deflection waveform stepped staircase waveform derived address counter staircase waveform determine position character display address counter resides logic board address sram via tristate buffer address bit address counter routed header deflection board via header logic board least significant bit address counter decoded dac comprised resistor produce unipolar positive staircase waveform step step represents character position horizontal row character address counter logic board clocked negative edge khz fundamental reference waveform consequence character position count advance sucessive u period complete character scribed horizontalpositioning staircase waveform consequently summed synthesized x deflection waveform resistor injects dc current summing junction opamp purpose dc level shifting causing constructed deflection waveform output become bipolar effectively centred character row counted significant bit address counter decoded dac comprised inverting logic gate resultant waveform discrete step step representing vertical position character displayed vertical deflection signal constructed summing amplifier manner identical horizontal deflection signal summing amplifier opamps associated component form pair nonsynchronised ultralow frequency triangle waveform oscillator serve function triangle waveform separately summed small amount x deflection waveform summing amplifier stage cause position display produced face crt slowly continuously seemingly randomly shift around small deflection factor horizontal vertical ax consequence potentially unchanging character ever permanently fixed single position lessens likelihood phenomenon phosphor burn damage crt occuring deflection signal output pin opamps finally routed bnc signaloutput jack front panel unit via header oscillograph deflection waveform shown figure figure interface board parallel programming port accessible front panel unit via female connector routed logic board via interface board programming port input logic board comprised address data single write line ttllevel compatible interface board provides transient overvoltage protection logic input mean clamp diode conjunction current limiting resistor led indication logic state line also provided write pin pulse stretched monostable reliable visual indication presence write enables indicator led conclusion fifth last printed circuit board system comprised power supply board however feel requires much technical explanation shown photograph immediately assembled wired complete unit homemade relay rack case front panel prepainted thick offtheshelf blank made hammond manufacturing case constructed thick galvanized sheet steel x square aluminium stock drilled tapped assembly screw electrical interconnection circuit board front panel jack control etc detailed wiring diagram update green capacitor seen photograph loaded onto filter board board sporting multitude trimmer potentiometer since substituted cogdielectric ceramic type capacitor mfb allpass filter stage originally loaded capacitor handy time turned mistake firing character generator first thing cold winter morning seven eight degree celsius electronics workshop noticed displayed character looked little bit different heater warmed workshop cosy degree simply put ubiquitous installed terribly bad temperature coefficient resulting small insignificant temperaturedependent variation calibrated phase generated reference term substituting cog ceramic type specified worse case temperature coefficient completely solved problem
451,Lobsters,visualization,Data Visualization,The Data Science Process,https://www.springboard.com/blog/data-science-process/,data science process,widely accepted definition best data science book springboard data science career track bootcamp data science process data science process quick outline frame problem collect raw data needed solve problem process data data wrangling explore data perform indepth analysis machine learning statistical model algorithm communicate result analysis,data scientist often get question actually data scientist appear wizard pull crystal ball macbook pro chant bunch mumbojumbo machine learning random forest deep network bayesian posterior produce amazingly detailed prediction future hold however much like believe data science magic widely accepted definition power data science come deep understanding statistic algorithm programming hacking communication skill check list best data science book dive deeper importantly data science applying three skill set disciplined systematic manner last year worked individual data scientist several company also led team data scientist chief data scientist pindrop security hot andreessenhorowitz funded cybersecurity startup team worked several cuttingedge project using wide variety tool technique time realized despite variation detail different project step data scientist use work complex business problem remain le pindrop joined springboard director data science education capacity role design maintain data science course student data science career track bootcamp designing course compelled reflect systematic process data scientist use work make sure incorporated step data science course article explain data science process example case study end article hope highlevel understanding daytoday job data scientist see role high demand data science process congratulation hired first job data scientist hotshot startup san francisco toast silicon valley first day work excited go crunch data wow everyone around insight discover start deliciously catered lunch run vp sale introduce ask kind data challenge think working vp sale think carefully edge seat waiting answer answer tell exactly going massive impact company dream say help u optimize sale funnel improve conversion rate first thought come mind data science problem even mention word data need analyze mean fortunately data scientist mentor warned already initial ambiguity regular situation data scientist encounter frequently systematically apply data science process figure exactly need data science process quick outline nontechnical supervisor asks solve data problem description task quite ambiguous first data scientist translate task concrete problem figure solve present solution back stakeholder call step involved workflow data science process process involves several important step frame problem client exactly client asking solve translate ambiguous request concrete welldefined problem collect raw data needed solve problem data already available part data useful data need kind resource time money infrastructure would take collect data usable form process data data wrangling real raw data rarely usable box error data collection corrupt record missing value many challenge manage first need clean data convert form analyze explore data cleaned data understand information contained within high level kind obvious trend correlation see data highlevel characteristic significant others perform indepth analysis machine learning statistical model algorithm step usually meat project apply cuttingedge machinery data analysis unearth highvalue insight prediction communicate result analysis analysis technical result come little value unless explain stakeholder mean way comprehensible compelling data storytelling critical underrated skill build use help vp sale hotshotio next section walk step data science process showing play practice stay tuned
452,Lobsters,visualization,Data Visualization,Serial Killers Should Fear This Algorithm,https://www.bloomberg.com/news/features/2017-02-08/serial-killers-should-fear-this-algorithm,serial killer fear algorithm,detected unusual activity computer network,detected unusual activity computer network continue please click box let u know robot
454,Lobsters,visualization,Data Visualization,"Redash: Connect to any data source, easily visualize and share your data",https://github.com/getredash/redash,redash connect data source easily visualize share data,browserbased easeofuse query editor visualization dashboard beautiful visualization sharing schedule refreshes alert rest api broad support data source getting started supported data source data source getting help reporting bug contributing code issue dev environment security security redashio pgp key license,redash designed enable anyone regardless level technical sophistication harness power data big small sql user leverage redash explore query visualize share data data source work turn enables anybody organization use data every day million user thousand organization around world use redash develop insight make datadriven decision redash feature browserbased everything browser shareable url easeofuse become immediately productive data without need master complex software query editor quickly compose sql nosql query schema browser autocomplete visualization dashboard create beautiful visualization drag drop combine single dashboard sharing collaborate easily sharing visualization associated query enabling peer review report query schedule refreshes automatically update chart dashboard regular interval define alert define condition alerted instantly data change rest api everything done ui also available rest api broad support data source extensible data source api native support long list common database platform getting started supported data source redash support sql nosql data source also extended support list builtin source amazon athena amazon dynamodb amazon redshift axibase time series database cassandra clickhouse cockroachdb csv databricks apache spark ibm druid elasticsearch google analytics google bigquery google spreadsheet graphite greenplum hive impala influxdb jira json apache kylin omniscidb formerly mapd memsql microsoft azure data warehouse synapse microsoft azure sql database microsoft sql server mongodb mysql oracle postgresql presto prometheus python qubole rockset salesforce scylladb shell script snowflake sqlite treasuredata vertica yandex appmetrrica yandex metrica getting help reporting bug contributing code want report bug request feature please open issue want help u build redash fork project edit dev environment make pull request need help get security please email security redashio report security vulnerability acknowledge receipt vulnerability strive send regular update progress curious status disclosure please feel free email u want encrypt disclosure email use pgp key license
455,Lobsters,visualization,Data Visualization,A Review of Temporal Visualizations based on Generalized Space-Time Cube Operations,http://spacetimecubevis.com/,review temporal visualization based generalized spacetime cube operation,,逛懂 数博会 秒响应 秒呼应 用上电 向 用好电 三区三州 记者梁建强 危房改造 人从众 记者李金磊 刚刚曩昔的 十一 人从众 超载 成就 双好 成果 和 双好 成果
457,Lobsters,visualization,Data Visualization,Incredible weather live app,https://www.ventusky.com,incredible weather live app,,temperature precipitation wind gust cloud air pressure cape snow cover freezing level wind animation gfs icon gem
458,Lobsters,visualization,Data Visualization,Performance Trends in Artificial Intelligence,https://srconstantin.wordpress.com/2017/01/28/performance-trends-in-ai/,performance trend artificial intelligence,edit add giraffe mile brundage http wwwyoutubecomwatch http wwwyoutubecomwatch baidu website rise deep learning performance progressed even faster microsoft neuralnetworkbased version new york time magazine article state art perceptual control theory point like,epistemic status moderately confident edit add brought attention wrong claim progress image recognition slowing classification accuracy approach obviously improvement raw score smaller necessity since accuracy exceed look negative log error rate rather raw accuracy score improvement image recognition measured performance imagenet competition increasing roughly linearly discontinuity introduction deep learning algorithm deep learning revolutionized world artificial intelligence much improve performance computer gotten better different task time since rise deep learning game data seems show exponential growth data computation power yield exponential improvement raw performance word get put deep learning matter provides way turn moore law corresponding performance improvement wide class problem even clear discontinuous advance performance nondeeplearning system image recognition deep learning clearly discontinuous advance algorithm return scale improvement time seem flattening approach surpass human accuracy speech recognition deep learning discontinuous advance still far away human accuracy regime accuracy seems improving linearly time machine translation neural net seem made progress conventional technique yet clear real phenomenon trend natural language processing trend positive deep learning generally seem better trendline chess elo rating best computer chess engine time discontinuity corresponding jump hardware rybka treesearchbased engine without deep learning indeed probabilistic element apart progress look roughly linear swedish chess computer association data elo score time deep learning chess engine recently introduced giraffe originated matthew lai imperial college london created elo rating equivalent serum computer chess engine course learning predict pattern good move probabilistically data impressive achievement bruteforce computation quite possible deeplearningbased chess engine tuned time improve go figure nature paper alphago fan hui human player alpha go performed notably better predecessor crazy stone beat human player mini go game pachi fuego gnugo mcts program without deep learning gpus alphago us much hardware data mile brundage argued alphago represent much surprise given improvement hardware data effort also graphed return elo rating hardware alphago team word exponential growth hardware produce roughly linear even sublinear growth performance measured elo score better would require algorithmic innovation well arcade game artificial atari game scored relative human professional playtester computer score random play human score random play compare elo score ratio expected score player v player b qa qb qa ea elo score linear growth elo score equivalent exponential growth absolute score mile brundage blog also offer trend atari performance look exponential would course still plausibly linear elo score superhuman performance arcade game already single reinforcement learner trained convolutional neural net image game screen outputting behavior arrow basically dynamic programming nonlinear approximation qfunction estimate quality move deepmind case qfunction approximator convolutional neural net apart convnet qlearning function approximation around since qlearning since interestingly enough video computer playing breakout http wwwyoutubecomwatch obviously know law reflection principle would place bar near ball eventually land erratic jerky movement obviously could principle optimal however find optimal strategy tunnelling brick hitting ball behind wall creative learning conceptual learning see phenomenon game pong http wwwyoutubecomwatch learned agent performs much better hardcoded agent move jerkily randomly know law reflection similarly report alphago producing unusual go move consistent agent patternrecognition broader space human find law regularity human perhaps contrary stereotype contrast mechanical outsidethebox thinking reinforcement learner think outside box find box imagenet image recognition measured imagenet classification performance improved dramatically rise deep learning dramatic performance improvement starting corresponding geoffrey hinton winning entry followed levelingoff plausibly accuracy sshaped curve accuracy scale processing power paper baidu illustrates performance deep neural net follows sshaped curve time spent training work faster gpus much faster doubling gpus provides linear boost speed given time interval training one would timed competition mean doubling number gpus would result sublinear boost accuracy mnist using performance data yann lecun website see deep neural net hugely improved mnist digit recognition accuracy best algorithm convolutional net boosted convolutional net due lecun error rate within year dropped error rate within year also convolutional net within year within year clearly performance mnist leveling took five year halve year halve imagenet may getting close limit deeplearning performance may easily humanlevel speech recognition rise deep learning speech recognition already progressing rapidly though leveling conversational speech well accuracy rate advent contextdependent deep neural network hidden markov model produced discontinuity performance recently accuracy continued progress nuance dictation software company show steadily improving performance word recognition present day plausibly exponential trend baidu progressed even faster speech recognition mandarin best performance nist switchboard set phone conversation due microsoft worderror rate translation machine translation evaluated bleu score compare translation reference via overlap word ngrams bleu score range perfect translation tilde bleu score range google microsoft performing similarly worse google came new neuralnetworkbased version translation tool bleu score english french english german respectively human evaluation however rated neural machine translation better openmt machine translation contest top bleu score arabictoenglish chinesetoenglish daritoenglish farsitoenglish koreantoenglish urdutoenglish top bleu score arabictoenglish score chinesetoenglish score correspond improvement machine translation apart google improvement human rating celebrated new york time magazine article unclear whether neural network actually improve bleu score hand scoring metric may imperfect match translation quality natural language processing association computational linguistics wiki number state art performance various natural language processing task sat analogy becoming accurate time roughly linearly present day roughly accurate average u college applicant none deep learning technique question answering multiple choice sentence answer question improved roughly steadily time discontinuity around neural net start used discontinuous advance best model paraphrase identification recognizing one paragraph paraphrase another seems risen steadily past decade special boost due deep learning technique top performance deep learning matrix factorization nlp task long enough history graph seems clear indication deep learning performs trendline trend relative processing power time performanceaccuracy return processing power seem differ based problem domain image recognition see sublinear return linear improvement processing power gain leveling time computer reach surpass humanlevel performance may mean simply image recognition nearlysolved problem nlp see roughly linear improvement time machine translation unclear see trend improvement time suggest sublinear return processing power confident game see roughly linear return linear improvement processing power mean exponential improvement performance time moore law increasing investment ai would suggest farsuperhuman ability likely possible gamelike problem domain imply deep learning seeing deep learning algorithm provide improvement narrow ai across many type problem domain deep learning provides discontinuous jump relative previous machine learning ai performance trendlines image recognition speech recognition strategy game natural language processing machine translation arcade game ambiguous machine translation metric differ arcade game predeeplearning comparison speculative thought perhaps deep learning best problem domain oriented around sensory data image sound rather symbol current neural net architecture like convolutional net mimic structure sensory cortex brain think one would expect result arcade game would analogous motor cortex perceptual control theory suggests something similar qlearning may going motor learning though learn confident mammalian motor learning turn look like qlearning expect deep reinforcement learning especially good arcade game robotics deep neural network especially good visual audio classification deep learning really proven better trendline strategy game go chess natural language task might wonder thing human concept symbol principle traditional tool higher intellect skill show highly gloaded task deep learning current algorithm obviously hardcoding rule ai grave limitation failure hardcoded system caused several ai winter may also limitation nonconceptual pattern recognition continued difficulty automating languagebased task may related issue mile brundage point progress far largely toward demonstrating general approach building narrow system rather general approach building general system progress toward former entail substantial progress toward latter latter requires transfer learning among element yet atarialphago moment important area keep eye going forward may especially relevant economicsafety purpose agree general ai system far know exist today milliondollar question whether built algorithm similar used today fundamental algorithmic advance yet discovered far think empirical evidence world deep learning indicate today deep learning algorithm headed general ai near future discontinuous performance jump image recognition speech recognition advent deep learning suggestive evidence clear whether beyond return processing power far find estimate trend crossdomain generalization ability whether deep learning algorithm generalpurpose perhaps theoretical question say recent ai progress offer reason suspect already like like loading related
460,Lobsters,visualization,Data Visualization,The physics of trains in Assassin's Creed Syndicate,http://www.gamasutra.com/blogs/BartlomiejWaszak/20170130/290322/The_physics_of_trains_in_Assassins_Creed_Syndicate.php,physic train assassin creed syndicate,introduction figure note controlling locomotive basic simulation step highlevel step simulation one train simulation collision collision response coupling chain correction sharp curve startup train figure friction figure figure final remark summary thanks reference http enwikipediaorgwikibuffersandchaincoupler http wwwcscmuedubaraffpbm,following blog post unless otherwise noted written member community thought opinion expressed writer gamasutra parent company article would like present custom simulator created model physic train assassin creed syndicate game set year london time industrial revolution steam steel marked progress society great pleasure work unique opportunity bringing life world victorian era london attention historical realworld detail led u creation physicallybased simulation introduction common day write physic engine however situation useful create physical simulator ground situation might occur specific condition need new gameplay feature part simulated game world situation came across developing railway system whole management train running london standard coupling system train europe presented figure left system used train london started work train quickly realized create interesting interaction behavior physically simulating chain instead rigidly connected wagon connected movable coupling chain drive movement wagon train figure chain coupler detail left source wikipedia coupling system assassin creed syndicate right couple advantage physic solution case curved railway track easier manage simulator force physic middleware use constraint limit movement onedimensional space rather risky solution could prone every possible instability causing wagon fly air however still wanted detect collision wagon full space movable coupling chain give freedom gameplay design comparison real world need much distance wagon space player camera perform different action like climbing top wagon also coupling chain much le tightly connected real world free relative movement wagon allows u handle sharp curve railway line easily collision detection wagon prevents interpenetration system easily support wagon decoupling special handling friction collision decoupled wagon rest train example train stop suddenly decoupled wagon still rolling finally hitting train video physic train action start section explaining first control train note simplify discussion use word tractor describe wagon closer locomotive word trailer describe wagon closer end train controlling locomotive simple interface control locomotive consists requesting desired speed locomotive setdesiredspeed float desiredspeed float timetoreachdesiredspeed railway system manager submits request every train running game execute request calculate force needed generate desired acceleration use following formula newton second law f computed force locomotive mass timetoreachdesiredspeed force calculated send wagonphysicsstate engine force drive locomotive information next section physical behavior train depend example number wagon wagon colliding creating chain reaction pushing train forward need way ensure desired speed request submitted fully executed achieve reevaluate force needed reach desired speed every second way sure request submitted finally reached result able always satisfy timetoreachdesiredspeed exactly however small deviation time acceptable game also keep speed locomotive given setdesiredspeed request allow coupling chain constraint change speed locomotive compensate lack constraint impulse created special method model dragging force section startup train finally allow collision response modify speed locomotive except train decelerates zero speed next section describe basic level physical simulation basic simulation step structure used keep physical information every wagon locomotive struct wagonphysicsstate value advanced integration distance along track momentum railwaytrack mtrack float mlinearmomentum speed calculated momentum float mlinearspeed current value force float mengineforce float mfrictionforce world position rotation obtained directly railway track vector mworldposition quaternion mworldrotation constant simulation float mmass see angular velocity even check collision wagon using box rotation always aligned railway line train moving world along railway line need keep information angular movement physic also nature simulation enough use float store physical quantity force momentum speed every wagon use euler method basic simulation step dt time one simulation step void wagonphysicsstate basicsimulationstep float dt calculate derivative float dposition mlinearspeed float dlinearmomentum mengineforce mfrictionforce update momentum mlinearmomentum dlinearmomentum dt mlinearspeed mlinearmomentum mmass update position float distancetotravelduringthisstep dposition dt mtrackmovealongspline distancetotravelduringthisstep obtain new position rotation railway line mworldposition mtrackgetcurrentworldposition mworldrotation mtrackaligntospline use three main equation implement basicsimulationstep equation state velocity derivative position force derivative momentum dot symbol indicate derivative respect time third equation defines momentum p multiplication mass velocity implementation applying impulse wagon addition operation current momentum void wagonphysicsstate applyimpulse float amountofimpulse mlinearmomentum amountofimpulse mlinearspeed mlinearmomentum mmass see immediately changing momentum recalculating speed easier access value done way basic method advance time simulation move forward part algorithm highlevel step simulation one train pseudo code full simulation step one train part update train startup velocity part b wagon train applydeferredimpulses part c wagon train updatecouplingchainconstraint part wagon train updateengineandfrictionforces simulationstepwithfindcollision collisionresponse important mention written pseudocode every part executed consecutively wagon one train part implement specific behavior related startup train part b applies deferred impulse come collision part c coupling chain solver sure exceed maximum distance chain part responsible engine friction force basic simulation step integration handling collision simulation algorithm always keep order update wagon train start locomotive proceed consecutively along every wagon first one last one train able use specific property simulator make calculation easier formulate use characteristic especially collision contact consecutively simulate every wagon movement check collision one wagon every part highlevel simulation loop explained detail following section however importance start part simulationstepwithfindcollision simulation collision code function simulationstepwithfindcollision wagonphysicsstate simulationstepwithfindcollision wagonphysicsstate initialstate float dt wagonphysicsstate newstate initialstate newstatebasicsimulationstep dt bool iscollision iscollisionwithwagonaheadorbehind newstate iscollision return newstate return findcollision initialstate dt first perform tentative simulation step using full delta time calling newstatebasicsimulationstep dt checking new state collision bool iscollision iscollisionwithwagonaheadorbehind newstate method return false use newly computed state directly collision execute findcollision find precise time physic state collision event perform task using binary search similar manner loop find precise time collision physic state wagonphysicsstate findcollision wagonphysicsstate currentphysicsstate float timetosimulate wagonphysicsstate result currentphysicsstate float mintime float maxtime timetosimulate int step step maxsteps step float testedtime mintime maxtime wagonphysicsstate testedphysicsstate currentphysicsstate testedphysicsstatebasicsimulationstep testedtime iscollisionwithwagonaheadorbehind testedphysicsstate maxtime testedtime else mintime testedtime result testedphysicsstate return result every iteration get u closer precise time collision also know need check collision one wagon directly ahead u behind u case backward movement method iscollisionwithwagonaheadorbehind us collision test two oriented bounding box obb provide result checking collision full space using mworldposition mworldrotation wagonphysicsstate collision response found state physic collision event need calculate appropriate reaction impulse j apply tractor trailer wagon first start calculation current relative velocity wagon collision similar value relative velocity collision event velocity collision response impulse j applied velocity calculated using velocity collision impulse j follows wagon mass ready define coefficient restitution r coefficient restitution describes bouncy collision response value r mean total loss energy value r mean loss energy perfect bounce substituting equation previous formula get organizing equation get impulse j finally calculate impulse j game use r coefficient restitution apply impulse j tractor impulse j trailer however use deferred impulse tractor already processed integration tractor want change current velocity defer impulse next simulation frame create significant change visual behavior one frame difference hard notice deferred impulse collected wagon applied part b next simulation frame video showcasing stop train coupling chain think coupling chain distance constraint wagon keep distance constraint satisfied compute apply appropriate impulse change velocity start calculation distance evaluation next simulation step every two wagon connected coupling chain calculate distance travel upcoming simulation step compute distance easily using current velocity inspecting integration equation x distance travel v current velocity simulation step time calculate formula distance tractor travel upcoming simulation step distance trailer travel upcoming simulation step futurechainlength bigger maximum length coupling chain distance constraint broken next simulation step let assume distance constraint broken value positive case satisfy distance constraint need apply impulse use wagon mass scale appropriate impulse want lighter wagon move farther heavier wagon move le let u define coefficient follows please notice want trailer move additional distance tractor distance next simulation step accomplish applying impulse need multiply given distance mass divided simulation step time use additional symbol c defined follows simplify impulse see equal magnitude opposite sign applying impulse wagon connected coupling chain break distance constraint next simulation step impulse modify velocity way integration formula end position satisfying maximum distance chain still computing impulse one coupling chain possibly break maximum chain distance wagon train would need rerun method several time converge final solution however practice run loop enough achieve good global result execute calculation consecutively every coupling chain train starting locomotive always apply impulse wagon connected chain one exception rule never apply impulse locomotive want locomotive keep speed apply impulse first wagon locomotive impulse applied trailer need compensate whole required distance case correction sharp curve simulation run along line problem perfect fit coupling chain hook wagon running sharp curve situation world meet game world coupling chain finally placed world impulse compensate distance constraint applied simplified world correct final placement chain hook slightly modify maximumlengthofcouplingchain depending relative angle direction tractor chain bigger angle smaller maximum available length chain first compute dot product two normalized vector normalized direction coupling chain forward direction tractor use following formula finally compute distance want subtract physical length coupling chain float distanceconvertedfromcosangle clamp float distancesubtract clamp distanceconvertedfromcosangle see calculate exact value angle use cosine angle directly save u processing time sufficient need also use additional number based empirical test limit value within reasonable threshold finally use distancesubtract value starting satisfy distance constraint coupling chain maximumlengthofcouplingchain chainphysicallength distancesubtract turn formula work well practice make coupling chain hanging correctly hook even sharp turning along railway curve describe specific case startup train startup train mentioned allowing coupling chain impulse change speed locomotive however still need way simulate effect dragging force especially startup train locomotive start drag wagon also locomotive slow according dragging mass wagon achieve modify velocity train accelerates zero speed start calculation based law conservation momentum law state momentum system constant unless external force act system mean case momentum dragging another wagon equal momentum coupling chain pulling another wagon case expand following formula mass ith wagon mass locomotive current speed locomotive assume already moving wagon speed locomotive speed system dragging assume dragged wagon speed use additional symbol defined follows simplify formula way value looking using formula simply set new velocity locomotive wagon n currently dragged coupling chain figure see schematic description locomotive two wagon start drag third wagon figure startup train video startup train friction compute friction force variable mfrictionforce wagonphysicsstate using formula value chosen series experiment better support gameplay constant friction force value additionally scaling according current speed speed graph standard friction force wagon figure standard friction force wagon use different friction value detached wagon figure friction force detached wagon additionally want allow player easily jump wagon short amount time detaching use smaller value friction scale time passing detaching event final value friction detached wagon given time passed detaching event measured second see use friction first second gradually increase final remark train also movable bumper front back every wagon bumper generate physical force implemented behavior additional visual element move according detected displacement neighbor bumper another wagon also notice checking collision different train simulator responsibility railway system manager adjust train speed prevent collision simulation check collision wagon within one train important mention highquality perception train game sound special effect play important role calculating different quantity derived physical behavior control sound fxs like sound tension coupling chain bumper hit deceleration etc summary presented custom physicallybased simulator train created assassin creed syndicate great pleasure big challenge work part game openworld experience lot gameplay opportunity different interaction creates even challenge deliver stable robust system end rewarding observe train running game contributing final quality player experience thanks would like thank james carnahan ubisoft quebec city nobuyuki miura ubisoft singapore reviewing article useful advice would like thank colleague ubisoft quebec city studio pierre fortin let start physic train inspired push forward dave tremblay technical advice james carnahan every talk physic together matthieu pierrot inspiring attitude maxime begin always happy start talk programming vincent martineau every help received would like also thank martin bedard marc parenteau jonathan gendron carl dumont patrick charland emil uddestrand damien bastian eric martel steve blezy patrick legare guillaume lupien eric girard every person worked assassin creed syndicate making incredible game reference buffer chain coupler http enwikipediaorgwikibuffersandchaincoupler andrew witkin david baraff michael ka introduction physically based modeling http wwwcscmuedubaraffpbm fletcher dunn ian parberry math primer graphic game development second edition crc press taylor francis group david h eberly game physic second edition morgan kaufmann elsevier
461,Lobsters,visualization,Data Visualization,Combining The BuzzFeed Trumpworld Graph with Government Contracting Data in Neo4j,http://www.lyonwj.com/2017/01/30/trumpworld-us-contracting-data-neo4j/,combining buzzfeed trumpworld graph government contracting data,combining buzzfeed trumpworld graph government contracting data buzzfeed trumpworld graph buzzfeed released dataset michael hunger excellent blog post working trumpworld graph adding u government contracting data usaspendinggov usaspendinggov data dictionary usaspendinggov data labeled property graph model loading data first vendor contract appears organization trumpworld second query loading contract vendor appears organization trumpworld analyzing trumpworld usaspending cabinet nominee rex tillerson james mattis connection trump allows secret service rent space trump tower find sandbox trumpworld example spin trumpworld graph instance signing sanbox suggested area research learn cabinet appointee connection extending dataset data source could include graph enhance understanding use centrality algorithm find influencers network area interested exploring work,combining buzzfeed trumpworld graph government contracting data jan one power working graph database ability combine disparate datasets query across today look combine buzzfeed trumpworld graph data federal government contract usaspendinggov allowing u examine government contract awarded organization appear trumpworld buzzfeed trumpworld graph week ago buzzfeed released dataset people organization connection donald trump calling trumpworld dataset wanted make data available public part work also solicit feedback community help find missing connection buzzfeed trumpworld dataset people organization connection around donald trump colleague michael hunger wrote import script loading data also wrote excellent blog post working trumpworld graph read yet start post take work build integrating data u government contract working data write query show second degree network jared kushner match network person name jared kushner return network second degree network jared kushner adding u government contracting data usaspendinggov data recipient federal government contract available online usaspendinggov data download page usaspendinggov started contract issued agency fiscal year may need reference data dictionary usaspendinggov data row csv file represents contract awarded organization issued federal government agency actually row represents transaction could multiple transaction per contract let simplify thinking think row contract looking data dictionary see row lot field actually lot information encoded row mainly interested organization awarded contract parent organization awardee subsidiary amount contract agency issuing contract purpose contract use cypher load csv functionality exaimine first row csv file return specifically column interested load contractor csv file return first row column interested load csv header file row row limit return rowpiid piid rowfiscalyear fiscalyear rowvendorname vendorname rowmodparent parentorg rowdollarsobligated amount rowcontractingofficeagencyid agency rowproductorservicecode purpose found row quote escaping quite right csv parser able parse row correctly removed row using sed example sed see contract issued federal prison system various vendor could certainly import entire dataset run interesting query analysis specifically interested finding contract awarded vendor appear trumpworld dataset let see find need match organization node name property organization equal vendorname column csv file look row find match load csv header file row row limit match organization oname rowvendorname return rowpiid piid rowfiscalyear fiscalyear rowvendorname vendorname rowmodparent parentorg rowdollarsobligated amount rowcontractingofficeagencyid agency rowproductorservicecode purpose see duke university showing vendor mean duke university must trumpworld data duke university connected donald trump match p duke organization donald person dukename duke university donaldname donald j trump return p limit donald trump connected duke university see case vendorname parentorg value mean duke university part larger organization parent company information provided dun bradstreet also interested finding contract awarded subsidiary company trumpworld would also help u identify potential conflict interest find contract one awarded vendor vendor subsidiary company appears trumpworld need match organization node name property equal parentorg column vendorname equal parentorg find example need look row first worry million row csv file load csv header file row row limit match organization oname rowmodparent rowmodparent rowvendorname return rowpiid piid rowfiscalyear fiscalyear rowvendorname vendorname rowmodparent parentorg rowdollarsobligated amount rowcontractingofficeagencyid agency rowproductorservicecode purpose labeled property graph model might model contract data graph let examine third contract table model government contract entity want model organization contract government agency note overlap organization allows u combine two datasets query across loading data ready import data trumpworld graph end running two import query first vendor contract appears organization trumpworld load csv header file row match organization oname rowvendorname rowpiid piid rowfiscalyear fiscalyear rowvendorname vendorname rowmodparent parentorg tofloat rowdollarsobligated amount substring rowcontractingofficeagencyid agency rowproductorservicecode purpose merge agency name agency merge c contract piid piid create set camount amount cpurpose purpose cfiscalyear fiscalyear sum transaction per contract match set camount camount amount merge issuedcontract c merge c awardedcontract second query loading contract vendor parent company appears organization trumpworld load csv header file row match parent organization parentname rowmodparent rowmodparent rowvendorname parent rowpiid piid rowfiscalyear fiscalyear rowvendorname vendorname rowmodparent parentorg tofloat rowdollarsobligated amount substring rowcontractingofficeagencyid agency rowproductorservicecode purpose merge vo organization name vendorname merge agency name agency merge c contract piid piid create set camount amount cpurpose purpose cfiscalyear fiscalyear sum transaction per contract match set camount camount amount merge issuedcontract c merge c awardedcontract vo merge parent parentorg vo analyzing trumpworld usaspending imported usaspending data let take look merchandise mart property inc contract since trumpworld graph logical question might ask connection contract donald trump using shortestpath function cypher match c contract piid match c issuedcontract agency match donald person name donald j trump match pshortestpath donald c return shortest path specific contract donald trump let digest result query graph visualization showing u contract awarded federal prison system lease facility awarded real estate company whose parent company investor company whose ceo soninlaw close advisor donald trump interesting potential conflict interest know think pretty cool find kind connectons using cypher course one shortest path may others let find shortest path connecting contract donald trump match c contract piid match c issuedcontract agency match donald person name donald j trump match pallshortestpaths donald c return shortest path specific contract donald trump expand length path bit see potentially interesting connection match c contract piid match c issuedcontract agency match donald person name donald j trump match p donald c return shortest path specific contract donald trump cabinet nominee connection trump cabinet nominee contract vendor parent company contract vendor match donald person name donald j trump r nominee cabinet person match p cabinet organization c contract agency return connection trump cabinet nominee government contract let take closer look connection specific cabinet nominee government contract rex tillerson rex tillerson trump nominee secretary state also former ceo chairman exxon mobil let explore connection trumpworld match p person name rex tillerson organization name exxon mobil corporation path c contract agency return connection rex tillerson government contract exxon mobil see exxon mobil awarded two contract one department army another department navy however modeling parent company well see subsidiary exxon mobil mobil oil guam inc awarded significant contract department navy defense logistics agency james mattis james mattis trump nominee secretary defense match p person name james mattis organization path c contract agency return james mattis direct connection company vendor several government contract issued department oversees secretary defense connection trump direct connection trump organization receiving government contract match p person pname contains donald j trump match p organization awardedcontract c contract c issuedcontract agency return government contract awarded company direct connection donald trump course contract allows secret service rent space trump tower protecting trump associate find data query used public feel free reproduce data instance open source free use get make working data even easier created sandbox trumpworld example addition embedded browser guide working dataset introducing cypher interesting query applying social network analysis technique dataset etc spin trumpworld graph instance signing sanbox sandbox instance includes browser guide working data idea get started suggested area research learn cabinet appointee connection match p r b rconnection contains nominee return p extending dataset data source could include graph enhance understanding campaign contribution fec nonprofit foundation disclosure data combine related data littlesisorg involuntary registry add people involved election campaign add detailed information organization setup location leadership deal eg querying apis like opencorporates integrating data aleph occrp data portal use centrality algorithm find influencers network example examine connection people highest pagerank score network find first degree connection people highest pagerank score match c person collect c people call apocalgopagerank people yield node score node score order score limit match p node return p area interested exploring filtering name connection type explore network around key people organization example find second degree network goldman sachs match organization oname contains goldman sachs match p return p work hopefully post demonstrates think two important benefit using graph database data journalism type analysis intuitiveness data model query language thinking data term graph allows focus connection data often interesting part come finding story data ability extend data model combining datasets flexibility property graph model allows easily combining datasets querying across trumpworld usaspending still much work done data idea improvement vendor organization matching done using exact string match certainly company found due spelling inconsistency exxonmobil v exxon mobil corp v exxon mobil corporation improve matching rate could resolve dun bradstreet dun number organization trumpworld since usaspending data includes dun number explore using fuzzy string matching find high probability match adding loan grant information addition grant usaspending includes information loan grant recipient federal government datasets dataset would interesting add campaign finance foundation nonprofit data
462,Lobsters,visualization,Data Visualization,htop Explained Visually,https://codeahoy.com/2017/01/20/hhtop-explained-visually/,htop explained visually,htop top upper section higher resolution lower section comparison top htop,htop interactive process viewer system monitor one favorite linux tool use regularly monitor system resource take top put steroid get htop htop awesome visual interface also interact using keyboard screen pack lot information daunting look tried find nice infographic explain number value color coded bar mean find hence decided make one christmas break first launch htop greeted colorful interface showing list process running system normally ordered amount cpu usage ordered highest lowest also show status cpu usage physical swap memory lot information screenshot explain separated interface upper lower section enough room annotate want know used photoshop annotate screenshot let start upper section see higher resolution please click image lower section htop hope found post useful comparison top htop comparing different feature property using macos please note htop come installed default install easily using brew open terminal type installation complete launch typing htop terminal note sudo needed give htop required access macos linux sudo required next time
463,Lobsters,visualization,Data Visualization,A useless analysis of OS X release dates,http://robservatory.com/a-useless-analysis-of-os-x-release-dates/,useless analysis o x release date,,updated republished macos supplemental update skip unless really really care macos release originally published november break table showing major release macos previously mac o x public beta latest public version macos august release total note click symbol read apple release note given update following culled apple support downloads page date may bit know certain something incorrect please let know get fixed scroll see entry year date day version size comment aug gb jul gb jun gb may gb apr gb mar gb jan gb dec gb oct gb oct mb info page oct gb catalina need permission sep gb aug gb aug mb jul gb may gb mar gb jan gb dec gb nov gb macbook air oct gb sep gb mojave need permission release aug gb touch bar jul gb touch bar mbp jul gb airplay jun gb message icloud mar gb sortable safari bookmark feb su mb indian charactermessages crash fix jan gb jan su mb spectre meltdown fix dec gb oct gb oct su mb address two security issue sep gb high sierra higher mountain jul gb may gb mar gb night shift jan gb dec gb oct gb sep gb sierra still mountain jul mb may mb mar gb jan mb dec gb oct gb sep gb el capitan go climb something aug gb jun gb apr su mb supplemental update apr gb includes photo app jan mb nov mb oct gb yosemite surfer sep mb jun mb may mb feb mb dec mb oct gb maverick big cat oct su mb supplemental update sep mb jun mb mar mb oct su mb supplemental update sep mb aug mb jul gb mountain lion app store oct su mb supplemental update sep gb released w may mb feb gb combo updater available oct mb icloud enabled aug mb jul gb lion app store usb stick later jun mb app store readied lion mar mb jan mb say app store nov mb jun mb mar mb nov mb sep mb aug gb snow leopard first intelonly release aug mb may mb dec mb sep mb jun mb may mb feb mb combo updater nov mb oct gb leopard first universal binary release nov mb go jun mb mar mb sep mb jun mb apr mb feb mb jan mb first intelcapable release oct mb jul mb may mb apr gb tiger apr mb feb mb dec mb combo updater nov mb aug may mb combo updater mar mb combo updater dec mb nov mb oct gb panther oct mb aug firstgen may mb apr mb feb mb dec mb nov mb sep mb update available aug gb jaguar jun mb combo updater apr mb feb mb dec mb nov mb sep mb puma jun mb may mb may mb released replaced see comment apr mb mar mb cheetah sep mb public beta note day column reflects number day release entry may appear chronological order ie shown oct nov keep version number proper order even older o received update major new release came happened time year random note updated original post starting public beta macos macos release major minor figure includes every macos release two far tell never released believe update oneday somewhat odd publicly discussed counted wrong either please correct july macos release date day since public beta released average seen sort update every day shortest time period two release counting oneday releaseandreplace six day quickly supplemental update came release longest time period two minor release day long waited update smallest update largest noncombo nonmain o release update entry size given release indicates unable find size feel free contact help replace entry gratuitous release version number release year special thank go mr ziebell providing size value veryold minor update benton quest providing size info major release snow leopard see benton comment want nicely detailed history early release
464,Lobsters,visualization,Data Visualization,Parable of the Polygons,http://ncase.me/polygons/,parable polygon,story harmless choice make harmful world small individual bias lead large collective bias dynamic model segregation test schelling segregation model malefemale difference computer simulation petrie multiplier plz diversify panel explorable explanation procedural rhetoric black girl code girl code code code liberation nicky patreon wired washington post boingboing creative common killscreen jayisgames hacker news metafilter new york magazine atlantic citylab salon polygon gamasutra spanish french german portuguese brazilian japanese chinese simplified chinese traditional polish italian hungarian dutch hindi czech russian arabic persian ukrainian polygon pentagon polygon snap playthrough video,story harmless choice make harmful world little cuties triangle square slightly shapist slightly fact every polygon prefers diverse crowd move unhappy immediate neighborhood ok ca nt move unhappy neighbor got one simple rule wan na move le neighbor like harmless right every polygon would happy mixed neighborhood surely small bias ca nt affect larger shape society much well drag drop unhappy polygon nobody unhappy move random empty spot nt think much shape society becomes super segregated daaaaang sometimes neighborhood becomes square fault triangle wan na stick around triangular neighborhood would welcome square ca nt help square ai nt interested next bit unhappy shape automatically move random empty spot also graph track much segregation time run simulation time happens good shape nice shape yet though every individual slight bias entire shape society crack split small individual bias lead large collective bias equality unstable equilibrium smallest bias push whole society past tipping point well taught shape zero bias feeling particularly nasty today bias use slider adjust shape individual bias notice much segregated thing become increase bias beyond threshold seems reasonable shape prefer minority yeah turn everyone bias zero right haha nope real world nt start anew random shuffling citizen every day everyday shuffling world start segregated happens lower bias see nt happen change mixing back together world bias ever existed unbiased nt enough gon na need active measure shape wanted seek lil variety woah even though polygon would okay neighbor like mix together let see play larger scale change amount bias antibias shape world start segregated happens shape demand even smallest bit diversity take change perception acceptable environment look like fellow shape remember triangle v square deciding want world look like settling le get box f r e n h p hint nt move straight box keep pair close together first going isolating working together step step get finally big ol sandbox play around wrapping small individual bias large collective bias someone say culture shapist saying individual shapist attacking personally past haunt present bedroom floor nt stop dirty coz stopped dropping food carpet creating equality like staying clean take work always work progress demand diversity near small bias created mess small antibiases might fix look around friend colleague conference attending triangle missing amazing square life unfair everyone reach beyond immediate neighbor thank playing blog post cute segregation sim based work nobel prizewinning game theorist thomas schelling specifically paper dynamic model segregation built top showed small demand diversity desegregate neighborhood word gave model happy ending schelling model get general gist course real life nuanced might enjoy looking realworld data wav clark paper test schelling segregation model mathematical model institutionalized bias malefemale difference computer simulation show small gender bias compound move corporate ladder petrie multiplier show attack sexism tech attack men today big moral demanding bit diversity space make huge difference overall look plz diversify panel initiative overrepresented speaker pledge speak panel without diverse representation playable post inspired bret victor explorable explanation ian bogost procedural rhetoric donate diversity black girl code give coding lesson girl color girl code teach high school girl code code help black latinaos get tech code liberation free workshop help woman make videogames nicky patreon make public domain playables one thank betareaders andrea astrid catherine chris emily glen jocelyn laura marc marko zak also seen wired washington post boingboing creative common killscreen jayisgames hacker news metafilter new york magazine atlantic citylab salon polygon gamasutra translation spanish french german portuguese brazilian japanese chinese simplified chinese traditional polish italian hungarian dutch hindi czech russian arabic persian ukrainian thing based thing polygon pentagon polygon snap playthrough video
465,Lobsters,visualization,Data Visualization,Analyzing the BuzzFeed TrumpWorld Dataset with Neo4j,https://neo4j.com/blog/buzzfeed-trumpworld-dataset-neo4j/,analyzing buzzfeed trumpworld dataset,update trumpworldgraph github repository sanchez castro help u map trumpworld panama paper investigation data journalism accelerator program graph database digging trumpworld dataset buzzfeed article publicly readable document download start interactive variant graph gist cypher detailed trumpworld graph data import data constraint connect organization organization tab connect people organization tab connect people people tab import result running simple graph database query mostconnected organization seconddegree kushner network bank involved organization people donald trump connection vladimir putin nominee trump cabinet nominee influence fun graph query extending trumpworld graph littlesisorg citizenauditorg opencorporates aleph occrp data portal get touch u demonstrate visualize data software new world graph technology click get free copy reilly book discover harness power graph database next project get free copy,update google doc source structure changed updated import statement query trumpworldgraph github repository came across tweet sanchez castro happy support part buzzfeed article help u map trumpworld four investigative journalist john templon alex campbell anthony cormier jeremy singervine asked public help map analyze data investigated confirmed published surrounding business connection donald j trump asking public use data find connection may missed give u context currently understand hope help u public learn trumpworld unprecedented array business might affect public policy probably know used investigative journalism notably collaborative work international consortium investigative journalist icij panama paper investigation also investigative organization journalist support kind work launched data journalism accelerator program last year help investigative data journalist better leverage graph database technology small contribution toward mapping analyzing first part trumpworld dataset much connected data analysis possible outline end article digging trumpworld dataset buzzfeed article point google spreadsheet collected verified researched data connection organization people related trump group listed separate tab data fortunately available publicly readable document use old trick downloading csvtsv using download url load csv import dataset want download start take minute run query local instance look interactive variant post graph gist data science notebook graph example query blog post use cypher graph query language want run dataset using docker container colleague mark needham prepared one use docker run open usual http access data let look data first sample http formatcsv url load csv header url row return row organization row organization b rowconnection row source limit see quite straightforward two column nodeentities ie organization one type connection along source information represent relationship connection information quite verbose regular enough serve relationshiptype either simplify demonstrated detailed trumpworld graph use one generic relationshiptype per mapping sake simplicity organization connectedto organization person involvedwith organization person relatedto person store connection source information relationship simple model hand go ahead import data graph following basic pattern get data csv file create find merge two node connect relationship data import data constraint want duplicate entry organization people set two constraint create constraint organization assert oname unique create constraint p person assert pname unique connect organization organization tab http formatcsv url load csv header url row merge organization name row organization merge organization name row organization b create con connectedto set conconnectionrowconnection consourcerow source connect people organization tab http formatcsv url load csv header url row merge p person name rowperson merge organization name roworganization create p con involvedwith set conconnectionrowconnection consourcerow source connect people people tab http formatcsv url load csv header url row merge person name row person merge person name row person b create con relatedto set conconnectionrowconnection consourcerow source import result total imported node relationship full trumpworld graph beauty querying data raise view limit sidebar config go fullscreen zoom running simple graph database query mostconnected organization organization connection within trumpworld dataset mainly match organization r return oname count collect distinct type r type order count desc limit oname count type thrive capital connectedto involvedwith wall street llc involvedwith connectedto djt holding llc involvedwith connectedto kushner company involvedwith connectedto trump hotel casino resort involvedwith connectedto seconddegree kushner network match network person name jared kushner return network bank involved organization people match bank organization bankname contains bank return donald trump connection vladimir putin finally let look shortest path vladimir putin donald trump match vp person name vladimir putin dt person name donald j trump match path allshortestpaths vp dt return path expected shortest path putin trump officially go rex tillerson also see missing direct connection trump tillerson current nominee u secretary state see next nominee one bit missing information reported back buzzfeed nominee trump cabinet match p person con relatedto conconnection contains nominee return pname conconnection order split pname desc limit pname conconnection ryan zinke nominee secretary interior jeff session nominee attorney general wilbur ross nominee secretary commerce andy puzder nominee secretary labor scott pruitt nominee administrator environmental protection administration epa see rex tillerson second list sorted reverse last name nominee influence finally look combined influence nominee exert within trumpworld graph least data match organization conconnection contains nominee return p see individual involved organization either work control indebted otherwise involved donald trump fun graph query conclude want demonstrate graph database quite good quickly finding transitive relationship within data first looked longest shortest path graph checking cross product roughly pair people finished little three second laptop match person person id id match p shortestpath return length p order length p desc limit length p name victor heggelman name zhuo ran name victor heggelman name chris christie name tim mol name zhuo ran name rom downey name zhuo ran name chris christie name rom downey name lev leviev name jose garcia pick two lev leviev rom downey probably little real life except wearing diamond see connects graph match person name lev leviev person name rom downey match path allshortestpaths return path extending trumpworld graph many way graph extended work coming week idea combine related data littlesisorg involuntary registry add fec campaign financing information add foundation detail data citizenauditorg add people involved election campaign add seconddegree organization related people graph donald j trump add detailed information organization setup location leadership deal eg querying apis like opencorporates integrating data aleph occrp data portal want collaborate contribute please get touch u partner linkurious inspired first part work demonstrate visualize data software new world graph technology click get free copy reilly graph database book discover harness power graph database next project get free copy
466,Lobsters,visualization,Data Visualization,Playing with 80 Million Amazon Product Review Ratings Using Apache Spark,http://minimaxir.com/2017/01/amazon-spark/,playing million amazon product review rating using apache spark,amazon statistical analysis million amazon review apache spark free edx course amazon microsoft azure simple python script amazon product review dataset inferring network substitutable complementary product userid itemid rating timestamp category sparklyr dplyr panda exploratory analysis r notebook review bombing rating breakdown time distribution average score marginal review first comment reddit post summary r notebook github repository patreon,amazon product review rating important business customer amazon often make purchasing decision based review single bad review cause potential purchaser reconsider couple year ago wrote blog post titled statistical analysis million amazon review wellreceivedback limited review attempting process data caused outofmemory issue r code took hour runapache spark make processing gigantic amount data efficient sensible become popular past couple year good tutorial using spark python recommend free edx course although data scientist often use spark process data distributed cloud computing via amazon microsoft azure spark work fine even typical laptop given enough memory post use macbook ram allocated spark driver wrote simple python script combine percategory ratingsonly data amazon product review dataset curated julian mcauley rahul pandey jure leskovec paper inferring network substitutable complementary product result gb csv would definitely open microsoft excel truncated combined dataset includes userid user leaving review itemid indicating amazon product receiving review rating user gave product timestamp indicating time review written truncated day also infer category reviewed product name data subsetafterwards using new sparklyr package r easily start local spark cluster single sparkconnect command load entire csv cluster second single sparkreadcsv commandthere million record total dataset output helpfully report record performing advanced query traditional tool like dplyr even python panda dataset would take considerable amount time executewith sparklyr manipulating actuallybigdata easy performing analysis dataset record order magnitude easier python approach taught edx class mentioned exploratory analysis view r code used process data spark generate data visualization r notebook unique user provided review dataset user written one reviewrelatedly unique product dataset one reviewafter removing duplicate rating added feature rating may help illustrate review behavior changed time ranking value indicating review author given review written review author review author etc ranking value indicating review product given review received review product review product etc month year review madethe first two added feature require large amount processing power highlight convenience spark speed fact spark us cpu core default typical rpython approach singlethreaded change cached spark dataframe dft wanted determine amazon product category receives best review rating average aggregate data category calculate average rating score category sort thanks power spark data processing manymillionsofrecords take secondsdfagg dft groupby category summarize count n avgrating mean rating arrange desc avgrating collect visualized chart form using digital musiccd product receive highest review average video game cell phone receive lowest review average rating range make intuitive sense digital music cd type product know exactly getting chance random product defect cell phone accessory variable quality shady thirdparty seller video game particular also prone irrational review bombing minor grievance refine visualization splitting bar percentage breakdown rating could plotted pie chart category however stacked bar chart scaled look much cleanerthe new visualization help support theory top category significantly higher percentage rating bottom category much lower proportion rating inverse hold true bottom categorieshow breakdown changed time factor play rating breakdown timeperhaps advent binary likedislike behavior social medium translated change behavior review system rating breakdown review written month january july voting behavior oscillates slightly time clear spike inflection point dash theorydistribution average scoreswe look global average amazon product score ie customer see buy product user give rating would expect distribution match deviation would interestingproducts average looking product atleast rating overall ratingwhen looking similar graph overall rating given user rating minimum average rating slightly higher primary difference two distribution significantly higher proportion amazon customer giving review normalizing overlaying two chart clearly highlight discrepancythe marginal reviewa post ago discussed first comment reddit post dramatically influence subsequent comment user rating behavior change making review typical rating behavior different first review given product rating breakdown nth amazon review user give first user review slightly higher proportion review subsequent review otherwise voting behavior mostly overtime although user increased proportion giving review instead review get comfortablein contrast rating breakdown nth review amazon product received first product review slightly higher proportion review subsequent review however review zero change distribution rating implies marginal rating behavior independent current score thresholdsummarygranted blog post playing data le analyzing data might interesting look future technical post conditional behavior predicting rating review given previous rating productby user however post show big data may inscrutable buzzword nowadays work fortune company able understand even data set consisting simple feature extract large number insightsand post even look text amazon product review metadata associated product idea lined spoilyou view r code used visualize amazon data r notebook also view imagesdata used post github repositoryyou free use data visualization article however wish would greatly appreciated proper attribution given article andor liked blog post set patreon fund machine learningdeep learningsoftwarehardware need future crazy yet cool project monetary contribution patreon appreciated put good creative use
469,Lobsters,visualization,Data Visualization,Happy Little Words,http://stevelosh.com/blog/2015/11/happy-little-words/,happy little word,launched twitch creative joy painting bob ross bob ross night monday scraping volume ngrams graphing next weechat mosh cut cut ngrams twitch emotes van dyke brown misleading gnuplot stream let know,posted november late october video game streaming site twitchtv launched twitch creative essentially giving people permission stream nonvideo game related creative content site celebrate launch streamed episode joy painting bob ross giant marathon bob ross channel chat room quickly became packed folk watching bob paint chat spawned meme convention within day mostly taking gamer slang eg gg good game applying show people spam gg chat whenever bob finish painting sadly marathon ended kept dream alive bob ross night monday every monday going stream season show twice europefriendly time american folk last monday scraped twitch chat marathon season decided fun poking around data scrapingvolumengramsgraphingup next scraping chat pretty easy twitch irc gateway chat ran irc client weechat vps log channel like marathon finished scped log started working first trimmed end leave message hour half marathon started ended data going work run time utc hour cleaned remove cruft status message client lowercase everything cat dataraw grep e gsed e datalog made ugly little python script massage data something bit easier work later import datetime sys time def datetimetoepoch dt return int timemktime dttimetuple line sysstdin timestamp nick msg sstrip linesplit timestamp datetimetoepoch datetimedatetimestrptime timestamp h nick nick print timestamp nick msg result file one message per line format timestamp nick message go side note tried mosh persisting connection server instead using tmux screen persist session worked pretty well might start using often got nice clean corpus let start playing obvious first question many message people send total cat datamessages wc l almost message per hour since period almost activity two marathon mean rate well talked cat datamessages cut f sort uniq c sort nr head almightypainter sabrinamywaifu ionone talkative folk though honestly expected bit higher number cut cut space little function use nt type time chat spawned bunch meme jargon made another ugly python script split message ngrams analyze easily import sys import nltk def window coll size generate sliding window tuples size l coll coll must sliceable fixed len colllen len coll range colllen size colllen break else yield tuple coll isize line sysstdin timestamp nick msg linesplit n int sysargv ngram set window nltkwordtokenize msg n print timestamp nick join ngram let u easily split message unigrams echo sjl beat devil python srcsplitpy sjl sjl sjl beat sjl sjl sjl devil order ngrams within message nt preserved splitting script us set remove duplicate ngrams wanted remove dupe turn people frequently copy paste word many time single message nt want throw number bigram easy change parameter splitpy echo sjl beat devil python srcsplitpy sjl ofit sjl thedevil sjl beatthe sjl devilout sjl outof ngrams joined double underscore make easier plot later frequent unigrams cat datawords cut sort uniq c sort nr head bob ruined kappaross gg biblethump devil saved rip expected like bob stopwords like chat love spam ruined whenever bob make drastic change painting look awful first spam saved applies bit paint look beautiful happens frequently mountain kappaross biblethump twitch emotes produce small image chat bob clean brush beat leg easel remove paint thinner often smile say beat devil nt take long chat started spamming rip devil every time clean brush frequent bigram trigram cat databigrams cut sort uniq c sort nr head ripdevil bobross hibob kapparosskappaross bobis bob godbless happylittle vandyke ggwp isback ibelieve cat datatrigrams cut sort uniq c sort nr head kapparosskapparosskappaross vandykebrown bobisback biblethumpbiblethumpbiblethump bobrossis hibob beatthedevil bob bob iloveyou sonofa look like lot love bob sympathy devil also seems like van dyke brown twitch chat favorite color landslide note exact ngrams depend tokenization method used nltk wordtokenize easy worked pretty well wordpuncttokenize also work split basic punctuation bit much liking eg turn bob three token bob wordtokenize produce bob pure number interesting misleading let make graph get sense data feel like using gnuplot make graph overall volume look like use minutewide bucket x axis make graph bit easier read tell two marathon start end let try identify episode start finish chat usually spam hi bob episode start gg finish let plot use x bucket minute nt fine enough resolution event looking make easier read look first half first marathon work pretty well graph start big spike hi bob episode finish see huge spike gg followed immediately round hi bob next episode start find time bob cleaned brush look like devil nt good time encouraging two season roughly structure three main cluster peak note couple smaller peak two showing twitch showed another streamer painting two marathon likely cleaned brush couple time chat responded fewer people watching stream break hence smaller peak bob get love use x bin want general idea lot love around especially signed end one favorite moment bob said something changing mind mid stream chat started spamming conspiracy theory somehow knew stream year past poking around chat corpus lot fun definitely count studying nlp final definitely probably record chat next week marathon poking specifically around finding unique event eg son steve coming show comparing rate percentile got idea thing graph let know
471,Lobsters,visualization,Data Visualization,Explorable Explanations (2011),http://worrydream.com/ExplorableExplanations/,explorable explanation,explorable explanation bret victor march active reader reactive document explorable example contextual information reactive document ten brighter idea reactive document give try modeling author transparency ten brighter idea debate fun explorable example discovery question intuition intuition multiple representation trust explanation explorable integrated explanation read like normal text author hold end conversation contextual information reading normal text w encouragement curiosity laziness ten brighter idea information consumed environment think example tool tangle ten brighter idea inform culture,explorable explanation bret victor march mean active reader active reader asks question considers alternative question assumption even question trustworthiness author active reader try generalize specific example devise specific example generality active reader nt passively sponge information us author argument springboard critical thought deep understanding reading environment encourage active reading utterly oppose typical reading tool book website display author argument nothing else reader line thought remains internal invisible vague speculative form question ca nt answer consider alternative ca nt explore question assumption ca nt verify end blindly trust blindly nt miss deep understanding come dialogue exploration explorable explanation umbrella project idea enable encourage truly active reading goal change people relationship text people currently think text information consumed want text used environment think essay present example initial idea reactive document allows reader play author assumption analysis see consquences explorable example make abstract concrete allows reader develop intuition system work contextual information allows reader learn related material justintime crosscheck author claim always inspires play around concept love see come reactive document ten brighter idea early prototype reactive document reader play premise assumption various claim see consequence update immediately like spreadsheet without spreadsheet give try simplistic example concept proposition vehicle license fee state park way california state park including state beach historic park current million budget insufficient maintain park park shut least parttime park charge per vehicle admission prop would proposes charge car owner extra annual registration bill go state park fund car pay charge would free park admission analysis suppose extra charged vehicle registrationscalifornia taxpayer park admission would everyonethose paid charge would collect extralose million million tax plusminus million additionallost revenue admission total state park budget million sufficient maintain park park would shut least parttime sufficient maintain park current state fund program bring safety cleanliness acceptable standard sufficient maintain park current state plus fund program bring safety cleanliness acceptable standard next year sufficient maintain park bring safety cleanliness acceptable standard leaving million per year surplus park attendance would risefall million visit year good proposition hard evaluate without context active reader might wonder tax le could park admission raised instead reading paper question could answered phone call heavy research fortunately nt paper part analysis underlined try adjusting see answer question notice consequence adjustment reflected following paragraph reader explore alternative scenario understand tradeoff involved come confident conclusion whether proposition good decision modeling nothing new scenario modeling author proposition surely excel spreadsheet answered question spreadsheet explanation merely dataset model read explanation requires author interpret result model present reader via language graphic reactive document integrates spreadsheetlike model authored text read multiple level depending reader level interest hurried reader skim casual reader read asis curious reader adjust author scenario engaged reader explore scenario devising unlike spreadsheet barrier exploration extremely low simply click drag invite casual reader become engaged start exploring transforms reader passive active transparency author side form encourages sort transparency author argument simply hodgepodge soundbites unsourced data reactive document requires author disclose model behind argument open scrutiny ten brighter idea reader even directly edit source code model well visit primary source data dishonest author always exist might use model based faulty reasoning data transparency mean faulty model available examined refuted might offer model perhaps reader learn skeptical nonexplorable argument debate multiple author could model situation reader could compare look group proposition see basically hurling around unsourced soundbites leaving reader little go besides emotional appeal side expected offer reactive document reader could critically explore predicted scenario reader wanted explore scenario actually fun explorable example following typical description digital filter might find typical textbook simplified digital adaptation analog state variable filter coefficient transfer function example frequency response author kind enough provide couple example many author would consider equation enough care filter dynamic behavior response change vary parameter fc q two static example give u little insight fortunately nt physical book nt limited static example blue text indicates something play try playing nt restricted author choice example see filter response parameter want make discovery author nt bother mention instance see filter stability problem low q play think question region filter stable start losing lowpass response experiment answer question immediately intuition watching result change adjust parameter develop intuition system behavior helped figure use multiple representation shown six different way characterizing filter representation give unique insight watching respond experimentation dance one another develop deep understanding filter topology digital filtering general exploring filter space becomes game incidentally nonengineers may appreciate yet another representation flip switch left try playing trust talked trust verifying author claim may surprised concern relevant even engineering textbook playing filter response see author nt entirely honest formula fc actually approximation right notice blue line nominal fc nt line peak actual resonant frequency playing parameter get sense approximation hold actually pretty good high q typically care exact frequency fact entire premise filter stated sidebar parameter separable might considered marketingspeak strictly true although appears fairly close kf use insight decide whether oversample filter explanation tempting impressed novelty interactive widget interactivity really point primary point example reason call explorable explanation subtlety explorable integrated explanation like proposition example earlier filter description work static explanation read like normal text reader forced interact order learn reader interacts want go deeper piqued curiosity unanswered question ui element screaming attention reader transported separate interactive context instead reader simply nudge example author already presented interactive widget dump user sandbox say figure explanation essential aspect explorable explanation concept author hold end conversation author must guide reader provide structure learning experience reader respond asking answering question author provokes contextual information much might wish author write explorable explanation many wo nt even author good intention ca nt predict everything reader want explore author nt good intention let ask make existing document explorable active reader ask question question assumption reading normal text one simple example consider following passage might find typical advocacy site renewable energy california california lead nation installed wind generation capacity third wind power united state generated california wind energy california produced million kilowatthours electricity percent state total electricity enough light city size san francisco california wind turbine percent california wind generating capacity output located three primary region altamont pas east san francisco portion shown right photo nrel tehachapi south east bakersfield san gorgonio near palm spring east los angeles california really lead nation wind capacity let find move mouse pointer word california passage press w key wikipedia type wind learn texas iowa ahead california appears article old based outdated information knowing take rest article grain salt perhaps inspired find switch took place caused try searching word encouragement nothing new looking related information probably frequently selecting word copying clipboard opening new tab pasting word google search field scanning google result clicking wikipedia article scanning article want know closing tab finally trying find place original article example essentially except almost effortless nt lose place make huge difference believe reader constantly making tradeoff curiosity laziness constantly evaluating effort required active reader dramatically lowering effort barrier encourage reader ask every question come mind point particular interaction particular example larger goal giving control reader encouraging reader ask question verify assumption make connection follow interest treating author text base layer hosting reader exploration think ten brighter idea three smaller example merely hint potential active reading goal explorable explanation change people relationship text people currently think text information consumed want text environment think three step forward think example almost everywhere see static explanation begging brought life let exercise give better understanding possibility lead invention better technique help popularize concept tool explorable explanation wo nt catch difficult author tool must invented enable encourage author make work explorable almost easy writing static text released tangle javascript library behind ten brighter idea example nice bootstrapping step far goal authoring tool might tool look like sort fusion word processor spreadsheet informlike environment composing dynamic text tool exploring normal text last example culture make reader demand explorable explanation reject static text
472,Lobsters,visualization,Data Visualization,"Wickham and Grolemund, R for Data Science",http://r4ds.had.co.nz/index.html,wickham grolemund r data science,welcome r data science free use creative common attributionnoncommercialnoderivs physical copy amazon give back kākāpō recovery kākāpō rmarkdown bookdown source travis adidoit ajayd alanfeder alonzi alshum andland andrewmacfarland aviast batpigandme bbrewington behrman benherbertson benmarwick bensteinberg bgreenwell bklamer chrmongeau coopermor csgillespie csrvermaak curiousabhinav curtisalexander cwarden darrkj davidrubinger ddclark derwinmcgeary dgromer djbirke dpastoor dylancashman eddelbuettel edwinth elgabbas ericwatt erikerhardt etiennebr evjrob flemingspace florisvdh gadenbuie garrettgman goldbergdata gridgrad gustavdelius hadley haotrivago harrismcgehee hengnicai iansealy ijlyttle ivankrukov jacobkap jazzlw jdstorey jeffboichuk jefferis jeldorpku jennybc jenren jeroenjanssens jimhester jjchern joannejang johnsears jonathanflint jonmcalder jonpage jpetuchovas jroberayalas kaetschap karawoo katrinleinweber kdpsingh khumph kirillseva koalabearski krlmlr landesbergn lindbrook maurolepore mbeveridge mfherman minecetinkayarundel mjhendrickson mjmarshall mustafaascha nareal natedolson nateaff nickelas nirmalpatel nmjakobsen nowosad peterhurford pkq radugrosu ranae rgertenbach rlzijdeman robinlovelace robinsones rohanalexander romerobarata rudeboybert saghirb sauercrowd schuess seamusmckinsey seanpwilliams seasmith sedaghatfar sfirke shanellis shoili spirgel stevenmmortimer stragu svenski talgalili timwaterhouse tjmahr tklebel tomjamesprior tteo wibeasley yahwe yihui yimingli yutannihilation,welcome website r data science book teach data science r learn get data r get useful structure transform visualise model book find practicum skill data science chemist learns clean test tube stock lab learn clean data draw many thing besides skill allow data science happen find best practice thing r learn use grammar graphic literate programming reproducible research save time also learn manage cognitive resource facilitate discovery wrangling visualising exploring data website always free use licensed creative common attributionnoncommercialnoderivs license like physical copy book order amazon published reilly january like give back please make donation kākāpō recovery kākāpō appears cover critically endangered native nz parrot left book written rmarkdown bookdown automatically rebuilt source travis collaborative effort many people contributed fix improvement via pull request big thanks go everyone contributed adi pradhan adidoit andrea gilardi ajay deonarine ajayd alanfeder pete alonzi alex alshum andrew landgraf andland andrewmacfarland michael henry aviast mara averick batpigandme brent brewington bbrewington bill behrman behrman ben herbertson benherbertson ben marwick benmarwick ben steinberg bensteinberg brandon greenwell bgreenwell brett klamer bklamer christian mongeau chrmongeau cooper morris coopermor colin gillespie csgillespie rademeyer vermaak csrvermaak abhinav singh curiousabhinav curtis alexander curtisalexander christian g warden cwarden kenny darrell darrkj david rubinger davidrubinger david clark ddclark derwin mcgeary derwinmcgeary daniel gromer dgromer djbirke devin pastoor dpastoor julian dylan cashman dylancashman dirk eddelbuettel eddelbuettel edwin thoen edwinth ahmed elgabbas elgabbas eric watt ericwatt erik erhardt erikerhardt etienne b racine etiennebr everett robinson evjrob flemming villalona flemingspace floris vanderhaeghe florisvdh garrick adenbuie gadenbuie garrett grolemund garrettgman josh goldberg goldbergdata bahadir cankardes gridgrad gustav w delius gustavdelius hadley wickham hadley hao chen haotrivago harris mcgehee harrismcgehee hengni cai hengnicai ian sealy iansealy ian lyttle ijlyttle ivan krukov ivankrukov jacob kaplan jacobkap jazz weisman jazzlw john storey jdstorey jeff boichuk jeffboichuk gregory jefferis jefferis 蒋雨蒙 jeldorpku jennifer jenny bryan jennybc jen ren jenren jeroen janssens jeroenjanssens jim hester jimhester jj chen jjchern joanne jang joannejang john sears johnsears jonathanflint jon calder jonmcalder jonathan page jonpage justinas petuchovas jpetuchovas jose roberto ayala solares jroberayalas julia stewart lowndes sonja kaetschap kara woo karawoo katrin leinweber katrinleinweber karandeep singh kdpsingh kyle humphrey khumph kirill sevastyanenko kirillseva koalabearski kirill müller krlmlr noah landesberg landesbergn lindbrook mauro lepore maurolepore mark beveridge mbeveridge matt herman mfherman mine cetinkayarundel minecetinkayarundel matthew hendrickson mjhendrickson mjmarshall mustafa ascha mustafaascha nelson areal nareal nate olson natedolson nathanael nateaff nick clark nickelas nirmal patel nirmalpatel nina munkholt jakobsen nmjakobsen jakub nowosad nowosad peter hurford peterhurford patrick kennedy pkq radu grosu radugrosu ranae dietzel ranae robin gertenbach rgertenbach richard zijdeman rlzijdeman robin robinlovelace emily robinson robinsones rohan alexander rohanalexander romero morais romerobarata albert kim rudeboybert saghir saghirb jonas sauercrowd robert schuessler schuess seamus mckinsey seamusmckinsey seanpwilliams luke smith seasmith matthew sedaghatfar sedaghatfar sebastian kraus sam firke sfirke shannon elli shanellis shoili busiso mkhondwane spirgel steven mortimer stevenmmortimer stéphane guillou stragu sergiusz bleja svenski tal galili talgalili tim waterhouse timwaterhouse tj mahr tjmahr thomas klebel tklebel tom prior tomjamesprior terence teo tteo beasley wibeasley yahwe yihui xie yihui yiming paul li yimingli hiroaki yutani yutannihilation azza ahmed
475,Lobsters,visualization,Data Visualization,Littlesis - a free database of who-knows-who at the heights of business and government,https://littlesis.org/,littlesis free database whoknowswho height business government,involuntary facebook feature name behind news eye tie made watchdog think tank foundation code,involuntary facebook bring transparency influential social network tracking key relationship politician business leader lobbyist financier affiliated institution help answer question wealthiest american donate money white house official work appointed lobbyist married politician lobby information public scattered bring together one place data derives government filing news article reputable source data set updated automatically rest filled user community feature name behind news mover shaker behind bailouts government contract austerity policy working around clock stock littlesis information bigwig make news connection update analysis visit blog eye tie made watchdog bringing together community watchdog believe transparency accountability matter looking journalist researcher programmer artist organizer lend hand think tank littlesis project public accountability initiative c organization focused corporate government accountability receive financial support foundation benefit free software written open source community code powering littlesis free open source
476,Lobsters,visualization,Data Visualization,When Climate Change Meets Sprawl: Why Houston's ‘Once-In-A-Lifetime' Floods Keep Happening,https://projects.propublica.org/houston-cypress/,climate change meet sprawl houston onceinalifetime flood keep happening,boomtown flood town texas nt ready next big hurricane frequent new normal increased research rapid growth flooding grew dumped weakened grew reservoir predicament expensive longtime problem little progress letter plan vision plan estimated viewed,boomtown flood town climate change bring frequent fierce rainstorm city like houston unchecked development remains priority famously unzoned city creating shortterm economic gain increasing flood risk everyone neena satija texas tribune reveal kiah collier texas tribune al shaw propublica december aerial shot downtown houston tax day flood april jordan andersondoublehorn photography part series houston flood risk read texas nt ready next big hurricane houston third time eight year water gushed virginia northwest houston home april next several hour two granddaughter age perched table scared put foot dark gray floodwater rising nearly topped foot get bed bed wet go bathroom water toilet bowl hammond recalled well storm pummeled modest brick home nicknamed flood fell deadline file federal income tax came month another memorial day also crippled city together flood killed people inflicted well billion damage provoked unprecedented uproar houstonians suing city chronic flooding problem month tax day flood another megastorm hit city dumping well foot rain part harris county home houston hour history punctuated major backtoback storm many resident say becoming frequent severe scientist agree people die anywhere else flood said sam brody texas university galveston researcher specializes natural hazard mitigation property per caput lost getting scientist expert federal official say houston explosive growth largely blame million flocked metropolitan area recent decade local official largely snubbed stricter building regulation allowing developer pave crucial acre prairie land absorbed huge amount rainwater led excess floodwater storm choke vast bayou network drainage system two huge federally owned reservoir endangering many nearby home including virginia swollen buffalo bayou central houston shown tax day flood waterway run downtown houston dominic lopez top scientist say climate change causing torrential rainfall happen often meaning storm used considered event happening greater frequency rare storm miniscule chance occurring given year repeatedly battered city past year significant portion building flooded time frame located floodplain area considered percent chance flooding given year catching resident required carry flood insurance guard scientist say harris county flood control district manages thousand mile floodwaterevacuating bayou help enforce development rule focus preserving green space managing growth city houston say everyone plan torrential rainfall changing climate host city u around world county city official responsible addressing flooding largely reject argument two top flood control official say biggest challenge managing rapid growth retrofitting outdated infrastructure current standard govern developer resident build mostly sufficient say recent monster storm freak occurrence harbinger global warming sign thing come longtime head flood control district flatout disagrees scientific evidence show development making flooding worse engineering project reverse effect land development mike talbott said interview texas tribune propublica late august retirement year heading powerful agency successor share view claim magic sponge prairie would absorbed water absurd talbott said also said flood control district plan study climate change impact harris county thirdmostpopulous county united state astonishing frequency huge flood city getting said nt think new also criticized scientist conservationist agenda agenda protect environment override common sense said talbott acknowledged project work come close protecting something like tax day flood include retrofitting old drainage widening bayou building pond temporarily store floodwater buffalo bayou west houston normal weather condition michael stravato texas tribunepropublica meanwhile city czar appointed tax day storm ass flooding problem appears receptive alternative solution like green space stephen costello engineer former city councilman mayoral candidate budget staff firm timeline expects hire one paid staffer coming week also acknowledges role political actionoriented spends much time consoling angry resident community meeting house pursuing smaller cheaper quickhit project think people keenly interested making sure point person direct comment said mayor sylvester turner noting city never chief resilience officer indicates major resident flooded say looking eight month tax day flood home still shamble almost furniture kitchen cabinet place cook want someone buy optimistic old go hammond said new normal louise hansen story every time flooded water start creep house middle night first time west houston home flooded moved decade earlier figured anomaly happened three time le year home floodplain identified federal emergency management agency actually paralyzed said hansen grew area selling house lot value think go another many neighbor live area houston known memorial city experience flooded none live known floodplain formed group called flooding recently group sued city houston local tax reinvestment zone year demanding better drainage portion interstate near memorial city west houston texas civil air patrol happened memorial city called phenomenon refers flooding outside known floodplain case outside floodplain trigger insurance requirement floodplain chance flooding given year homeowner need insurance get mortgage floodplain many buy anyway turn houston seen urban flooding area country past four decade according recent analysis brody texas scientist scientist say number likely culprit map showing floodplain may outdated one thing drainage older part town likely built engineer understood true risk flooding area reason scientist fear local official ignoring one flood planning still done looking happened past climate change mean might work anymore determine flood zone lie looking backwards rain event past said katharine hayhoe climate scientist texas tech university backwards work well climate general hayhoe said climate change take risk people already face make worse particularly true houston sits close gulf mexico water warming planet get hotter warm water mean evaporation water vapor air storm come along water pick dump nearby land exact storm come along today rain associated would year ago hayhoe said big part happened tax day many way measure frequency rare storm area harris county flood control district tracking rainfall total entire county within period based data date back county hit eight rare storm five storm considered chance occurring year including rain hit may year another three considered even rarer including tax day storm april year flood control district could provide data time story rainfall occurred period rather period nevertheless confirmed number rare storm would higher enough rain fell memorial day storm hour classify event talbott think recent backtoback torrential flood indicative climate change studying potential impact priority harris county flood control district heavy backtoback rainfall said low probability two storm hit within week said flip coin come head time flood control district partially funding study help decide whether rainfall total change considered rare storm also downplayed human impact tax day storm pointing one drowned home flooded underpass drove resulting flood impacted relatively small portion population bad april tax day flood year look number people affected harris county le percent population percent willing pay much robust system said scientist also worry local official ignoring another crucial reason houston flooding hayhoe call paving region home acre prairie grass whose root extended far underground capacity absorb water day end even permanently land paved katy prairie northwest houston acre floodabsorbing land recent development reduced quarter capacity according estimate katy prairie conservancy advocacy group mean rain falling called impervious impermeable surface like concrete preventing ground underneath absorbing rainfall becomes traveling wherever easiest flow water might flow nearby stream way water could flood home car business stream might overwhelmed water causing flooding nearby harris county alone research texas scientist john jacob show almost percent freshwater wetland lost figure call wetland lost amount impervious surface harris county increased percent brody said way engineering project flood control regulation made change said absorbent prairie grass switchgrass grow root foot long researcher say developed landscape replace suburban lawn compare ability absorb water protect flood photo steve renich courtesy land institute illustration alberto cairo research found loss floodabsorbing land along gulf mexico increased property damage flood million much outside floodplain doubt development putting floodprone area exacerbating flooding time brody said huge body research beyond houston across supporting argument research harris county flood control district point effectiveness prairie grass absorb floodwater restoration one acre prairie report district wrote would offset extra volume runoff created two acre singlefamily home one acre commercial property district say data preliminary talbott successor rus poppe buy research developer follow regulation reverse effect paving wetland argued includes building called detention pond temporarily store rainwater fall pavement absorbed ground regulation first went effect talbott poppe claim development since contributed additional flooding insisted rule effective acre commercial strip mall would discharge stormwater rate acre covered prairie grass though event rarer storm pointed study commissioned flood control district evidence mike talbott recently retired heading harris county flood control district year michael stravato texas tribunepropublica scientist vehemently disagree claim say restriction inadequate loosely enforced could worsen situation people like louise hansen neighbor development floodplain elevated end redirecting floodwaters nearby neighborhood causing flooding otherwise might happened area far outside floodplain phenomenon acknowledged fema never fully studied brody said sure happening hansen graduate student kayode atoba researching question right story familiar one tell many time gotten people calling saying never flooded year floodplain brody said every single time development nearby changed drainage story told every day ten thousand time across talbott disagreed elevating building could causing others flood general dismissed brody scientist say causing flooding problem need find better expert said asked name would say single scientist expert dozen interviewed texas tribune propublica shared view matter agree mr talbott said phil bedient rice university scientist astounding statement agree lot people hansen memorial city resident reject idea local official anything help situation learned government thing take long time get anything done keep fighting said rapid growth stacey summer husband sat bed two small dog gazing window shock snake swimming rising floodwaters tax day flood water rushed onestory brick house northwest houston suburb cypress matter hour topping nearly foot unimaginable still said summer evacuated neighborhood canoe many neighbor creek near upscale subdivision known stable gate overflowed flooding almost home neighborhood stable gate subdivision stacey summer life flooded first time april texas civil air patrol first time development flooded scientist point area one development run amok recent year putting people property way people sitting duck said bedient rice university scientist water area drain cypress creek called cypress creek watershed population watershed grew percent two major flood hit area considered event chance occurring given year backtoback flood spurred rowdy beerfueled gathering local veteran foreign war hall soon formation cypress creek flood control coalition hope curb development encourage responsible development help prevent flooding little changed even another major storm crippled cypress houston region three year later one scientist say served wakeup call june tropical storm allison dumped almost inch rain city five day flooding residence vehicle twentytwo people died damage storm billion harris county likely worst rainstorm ever befall american city modern history according flood control district allison shock extent flooding also occurred almost half building flooded outside floodplain designated fema tragedy prompted fema flood control district redraw floodplain map expanded much percent area conjunction city district spent hundred million dollar improve drainage widen bayou build detention pond temporarily hold floodwater aerial view flooding houston tropical storm allison june watershed form white oak bayou join buffalo bayou took brunt storm rainfall courtesy harris county flood control district local politician tried change policy development met stiff resistance developer resident city pursue law banning new development major renovation existing building area called floodways vulnerable part floodplain closest bayou prompted multiple lawsuit law ultimately severely weakened city council two year later still said bill white mayor time aggressive action ever development successor annise parker tried impose fee city resident pay drainage improvement lawsuit followed proposed fee remains limbo development regulation superior strengthened time said steve radack longtime harris county commissioner represents cypress area economically reasonable said rule strict developer say heck harris county go build fort bend county directly west harris county wherever else said fact fort bend county stricter regulation developing floodplain growing faster harris county developer must incorporate green space detention pond harris county fort bend requires hold excess floodwater property longer discharge onetenth rate harris county retention pond interstate houston designed hold excess floodwater heavy rain michael stravato texas tribunepropublica still lot development know said phil bedient rice university helped develop fort bend rule harris county never prioritized green space said paying price nature wreaking fury county sending fairly strong signal thing need bedient expert also say wish harris county able buy home badly damaged flood known flood repeatedly since allison flood control district purchased property mostly federal money tax day flood district allocated million local money buyout recent study agency identified home still high risk flooding bought property acquired never flood property make guarantee according flood control district website still remain singlehome residential parcel identified within regulated scientist expert say community need move away developing floodplain least make rule far stringent allison pace development near floodplain houston area seemed accelerate especially cypress creek area still plenty cheap pastureland year allison occurred stacey neighborhood built next decade cypress creek area grew even faster previous one grew nearly percent population equivalent milwaukee time period according tribunepropublica analysis percentage developed land jumped percent percent stable gate one many neighborhood built area allison floodplain built new flood map took effect six year later placed large swath subdivision floodplain triggering flood insurance requirement many resident part neighborhood also placed newly expanded floodplain area smaller still notable chance flooding year home ended floodplain new map took effect need buy flood insurance still carry year greg bowen president stable gate homeowner association said neighborhood built best data even new flood map development continued floodplain since residential building built risky area harris county according tribunepropublica analysis local appraisal data along nonresidential building bowen said county developer installing enough flood control measure ensuring developer follow rule building floodplain bottom line need done keep growth cypress said frank espinoza recently built home floodplain along little cypress creek mile stable gate three flooded tax day costing ten thousand dollar repair longtime houstonarea homebuilder finished anyway even though tell buyer said avoid lawsuit think home flood think freak nature espinoza said noting elevation many home flood actually lower one growth cypress houstonarea suburb substantial state plan build third highway loop around city completed grand parkway large enough fit state rhode island inside highway cut commute time critic including environmental group sierra club sued try stop construction say encourage even suburban sprawl wetland loss worsen flooding problem new development make cypress vulnerable also impact flooding problem downstream scientist say le green space absorb rainfall causing faster runoff cypress creek spill several stream flow southeast toward downtown houston coast dick smith cofounder longtime president cypress creek flood control coalition said group worked decade encourage county plan impact new growth said like see act like fort bend county flood control district multiple time said never able totally prevent flooding smith said could hell lot better job home first flooded since flooded four time tax day worst said inch water accumulated ground floor raucous vfw meeting inspired smith neighbor form coalition recalled someone demanding put local county tour extensive damage nearly year later county commissioner radack still fielding angry feedback resident august town hall radack told seething attendee packed church auditorium part problem said came paying flood control project said would vote tax increase said repeatedly take resident urged radack support stricter development criterion enforce existing rule also repeatedly said county somehow curb growth outright stop building one woman yelled inciting cheer whole lot people live subdivision many opinion never built radack responded people right development land follow several people crowd shouted unison asked sentiment talbott said resident expectation high heard member public say never want street flood nt want house flood said reservoir predicament development cypress creek area grew tropical storm allison grew even quickly area around addicks reservoir one two massive world war iiera detention basin meant protect central houston catastrophic flooding percent land addicks watershed developed percent virginia home perched northern edge reservoir u army corp engineer built addicks counterpart barker reservoir backtoback mega storm put downtown houston underwater time army corp singular mission protect houston mile away reservoir year later achieving goal become difficult suburban sprawl encroached neighborhood encroaches north side addicks reservoir dry covered wooded parkland except flood michael stravato texas tribunepropublica heavy rainfall corp shutter conduit tall earthen dam keep torrent water rushing buffalo bayou narrow winding waterway pass downtown way coast reservoir dry time covered wood parkland army corp official say amount water accumulates reservoir big storm increased substantially recent decade take longer drain much open space around covered nonabsorbent concrete pool get large army corp forced precarious balancing act keep enough water inside reservoir protect area downstream also releasing enough water surrounding neighborhood including subdivision flooded rock hard place said richard k long help oversee daytoday operation addicks barker corp ideal world neighborhood like exist acknowledged neighbor retired engineer ali aumir whose home also flooded three time agrees whole area never long said way corp anyone predicted year ago kind growth houston area seen say corp probably done thing differently bought land around reservoir example least acquired easement allowing agency flood necessary corp legal agreement reservoir street savannah estate subdivision northwest houston virginia hammond life still flooded day tax day storm texas civil air patrol agency little control development though long say hand tied local politician factor including whim various president congress differing view much land government control army corp budget starting knowing happened would battle line little different yeah battle line would definitely different pleasure long said tax day storm amount water accumulated addicks barker reached record high forcing army corp release water reservoir normal resulted flooding area downstream upstream reservoir including subdivision called bear creek village south area flooded twice first time flooded rainwater overwhelmed drainage system stream second time corp closed dam addicks reservoir causing stored water back neighborhood street lucky home flood second time around long said rain fallen closer reservoir situation would much worse largest pool accumulated reservoir nine occurred since six since long say directly correlated new growth development top balancing act triggered major storm extra water accumulated reservoir strained earthen dam considered critical condition seven year large part would happen failed army corp say nowhere close failure estimate damage billion breach occur million resident downstream would impacted immediate risk though nearby resident like hammond may flooded next big storm neighborhood increased risk long said also adding problem drainage system sending water reservoir development cypress area upstream reservoir also making thing worse led increased runoff cypress creek major storm causing escape bank spill four stream south side state highway completely different watershed phenomenon called overflow original plan addicks barker reservoir included levee prevented overflow problem canal would evacuated water reservoir component dropped due combination time money long said decision would come back haunt army corp decade later flood control district said split million cost study impact development reservoir corp congress yet authorized funding study mark beginning could long expensive process study likely needed long said meantime flood control district taking step protect addicks barker effect future growth year strengthened rule new development around two reservoir part cypress creek watershed developer area must account rate water leaf lot also volume end draining reservoir step right direction rice bedient said also day late dollar area around reservoir already densely developed flood control district also looking building another large reservoir ease stress addicks barker agency officially proposed project timeline district engineer dena green said part expensive said bedient said additional reservoir absolutely critical county want avoid another scenario like tax day flood choice said going get another one know maybe five year within next decade longtime problem little progress houston trying solve flooding woe since least letter penned local official state lawmaker pleaded help declared largest city mercy relentless two horrible storm struck city previous eight year flooding official wrote endangering thousand human life dollar private municipal governmental capital potentially causing distress people nearly eight decade massive engineering project incredible technological advance flurry regulation flood control letter still ring true million life billion dollar stake downtown houston flood december courtesy harris county flood control district little changed long true houston naturally prone flooding incredibly flat near coast along warming ocean much built people knew know drainage floodplain regulation scientist say fundamental problem houstonians assumed simply engineer way flooding indeed talbott insists solution flooding woe continue widening thousand mile bayou across region carry rainwater gulf mexico cost billion current spending rate million year take year said congress unwilling provide extra fund speed process even widening project would ensure bayou handle event nothing like tax day flood talbott said impossible plan prevent expert say sorely misguided view reject somebody sophisticated resource like houston something said chad berginnis executive director association state floodplain manager berginnis expert say houstonarea official could work preserve green space strengthen regulation development plan changing climate work harder remove home remain floodplain city trying approach milwaukee metropolitan sewerage district berginnis pointed plan eventually get rid habitable building floodplain many city also realizing must prepare severe rainfall florida city fort recent vision plan includes entire chapter climate change preparedness resiliency broward county fort lauderdale located strictly regulates development area pegged sea level future said nancy gassman assistant public work director sustainability boulder colorado experienced horrible flooding city working redesign infrastructure surface absorb floodwater opposed concrete leaving open space idea mind rare flood happened three year ago see event around boulder last thousand year crazy one yes freak event said hayhoe texas tech climate scientist boulder preparing still preparing know warmer world chance heavier rainfall costello flood czar said aiming secure million next city budget create would carry smaller quickhit flooding project city also secured state grant august improve early warning system region many competing priority everything said radack harris county commissioner everything still pay hundred million dollar hospital district still build road certainly want park also indicated little chance city county would able implement stricter regulation development floodplain even though neighboring county fort bend able rule lax critic say also local official always enforce costello houston flood czar agrees city houston flood czar steve costello meet memorial city resident michael stravato texas tribunepropublica resident saying nt resource go police done said irresponsible development drive around part city get confirmation big city limited flood control district said plenty resource police development harris county though expert resident strongly disagree army corp engineer regulates development coastal wetland people charge making sure rule followed texas louisiana budget fixed congress flatlined three five year said kimberly baggette chief regulatory division army galveston district whether change new president remains seen texas congressman john culberson insisted agency charge dealing flooding district always gotten money asked houston republican also said planned third reservoir would help city prepare bigger flood event belief texas legislature fund project flood control district estimated last year would cost hundred million dollar meanwhile district said even timeline recommend exactly build additional reservoir fund aside distant reservoir plan remains unclear whether many houstonians realize nothing done address flood like one happened tax day democratic congressman al green said counting colleague u house representative fund key bayouwidening project coming month though understands aim protect much smaller event going maintain level optimism said another catastrophic event bemoan fact could done argument community clubhouse meeting houston summer costello assured people attendance city everything could address recent flooding issue meeting organized resident flooding group suing city hope getting certain flood protection project built asked interview next day city could feasibly protect recent flood costello said nt think following well hoped said adding group get project pushing lawsuit still going area flood prone still going exist nt think realize story written reported neena satija texas tribune reveal kiah collier texas tribune data reporting map design al shaw propublica map source usgsnasa landsat nasa worldview modis usgs orthoimagery harris county flood control district federal emergency management agency houstongalveston area council ecological database houston advanced research center usgs national hydrography dataset u army corp engineer texas civil air patrol image courtesy ut austin center space research icon noun project search map oliviu stoian texas university system texas tech university rice university financial supporter texas tribune complete list tribune donor sponsor viewed
477,Lobsters,visualization,Data Visualization,Visualizing the rhythm of food searches,https://medium.com/google-news-lab/visualizing-the-rhythm-of-food-searches-390c866a740,visualizing rhythm food search,visualizing rhythm food search rhythm food moritz stefaner truth beauty n g e e second google news lab series project alberto cairo kale asparagus germany japan u chili con carne mojitos cold brew coffee cauliflower moscow mule turmeric cranberry apple pie turkey pomegranate marshmallow turnip pineapple work get,visualizing rhythm food searchesone striking thing working google trend data insight give u search daily utility come healthcare school music travel search reflects going life search food particularly revealingfood search tell u tradition culture immigration fashion data going back see foodie fad changed time rhythm food come inthis interactive data explorer built acclaimed designer moritz stefaner team truth beauty using google trend data also second google news lab series visual experiment first project alberto cairo world best designer develop innovative newsroom interactive visualisationshere thing learn site kale hype yet getting started spoiler peaked asparagus season differ germany japan u know u chili con carne popular throughout winter except december remember summer everyone went crazy mojitos year craze cold brew coffee cauliflower moscow mule turmeric expect cranberry apple pie turkey trending search query u thanksgiving duh also pomegranate marshmallow turnip pineapple work key part data visualisation find new way show data order investigate seasonal pattern food search design team developed new type radial year clock chart reveal seasonal food trend individual vegetable fruit confectionery dish drinkseach segment chart indicates search interest one week past year distance center showing relative search interest color indicating year allows user spot rhythm repeat yearly basis natural season peak holiday etc well seeing yearoveryear trend rise avocado collapse interest energy drink get moritz choose distinctive design initially part initial data exploration plotted data area line chart immediately see strong repeating patternsstefaner say became curious made overlaid line chart year line repeat every twelve monthshe proceeded code custom radial version get standard software library aim news lab data visualisation project provide inspiration example living dynamic project right site comprises topic present individual data point adding timesays stefaner looking shifting interest towards individual ingredient dish recipe year fascinating year weekly google trend data supplied u rich dataset explore food trend year interesting revelation happened looked seasonal rhythm food radial chart immediately saw vegetable fruit dish drink signature seasonality pattern tied natural season special holiday popular year long simon rogers data editor google news lab also director data journalism award
478,Lobsters,visualization,Data Visualization,Creating Traveling Salesman Art With Weighted Voronoi Stippling,http://jackxmorris.com/posts/traveling-salesman-art,creating traveling salesman art weighted voronoi stippling,huge number traveling salesman approximation traveling salesman art putting dot weighted voronoi stippling traveling salesman algorithm page paper check code github comment powered disqus,imagine planning road trip across united state pick thirty different city visit trip preference order question arises shortest possible trip visit city finish home problem complicated sound question specifically traveling salesman problem nphard mean good algorithm figuring shortest tour set point fully accurate way test path compare length sound bad small number city however n different city n different possible path want visit city different possible path probably many compute hand easy evaluate computer however factorial grow quickly trying visit city different path huge number nonillion digit even computer many path examine individually traveling salesman approximation number grows quickly point feasible find exact solution case approximate solution fine road trip probably mind drive extra mile managing bus company airline might different story technique one use try every single path get answer close exact solution discussing different way generate approximate solution probably beyond scope discussion however good know accurate approximation generated fact even system ten thousand city generate approximate solution guaranteed optimal length traveling salesman art traveling salesman problem appears form astronomical observation dna sequencing many application besides roadtrip planning goal project create traveling salesman art turn interesting result obtained following start interesting image distinct region put dot look like image treat dot city solve tsp closely possible visually step look like putting dot initially tried create algorithm stipple image decided evaluate pixel based much color differed pixel around sorted pixel value took fixed number pixel maximum color change one one started placing dot dot close dot already placed skipped pixel algorithm generated decent slightly inaccurate stipplings test input image reason work properly first many constant manipulate image maximum number dot minimum radius dot decided manually image difficult choose value constant second color gradient technique devised choosing dot location accurately portray information image place dot along defined border image however region dense color little change show suitable simple image complicated image almost unrecognizable weighted voronoi stippling research showed others luck creating traveling salesman art stippling image technique called weighted voronoi stippling technique somewhat refined personal algorithm generates highquality stippled image simplest form look like generate random set point top image check dark pixel around point point move towards darker pixel move direction repeat process point stop moving call set point generating point weighted voronoi stippling finding closest pixel generating point involves computing something called voronoi diagram take set point plane call set generating point voronoi diagram arbitrary point plane mapped single point closest assign color generating point color point plane closest point exclusively created voronoi diagram voronoi diagram region seen voronoi diagram partition plane region corresponding one generating point imagine plane point lie image implementation make assumption want move point dark spot image need figure move done creating called weighted voronoi diagram image define density function ρ x higher density indicates darker color new density function iterate point region compute centroid region x coordinate centroid given following formula given formula use riemann sum approximate centroid voronoi region move generating point centroid region new set point generate new voronoi diagram repeat step eventually turn point centroid converge point gradually move toward darker region image retaining space since get close lose distinct region diagram finally converged set point make weighted voronoi diagram first fifteen step point converging smiley face process slow produce quite nice stippled version image convergence also take infinite amount time theory computing diagram set cutoff implementation decided stop iterating point total amount change pixel le bit arbitrary limit set somewhere point produced nice result without unreasonable waiting time weighted voronoi stippling representation pikachu approximately stipples traveling salesman algorithm determined effective way represent image using dot write code connect dot line since image used many dot immediately obvious use sort approximation find correct solution experiment heavily different approximation technique since already much research done tsp approximation concorde tsp solver freely available online seems efficient solver currently publicly available currently hold world record largest set city correctly solved used find correct answer problem city instead used simple greedy nearestneighbor algorithm calculate approximate tsp solution almost certain solve system nonoptimally often result bad artistic representation image however nearestneighbor algorithm fast implement easy understand image larger stipple count error le pronounced algorithm us quite lot memory image generated using traveling salesman art implementation try guess logo got bulk inspiration page creating traveling salesman art professor oberlin college paper creating weighted voronoi stipplings adrian secord like dive start making stipplings tsp art check code github please enable javascript view comment powered disqus
479,Lobsters,visualization,Data Visualization,23 Visualizations and When to Use Them in 30 Minutes,https://www.youtube.com/watch?v=RG_BKQRbJZw,visualization use minute,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature plotcon eduardo ariño de la rubia visualization use minute youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature plotcon eduardo ariño de la rubia visualization use minute youtube
480,Lobsters,visualization,Data Visualization,The half-life of code and the ship of Theseus,https://erikbern.com/2016/12/05/the-half-life-of-code.html,halflife code ship theseus,halflife code ship theseus little thing gitpython since selfhosting moar repos httpd rail node available monster repo linux kernel rail going newton law thermodynamics halflife repository moment express coding changed writing code fundamentally changed last year hacker news reddit tagged software statistic popular,halflife code ship theseus project evolves new code add top old code replace old code slowly time order understand built little thing analyze git project help formidable gitpython project idea go back history historical run git blame making somewhat fast bit nontrivial turn spare detail involve opportunistic caching file pick historical point spread time use git diff invalidate changed file etc moment clarity named git theseus terrible pun ship theseus dad make terrible pun refers philosophical paradox piece ship replaced hundred year piece replaced still ship ship wherein theseus youth athens returned crete thirty oar preserved athenian even time demetrius phalereus took away old plank decayed putting new stronger timber place much ship became standing example among philosopher logical question thing grow one side holding ship remained contending turn code nt exactly evolve way expected ship theseus effect also compounding effect codebases keep growing time maybe call second avenue subway effect construction project nyc going since let start analyzing git git became selfhosting early one popular oldest git project plot aggregate number line code time broken cohort year added would expected decay surprised see much code written back still alive code base interesting compute decay individual commits align commits look aggregate decay code certain repo analysis somewhat harder implement sound like various stuff mostly newer commits le time right end curve represents aggregate fewer commits git plot look like even year line code still present let look broader range somewhat randomly selected open source project look like git somewhat outlier fitting exponential decay git solving halflife give approx year convinced necessarily perfect fit famous quote go model wrong model useful like explanatory power exponential decay code expected life time constant risk replaced suspect slightly better model would fit sum exponential would work repo code change fast code change slowly going rabbit hole curve fitting reminded von neumann quote four parameter fit elephant five make wiggle trunk probably way make work revisit time let look lot project aggregate also sampled somewhat arbitrarily aggregate halflife roughly year like easy number remember spread big different project aggregate model nt necessarily super strong predictive power hard point arbitrary open source project expect half gone year later moar repos apache aka httpd another repo go way back rail beautiful exponential fit node wan na run repo code available monster repo note repos took minute analyze using script final test decided run linux kernel huge commits today time larger second biggest repo looked rail took multiple day analyze shitty computer make faster ended computing full git blame commits spread least week also limited c file squiggly line probably sampling mechanism look beauty whopping line code contribution year cohort extremely smooth scale individual commits absolutely meaning scale cumulative sum predictible like going newton law thermodynamics linux also clearly exhibit linear growth pattern speculating high modularity driver directory far number file followed arch contains support various architecture exactly kind thing would expect scale well complexity since well defined interface somewhat topic like notion well project scale complexity linear scalability ultimate goal one marginal feature take roughly amount code bad project scale superlinearly every marginal feature take code interesting go back contrast linux something like angular basically exhibit opposite behavior halflife randomly selected line angular year reflect angular architecture basically linear consistent might say comparison unfair angular new fair point would nt surprised reflect questionable design nt mean shitting angular interesting contrast halflife repository somewhat arbitrary sample project halflifes project halflife year first commit angular bluebird kubernetes kera tensorflow express scikitlearn luigi backbone ansible react node underscore request rail django theano numpy moment scipy tornado redis flask httpd git chef linux interesting moment high halflife reason much code localespecific creates linear scalability stable core code linear addition time express outlier direction year old code change extremely quickly guessing partly lack linear scalability code b probably one first major javascript open source project hit mainstreampopularity surfing nodejs wave possibly code base also suck idea coding changed think three reason strong relationship year project initiated halflife code churn early project becomes stable coding changed modern project evolve faster kind selection bias project survive scalable stable one interestingly nt find clear evidence data halflife code written earlier old project high late code skeptical well nt see would relation survival code structure maybe conclusion writing code fundamentally changed last year code really seems change much faster rate modern project way see discussion hacker news reddit tagged software statistic popular
481,Lobsters,visualization,Data Visualization,Four Million Commutes Reveal New U.S. 'Megaregions',http://news.nationalgeographic.com/2016/11/us-commutes-reveal-new-economic-megaregions-map/,four million commute reveal new u megaregions,united state result map plo one commuter revolution city collaborating solve challenge sustainable urban transport first law geography city solution city best cure growing pain,ever increasing share population living known interconnected city concept megaregion decade old fairly easy grasp geographically defining turned rather tricky researcher attempted map megaregions contiguous united state studying commute american worker megaregions grow size importance economist lawmaker urban planner need work coordinating policy new scale come defining extent megaregion find running problem geographer cartographer always trying delineate conceptual area megaregions defined like interlocking economy transportation link shared topography common tough know boundary lie try solve geographical problem garrett nelson dartmouth college alasdair rae university sheffield used census data four million commuter path applied two different analysis one based visual interpretation rooted algorithm developed mit result map appear today openaccess journal plo one map show commute mile le greater san francisco bay area illustration garrett dash nelson alasdair rae plo one map show commute mile le represented straight line start end point surrounding san francisco bay area one iconic megaregions country shorter higher volume commute yellow longer lower volume path red image easy see main center work city including san francisco oakland san jose sacramento highly connected see commuter revolution city collaborating solve challenge sustainable urban transport planner draw edge megaregion encompassing activity connection statistically significant important regional transit planning focus city surrounding bay sacramento important bay area economy answer question nelson rae turned algorithmbased tool designed senseable city lab mathematically recognize community algorithm considers strength connection node census tract case ignoring physical location made nice test waldo law thing near related farther apart minneapolisst paul megaregion look different using visual approach left algorithmic approach right illustration garrett dash nelson alasdair rae plo one result algorithmic analysis took cleanup eliminating superlong commute place like new york city los angeles excluding node weak produce coherent map plausible megaregions difference visual mathematical approach seen map minneapolisst paul area visual analysis left activity clearly center twin city extends outward concentrically weaker connection surrounding city twincities megaregion end st cloud included rochester smallerscale map right algorithm assigned broad swath smaller surrounding city including fargo north dakota megaregion based commuting path twin city area show largest multiple center activity see city solution city best cure growing pain algorithm assigned individual census tract dot megaregions color photograph garrett dash nelson alasdair rae plo one one decision researcher made limit algorithm megaregions seen map every node colored according region belongs made map plausible visually may sound like arbitrary number make sense mathematically high percentage commute lie entirely within megaregion relative path cross boundary region algorithmic megaregions easier interpret map top post show connection seemingly odd result sharp boundary follows new yorkconnecticut state line small splotchy green megaregion float birmingham dallas clearly ignoring geographical information understanding cultural character statistical method get everything right nelson rae combined two method draw final boundary around megaregions started drawing line around dot map overlaid shape flow map top post reinterpreted boundary eliminate outlier emphasize geographic continuity result map eliminates visual oddity example splotchy green area absorbed new orleansdelta megaregion big swath west relatively low population included megaregion combining visual mathematical approach yielded map u megaregions illustration garrett dash nelson alasdair rae plo one researcher hope approach first step better grasp economic geography country map clearly work progress area still look division new york city tristate area two megaregions example convinced bay areasacramento megaregion live extend way nevada map assign home workplace megaregion make sense related beautiful animation show like homesick new country
482,Lobsters,visualization,Data Visualization,How the Circle Line rogue train was caught with data,https://blog.data.gov.sg/how-we-caught-the-circle-line-rogue-train-with-data-79405c86ab6a,circle line rogue train caught data,signal interference move tunnel could something dataset caused incident could cause interference train opposite track figure could train moving opposite direction snippet snippet disjointset data structure snippet snippet snippet emergency braking incident dataset case could explained rogue train hypothesis figure incident clustered algorithm,signal interference move tunnel point still clear single train culpritwhat established seemed pattern time location incident happening one another opposite direction previous incident seemed almost like trail destruction could something dataset caused incident indeed imaginary line connecting incident looked suspiciously similar marey chart screenshot could cause interference train opposite track figure could train moving opposite direction decided test rogue train hypothesiswe knew travel time station along circle line range two four minute mean could group emergency braking incident together occur four minute apartsnippet found incident pair satisfied condition snippet grouped related pair incident larger set using disjointset data structure allowed u group incident could linked rogue train snippet applied algorithm data snippet cluster identified next calculated percentage incident could explained clustering algorithmsnippet result mean emergency braking incident dataset case could explained rogue train hypothesis felt right trackwe coloured incident chart based clustering result triangle colour clusterfigure incident clustered algorithm
483,Lobsters,visualization,Data Visualization,GGGuitar: Create Guitar tablature with R,http://www.r-chart.com/2016/11/package-ggguitar-on-cran.html,ggguitar create guitar tablature r,,
484,Lobsters,visualization,Data Visualization,Visualizing How Developers Rate Their Own Programming Skills,http://minimaxir.com/2016/07/stack-overflow/,visualizing developer rate programming skill,stack overflow stack overflow survey result sanity checking selection bias confidence interval violin plot percentile bootstrap causal relationship regression analysis le year year four point scale better developer rate better freelance contract fulltime freelance contract fulltime correlation programming ability frequency stack overflow visit jupyter notebook github patreon,stack overflow favorite destination software developer something break apparent reason recently released stack overflow survey result response question work build download released dataset containing cleaned response hereone variable present dataset surprisingly unaddressed official stack overflow analysis programmingability field scale would rate programming ability took look user identified programming ability survey average developer rate like rating scale distribution selfassessments unimodal around relatively rare swe aggregate programming ability data relevant metric stack overflow dataset experience commit activity hopefully find interesting trendssanity checkingi normally dislike working survey data since high possibility selection bias among respondent stack overflow case marketing survey facebook twitter may cause high proportion socialmedia savvy respondent discount insight developer likely use service reason show confidence interval whenever possible reflect proportionate uncertainty grouping insufficient data also account possibility minority respondent may dishonest nudge programming ability point higher truthlet compare programming skill developer experience field survey user could classify programming experience range le year year year year year since would expect positive correlation skill experience identifying positive correlation visually give quick indication analysis right trackwe plot average programmingability rating developer fall five group confidence interval average additionally make violin plot group give sense underlying distribution ratingsputting together color dot group represents average rating sample developer group give black error bar dot represent confidence interval true value average obtained via percentile bootstrap resamples dataset replacement since large amount source data confidence interval end narrow case one legitimate advantage big data violin plot group represents normalized overall distribution rating narrowness pervalue rating reflect amount data available group data available narrowprecise kernel smoothing overall flat plot represent wide selection selfratings overall narrow plot represents moreconstrained selection plot easily see distribution shift right experience range increase also keep mind grouping alone imply causal relationship two variable employing traditional regression analysis build model predicting programming ability would tricky experience cause programming skill improve strong innate technical skill cause developer remain industry grow back plot hand easily confirm positive correlation exists programming activity experience newbie developer rating skill average extremely experienced developer rating skill three whole rank higher also notable range value selected developer le year experience distribution almost completely flat showing honest selfassessment programming skill inversely developer year experience select rating almost much ratingsit good start also compare developer skill age construction older developer experience parallel behavior experience levelsyes plot indeed similar average rating ranging interesting behavior v age programmer occasionally rate skill low end scale confidence interval larger average lower grouplastly look salary developer paid usd validation skill particular chart focus developer united state n salary follows expected behavior specified currency costofliving case many group make distribution shift apparent interestingthe large amount earner dataset show stack overflow demographic skew toward silicon valley engineer group serf convenient inflection point distribution selfratings becomes four point scale earn better developer rate better far data internally consistent developerrelevant statistic available dataset easily aggregated good one type employment example freelance contract developer believe better programmer fulltime developer turn guess indeed case albeit slight difference freelance contract v fulltime repository commit activity developer developer commit better one could argue developer commits code often either vigilant accounting functional code change polluting codebase attempt show productivityyes developer commit lot code rate betterlastly let remember source data stack overflow developer use stack overflow resource better developer know properly use external reference time crisis developer use crutch compensate weak coding skill turn correlation programming ability frequency stack overflow visit average distribution virtually identical across groupsthere many many answer available dataset allow multiple response harder parse others zero correlation programming ability stack overflow visit therefore provide much additional insight although establish causal relationship methodology may important insight obtainable aggregating programming ability data chart presented post good startas always full code used process comment data generate visualization available jupyter notebook opensourced github repository also contains unused bonus chart free use chart article however wish would greatly appreciated proper attribution given article andor liked blog post set patreon fund machine learningdeep learningsoftwarehardware need future crazy yet cool project monetary contribution patreon appreciated put good creative use
485,Lobsters,visualization,Data Visualization,Sorting Algorithm Animations,https://www.toptal.com/developers/sorting-algorithms,sorting algorithm animation,algorithm java part edition robert sedgewick quicksort optimal robert sedgewick code discussion bubblesort hungarian csángó folk dance selectsort gypsy folk dance sorting sorting excerpt,algorithm java part edition robert sedgewick addison wesley quicksort optimal robert sedgewick jon bentley knuthfest stanford university january dual pivot quicksort code discussion bubblesort hungarian csángó folk dance youtube video created sapientia university tirgu mures marosvásárhely romania selectsort gypsy folk dance youtube video created sapientia university tirgu mures marosvásárhely romania sorting sorting ronald baecker assistance david sherman minute color sound film dynamic graphic project university toronto excerpted reprinted siggraph video review distributed morgan kaufmann publisher excerpt
486,Lobsters,visualization,Data Visualization,An Interactive Tutorial on Numerical Optimization,http://www.benfrederickson.com/numerical-optimization/,interactive tutorial numerical optimization,back first trying learn javascript github neldermead neldermead usual setting contour plot gradient descent automatic differentiation torch tensorflow rate low setting learning rate high line search enabling line search rosenbrocks function conjugate gradient introduction conjugate gradient method without agonizing pain another example multidimensional scaling reading excellent book numerical optimization gradient descent method great introduction bayesian optimization sigopt get new post email,numerical optimization one central technique machine learning many problem hard figure best solution directly relatively easy set loss function measure good solution minimize parameter function find solution ended writing bunch numerical optimization routine back first trying learn javascript since code lying around anyway thought might fun provide interactive visualization algorithm work cool thing post code running browser meaning interactively set hyperparameters algorithm change initial location change function called get better sense algorithm work code post github want check minimization function well visualization neldermead pretend minute nt remember calculus even basic algebra given function told need find lowest value one simple thing try would sample two point relatively near repeatedly take step away largest value f x log leftxright x obvious problem approach using fixed step size ca nt get closer true minimum step size nt converge also spends much time inching towards minimum clear step size larger overcome problem neldermead method dynamically adjusts step size based loss new point new point better previously seen value expands step size accelerate towards bottom likewise new point worse contract step size converge around minimum usual setting half step size contracting double step size expanding dimensional case work like galloping search doubling size bracketing minimum switch contracting binary search method easily extended higher dimensional example thats required taking one point dimension reflecting worst point around rest point take step take look contour plot see work dimension f x x sin sin x click anywhere graph restart new initial location method generate triangle spot flip flop towards minimum iteration expanding contracting necessary according setting method incredibly simple actually work fairly well low dimensional function even minimize nondifferentiable function like fleft xright leftleftlfloor x rightrfloor rest method going talk would fail biggest downside direct search method like start perform terribly higher dimensional function dimensional example like neldermead performs well machine learning model grow million billion parameter method wo nt work even simple problem dozen parameter one problem figuring direction go nt hard space get exponentially difficult number dimension grow gradient descent one possible direction go figure gradient nabla f xn current point take step gradient towards minimum gradient calculated symbolically differentiating loss function using automatic differentiation like torch tensorflow using fixed step size alpha mean updating current point xn x xn alpha nabla f xn lead taking path steepest descent look vaguely like ball rolling hill towards one local minimum f x learning rate alpha problem method setting learning rate set rate low gradient descent take forever find solution taking many tiny step towards solution setting learning rate high wildly oscillate around minimum without converging even worse best learning rate change function function nt single value make good default line search modify learning rate iteration loss always descending prevents overshooting minimum also making sure gradient flattening sufficiently prevents taking many tiny step enabling line search lead fewer iteration downside iteration might sample extra function point even using line search gradient descent still struggle function like rosenbrocks function problem sometimes best direction take nt along gradient need also consider curvature function well conjugate gradient conjugate gradient method try estimate curvature function minimized including previous search direction current gradient come new better search direction jonathan shewchuk wrote great paper called introduction conjugate gradient method without agonizing pain describes depth conjugate gradient method work problem substantially longer entire post nt even start talking nonlinear case fortysecond page give nightmare agonizingly painful version learn must like theory behind might little involved math pretty simple initial search direction gradient descent subsequent search direction sn computed beta frac nabla xnt nabla xn nabla x nabla xt nabla x sn nabla xn beta current location xn updated search direction using step size alpha computed line search x xn alpha sn see progress method actual direction taken red gradient iteration represented yellow arrow certain case search direction used almost degree gradient explains gradient descent problem function f x another example example far dimensional function nt interesting optimize also nt working actual data normal case machine learning problem thought final example would fun look algorithm multidimensional scaling problem challenge convert matrix distance point coordinate point best approximate required distance one way minimize function like loss sumi sumj x x j x x j ij x coordinate point want minimize ij desired distance point data using distance major north american city goal use data build map city passing distance city involves minimizing function parameter randomize initial conjugate gradient city iteration visualization show couple thing pretty clearly neldermead method totally fails city even struggle compared method gradient descent work well appropriate learning rate optimal learning rate change number city setting learning rate high cause converge low make take forever using line search gradient descent lead zigzag pattern smoothed using conjugate gradient method reading read far probably figured whole post excuse mess around javascript code part misguided attempt learn language everything covered said usually people much eloquent nocedai wright written excellent book numerical optimization reference great resource couple technique covered quickly wanted mention sebastian ruder wrote excellent overview gradient descent method go depth especially case stochastic gradient descent large sparse model like used train deep neural network one cool derivative free optimization method bayesian optimization eric brochu mike vlad cora nando de freitas wrote great introduction bayesian optimization interesting application bayesian optimization hyperparameter tuning even company sigopt offering bayesian optimization service purpose published november get new post email enter email address get email whenever write new post
487,Lobsters,visualization,Data Visualization,Using R to Analyse Linked Data,https://medium.swirrl.com/using-r-to-analyse-linked-data-7225eefe2eb8,using r analyse linked data,using r analyse linked data introduction sparql useful lesson cambridge semantics learning sparql bob ducharme great read set lesson cambridge semantics primer http statisticsgovscot tool sparql query http statisticsgovscotsparql explore datasets http purlorglinkeddatacube http http http statisticsgovscotdata http http statisticsgovscotdefmeasureproperties http statisticsdatagovukdefstatisticalentity http purlorglinkeddatacube see query action scottish government statistic site r http wwwrstudiocomproductsrstudio file new project package install http statisticsgovscotsparql http statisticsgovscotsparql http purlorglinkeddatacube http http http statisticsgovscotdata http http statisticsgovscotdefmeasureproperties http statisticsdatagovukdefstatisticalentity history http purlorglinkeddatacube http http http statisticsgovscotdata http http statisticsgovscotdefmeasureproperties http statisticsdatagovukdefstatisticalentity view,using r analyse linked datawe series guide looking stuff linked data start pretty simple basic concept example tool progressively get technical coming monthswe mostly using platform publish data linked data store guide using conjunction open source tool try demonstrate power linked data well showing simple useintroductionthis first series going start looking use simple sparql query get data data store going take data open source statistic package r really simple chartsparqlthe first thing going get data way going using sparql endpoint way querying data rdf format linked data stored sparql similar sql difference big enough still confusing without basic background knowledge linked data find sparql useful lesson cambridge semantics learning sparql bob ducharme great read introduction rdf set lesson cambridge semantics good primer sparql endpoint way interacting data linked data store going use scottish government statistic site http statisticsgovscot example either click tool sparql query go http statisticsgovscotsparql get window use query data store query window look like default query print table first triple scottish statistic datastore going worry though want get proper data site click explore datasets see list datasets store let say want start looking data first dataset list alcoholrelated hospital discharge query window swap existing query prefix qb http purlorglinkeddatacube prefix rdfs http prefix sdmx http prefix data http statisticsgovscotdata prefix sdmxd http prefix mp http statisticsgovscotdefmeasureproperties prefix stat http statisticsdatagovukdefstatisticalentity select areaname nratio yearname areatypename indicator qb dataset data alcoholrelateddischarge sdmxd refarea area sdmxd refperiod year mp ratio nratio year rdfs label yearname area stat code areatype rdfs label areaname areatype rdfs label areatypename query saying give four column data called areaname nratio yearname areatypename data dataset alcoholrelated discharge want triple year area associated want query show area name code datastore ratio number hospital discharge per people year type area sparql resource linked earlier piece help helpful think query patternmatching exercise triple datastore defining pattern searching triple match template variable areaname nratio etc created hold additional part triple asked definedthe prefix top query shorthand make query easier read use example qb clause shorthand http purlorglinkeddatacube built query sequentially previewing data time ended result see query action scottish government statistic site perfect light analysis whilst could stop download data make chart excel going go bit take rrso got text sparql query saved notepad sublime text tool next step fire r use r studio userfriendly standard r console get rstudio http wwwrstudiocomproductsrstudio first launch rstudio get view rstudio mac osxthere different section console pane left type command top right show datasets variable etc project well keeping track command superuseful bit bottom right pane show file package like plugins project well help chart maketo get started going want create new project go file new project follow instruction create new directory projectonce done need install package support interacting sparql endpoint bottom right pane click package install install package called sparql sparql package available called project futurethe next step pull data alcoholrelated discharge r analysis although installed sparql package still need bring library project type console left pane library sparql mean additional command available u console get data first need tell r endpoint endpoint http statisticsgovscotsparqlthis creates variable called endpoint give value http statisticsgovscotsparql location endpointnext need create another variable called query sparql query text query prefix qb http purlorglinkeddatacube prefix rdfs http prefix sdmx http prefix data http statisticsgovscotdata prefix sdmxd http prefix mp http statisticsgovscotdefmeasureproperties prefix stat http statisticsdatagovukdefstatisticalentity select areaname nratio yearname areatypename indicator qb dataset data alcoholrelateddischarge sdmxd refarea area sdmxd refperiod year mp ratio nratio year rdfs label yearname area stat code areatype rdfs label areaname areatype rdfs label areatypename two variable one address endpoint one query text need use command sparql library get data create variable called qd fill result function get data want qd sparql endpoint query see content data frame typing console head qd return similar data last preview actual sparql endpoint still need tidy removing namespaces element dataframe ie keeping result part df qd resultspreviewing dataframe give u much cleaner set data head df areaname nratio yearname stirling council border health board scotland orkney health board glasgow city council lanarkshire council areasto get data want need filtering want look council area purpose analysis really want data period two way could first way filtering sparql query second r data transfer point view efficient filtering sparql especially complex query lot result particularly big dataset may want look year data filter rto create another variable case called load result want df df areatypename council area df yearname dataframe contains value council area scotlandif want make chart data several way could decided use library available within r draw chart first need bring library project library next need draw chart using basic setting create variable c put chart c ggplot data aes xareaname ynratio geombar statidentity creates chart object set datasource filtered dataframe set xaxis council area yaxis ratio make bar chart typing c console pressing enter see plot tab bottom right pane monstrosity plenty resource available internet show various setting formatting chart r case tweak cleaned c ggplot data aes xreorder areaname nratio ynratio fillareaname themebw geombar statidentity theme axistextxelementtext ggtitle alcoholrelated hospital discharge rate per people lab xcouncil area yrate per people theme legendpositionnone much longer line code asking chart order area value measure case alcoholrelated hospital discharge also telling chart fill bar different colour apply black white theme remove background also rotating xaxis label make easier read changing axis chart title getting rid legend end result much cleaner easier read chart clearly show orkney island highest rate alcoholrelated hospital discharge policy point view interesting outside observer would expected city highest glasgow edinburgh etc certainly orkney island probably merit testing see year give valuehistoryearlier mentioned history panel pretty useful pane every command execute console recorded select line code tab send back console execute modify execute also select multiple line one go send console ability redo command really powerful keep history clean deleting command work hoped reproducable set command save text file share rstudio user execute code replicate resultsthis exactly done created portable block text anyone rstudio use form basis query scottish statistic site library sparql library endpoint http statisticsgovscotsparqlquery prefix qb http purlorglinkeddatacube prefix rdfs http prefix sdmx http prefix data http statisticsgovscotdata prefix sdmxd http prefix mp http statisticsgovscotdefmeasureproperties prefix stat http statisticsdatagovukdefstatisticalentity select areaname nratio yearname areatypename indicator qb dataset data alcoholrelateddischarge sdmxd refarea area sdmxd refperiod year mp ratio nratio year rdfs label yearname area stat code areatype rdfs label areaname areatype rdfs label areatypename qd sparql endpoint query df qd df df areatypename council area df yearname c ggplot data aes xreorder areaname nratio ynratio fillareaname themebw geombar statidentity theme axistextxelementtext ggtitle alcoholrelated hospital discharge rate per people lab xcouncil area yrate per people theme legendpositionnone cfeel free paste installation rstudio change parameter play around design chart example could see whether orkney island highest alcoholrelated discharge rate year whether blipthe next instalment look bringing two datasets datastore testing correlation r view
488,Lobsters,visualization,Data Visualization,"Quick, How Might the Alien Spacecraft Work?",http://blog.stephenwolfram.com/2016/11/quick-how-might-the-alien-spacecraft-work/,quick might alien spacecraft work,arrival connecting hollywood arrival math six season television show jack horner jurassic park kip thorne detecting gravitational wave interstellar made original blackhole visual effect mathematica marvin minsky space odyssey ed fredkin wargames manjul bhargava man knew infinity ted chiang week christopher xmen movie amy adam local linguistics professor jeremy renner writing code wolfram language source code nmapc theory interstellar travel spacetime network planck scale simple hack existing physic work back black hole engineering know fundamental theory physic whether fasterthanlight travel possible computational irreducibility undecidability gödel theorem physicist like richard feynman manhattan project oliver sack robin williams awakening control make dynamic work contact say alien alien intelligence considered evidence intelligence computational universe possible program show producing technology ching unearthed without context cellular automaton new kind science gauss pythagorean theorem true theorem logic charming book contact including example cellular automaton pioneer billion mile distance α centauri spectral line hydrogen carl sagan communicating ai goal purpose really bright line symbolic discourse language artifact made purpose considers purpose movie process wolfram language early year mathematica write whiteboard rattleback gravitational wave gravitational radiation original formula quadrupole moment higherorder multipole moment spherical harmonic gravitational turbulence turbulence papapetrou equation spin tensor general relativity equation geodesic motion christoffel symbol einstein equation dark energy metric tensor boltzmann equation graviton photon feynman diagram coherent state creation operator selfconsistent equation action rattleback top black hole spinning around merging detected exclusion principle gluon qcd freeelectron laser purpose earth,post movie arrival movie spoiler connecting hollywood interesting script said someone pr team pretty common u get request moviemakers showing graphic poster book movie request time different could urgently help make realistic screen display big hollywood science fiction movie start shooting essay also wired well company unusual issue eventually land inbox one happens combination relaxation professional interest probably seen basically every mainstream science fiction movie appeared past decade based working title story life even clear movie science fiction heard first contact alien said sure read script yes interesting script complicated interesting tell actual movie would mostly science fiction mostly love story definitely interesting sciencerelated theme mixed thing seem make sense liberal sprinkling minor science gaffe watch science fiction movie say quite often cringe thinking someone spent million yet made gratuitous science mistake could fixed instant asked right person decided even though busy time get involved called arrival personally try give best science could think several reason hollywood movie often get much science input first moviemakers usually sensitive science texture movie tell thing whack human level typically tell something scientifically sometimes get far calling local university help often sent hyperspecialized academic notveryusefully tell whole story wrong course fair science content usually make break movie think good science say good set help elevate good movie greatness company certain amount experience working hollywood example writing math six season television show personally quite science friend helped movie jack horner worked jurassic park ended tell pretty much paleontology theory movie including one turned wrong kip thorne famous recent triumph detecting gravitational wave second career original driving force behind made original blackhole visual effect mathematica earlier era marvin minsky consulted ai space odyssey ed fredkin ended model rather eccentric dr falken wargames recently manjul bhargava decade shepherded became man knew infinity eventually carefully watching math week editing session people gotten involved movie much earlier production figured getting involved movie start shooting least advantage one knew movie actually going get made yes often remarkably high noisetosignal ratio thing hollywood also meant role clear could try uptick smooth science even worth thinking changing anything significant plot inspiration movie come interesting short story ted chiang conceptually complicated story riffing fairly technical idea mathematical alone wondering anyone could possibly make movie still script basically science original story quite lot added mostly still rather lorem ipsum state went work making comment suggesting fix week cut week later son christopher arrive set arrival montreal latest xmen movie filming huge facility next door arrival modest facility get middle filming scene inside helicopter see actor watching video village monitor along couple producer people first line hear prepared list question alien starting binary like wow suggested saying great another take word change take yes dialogue sound smoother meaning right realizing difficult thought lot tradeoff lot complexity happily final movie end blend right meaning sounding good break filming talk amy adam play linguist assigned communicate alien spent time shadowing local linguistics professor keen talk question much language one us determines one topic computerlanguage designer long interested producer really want talk jeremy renner play physicist movie feeling sort right go look science tent set built think visuals work writing code script made clear going lot opportunity interesting visuals much might found fun personally time work creating fortunately though son fast creative interested hoped able ship set week two decided still young started working remotely basic strategy simple ask real analysis computation would got list alien landing site pattern got geometric data shape spacecraft significance got alien handwriting mean moviemakers giving christopher raw data like real life trying analyze turning question asked sort wolfram language code visualization christopher well aware code shown movie often make sense favorite regardless context seems source code nmapc linux wanted create code would make sense would actually analysis would going movie final movie screen visuals mixture one christopher created one derived created one put separately occasionally one see code like nice shot rearranging alien handwriting one see wolfram language notebook rather elegant wolfram language code yes line code actually transformation notebook real stuff real computation done theory interstellar travel first started looking script movie quickly realized make coherent suggestion really needed come concrete theory science might going unfortunately much end basically one evening invent interstellar space travel might work beginning wrote moviemakers came evening avoid spoiler showing obviously physic detail directly needed movie thinking really useful making consistent suggestion script led sort sciencefictiony idea dialogue one probably better make final script whole ship go space like one giant quantum particle alien must directly manipulate spacetime network planck scale spacetime turbulence around skin ship like skin ship infinite number type atom element know going related shining monochromatic laser ship seeing come back looking like rainbow fun actual scientist like come stuff like kind liberating especially since every one sciencefictiony piece dialog lead one long serious physic discussion movie wanted particular theory interstellar travel know maybe one day distant future turn correct certainly know fact know simple hack existing physic immediately make interstellar travel possible example even work back implies standard quantum field theory one almost paradoxically able continually extract zero point energy vacuum year basic mechanism become probably quoted potential propulsion source interstellar travel even actually believe think take idealization material much far maybe popular recently much prosaic way propel least tiny spacecraft pushing least nearby star radiation pressure laser maybe way black hole engineering set appropriate distortion spacetime even standard einsteinian theory gravity important realize even know fundamental theory physic still may immediately able determine example whether fasterthanlight travel possible universe way set configuration quantum field black hole whatever thing behave computational irreducibility related undecidability gödel theorem halting problem etc tell one upper bound elaborate difficulttosetup configuration might need end one could use computation done history invent structure needed never know sure impossible physicist like visiting set eventually meet jeremy renner find sitting step trailer smoking cigarette looking every bit gritty actionadventurer realize seen bunch movie wonder efficient way communicate physicist like figure start talking physic start explaining physic theory relevant movie talking space time quantum mechanic fasterthanlight travel sprinkling story heard richard feynman physic field manhattan project energetic discussion wondering mannerism might might typical physicist help remembering oliver sack telling uncanny see many mannerism robin williams picked awakening little exposure wondering jeremy going pick hour jeremy keen understand science relates arc story movie alien well human must feeling different point try talk like figure stuff science realize best thing actually show bit wolfram language live coding turn way script written right jeremy actually supposed camera using wolfram language happy many reallife physicist christopher show code written movie control make dynamic work start talking one set figuring code preliminary running live coding first example digit pi discussing relation seti contact book version something say alien arrival partly interstellar travel much communicate alien showed actually thought lot alien intelligence mostly thought difficult case alien spaceship evidence thing thin stream data say radio transmission difficult even know got considered evidence intelligence remember example often seems even weather complex enough seem like mind arrival alien right start communicating need something universal depend detail human language human history well ok right alien physical object point yes assumes alien notion discrete object rather continuum time got spaceship seems like decently safe bet want abstract well always mathematics mathematics actually universal anyone build spaceship necessarily know prime number integral fourier series certainly true human development technology thing needed understand perhaps better path technology think general form abstraction seems relevant actual operation universe get looking computational universe possible program mathematics practiced show infinite diversity abstract collection rule realized back many actually producing technology ok look across computational universe possible program might pick reasonable universal start abstract discussion alien come visit u one point discrete object one potential start talking number first unary perhaps binary beginning notebook made movie word code human consumption alien flash card main graphic ok basic number maybe arithmetic next interesting realize even discussed far reflect history human mathematics despite fundamental well appearance old tradition like ching binary number got popular quite lot muchhardertoexplain mathematical idea ok need follow history human mathematics matter order taught human need find thing understood outside knowledge word thing example recognize unearthed without context archeological dig well happens class computational system studied decade think fit bill remarkably well cellular automaton based simple rule easy display visually work repeatedly applying rule often generating complex know used basis sort interesting technology looking cellular automaton one actually start build whole world view called book wrote thing new kind science want communicate traditional idea human science mathematics maybe could start showing geometrical figure gauss suggested back around one could carve picture standard visual pythagorean theorem siberian forest alien see easy get trouble though might think showing platonic solid yes printout work perspective rendering depend lot detail particular visual system network even worse know line joining node represent abstract connection one might think logic perhaps start showing true theorem logic would one present somehow one symbolic representation textual expression tree something know computational knowledge logic particularly good global starting point representing general concept clear charming book copy wound set arrival tried build whole way communicate alien using logic thing number contact movie prime number key well despite importance history human mathematics prime actually figure much today technology like publickey cryptosystems usually seems somehow incidental used radio signal prime might first seem like good evidence intelligence course prime generated actually fairly simple one including example cellular automaton one see sequence prime immediate evidence whole elaborate civilization behind might come simple program somehow arose naturally one easily illustrate prime visually least number object arranged nontrivial rectangle going seems require concept represented directly awfully easy fall implicitly assuming lot human context pioneer human artifact gone interstellar space currently billion mile distance α centauri one favorite example plaque spacecraft includes representation wavelength spectral line hydrogen obvious way represent would probably line cm long back carl sagan others decided something scientific instead made schematic diagram quantum mechanical process leading spectral line problem diagram relies convention human using arrow represent quantum really nothing underlying concept incredibly specific detail science happened develop u human back arrival ask question like purpose earth one go lot talking thing like binary sequence cellular automaton interesting problem one strangely analogous something becoming important right world communicating ai defining goal purpose notably nice human sense ai little like alien intelligence right earth intelligence really understand far human intelligence inevitably every example see share detail human condition human history intelligence like share detail well one thing emerged basic science done really bright line intelligent merely computational thing like cellular thing complex brain even sense thinking humanlike way share context detail going communicate thing like purpose got find way align thing ai case fact working creating call symbolic discourse language way expressing concept important u human communicating ai shortterm practical application like setting smart contract longterm goal like defining analog constitution ai generally behave well communicating alien got build common universal language allows u express concept important u going easy human natural language based particular human condition history human civilization symbolic discourse language really trying capture thing important might important alien course arrival already know alien share thing u like monolith space odyssey even shape recognize alien spaceship artifact seem like weird meteorite something seem like something made purpose purpose well purpose really something defined abstractly really something defined relative whole historical cultural framework ask alien purpose first understand historical cultural framework operate somehow wonder day developed ai point start asking purpose level think going disappointing said think meaningful abstract definition purpose nothing surprising ai tell u considers purpose reflection detailed history context case ultimate happen considerable control alien course different story part arrival movie process spent lot life big always curious big project kind organized see movie one people sits end credit pretty interesting see project making movie little closer arrival term scale making movie like arrival project size releasing major new version wolfram language clear well lot difference involve sort idea creativity involve pulling together lot different kind skill everything fit together make coherent product end way think moviemakers easier u software developer make one thing people watch particularly language make something different people use infinite diversity different way including one directly foresee course software always get make new version incrementally improve thing movie get one shot term human resource definitely way software easier movie like arrival wellmanaged software development tends somewhat steady rhythm one consistent work going consistent team year making movie like arrival one usually bringing whole sequence might never even met short time amazing work guess year many task movie industry become standardized enough someone week two something successfully hand another person led dozen major software release life one might think got point software release would calm straightforward process never perhaps always trying majorly new innovative thing perhaps nature project found get project done quality level want always requires remarkable degree personal intensity yes least case company always extremely talented people working project somehow always thing nobody expected take lot energy focus pushing get together time imagined process might little like making movie fact early year mathematica example even used software credit looked much like movie category contributor thing often made lead package developer expression formatting lead font designer decade recognizing patchwork contribution different version became complex give software credit still thought try wrap party like movie somehow scheduled party came around always critical software issue come key contributor come party fixing software least language structural similarity movie making one start overall specification one want finished product like one actually try build inevitably end one look one one realizes one change specification movie like arrival postproduction software iteration development process interesting see script suggestion made propagated making arrival reminded quite lot least software design everything kept getting simpler suggest detailed way fix piece dialogue say amy adam character flunked calculus way analytical say spacecraft came million light year outside galaxy say trillion mile instead change would get made thing would get simpler core idea would get communicated minimal way see step though would interesting result reminded quite lot process software design done many complexity one make everything clear minimal possible write whiteboard contribution arrival mostly concentrated around time movie shooting early summer almost year heard movie postproduction suddenly may year get email could urgently write bunch relevant physic whiteboard movie scene amy adam front whiteboard somehow written whiteboard scene shot basic highschoollevel kind topoftheline physic one would expect people like jeremy renner character movie somewhat amusingly think ever written much whiteboard used computer essentially work presentation year prevailing technology blackboard overhead projector transparency still duly got whiteboard set office got work writing nowveryrarelyused handwriting thing imagined good physicist might think trying understand interstellar spacecraft showed came big space whiteboard make easier composite amy adam particularly hair moving around front whiteboard end whiteboard got rewritten yet final movie detail movie writing whiteboard imagined place jeremy renner character colleague would record notable idea spacecraft formula related little ended quite tale physic fact speculation key maybe spacecraft strange poorly drawn rattlebacklike shape spin travel generating gravitational wave spacetime process maybe shape spacecraft somehow optimized producing maximal intensity pattern gravitational radiation einstein original formula strength gravitational radiation emitted changing mass distribution qij quadrupole moment distribution computed integral shown higherorder term depend higherorder multipole moment computed integral spacecraft mass density ρ ω weighted spherical harmonic gravitational wave would lead perturbation structure spacetime represented tensor hμν maybe spacecraft somehow swim spacetime propelled effect gravitational wave maybe around skin spacecraft gravitational turbulence structure spacetime powerlaw correlation like turbulence one see around object moving fluid maybe spacecraft boil spacetime around papapetrou equation spin tensor evolves general relativity function proper time τ equation geodesic motion describing thing move potentially curved spacetime γ christoffel symbol determined structure spacetime yes one go ahead solve equation using ndsolve wolfram language einstein equation gravitational field produced moving mass field determines motion mass turn reacts back change field different idea spacecraft might somehow negative mass least negative pressure photon gas pressure ρ common version dark energy would pressure equation tensor specifies combination mass pressure velocity appears relativistic computation perfect fluid maybe spacecraft represents bubble structure spacetime different arrow pointed schematic spacecraft shape predrawn whiteboard anything special christoffel symbol coefficient connection tangent fiber bundle shape spacecraft computed spatial metric tensor gravitational wave described perturbation metric spacetime relative flat background minkowski space special relativity operates equation propagation gravitational wave taking account first nonlinear effect wave relativistic boltzmann equation describing motion transport collision gas particle like graviton farout idea maybe way making laser using graviton rather photon maybe spacecraft work laser quantum phenomenon feynman diagram selfinteraction graviton cavity photon kind direct nonlinear self interaction might one make mirror graviton maybe one make metamaterial carefully constructed microscopic structure way planck scale laser involve coherent state made superposition infinite number photon formed infinitely nested creation operator applied quantum field theoretic vacuum feynman diagram selfconsistent equation graviton bound state know exists might relevant graviton laser basic nonlinear interaction graviton perturbative approximation quantum gravity possible correction term action general relativity quantum effect eek see explanation might seem like alien language still actually fairly tame compared full physicsspeak let explain bit physic story whiteboard start obvious feature spacecraft rather unusual asymmetrical shape look bit like one rattleback top one start spinning one way change direction thought maybe spacecraft spin around well massive nonspherical object spinning around produce gravitational wave usually absurdly weak detect object sufficiently massive spin sufficiently rapidly substantial indeed late last year odyssey gravitational wave two black hole spinning around merging sufficiently intense detect third way across universe accelerating mass effectively generate gravitational wave like accelerating electric charge generate electromagnetic wave ok let imagine spacecraft somehow spin rapidly enough generate lot gravitational wave could somehow confine gravitational wave small region maybe even using motion spacecraft well wave would interfere wave got coherently amplified like laser well wave would get stronger inevitably start big effect motion perhaps pushing spacetime gravitational wave get amplified ordinary laser us photon particle light one basically need continually make new photon pumping energy material photon socalled particle boson mean tend thing light laser come coherent wave electron fermion mean try never thing leading exclusion principle crucial making matter stable etc light wave thought made photon gravitational wave likely thought made graviton though fair yet fully consistent theory graviton photon interact directly photon interact thing like electron electric charge photon electric charge graviton hand interact directly interact thing kind energy energy kind nonlinear interaction wild effect example gluon qcd nonlinear interaction effect keeping permanently confined inside particle like proton keep glued together clear nonlinear interaction graviton might idea perhaps lead kind selfsustaining graviton laser formula top whiteboard basically generation effect gravitational wave one bottom mostly graviton interaction formula top basically associated einstein general theory relativity year theory gravity used physic formula bottom give mixture classical quantum approach graviton interaction diagram socalled feynman diagram wavy line schematically represent graviton propagating spacetime real idea graviton laser possible would work ordinary photon laser photon always effectively bounce around inside kind cavity whose wall act mirror unfortunately however know make graviton like know way making something shield gravitational field well dark matter sort would actually exists whiteboard made speculation perhaps weird way making metamaterial planck scale meter quantum effect gravity basically become important could act graviton mirror another possibility graviton laser could work like freeelectron laser without cavity remember idea whiteboard write thought typical good physicist say plucked government lab might think confronted situation movie conventional theory personally came make interstellar spacecraft theory depends bunch idea fundamental physic work yet mainstream physic community correct theory interstellar travel needle say know amazed either main theory invented movie theory whiteboard correct stand know course extremely helpful alien showed interstellar spaceship even show u interstellar travel purpose earth alien show earth one obvious big question purpose something character arrival talk lot christopher visiting set asked make list possible answer could put whiteboard clipboard came mentioned whole notion purpose something tied cultural context interesting think purpose one would put list different time human history also interesting imagine purpose give thing future perhaps pessimistic rather expect future human ai alien answer often something computational universe today even close word concept movie came together really well early response look fun see thing like yes christopher code interesting stimulating involved arrival let understand little involved creating movie take merge science compelling fiction also led ask science question beyond asked relate sort thing interested help wondering real alien arrive earth like think involved arrival made little prepared certainly spaceship happen look like giant black rattlebacks even already nice wolfram language code
489,Lobsters,visualization,Data Visualization,The Neo4j-Tableau Integration You've Been Asking for,https://neo4j.com/blog/neo4j-tableau-integration/,integration asking,ralf becher tiq solution github repository cypher tableau web data connector web data connector wdc github page documentation contact directly tde file generator extension documentation tableaujdbc integration tableau section jdbc doc feedback github issue feedback tiq solution slack channel,based excellent work partner ralf becher tiq solution qlik tableau expert happy announce today public availability first version integration find code documentation github repository connector allows make graph data accessible tableau integration many user asked case graph query result projected tabular format made available within tableau supported mean integration tableau web data connector additional integration option provided directly partner tiq server extension generate publish tde file cypher result standalone tool generate publish tde file jdbc eg tableau web data connector since version tableau offer rest api connector used acquire data remote source requires certain data format form interaction tableau web data connector proxy tableau wrap execution cypher query provide result tableau within project provide small web application run locally deploy somewhere used purpose even possible run web data connector wdc github page opening url within tableau allows u configure connection information cypher query want run setting tableau component wdc connect app tableau pull data workbook connection detail stored workbook use refresh data later detail outlined documentation next two option provided directly ralf higher volume lowerlevel integration tableau please contact directly interested use either planning use enterprise license field engineering team also help tde file generator extension another option generate publish tableau data extract tde file directly server purpose server extension available provide arbitrary cypher query extension generates tde file tabular cypher result fly loaded tableau published tableau server project setting server run extension easy adding cypher query urlencoded payload url extension going forward also possible post one query extension instance generate download tde file http n returnn configured tableau server credential tableauserverproperties use extension publish tableau server directly http project datasource match n returnn autopublication powerful feature extended future schedule trigger automatic publication background tableau environment always work latest graph data find detail get started tde file generation documentation tableaujdbc integration also option querying via driver generating tde file result using standalone tool tiq detail found tableau section jdbc doc feedback first release need feedback make better using tableau work please give integration try see two approach work tested integration tableau work tableau released contains new web data connector api allows better integration integrated within project near future utilizing bolt binary protocol multitablestatement configuration also interested feedback documentation would course thrilled hear use case integrate graph data tableau please raise github issue email u feedback need dedicated support integration feel free reach partner tiq solution u individual support join slack channel ask channel big thanks ralf becher work putting piece together making work cheer dave fauth michael hunger
490,Lobsters,visualization,Data Visualization,Guns and Guardians: Comparative Cluster Analysis and Behavioral Profiling in Destiny,https://andersdrachen.files.wordpress.com/2014/07/gunsguardians.pdf,gun guardian comparative cluster analysis behavioral profiling destiny,,obj length filter flatedecode stream xڥ e ݼ ia f b
491,Lobsters,visualization,Data Visualization,Announcing RStudio v1.0!,https://blog.rstudio.org/2016/11/01/announcing-rstudio-v1-0/,announcing rstudio,rstudio team news rstudio ide r notebook sparklyr profvis readr readxl website bookdown download version let u know r notebook r notebook r markdown interactive r markdown jupyter beaker iterate quickly html widget spark sparklyr sparklyr package spark new connection profiling profvis profile profile selected line data data import readr readxl http wwwfnsusdagovsitesdefaultfilespdslsummarxls rstudio release history rstudio release history shiny server pro join hadley wickham master r workshop melbourne australia december,announcing rstudio rstudio team category news rstudio ide today pleased announce availability rstudio version version major release since initial launch february see full release history biggest ever highlight include authoring tool r notebook integrated support sparklyr package r interface spark performance profiling via integration profvis package enhanced data import tool based readr readxl package authoring tool r markdown website bookdown package many miscellaneous enhancement bug fix hope download version always let u know think r notebook r notebook add powerful notebook authoring engine r markdown notebook interface data analysis compelling advantage including close association code output ability intersperse narrative computation notebook also excellent tool teaching convenient way share analysis interactive r markdown authoring format r markdown bear many similarity traditional notebook like jupyter beaker however code notebook typically executed interactively one cell time whereas code r markdown document typically executed batch r notebook bring interactive model execution r markdown document giving capability work quickly iteratively notebook interface without leaving behind plaintext tool compatibility version control productionquality output come rely r markdown iterate quickly typical r markdown document must reknit document see change take time contains nontrivial computation r notebook however let run code see result document immediately include kind content r produce including console output plot data frame interactive html widget see progress code run preview result individual inline expression even latex equation render realtime type focused mode interaction require keep console viewer output pane open everything need fingertip editor reducing distraction helping concentrate analysis done formatted reproducible record accomplished plenty context perfect record sharing others spark sparklyr sparklyr package new r interface apache spark rstudio includes integrated support spark sparklyr package including tool creating managing spark connection browsing table column spark dataframes previewing first row spark dataframes installed sparklyr package find new spark pane within ide pane includes new connection dialog used make connection local remote spark instance connected spark able browse table contained within spark cluster spark dataframe preview us standard rstudio data viewer profiling profvis make code faster write r code probably asked question profiler important tool record computer spends time know focus slow part make faster rstudio includes integrated support profiling r code visualizing profiling data r long builtin profiler easier ever use profiler interpret result profile code rstudio select editor click profile profile selected line r run code profiler turned open interactive visualization visualization two main part top code information amount time spent executing line bottom flame graph show r time flame graph horizontal direction represents time moving left right vertical direction represents call stack function currently called time function call another function go top stack function exit removed stack data tab contains call tree showing function call expensive armed information know part code focus speed thing data import rstudio integrates readr readxl package provide comprehensive tool importing data many text file format excel worksheet well sa stata spss data file tool focused interactively refining import providing code required reproduce import new datasets example workflow would use import excel worksheet http wwwfnsusdagovsitesdefaultfilespdslsummarxls first provide dataset url review import preview mode notice file contains two table result requires first row removed clean skipping row file unchecking first row name checkbox file looking better column displayed string clearly numerical data fix selecting numeric column dropdown final step click import run code displayed code preview import data r code executed within console imported dataset displayed automatically note rather executing import could copied pasted import code included within r script rstudio release history started working rstudio november year ago first public release february highlight various release year version date highlight feb initial public release apr interactive plotting manipulate source editor theme configurable workspace layout jun enhanced plot export enhanced package installation management enhanced history management jan rstudio project system code navigation typeahead search go definition version control integration git subversion may enhanced authoring sweave web publishing r markdown code folding many editing enhancement oct package development tool vim editing mode intelligent r autoindentation dec interactive debugging tool enhanced environment pane viewer pane web content htmlwidgets jun r markdown publish pdf word integrated tool shiny application development editor support xml sql python bash may data viewer support large datasets filtering searching sorting major enhancement r cc code completion inline code diagnostics multiple cursor tab reordering enhanced vim mode feb emacs editing mode multiwindow source editing customizable keyboard shortcut rstudio addins nov authoring tool r notebook integrated support sparklyr r interface spark enhanced data import tool performance profiling via integration profvis rstudio release history page support website provides complete history major minor point release shiny server pro hercon join hadley wickham master r workshop melbourne australia december
493,Lobsters,visualization,Data Visualization,Haskell Integer Division Visualised,http://www.prigrammer.com/?p=243,haskell integer division visualised,error page displayed please contact service provider detail,error page displayed please contact service provider detail
494,Lobsters,visualization,Data Visualization,Music Theory: An Education from First Principles,http://www.lightnote.co/,music theory education first principle,music work learn music theory music work,music worksinteractive music theory lessonswhy learn music theory people play song reading tab sheet music nt understand music work play certain noteswith music theory able make musicbuild chord progressionsimprovise melody chordslearn memorize favorite music faster understanding underlying structure easy learn minute interactive playable lesson
495,Lobsters,visualization,Data Visualization,Beautiful colormaps for oceanography: cmocean,http://matplotlib.org/cmocean/,beautiful colormaps oceanography cmocean,beautiful colormaps oceanography cmocean matplotlib viscm tool perceptually uniform http source code png hirespng pdf source code png hirespng pdf viscm tool source code png hirespng pdf installation capability source code png hirespng pdf source code png hirespng pdf source code png hirespng pdf source code png hirespng pdf clipping colormap source code png hirespng pdf source code png hirespng pdf source code png hirespng pdf colormap detail thermal gerg maracoos tecplot haline clark richards maracoos solar ice chad greene gray source code png hirespng pdf oxy veronica ruiz deep blender dense algae matter turbid speed amp tempo rain phase topo balance stoqs delta francesca samsel curl diff tarn resource cmocean available elsewhere colormap julia stoqs example beautiful visualization visualization fall foliage map visualization jet bad colormap choose better damon mcdougall kristen thyng nathaniel smith stéfan van der walt kristen thyng tip making good figure,beautiful colormaps oceanography cmocean package contains colormaps commonlyused oceanographic variable colormaps started matplotlib colormaps adjusted using viscm tool perceptually uniform note new version cmocean four new colormaps note paper guideline colormap selection application description cmocean colormaps thyng k greene c hetland r zimmerle h dimarco f true color oceanography oceanography link http gallery import cmocean cmoceanplotsplotgallery source code png hirespng pdf colormaps chosen perceptually uniform reflect data representing term sequential divergent cyclic phase colormap intuitive example algae colormap shade green could represent chlorophyll lightness colormaps import cmocean cmoceanplotsplotlightness source code png hirespng pdf probably better think colorspace euclidean distance made equivalent change human perception plot colormaps colorspace important property seen using viscm tool property haline colormap see colormap print nicely grayscale consistent perceptual delta across colormap good viewability people color blindness smooth representation colorspace detail image clear import cmocean cmoceanplotswrapviscm cmoceancmhaline saveplotfalse source code png hirespng pdf evaluation colormaps using viscm tool shown page cmocean colormaps viscm tool installation install pip install cmocean install anaconda conda install c condaforge cmocean want able use plot submodule instead install pip install cmocean plot also install viscm colorspacious capability colormaps available cmoceancm accessed simply plotted follows import cmocean import matplotlibpyplot plt fig pltfigure figsize ax figaddsubplot cmoceanplotstest cmoceancmthermal axax ax figaddsubplot cmoceanplotsquickplot cmoceancmalgae axax source code png hirespng pdf available colormap name accessed cmoceancmcmapnames import cmocean cmoceancmcmapnames thermal haline solar ice gray oxy deep dense algae matter turbid speed amp tempo rain phase topo balance delta curl diff tarn colormap instance accessed import cmocean cmaps cmoceancmcmapd print available colormaps text file rgb entry cmaps cmoceancmcmapd cmoceantoolsprintcolormaps cmaps output dictionary define colormap import cmocean cmdict cmoceantoolsgetdict cmoceancmmatter print cmdict red green blue make colormap instance cmap cmoceantoolscmap rgbin given rgb input array reversed version colormaps available appending r colormap name matplotlib import cmocean import matplotlibpyplot plt fig pltfigure figsize ax figaddsubplot cmoceanplotstest cmoceancmgray axax ax figaddsubplot cmoceanplotstest cmoceancmgrayr axax figtightlayout source code png hirespng pdf lighten colormap using alpha value cmoceantoolslighten function overlay contour line easily visible import cmocean import cmoceancm cmo import matplotlibpyplot plt fig pltfigure figsize ax figaddsubplot z nprandomrandn axpcolormesh z cmapcmomatter ax figaddsubplot lightcmap cmoceantoolslighten cmomatter axpcolormesh z cmaplightcmap figtightlayout source code png hirespng pdf cmocean register colormaps matplotlib call example cmoamp import cmocean import matplotlibpyplot plt fig pltfigure figsize ax figaddsubplot z nprandomrandn axpcolormesh z cmapcmoamp source code png hirespng pdf clipping colormap clip one end colormap either value intend plot percent example crop end colormap percent reduce lightness range darkest value import cmocean import matplotlibpyplot plt cmap cmoceancmtarn fig ax pltsubplots figsize nprandomrandint mappable ax pcolormesh cmapcmap ax settitle full diverging colormap figcolorbar mappable axaxes newcmap cmoceantoolscropbypercent cmap whichboth nnone mappable ax pcolormesh cmapnewcmap ax settitle colormap removed end figcolorbar mappable axaxes source code png hirespng pdf clip one end colormap percent example crop top part oxy colormap case considering supersaturated condition top colormap remove colormap follows import cmocean import matplotlibpyplot plt cmap cmoceancmoxy fig ax pltsubplots figsize nprandomrandint mappable ax pcolormesh cmapcmap ax settitle value go supersaturated figcolorbar mappable axaxes newcmap cmoceantoolscropbypercent cmap whichmax nnone mappable ax pcolormesh cmapnewcmap ax settitle value allnbelow supersaturated figcolorbar mappable axaxes source code png hirespng pdf remove part one end colormap inputting value intend use plot let function figure much crop colormap could particularly useful combined bathymetry topography sea land elevation data plot topo colormap want maximum magnitude different water land reflected colormap import cmocean import matplotlibpyplot plt cmap cmoceancmtopo fig ax pltsubplots figsize nprandomrandint mappable ax pcolormesh cmapcmap ax settitle value stillnshow possibility colorbar figcolorbar mappable axaxes newcmap cmoceantoolscrop cmap mappable ax pcolormesh cmapnewcmap ax settitle colorbar show colornrange used data figcolorbar mappable axaxes source code png hirespng pdf colormap detail thermal thermal colormap sequential dark blue representing lower cooler value transitioning red yellow representing increased warmer value glider data texas geochemical environmental research group gerg data publication kenel c grolimund li x panepucci e samson v sanchez f leinenbach c situ investigation phase transformation additive manufacturing condition combining laser melting highspeed microxray diffraction scientific report usamentiaga r ibarracastanedo c klein maldague x peeters j sanchezbeato nondestructive evaluation carbon fiber bicycle frame using infrared thermography sensor temperature plot ctd data upper ocean made luz zarate jimenez ph plot full water depth bottle data dot represent depth bottle water collected made luz zarate jimenez wunsch c towards determining uncertainty global oceanic mean value heat salt surface elevation tellus dynamic meteorology oceanography showing temperature meteorology work maarten reyniers modis sea surface temperature nasa obpg sebastian steinke glider data midatlantic regional association coastal ocean observing system maracoos ocean model visualization tecplot potter h cold wake typhoon chaba deep sea research part oceanographic research paper haline haline colormap sequential might used dark blue representing lower salinity fresher water transitioning green light yellow representing increased salinity saltier water colormap based matplotlib ylgnbu recreated scratch using viscm tool glider data texas geochemical environmental research group gerg model output northwest gulf mexico physical oceanography numerical group pong texas plotting ctd data temperature salinity r oce package clark richards alkalinity plot full water depth bottle data dot represent depth bottle water collected made luz zarate jimenez salinity plot ctd data upper ocean made luz zarate jimenez glider data midatlantic regional association coastal ocean observing system maracoos solar solar colormap sequential dark brown low value increasingly bright yellow potentially represent increase radiation water ice ice colormap sequential dark blue almost black light blue almost white use could representation sea ice example provided chad greene showing sea ice concentration around antarctica arctic sea ice thickness nikolay koldunov gray gray colormap sequential black white uniform step perceptual colorspace colormap generic used sequential dataset import cmocean import matplotlibpyplot plt fig pltfigure figsize ax figaddsubplot cmoceanplotstest cmoceancmgray axax ax figaddsubplot cmoceanplotsquickplot cmoceancmgray axax source code png hirespng pdf oxy oxy colormap sequential colormap representing normal range oxygen saturation ocean water diverging way colormap represent state supersaturation bottom colormap colored reddish highlight hypoxic low oxygen water still print relatively seamlessly grayscale case red hue important application top colormap divergence colored yellow highlight supersaturated water minimum maximum value colormap meant controlled order properly place low oxygen supersaturated oxygen state properly colormap developed mississippi river plume area low supersaturated condition regularly seen monitored model output northwest gulf mexico physical oceanography numerical group pong texas simulation bottom oxygen using simple parameterization bottom oxygen utilization reveals complex structure bottom oxygen area affected hypoxia stretch nearly km along shelf variability much smaller scale kilometer also evident position mississippiatchafalaya river plume instability present within plume determine extent structure hypoxic bottom water veronica ruiz texas oxygen plot ctd data upper ocean made luz zarate jimenez deep deep colormap sequential light yellow potentially represent shallower water pale green increasingly dark blue purple represent increasing depth somov sea bathymetry josué martinez moreno blender gwyther e kane j galtonfenzi b k monselesan p greenbaum j intrinsic process drive variability basal melting totten glacier ice shelf nature communication dense dense colormap sequential whitishblue low value increasing purple increasing value could used represent increase water density two example colormap shown texas university glider colormap based matplotlib purple recreated scratch using viscm tool potential density plot ctd data upper ocean made luz zarate jimenez estimated ammonium san francisco bay rusty holleman algae algae colormap sequential whitishgreen low value increasing green increasing value could used represent increase chlorophyll water two example colormap shown texas university glider colormap based matplotlib green recreated scratch using viscm tool example data rbr del mar oceanographic dmo wirewalker wavepowered profiling system satellitederived chla site indicated frankie pavia matter matter colormap sequential whitishyellow low value increasing pink increasing value could used represent increase material water two example colormap shown texas university glider estimated dissolved nitrogen san francisco bay rusty holleman turbid turbid colormap sequential light dark brown could used represent increase sediment water speed speed colormap sequential light greenish yellow representing low value dark yellowish green representing large value colormap positive half delta colormap example colormap numerical simulation texas louisiana shelf amp amp colormap sequential whitish dark red could used represent increase wave height value colormap positive half balance colormap baumgartner b l laughlin r jin tsimring l hao n hasty j flavinbased metabolic cycle integral feature growth division single yeast cell scientific report lenhart h j große f assessing effect wfd nutrient reduction within ospar frame using transboundary nutrient modeling frontier marine science grunert b k brunner l hamidi bravo h r klump j v quantifying influence cold water intrusion shallow coastal system across contrasting year green bay lake michigan journal great lake research tempo tempo colormap sequential whitish dark teal could used represent increase wave period value colormap negative half curl colormap estimated nitrate san francisco bay rusty holleman rain rain colormap sequential light dry color blue wet color could used plot amount rainfall rainfall chad greene phase phase colormap circular spanning hue set lightness value map intended used property wave phase tidal phase wrap around represented without major perceptual jump colormap tidal phase north atlantic ocean kristen thyng topo topo colormap two distinct part one shade blue yellow represent water depth deep colormap one shade brown green represent land elevation bathymetry topography chad greene balance balance colormap diverging dark blue offwhite dark red representing negative zero positive value could used represent sea surface elevation deviation surface elevation shade color away neutral offwhite case shade red chosen represent sea surface elevation reference value often mean sea level connect warmer water typically associated increase free surface loop current gulf mexico example colormap numerical simulation texas louisiana shelf colormap based matplotlib rdbu recreated scratch using viscm tool spatial temporal oceanographic query system stoqs delta delta colormap diverging darker blue offwhite shade yellow green could used represent diverging velocity value around critical value usually zero colormap inspired francesca samsel similar colormap generated scratch using viscm tool plotly model output northwest gulf mexico physical oceanography numerical group pong texas curl curl colormap diverging darker teal offwhite shade magenta could used represent diverging vorticity value around critical value usually zero example colormap numerical simulation texas louisiana shelf diff diff colormap diverging one side shade blue one side shade brown surface pressure anomaly december chad greene tarn tarn colormap diverging one side dry shade brown range green blue positive end colormap meant reflect color rain thus complementary colormap rain rain anomaly around critical value rain anomaly chad greene resource favorite resource cmocean available elsewhere colormap julia spatial temporal oceanographic query system stoqs geospatial database software package designed providing efficient access situ oceanographic measurement data example beautiful visualization earth windcurrentstemperatureeverything visualization wonderful visualization worldwide wind ocean dynamic property also great teaching seems continually development getting new field plotting option fall foliage map easy use clear eyecatching aspire clever visualization upshot political leaning depending birth year perfect use diverging red blue colormap jet bad colormap choose better series talk scipy conference talking colormaps damon mcdougall introducing problem jet representing data kristen thyng following choose better colormaps including using perceptually uniform colormaps considering whether information represented sequential diverging nature nathaniel smith stéfan van der walt explaining jet colormap bad even bad health follow proposing new colormap matplotlib python plotting library kristen thyng building work done nathaniel stéfan proposal colormaps plot typical oceanographic quantity led cmocean tip making good figure
496,Lobsters,visualization,Data Visualization,How we used data to re-arrange our open office to optimize for noise-level and focus,https://segment.com/blog/how-we-added-10-people-without-hiring-a-soul/,used data rearrange open office optimize noiselevel focus,noise coming decibel noiserecording app,segment focus one four core value difficult team member focus office june ran internal team survey help hurt focus result showed chatter noise one biggest culprit distraction around office slack group channel came secondthese answer left u two difficult question solve noise problem open floor plan noise even coming get bottom decided build io app collect decibel level around office found noise level varied widely throughout office using new data changed office layout increase ability focus numerically speaking increased focused time measured survey equivalent hiring teammate beyond number feel great focus noise coming first thought bit chatty demanding quiet horrible collaborative work environment also noticed something odd people walked office often say wow one quietest office ever course survey said office noisy distractingthis discrepancy particularly confusing office open floor plan sound ought travel well around big open space strange two widely divergent story around quietness loudness officehere picture showing high ceiling plant open layout floorplan showing lack lot way sound bounce around view shown blue conflicting anecdotal story visitor teammate perplexing get bottom thing needed hard data better way collect data ambient sensor called iphones already sitting around office built app record decibel level different area give u real data understand situationthe io app tiny us apple avaudiorecorder class levelmetering passively collect report average maximum ambient decibel level every second server monitoring tool datadog opensourced decibel noiserecording app use add datadog api key gooriginally planned ask bunch people install phone around office vp engineering much better idea deploy ipads outside every conference roombelow see data collection point ipad mini red dot outside room graph show measurement august clearly showing spike noise office throughout day absolute value arbitrary data good relative comparison among thing see full db difference quietest loudest part office db feel roughly twice loud big difference finally average noise level result plus manual interpolation sparse data collection point overlaid floor plan office red loudest green quietest resolved mystery front office visitor hang twice quiet quieter compared area people work set anecdotal story right showed graph tony one security guard said oh yeah way quieter front office even night immediately ditch open floor plan although looking various option next office new noise level data gave u obvious way reduce distraction team needing quietest work area engineering product design move quietest part officelast month made big move team needing verbal collaboration segment sale support marketing team moved naturally louder part office team needing quiet engineering product design moved quietest part officewe still dialing part office became bit cramped rerun original focus survey team showed total focus time increased time office purely numerical sense could equate hiring people also feel awesome focusthe combination survey noise data incredibly helpful iterating towards productive office still lot idea test example started experiment team new war room layout keep looking way optimize environment productive fun measuring result go would love share result experimented measured result space
498,Lobsters,visualization,Data Visualization,Programming R at native speed using Haskell,http://blog.tweag.io/posts/2015-09-08-programming-r-at-native-speed-in-haskell.html,programming r native speed using haskell,,
499,Lobsters,visualization,Data Visualization,Attack discrimination with smarter machine learning,http://research.google.com/bigpicture/attacking-discrimination-in-ml/,attack discrimination smarter machine learning,attacking discrimination smarter machine learning classification discrimination paper hardt price srebro improving machine learning system,attacking discrimination smarter machine learning machine learning increasingly used make important decision across core social domain work ensuring decision nt discriminatory becomes crucial discus threshold classifier part machine learning system critical issue discrimination threshold classifier essentially make yesno decision putting thing one category another look classifier work way potentially unfair might turn unfair classifier fairer one illustrative example focus loan granting scenario bank may grant deny loan based single automatically computed number credit score loan applicant two scenario credit score higher score represent higher likelihood payback circle represents person dark circle showing people pay back loan light circle showing people default color clean separation b overlapping category diagram dark dot represent people would pay loan light dot would nt ideal world would work statistic cleanly separate category left example unfortunately far common see situation right group overlap single statistic stand many different variable boiling one number case credit score computed looking number factor including income promptness paying debt etc number might correctly represent likelihood person pay loan default might relationship usually rare find statistic correlate perfectly realworld outcome idea threshold classifier come bank pick particular cutoff threshold people whose credit score denied loan people granted loan obviously real bank many additional complexity simple model useful studying fundamental issue clear google nt use credit score product simulating loan threshold drag black threshold bar left right change cutoff loan credit score higher score represent higher likelihood payback circle represents person dark circle showing people pay back loan light circle showing people default color threshold decision outcome profit diagram us synthetic data show threshold classifier work simplify explanation staying away reallife credit score data see show simulated data based score see picking threshold requires tradeoff low bank give loan many people default high many people deserve loan wo nt get one best threshold depends one goal might maximize number correct decision threshold example another goal financial situation could maximize profit bottom diagram readout hypothetical profit based model successful loan make default cost bank profitable threshold match threshold correct decision classification discrimination issue correct decision defined sensitivity factor becomes particularly thorny statistic like credit score end distributed differently two group imagine two group people blue orange interested making small loan subject following rule successful loan make unsuccessful loan cost everyone credit score simulating loan decision different group drag black threshold bar left right change cutoff loan click different preset loan strategy loan strategy maximize profit max profit constraint group unaware blue orange thresholdsare demographic parity fraction blue orange loan equal opportunity fraction blue orange loan people pay max profit profitable since constraint two group different threshold meaning held different standard group unaware group threshold orange group given fewer loan overall among people would pay back loan orange group also disadvantage demographic parity number loan given group among people would pay back loan blue group disadvantage equal opportunity among people would pay back loan blue orange group equally well choice almost profitable demographic parity many people get loan overall blue population orange population profit profit case distribution two group slightly different even though blue orange people equally likely pay loan look pair threshold maximize total profit click max profit button see blue group held higher standard orange one could one obvious solution bank pick threshold make much money possible another approach would implement groupunaware hold group standard really right solution though one thing real difference two group might fair ignore example woman generally pay le life insurance men since tend live longer mathematical problem groupunaware approach even group equally loanworthy example difference score distribution mean orange group actually get fewer loan bank look profitable groupunaware threshold goal two group receive number loan natural criterion demographic parity bank us loan threshold yield fraction loan group computer scientist might put positive rate across group context might right goal situation diagram though still something problematic demographic parity constraint look loan given rate loan paid back case criterion result fewer qualified people blue group given loan orange group avoid situation paper hardt price srebro defines concept called equal opportunity constraint people pay back loan fraction group actually granted loan data science jargon true positive rate identical group improving machine learning system key result paper hardt price srebro show essentially scoring possible efficiently find threshold meet criterion word even nt control underlying scoring system common case still possible attack issue discrimination organization control scoring system using definition help clarify core issue classifier nt effective group others cause problem group uncertainty restricting equal opportunity threshold transfer burden uncertainty away group onto creator scoring system provides incentive invest better classifier work one step long chain research optimizing equal opportunity one many tool used improve machine learning mathematics alone unlikely lead best solution attacking discrimination machine learning ultimately require careful multidisciplinary approach thanks meredith whittaker daniel smilkov jimbo wilson colleague google help piece
500,Lobsters,visualization,Data Visualization,"Off the streets, Land subdivision in PostGIS - Part 2",http://blog.garage-coding.com/2016/10/11/land-subdivision-in-postgis.html,street land subdivision postgis part,,polygon p nearest road r get bounding box b p search cutting pointslines confined b compute extreme point bounding box label cardinal direction represent goal cut corner c also called subdivision p contains nearest boundary point road cut done using two line one horizontal one vertical want c given area order find corner cut look extreme point check one closest road use sweepinglines find parcel need sweepinglines mentioned moving away corner word away closest road point follows assume northwest corner need cut place inset horizontal line located sqrt south relative north edge inset positioned anticipate target area form square area inset one aim larger target split polygon take upper half use another sweeping line go west east find another cutting line allows u find parcel required area area inset insufficient target area search better position using binary search along northsouth direction additional detail way cut search work using inset avoid getting thin horizontal strip initial polygon squarerectangle expected square vast majority case detail corner case nw covered ne corner horizontal go north south vertical go east west se corner horizontal go south north vertical go east west sw corner horizontal go south north vertical go west east sweep line always move away corner parcel target area found cut polygon original polygon gi database updated new parcel inserted separate original polygon split
501,Lobsters,visualization,Data Visualization,Algorithms for making more interesting mazes,http://www.gamasutra.com/blogs/HermanTulleken/20161005/282629/Algorithms_for_making_more_interesting_mazes.php,algorithm making interesting maze,site book grid library unity prim algorithm room pillar wall exactly select first room select wall process list grid coloring u v w u v w w u v u v u v u v u v u p p p p p p p hex geometry game developer using coloring assign room wall pillar p p p p p p room adjacent four wall wall adjacent one two room wall adjacent room room adjacent wall vice versa tile selecting wall process select first wall select last wall take fifth last list short first manhattan distance chebyshev distance knight distance take closest wall start using manhattan norm b take closest wall start point using chebyshev norm c take closest wall start point using knight norm select furthest wall start using euclidean norm e select furthest wall start using manhattan norm f select furthest wall start using knight distance g last two select one closest last visited using knight distance h last two select wall closest start using knight norm take first horizontal horizontal available take random wall j alternately select one last two vertical horizontal wall randomly k direction sequence v v v v h v v v v h v v v v h v v v v h repeated choose one last two wall direction randomly robust prim symmetry pattern rotation reflection translation temporal switching switching center symmetry every step switching center reflection every step spatial switching quadrant sequential generation partitioning recursive combination idea note implementation conclusion,following blog post unless otherwise noted written member community thought opinion expressed writer gamasutra parent company article show technique use make interesting maze working perfect maze square grid maze perfect exactly one path pair room several algorithm generate perfect maze mathematical point view ideal algorithm one produce possible maze equal probability algorithm called unbiased usually case procedurally generated content unbiased algorithm give u maze best game tend look alike tend look homogeneous part maze look alike unattractive course totally unbiased algorithm generate possible maze however many probability generating interesting maze low large part article deal introducing bias build set maze visually distinct obviously different within set feature across different part maze visually appealing instead developing new algorithm make modification prim algorithm prim algorithm already bias enough type interest u use algorithm faster unbiased one little bias stand way want interested maze algorithm check site book author code written article written grid library unity prim algorithm start set wall set room set pillar room always open pillar always closed wall open closed room wall must satisfy condition room adjacent four wall wall adjacent one two room wall adjacent room room adjacent wall vice versa algorithm generate maze mark wall closed select room set room add path add four wall room wall list list keep processing empty wall list empty select wall list find room adjacent wall two adjacent room exactly one path mark wall open add unvisited room path add wall adjacent unvisited room wall list remove wall wall list set open object room open wall set closed object set pillar closed wall left thing vague description room pillar wall exactly connected set cell grid set always one cell choose set give u different maze select first room way like different strategy lead different maze select wall process list way like different strategy lead different maze vanilla prim use following scheme decide cell room wall pillar room white wall blue pillar red called gridcoloring grid coloring useful kind thing discus detail select first room randomly select wall randomly setting resulting maze look like grid coloring grid coloring repeating pattern k distinct color example notice pattern find two vector u v integer n cell w mu nv w color w example three coloring following pair u v u v u v u v pair unique example could also use u v first example make algorithm easy implement restrict coloring ycomponent u use remaining component identify coloring example scheme number color equal first value multiplied last see coloring get color vanilla prim algorithm use coloring note triplet describes coloring also unique coloring coloring practice matter purpose need find one description coloring course use color picture algorithm use integer coloring function c p point p return integer range ther confusion drop three colorparameters write c p c x generic version algorithm slightly tricky understand implement instead notice make lookup table hand smallest positive number color n smallest positive number n color lookup table l p find coloring formula c p l px mod py mod n note mod always example mod written article matter integer use color grid coloring see grid coloring hardcore math see hex geometry game developer although document deal hex grid mathematics exactly square grid using coloring assign room wall pillar used coloring classify cell room wall pillar c p c p room c p c c p c p wall c p c p pillar going general idea let another example coloring time chosen color make certain relationship clear let make wall two connected yellow cell two connected blue cell room white cell remaining cell isolated yellow blue cell border make pillar let see three condition hold room adjacent four wall true except room border get around making room border pillar instead wall adjacent one two room true wall adjacent room room adjacent wall vice versa true use picture like always true need check however write function later return wall adjacent room return room adjacent wall function return arbitrary pointsets important check condition run prim algorithm configuration result maze look complete different first maze see better algorithm use tile like suitably rotated following example based coloring shown make easier see going recolored grid wall color room white wall dark blue dark yellow pillar light blue light yellow make room border pillar white setup easy check room adjacent four wall wall adjacent one two room use coloring wall shown room border made pillar room adjacent four wall wall adjacent one two room maze derived way coloring notice maze seems sheared coloring sheared maze derived way coloring maze even sheared think always possible find scheme work coloring long number color higher checker board coloring example work make one color wall color room wall adjacent four room mean condition algorithm satisfied tile make simple maze elaborate replacing tile intricate one type tile room pillar open closed horizontal wall open closed vertical wall example tile set tile tile resulting maze tile set completely work two border fixed simply ignoring two row column design tile make sure tile connects correct neighbor example open horizontal tile must connect western eastern neighbor note compulsory connection one possible example tile design pillar also connects northern neighbor western neighbor work western neighbor designed always deadend image show pillar bottom right connects northern neighbor western neighbor connection true connection since connection western neighbor lead deadend furthermore must ensure arrangement lead cycle finally must make sure opening connected path give u regular looking grid fact maze equivalent maze design room elaborate tile wall simple tile pillar tile thing note observation given tile set design type derive tile set designing tile set quite hard contrast mixed set real design room adjust final algorithm work mixed set instead easy introduce variation allows u build le regular looking maze example tile opening odd location serve valid wall selecting wall process far gotten cool variation vanilla prim algorithm maze still type blandness one way give maze distinct characteristic use strategy selecting wall random first one interesting solvability point view see later make useful building block effect also depend order add wall list unless specified added wall order north east south west select first wall select last wall take fifth last list short first following selection scheme make use different distance metric already familiar euclidean distance metric standard distance metric grid algorithm two metric often useful maze algorithm use third manhattan distance taxicab distance rook distance many move rook chessboard make moving one point allowed move one square time given p q ab px qx ab py qy chebyshev distance chessboard distance many move kind must make move one square another given p q max ab px qx ab py qy knight distance many move knight must make get one point another metric unusual behaves quite erratically short distance longer distance resembles metric closely behavior property useful u prevents maze become overcrowded around point quickly choose always process closest wall point using metric unfortunately simple formula metric find correct implementation take closest wall start using manhattan norm b take closest wall start point using chebyshev norm c take closest wall start point using knight norm first glance look somewhat similar previous strategy one important difference previous strategy always lead open row column across entire maze select furthest wall start using euclidean norm e select furthest wall start using manhattan norm f select furthest wall start using knight distance g last two select one closest last visited using knight distance h last two select wall closest start using knight norm take first horizontal horizontal available take random wall j alternately select one last two vertical horizontal wall randomly k direction sequence v v v v h v v v v h v v v v h v v v v h repeated choose one last two wall direction randomly go like forever generate variety maze distinct property feature include windy maze regular maze branchy long branch average many long straight robust prim section follow need make slight modification maze generation algorithm version beginning article prevents cycle adding wall adjacent one unvisited room replace check explicit test see whether adjacent room already connected add wall modification allows u add wall list mark wall closed select room set room add path add four wall room wall list list keep processing empty wall list empty select wall find room adjacent wall two adjacent room already connected mark wall open add unvisited room path add wall adjacent unvisited room wall list remove wall wall list connected mean exists path one may shared room rest maze algorithm require wall select list usually combine selecting wall list selecting wall using criterion next section give interesting criterion use version algorithm significantly slower vanilla version us trick make unnecessary check connectedness explicitly possible similar trick used speed algorithm nt know symmetry pattern symmetry useful type procedural generation make random pattern seem designed make pleasing eye maze symmetry also useful turn extreme bland maze something interesting get overall symmetric effect wall process also process symmetric counterpart modify algorithm choose wall follows current pattern empty choose wall wall list add set wall symmetric chosen wall pattern continue wall take next wall pattern remove pattern continue wall type symmetry want determines wall add pattern list example want rotational symmetry add wall rotated degree pattern maze constrained contain cycle resulting maze always symmetrical rotation using selection scheme reflection using selection scheme f using selection scheme g translation using selection scheme h temporal switching instead using strategy generate entire maze switch strategy time result maze local feature depending choose wall begin completely homogenous example switching center symmetry every step using selection scheme f switching center reflection every step select wall closest current symmetry using euclidean distance switching choosing closest point start furthest point center center randomly chosen every using euclidean distance switching strategy every step starting center maze switching strategy h every step spatial switching also change strategy according maze implement partition maze set using criterion select random partition apply strategy partition select next wall idea different way partitioning grid quadrant partition wall according quadrant fall partitioned diagonally opposite quadrant using either one scheme select last horizontal last horizontal available select last vertical wall last wall vertical available switch time use checker board coloring determine use get differentsized block floordivide point integer calculating coloring apply symmetry last one result surprising last one rotationally symmetric wall added another coloring partition done dividing point happens add rotational symmetry translational symmetry following example partition cell calculating color index mod coloring pattern symmetry rotational symmetry reflective symmetry sequential generation get advanced technique need modify algorithm continue generating maze partially generated maze although use switch strategy already seen without modification simply fly point modification combine technique altered fly least easily recursive combination described later two variable version algorithm far necessary correct operation first path keeping track node already visited second wall list keeping track wall still need explore adapt algorithm work partial maze need reconstruct path reconstructed selecting room least one wall open remember mark room except border open beginning simply add open room path walllist really necessary reconstruct complete list instead build necessary allows u worry order wall wall selection scheme dependent order initial element path prevent u expanding node unnecessarily work long existing path partition existing maze disconnected set get around wall list empty need check whether candidate wall left process case room path wall adjacent room candidate finally also put another stop criterion continue also useful stop maze complete mark wall input maze closed add room adjacent least one wall path find wall adjacent room path wall exists add wall list want continue wall list empty select wall find room adjacent wall two adjacent room already connected mark wall open add unvisited room path add wall adjacent unvisited room wall list remove wall wall list room connected find wall adjacent least two partition wall must exist otherwise room connected add wall wall list continue step partitioning method divide grid set smaller square square overlap two square share border generate maze usual partition finally run maze algorithm entire maze join piece together example look example us reflection rotation small grid select wall randomly employ grid coloring partition select strategy example version us checkerboard coloring select symmetry type use recursive combination method generate maze blow maze factor example cell original cover several cell new one run maze algorithm inside bigger shape finally rerun algorithm entire grid repeat time following grid started maze double time variation different factor different number time grown idea covered many idea article interesting one time explore yet using probabilistic switching using strategy map instead formula decide strategy map simply grid size index denoting strategy use combining pure regular algorithm produce spiral comb zigzag maze hilbertcurves example tried come selection scheme would give regular maze much success seems easier produce type maze directly note implementation important implement correct version simplest version maze algorithm first designing version bell whistle serve benchmark correctness visual appearance performance need implementation following mistake may crop faulty condition lead infinite recursion expensive make mistake implement unity example kill unity potentially losing scene restart thing may cause infinite recursion forgetting remove processed wall wall list readding already processed wall list adding floor pillar list false geometric algebraic assumption example following three statement always simultaneous true maze rectangle odd dimension center maze border maze never contain point colored room usually calculation involving size maze maze scaled border removed maze positioned larger maze preserving coloring positioning small maze bigger one assertion helpful test assumption maze interim data structure helpful flush bug useful assertion wall list start nonempty wall list shrink wall removed center stating position four corner coloring assume point coloring thing transformation distance maze size expect especially algorithsm smaller maze used make bigger one conclusion given idea making interesting maze main takeaway point use coloring mark cell regular way exploit algorithm maze generation variation discussed modify algorithm make symmetric move get overall symmetry technique also work well generation algorithm modify strategy time space get local feature hope implement maze algorithm find idea useful
502,Lobsters,visualization,Data Visualization,Map of Middle Earth with R,http://www.r-chart.com/2016/10/map-of-middle-earth-map-above-was.html,map middle earth r,,
503,Lobsters,visualization,Data Visualization,90% of software developers work outside Silicon Valley,http://qz.com/729293/90-of-software-developers-work-outside-silicon-valley/,software developer work outside silicon valley,study software trade group app association common job four state population map,much code write developer chronic talent shortage afflicting silicon valley developer tooa study software trade group app association analyzed government private sector data map software developer live identified open position around country found developer live far away technology epicenter silicon valley job opening follow similar patternthe upshot silicon valleystyle talent war moving away tech hub smaller metro even rural area everywhere rural vermont middle montana need programmer find place expect software developer part local economy said association spokesman jonathan godfrey interview pretty much everywhere act app associationlocation matter le many new technology job software developer position common state growing almost every region country software developer common job four state washington utah colorado virginia according u census bureau data startup tech giant setting outpost lowercost area seattleenterprise finance techheavy sector able expand footprint hometown build new office university town computer science graduate offering salary far local average average salary software developer nationwide developer want hang techy type largest metro area still best bet boston bay area seattle washington dc top list nasa also put alabama map boulder colorado population punch well weight cluster promising startupsbut rural suburban area rise well virginia northern new mexico central new hampshire relatively high concentration developer place salt lake city region driving large demand new developer position open company including fidelity raytheonact app software developer job opening exist united state outside major tech hubsthe app association built map data bureau labor statistic national center education statistic u census bureau ap college board glassdoor
504,Lobsters,visualization,Data Visualization,Urban heat islands & street trees in Philadelphia,http://urbanspatialanalysis.com/urban-heat-islands-street-trees-in-philadelphia/,urban heat island street tree philadelphia,urban heat island effect weatherdata r package landsat download map algebra great video tutorial wunderground reported exploratory analysis street tree effect land surface temperature incredible dataset nearly every street tree citywide treephilly master urban spatial analytics kensteif,ken steif source nasa earth observatory past august hottest year according nasa city heat absorbed built environment feature like street parking lot rooftop reflected back weary citydwellers whose respite water ice super soaker scientist call urban heat island effect posit density built environment increase city temperature relative outlying suburban rural area learn post however temperature vary great deal across city well take look land surface temperature map philadelphia derived landsat satellite imagery explore extent human intervention case street tree help lower temperature using satellite imagery estimate land surface temperature difficult estimate small change temperature across space one way grab weather station data wonderful weatherdata r package however handful weather station reporting given time spread evenly throughout philadelphia challenging get consistent smallarea measurement across city source weather station wundergound satellite imagery specifically landsat provides relatively quick way estimate land surface temperature landsat data free year community talented developer built solution make easy download imagery landsat data meter resolution make coarse detect ate lunch today park certainly big enough look temperature difference across city great advantage analyzing world way satellite imagery use traditional raster mapping analytics satellite image actually comprised multiple band image overlaid subjected sort math map algebra image show natural color composite philadelphia landsat scene philadelphia pa perhaps ubiquitous example landsatderived spatial intelligence normalized difference vegetation index ndvi simple indicator showing intensity vegetation vary across landscape image ndvi philadelphia map illustrates stark difference developed area center city fairmount park running northwest city ndvi philadelphia convert landsat imagery land surface temperature map number step undertaken data cleaned using atmospheric correction algorithm subjected several transformation interested great video tutorial ensure robust analysis chose imagery taken middle afternoon hot day july wunderground reported high degree philadelphia despite fact used digesting temperature information citywide scale image land surface temperature make clear temp dramatically within city well land surface temperature philadelphia hot wednesday july seemed place catch break heat fairmount park city northwest pennypack park northeast better demonstration much surface temperature vary across city image show area estimated warmer stated degree high day image well illustrates concept urban heat island area land surface temperature greater degree high day interested see heat island effect neighborhood check interactive map overlay transparent land surface area map top raw satellite imagery make sure zoom hottest area city see driving warmest hot spot interactive urban heat island map philadelphia resolution imagery certainly sharp enough notice interesting variation across philadelphia appears though expansive warehouse district especially black roof collect heat large parking lot also blame significant hot spot parking lot surround sport stadium south philly black roof warehouse northeast philly parking around stadium south philly interesting west philadelphia neighborhood live show land surface temperature right around degree relative cool spot day streetcar suburb long known tree lined street active park area center image woodland cemetery clark park west perhaps something said effect tree urban heat island west philadelphia exploratory analysis street tree effect land surface temperature recently city philadelphia released incredible dataset nearly every street tree citywide dataset includes whopping street tree many tree visualize point map look density tree visualizing tree density alongside land surface temperature land surface temperature street tree density clear density street tree greatest center city neighborhood periphery including west philadelphia note street tree data report low density fairmount park city northwest land surface temperature map show relatively cool temp part suggests street tree data complete tree census correlation land surface temperature street tree likely strong would imagine reality statistically significant correlation minimal nevertheless build exploratory regression attempt estimate street tree effect temperature controlling host built environment characteristic like park regression land surface temperature function street tree density control aggregate data census tract regress average land surface temperature progressively tract area sq mi sum street length ft park area sq mi total impervious surface sq ft combination explanatory variable explain much variation temp estimating average additional tree census tract land surface temperature decrease degree kind trivial exercise already discovered importance roof color size data exist control model worth mentioning however two approach would really help u explore statistical relationship tree urban heat island philadelphia first use city high resolution dataset tree canopy small portion dataset west oak lane neighborhood philadelphia note dark green tree canopy make dataset powerful ft resolution surprisingly also created using satellite imagery street canopy dataset would give u true tree census next compliment analysis would include form variation would allow u observe would happened temperature area planted tree one great avenue generate quasiexperimental setting would use data treephilly phenomenal program run city philadelphia thus far given away planted tree citywide could use data compare temperature change around area requested planted tree treatment group area requested never planted tree control group response continued climate change sealevel rise increased urban migration require new city planning environmental public health intervention lessen urban heat island effect usual data spatial analytics help u better allocate resource help ensure cooler future city ken steif phd founder urban spatial also director master urban spatial analytics program university pennsylvania follow twitter kensteif
505,Lobsters,visualization,Data Visualization,The Best Homework Ever?,http://www.math.brown.edu/~banchoff/BHE.pdf,best homework ever,,obj endobj xref n n n n n n n trailer startxref eof obj stream endstream endobj obj endobj obj procset pdfimagec typepage endobj obj stream endstream endobj obj stream endstream endobj obj stream jfif jfif c w ޜ c ϥkb r ӯ itj յ r zz z j irsԍ e
506,Lobsters,visualization,Data Visualization,Meet Leaflet 1.0,http://leafletjs.com/2016/09/27/leaflet-1.0-final.html,meet leaflet,back list blog post meet leaflet vladimir agafonkin changelog new release cycle next new contributor,back list blog post meet leaflet posted september vladimir agafonkin today mark final release leaflet culmination several year work dozen contributor world fastest stable polished leaflet release ever changelog contains change compared previous stable highlight include huge performance improvement aspect library vector layer particular new ltooltip class dynamic labeling need flyover animation zooming panning curve mapflyto fractional zoom level support mapsetzoom much better tile loading algorithm le flickering custom pane management including multiple vector layer pane interleaving vector tile layer better support nonstandard projection accessibility feature vastly improved documentation ton bugfixes stability improvement release possible without amazing diverse loving community incredibly proud part thank much kind support new release cycle release way overdue taken long part attributed initial ambition required rewriting many part library almost scratch part due perfectionism betarc release already stable last stable release part underestimated cost introducing big breaking change library used thousand developer starting switching fast release cycle new version come every week also prefer many small incremental change release ambitious rewriting quest next addition supporting new release fix improvement following area get close attention cleaner stable plugin ecosystem want make sure popular plugins work well latest release maintained revise plugin list page tighten review process take key plugins wing leaflet organization github spend time working tutorial example cover advanced feature library popular plugins integration library like reactangular explore switching modern javascript flavor module system babel rollup map rotation support please help u test new release make sure work favorite plugins get involved discussion github forget always looking new contributor course let celebrate love leaflet team
507,Lobsters,visualization,Data Visualization,Changes to the default Matplotlib style,http://matplotlib.org/devdocs/users/dflt_style_changes.html,change default matplotlib style,vega source code png pdf option source code png pdf many detail source code png pdf source code png pdf source code png pdf source code png pdf source code png pdf source code png pdf source code png pdf source code png pdf supported source code png pdf dejavu sans pdf sample full coverage source code png pdf source code png pdf source code png pdf source code png pdf direction source code png pdf number tick source code png pdf labeling minor tick source code png pdf format string,important change matplotlib change default style impossible select best default case designed work well common case classic style sheet provided reverting default value single line python color default property cycle changed b g r c k color palette used vega originally developed tableau source code png pdf addition changing color additional method specify color added previously default color single character shorthand notation red green blue cyan magenta yellow black made easy type usable abbreviated style string plot however new default color specified via hex value access color outside property cycling notation color cn n take value added denote first color rcparams axespropcycle default cycler color see specifying color detail restore old color cycle use cycler import cycler mplrcparams axespropcycle cycler colorbgrcmyk set axespropcycle cycler color bgrcmyk matplotlibrc file new default color map used matplotlibcmscalarmappable instance viridis aka option source code png pdf introduction color theory viridis generated watch nathaniel smith stéfan van der walt talk see many detail alternative tool used create color map detail color map available matplotlib see choosing colormaps matplotlib videothe previous default restored using mplrcparams imagecmap jet setting matplotlibrc file however strongly discouraged default interactive figure background color changed grey white match default background color used saving previous default restored mplrcparams figurefacecolor setting figurefacecolor matplotlibrc file default style grid line changed black dashed line thicker solid light grey line source code png pdf previous default restored using mplrcparams gridcolor k mplrcparams gridlinestyle mplrcparams gridlinewidth setting gridcolor k grid color gridlinestyle dotted gridlinewidth point matplotlibrc file default dpi used onscreen display changed dpi dpi default dpi saving file due change onscreen display whatyouseeiswhatyouget saved file keep figure size term pixel order maintain approximately size screen default figure size reduced inch inch consequence default font size used title tick label ax label reduced maintain size relative overall size figure default dpi saved image dpi figure instance saved consequence trying match text figure directly external text previous default restored mplrcparams figurefigsize mplrcparams figuredpi mplrcparams savefigdpi mplrcparams fontsize mplrcparams legendfontsize large mplrcparams figuretitlesize medium setting figurefigsize figuredpi savefigdpi fontsize legendfontsize large figuretitlesize medium matplotlibrc file addition forward kwarg setsizeinches default true improve interactive experience backend canvas adjust size bound matplotlibfigurefigure must pas forwardfalse avoid circular behavior default configurable following change made default behavior scatter default size element scatter plot based rcparams linesmarkersize default consistent plot x old value new value scatter marker longer black edge color marker specified follow property cycle pulling patch cycle ax source code png pdf classic default behavior scatter recovered mplstyleuse classic marker size recovered via mplrcparam linesmarkersize npsqrt however also affect default marker size plot recover classic behavior percall basis pas following kwargs classickwargs edgecolors k c b following change made default behavior plot default linewidth increased dash pattern associated changed dash pattern scale line width source code png pdf previous default restored setting mplrcparams lineslinewidth mplrcparams linesdashedpattern mplrcparams linesdashdotpattern mplrcparams linesdottedpattern mplrcparams linesscaledashes false setting lineslinewidth linesdashedpattern linesdashdotpattern linesdottedpattern linesscaledashes false matplotlibrc file default cap end errorbars present source code png pdf also change return value errorbar list caplines empty default previous default restored setting mplrcparams errorbarcapsize setting matplotlibrc file previously boxplots composed mishmash style better worse inherited matlab element blue median red flier outlier black plussymbols whisker dashed line created ambiguity solid black cap drawn new default everything black except median mean line drawn set first two element current color cycle also default flier marker hollow circle maintain ability plussymbols overlap without obscuring data much source code png pdf previous default restored setting mplrcparams boxplotflierpropscolor k mplrcparams boxplotflierpropsmarker mplrcparams boxplotflierpropsmarkerfacecolor none mplrcparams boxplotflierpropsmarkeredgecolor k mplrcparams boxplotboxpropscolor b mplrcparams boxplotwhiskerpropscolor b mplrcparams boxplotwhiskerpropslinestyle mplrcparams boxplotmedianpropscolor r mplrcparams boxplotmeanpropscolor r mplrcparams boxplotmeanpropsmarker mplrcparams boxplotmeanpropsmarkerfacecolor r mplrcparams boxplotmeanpropsmarkeredgecolor k mplrcparams boxplotmeanpropsmarkersize mplrcparams boxplotmeanpropslinestyle mplrcparams boxplotmeanpropslinewidth setting boxplotflierpropscolor k boxplotflierpropsmarker boxplotflierpropsmarkerfacecolor none boxplotflierpropsmarkeredgecolor k boxplotboxpropscolor b boxplotwhiskerpropscolor b boxplotwhiskerpropslinestyle boxplotmedianpropscolor r boxplotmeanpropscolor r boxplotmeanpropsmarker boxplotmeanpropsmarkerfacecolor r boxplotmeanpropsmarkeredgecolor k boxplotmeanpropsmarkersize boxplotmeanpropslinestyle boxplotmeanpropslinewidth matplotlibrc file fillbetween fillbetweenx follow patch color cycle source code png pdf facecolor set via facecolors color keyword argument color cycled restore previous behavior explicitly pas keyword argument method call artist drawn patch matplotlibaxesaxesbar matplotlibaxesaxespie etc longer black edge default default face color instead b source code png pdf previous default restored setting mplrcparams patchforceedgecolor true mplrcparams patchfacecolor b setting patchfacecolor b patchforceedgecolor true matplotlibrc file default value linecolor kwarg hexbin changed none face none supplied line edge drawn around hexagon default value align kwarg bar barh changed edge center source code png pdf restore previous behavior explicitly pas keyword argument alignedge method call color line hatch determined edge color explicitly set use hatch color edge color explicitly set use rcparams hatchcolor default black looked artist creation time width line hatch pattern configurable rcparams rcparams hatchlinewidth default default point old behavior line width different depending backend pdf pt svg pt p px agg px old line width behavior restored across backends simultaneously restored single backend setting mplrcparams hatchlinewidth previous pdf hatch linewidth mplrcparams hatchlinewidth previous svg hatch linewidth behavior p agg backends dpi dependent thus mplrcparams figuredpi dpi mplrcparams savefigdpi dpi leave default figure mplrcparams hatchlinewidth dpi previous p agg hatch linewidth direct api level control hatch color linewidth hatching pattern rendered consistent density regardless dpi formerly high dpi figure would dense default low dpi figure would le dense old behavior directly restored density may increased repeating hatch specifier default font changed bitstream vera sans dejavu sans dejavu sans additional international math character otherwise appearance bitstream vera sans latin greek cyrillic armenian georgian hebrew arabic supported righttoleft rendering still handled matplotlib addition dejavu contains subset emoji symbol source code png pdf see dejavu sans pdf sample full coverage default math font using builtin math rendering engine mathtext changed computer modern ie latexlike dejavu sans change effect tex backend used ie textusetex true source code png pdf source code png pdf revert old behavior set mplrcparams mathtextfontset cm mplrcparams mathtextrm serif set mathtextfontset cm mathtextrm serif matplotlibrc file rcparam consulted text drawn artist created thus mathtext given canvas use fontset default interpolation method imshow nearest default resamples data sampling color mapping source code png pdf restore previous behavior set mplrcparams imageinterpolation bilinear mplrcparams imageresample false set imageinterpolation bilinear see help imshow option imageresample false matplotlibrc file previously input data normalized color mapped resampled resolution required screen meant final resampling done color space color map generally linear rgb space color color map may appear final image bug addressed almost complete overhaul image handling code input data normalized resampled correct resolution normalized dataspace color mapped rgb space ensures color color map appear final image viewer subsequently resamples image artifact may reappear previous behavior restored default shading mode light source shading matplotlibcolorslightsourceshade overlay formerly hsv previous autoscaling behavior find nice round number view limit enclosed data limit could produce bad plot data happened fall vertical horizontal line near chosen round number limit new default set view limit wider data range source code png pdf size padding x direction controlled axesxmargin axesymargin rcparams respectively whether view limit round number controlled rcparams axesautolimitmode default data original roundnumber mode view limit coincide tick previous default restored using mplrcparams axesautolimitmode roundnumbers mplrcparams axesxmargin mplrcparams axesymargin setting axesautolimitmode roundnumbers axesxmargin axesymargin matplotlibrc file tick grid plotted solid element filled contour line return previous behavior plotting tick grid line set rcparams axesaxisbelow false direction reduce collision tick mark data default tick point outward default addition tick drawn bottom left spine prevent porcupine appearance cleaner separation subplots source code png pdf restore previous behavior set mplrcparams xtickdirection mplrcparams ytickdirection mplrcparams xticktop true mplrcparams ytickright true set xticktop true xtickdirection ytickright true ytickdirection matplotlibrc file number tick default locator used x axis autolocator try find maximum number nicely spaced tick locator includes algorithm estimate maximum number tick leave room tick label default also ensures least two tick visible source code png pdf way using mplstyleuse classic restore previous behavior default axisbyaxis basis may either control existing locator via axxaxisgetmajorlocator setparams step create new maxnlocator import matplotlibticker mticker axsetmajorlocator mtickermaxnlocator step algorithm used maxnlocator improved may change choice tick location case also affect autolocator us maxnlocator internally logscaled axis default locator loglocator previously maximum number tick set could changed numticks kwarg setting maximum integer value string auto default value none equivalent auto auto setting maximum number larger reduced depending length axis unit tick font size case autolocator heuristic algorithm reduces incidence overlapping tick label prevent logformatter labeling minor tick minor tick log axis labeled axis view limit span range le equal interval two major tick see logformatter detail minor tick labeling turned using mplstyleuse classic controlled independently via rcparams source code png pdf autodateformatter format string default date format based iso format ie slowestmoving value first date formatters configurable dateautoformatter rcparams threshold tick interval rcparam classic day dateautoformatteryear day dateautoformattermonth b day dateautoformatterday b hour dateautoformatterhour h h minute dateautoformatterminute h f h second dateautoformattersecond h f h microsecond dateautoformattermicrosecond h f h f python x x date format may particular interest format date based current locale previous default restored mplrcparams dateautoformatteryear mplrcparams dateautoformattermonth b mplrcparams dateautoformatterday b mplrcparams dateautoformatterhour h mplrcparams dateautoformatterminute h f mplrcparams dateautoformattersecond h f mplrcparams dateautoformattermicrosecond h f setting dateautoformatteryear dateautoformattermonth b dateautoformatterday b dateautoformatterhour h dateautoformatterminute h f dateautoformattersecond h f dateautoformattermicrosecond h f matplotlibrc file
508,Lobsters,visualization,Data Visualization,"Histography, an interactive timeline of all history",http://histography.io/,histography interactive timeline history,editorial story,editorial story discover handpicked story entire history
510,Lobsters,visualization,Data Visualization,Responsive Graphing and Charting by Example using HTML5 Canvas,http://blog.coffeeandcode.com/responsive-graphing-and-charting-using-html5-canvas/,responsive graphing charting example using canvas,finished product link responsive charting graphing canvas element coffeeandcode codepen http technical requirement markup javascript everything must measured percent based parent container canvas rect documentation wwwcoffeeandcodecom,recently tasked creating dynamic chart graph client coaching space wanted chart dynamically created pdf well responsive web application post talk solved problem responsive web application using zero javascript dependancies added performance win finished product view code related post codepen link see pen responsive charting graphing canvas element byron delpinal coffeeandcode codepen client application http fair warning post going dry codeheavy pretty cool stuff stick technical requirement use image static content within charted area dynamic content generated vanilla javascript mitigate need bringing external library measurement drawing percentbased keep drawing responsive dynamic content stored data attribute canvas element markup want minimal possible barebones need image container hold image resize exact size image placeholder canvas drawing div class img alt index graph class src pathtoyourimageimagepng canvas dataaggregate dataknowledge datainterest dataobjectivity dataforesight dataconcentration id graphcanvas canvas div javascript lot javascript required make work tried best keep thing modular abstract thing made sense hopefully make bit easier digest initial json object used store known value bar graph line graph point var bargraphelement maxamount scoreattribute dataaggregate width xcoord yscale linegraphelementlist maxamount scoreattribute dataknowledge width xcoord ycoord yscale point line graph page loaded applicationjs file run conditional code see need draw graph page look like var canvaselement documentqueryselector graphcanvas graphelement documentqueryselector canvaselement graphelement drawgraph window graphelement canvaselement separate concern bit application logic finding required element passing actual drawgraph function drawgraph necessarily care element context used know drawing graph know drawing graph page need wait image load anything else complete method image used like var imgelement containerqueryselector img imgelementcomplete image already loaded initializedrawing else image loaded let attach event handler imgelementaddeventlistener load initializedrawing false initializedrawing function handle main logic flow break var initializedrawing function initializedrawing var context canvasgetcontext resizeandpositioncanvas canvas updatecontaineroffsets set stroke color contextfillstyle contextstrokestyle rgba draw overall score drawoverallscore context draw bar graph drawbargraph context draw line graph var l linegraphelementlistlength l var currentitem linegraphelementlist previousitem linegraphelementlist draw current point graph drawlinegraphpoint context currentitem draw line current point previous point drawlinegraphline context currentitem previousitem globaladdeventlistener resize resize false first thing grab canvas context pas around use draw everything need canvas element next need position canvas directly top image resizeandpositioncanvas function take canvas element manually size parent container image call updatecontaineroffsets function update canvascontaineroffsets object using later changed drawing color red time start putting thing graph responsively one key concept need understand everything must measured percent based parent container diving right drawoverallscore function see var drawoverallscore function drawoverallscore context contextfont getpixelwidthfrompercent px arial contextfilltext canvasgetattribute bargraphelementscoreattribute getpixelwidthfrompercent getpixelheightfrompercent pretty straight forward using filltext function put text page weirdness come converting percentage pixel abstracted away getpixelwidthfrompercent getpixelheightfrompercent function var getpixelheightfrompercent function getpixelheightfrompercent percent return canvascontaineroffsetsheight var getpixelwidthfrompercent function getpixelwidthfrompercent percent return canvascontaineroffsetswidth remember talking seeing canvascontaineroffsets object later anytime screen resized recalculate width height parent container use anytime convert percentage pixel quickly code look like add event listener globaladdeventlistener resize resize false handle callback var resize function resize event updatecontaineroffsets update offset var updatecontaineroffsets function updatecontaineroffsets var parentelement container canvascontaineroffsets height parentelementoffsetheight width parentelementoffsetwidth draw bar graph var drawbargraph function drawbargraph context var currentitemscore canvasgetattribute bargraphelementscoreattribute contextbeginpath var distancefromtop calculatedistance bargraphelementmaxamountcurrentitemscore bargraphelementyscale var barheight calculatedistance currentitemscore bargraphelementyscale contextrect getpixelwidthfrompercent bargraphelementxcoord getpixelheightfrompercent universaldistancefromtop distancefromtop getpixelwidthfrompercent bargraphelementwidth getpixelheightfrompercent barheight contextfill var calculatedistance function calculatedistance score scale var distancebetweeneachmarker return score scale distancebetweeneachmarker admittedly contextrect call bit weird dissect bit check canvas rect documentation see parameter rect x width height defining x starting point width height recall bargraphelement maxamount width xcoord yscale property along scoreattribute data attribute need complete goal width set percentage xcoord nature rect method start top shape define mean must figure top dynamically sized shape may seem odd first background image horizontal marker problem difficult work something like maxamount currentscore maxamount numberofmarkers distancebetweeneachmarker universaldistancefromtop maxamount currentscore give u amount distance top bar graph top bar graph maximum amount score know top divide scale scale calculated seeing many marker dividing maximum score case scale multiply distance marker get final distance percentage top bar graph top maximum bar graph finally add distance top bar graph top page point know top left corner bar graph percent based full image handled drawbargraph calculatedistance function turn apply logic draw thing need graph two thing remaining line graph point intersection line see initializedrawing function looping point using current item draw point current previous point draw line function var drawlinegraphpoint function drawlinegraphpoint context currentitem var currentitemscore canvasgetattribute currentitemscoreattribute inverted coordinate subtracting maximum since top left coordinate plane var distancefromtop calculatedistance currentitemmaxamountcurrentitemscore currentitemyscale since distance distance top plane value account top buffer space well currentitemycoord universaldistancefromtop distancefromtop contextbeginpath contextarc getpixelwidthfrompercent currentitemxcoord getpixelheightfrompercent currentitemycoord getpixelwidthfrompercent currentitemwidth false contextfill var drawlinegraphline function drawlinegraphline context currentitem previousitem previousitem return contextbeginpath contextlinewidth contextmoveto getpixelwidthfrompercent previousitemxcoord getpixelheightfrompercent previousitemycoord contextlineto getpixelwidthfrompercent currentitemxcoord getpixelheightfrompercent currentitemycoord contextstroke drawn score onto graph bar graph line graph presto work screen size using external javascript dependency performance win responsive win around win like learn responsive performance based approach build better web software love talk please visit u wwwcoffeeandcodecom
511,Lobsters,visualization,Data Visualization,Sabotaging Cryptosystems,https://blog.securitycompass.com/sabotaging-cryptosystems-b1b6d63c6ae7,sabotaging cryptosystems,diagram problem domain underhanded c contest predictable prng debian openssl dual ec drbg iacr paper surreptitiously weakening cryptographic system secrecy utility scope click contact joining u author jackson thuraisamy jacksont secure messaging emv research,diagram line work enjoy finding exploiting subtle defect system could used compromise asset system entrusted protect extremely rewarding challenging dive deep system built unfamiliar problem domain understand enough undermine assumption gain unauthorized access inspired underhanded c contest like think innocentlooking code behave maliciously learning cryptosystems weakened occasionally part simply put cryptosystem set algorithm used implement encryption decryption order protect confidentiality sensitive data example range trivial caesar cipher modern system rsa aes sabotaged cryptosystems make easier crack tamper ciphertexts produced weakness like predictable prng debian openssl appear seemingly unintentional easily remediated hand like dual ec drbg appear suspiciously intentional remain effective whether want undermine secure cryptosystem reading iacr paper schneier kohno ristenpart fredrikson good start understanding taxonomy cryptographic system secretly weakened already know skip past summary chart created based paper paper surreptitiously weakening cryptographic system author detailed taxonomy cryptographic weakness compare different approach sabotage cryptosystem saboteur introduce vulnerability system either accidentally intentionally attacker use weakness exploit system sometimes attacker also saboteur exploiting weakness introduced weakness make easier undermine cryptosystem asset system attempt protect order efficiently sabotage system turn make system resistant sabotage ass cryptosystem risk attack categorize weakness potential cause damage paper author categorized potential damage different weakness based three factor secrecy level difficulty discover weakness utility condition amount work required exploit weakness scope number user impacted weakness created taxonomy characterizes weakness feature least according point view saboteur analyze system weakness also indirectly understand motivation saboteur weakness characteristic manifest system reading paper created interactive diagram provide another way conveying weakness category rate dimension taxonomy laid paper visual way understand saboteur motivation could map option would consider weaken system whether part red team blue team saboteur use chart model threat cryptosystem determine weakness likely manifest use diagram identify characteristic apply saboteur hover weakness see condition satisfy read paper information weakness medium support embedding svg file animated gif presented click interact svg version personal blog feedback suggestion improvement feel free contact want work likeminded people consider joining u hiring share article linkedin author jackson thuraisamy jacksont security consultant security compass like find critical vulnerability plan targeted operation jackson authored software secure messaging emv research
512,Lobsters,visualization,Data Visualization,Jupyter (IPython) notebooks features,http://arogozhnikov.github.io/2016/09/10/jupyter-features.html,jupyter ipython notebook feature,writing function language,writing function speed numpy enough need write fast code principle compile function dynamic library write python wrapper much better boring part done right write function cython fortran use directly python code first need install pip install cython fortranmagic
513,Lobsters,visualization,Data Visualization,Advantages of a Graph-Based Metadata Repository at UW,https://neo4j.com/blog/advantage-graph-based-metadata-repository/,advantage graphbased metadata repository uw,university washington uw picking right solution graph database keep simple relevance data lineage impact analysis conclusion learn deploying enterprise environment sign free online training course discover deploy world leading graph database scale register,community content post reflects view opinion particular author necessarily reflect official stance many higher education institution like university washington uw implementing large complex softwareasaservice solution hr payroll administrative system enterprise system provide useful new tool resource organization face significant challenge helping user understand changing prepare change uw process replacing yearold hr payroll system softwareasaservice human capital management tool multiyear effort largest administrative transformation uw history touching every person department university knowledge navigator kn created metadata repository facilitate system migration kn represents concept data relationship visually textually highlighting linkage old new system webbased interactive platform seen kn keep user informed engaged throughout enterprise system migration providing selfservice access conceptual technical description definition lineage interactive relationship map impact analysis information picking right solution effectively governed metadata repository establishes common understanding expectation across university provides view flow data ability perform impact analysis common business vocabulary accountability term definition comprehensive management metadata vital enabling organization oversee change delivering trusted secure data complex data integration environment solid metadata management tool play central role holistic system management including system migration multiple metadata solution evaluated custom sharepoint repository custom relational database rdbms solution commercial vendor tool none worked well offered amount customization required provide ability stitch together various data source complete beforeandafter picture national information management conference university notre dame presented graph database subsequent collaboration uw team inspired move database choice keep simple many metadata data governance effort fail attempted accomplish much focused specific problem wanted solve easily demonstrate change oldtonew perspective could return tangible value boiling ocean standpoint datavolume organizational architectural complexity data model knowledge navigator relatively simple seen partial data model database business intelligence bi report relevance knowledge navigator stand among metadata repository unique ability provide communication change university data endusers built kn help understanding impact migrating mainframe system cloudbased system prepare change data lineage map illustrate parallel old new system interactive diagram invite user select object artifact understand relationship kn explains new concept definition user know work effectively within new system user view highlevel conceptual model well technical metadata table column example user see legacy table called person related person new system column legacy person relate column new person brandnew yet related table called academicappointee data lineage impact analysis kn identifies affected table column reporting operational data store well affected business intelligence report screenshot source table displayed academic personnel appointment report report dependency data exported csv compared report traffic information report impact analysis looking ahead heel hrpayroll modernization hrpm program university replace equally outmoded finance system finance business transformation fbt program promise even larger complex hrpm already working fbt leadership plan data go kn facilitate impact analysis user guidance throughout project addition kn used internal project team document metadata used development process accessible general public internal glossary database internal note link sourcetotarget mapping database apis data source likewise new data buildout project benefit exposed sourcetotarget mapping data transformation developer tester save time effort ready access critical underlying detail using impact relationship easily query show u table dependency like see conclusion knowledge navigator become essential tool data user metadata repository manager understand meaning usage impact data business concept university washington using database wellpositioned expand capability include metadata necessary build powerful enterprise tool learn deploying enterprise environment sign free online training course production discover deploy world leading graph database scale register
514,Lobsters,visualization,Data Visualization,Eigenvectors and Eigenvalues explained visually,http://setosa.io/ev/eigenvectors-and-eigenvalues/,eigenvectors eigenvalue explained visually,eigenvectors eigenvalue explained visually victor powell lewis lehe pagerank eigenvalue eigenvector eigenspaces eigenvaluesvectors good fibonacci sequence fibonacci sequence steady state markov matrix markov chain complex eigenvalue complex learning linear algebra differential equation project homepage,eigenvectors eigenvalue explained visually victor powell lewis lehe eigenvaluesvectors instrumental understanding electrical circuit mechanical system ecology even google pagerank algorithm let see visualization make idea intuitive begin let v vector shown point matrix column shown arrow multiply v sends v new vector av draw line three point v av av v multiplied number lambda av lambda v case call lambda eigenvalue v eigenvector example eigvector eigenvalue change column drag v eigenvector note three fact first every point line eigenvector eigenvector line eigenspaces associated eigenvalue second place v eigenspace either associated eigenvalue lambda av closer v lambda farther third eigenspaces depend column though affect eigenvaluesvectors good keep multiplying v get sequence v av etc eigenspaces attract sequence eigenvalue tell whether end far away therefore eigenvectorsvalues tell u system evolve stepbystep let explore application property sequence fibonacci sequence suppose amoeba petri dish every minute adult amoeba produce one child amoeba child amoeba grow adult note really amoeba reproduce minute equation system rewrite matrix form like press forward step ahead minute total population fibonacci sequence reset forward optpos optcurgen optpos optcurgen child child optpos optcurgen optpos optcurgen adult adult optpos optcurgen optpos optcurgen see system go toward grey line eigenspace lambda steady state suppose every year fraction p new yorkers move california fraction q californian move new york drag circle decide fraction number starting state understand system better start writing matrix term like turn matrix like whose entry positive whose column add one try called markov matrix always lambda largest eigenvalue mean value vt avt lambda vt vt vt steady state number people move direction population stay forever hover animation see system go steady state markov matrix check explanation markov chain complex eigenvalue far looked system real eigenvalue looking equation av lambda v say lambda v ca nt imaginary part ca nt complex number example eigenvalue eigenvector matrix complex eigenvalue sequence spiral around see drag column arrow around get spiral eigenvalue plotted realimaginary plane right see whenever eigenvalue imaginary part system spiral matter start thing learning really scratched surface linear algebra learn check legendary gilbert strang linear algebra course mit open courseware site get practice application eigenvaluesvectors also ceck excellent differential equation course explanation visit explained visually project homepage subscribe mailing list
515,Lobsters,visualization,Data Visualization,Twine as a Process Modeling Tool,https://trackchanges.postlight.com/twine-as-a-process-modeling-tool-cf9ad42d165,twine process modeling tool,twine play game web browser compose browser play game rich ziade uml ladder abstraction made little game writing newsletter,twine tool let make pointandclick game run web lot people refer choose adventure cyoa game pretty easy make game mean twine community fairly big diverse play game web browser compose browser download app play game tried twine year ago never really got anywhere idle curiosity started play long ago idea make little game simulated like work postlight step elevator want talk working u client working u team member silly sound fun model office game hour messing around modeled elevator click button put basic scoring started create fake conversation playerreader character included business partner rich ziade world meeting simulator ever finish put online lot tool use information architecture sketch process visio powerpoint keynote omnigraffle example programming world people use uml tool draw picture program operate turn code new breed product prototyping apps blurring line design code always bummed draw picture computer part picture computer make sense box arrow hard turn picture web product little functional website huge topic digital document presented dynamic program one good recent exploration subject bret victor ladder abstraction way twine interface honest testing prototyping environment good modeling choice choose adventure playing around made little game writing newsletter took twenty minute made think schedule information source tendency toward distraction overall process started joke actually productive halfhour see lot way model social business process using friendly easytouse opensourced twine system end result game distract fact software free exercise useful
516,Lobsters,visualization,Data Visualization,cube composer | Apply functions to solve a puzzle.,http://david-peter.de/cube-composer/,cube composer apply function solve puzzle,,
517,Lobsters,visualization,Data Visualization,A gallery of interesting IPython Notebooks,https://github.com/ipython/ipython/wiki/A-gallery-of-interesting-IPython-Notebooks,gallery interesting ipython notebook,reload reload,perform action time signed another tab window reload refresh session signed another tab window reload refresh session
519,Lobsters,visualization,Data Visualization,Reddit’s uptime (2008–2016),https://medium.com/@hoffa/reddit-uptime-2008-2016-bigquery-b3d7b11046e0,reddit uptime,go minute everything together http imgurcomaqejiw howto bigquery query charting felipehoffa counting downtime medium add twitter redditcomrbigquery,reddit stay slower growth curve show nice stable uptimereddit go minute august publish post said post inspires write one minute counting everything togetherget full picture http imgurcomaqejiwhowto bigquery archived one table per year bigquery select integer createdutc day integer integer createdutc minute count cfrom fhbigquery redditcomments group mixed monthly table live realtime post ustuckinthematrix maintains select integer createdutc day integer integer createdutc minute count cfrom tablequery fhbigquery redditcomments tableid contains length tableid select timestamptosec createdutc createdutc pushshift rtredditcomments year createdutc month createdutc group panda matplotlib magic def mymap year pivoteddf year pivot day minute c clip df year cquantile fig ax pltsubplots figsize axgrid false pltimshow pivoted originupper setcmap copper axsetxticklabels divmod x x axgetxticks axsetyticklabels datetimedatetime year datetimetimedelta x strftime x axgetyticks axsettitle reddit uptime comment per minute felipehoffa redditcomrbigquery year pltcolorbar labelcomments per minute pltshow counting downtime better way please share year range downdf year pivot day minute c isnull sum sum print year want story check medium add twitter subscribe redditcomrbigquerythanks like favs comment
520,Lobsters,visualization,Data Visualization,How the Olympics explains multidimensional data,https://medium.swirrl.com/how-the-olympics-explains-multidimensional-data-8e58b127edb2,olympics explains multidimensional data,olympics explains multidimensional data publishmydata reading tutorial publishmydata statisticsgovscot opendatacommunities tabular data publishmydata table rank scottish deprivation two dimension plus one data cube three dimension sparseness statisticsgovscot opendatacommunities hello swirrlcom,olympics explains multidimensional datahow fortune different country explain multidimensional datawhether celebrating fiji first gold michael phelps cracking cycling gb result relatable statistic bring data life share tutorialstyle post multidimensional data using statistic previous olympic game written illustrated designer guy originally part help documentation publishmydata product statistical data fact figure dataset collection related data statistical data often published form multidimensional dataset whilst may unfamiliar jargon familiar useful ideaafter reading tutorial understand idea multidimensional dataunderstand technical terminology multidimensional databe able find precise data need inside multidimensional datasetbe ready use publishmydata explore multidimensional data detail example scotland statisticsgovscot dclg opendatacommunitiestabular dataas example consider olympic medal result shown familiar tabular formthe row column format familiar spreadsheet use every day fact multidimensional datathese data two dimension country medal colour country dimension shown row medal colour dimension columnsit often convenient use geographic dimension country call reference area dimension datasetby convention publishmydata usually show reference area row see example table rank scottish deprivation already comfortable working twodimensional data data show medal result olympics think data including third dimension year result call timebased dimension reference periodhere reference period year dimension value data table describe dimension locked value case contrast country medal dimension take different value call free dimensionsto obtain value lock one dimension time choosing value take dimension locked choose year usamedal goldwhere locked dimension value intersect located observation interested inwe call number cell measure measure value unit medal measure intuitively count ie many something also common encounter ratio expressed percentage somethings per somethingtwo dimension plus onelet imagine obtain two spreadsheet medal data covering observation locked value dimension remains valid added bunch new observationsnow suppose interested number gold medal team changed time data set contains data convenient extract even small toy data set like ugh convenient table locked medal dimension gold showed u changed time like spreadsheet need excel skill maybe little bit trial error get better way itdata cubesfirst let make illustration bit clearer getting rid number using colour show cell illustration though bear mind measure still finally let adjust draw little bit imagine stacking spreadsheet front back notice data changing adding third dimension illustrationhere data cube one illustrated cube practice dimension need indeed likely size instance shown three country example could include hundred rowsthe important change data longer tied two dimensional representation fill spacelet look closely hereour three original spreadsheet showing free dimension reference area medal locked dimension year still realise slice cube way slicing slice potential two dimensional spreadsheetsliced one direction top lock year reference area medal freeremember free dimension tabulate spreadsheet reference area row medal column particular year original setupsliced another way middle lock medal reference area medal free tabular view show reference area row year col particular medal coloursliced still another way bottom lock reference area year medal free table show medal year particular countrythis start see usefulness arranging data cube choosing dimension lock value obtain table exactly view onto data needas seen locking two dimension end table crosssection cube one two free dimension reference period crosssection precisely described time series show change timemore three dimensionsso fuss pretty common see excel workbook different slice worksheetrecall little earlier looking table realised assuming third year dimension perhaps might realise fourth dimension gender athlete table far locked gender dimension maybe also want provide chart male female athletesrecall redrew table add new dimension clearly possible time reached limit drawn screen necessarily easy visualise mind eye either necessary visualise keep locking dimension slicing hypercube something two free dimension spreadsheetthere reason stop four dimension go imagine datasets dimensionality let add fifthit almost impossible visualise need apply dimension locking trick slice ndimensional cube publishmydata reduce easilyhandled tablewe reached limit would practical excel would need worksheet data cube keep adding dimension indefinitelyand example observation still coordinate year gender competition summer olympics country usa medal gold turn alongsparsenesslet consider fortune different country former yugoslavia example might expect see something like however technically diagram correct real position little bit complicated serbia montenegro competed single team olympics separate country subsequently make sense observation serbia montenegro medal make sense observation reference area serbia montenegro hole cube sparsenote winning say zero gold medal given year would perfectly valid observation hole cube represent impossible coordinate combination dimension make realworld sense reference area particularly prone sort change time common see pattern realworld data moreover realworld data may include gap reason including error observation recorded particular combination dimension sparse cube much rule rather exception sparse table result thisthere therefore guarantee data cube observation every possible combination dimensionsyou find multidimensional cube wild publishmydata powered site scotland statisticsgovscot dclg opendatacommunitiesif sharing statistical data like get touch u hello swirrlcom
521,Lobsters,visualization,Data Visualization,Introducing Webpack Dashboard,https://formidable.com/blog/2016/08/15/introducing-webpack-dashboard/,introducing webpack dashboard,introducing webpack dashboard formidable icon,introducing webpack dashboardbyformidable iconken wheeler
522,Lobsters,visualization,Data Visualization,Mapping the World of Music Using Machine Learning: Part 1,https://tech.iheart.com/mapping-the-world-of-music-using-machine-learning-part-1-9a57fa67e366,mapping world music using machine learning part,mapping world music using machine learning part music internet machine learning paralyzed choice factorization method implicit matrix factorization dot product vector space model vector space model extending vector space model live radio station podcasts perfect cold start problem research earlier year conclusion,mapping world music using machine learning part june ravi mody tim schmeier gave presentation nyc machine learning meetup discus work data science team iheartradio first three part article complementing presentation part found heremusic internet machine learninglike almost everyone grew music discovery followed familiar pattern listen radio talk friend listening buy cdtape play repeat everyone around sick worked fine people music lover thankful seems foreign today internet completely transformed way interact music still often listen radio use phone tune thousand station across country stream music basically artist ever sold recorded music discovery side choose blog review site see friend listening using social networkswhile explosion music discovery great opened entire world music overwhelming ironically paralyzed choice often tempted stop exploring listen familiar fortunately recent year music industry addressing massive shift towards deep intelligent personalization attribute two simultaneous event rise online music streaming service increased access music letting music provider learn tastemore sophisticated machine learning technique powerful hardware deal volume data industry producesthis article go detail iheartradio using modern machine learning connect user music love first part show map user listening pattern convenient form show combine almost every aspect service algorithm enabling many different way connecting user music together second part cover work using deep neural network listen music personalize user experience third final part introduce powerful convenient way working method show example let u quickly prototype build large number otherwise complex featuresfactorization methodsprobably ubiquitous approach serving music recommendation user using machine learning technique called matrix factorization matrix factorization popular scale large datasets still providing accurate recommendationsmatrix factorization work behavioral data build model first aggregate interaction user music large huge interaction matrix example figure intersection blue dotted line user red dotted line artist could number indicating many hour user listened artist matrix theoretically contain trillion interaction fortunately sparse meaning mostly filled zeroswe use algorithm called implicit matrix factorization decompose large interaction matrix two much smaller matrix case user artist smaller matrix still contain row column user artist instead storing interaction user artist matrix store interaction userartist factor space fixed predetermined size usually figure instead representing user much listened every artist bluedotted line represented vector number blue solid line instead representing artist user listened represented another vector number red solid line vector map user music taste artist music style sized vector recreate estimate many hour blue user listened red artist simply take dot product red blue vectorsthe real power come want create artist recommendation user instead taking dot product user vector artist already listened take dot product vector artist find music would enjoy list artist highest dot product coworker mine listens lot modern rock including white stripe stroke black keyscage elephantmumford sonsmodest mousedeath cab cutiealabama shakeskings leoncold war kidsthe lumineersarctic monkeysvector space modelsto help visualize user artist vector matrix factorization considered point ddimensional space could visualize space mapping first element vector xaxis second yaxis plotting taken together mapping user artist ddimensional space called vector space model model dot product two vector measure close similar two point note instead use euclidean distance measure dissimilarity two point different dot product found often give similar resultsfrom easy see find similarity user artist two point space mean find similarity two artist two user example similar artist michael jackson vector space model michael jacksonprincestevie wonderearth wind firethe temptationsmarvin gayejanet jacksonusherprince revolutionwhitney houstonmariah careyextending vector space modelthis userartist vector space model provides great music recommendation felt limiting iheartradio product feature involve far user artist including live radio station one iheartradio key feature ability listen thousand radio station around country hour daytracks user seed custom station track instead artist thumb track listenpodcasts iheartradio thousand podcast episode libraryperfect curated themed station like hip hop workout genre music classified genre covering virtually every type music around worlddemographics ask user age gender location signup helping u personalize service themwhen working user artist easy keep two separate feature mind introduced general concept entity type example include user artist livestation podcast genderour goal map entity type space several benefit share information different type example user listen live station also like podcast like tracksome user use service one feature artist radio v track radio v live radio v podcasts putting every entity type space let u build model work across user feature also let u build product generalize service eg code recommend artist user almost identical code recommends podcasts mapping age gender location help u cold start problem immediately letting u serve recommendation signupin literature research covering map many entity type arbitrary relationship using matrix factorization technique known collective matrix factorization first attempt simple approach concatenating many different type interaction matrix running standard matrix factorizationthis approach ended working well creating vector space model type mixed together using multitype vector space model mix match different entity type freely dozen possible combination could create genre radio station finding similar track genre get agegender description every live artist radio station create personalized podcasts recommendation finding similar podcasts user currently putting several diverse application model production also moved direct marketing effort model earlier yearconclusionmapping many different type single vector space model powerful concept new entity type combinatorially increase number way use model help user find content enjoy believe approach general extending far beyond mapping user behavior music service example mapping website advertiser internet user ad creatives space power realtime bidding advertising platform part article show created similar vector space using audio data track part show adding couple efficient operation open even functionality creating seemingly endless way working music data
524,Lobsters,visualization,Data Visualization,Using Neo4j Spatial Procedures to Analyze US Congressional Data,http://www.lyonwj.com/2016/08/09/neo4j-spatial-procedures-congressional-boundaries/,using spatial procedure analyze u congressional data,using spatial procedure legisgraphspatial user defined procedure spatial extension spatial legisgraphspatial legisgraphspatial post simplified congressional district boundary govtrack load csv import query legisgraph upgrading installing spatial debian package legisgraph import script lazywebcypher tool easily running multi statement cypher script indexing district querying legisgraph using official javascript driver github,using spatial procedure legisgraphspatial aug introduced concept user defined procedure code written java jvm language deployed database callable cypher user defined procedure alternative unmanaged extension key difference user defined procedure callable cypher instead extending http rest endpoint allows alternative api spatial extension namely exposing spatial functionality cypher familar spatial extension implement spatial indexing enables import storage querying spatial data introduction user defined procedure many procedure added spatial making much easier use instead making separate http request endpoint exposed spatial using spatial java api user simply call spatial procedure directly cypher make use official language driver efficient bolt binary protocol today got around updating legisgraphspatial use new spatial procedure instead spatial rest api using previously brief overview update simplified congressional district boundary update spatial geospatial querying using spatial procedure cypher update official javascript driver using bolt protocol legisgraphspatial seen legisgraphspatial provides visual way explore u congress member topic influence district user click map see represents area house well information committee representative serf issue influence congress powered see post info legisgraphspatial explore legislator topic influence district simplified congressional district boundary previously using much higher resolution version congressional district boundary necessary took opportunity replace wkt boundary district using lower resolution data govtrack python script crawl gisgovtrackus api fetch wkt format boundary congressional district save csv file later import easily part load csv import query legisgraph fetch simplified wkt boundary congressional district save csv format state district polygon import request import csv baseurl http gisgovtrackus get meta boundary r requestsget baseurl j rjson boundary j object open w f writer csvwriter f writerwriterow state district polygon b boundary p strsplit b name r requestsget baseurl b url simpleshape formatwkt wkt rtext writerwriterow p p wkt upgrading installing spatial server legisgraphspatial running digital ocean vps instance upgraded using debian package install service installed built installed spatial git clone http cd spatial mvn clean install dskiptests cp restart instead building spatial also download spatial plugin jar file github wget http rawtrue cp restart used legisgraph import script lazywebcypher tool easily running multi statement cypher script browser load legisgraph data congress indexing district data loaded want add district node spatial index thing like find congressional district contains certain latitude longitude use spatial procedure spatialaddwktlayer create wkt layer call spatialaddwktlayer geom wkt match district node add wkt layer created using spatial procedure case spatialaddnodes match district collect district call spatialaddnodes geom district yield node return count querying district node added spatial layer perform indexed geospatial query find congressional district given latitude longitude since district node part legisgraph simple graph traversal find legislator represents district topic influence call spatialwithindistance geom latitude longitude yield node dwkt wkt dstate state ddistrict district limit match represents l legislator match l serveson c committee match c referredto b bill match b dealswith subject wkt state district lgovtrackid govtrackid llastname lastname lfirstname firstname lcurrentparty party stitle subject count strength collect distinct cname committee order strength desc limit wkt state district lastname lastname firstname firstname govtrackid govtrackid party party committee committee legislator collect subject subject strength strength subject return legislator legislator subject subject state state district district r wkt limit querying legisgraph using indexed geospatial query cypher using official javascript driver previously making http request spatial endpoint query district another cypher transactional endpoint query topic influence combine one query seen also using jquery ajax post request transaction cypher http endpoint execute cypher query run cypher query call callback result function makecypherrequest statement callback var url baseurireplace dbdata dbdatatransactioncommit ajax type post data jsonstringify statement statement contenttype applicationjson url url error function xhr statustext errorthrown callback error null header authheader success function data consolelog data callback null data release instead make use new bolt binary protocol send le data wire save time serialization send query using version nodejs based application version browser include browser version simple app like script src script execute cypher query saw spatial lookup parse data var driver var session driversession var districtparams layer geom lon latlnglng lat latlnglat distanceinkm distance session run subjectsquery districtparams function result resultrecordsforeach function record consolelog record var point parsewktpolygon recordget wkt var districtinfo recordget r districtinfo point point adddistricttomap districtinfo latlng see using promise dealing asynchronous behavior database request alternatively could act data stream subscribing data event session run subjectsquery districtparams subscribe onnext function record consolelog record var point parsewktpolygon recordget wkt var districtinfo recordget r districtinfo point point adddistricttomap districtinfo latlng however since expect receive one row back need process stream give new legisgraphspatial version try always full code available github
525,Lobsters,visualization,Data Visualization,Is it brunch time?,https://medium.com/swlh/is-it-brunch-time-ffe3adf485d8,brunch time,solution spline interpolation,solution spline interpolationsplines allow u create smooth curve many different point let make curve hour graph look curve see maximum aligns nicely would intuitively assume brunch occurring based histogram let give maximum name brunch point brunch point defined exact time day brunch maximally occurs based data time point exact time day brunch maximally occursnow appears excellent answer however looking time range point time calculate range spline remember calculus high school real life use case calculus promised professor let look derivative calculus book handy derivative derivative function give u rate change aka slope aka mx b function given point time help u understand acceleration function let find tangent line highest lowest slope maximum slope number brunch tweet experiencing highest positive rate change people speeding tweet brunch pushing hardest gas pedal minimum slope number brunch tweet experiencing highest negative rate change people slowing tweet pushing hardest brake pedal using two point get brunch time like method several reason appears capture gut feeling first solution feel correct visualize itit us spline remain consistent even xaxis translatedit based concept familiar acceleration decelerationbut know correct let apply solution term observe performs
526,Lobsters,visualization,Data Visualization,Decomposing a function into its even and odd parts,http://blog.plover.com/math/even-odd.html,decomposing function even odd part,decomposing function even odd part fourier series ron buckmire poisson distribution gamma function reciprocal gamma function desmos travelling gaussians varying sinusoid article category math permanent link,decomposing function even odd part mentioned suddenflashofinsight person every happens usually thinking style minutely examine large mass example gradually synthesize conclusion penetrating slow thinker occasion life solution problem struck suddenly blue one occasion first day sophomore honor physic class one best class took college career given professor stephen nettel resonance phenomenon love course single overarching theme proceeds examine detail rare deeply regret leaving copy course note restaurant course difficult also satisfying also somewhat hairraising professor nettel habit saying second half nt worry nt seem make sense come together final reassuring right come together final exam exam two set problem problem left side exam paper concerned mechanical system think rod fixed one end free something like set problem asked u calculate resonant frequency rod rate damping various driving frequency related matter righthand problem electrical system involving resistor capacitor inductor question answer formally identical differing detail left answer involved length mass stiffness rod right resistance capacitance inductance electrical component brilliant exam never learned much subject final exam anyway digress first class assigned homework one problem show every function sum even function odd function maybe explain even function one symmetric across axis formally function f f x f x every x example function shown left odd function one symmetric halfturn origin formally satisfies f x f x x example frac shown right found claim surprising idea solve well quite idea knew function could expanded fourier series sum sine series cosine series sine part odd cosine part even seemed like bigger hammer required particularly since new sophomore expected know fourier series privilege class ron buckmire remember stood outside class building autumn sunshine discussed problem might thinking perhaps way replace negative part f reflected copy positive part make even function maybe f x f x always even hit blue solution begin align fe x frac f x f x text even fo x frac f x f x text odd f x fe x fo x end align problem solved nt remember three problem day homework remembered one ever since reason nt occur today think function actually looked like course f even fe f fo similarly f odd function neither even odd example consider function neither even odd get begin align fe x frac x fo x frac x end align graph left solid red line blue purple dotted line fe fo red line sum blue purple line thought interestinglooking little later realized already known graph would look like like ex ex even odd component exactly familiar cosh sinh function left right ex nt expecting polynomial interesting polynomial whose term odd power x x x always odd function similarly polynomial whose term even power x even function example consider neither even odd nt even need fe fo formula separate even odd part expand separate odd even power could frac similarly expanding frac x separating frac x love looking seeing even blue line odd purple line conspire together make whatever red line want kept wanting try familiar simple function like many either even odd uninteresting application make even odd function neitherevennorodd function translating horizontally replacing x xc next function tried translation frac got surprise knew undefined graphed x even component right undefined similarly odd component undefined two point f fo fe formula work quite correctly failing produce correct value even though f defined general f undefined xc decomposition even odd component fails xc well limit lim xto c f x lim xto c left fo x fe x right hold however graph show decomposition vertical translation uninteresting leave fo unchanged translate fe amount verify algebraically thinking following strategy tried cosine wave evenness cosine function one principal property translated used co graph actually prevent detail compressed reminded time fourteen graphed sin x co x surprised see another perfect sinusoid realized simple way understand already knew co x sin xcos sin co x take multiply whole thing sqrt get x sin x co x sin x co x shifted scaled cosine curve decomposition co even simpler work forward instead backward find co sin xcos co x sin first term odd second term even co decomposes sum even odd sinusoid see graph finally tried poisson distribution highly asymmetric formula poisson distribution frac lambdaxelambda x constant lambda x denominator defined nonnegative integer x extend fractional negative x usual way using gamma instead gamma gamma function gamma function undefined zero negative integer fortunately need reciprocal gamma function gamma x perfectly wellbehaved result spectacular graph lambda part xge interesting poisson distribution distinctive shape like seeing blue purple gamma function working together make think great red line go gently zero x increase even though even odd component going wild x increase rapidly x reciprocal gamma function go rapidly zero even odd component also gamma x part dominates blue purple line x xlt side meaning wiggly line nt occurred could extend poisson distribution function negative x still ca nt imagine could mean suppose probably statistician could explain poisson distribution x also consider function sqrt x break completely either sqrt x sqrt x undefined except claim every function sum even odd function fails except perhaps could probably consider extension square root function complex plane take one branch suppose work fine geometric interpretation evenness oddness different course ca nt really draw graph unless fourdimensional vision particular point make except maybe math fun even elementary math perhaps especially elementary math fun see work beautiful graph article made desmos dreaded illustrate article graph gnuplot ugh wolframα double ugh thrilled find handsome alternative addendum discovered desmos include parameter function graph attach parameter slider example arrange display xk e xk value k controlled slider graph move left right plane adjust slider even odd part changing real time match example check travelling gaussians varying sinusoid article category math permanent link
527,Lobsters,visualization,Data Visualization,graph-viz-d3-js: Graphviz dot in your browser,https://github.com/mstefaniuk/graph-viz-d3-js,graphviz dot browser,graphviz browser graphviz graphviz fiddling website content design pegjs graphviz vizjs usage roadmap building contributing license,graphviz dot browser bower component render graphviz source browser check graphviz fiddling website content dot parser lax mode verify graphviz input dot mode ace editor stage data renderer design dot parser written pegjs lax mode parse source end error graphviz embedded browser using vizjs instead using svg directly us xdot format par data structure output drawn using animation rendering usage include project simply use bower bower install save note need requirejs work loading proper path defined renderer dependecies worker requirejs plugin requirejsconfig default load module id jslib baseurl j except module id start app load jsapp directory path config relative baseurl never includes j extension since path config could directory path dotchecker layoutworker worker bowercomponentsrequirejswebworkerssrcworker renderer inject app require renderer function renderer dotsource digraph xyz initialize svg stage rendererinit graph update stage new dot source rendererrender dotsource even zoom drag graph require renderer function renderer dotsource digraph xyz initialize svg stage get return value rendererinit properly reset image zoomfunc rendererinit element graph extend update stage new dot source rendererrender dotsource saving image copybutton click function copydiv html renderergetimage reset true zoomfunc zoomfunc need reset image saving image copybutton click function copydiv html renderergetimage roadmap test suite using graphviz gallery example done improve animation path tweening concatenation arrow head arrow arc custom vizjs compile xdot output optimize size building contributing make controlled change need node grunt add new feature must cover unit test everything ready build also dist version take time license currently project available lgpl use unmodified free commercial project add improvement must share
529,Lobsters,visualization,Data Visualization,Five Years of Drought,https://adventuresinmapping.wordpress.com/2016/07/12/five-years-of-drought/,five year drought,past six month drought map data mentor drought u drought monitor varying degree visualization hexagonal mesh kirk goldsberry point shapefile click john nelson like,method used recently map past six month drought afflicting southeastern united state map map showing five year drought data week combined single view united state dot proportionally sized amount time past five year spent drought largest dot representing time color weighted value overall intensity drought deep purple indicates frequent exceptional drought severe category initially aggregated week drought boundary single view curious would look like piled together gave week drought boundary opacity transparent result map accidentally characterizes movingness drought five year using opacity represent motion shared early version map twitter nature phenomenon understandably bit bummer wise mentor told absence data data want positive spin thing map using exact source data run backwards sausage machine drought data come tremendous ongoing work david miskus partnership national drought mitigation center university nebraskalincoln usda noaa u drought monitor focus broadscale condition draw every week map varying degree drought united state map aggregated least intense intense january june description generally horrible crap characterizes drought level damage crop pasture stream reservoir well low water shortage developing imminent voluntary wateruse restriction requested crop pasture loss likely water shortage common water restriction imposed major croppasture loss widespread water shortage restriction exceptional widespread croppasture loss shortage water reservoir stream well creating water emergency place united state experiencing drought condition nonstop longer five year place level majority time sustained drought seasonal artifact lasting effect hydrology place ecosystem quick map drought past five year week drought opacity really dark patch around electra tx often visualization time puzzling thing represent single static map also lot social cognitive benefit communicating time nonanimated way sometimes glomming everything together single view ticket glom raw data look like slapped one drought polygon one go look interesting lot takeaway map like problem overlapping data mean area maxed get visual variability within really problematic drought zone also way quantify separate drought level interesting look across four separate image compare leaky working memory still solve problem occlusion inability squeeze hard stats time lump sucker bin count thing bin hexagonal mesh draped u run join location count drought zone hit middle little hexagon bring number number nice beautiful number sort thematic shenanigan map time quantify colorcoding hexagon cell weighted sum number week experienced drought worse drought count etc oftentimes find wanting like kirk goldsberry color hexagon scale scaling area hard fortunately scaling point easy map converted hexagon polygon center point easily make scaled symbol map map showing proportion time location experienced drought past five year cake eat map broke five class dot layer time drought color coded good old weighted drought severity value original polygon map bivariate map showing two value size frequency color severity want play data point shapefile used make bivariate map happy mapping three main map unified layout sort thing click cheer john nelson like like loading related
531,Lobsters,visualization,Data Visualization,Accidental art produced by buggy code,https://twitter.com/accidental__art,accidental art produced buggy code,,detected javascript disabled browser would like proceed legacy twitter yes
532,Lobsters,visualization,Data Visualization,Visualizing NYC criminal court summonses,https://nabilhassein.github.io/blog/visualizing-nyc-summonses/,visualizing nyc criminal court summons,background project view map blog post document live web recurse center panda reactjs redux npm babel webpack nyc open data website getting transforming data spreadsheet script generated csv github page building map official example handy tutorial guide using react really check plug reactautocomplete library gatsbyjs timetravel debugging possibility future work link blog post map make map responsive mobilefriendly normalize population precinct suggestion george joseph seems necessary data use existing component andor publish component horrible initial version map refactor code drawing tooltips dumbest code written year investigate python script work current machine acknowledgement mykola bilokonsky mimi onuoha,background project view map blog post document live web writing code since high school recently little work type thing easily show nonprogrammers wanting change also wanting bring tech political organizing work together main focus current stint recurse center learning modern frontend web development overlapping focus learn data cleaning analysis visualization first project chose touching thing build map linked visualizes many criminal court summons issued violation every police precinct new york city violation illegal behavior rise level crime ie misdemeanor felony summons ticket police write require appear court without arresting tech side useful project learn something technology including panda reactjs redux npm babel webpack first time using used learning meant faster going next time spend first month back rc project thing going around time full month actual work political side first time digging around nyc open data website first time used tech skill create original product hoped might interest activist gave aspect project le emphasis tech aspect hope replicate future think others might take idea interactive map relevant grassroots organizing seriously published work discus far ambitious idea digging police prison court data wait another day blog post limit summarizing work create map published two month ago bit late documenting better late never getting transforming data map us two relatively small datasets geojson file different plain json describing shape precinct csv basically map key precinct violation pair value many summons issued given year geojson file straightforwardly downloaded csv created spreadsheet using python panda library throwing away incomplete data comment aggregate interest adding derived data useful creating legend map look script generated csv script work virtual machine currently development work though apparently due differing version python library baremetal linux installation using time bothered investigate since creating csv oneshot sort deal already done anyway blog post many computer issue communication api database backend data transferred client user browse webpage map hosted onepage static site github page building map data took little time even given need learn basic panda fun part spent lot time reading tutorial example notably including official example handy tutorial guide using react obeying discipline keep code modular primary focus throughout project first week definitely slowed feel paid end really like essentially frontend tutorial encourage throw script tag html pollute global scope willynilly absolutely refuse follow approach might easiest way get rolling experience take long come back bite due experience determined use proper dependency management build tool namely npm webpack based recommendation got programmer know reading online besides projectwide concern react specific encourages create application nested hierarchy modular reusable component pleasant approach especially compared found searching around last time checked frontend development summer investigation ended deciding stay far away frontend decision revisit project sometimes though obvious least frontend newbie like make react play nicely library assume running whole show even though seems like much better citizen regard browser library used bit sure particular way glued react together ideal might spend time reading particularly respect newly released anyway probably favorite aspect creating app natural decomposition ui component autocomplete box legend map slider live file check particular loved trivial plug reactautocomplete library npm pleasantness experience one main reason chose create blog gatsbyjs another day finally note state management user state much basically year violation mouse position managed redux relevance code wrote create react component basically component update state dispatching action global store containing application state pure function update current state invoking userdefined function combine data new action react component updated based new property prop reflecting updated state reaching dom update element get new data redux work really really nicely react emphasis oneway data flow nested hierarchy component natural appeal someone like background functional programming healthy fear bug carelessly handled state bound introduce application enables neat feature like timetravel debugging since keep log action resulted update state though need simple project possibility future work much could map know ever thing list also much project hour day let know idea work totally different interactive map would useful political organizing work anyway possibility listed rough priority order amazing much work come small project really want right glad wait make map perfect getting though link blog post map definitely since map complex selfexplanatory either make map responsive mobilefriendly creating map laptopcentric process like software development work typically showed map others using phone quickly showed many thing overlooked slider select year data easy use phone experience deleting word autocomplete box act little funky sometimes tracked yet also resizing refreshing page behaves oddly definitely wasted white space page especially hurt mobile little screen space work first place learn cs get page looking way want normalize population precinct suggestion george joseph journalist intercept seems necessary data dug yet though use existing component andor publish component sure reactslider component somewhere looked yet still using first slider found creating horrible initial version map html cs javascript lived one giant file compared modular approach current code would nice check state slider react component also map legend react component either reduce code size reusing suitable existing component autocomplete box component yet genericize publish legend map component save others work future refactor code drawing tooltips dumbest code written year know svgs title element decided give precinct tooltip drawing rectangle based user mouse coordinate still though glad pushed published something feeling stuck time investigate python script work current machine putting effort making development environment various tech project reproducible cleanly separated get script convert spreadsheet csv working part process acknowledgement possibly name everyone indebted publishing map like shout two fellow batchmates recurse center made particularly large contribution getting map mykola bilokonsky led several useful session modern frontend web development react redux related technology mimi onuoha taught elementary fact interactive map put many useful resource hand
533,Lobsters,visualization,Data Visualization,Stop Using Google Trends,https://medium.com/@dannypage/stop-using-google-trends-a5014dd32588,stop using google trend,http absurdly update remy smith point,generally lot people learned search internet ask jeeves last week saw story woman always searched politely stretch think many people interaction google search provider asking question instead putting topic one example ben casselman brought ben example give u insight people use google knowledge either asshole assume many people know mitt romney election perhaps likely conclude function people search habit researching relevant topic journalist would never insult people googling current event yesterday frantic googling indication plenty american even know isoh frantic know maybe real issue indication google trend report search number relatively within daterange context trend reported number wider date rangesnote washington post also said plenty american plenty mean remember trend relative see recent google trend freaking outrage gtfo note search eu tripled many people voter eligible vote leave remain trend tell u give u nice graph huge peak likely small number people based graph put context search region http giving plenty people cover insult entire country likely people searching something way always search something make british frantically googling eu hour voting leave absurdly disingenuous without better number update remy smith point peak merely people ludicrous people get turned massive story underscore need contexti disappointed data used really drive home need people understand data use incorrectly google trend interesting tool please bit research using beware look quite foolish solely depending come include one
534,Lobsters,visualization,Data Visualization,Analyzing the Graph of Thrones with Neo4j,http://www.lyonwj.com/2016/06/26/graph-of-thrones-neo4j-social-network-analysis/,analyzing graph throne,analyzing graph throne andrew beveridge network throne import initial data author website graph throne datamodel character node connected relationship analyzing network network crowd market reasoning highly connected world number character summary statistic diameter network shortest path shortest path pivotal node centrality measure centrality measure degree centrality weighted degree centrality betweenness centrality betweenness centrality red node high betweenness centrality connector cluster image credit awesome procedure apoc library closeness centrality closeness centrality node high closeness centrality connected many node network image credit using pythonigraph pagerank community detection pythonigraph building igraph instance pagerank eigenvector centrality pagerank size node proportional number size node pointing network image credit wikipedia ccby image credit walktrap method visualization putting together graph throne node size proportional betweenness centrality color indicate cluster node determined walktrap method edge thickness proprtional number interaction two character visjs neovisjs official javascript driver resource available github,analyzing graph throne jun month ago mathematician andrew beveridge jie published network throne math horizon magazine analyzed network character interaction novel storm sword third book popular song ice fire basis game throne tv series paper detail constructed network character interaction using text analysis entity extraction find character mentioned together text applied social network analysis algorithm network find important character network community detection algorithm find cluster character analysis visualization done using gephi popular graph analytics tool thought would fun try duplicate author result using import initial data data made available author website download look like source target weight aemon aemon aery adjacency list character number interaction throughout text use simple data model character name interacts weight character name node label character represent character text single relationship type interacts connecting character interacted text store character name property name node number interaction two character property weight relationship first must create constraint assert integrity schema create constraint c character assert cname unique constraint created statement also build index improve performance lookup character name use cypher load csv statement import data load csv header http wwwmacalestereduabeveriddatastormofswordscsv row merge src character name rowsource merge tgt character name rowtarget merge src r interacts tgt create set rweight toint rowweight simple datamodel call apocmetagraph graph throne datamodel character node connected interacts relationship visualize entire graph give u much information important character interact match p character interacts character return p analyzing network use cypher graph query language explore graph throne applying tool network analysis along way many idea explored explained detail excellent network crowd market reasoning highly connected world number character let start something simple many character appear graph match c character return count c c summary statistic summary statistic number character character interacted match c character interacts c count num return min num min max num max avg num avgcharacters stdev num stdev diameter network diameter geodesic network defined longest shortest path network find maximum diameter network maximum shortest path two node match character b character id id b match pshortestpath interacts b return length p len extract x node p xname path order len desc limit illyrio belwas daenerys robert tywin oberyn amory illyrio belwas daenerys robert sansa bran jojen illyrio belwas daenerys robert stannis davos shireen illyrio belwas daenerys robert sansa bran luwin see many path length six network shortest path use shortestpath function cypher find shortest path two character graph let find shortest path catelyn stark kahl drogo shortest path catelyn stark khal drogo match catelyn character name catelyn drogo character name drogo match pshortestpath catelyn interacts drogo return p shortest path might path length connecting catelyn drogo find allshortestpaths cypher function shortest path catelyn stark khal drogo match catelyn character name catelyn drogo character name drogo match pallshortestpaths catelyn interacts drogo return p pivotal node node said pivotal lie shortest path two node network find pivotal node network find pivotal node network match character b character match pallshortestpaths interacts b collect p path b match c character x path c node x c b return aname bname cname pivotalnode skip limit look result table interesting result see robb pivotal node drogo ramsay mean shortest path connecting drogo ramsay pas robb verify visually looking shortest path connecting drogo ramsay match character name drogo b character name ramsay match pallshortestpaths interacts b return p centrality measure centrality measure give u relative measure importance network many different centrality measure measure different type importance degree centrality degree centrality simply number connection node network context graph throne degree centrality character number character character interacted calculate degree centrality using cypher like match c character return cname character size c interacts degree order degree desc see tyrion interacted character network given scheming think make sense weighted degree centrality storing number interaction pair character property weight interacts relationship summing weight across interacts relationship character give u weighted degree centrality total number interaction participated use cypher calculate metric character match c character r interacts return cname character sum rweight weighteddegree order weighteddegree desc betweenness centrality betweenness centrality node network number shortest path two member network given node appears betweenness centality important metric used identify broker information network node connect disparate cluster red node high betweenness centrality connector cluster image credit calculate betweenness centrality use new awesome procedure apoc library installed apoc call procedure cypher match c character collect c character call apocalgobetweenness interacts character yield node score set nodebetweenness score return nodename name score order score desc closeness centrality closeness centrality inverse average distance character network node high closeness centality often highly connected within cluster graph necessarily highly connected outside cluster node high closeness centrality connected many node network image credit match c character collect c character call apocalgocloseness interacts character yield node score return nodename name score order score desc using pythonigraph one thing love well work tool thing like r python data science tool could continue use apoc run pagerank community detection algorithm let switch using pythonigraph calculate analysis pythonigraph port r igraph graph analytics library install use pip install pythonigraph building igraph instance use igraph graph throne data first thing need pull data build igraph instnace python using one python driver pas result object query directly tuplelist constructor igraph create igraph instance import graph igraph import graph igraph graph graph query match character r interacts character return rweight weight ig igraphtuplelist graphrun query weightstrue igraph object use run graph algorithm implemented igraph first algorithm use igraph pagerank pagerank algorithm originally used google rank importance web page type eigenvector centrality pagerank size node proportional number size node pointing network image credit wikipedia ccby run pagerank igraph instance write result back creating pagerank property character node store value calculated igraph pg igpagerank pgvs p zip igvs pg print p pgvsappend name p name pg p pgvs writeclustersquery unwind node n match c character cname nname set cpagerank npg graphrun writeclustersquery nodespgvs query graph find node highest pagerank score match n character return nname name npagerank pagerank order pagerank desc limit image credit community detection algorithm used find cluster graph use walktrap method implemented igraph find community character frequently interact within community much interaction occurs outside community run walktrap community detection algorithm write newly discovered community number back community character belongs represented integer cluster igraphcommunitywalktrap ig weight weight asclustering node name node name node igvs node node idx igvsfind namenode name index node community clustersmembership idx writeclustersquery unwind node n match c character cname nname set ccommunity toint ncommunity graphrun writeclustersquery nodesnodes query see many community cluster ended member community match c character ccommunity cluster collect cname member return cluster member order cluster asc aemon alliser craster eddison gilly janos jon mance rattleshirt val ygritte grenn karl bowen dalla orell qhorin styr aery amory balon brienne bronn cersei gregor jaime joffrey jon kevan loras lysa meryn myrcella oberyn podrick renly robert arryn sansa shae tommen tyrion tywin varys walton petyr ilyn pycelle qyburn margaery olenna marillion ellaria mace doran arya beric eddard gendry sandor anguy thoros brynden catelyn edmure hoster lothar rickard robb roose walder roslin ramsay bran hodor jojen luwin meera rickon nan theon belwas daario daenerys irri jorah missandei rhaegar viserys illyrio drogo aegon kraznys rakharo worm davos melisandre shireen stannis cressen salladhor lancel visualization putting together graph throne node size proportional betweenness centrality color indicate cluster node determined walktrap method edge thickness proprtional number interaction two character computed analytics graph let create visualization allows u make sense data browser great visualizing result cypher query want embed graph visualization another application might want use one many great javascript library graph visualization visjs one library allows building interactive graph visualization make process pulling data building graph visualization visjs working neovisjs combine visjs official javascript driver neovisjs provides simple api allows configuring visualization example following javascript necessary produce visualization var config containerid viz serverurl localhost label character name labelsize character betweenness relationship interacts null relationshipthickness interacts weight clusterlabels character community var viz new neovis config vizrender note specified want include node label character visualization using property name caption node size proportional value betweenness property want include interacts relationship visualization thickness relationship proportional value weight property node colored according value propety community identifies cluster network pull data server localhost display visualization dom element id viz neovisjs take care pulling data creating visualization based minimal configuration resource code available github
536,Lobsters,visualization,Data Visualization,Introducing our Hybrid lda2vec Algorithm,http://multithreaded.stitchfix.com/blog/2016/05/27/lda2vec/,introducing hybrid algorithm,lda doc code paper hacker news trend hacker news trend pyldavis full analysis notebook rising rent hn job posting civil right algebra word mixing lda global local surprisingly powerful representation lda representation dense distributed vector sparse simplex vector mixture mixture model google reader shutting technical detail objective function paragraph vector softmax dirichlet get involved measuring optimizing likelihood experiment regularize covariance chainer line code chainer autograd theano stan torch neon use probably scikitlearn gensim bottom line build model human info code paper gaussian lda topic word embeddings nonparametric spherical topic modeling word embeddings,goal make volume text useful human machine still keeping model simple modify learns powerful word representation jointly constructing humaninterpretable lda document representation fed hybrid algorithm doc code paper every hacker news comment result reveal topic trend changing community evolves still maintaining remarkable property example understanding javascript frontend server nodejs code documentation reproduce post available hacker news trend imagine ran hacker news like profitseeking company question like focus community shift time topic get front page point use analyze hn corpus trend one result get visualization topic frequent word topic using tool discover topic pop word like bing g cuil duck duck go call search engine topic topic phrase like snowden terrorist assange fisc aclu call national security topic remaining topic might get list look like assigning name topic requires human touch hour time pyldavis tool tremendously helpful labelled start analyzing topic curious sausage made would like improve full analysis notebook rising rent housing price around u risen steeply last year especially bay area perhaps response hn topic reflecting housing rise hn job posting job posting remote engineer plateaued general job posting seem slowly climbing civil right topic civil right ebbed flowed time suddenly spiked edward arrival scene middle since topic internet security authentication stabilized higher level kind analysis yield interpretable topic help human understand written without much reading part maybe folk behind hacker news want evolve site encouraging job hiring post maybe like devote special site feature housing security feature kind analysis need effectively steer company insight le black box practical difference use case lda latter ability summarize text data way better help u understand phenomenon act highlevel algebra word get topic text lda also retain ability kind algebra word popularized specialized hn corpus jeff bezos mark zuckerberg ceo amazon facebook respectively mark zuckerberg facebook amazon jeff bezos hacker news stackoverflow highly trafficked website technical content form article question respectively hacker news story question stackoverflow vim powerful terminalbound editor photoshop well known graphical editing ability vim terminal graphic photoshop surface pro kindle tabletlike device released microsoft amazon respectively surface pro microsoft amazon kindle slightly whimsically vegetable eat drink tea scala feature simple haskell like play around home ask question easy checkout short intructions guide help download vector get started mixing lda combine power interpretability lda recipe call three architectural change combining global document theme local word pattern dense word vector sparse document vector mixture model interpretability global local heart predicts locally given word guess neighboring word stitch fix text typically client comment item fix example predicts word sentence given central pivot word repeat process every pair word moving window ultimately yield wonderful word vector surprisingly powerful representation lda hand predicts globally learns document vector predicts word inside document one comment fix predicts word using single documentwide vector capture local wordtoword correlation predicts globally locally time predicting given word using nearby word global document theme hope data feature help u better predict neighboring word local word feature help predict word inside sentence document vector capture longrange theme beyond scale word instead arcing thousand word representation dense distributed vector word vector despite amazing ability sum concept together eg silicon valley california technology uber taxi company several hundred dimensional vector extremely difficult interpret human typical word vector look like dense list number vector alone meaningless indicates address quantity first element vector something help think coordinate property vector close similar sparse simplex vector decipher word vector address mean looking neighborhood lda document vector quite bit easier interpret typical one look like vector tell u document topic perhaps bitcoin topic programming national security thing note vector sparse element close zero intuition vector critical property rest close irrelevant lda vector much easier reason document could hundred different topic designed algorithm encourage mixture made property concentration topic make easier read easier communicate another critical difference element sum nonnegative eg vector life constraint great otherwise would hard grok document bitcoin programming negative bitcoin document even mean much easier understand document bitcoin programming kind vector representation mathematically plausible machine make little difference scientist choose model made human mixture another ingredient lda mixture model document mixed membership core set topic whereas word vector similar dissimilar word three hundred different way document carefully choose topic belong exploit additive property vim equal text editor plus terminal lufthansa germany plus airline maybe document vector could also composed small core set idea added together still must learn central topic vector found document mix central idea hacker news example find document vector describing google reader shutting topic mix bing google search engine karma vote comment story r online payment banking domain registration user account smaller bit topic technical detail quick summary algorithm work check animation walk major design decision behind objective function similar skipgram negativesampling sgns algorithm start trying discriminate pair context j word appear corpus randomly sampled pool word context objective function begin equation l sigma vec cj cdot vec wi sigma vec cj cdot vec w negative end equation loss function minimized distinguish pair observed data separate correctly sampled pair drawn random unlike trying predict next word softmax regression attractive property controlling base rate popularity help u learn word vector removing effect overall prevalence focusing learning vector conditional context twist going extend mean context vector simply central pivot word vector lda context word replaced document vector context sum document vector word vector begin equation vec cj vec wj vec dj end equation context vector composed local word global document vector intuition word vector meaningfully summed example lufthansa german airline scanning document jth word german might expect see similar word french spanish english document specifically search engine document vector might shift probability slightly closer combination german airline get u prediction bit finetuned match theme added together german airline score word similar like lufthansa condor flugdienst aero lloyd jump stopped something similar paragraph vector see also implementation despite impressive benchmark document vector still difficult interpret project mixture begin equation vec dj cdot vec cdot vec end equation decomposes document vector set base form topic vector weight scalar tell u much topic need add reconstruct document vector practice use softmax transform map number real vector onto simplex force weight sum formulating mixture way also ensures topic vector word vector live space keep ability calculate word similar compute neighbor using might find similar word nsa fbi fisa wikileaks might call national security topic weight change every document topic shared among document example three document decomposition look like begin equation scriptsize vec cdot national security cdot operating system cdot programming end equation begin equation scriptsize vec cdot national security cdot operating system cdot programming end equation begin equation scriptsize vec cdot national security cdot operating system cdot programming end equation go exercise labeling topic mixture vector become fairly interpretable final ingredient encourage weight look like sparse dirichlet distribution sampling dirichlet get involved conveniently measuring optimizing likelihood extremely simple begin equation sigmak alphak log pk end equation note thrown term independent document weight furthermore usually constant set variable optimize documenttotopic proportion simple likelihood make projection onto latent topic basis sparse without sparsityinducing term document weight tend evenly spread mass make reading document vector difficult word vector furthermore topic vector document weight couple also junk imposing dirichlet likelihood curiously without term topic vector poorly defined seem produce incoherent group word end day final objective function look like begin equation mathcal l sigma word pair j sigma vec cj cdot vec wi sigma vec cj cdot vec w negative sigma document k log q dkalpha end equation begin equation vec cj vec wj vec dj end equation begin equation vec dj cdot vec cdot vec end equation begin equation q dkalpha sigmak alphak log ak end equation first line discrimates observed wordcontext pair negativelysampled one add regularization document weight second line indicates context sum word vector document vector next line project latent document weight onto topic vector final line defines dirichlet likelihood weight experiment regularize covariance advent automatic differentiation framework like chainer make extremely simple alter refine model u try fix problem see model sampling dirichlet enforces strict covariance scheme mean topic try roughly orthogonal hand optimizes dirichlet likelihood instead sampling suffer highly correlated topic nearly identical example three job posting topic eye redundant one idea fix regularize covariance one way penalize determinant topic covariance matrix covariance matrix know much topic vector correlate topic vector j determinant effectively penalizes complexity matrix simple add loss function matrix regularzation term begin equation mathcal l log detmidsigma ij mid end equation begin equation sigma ij ti mui tj muj end equation still evaluating whether good idea point easily modify model crux line code previously kind model took substantial effort find approximation derive iterative update option tinker tweak prototype without deriving new method every time ability modify model quickly swap architecture try new idea cheaply make automatic differentiation tool like chainer course autograd theano stan torch neon etc amazingly useful use probably practical level want humanreadable topic use lda checkout library scikitlearn gensim want machineuseable wordlevel feature use want rework topic model say jointly correlate topic vote predict topic user might interested also number reason use code decent unit testing reasonable documentation built drive experimentation requires huge amount computation really try without gpus furthermore measured performance lda baseline might worse might better mileage may vary bottom line deep learning approach spectacular performance supervised task data product usually designed human mind think make difficult understand system move science forward communicate result demonstrates least try build model interpretable result simply building sparse mixture much work framework build model human info similar model exist neural variational document model code paper model us varitional autoencoder infrastructure construct bag word representation document respect build performant dense document vector throw wordtoword relationship learned paper quite similar gaussian lda topic word embeddings nonparametric spherical topic modeling word embeddings model strive incorporate lda get state art result bolton pretrained word embeddings instead learning jointly still paper introduce new clever idea could yield improved topic model
537,Lobsters,visualization,Data Visualization,microlight.js - 2.2k for syntax highlighting. In any programming language,http://asvd.github.io/microlight/,microlightjs syntax highlighting programming language,opensource languageagnostic colorless highlight compatibility settingup distribution minified highlighted,microlightjs microlightjs tiny opensource library improves readability code snippet highlighting programming language without attaching additional languagepackages style languageagnostic unlike codehighlighting solution microlightjs keep set rule many language instead us general highlighting strategy providing reasonable highlight result library size extremely compact nt need specify language code mixed containing several language fact microlightjs care language code written care code structure go code highlight colorless highlight microlightjs aim increasing code readability converting code rainbow instead changing color alters font type look approach following benefit need tuneup color theme make match design match outofthebox cs shipped microlightjs library contains everything needed bundled involving color make available purpose like displaying diff colorless highlight put disadvantage people color blindness look cool compatibility microlightjs written vanillajs shipped umdmodule work reasonable environment library successfully tested recent version major browser settingup download unpack distribution install using bower npm bower install microlight npm install microlight load microlightjs preferable way umdmodule script src pathtomicrolightjs script create element code content highlighted add microlight class prefer use another class name code element highlight provide reset method described nt forget mask htmlrelated character apply monospace style div classmicrolight var lt say hello echo hello div microlight fontfamily monospace whitespace pre result look like var say hello echo hello tuneup element style according taste microlight fontfamily monospace whitespace pre backgroundcolor color look like var say hello echo hello change content fly switch style element highlighted code add microlight class new node invoke following reapply highlight microlightreset also use method specify custom class name instead microlight element containing code microlightreset code fun microlightjs minified highlighted function e function typeof define defineamd define export undefined typeof export export emicrolight function e var iwindow ndocument appendchild r test textshadow l opacity c ungetelementsbyclassname microlight ffunction e tu e var f p h g yttextcontent vtinnerhtml c gexec igetcomputedstyle color n px rgba c ec pf k f w wb x gvlength wk n w r w w r w f n f g f g f g pf pf k v mncreateelement span setattribute style e ed fontstyle italic k k k k bstractliasndrgumentsrrays msert uto b aseeginool ean reakyte c aseatchharheckedlassloneomplonstontinue de buggercimalclaref aulter initl egateete dodoublee chols iflse ndnsurenumventx ceptecp licitort te ndsnsionrn f allthroughalseinal ly ixedloator riendromunc tion globalgotoguardi fmp lementslicitort n itclude lineoutstanceoft erfaceernal l ambdaetockong icrolightoduleutable nann amespaceativeextewilotull bjectperatorrutverride p ackagearamsrivaterotectedrotocolublic r aisee adonlydofgisterpeatquire scuestricttryturn byteealedelfhortignedizeoftatictringtructubscriptuperynchronizedwitch emplatehenhishrows ransientrueryype aliasdefidnameof u n checkeddef ined ionlesssignedtil sesing v arirtualoidolatile w charthenherehileith xoryield r v ncreatetextnode v hk k k h v r w r w w r w w h f w w wby wb wb w k vw eresetf complete nreadystate f iaddeventlistener load
538,Lobsters,visualization,Data Visualization,Crying,http://www.robinwe.is/explorations/cry.html,cry,cry may number cry per day distribution number cry per day distribution duration cry popular cry location intensity distribution category cry time frequency emotion emotion average intensity conclusion email protected,cry may cry made equal consist stray melancholic tear consist unstoppable laughter represent deep achy detachment piece identity onset much hot pepper whatever provocation soon emotion sensation cross intensity threshold seems manifest physically leaking one eye nt strange enough threshold appear drastically different across people stimulus actual always considered bit crybaby triggered frequently privately sometimes hardly reason also always considered fairly strong person stable resilient able work challenging situation found difficult reconcile part overwhelming sensitivity wondered exact nature thing capable pushing edge naturally turned spreadsheet help find answer curiosity order track cry create scheme operationalize defined cry begin shed tear end regained composure also knew cry session varied highly intensity created scale approximate experience shed tear two water work alright makeup mess body composed ca nt pretend okay anymore respiratory system nt work right crumpled pile flesh rest world suspended anguish definitely interested emotional rather sensational stimulus chose exclude thing like cry pain allergy laughter include thing like feeling miserable scared plagued stomach flu every time cried one approved reason recorded date time intensity location situational emotional context later began tracking duration cry spreadsheet looked like data span day beginning february ending october let take look blubbering number cry per day cried whopping time unique day mean average one every three day cry day cried two time reality usually cried given day cried distribution pretty skewed look like distribution number cry per day longest went without cry day consecutive day cried average cry lasted minute second long tail distribution distribution duration cry cried estimated total hour hour per month case wondering dayshours cried heat map managed cry hour day especially tuesday therapy high concentration cry monday evening bit anomaly completely utterly alone time cried cried openly front someone time tried hide fact cry front someone additional time final cry anonymous alone public cry took place home cry hotspot frequented popular cry location also managed cry onstage laundromat mcdonald bathroom intensity distribution cry intensity meant pretty casual disruptive day cry intensity somewhat taxing cry always remarkable cry intensity practically event cross okay threshold voice breathing energy affected fifty cry range negligible amount cry thought never ask took one failed cardsorting exercise another grueling monthlong endeavor managed sort cry one general category situational context within category unique emotion underlying cry category represents le cry could nt interpret based note breakup relationship root total cry data spanned majority yearlong longdistance relationship entirety breakup little bit dating beginning another relationship breakup terrible mess found ex actually married lie trauma caused total cry friendrelated cry caused handful highintensity situation conflict wedding recklessness life chat satisfyingly straightforward interacting thinking dearly beloved family caused cry lot angst related planning suck general business family fair portion cry also related mental physical illness cry related family highest emotional complexity number cry divided number emotion corresponding category couple colleague disheartened see work made cry time work cry actually related personal project actual job liferelated cry essentially formality existing society planning decisionmaking responsibilitytaking traveling illness plainly bad day responsible cry occurred almost exclusively week solotravel trip around europe constantly high level stress overwhelm lastly reflection cry accounted data retrospection involved recategorizing thing happened reevaluating past action decision led feel ashamed slighted selfpitying became feminist time logging reacted strongly injustice became aware introspection led cry involved selfcriticism question identity made feel uncertain dissonant broken ashamed inadequate category cry time looking frequency cry category change time show u interesting thing visual evidence liferelated cry occurred summer traveling cyclical pattern relationship breakuprelated cry large gap reflectionrelated cry breakuprelated cry fizzled perhaps lacked energy think processing dismay outrage someone else frequency emotion frequent emotion fairly general sad hurt angry least frequent one tend particular violated bitter scared humbled many emotion negative unpleasant cover broad range activation amount energy adrenaline liveliness etc feel experiencing something emotion average intensity emotion led intense cry tended unpleasant highactivation fairly specific emotion led le intense cry either pleasant lowactivation make sense defeated intense worndown miserable intense sad apoplectic intense angry conclusion cry million time year million different reason front million different people also learned lot positive way logging affected life decided big deal cry front people way open feeling still worry making people uncomfortable try purposefully brush feeling fear vulnerability embarrassment selfaware upset something slightly able articulate emotion feeling realized sort thing make cry change time either adapt situation learn change example started logging cried lot planning thing family felt stressful planning family still feel stressful learned manage situation proactive planning instead upset others nt changing expectation nt feel like proactive negative way logging affected life pavlov dogged became compulsion check time every time started stopped cry kind think funny also logging took moment introduced layer distance via analysis probably feeling feel became especially problematic towards end project tried categorize cry happening wanted create realtime cry dashboard started logging cry intensity time brink cry nt basically exploiting emotion great thing dashboard would looked like cool fascinating excruciatingly difficult look back data well worth analysis found wishing data different time life said probably never log cry question defined distinguished emotion really anything please email email protected thank reading
539,Lobsters,visualization,Data Visualization,Joe Minicozzi - How We Measure the City,https://www.youtube.com/watch?v=yhvKIaLjOJ8,joe minicozzi measure city,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature joe minicozzi memphis boot camp measure city youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature joe minicozzi memphis boot camp measure city youtube
540,Lobsters,visualization,Data Visualization,Crowdsourcing the Definition of 'Punk',http://poly-graph.co/punk/#prclt-ll1k2itR,crowdsourcing definition punk,,
541,Lobsters,visualization,Data Visualization,"60 years of employment, construction, and the cost of San Francisco apartments",http://experimental-geography.blogspot.com/2016/05/employment-construction-and-cost-of-san.html,year employment construction cost san francisco apartment,argued argued housing cost trend year source housing cost data warns u san francisco housing databook median rent right thing compare construction boom housing inventory land use economy housing construction rent turn back clock arrival income inequality conclusion data available download github,everyone agrees housing san francisco expensive high cost hurting city lot disagreement rent expensive sonja trauss sfbarf argued cost high enough housing go around answer build tim redmond hill argued building housing would make problem worse people would move likely wealthy newcomer whose demand service increase lowincome employment putting pressure older lowercost housing right anyone housing cost trend year understand cause high housing cost must first idea high cost high time apartment advertised rent clear whether extreme shortage housing lingering world war ii whether people typically found apartment way nevertheless least rough evidence price dropping every year briefly stabilized lull apartment began listed increasing number price also began rise overall went every year today outrageous price exactly line trend began year ago however deviation overall trend price began rise return trend line stabilized year early rose sharply remaining trend line price rose dropped returning trend line nominal median rent year note axis logarithmic linear overall trend shown straight line steep curve slightly unfair talk rent growth face value dollar purchase general rent cost thanks inflation adjusting consumer price index real rent gone per year quadrupled effective cost year still alarming increase cpiadjusted median rent year source housing cost data price come daniel hertz city observatory warns u wary anyone say know median rent city claim vary wildly nevertheless source appear least provide internallyconsistent view rise occasional fall rent year frequently cited source san francisco housing databook tabulates median rent twobedroom apartment advertised san francisco chronicle one sunday per year usually first sunday april set replicate databook methodology wider range year quickly gave including twobedroom apartment ad early rarely referred apartment size term instead first sunday april plus year made list advertised unfurnished apartment flat house later condo regardless size advertised chronicle mostly used san francisco public library page scan newspaper resorted microfilm later year page scan available recent year another good source listing craigslist preserved archiveorg date archived vary considerably year year collected available listing year regardless date source appear mutually comparable three year chronicle price plus databook twobedroom figure fortunately year simple linear transformation databook twobedroom price yield median price found scaled databook price way bring pool would better rely databook transcribing price microfilm tedious timeconsuming chronicle craigslist listing shape distribution two median agree within used craigslist median without scaling year since median rent right thing compare surprisingly given anxiety luxury apartment v regular nonluxurious one appear segmentation rental market year even unit size every year handful listing total pool price smooth curve except occasional taboo price landlord strangely reluctant offer apartment exactly approximately lognormally distributed percentile apartment always rent time price median apartment percentile apartment price median apartment see variability construction boom happened stop price dropping obvious explanation san francisco ran large tract vacant land took anyone noticed anything wrong talk housing crisis planning department began maintaining annual report housing inventory keep track rate housing construction demolition recent issue housing inventory online older one berkeley environmental design library san francisco postearthquake housing built series boom biggest immediate postearthquake rebuilding essentially densest area city built transportationled boom marina outer richmond west portal parkside outer mission built central sunset parkmerced filled outer sunset ocean view built essentially end easily developed greenfield housing next boom still could fill hillside twin peak oshaughnessy boulevard boom genuine vacant tract fill redevelopment agency boom rebuilding western addition golden gateway diamond height demolition western addition subtracted net new unit count earlier year first private infill boom entirely scattered site large tract available long doublepeaked boom ran dip middle dotcom crash scattered infill boom aided south market site made available former embarcadero freeway extension since ninth building boom focused site near market street site involved number largest since early building large nt know long continue housing inventory data go back information earlier construction rate come planning department land use map track year construction building year first occupancy housing inventory building stil exist number generally comparable net new housing construction per year summing incremental construction destruction year get cumulative housing inventory existed year starting point summation somewhat mysterious census therefore housing inventory belief unit exist land use map know may illegally constructed inlaw unit others may hotel room consistently counted permanent housing used housing inventory count case quantity housing stock alone provide explanation median rent given year increased since price gone mostly understood adjustment economic factor discussed cumulative housing existing end year economy bureau labor statistic published report every year since giving total wage paid employer san francisco number employee wage paid plotting total wage paid city median rent city show two trend tied closely together economy boom rent go collapse go cpiadjusted median rent total wage paid per year noted economic trend regional essentially unaffected politician attempt attract business city suburb compare example gross wage paid santa clara county period show almost identical trend somewhat sharper peak since late cpiadjusted median rent total wage san francisco santa clara county total wage essentially represents product number people need housing average ability pay get pretty respectable fit median rent finding independent exponent two term used gnuplot fit command find model parameter housing appears get expensive either people get paid people getting paid steeply simple linear increase cpiadjusted median rent model product employment percapita wage housing construction rent still several year model employment data predicts higher lower rent actually asked though housing inventory come add model better job explaining swing rent past year additional prediction housing get cheaper employment alone would predict build nt nt cpiadjusted median rent model employment wage housing inventory model still explain variation rent particular explanation rent high low something else important changed year nt know rent control elli act costahawkins restriction condo conversion invention tic belowmarketrate requirement nt able find direct relationship asking rent surprising since coarse doesitexistornot step function rather thing vary smoothly time important note model parameter approximate determined empirically data theory even minor change training data shift leaving general idea unchanged alternative possible model yearoveryear change rent term yearoveryear change employment wage housing construction case best fit say increase employment mean increase rent increase wage mean increase rent increase housing stock mean decrease rent basic idea magnitude different nt know correct first model bouncing around within uncertainty turn back clock said accept premise lower salary lower employment higher housing construction mean lower rent model parameter least approximately correct much thing need change make city affordable tim redmond pointed arrival time comfortably low rent even though preceded decade half alarm cost living rent control instituted attempt stop even steeper rise cost beyond overall trend roll clock back year cpiadjusted median rent approximately one third hard first model correct would take increase housing supply new unit drop cpiadjusted salary drop employment cut price two third steep drop salary employment would also devastating ability people afford new lower price enough make believe randal otoole affordability achieved continued outgrowth san francisco could early even make sense try go back price cpiadjusted rent three time much today cpiadjusted average income also doubled time maybe trying instead cpiadjusted rent half third increase housing stock much easier imagine whatever goal ought long way away income inequality wrench work inequality income look see bimodal distribution urban household income least far back census possibly earlier two band size considerable overlap san francisco resident census division much sharper essentially large household higherincome group salaried employee small lowerincome group minimum wage worker matter much median rent lowered still going difficult people lowerincome group afford housing distribution household income san francisco contrast inequality income equality rent mentioned nearly every year percentile rent time median rent small noticeable effect distribution new housing becomes available higher housing production rate closer highest lowest asking price get new slightly lowered median price apparently construction boom end rent flatten little peakiness additional help people pay something near median pull distribution even away covering full spectrum income proportionately distribution advertised rent san francisco serious problem percentile income median income percentile rent still median rent problem housing construction alone ca nt solve conclusion san francisco expensive city affluent city growing population easily available land development sonja trauss right building housing would reduce rent high lowend apartment tim redmond right building enough housing make much dent price would change visual character street although result could like barcelona like hong kong fear unsettled question higher priority building enough housing roll back price good old day probably realistic necessary construction rate never achieved even planning zoning considerably le restrictive building enough compensate growing economy somewhat realistic goal would keep thing getting worse long run san francisco cpiadjusted average income growing per year number employed people growing per year together believe first model raise cpiadjusted housing cost per year therefore price stability goal city citizen try increase housing supply average per year time general rate since current inventory would mean unit per year visual stability goal instead price probably continue rise uncontrollably want analysis data available download github please let know explanation find pattern
542,Lobsters,visualization,Data Visualization,"Implementing Sugar & James’ paper, ""Finding the number of clusters in a data set: An information theoretic approach"" in Clojure — Part 1",https://gist.github.com/daveliepmann/88fcf516acc264714de69081ef0c076b,implementing sugar james paper finding number cluster data set information theoretic approach clojure part,implementing kmeans jump method part one http wwwbcfuscedugarethresearchratedistpdf short clojurebased walkthrough clojure version file iris data sorcery clojure principal component analysis,implementing kmeans jump method part one paper finding number cluster data set information theoretic approach catherine sugar gareth james marshall school business university southern california http wwwbcfuscedugarethresearchratedistpdf fascinating let work idea implementing method replicating example read paper least abstract refuse gist repeat use idea information theory evaluate choice number cluster refer k data set apply kmeans clustering algorithm nt try read paper alongside document narrative match order sugar james introduce concept data set nt intend read alongside paper rather different path exploring idea introduce recommend reading skimming paper first working document mean apply information theory specifically rate distortion theory clustering application core idea actually quite concise author describe section one characterize cluster analysis attempt find best possible representation population data set using fixed number point thought performing data compression quantization iid independently identically distributed draw given distribution awesome clustering set data like summarizing tell u directly mean like philosophically select number cluster looking ideal balance compressing original information retaining meaning general concept sugar james note see work claude shannon including short clojurebased walkthrough modeling clustering kind compression sugar james provide tool better determine choice k best suited given data set propose method determine many cluster best describe data set conceptual understanding hand let look concrete application like open clojure version file fire repl evaluate read iris let u begin old classic fisher iris data direct incanter grab u next line pca directly data sorcery clojure modified require incanter rather use namespace going use need require incantercore incanterstats inc incantercharts incc incanterdatasets incd cljmlclusterers mlc cljmldata mld def iris itomatrix incdgetdataset iris since iris data multivariate plot xy graph must condense attribute perform principal component analysis pca def x isel iris col range def component rotation incsprincipalcomponents x def isel component col def isel component col view fourdimensional iris data two dimension group specie using color iview inccscatterplot immult x immult x groupby isel iris col xlabel ylabel title iris pca grouped specie figure look like know data form three group specie visualizing pca reveals one specie well differentiated two overlapping attribute therefore data could legitimately interpreted consisting either two three group let explore kmeans analysis sugar james approach say iris data use weka kmeans implementation via clojure wrapper cljml already aliased clusterers data namespaces mlc mld respectively get started def mlcmakeclusterer kmeans numberclusters clusterer object one us weka perform cluster analysis rather objectoriented approach clusterer nt say much created nt yet built object wekaclustererssimplekmeans clusterer built yet let build doto mlcclustererbuild mldmakedataset fisher iris sepallength sepalwidth petallength petalwidth withold specie column would cheating itovect isel iris col range object wekaclustererssimplekmeans nkmeansnnnnumber iteration cluster sum squared error staring point random nncluster value globally replaced meanmodennfinal cluster centroid n cluster nattribute full data nnsepallength yow hard read println evaluates nil prettyprints repl object wekaclustererssimplekmeans kmeans number iteration within cluster sum squared error initial staring point random cluster cluster missing value globally replaced meanmode final cluster centroid cluster attribute full data sepallength sepalwidth petallength petalwidth weka kmeans function dutifully fulfilled task gave u two cluster turk say çok iyi let try def mlcmakeclusterer kmeans numberclusters doto mlcclustererbuild mldmakedataset fisher iris sepallength sepalwidth petallength petalwidth itovect isel iris col range println object wekaclustererssimplekmeans kmeans number iteration within cluster sum squared error initial staring point random cluster cluster cluster missing value globally replaced meanmode final cluster centroid cluster attribute full data sepallength sepalwidth petallength petalwidth weka dutifully give u three cluster know choice k accurate true illuminating could visually compare cluster result specie result already know let look cluster assignment weka made getassignments ach nein got unhandled javalangexception stacktrace assignment available order instance preserved ok rerun kmeans analysis time setting new parameter def mlcmakeclusterer kmeans numberclusters new parameter preserveinstancesorder true def mlcmakeclusterer kmeans numberclusters new parameter preserveinstancesorder true used cljml clustererbuild simply wrap buildclusterer since already javaaware doto nt add functionality nt see advantage calling buildclusterer directly clear doto buildclusterer mldmakedataset fisher iris sepallength sepalwidth petallength petalwidth itovect isel iris col range doto buildclusterer mldmakedataset fisher iris sepallength sepalwidth petallength petalwidth itovect isel iris col range getassignments object ah bien sur much better oo turn need iterate assignment manually fold back data oh java def map conj itovect iris getassignments let take quick look see going right direction take cool def map conj itovect iris getassignments ok set compare iris data reach pca reusing existing definition x grouping specie cluster assignment iview inccscatterplot immult x immult x groupby isel itomatrix itodataset col xlabel ylabel title iris pca grouped kmeans cluster iview inccscatterplot immult x immult x groupby isel itomatrix itodataset col xlabel ylabel title iris pca grouped kmeans cluster purely visual standpoint say excellent clustering attempt overlapping border specie reasonably close true specie grouping nt know specie data would differentiate matter would know nt right either one look relatively convincing def mlcmakeclusterer kmeans numberclusters preserveinstancesorder true doto buildclusterer mldmakedataset fisher iris sepallength sepalwidth petallength petalwidth itovect isel iris col range iview inccscatterplot immult x immult x groupby map conj itovect iris getassignments itodataset itomatrix isel col xlabel ylabel title iris pca grouped kmeans cluster certainly look defensible visually need sort concrete way gauge accuracy common technique gauge accuracy clustering attempt elbow method one look sharp turn elbow graph sum squared error sse clustering analysis clusterer let try map clusteranalysis process across range k way chart resulting ss let clusterers map mlcclustererinfo doto mlcmakeclusterer kmeans numberclusters buildclusterer mldmakedataset fisher iris sepallength sepalwidth petallength petalwidth itovect isel iris col range range iview incclinechart map numberclusters clusterers map squarederror clusterers title fisher iris sse selection k xlabel number cluster k ylabel withincluster sum squared error look like case iris data elbow technique informative leaf u unanswered question elbow maybe even technique able reject k focus want certainty would feel comfortable something numericallybased base conclusion would nt well precisely sugar james provide propose calculating distortion clustering analysis looking change jump distortion one k next created following function first calculate distortion cluster analysis given k mean raising squared error already know negative power manipulate generally set onehalf number parameter data set since want look value across range k value function applies calculation kmeans clusterer seq clusterers defn assocdistortions given number transformationpowery seq map clusterers map describes kmeans clusterer return seq map describing clusterers key distortion mapped value cluster analysis squared error raised negative transformationpowery based sugar james paper http wwwbcfuscedugarethresearchratedistpdf defines distortion denoted hat sub k given k mean squared error covariance identity matrix distortion transformed raising negative transformation power generally set number attribute divided two clusterers transformationpowery map assoc distortion mathpow squarederror transformationpowery clusterers know distortion sugar james write calculate change transformed distortion one change k call jump calculate walking seq clusterers pairwise fashion using partition notice prepend dummy clusterer distortion calculate jump defn assocjumps given seq map clusterers describing kmeans analysis including transformed distortion analysis return sequence map updated calculated jump transformed distortion based sugar james paper http wwwbcfuscedugarethresearchratedistpdf defines jump given k denoted j sub k simply transformed distortion k minus transformed distortion clusterers map fn b assoc b jump distortion b distortion partition conj clusterers distortion note ignore preposterously longwinded docstrings two function code rather concise powerful mathematical concept nt complex let put distortion jump tool work want see plotted across selection k value iris data also need try different value transformation power notice turn clustering onedimensional problem selecting k twodimensional problem evaluating different combination k let graph distortion jump different value k across three selection let clusterers map mlcclustererinfo doto mlcmakeclusterer kmeans numberclusters buildclusterer mldmakedataset fisher iris sepallength sepalwidth petallength petalwidth itovect isel iris col range range k using transformation power iview incclinechart map numberclusters assocjumps assocdistortions clusterers map jump assocjumps assocdistortions clusterers title fisher iris jump according k figure xlabel number cluster k ylabel jump transformed distortion j k using transformation power iview incclinechart map numberclusters assocjumps assocdistortions clusterers map jump assocjumps assocdistortions clusterers title fisher iris jump according k figure xlabel number cluster k ylabel jump transformed distortion j k using transformation power iview incclinechart map numberclusters assocjumps assocdistortions clusterers map jump assocjumps assocdistortions clusterers title fisher iris jump according k figure xlabel number cluster k ylabel jump transformed distortion j sugar james use added see performance default recommendation number parameter choice seems based trial error various theoretical reason observation suggest cluster distribution normal smaller transformation power however obvious choose optimal value squared error distortion used strong correlation exist dimension value somewhat le p may produce superior result empirically promising approach involves estimating effective number dimension data transforming accordingly example iris data fourdimensional suggests using however several variable highly correlated result effective dimension data set closer implying transformation power near may appropriate understanding three graph show see clear spike secondary spike spike greatly diminished barely edge clear winner result may vary based weka seeding future installment may find interesting run dramatically higher maximum k taking author recommendation selecting transformation power would interpret result ignorant actual number class refused deeper analysis suggesting either cluster sugar james note either reasonable interpretation data given known class would suggest leaning overfitting territory given number sample per cluster rather would reasonable path investigate ignorant true class overall examining jump distortion seems like relatively robust method particular data set looking example data set show u dramatically method superior elbow method part
544,Lobsters,visualization,Data Visualization,I visualized my heartrate at Coachella,http://lawrencewu.me/2016/04/29/my-heartrate-at-coachella.html,visualized heartrate coachella,measured heartrate coachella friday saturday sunday,measured heartrate coachella apr wore fitbit coachella data scraped afterwards give time load sample per minute data point per graph also click artist title neat preview friday saturday sunday
548,Lobsters,visualization,Data Visualization,"Analyzing the Panama Papers with Neo4j: Data Models, Queries & More",http://neo4j.com/blog/analyzing-panama-papers-neo4j/,analyzing panama paper data model query,world seen exposed highly connected network apache solr tika linkurious visualization application cypher step involved document analysis document graph business registry panamapapers graph data model used icij issue icij data model could extend basic graph model used icij original document let look concrete example azerbaijan president ilham aliyev graphgist linkurious power player azerbaijan president ilham aliyev wife mehriban eldest daughter leyla sister arzu brother heydar cypher statement set visualized entity relationship interesting query work extension model graphgist interactive graph model document graphgist portal related information want start project like using click get free copy reilly ebook get started graph database today,world seen international consortium investigative journalist icij exposed highly connected network offshore tax structure used world richest elite structure uncovered leaked financial document analyzed journalist extracted metadata document using apache solr tika connected information together using leaked database creating graph node edge made accessible using linkurious visualization application post look graph data model used icij show construct using cypher dissect example leaked data recreating using cypher show model could extended step involved document analysis acquire document classify document scan ocr extract document metadata whiteboard domain determine entity relationship determine potential entity relationship property determine source entity property work analyzer rule parser named entity recognition document parse store document metadata document entity relationship parse author named entity date source classification infer entity relationship compute similarity transitive cover triangle analyze data using graph query visualization finding triad graph show inferred connection bob inferred connection companyb companya document graph simple model organizational domain business interrelationship holding simple similar model use business registry common use case minimum client company address officer natural people company relationship officer officer company classification protector beneficiary shareholder director beneficiary shareholder officier registered address address client registered company officer similar name address address entity lot property like document number share amount start enddates involvement address citizenship much two entity name different amount information attached though depends relevant information extracted source eg officer name others full record attribute specific relationship like person officer company basic domain populate document tax shell company holding aka panamapapers initially classify raw document type subtypes like contract invitation attach much direct indirect metadata either directly document type like sender receiver email party contract inferred metadata gained content document technique like natural language processing named entity recognition plain text search wellknown term like distinctive name role first step build graph model extract named entity document metadata includes company person address entity become node graph example company registration document extract company officer entity relationship directly inferred document previous example would model officer directly connected company officer isofficerof company relationship inferred analyzing email record see several email person company infer person client company client isclientof company use similar logic create relationship entity share address family tie business relationship regularly communicate direct metadata entity relationship document author receiver accountholder attached mentioned colocated turn plain entity name full record using registry profile document inferred metadata information source relationship entity related people organization direct metadata address organization find peer group ring within fraudulent activity family tie business relationship part communication chain graph data model used icij issue icij data model modeling data quality issue icij data model icij data contains lot duplicate connected similar name address relationship mostly inferred first last part name together address family tie would also beneficial data model actually merge duplicate certain duplicate relationship could also merged icij data model shareholder information like number share issue date etc stored officer officer shareholder number company would better store shareholder information officer shareholder relationship boolean property could represented label eg citizenshipyes could person label could extend basic graph model used icij domain model used icij really basic containing four type entity officer client company address four relationship le static view organizational relationship include interaction activity looking source document activity outlined report many thing enrich graph model make expressive model original document metadata relationship people part relationship also inferred relationship part conversation mentioned subject document interesting relationship alias interpretation entity used analysis allows journalist reproduce original thought process also source additional information like business registry watchlists census record journalistic database added human relationship like family business tie created explicitly well implicit relationship infer actor part fraudulent group ring another aspect missing activity money flow example activity openingclosing account creation merger company filing record company assigning responsibility money flow could track bank account intermediary used monetary transaction mentioned get overview amount transferred pattern transfer pattern applied extract additional fraudulent money flow transaction system graph data flexible malleable soon single connection point integrate new source data start finding additional pattern relationship trace new entity document email pdf contract dbrecord money flow account bank intermediary new relationship family business tie conversation peer group ring similar role mention topicof money flow let look concrete example let look family azerbaijan president ilham aliyev already topic graphgist linkurious past see wife two daughter son depicted graphic quoting icij power player publication emphasis name added family azerbaijan president ilham aliyev lead charmed glamorous life thanks part financial interest almost every sector economy wife mehriban come privileged powerful pashayev family owns bank insurance construction company television station line cosmetic led heydar aliyev foundation azerbaijan preeminent charity behind construction school hospital country major sport complex eldest daughter leyla editor baku magazine sister arzu financial stake firm right mine gold western village chovdar azerfon country largest mobile phone business arzu also significant shareholder sw holding control nearly every operation related azerbaijan airline azal meal airport taxi sister brother heydar property dubai valued roughly million heydar legal owner nine luxury mansion dubai purchased million took data icij visualization converted graph visualization graph pattern cypher query language squint still see structure visualization compressed officer beneficiary shareholder director ioobsd prefixed officer relationship ioo add share citizenship regnumbers address property entity relationship see clicking element embedded original visualization cypher statement set visualized entity relationship create leyla officer name leyla aliyeva ioobsd ufu company name uf universe foundation mehriban officer name mehriban aliyeva iooprotector ufu arzu officer name arzu aliyeva ioobsd ufu mossackuk client name mossack fonseca co uk registered ufu mossackuk registered fmmgmt company name fm management holding group sa leyla ioobsd kingsview company name kingsview developents limited officer name leyla ilham qizi aliyeva officer name leyla ilham qizi aliyeva hassimiliarname leyla hassimiliarname ioobeneficiary exaltation company name exaltation limited iooshareholder exaltation officer name arzu ilham qizi aliyeva ioobeneficiary exaltation hassimiliarname arzu hassimiliarname officer name arzu ilham qizi aliyeva iooshareholder exaltation arzu ioobsd exaltation leyla ioobsd exaltation arzu ioobsd kingsview redgold company name redgold estate ltd officer name willy meyrs sa iooshareholder redgold officer name londex resource sa iooshareholder redgold officer name fagate mining corporation iooshareholder redgold officer name globex international llp iooshareholder redgold client name associated trustee registered redgold interesting query family tie via last name match officer tolower oname contains aliyev return family involvement match officer tolower oname contains aliyev match r c company return r c officer company role match c company r officer cname exaltation limited return show joint company involvement family member match officer c company first second return first second involvement c resolve duplicate entity match officer return tolower split oname collect oname name count count resolve duplicate entity first last part name match officer split tolower oname nameparts nameparts nameparts name collect oname name count count count return name name count order count desc transitive path mossack officer example match path client name mossack fonseca co uk officer none r rels type r hassimiliarname return n node path nname hop length path shortest path two people match officer name mehriban aliyeva match b officer name arzu aliyeva match pshortestpath b return p work extension model merge duplicate create person node connect officer single person reuse statement duplicate detection match officer split tolower oname nameparts nameparts nameparts name collect officer originally natural people citizenship property name contains aliyev create p person name name foreach officer create identity p introduce family tie people create ilham person name ilham aliyev create heydar person name heydar aliyev ilham heydar match mehriban person name mehriban aliyeva match leyla person name leyla aliyeva match arzu person name arzu aliyeva foreach child leyla arzu heydar create ilham childof child create mehriban childof child create leyla siblingof arzu create leyla siblingof heydar create arzu siblingof heydar create ilham marriedto mehriban show family match p person return p family tie company match p person pname contains aliyev optional match c company graphgist explore example dataset interactive graph model document called graphgist find many various usecases industry graphgist portal related information want start project like using click get free copy reilly graph database ebook get started graph database today
549,Lobsters,visualization,Data Visualization,Every shot Kobe Bryant ever took,http://graphics.latimes.com/kobe-every-shot-ever/,every shot kobe bryant ever took,every shot kobe bryant ever took joe fox ryan menezes armand emamdjomeh,every shot kobe bryant ever took joe fox ryan menezes armand emamdjomeh april kobe bryant final field goal came foot second left utah jazz year lakers fired shot including regular season playoff take tour key shot career explore make miss long career
550,Lobsters,visualization,Data Visualization,Visualization of RAMP transactions,http://rystsov.info/2016/04/07/ramp.html,visualization ramp transaction,usage wild rumor reported problem overview change set item read set item example splitwise stepbystep ramp visualization postscriptum ramp paper lobster submission,usage wild algorithm new nt noticed wild rumor cassandra may support facebook also reported working apollo database us paxos replication crdt ramp cross shard transaction problem ramp algorithm solves problem simultaneous atomic update set item distributed multiple server shard overview change set item change item send shard owning current version item along name item participating transaction metadata change connect shard mark change committed id current transaction greater id previous change read set item read current committed version item use metadata calculate expected version value fetch expected version greater committed version described paper necessary want avoid couple anomaly one happens client read two item transaction receives new version start new transaction read one element receives old version stale read believe step omitted original paper supposed read transaction always read set item participating write transaction practice latter way latency penalty item distributed different shard read transaction always contact example one hardest part understanding ramp transaction come example domain anomaly ramp transaction lost update explainable fine customer perspective good example application like splitwise allows customer split bill friend track much model domain directed weighted graph node represent customer edge represent debt distribute distributing node outgoing edge approach customer get list debt querying one shard cause money classical example need serializability application rather reminder bank relax guaranty example customer may understand one simultaneous update data may canceled ca nt tolerate inconsistency view two customer much exactly guaranty ramp transaction provide stepbystep ramp visualization modeled situation customer named like mathematician deeply admire evariste galois euclid kurt godel take cab go restaurant euclid pay ride godel handle restaurant check point time decided reflect app postscriptum ramp paper described three flavor ramp transaction different runtime characteristic rampfast rampsmall ramphybrid post cover first one similar got rampfast sure get without problem reading lobster submission
552,Lobsters,visualization,Data Visualization,NYC subway math,http://erikbern.com/2016/04/04/nyc-subway-math.html,nyc subway math,nyc subway math mta realtime api let cool stuff data distplot seaborn kernel density estimation mode erik please digress talk relationship two curve dirac delta waiting time line violin plot l train fucked mta offical color schema waiting time time day risk averseness waiting subway sunk cost confounding factor five minute longer wait longer wait minute exponential distribution memorylessness available reddit thread hacker news discussion tagged popular misc math statistic,nyc subway math apparently mta company running nyc subway realtime api fascination subway take autistic proportion obviously analyze data documentation somewhat terrible relevant code use api googletransit import import urllib feedid feed response urlliburlopen http dataminemtainfomtaesiphp key feedid osenviron mtakey feedid feedparsefromstring responseread print feed started tracking subway train one day completely forgot several week later large data dump full arrival l si gc latter two staten island railway grand central shuttle let cool stuff data instance bunch subway train line reason started looking data understand extent waiting subway sunk cost v investment particular optimal strategy waiting subway intuition told expected additional time wait go approach go afterwards every second wait get closer next subway likely random issue subway give turn thing let start looking plot subway delay distribution time two train p look like probability distribution made distplot function seaborn histogram minute bin combined kernel density estimation probability distribution interesting thing distribution multimodal biggest peak around minute another around minute suspect reflect rush hour v night traffic also peak suspect happens rush traffic subway end clustering note distribution waiting time bit different assume equally likely arrive subway stop time day waiting time next subway look like distribution represents probability distribution time day pick subway line go random subway station wait next train distribution bit regular likely time wait mode actually minute although mean median much larger erik please digress talk relationship two curve complete side note realized general take distribution time event p convert distribution time next event using relation q frac inttinfty p d sp d math bit rusty please nt use heart surgery seems work plug dirac delta p delta td get uniform distribution back q le le data implemented dumb way sampling waiting time line let plot average time arrival line limited line api let switch violin plot using seaborn interestingly l stack pretty well subway line despite notorious delay website l train fucked median waiting time smallest line even extreme case compare favorably btw key data set chart mta offical color schema know color l perfect gray actually marginally blue amazing waiting time time day obviously time day extremely important factor let look waiting time time day point time give u probility distribution waiting time let plot quartile change day percentile line blue describes median time wait based time day percentile line yellow describes long wait unlucky event happens depends risk averseness line pick make flight probably pick percentile nt matter late pick shockingly waiting time peak wee hour particular percentile shoot around window stable shoot waiting subway sunk cost let say wait subway minute nt arrived yet give probably waited subway hour probably point certain point waiting subway investment getting home sooner also depends risk averseness need make flight might give get cab point given spent minute far waiting subway additional time going wait tricky bias time waited longer tends skew towards night would confounding factor limited data set interesting conclusion five minute longer wait longer wait waited min median additional waiting time another minute minute later train still nt come median additional waiting time another minute give waiting one way think much time think worth waiting time already waited sunk cost nt really matter matter much additional time willing wait let assume want optimize wait time le min case max time wait minute giving point yellow line cut min mark reminds bit project management longer project going longer expected value additional time whatever resource spent sunk cost matter likely estimation project completion going forward course overdue project longer estimate course nothing magic kind distribution certain probability distribution waiting investment expected time next event go every second wait exactly one type probability distribution waiting nt affect time next event exponential distribution particular property referred memorylessness fattailed distribution expected time next event go every second wait nyc subway distribution exhibit behavior different part curve code available curious addendum post got traction see reddit thread hacker news discussion tagged popular misc math statistic
553,Lobsters,visualization,Data Visualization,Tools for Thought - Graphical Algebra and Fourier Analysis,https://acko.net/files/gltalks/toolsforthought,tool thought graphical algebra fourier analysis,note part requires web audio api work chrome firefox fmackonet source code,presented tool thought workshop recurse center nyc hi steven usually start website aka site header defacto calling card effect powered webgl consists live geometry generated javascript streamed gpu way feed large amount data efficiently case triangle site header fun piece live art really interested using power communication purpose particular year worked visualizing mathematical concept directly minimal fuss fluff william thurston mathematician similar thing trying illuminate difficult concept case aka dimensional hypersurfaces found quote one lecture really resonated word poor tool brain dump maybe try explain thing without word altogether coding ever since could reach keyboard playing around computer graphic realized could reason intuitively mathematics translating formula picture built visual understanding common topic found much easier remember think formula lack better term let call graphical algebra let compile webgl shaders take example exponential curve really surprising property left stretch curve vertically factor right simply shift left one unit curve express symbolically representation satisfying specific case formula adding exponent memorize formula find easier remember like vertical scaling equivalent horizontal translation inherent freaky property exponential curve particularly unique example either example square value left vertically unlike highly nonlinear transformation seems like would much harder map cleanly onto something else scale graph right horizontally factor curve actually express symbolically general case formula multiplying exponent vertical power equivalent horizontal scaling inherent property exponential curve x implies really one exponential curve rule every exponential curve base offset drawn scaling translating exponential curve verticallyhorizontally nt know never explained school find neat way understand exactly make exponential special fact logarithmic function inverse exponential thing apply one true logarithmic curve exact one power x turn straight line logarithmic plot sort insight nt apply exponential take example quadratic play around discover something neat left skew parabola ie applying affine transformation right move parabola left one unit curve skew parabola really rolling center left right additional vertical shift applied one true parabola translate scale general case turn quadratic formula student told memorize formula discriminant often asked solve bunch contextless quadratic one find much important remember standard form parabola center always point x rest derived necessary reduced form constant apply sort thinking complicated situation rather elemental function example cosine first let take absolute value cosine making negative value positive effectively fold bottom half onto top let square value cosine range value get compressed towards zero nonlinearly end cosine twice frequency scaled translated vertically commonly expressed trigonometric angle doubling formula student sometimes asked memorize bunch find graphical representation satisfying useful example minimum used line absolute slope squared also cosine symmetric ups down tell u cosine sine essentially approximate sequence parabola alternating upside tell taylor series expansion surprising know sine cosine solution second order differential equation look like apply sort graphical thinking direct visualization complicated math like fourier analysis art finding particular frequency wavesnote part requires web audio api work chrome firefox one take little longer compile bear see laptop crotch beware thing get toasty going use live audio input internet radio streamed fmackonet like call rave party internet complete trippy visuals sound wave visualized millisecond time ie sound pressure emitted speaker click button corner toggle microphone input instead find average value section wave get dc value direct current average level sound wave actually zero deviation due finite window sampling case frequency using tinny laptop speaker ca nt hear way fourier analysis want take average though typically done using complex number vector like turn complex number trivial twist graph tune average biased towards particular frequency wave contains frequency average biased away center increase twist tune analyzer higher frequency magnitude average tell u amplitude angle average tell u phase ie particular shift wave time really scaling translation frequency let twist total factor tuned frequency hz roughly pitch human voice diagram extremely twisted gpus like draw straight line triangle need divide curve finely order get appearance smooth curve total vertex triangle quite lot fact instead one frequency time let visualize entire frequency axis time dc complexity go really lesson learned building intricate explanatory visualization sometimes order create accurate intuitive picture concept need add order two magnitude consider graphical version curse multidimensionality live mostly complete picture discrete fourier transform aka dft practice tend cheat use fast fourier transform fft instead conceptually happening underneath taking average increasingly twisted version wave creating whole new dimension collapsing old one summation really paying attention surprise exponential function formula connecting power twisting scaling translation see identify frequency band correspond sound enjoy source code
554,Lobsters,visualization,Data Visualization,How I (try) to optimize my commute,https://medium.com/@scott_in_2d/the-problem-461acd03e835,try optimize commute,ow try optimize commute problem get work fastest slowest cheapest true cost priciest cheapest timecost priciest time cost cushiest roughest approach relative relative choose best day result download trip data effect duration effect cost drop since starting effect comfort winning cheap value fast plain bad longest ride muni shortest ride uberx priciest ride uberx cheapest ride walked scoot next,try optimize commutethe problemwhen took latest greatest job struck problem every working stiff get work much country suppose question driving route new york brother really train show first san francisco oddball dense like new york sold car drive anywhere unlike new york mass transit widely lauded missing potential luckily combination density dysfunction eager earlyadopter resident mean host alternative uber born tech company invest private shuttle little electrical scooter scoot zip across hill etcso admitting ignorance mean come way test plethora live neighborhood called pacific height along amazing park work neighborhood called missionas google map show mere mile fairly straight shot also show traffic suck expect average mph stretchso took measuring various mean transit disposal yearplus data collection best worst fastest tie flywheel uberx average minute taken flywheel twice uberx timesthe slowest walking minutesthe cheapest true cost walking priciest curb experience super negativethe cheapest timecost uber pool priciest time cost curb cushiest flywheel perfect comfort two ride roughest curb perfectly terrible approachto grade various mode decided would care three thing speedcostcomfort scale empty city bus quiet reading time uberpools crammed coriders showered day eyewatering miseryeach morning got new row excel spreadsheet log three bit csv update python get applestoapples convert commute duration dollar amount hey time money perminute value would set taking total actual dollar spent total time spent literally time money eg bus ride took minute valued time per minutea prime time lyft ride got work minute valued time per minute blending cumulative time dollar ended getting overall value per minute thus every commute two cost real time essentially point total cost calculation distance point comfort lot easier rate ride scale totally subjective arbitrary worst kind datafor timecost comfort compare commute method average performance relative best averageeg walking slowest average minute uberx fastest minute best shave minute commute yellow cab take minute mean save minute walking time score would weight timecost total score comfort comparing total cost comfort score average could generate score method could collect data ontimecost bus sqrt realcost bus time bus average timevalue timecostscore bus timecostmax timecost bus timecostmax timecostmin relative best timecost saving mode compare comfortscore bus comfortmax comfort bus comfortmax comfortmin relative comfortable mode compare score bus timecostscore bus comfortscore bus trying optimize commute run doubleblinded study ride distribution even instead every morning use weighted random selection process mode get likelihood picked based share prior commute modified score performancel bus bus ride commute average bus score average score eg morning write taken uberx time commute ride uberx combined score weighted average uberx slightly underperfoms timecost wicked fast average time minute high real cost average thus morning shot getting uberxwhy choose best day hedging change willing pay premium information collection chance reveals better return already started paying past year scoot negotiated city street parking meaning drop scoot along designated curb rather specific garage greatly shortened commute improving scoot scorethat also randomly pick scoreblind time give new comer bad scorer chance get picked reevaluatedthe resultsdownload trip data rip sidecar working thing care input time cost comfortstart timeblue dot individual ridered line trailing averagegreen line cumulative averageeffect duration minimal none around ride average settled minute effectively changed since currently minute smoothed average keep bouncing around cumulative average suggesting brownian motion around numberwhat cost effect cost moderate seem three period first ride gradually brought cost next ride string highcost commute yank average back look like took fewer uber poollyft line uberxlyft since smoothed view red well cumulative average green back tugging average muni scoot started gain share roughly drop since startingcomfort effect comfort minimal cumulative average drop started around around volatility look high smoothed average look keep nudging unlike cost duration comfort metric want going effect year getting lowerpriced commute slightly deteriorating comfort level taking amount timewho winning people care getting work faster cheaper greater comfort instead common question method best best metric usually reply might people hate working data analyst aside straight time cost comfort another metric could test win replacement approach much paying shave minute commute going next fastest option walking cost next fastest mode muni average save minute per minute saved shaving another minute taking scoot cost extra per marginal minuteit quickly becomes clear mode terrible anything negative win replacement mode save time money yellowcab cost le curb save seven minute could also look win replacement common benchmark walking see value opportunity adjust based much want spend muni scoot flywheel uberx per minute premium comfort aside equivalent mode question balancing much time want buy winner efficient minutetodollar exchange uber pool give minute back every spend lyft line far behind big group option sidecar scoot flywheel uberx muni big step lyft another step yellowcab followed long ride curb tier value also visualized graphing cost v timeeach ride plotted according cost x minute large dot sit average type sized relative number time takeni going start thinking mode falling four category cheap walking scoot munivalue uberpool lyft linefast flywheel uberxjust plain bad lyft sidecar yellowcab curba note interesting outlier longest ride minute muni july cost scored comfort idea happened day likely got stuck waiting delayed bus took uberx instead attributing cost muni shortest ride minute uberx october cost scored comfort ride uberx september took minute got comfort guess dreamforce big citydestroying conference foolishly left rush hourcheapest ride sevenway tie six time walked one time took scoot credit took minute comfort score varied next looking forward trying new mode come online added luxor app yet randomly picked chance every day also looking forward chariot bay area bike share expanding along commute friend pointed could buy bike put high capital cost mode might great amortize assign cost first ride getaround turo car share really set oneway commuting suggestion aside new method travel new method scoreeuclidean distance probably wrong way measure timecost curb example cost took minute bad get timecost straight added minute per minute much worse euclidean distance meant show going x distance saved going ab distance case spending time money saved neither forget euclidean distance perhaps looking timedollar exchange rate grade method per minutesaved uber pool best rate business trading money time best value like marketing budget put much money diminished return save say minute minute walking commute simply offer uber pool existing method relocating work pricey indeed suppose save minute fewest commute best option still uber poolthen comfort rather arbitrary weighting process need another exchange lowest comfort equivalent minute highest comfort suspect sort weighting time level eg rather spend minute sitting empty bus reading minute navigating scooter pouring rain uncomfortable minute get multiplier penalty right multiplier ultimately question come trying optimize want get work quickly cheaply comfortably optimizing along three dimension hard think consciously understanding tradeoff flatten along one derived metric give better applestoapples comparison think switch adjust minute commuting based comfort try minimize dollarspercomfortadjustedminutesaved dpcams terrible name metric time go collect data see work
555,Lobsters,visualization,Data Visualization,What Is a List? The Ultimate Predicate Showdown (in Clojure),http://www.bytopia.org/2016/03/08/what-is-a-list/,list ultimate predicate showdown clojure,notebook gorilla repl,post originally written notebook check gorilla repl nt done yet sizeable number clojure developer common lisp experience past asked main clojure advantage cl often mention single equality operator compared lisp eq eql equal equalp might come minor point practice cognitively exhausting keep track one use even jarring eql intuitive one usually default explain straight face beginner stringkeyed hashtable nt work created wrong equality operator never could clojure similar sin multitude list type predicate woken asked standard clojure data structure would likely name list vector map set tell given object data structure certain type well say vector map set list leave alone man trying catch z gotcha thing list weak predicate check object precisely persistentlist plenty thing clojure look like list without one list range false list rest false list concat false list false lie everywhere hold wildman every clojure developer worth salt know seq way roll indeed seq return true example returning false vector list predicate define list something round parenthesis convenience made table comparing predicate expression type list seq seque ntial coll instance list persistentlist list persistentlist range longrange repeat repeat rest chunkedseq concat lazyseq con persistentvector persistenthashset persistentarraymap linkedlist linkedlist arraylist arraylist string nothing really surprising result seq default list predicate use list check exactly ipersistentlist child use sequential check list vector use coll check four main clojure collection use instance javautillist interoperate java code hope reading article never bitten clojure list predicate hack merry
556,Lobsters,visualization,Data Visualization,How We Made Hell and High Water,https://www.propublica.org/nerds/item/how-we-made-hell-and-high-water,made hell high water,hell high water hurricane ike storm storm aka mighty ike midbay scenario coastal spine modeled storm coastal spine extended adcirc utaustin created landfall sept utc processing adcirc pngs resultscope instanced array trop file database created dr hanadi rifai others university houston,interactive story hell high water includes map seven animated simulation depicting large hurricane hitting houstongalveston region four scenario depict hurricane hitting existing storm protection infrastructure place three envision storm protection project proposed number university texas five simulation developed team university texas austin severe storm prediction education evacuation disaster sspeed center rice university recreation hurricane ike real storm hit texas september storm simulation envisions hurricane ike making landfall near san luis pas mile southwest actually landed according dr phil bedient rice chance storm scenario occurring given year one storm aka mighty ike follows path storm percent higher wind speed bedient told propublica texas tribune chance storm scenario occurring given year one midbay scenario simulates storm includes gate across middle galveston bay would prevent storm surge reaching clear lake houston ship channel midbay scenario proposed sspeed center rice university coastal spine simulates storm includes proposed wall along galveston island bolivar peninsula gate across bolivar road would prevent storm surge entering galveston bay coastal spine version proposal dr william merrell texas mgalveston two simulation based synthetic storm developed federal emergency management agency part riskmap flood mapping study modeled researcher jackson state university synthetic storm opposed storm based hurricane ike never appeared nature derived averaging hundred actual storm hit texas coast storm synthetic storm like scenario make landfall near san luis pas according jsu researcher chance storm occur given year coastal spine extended simulates storm protected structure similar coastal spine except extends far sabine pas northeast far southwest freeport extended coastal spine current version coastal spineike dike proposal dr william merrell texas galveston researcher provided storm data propublica texas tribune format used adcirc system run powerful supercomputer utaustin u army engineer research development center coastal hydraulics laboratory erdc adcirc take variety storm input able derive storm surge wind strength wind vector high precision even local area propublica texas tribune worked primarily three adcirc file format grid file water elevation time series file wind vector time series file grid highly accurate height map texas coast grid provided propublica texas tribune dr jennifer proft utaustin created contains million point file provided ut hourly snapshot simulated storm starting sept pm utc continuing hour grid file provided u jackson state university depict storm storm protected coastal spine structure roughly million point though within area interest jsu ut grid number point storm time series file start fictitious date aug continue hour halfhour time step storm coastal spine time series file begin fictitious date aug continue hour halfhour time step adcirc grid called unstructured grid meaning resolution varies different location mesh length line connecting grid node varied meter meter within area interest variability resolution given triangle range square meter square meter variation grid resolution roughly area interest jackson state university additionally water surface elevation file margin error foot according bruce ebersole jackson state university display storm timeline synchronized landfall storm around hurricane ike landfall sept utc account varying length time series file storm wished show timeline synchronized storm simulation begin hour landfall continue hour landfall storm provided u jackson state university saved halfhour time step ut storm saved hour time step removed every snapshot jackson state storm processing interactive graphic application focused initial area interest surrounding houstongalveston area smaller area covering houston ship channel clear lake galveston processing adcirc pngs order process adcirc file display web compress massive size initial datasets provided u developed processing pipeline broke grid time series first area interest encoded averaged data red green blue alpha channel pixel png image fast delivery browser first used adcirc fortran utility program called resultscope crop file area interest cut background area example grid point took resulting file encoded series dataencoded image area background houston ship channel clear lake galveston created pixel png image packed height data rgba value image using opengl ruby image database encoded green value height grid pixel location blue height decimal red byte flag indicating whether point sea level order format data efficiently transport internet manipulation web browser also packed hour time series png image red alpha value storing wind x vector respectively green value containing water height location blue value containing height water decimal optimize image delivery web composited time series image set image containing four image storm therefore would single grid image ten time series image comprising hour storm application seven set image storm every area interest entire app comprised set image total collected time series quadrant image would image altogether every storm compressed resolution accuracy area interest varies background accuracy averaged square meter houston ship channel view square meter clear lake square meter galveston square meter since grid resolution varies different point around mesh even though every pixel image database averaged area underlying data may lower resolution resolution elevation real world adcirc grid png image database illustration sarah way propublica interactive graphic us webgl decode image browser display animation reader graphic base image shown reader pansharpened truecolor landsat image texas coast using webgl mixed blue rgba satellite image area depth grid sea level surge exceeded underlying elevation course time series would nt hurricane without wind created particle system show wind direction speed worried showing large amount particle vizualisation would slow animation crawl found webgl extension called instanced array make copy one instance particle efficiently draw thousand time particle randomly placed small rectangle mesh rotate rectangle based wind data storm underlying image database every frame also update rectangle position based wind velocity point store webgl texture wind particle life second fade reset original position wind speed visualization time fast underlying computer model even hurricane sized wind speed viewed essentially space would imperceptible presented metadata storm storm track proposed existing storm protection measure map vector data texas galveston provided current extended coastal spine scenario propublica texas tribune low resolution raster image converted vector file although therefore imperfect best estimate conception coastal spine would look like rice university via utaustin provided proposed existing barrier u shapefile utaustin provided storm track ike shapefile converted geojson jackson state university provided storm track storm trop file synchronized ike timeline converted geojson present map storage tank presented houston ship channel view come database created dr hanadi rifai others university houston create dataset university houston researcher scrutinized aerial image classify tank storage tank data therefore current several feature interactive graphic use png image database created present storm including addresslookup function surge number galveston strand johnson space center exxonmobil chemical however process done serverside discovered querying pixel data browser using getimagedata method canvas return incorrect result image alpha transparency timeline graph top page also generated querying png image database storm area interest given point point depicted timeline graph change based area interest overview well clear lake area interest depicts point near kemah boardwalk galveston aoi point galveston strand houston ship channel view point exxonmobil chemical facility near bayway drive baytown texas used google address geocoder accuracy number resolution area interest noted would like extend thanks team rice utaustin texas galveston jackson state university helping u understand present data especially jennifer proft ut bruce ebersole jackson state university spent many hour patiently guiding u intricacy storm data
560,Lobsters,visualization,Data Visualization,Two Little Ducks,http://style.org/malofiej/,two little duck,jonathan corum malofiej previous talk short post mobyduck child book dear damien andrew losowsky presentation symmetry natural law angry alien dagens nyheter found evidence graphic talk accuracy clarity legibility empathy simplicity understanding elegance beauty video,jonathan corum march summary talk last thursday malofiej conference university navarra pamplona previous talk writing memory approximation said good afternoon name jonathan corum new york time design science graphic honored malofiej conference must admit little confused duck duck behind duck malofiej poster duck brochure took realize duck supposed represent number know game bingo number nickname nickname number english spanish two little duck los do patitos quite see two duck maybe help malofiej web site saw short post thousand plastic duck circling ocean year sounded familiar started reading fascinating story many detail come excellent book mobyduck donovon hohn january ship ever laurel lost dozen shipping container storm one container broke open released almost plastic bath toy eric carle photo spill child book duck drew like son almost see page say duck overboard duck fell overboard circling ocean year occasionally washing shore somewhere every year duck wash ashore duck predicted make landfall new part world story reappear article blog post example english spanish mentioning duck donovan hohn faded duck know duck look like angular yellow year sea sun wind faded ivory white surprised see coverage used image like classic duck orange bill blue eye particularly liked sun seems one duck reuse rubber duck story also know location container went overboard big data one data point start knowing location spill make duck interesting research ocean drift went look map one found even one location correct starting point might hundred mile map lower left location mile km surprising thing picture inaccurate map showed wrong location spill surprised duck actually four kind bath toy lost overboard something duck made people ignore green frog blue turtle red beaver donovan hohn radio netherlands worldwide toy packaged like package fell overboard seawater dissolved cardboard backing animal freed meet malofiej talk working data presenting data visualizing data think good reminder data look something like pretend look like make better story type storytelling data wrong type fiction fable accurate report tempting say something online journalism blogging case think much blame actually lie elsewhere sesame street ernie sesame street year container spill ernie sang song rubber duckie remember hearing song young michael clevenger new york time apparently song raised little yellow duck icon popular culture son heard ernie sing grown surrounded little yellow duck pocoyocom familiar character pato spanish cartoon show pocoyo lovely design seen duck seen far idealized abstraction specie duckling fabrice coffriniafpgetty image look back year human history ancestor probably concerned duck like food national museum american indian native american hunting decoy year ago beautiful design caroline blumbergeuropean pressphoto agency bird painted wall lascaux cave france year ago lovely line hilde jensenafp even farther back year old statue duck flight carved mammoth ivory germany one oldest sculpture ever found fast forward year people think think duck symbol childhood innocence duck like tend predictable scale fit within narrow range size wally santanaassociated press someone make something like large inflatable duck made dutch artist florentijn hofman florentijnhofmannl made several duck different size touring asia part world art critic certainly understand idea changing scale taking something familiar pulling unfamiliar context people tried make graphic duck look graphic eye want see small duck even though brain know supposed represent big duck scale lower right clearly intended audience assume silhouette buddha building recognize reference look see small duck kind microchip inside helishotshk see duck context hong kong harbor immediately begin understand large building boat give immediate sense scale ashley pongetty image sometimes find easier estimate size object compared person like child david changeuropean pressphoto agency adult graphic time using silhouette instead actual person like talk little adventure drawntoscale man year frank connell time graphic desk drawn dozen men woman child different graphic reason recent year used one often rest originally drawn graphic anniversary sputnik satellite saw graphic really clear sense large sputnik thought like basketball nasa see similar uncertainty something like kepler space telescope photograph hard tell large telescope would fit hand desk would touch ceiling room pull back see human form size telescope becomes apparent frank made graphic kepler included small silhouette person along hubble telescope comparison even tiny silhouette tucked corner graphic give launcher rough sense size used drawntoscale man graphic like deepest point ocean mention graphic also includes silhouette empire state building lower left profile mount everest vertical scale andrew testa new york time amanda cox time probably familiar work used drawntoscale man graphic spot painting artist damien hirst damien famous piece shark tank formaldehyde really wanted find example used rubber duck artwork find one find amateur artist placed duck jar vodka titled piece dear damien began price data began sketching lovely scatter plot using actual dimension painting individual data point tried using image artwork color issue different photograph final version used dot pattern represent artwork included beautiful detail drawntoscale man along small scale bar man particular great answer andrew losowsky gave interesting talk second day malofiej included discussion gender norm stereotype iconography mentioned image like tend implicitly young male thin ablebodied white challenged designer newspaper conscious use icon people look little like bruce willis might part real reason using image person give reader instant impression scale example people room think metric good idea one meter look like people like might think different scale including numbered scale asks reader make small translation head translation think measurement line see page graphic made several year ago explaining flea jump find familiar object compare flea lower corner small scale bar showing inch mm asking reader decipher unfamiliar measurement like minor thing ideal graphic asks reader decide large inch match idea bar help people already know flea small probably could done better job graphic show whale diving foot feeding returning surface first saw dive chart paper looked like black line show whale surface diving meter feed scientist cut middle chart left room data highlighted deepest part dive nothing wrong make hard show full vertical scale first thing get touch scientist ask full set data show whole dive look something like number chart showing depth foot wanted give impression depth even stripped number away added drawing whale scale riding line even sure exactly big whale still get sense number body length whale descends tried make rest design support feeling depth talked chart year presentation tapestry conference amanda cox away scale completely graphic discovery new microbe possibly smallest form life instead trying show size nanometer scale something like used purely visual scale took period page small duck enlarged compared microbe larger period sophisticated visual translation asking brain make effortlessly u experience scale city sense people car relate building involved work many people time graphic desk wanted see would happen brought event sochi olympics new york city bryant park small park near time new york public library long building right even never seen park begin get sense scale building window tree park might look like moved ski jump sochi park right different sense scale saw structure side mountain luge track crammed time square saw idea long luge track people visible bottom building give sense scale slice downhill course dropped central park move back human scale using composite image person show scale movement distance time faint connecting line help give sense height two way showing slalom run one using icon indicate relative speed one following sinuous track gold medalist course overlaying image begin get sense person moving time make comparison like annotate human form bettmanncorbis certainly first people famous image leonardo da vinci added scale proportion human form designing people henry dreyfus similar idea picked industrial design designer begin think carefully far people reach eye see nasa idea also appears famous pioneer plaque aside love style drawing closest able come drawing coworker sergio graphic sign language left detail face get rid great hair full graphic science term sign language nasa pioneer spacecraft carried plaque launched nasa voyager launched year later eventually overtook pioneer last fall nasa announced voyager finally left solar system sometimes get little close news started working essentially map solar system two voyager spacecraft graphic director wanted something showed immense scale voyager traveled billion mile billion kilometer wanted something front page helped reader understand distance also great quote story one scientist said mean consider distance hard even scientist comprehend good challenge started thinking large distance people might general idea maybe number time earth move around sun thing like started sketching eventually came comparing total distance traveled voyager distance earth sun started small graphic graphic director able get space cover ran like essentially large caption scale seem appropriate add silhouette person voyager photograph used small scale bar one foot lower left without line hard tell big spacecraft next day someone stopped hall said saw scale bar knew one graphic thought nice compliment small gold circle attached voyager golden record nasa first infographic leave solar system nasa pioneer plaque second unique design leave solar system information plaque heavily encoded two circle upper left set scale circle represents hydrogen atom transition give distance time scale used throughout graphic height woman location galaxy interesting people give scale outline spacecraft way around whoever find plaque would presumably spacecraft could use tell large photofest reason dense encoding audience audience alien intelligence like classic problem could communicate alien would explain tall look like side body heart richard feynman amazing lecture discus symmetry natural law problem explaining left right alien end warning meet alien hold left hand shake touch made antimatter would annihilate pocoyocom via youtube even son aware version problem cartoon pocoyo angry alien come earth planning take world arrives realizes big caterpillar could used plaque intended audience information designing alien feel free encode want designing human audience design intuitive possible try encode little possible part respecting reader audience talking different us human form one omitted far famous icon adorns bathroom everywhere icon like problem certain case useful scientific communication interested learn week mat odéen newspaper dagens nyheter abandoned icon favor genderneutral icon mat malofiej jury said dagens nyheter tried different design settling icon slightly narrower shoulder tapered torso using time comment reader nejm example paper spread virus saudi arabia virus infected people spreading several hospital paper chart dot line showing infection spread person person densely encoded dot chart item key almost onetoone ratio scientist love make thing abstract use dot square triangle graphic see graphic like want tell dot people wanted remove encoding add little humanity back graphic taking away abstract shape supplemental information paper chart listed information person certainly name age gender tried add information back chart simplifying color scale eventually coming finished graphic similar original chart hopefully easier read little easier see pattern pnas another example spread flu school paper trying show little girl likely catch flu girl played instead boy sat next class vice versa scale text graphic asking u read text shape color hold information head try use translate chart used similar format added icon boy girl make line transmission little clearer goal make chart understandable even almost text removed like sometimes feel like translator designer trying translate point scientist trying make wider audience removing jargon icon useful showing disease inheritance extended family combining abstract icon photo individual people icon sometimes used container data representing human population try avoid graphic like use icon people count something comparison connection additional information involved counting single number much like child book using duck object learn count used slide thought worth repeating strongly believe data visualization count show data look like visualize something walk away without trying explain done job interest understanding something trying hone understanding sending information world hope someone else understand even use dot case line represent people try emphasize really person try remember people behind data graphic show detainee line stretching across time add individual name tried add enough annotation make clear page made graphic ran paper couple people said liked forgotten following year award malofiej pulled back obscurity got people talking think malofiej great opportunity u come together look back work done past year take piece say look something talking working human scale sometimes hard example last year announcement scientist discovered evidence higgs boson cern easy show scale machine used find higgs scientist front one experiment cern hard show explosion movement particle within machine difficult show explain anything particle wanted bring different particle human scale human experience explain started graphic higgs writing script much frequently starting graphic script simple storyboard worked nigel holmes come lovely sketch people motion particle illustration assembled final graphic explains metaphor used try explain higgs expands metaphor field snow steffen richter harvard university tried similar approach last week telescope found evidence support theory inflation inflation violent expansion universe smallest trillionth second big bang collaboration discovery came image like gravity wave temperature difference early universe wanted use image could find good way wrote script incorporated image one illustration metaphor try pull universe something could hold hand cup pot coffee graphic explains idea using coffee cup scattered throughout city expands back scale universe elegant illustration larry buchanan leave human scale behind case graphic lack sunspot still try give people something hang small earth next sun attempt say without reference earth becomes yellow ball later sunspot activity resumed thing graphic image show massive solar flare added small white dot earth one initial frame give scale incredible size flare added sun black circle lower frame scale sun lost leave sun behind look star idea applies sun inner planet solar system help give scale type star begin discover new planet tried compare solar system whether showing relative size mercury orbit relative size sun without scale abstract group planet got tired explaining one planet system time came framework compare multiple system showed animation graphic find real thing seen begin small planet compare relative size speed scroll begin see thing like binary star two star circling around nasa artist rendering interesting planet bottom see sun earth comparison graphic us four scale plus time two size one distance one temperature worked hard make scale intuitive possible even reader never noticed scale could still understand trying show example trying show thinking scale type empathy way thinking reader trying communicate alberto cairo last month alberto cairo gave couple talk spoke feature define great infographic data visualization alberto cairo came five truthful functional beautiful insightful enlightening think five useful looking graphic judging graphic comparing graphic realized think working graphic except first one truthful working graphic tend think control thing control accuracy truth elusive especially science try make sure accurate based current knowledge clarity thought presentation design overall legibility graphic empathy respect reader might might understand trying remember like understand something thinking easiest way lead reader point understanding simplicity form extra mark could removed hope several thing might emerge finished graphic understanding first important would also hope good graphic reader might get sense elegance sometimes finished graphic might beautiful beauty necessary careful beauty stanford university via youtube andrei linde scientist proposed theory inflation lovely quote video last week heard theory might correct said past year thinking tricked fooled believe theory beautiful would urge work always put understanding beauty data consists ugly duck ok please try decorate make beautiful please try use data part make great story please remember big difference duck like lower right corner duck like thank much thanks snde invitation speak especially amazing journalism student university navarra student worked day helping organize feed corral guide member jury malofiej would possible without student run professionally
561,Lobsters,visualization,Data Visualization,A Better Default Colormap for Matplotlib,https://www.youtube.com/watch?v=xAoljeRJ3lU,better default colormap matplotlib,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature better default colormap matplotlib scipy nathaniel smith van der walt youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature better default colormap matplotlib scipy nathaniel smith van der walt youtube
562,Lobsters,visualization,Data Visualization,Smartphones with removable batteries are hard to find. Here is a comparison chart with 200 of them.,http://www.productchart.com/smartphones/sets/3,smartphones removable battery hard find comparison chart,smartphones removable battery chart smartphones removable battery,smartphones removable battery finding phone removable battery far requested feature got user last week product chart supposed fully user driven sat went list currently popular phone find one replaceable battery hurray even plenty hereis thechart select spec dream smartphone scroll see matching smartphones matching smartphones matching smartphones smartphones removable battery
563,Lobsters,visualization,Data Visualization,A map of Twitter links,https://www.hella.cheap/map-of-twitter.html,map twitter link,comment powered disqus,map ten thousand popular domain twitter point domain point closer together tweeted often people mouse point see domain represents please enable javascript view comment powered disqus
564,Lobsters,visualization,Data Visualization,All About Eve,http://robmoff.at/2016/01/13/all-about-eve/,eve,background eve light table lotus note think programming look like year openness accidental complexity organisation v approachability focus v coverage unfair chris comment http update,background eve new programming language maybe development environment accurately perhaps tool think hour spare great video watch chris granger summarise badly video start question programming look like year chris started career microsoft working visual studio faced complexity product wanted build ide stripped back lot complexity light table born editing clojure clojurescript light table aim minimise eliminate cycle writing code seeing result lesson apparently fixing ide enough programming suffers problem indirect invisible beleaguered accidental complexity unobservable paraphrasing heavily really watch video eve started collection experiment computing could made better extensively reviewed existing literature stateoftheart deciding closest come really solving issue programming tool like excel sql ie relational database along way throw gui editor query visualisation traditional text based language chris demonstrates version eve kind wiki combined query language kind database everything update instantly screen huge promise tempted get involved big opensource way lotus note first thought watching demo seems lot like lotus note indeed wikis note share lot common thinking unstructured data function manipulating value view data etc imagine many people working today familiar note take complement note amazing amazingly productive environment work could realistically build multiuser application workflow email reporting everything security topnotch lotus note came email application built lotus note million people used lotus note email point could build amazing thing resurrecting lot idea lotus note make lot sense anything similar shame middle ground somewhere building simulation excel building full application java served badly since note anymore good seems like really cool product bright future think programming look like year lotus note cool using today also programming excel awesome developing banking software using problem think tradeoff three want talk openness accidental complexity closed system like eve wordpress lotus note mysql excel really put lid accidental complexity accidental complexity thing like system column called name system b first name last name date formatted american way file importing european way eventdriven system trigger every time new order finance system requires daily kind thing program general purpose language like java c whatever deal accidental complexity language like glue join together disparate library database application feed queue whatever open accept world large play particular rule need adapt world closed system hand force world play rule write plugin eclipse excel minecraft wordpress whatever obey rule fine lot system use every day playing rule certainly preexisting system playing eve rule eve thought problem solved building plugins eve get talk existing relational database filesystems whatever well yes lotus note challenge already back day people wanted talk sql database work done data could synchronised maybe solved lot people problem inevitably imported accidental complexity system table structure date format edit cycle transaction etc feel fundamental issue build open system without importing accidental complexity lot programming future done eve way maybe ok organisation v approachability chris video talk early version eve user bedevilled scope wanted use data function constrained data scope observed neither excel relational database issue wikistyle eve take leaf book jettisons concept scope scope useful thing deliberately added programming language reduce error global state rightly vilified source error software soon scale software endeavour run risk confusing piece global state look many feature java say separation concern package namespace scoping jar interface abstract class type hierarchy versioning method procedure functional decomposition compilation compiletime checking feature improve organisation software reduce duplication enforce consistency onceandonlyonce yes build much approachable easy learn le indirect language none scope software problem get larger bigger issue organisation approachability trade one big failing lotus note versioning software hard upgrading database hard knowing code even application hard testing manual reuse minimal revision control la git impossible changed something one place idea whether introduced problem somewhere else actually worse right feel java et al fail u still really hard release test software correct ensure changing part system building going consequence part system client vast network interrelated computer system different release cycle different hardware different programming language know work together yes pure functional programming would help yes better testing would help maybe docker chef could help right mess year time even bigger mess java allows u organise scale one application need tool help u organise software scale many application software eating world right focus v coverage lotus note came along internet formative year started note developer got given printed manual two great everything needed know manual could massively productive run ring around guy building c application rdbms backends cool eventually went wrong think web page took people wanted note database web lotusibm bolted load stuff make note database webbrowseable hard use fiddly required learning html whole conceptual integrity lotus note model lost see issue problem one size fit everyone also hope keep everything software system best hope serve one niche people reason build application solely sql database point time company like oracle tried build product could build entire application inside database would form web page everything work either even ignoring vendor lockin better able mixandmatch technology choice fit problem trying thing people nonstarter lotus note keep busy trying everything rather one thing well unfair maybe unfair chris eve team done looking amazing think chris really meant eve programming looked like year really saying need start experiment programming like eve eve take stance three tradeoff pretty much stance note took loved note like see modern version preferably one solves thing like versioning design programming year need acknowledge tradeoff design beyond truly innovative design reframe tradeoff way completely change landscape going move beyond current status quo amazing design experiment idea throwing away work chris comment chris granger took time discus point github http update discussed hacker news
565,Lobsters,visualization,Data Visualization,Visualizing Concurrency in Go,https://divan.github.io/posts/go_concurrency_visualize/,visualizing concurrency go,http wwwyoutubecomwatch tony hoare csp hello concurrent world go interactive webgl animation goroutine id timer go interactive webgl animation pingpong advanced go concurrency pattern go interactive webgl animation link go interactive webgl animation fifo queue receiver go interactive webgl animation fanin go interactive webgl animation worker go interactive webgl animation go interactive webgl animation server go interactive webgl animation simplicity complicated go interactive webgl animation server worker go interactive webgl animation concurrent prime sieve go concurrency pattern sieve eratosthenes go interactive webgl animation gomaxprocs gomaxprocs webgl animation webgl animation goroutines leak start goroutine fall scope expvarmon go interactive webgl animation parallelism concurrency well covered great talk rob pike go interactive webgl animation go interactive webgl animation made threejs execution tracer githubcomdivangotrace,prefer video blog post talk gophercon http wwwyoutubecomwatch one strongest side go programming language builtin concurrency based tony hoare csp paper go designed concurrency mind allows u build complex concurrent pipeline ever wondered various concurrency pattern look like course thinking mostly visualization one form another ask something involving number image series head even without realizing example imagine line going number turn degree right continues recall young period life kindergarten number cloakroom written along wall number exactly corner probably image number another common example visual representation full year four season people see box circle anyway want show attempt visualize common concurrency pattern using go webgl le represents way see concurrent program head would pretty interesting hear much differs image head especially would love see rob pike sameer ajmani imagine concurrency bet quite interesting let start basic hello concurrent world example get familiar concept attempt hello concurrent world code quite simple single channel single goroutine one write one read package main func main create new channel type int ch make chan int start new anonymous goroutine go func send channel ch go interactive webgl animation blue line represent goroutines running time thin blue line connecting main go mark start stop goroutine revealing parentchildren relation finally red arrow show u sendrecv action actually two separate action try animate single event send b goroutine name actual goroutine internal id obtained runtime trick suggested scott mansfield goroutine id article timer fact build simple timer approach create channel start goroutine writes channel given duration return channel caller func caller block reading channel exact amount time let run timer time try visualize package main import time func timer timeduration go interactive webgl animation pretty neat right let move pingpong nice concurrency example found great talk googler sameer ajmani advanced go concurrency pattern course pattern advanced get familiar go concurrency may look quite fresh interesting channel table pingpong game ball integer variable two goroutinesplayers hit ball increasing value hit counter package main import time func main var ball int table make chan int go player table go player table table go interactive webgl animation point suggest click link interactive webgl animation ctrlcmdclick open new tab play around interactively slowdown animation speedup see different angle let run three player instead two go player table go player table go player table go interactive webgl animation see player take turn sequentially may wonder see strict order goroutines receiving ball answer go runtime hold waiting fifo queue receiver goroutines ready receive particular channel case every player get ready passed ball table let check complex example run table tennis player go player table go interactive webgl animation fifo order obvious spawn million goroutines cheap goal would overkill let see something different play example common messaging pattern fanin one popular pattern concurrent world called fanin pattern opposite fanout pattern cover later short fanin function reading multiple input multiplexing single channel example package main import fmt time func producer ch chan int timeduration var int ch go interactive webgl animation see first producer generates value millisecond second one millisecond reader receives value producer immediately effectively multiplexing happens range loop main worker opposite pattern fanin fanout worker pattern multiple goroutines read single channel distributing amount work cpu core hence worker name go pattern easy implement start number goroutines channel parameter send value channel distributing multiplexing done go runtime automagically package main import fmt sync time func worker tasksch go interactive webgl animation one thing worth note parallelism see goroutines run parallel waiting channel give work given animation easy spot goroutines receive work almost immediately one another unfortunately animation show color goroutine really work wait input exact animation recorded goroutines effectively run parallel get subject shortly let something complex start worker worker subworkers package main import fmt sync time const worker subworkers task subtasks func subworker subtasks chan int task ok go interactive webgl animation nice course set number worker subworkers much higher value tried make animation clear understandable even cooler fanout pattern exist like dynamic amount workerssubworkers sending channel channel idea fanout clear server next common pattern similar fanout goroutines spawned short period time accomplish task typically used implementing server create listener run accept loop start goroutine accepted connection expressive allows implement server handler simple possible take look simple example package main import net func handler c netconn cwrite byte ok cclose func main l err netlisten tcp err nil panic err c err laccept err nil continue go handler c go interactive webgl animation interesting seems nothing happens term concurrency course hood ton complexity deliberately hidden u simplicity complicated let go back concurrency add interaction server let say handler want write asynchronously logger logger example separate goroutine job package main import fmt net time func handler c netconn ch chan string ch go interactive webgl animation quite demonstrative easy see logger goroutine quickly become bottleneck number request increase logging action take time preparing encoding data example use already known fanout pattern let server worker server worker example bit advanced version logger work sends result work back pool using result channel big deal extends logger example something practical let see code animation package main import net time func handler c netconn ch chan string addr cremoteaddr string ch go interactive webgl animation distributed work goroutines effectively improving throughput logger animation see logger still may source problem thousand connection converge single channel distributed may result logger bottleneck course happen much higher load concurrent prime sieve enough faninfanout fun let see sophisticated concurrency algorithm one favorite example concurrent prime sieve found go concurrency pattern talk prime sieve sieve eratosthenes ancient algorithm finding prime number given limit work eliminating multiple prime sequential manner naive algorithm really efficient especially multicore machine concurrent variant algorithm us goroutines filtering number one goroutine per every prime discovered channel sending number generator filter prime found sent via channel main output course algorithm also efficient especially want find large prime look lowest big complexity find extremely elegant concurrent prime sieve package main import fmt send sequence channel ch func generate ch chan go interactive webgl animation feel free play animation interactive mode like illustrative really help understand algorithm better generate goroutine emits every integer number starting new goroutine filter specific prime multiple sending first found prime main rotate see top see number sent goroutines main prime number beautiful algorithm especially gomaxprocs let go back worker example remember told run animation art work real trace real program let refresh memory gomaxprocs gomaxprocs set maximum number cpu executing simultaneously cpu mean logical cpu course modified worker example bit make real work sleep use real cpu time ran code without modification except setting different gomaxprocs value linux box cpu core resulting core first run demonstrates program running core second using power core availiable webgl animation webgl animation time speed animation different wanted animation fit timeheight difference obvious next worker start real work previous finish work speedup huge overhead multiplexing negligible important understand though increasing gomaxprocs always boost performance case actually make worse goroutines leak else demonstrate concurrent thing go one thing come mind goroutines leak leak happen example start goroutine fall scope simply forget add finish condition run loop first time encountered goroutine leak code scary image appeared head wrote expvarmon next weekend visualize scary image webgl take look go interactive webgl animation feel pain even simply looking line wasted resource ticking bomb program parallelism concurrency last thing want illustrate difference parallelism concurrency topic well covered great talk rob pike subject one mustwatch video really video short parallelism simply running thing parallel concurrency way structure program thus concurrent program may may parallel concept somehow orthogonal seen earlier demonstration gomaxprocs setting effect repeat linked article talk picture worth thousand word visualize difference parallelism many thing running parallel go interactive webgl animation also parallelism go interactive webgl animation concurrency also concurrency made create animation wrote two program gotracer gothreejs library first gotracer following parse ast tree go program insert special command output concurrency related event startstop goroutine create channel sendreceive tofrom channel run generated program analyze special output produce json description event timestamps example resulting json next gothreejs us power amazing threejs library draw line object using webgl little wrapper fit single html page approach though super limited accurately choose example rename channel goroutines make le complex code produce correct trace approach easy way correllate channel goroutines different name mention channel sent channel type chan also huge issue timing output stdout take time sending value case place timesleep amount millisecond get proper animation basically reason opensourcing code yet playing dmitry vyukov execution tracer seems provide good level detail event contain info value sent maybe better way achieve desired goal write twiter comment idea would super great extend twoweekends tool real debuggingtracing instrument suitable go program also would happy visualize interesting concurrent algorithm pattern listed feel free write one comment happy coding upd tool available githubcomdivangotrace using go execution tracer patched runtime generate trace also open new job interesting companyteam challenging problem solve use go open remote barcelona hiring let know
567,Lobsters,visualization,Data Visualization,Small multiples vs. animated GIFs for showing changes in fertility rates over time,http://www.randalolson.com/2015/08/23/small-multiples-vs-animated-gifs-for-showing-changes-in-fertility-rates-over-time/,small multiple v animated gifs showing change fertility rate time,shared rdataisbeautiful population crisis small multiple human fertility database usa japan experienced declining birth rate since past year japanese couple started child later life simplifying chart even conclusion python data visualization video course code small multiple visualization,couple week ago stephen holzman shared animated gif rdataisbeautiful caught eye gif showed evolution fertility rate u japan start right middle postwwii baby boom follows gradual decline japan fertility rate led somewhat population crisis japan although stephen gif fun watch especially animation give appearance wave rising falling help frustrated limitation gifs data visualization wanted compare fertility rate example keep mental snapshot frame looked like frame came around thus comparison time point beyond couple year impossible animated gifs unless viewer photographic memory drawback exact reason small multiple introduced data visualization comparing data format several different timestreatmentscountriesetc visualize data scale ax make easily comparable long proponent small multiple gifs took stephen data actually human fertility database reworked small multiple click image superhighres version year get plot running left right country fertility rate plotted total fertility rate year annotated onto corresponding plot colorcoded according country plotted xaxis tick label show reader age range plot top bottom row avoid much repetition similarly yaxis tick label appear plot left course drawback small multiple longer see data detail larger plot necessity plot small multiple chart must small simple axis tick make small multiple poor choice making comparison little change compensate subsetting data year quite lot data show one graph looked every five year straightforward compare across within decade etc easily compared looking column token easily compared looking row still get level detail gif maintain overall trend declining fertility rate country time go chart two major trend readily apparent data usa japan experienced declining birth rate since japan moreso past year japanese couple started child later life much half child born born parent older begs question show data two point make simplifying chart even two trend wanted show data simplify chart even calculating summary statistic plotting instead chart take away opportunity reader glean additional insight data however wanted tell straightforward story chart would best one use conclusion animated gifs flashy often make difficult gain insight data static chart small multiple simplify animated gifs make trend data apparent sometimes better calculate summary statistic plot instead especially showing data lend additional insight liked saw post want learn check python data visualization video course made collaboration reilly one hour cover topic much provide strong starting point career data visualization code small multiple visualization share data used create visualization download human fertility database provided python code used generate small multiple visualization education purpose import matplotlibpyplot plt import panda pd import numpy np pltstyleuse http japanfertility usafertility panda dataframes fertility data human fertility database pltfigure figsize plotnum indexjapan japan indexusa usa enumerate zip japanfertilitygroupby year usafertilitygroupby year ax pltsubplot plotnum pltfillbetween usaagevalues usaasfrvalues color pltfillbetween japanagevalues japanasfrvalues color pltxlim pltylim indexjapan indexjapan pltxticks range else pltxticks range plotnum pltyticks nparange else pltyticks nparange plttext usaasfrsum round hacenter color plttext japanasfrsum round hacenter color plttitle indexjapan plttightlayout pltsavefig usavsjapanfertilityratessmallmultiplepdf note add plot axis label plot title couple annotation manually
568,Lobsters,visualization,Data Visualization,Game Genre Map: The Cognitive Threshold in Strategy Games,http://quanticfoundry.com/2016/01/20/game-genre-map-the-cognitive-threshold-in-strategy-games/,game genre map cognitive threshold strategy game,gamer motivation profile gamers game audience profile mapping strategy genre gamer motivation model,gamer motivation profile allows gamers take survey get personalized report gaming motivation currently data gamers worldwide survey also ask gamers list favorite game title allows u pivot gamers use aggregated game audience profile compare game example civilization strategically complex simcity well compare audience strategy score find sense gamer motivation profile benchmarking tool gamers also benchmarking tool game title gamer motivation profile benchmarking tool gamers also benchmarking tool game title mapping strategy genre audience score allow u explore game title within genre incredible precision let take closer look strategy genre first pick game starcraft use data set find game closely related two exemplar give u good mix turnbased strategy realtime strategy management sims grand strategy game game audience score allow u explore game title within genre incredible precision let plot game using strategy excitement score gamer motivation model strategy appeal thinking planning ahead making decision excitement appeal fastpaced action gameplay reward rapid reaction plot game lowerright corner high strategy low excitement game upperleft corner low strategy high excitement clear low mean low relative game strategy genre
569,Lobsters,visualization,Data Visualization,DataBasic: a suite of web tools for beginners that introduce concepts of working with data,https://www.databasic.io/en/,databasic suite web tool beginner introduce concept working data,use databasic,use databasic rahul bhargava catherine dignazio creator databasic describe everyone tell story data
570,Lobsters,visualization,Data Visualization,State space visualization examples,https://www3.hhu.de/stups/prob/index.php/State_space_visualization_examples,state space visualization example,tla tool prob tla article tla tool prob tla rushhourpuzzle rush hour puzzle b model coincidence state space hanoi one,page construction alternating bit protocol visualisation state transition tla model alternating bit protocol distributed tla tool model mcalternatingbittla loaded prob tla model checker run second command state space fast rendering option scale fast used goal predicate used state satisfying predicate shown orange projection state space onto expression rbit sbit using custom transition diagram feature prob detail statespace projection feature found article main file model module mcalternatingbit extends alternatingbit tlc instance abcorrectness constant msgqlen ackqlen seqconstraint len msgq leq msgqlen len ackq leq ackqlen sentleadstorcvd data sent sbit sack rcvd impliedaction abcnext cvars tnext wfmsgq abtypeinv tprop data sent sent cspec abspec tnext dataperm permutation data mcinnerfifo visualisation state transition tla model fifo distributed tla tool model mcinnerfifo loaded prob tla model checker run state queue size greater qlen ignored ie successor state computed set defining scopecard q qlen colour indicates length queue variable q model projection state space onto expression card q using custom transition diagram feature prob rushhour visualisation rushhourpuzzle rush hour puzzle b model moment prob found solution goal predicate red car moved grid solution node marked orange prism option used visualisation full state space node transition using scale option time bus visualisation statespace eventb model bus colour indicate size buswrite variable hanoi disc visualisation statespace b model tower hanoi disc state space contains node node one observe figure resembles sierpinski triangle coincidence state space hanoi one projection state space onto expression card dest using custom transition diagram feature prob thread partial order reduction visualisation simple thread model two thread step synchronisation occurs thread start state space contains node one clearly see two synchronisation point lefthand side righthand side synchronisation process simply interleave partial order reduction state space reduced state b source code model machine two simple thread communicating time time kind situation happen quite often controller system partialorder reduction hopefully reduce interleavings definition f deadlock heuristicfunction sfdp colouring constant n property n state por deadlock checking without variable invariant natural natural integer integer initialisation operation pre n maybe fact decreasing variant influence por eventb event would convergent end pre n manual por also convergent event variant end sync pre mod mod end end projection state space onto expression bool bool using custom transition diagram feature prob first show projection without partial order reduction partial order reduction one see event occur event
571,Lobsters,visualization,Data Visualization,Thenmap: historical border data,http://www.thenmap.net/,thenmap historical border data,thenmap api world swedish municipality api documentation,thenmap apiuse thenmap api fetch geodata geojson topojson prerendered map svg file metadatapass date optionally preferred coordinate system projection api give border return like world swedish municipality thenmap api currently hold world border swedish municipality county finnish municipality u state norwegian municipality municipality greenland municipality switzerland api documentation
572,Lobsters,visualization,Data Visualization,Visualization of data flow between Tor relays,https://torflow.uncharted.software,visualization data flow tor relay,,
573,Lobsters,visualization,Data Visualization,User:LucasVB/Gallery,https://en.wikipedia.org/wiki/User:LucasVB/Gallery,user lucasvbgallery,talk page also follow tumblr wips current failed project creation making donation edit edit edit povray povray edit mediawiki redirect arrow contest edit edit,mostly comprehensive gallery image illustration diagram animation created wikipedia year selected featured picture even picture day probably notice mostly related physic mathematics main area interest comment request suggestion correction feel free drop message talk page please making suggestion first take look see sort stuff due time knowledge complexity constraint guarantee able make good illustration topic also follow tumblr wips current failed project creation appreciate work consider making donation animation edit line integral scalar field line integral vector field newton proof kepler second law feynman qed probability amplitude rolling racer moment inertia time frequency domain function continuous fourier transform conceptual time space distortion general relativity cosine sine unit circle completing square click see animation radian circle pi version radian circle tau version sine curve drawing process gosper glider gun homotopy torus mug converting cartesian polar coordinate conceptual light dispersion conceptual light dispersion click see animation multiplication scaling riemann integral irregular partition riemann integral regular partition singular value decomposition singular value decomposition extended spherelike degenerate torus raycasting without fisheye correction raycasting fisheye correction waverelated animation fourier series integral identity periodic identity function approximating sine curve square wave additive synthesis sawtooth wave additive synthesis square wave additive synthesis triangle wave pendula edit series image illustrating oscillation pendulum blue solid edit series rendering made povray using aesthetic style villarceau circle rectangle bent torus distance earth sun created using povray except noted morgankeenan spectral classification rasterized special mention edit also created redirect arrow used across wikimedia project well website running mediawiki software arrow winner redirect arrow contest meta nothing amazing kinda cool obsolete edit see also edit
574,Lobsters,visualization,Data Visualization,Tufte's discrete sparklines using d3.js,http://dataviztalk.blogspot.com/2016/01/how-to-make-tuftes-discrete-sparklines.html,tufte discrete sparklines using,tufte site adam schwartz github data attribute github beautiful evidence,working dashboard found data set would look great represented discrete sparkline type visualization great quickly showing trend glance discrete variable datasets familiar discrete sparklines look like example tufte site made collaboration adam schwartz presence horizontal line represents home game decided use example starting point working html file adam github kindly passed along purpose needed illustrate dichotomous variable went ahead removed horizontal bar represented home v away game well colouring represented winning streak recoding leverage library simplifying style reworking code make reusable future dichotomous variable project able create example using see adam relevant code let break line bind data point div element line give div drawnline class format div element line black background colour px line give data attribute called databinaryvar game lost game line finally use counter variable correctly place line along x axis final product check full example written github want learn sparklines check tufte beautiful evidence thanks well adam schwartz creating original example inspired recreation check work follow twitter work progress dashboard sparkline visualization element prompted whole exploration
575,Lobsters,visualization,Data Visualization,Visualizing Bayes’ Theorem (2009),https://oscarbonilla.com/2009/05/visualizing-bayes-theorem/,visualizing bayes theorem,venn diagram,one easiest way understand probability think term venn diagram basically universe possible outcome experiment instance interested subset namely event say studying cancer observe people see whether cancer take universe people participating study two possible outcome particular individual either cancer split universe two event event designated neg could build diagram like probability randomly chosen person cancer number element divided number element u universe denote number element read cardinality define probability p p frac u since number element u probability p one good far okay let add another event let say new screening test supposed measure something test people people take event b mean test create another diagram probability test randomly selected person would number element b cardinality b b divided number element u call p b probability event b occurring p b frac b u note far treated two event isolation happens put together compute probability event occurring ab shorthand way p ab frac ab u start get interesting read diagram dealing entire universe people event people cancer event b people test positive also overlap namely event ab read cancer positive test also event b ab without cancer positive test event ab cancer negative test question like answered test positive randomly selected individual probability said individual cancer term venn diagram translates region b probability region ab stated another way make region b new universe probability notation p ab read probability given well p ab frac ab b divide numerator denominator u p ab frac frac ab u frac b u rewrite using previously derived equation p ab frac p ab p b effectively done change universe u people b people test positive still dealing probability defined u let ask converse question randomly selected individual cancer event probability test positive individual event ab easy see p ba frac p ab p everything need derive bayes theorem putting two equation together get p ab p b p ba p say p ab whether looking point view b finally p ab frac p ba p p b bayes theorem found venn diagram method let rederive bayes theorem time without needing memorize also make easier apply
576,Lobsters,visualization,Data Visualization,Simulating The Word (In Emoji),http://ncase.me/simulating/,simulating word emoji,,
577,Lobsters,visualization,Data Visualization,Portable Executable 101 - a windows executable walkthrough,https://code.google.com/p/corkami/wiki/PE101?show=content,portable executable window executable walkthrough,,google code archive requires javascript enabled browser
578,Lobsters,visualization,Data Visualization,Ranking 4 Million Quake Live duels in 1.5 seconds,https://medium.com/@jlouis666/ranking-4-million-quake-live-duels-in-1-5-seconds-fc84750aad1f#.kulgxz9w5,ranking million quake live duel second,ranking million quake live duel second erlang go opponent int int next step reference http githubcomjlouisfuse http githubcomjlouissafetyvalve http http godocorggithubcomjlouisnmoptim http godocorggithubcomjlouisrank http mediumcom http mediumcom,ranking million quake live duel secondsthe last couple day toying little hobby project minethe project rank player player quake live duel reported gathering duel since february project written hybrid code storage retrieval presentation written erlang ranking code written goat moment gathered exactly match deem eligible ranking sometimes quake live report match one player time match lasted couple second remove ranking think good enough around player database right average number played match varies lot player player played one duel clock duel week lot given duel often take minute everything stored database choice postgresql recently upgraded meant could change internal representation erlang conversion jsonb storage type directly postgres price storage erlang serialization format took gigabyte disk space jsonb take gigabyte advantage ease query directly json representation database take query exampleselect idfrom corerawmatchwhere content ranked int look inside content json column grab row ranked toplevel key integer representation equal simplifies lot processing use update statement preanalyze large swath duel without lowlevel work erlangerlangthe choice using erlang processing proved worth number restarts due fatal failure around reason faulttolerance erlang small mistake affect code whole often mistake end end quakelivecom site handle fusecircuitbreaker installed request code clamp operation site experience problem either unreachable trip timer request slow process mean end back quake live site experience troublein order limit concurrent access quakelive site installed safetyvalve application defines request queue policy fast request queue emptied mean run erlang system internal concurrency level around outstanding process try fetch quakelive queue control policy set limit many outstanding concurrent request allow frequency start new requestsin short erlang right tool choice longrunning daemon service must go even database foreign system rely one example power quakelive upgrade service take change line code order handle fuse simply blow system rechecks connectivity every minutesanother important design decision make database operation idempotent since postgresql give u atomic operation simply make sure job idempotent retried later system always trying catch current state system always behind real time small factor go handle situation catching virtue idempotence save u quakelive remove match week played nonpaying bet keep internally least day act grave problemgoerlang shine due fault tolerance robustness nice functional language write succinct code go somewhat opposite imperative explicit data layout statically typed simple type system however go compiled native code provides good parallelism nice unique feature interface channelbasedmessagepassing thing think go shine syntax clike imperative language first language year actually innovate simplify language writing go necessary important another brilliant decision get rid semicolon use simple layout rule still keeping mostly lalr grammar provide excellent go fmt tool reindent code predefined defaultpackages go way handling library imported code something language picking trick import statement string like external tool understands parse string automatically fetch source code library compile coalesces concept package dependency language remove lot external boilerplate managementtoolchain quick recompilation software help lot developing remove overhead compilation coming language fast compiler like ocaml erlang nice wait compiler one design decision transitive dependency recompiled depends b depends c compiling b everything related c pulled resulting object file turn compiling look b avoid c help compilation time lotinterfaces go package interface structuring tool allows break large system smaller part increase modularity code base since altering one module code le likely yield alteration module decoupling far important construction handling large code base erlang write independent application ocaml create module functor go write separate package eventually use interface abstraction provided different parameterization java generic ocaml functor really experienced limitation approach yetin earlier post mine looked ranking different approach different language ended choosing go ocaml erlang erlang strong number crunching floating point domain ocamls current lack parallelism excluded recently updated go package better simpler use everthe main interface package following type opponent interface r rd sigma sj func rank r rd sigma opponent opponent tau nr nrd nsigma rank player call rank player parameter r rd sigma set opponent given slice configuration parameter system called tau opponent interface implement making opponent interface avoid problem caller take code mangle fit scheme rather wrap data structure provide opponent interface turn rank gamesthe code also optimize configuration parameter tau initial rd use system running neldermead optimization routine api isfunc optimize f func start cf func int int optimize function f subject start value start constraint cf note speed concern overhead f function computation make everything work adapted simple parallel variant ranking computation speed full ranking week match take le second full optimization completed second core gigabyte ram lenovo technical code next stepsthe next phase project employ order provide nice graphical output data initially tested output r nice plotting package ggplot version wickham order make easier everyone use system decided build frontend us plot result work currently ongoing done way present datareferences http githubcomjlouisfuse http githubcomjlouissafetyvalve http http godocorggithubcomjlouisnmoptim http godocorggithubcomjlouisrank http mediumcom http mediumcom
579,Lobsters,visualization,Data Visualization,I Smell a Chart,http://putanumonit.com/2015/12/17/009-smelly/,smell chart,defense dark art ask remain calm affirmative action story fivethirtyeight beware statistician fallacy pick someone size fivethirtyeight expressed admiration remember reversed stupidity intelligence bad argument hurt good cause us bible justify allowing refugee signalling chart forensics hayley munguia article drop high school much higher rate useless degree negative roi time series slope separate college currently least square outlier huge influence student opposite simpson paradox literally right mexican border much higher ny time story holistic admission process real picture pew research center negatively affect negatively affect affect fricking data british journal general practice train nose wisdom elder bottom line finally full clear archive like,draw straight line three point use thick enough marker old russian joke defense dark art job arm foulest abuse statistic known mankind may find facing meaningless pvalues misleading chart baseless inference room know harm befall whilst ask remain calm warned world dark statistic nasty treacherous even learning combat corruption one often becomes tainted stupidity dissect affirmative action story fivethirtyeight dire warning beware statistician fallacy life messy stats hard experienced motivated statistician able find nitpick almost article us statistic dismiss article conclusion ignoring supporting evidence picked example chart present conclusive case conclusion offer literally zero support pick someone size hard find people stupid statistic write story fivethirtyeight outlet recently expressed admiration think affirmative action suck remember reversed stupidity intelligence weak story misrepresenting effect affirmative action debunk discredit entire endeavor feel satisfaction seen critique weak argument opponent position ignoring strong one feeling becoming stupider think affirmative action rock bad argument hurt good cause first would strange someone value affirmative action sake rather valuing diversity equality opportunity care latter interested learn effective various policy promoting equality case supporting bad argument dishonest make entire cause easier dismiss liberal friend mine us bible justify allowing refugee conservative friend claim refugee story corporate conspiracy ensure cheap labor know signalling opinion safely ignored remember kid epistemic virtue statistic goal post say anything affirmative action aa policy show chart piece data analysis go terribly horribly wrong chart forensics offending chart hayley munguia article first glance nothing insidious seems going grey dot red dot line showing relationship need break chart piece see every chunk individually wrong combine true abomination data science title clear informative straightforward problem title written author actually looked data data unfortunately refused cooperate xaxis hold aa kick someone applies college looking share state population instead college applicant hispanic drop high school much higher rate v black white pretty sure high school drop out apply college flip side perhaps hispanic hardworking marginal scholar make smart choice pursuing vocational career instead wasting four year useless degree negative roi mountain debt yaxis measure make slightly sense number interested acceptance rate hispanic whether relative number applicant population one ax probably one chart much clearer looked like data made illustration nonobscurantist chart fact afraid simple box plot would make story clear article ax make sense measure want measure nothing stop torrent baffling obfuscation trend line trend line useful looking extrapolate point outside data set information inside example predicting unknown future value past time series nothing like happens entire usa inside data set outside article chart black student ban trend higher slope mean banning aa good black extrapolate hypothetical state ban aa black population black college student get back trend line later data point could argued trend enrollment v population size show larger population hispanic affected account population directly single point state million people instead data point show enrollment separate college college given weight regardless size texas public research university texas third column right shown gray state currently aa also lot gray dot high chart making aa look good immediately got suspicious texas two largest university texa ut austin sit hispanic enrollment respectively well trend line two university top utrgv utep combined enrollment equal ut austin count two different data point mean affect result twice much much worse appearance trend line product simple linear regression calculated using method least square without getting technical point pull regression line towards strength proportional square distance line technical point twice far line pull time hard point really far away line outlier huge influence slope line case outlier wiser exclude point avoid using least square altogether without ut austin utep regression line texas around much closer ut austin mean utep whole time much influence ut austin student utep time much influence besides accounting size data also aggregated different level state college bannon ban state together etc using wrong aggregation level mistakenly lead opposite interpretation actual data known simpson paradox ironically enough famous example paradox action controversy college admission uc berkeley get back sued gender discrimination admitted male applicant female one however looking individual department majority likelier admit woman secret woman applied extremely competitive department like english admission men applied le selective department like chemistry since department make admission decision grouping department gave correct conclusion bias woman banning aa statewide decision happens group college instead utep situated el paso city literally right mexican border hispanic population yet enrolls hispanic student utep underadmits hispanic almost every college texas since college happen ton hispanic applicant chart make texas look like great record admitting hispanic framing utep argument affirmative action helping hispanic texas absentmindedly negligent criminally creative unintelligible cloud dot close origin course side utep bunch college state low hispanic population one would interested increasing hispanic enrollment name diversity baffling choice ax make college invisible reduces effect regression line practically zero hard see horrible mess tell two thing state low hispanic population state banned affirmative action much higher relative enrollment hispanic aa see red trend line higher left side chart point point directly contradicts story article trying sell data squeezed indecipherable jumble clarify zoomed version jumbled region going back berkeley ny time story holistic admission process california shed light state ban aa could hispanic admitted without aa favoring underrepresented race strong explicit berkeley asian state ny time writer observed next training session asked asian student thought received lower better officer noted oh get lot real picture psst know hispanic higher college enrollment rate white oh mean compare equally qualified applicant controlling qualification probably adjusting socioeconomic status something entire national population high school graduate aged everyone could possibly want apply college way fucking way pew research center matter twist data three thing seem pretty obvious dropping high school negatively affect chance enrolling college drop hispanic opposed white negatively affect chance enrolling college banning affirmative action affect hispanic enrollment college except maybe giving little boost state low hispanic population m munguia deduce conclusion banning aa hurt hispanic data never conclusion came first chart made confusing people tell either way deciding conclusion ahead time sticking conclusion despite fricking data contradicting something expect know british journal general practice something btw pretty good link like hatereading statistic abuse much clearly train nose goal post attack affirmative action train spot dirty bullshit pretty chart wisdom elder say easy lie statistic easier lie without bad chart bad statistic leave telltale trace chicanery fishy measurement unit dubious aggregation level irrelevant regression line much trained nose spot mile away detecting giveaway hard two quick tip good look title look actual chart first see result jump title something else may bottom line written data ask simplest chart look like answer question posed chart front look nothing like one imagined someone hiding something something probably truth chart actual data yet much accurate original emailed m munguia day ago polite summary question chart data update post immediately writes back even especially response make look like idiot next post finally p full clear archive post far also hope turn suggestion thread like like loading related
580,Lobsters,visualization,Data Visualization,Introducing d3-scale,https://medium.com/@mbostock/introducing-d3-scale-61980c51545f#.lie98hyvh,introducing,amplify cognition,like become standard library data visualization tool use directly visualize data writing code also suite tool underpin powerful softwareto end espouses abstraction useful visualization application reject tyranny chartsas leland wilkinson wrote grammar graphic endeavor develop charting instead graphing program accomplish two thing first inevitably offer fewer chart people want second package deep structure computer program unnecessarily complex fail reuse object routine function similarly different chart way add new chart system without generating complex new code elegant design requires u think theory graphic chartsif visualization constructing visual representation abstract data amplify cognition perhaps important concept scale map dimension abstract data visual variableand scale available standalone library dimension data visual variable consider table data spreadsheet row table vector column dimension dimension named attribute whose value particular meaning price dollarswe typically think dimension spatial quantitative position space represented real number yet abstract data also nonquantitative dimension example diamond cut quality fair good good ideal ordinal diamond cut shape princess round marquise etc categoricalvisual variable best explained jacques bertin semiology graphic described graphical mark say dot scatterplot represent data using planar position luminous dimension z within plane mark top bottom right left eye perceives two independent dimension along x distinguished orthogonally variation light energy produce third dimension z independent x eye sensitive along z dimension independent visual variable superimposed planar figure size mark value texture color orientation shape represent difference similarity quantified order q nonquantified order express group hierarchy vertical movementsfrom semiology graphic colorized authorthus scale function take abstract value data mass diamond carat return visual value horizontal position dot pixel two scale one x basis scatterplot
581,Lobsters,visualization,Data Visualization,Tabs or Spaces,https://ukupat.github.io/tabs-or-spaces/?,tab space,top starred repository github analysed understand common whitespace type different programming language analysed repository,top starred repository github analysed understand common whitespace type different programming language analysed languageanalysedreposamount repository tab space space space space
582,Lobsters,visualization,Data Visualization,"Out on the streets, leveraging geographical data - Part 1",http://blog.garage-coding.com/2015/12/24/out-on-the-streets.html,street leveraging geographical data part,,postgresql serialize polygon well geojson leafletjs also support type geometry polygon geojson format look like list vertex end first vertex geometry type polygon coordinate going look park polygon instead centroid show serverencoding show clientencoding encoding park select name name sttransform geom starea way area planetosmpolygon tag leisurepark name null starea way order name desc gisdata select jsonbuildobject type featurecollection feature jsonagg jsonbuildobject type feature geometry stasgeojson geom json property jsonbuildobject name name area area jsondata park select jsondata text gisdata
584,Lobsters,visualization,Data Visualization,R / Shiny User Survey,http://www.r-chart.com/2015/12/r-shiny-user-survey.html,r shiny user survey,,
585,Lobsters,visualization,Data Visualization,A Day in the Life of Americans,http://flowingdata.com/2015/12/15/a-day-in-the-life-of-americans/,day life american,two angle waking lunch hour getting work winding american workday occupation people work common activity halfhour breakdown make moving bubble chart show clustering distribution make chart similar one,two angle far seen american spend day view wideout limited see tell percent people age working average day three afternoon tell similar number housework leisure travel thing overview really want see closer individual granular sense person contributes pattern want see person entire day play someone work home always interested side looked microdata american time use survey asked thousand people period used data simulate single day american representative population minute specifically tabulated transition probability one activity work traveling every minute day provided transition matrix let model day timevarying markov chain simulation come model kind mesmerizing dot represents person color represents activity time day shown top left someone change activity say sleep morning commute dot move accordingly following timeline atus simulation start run hour day start little movement people asleep wake hour day start race especially fun see fast speed see people head work run errand housework take care kid commute relax eat almost designated time day stared dot longer care admit although dot floating around challenge keep track people went drew line show path graphic follow color represent path ending activity traveling included make activity change obvious waking people wake head personal care showering brushing teeth head work eat breakfast relax bit housework lunch hour noon see lot movement work housework eating drinking back many also take time relax getting work might expect clock strike people head home prepare andor eat dinner winding midnight people wind day shifting leisure personal care eventually going sleep american workday occupation people work simulation common activity see halfhour breakdown day sex age group make moving bubble chart show clustering distribution make chart similar one
586,Lobsters,visualization,Data Visualization,Flexbox Froggy,http://flexboxfroggy.com/,flexbox froggy,,
588,Lobsters,visualization,Data Visualization,Plotly's JavaScript graphing library is now Open-source and Free,https://plot.ly/javascript/open-source-announcement/,plotly javascript graphing library opensource free,click redirected,click redirected
589,Lobsters,visualization,Data Visualization,"Analyzing 1.1 Billion NYC Taxi and Uber Trips, with a Vengeance",http://toddwschneider.com/posts/analyzing-1-1-billion-nyc-taxi-and-uber-trips-with-a-vengeance,analyzing billion nyc taxi uber trip vengeance,note september march dashboard available available github table content map data borough trend rise uber airport traffic realism weather affect taxi uber ridership nyc late night taxi index bridge tunnel crowd northside williamsburg privacy concern investment banker parting thought update update map green boro taxi pickup drop offs nyc taxi data tlc trip record dataset postgresql postgis github repository uber data fivethirtyeight borough trend rise uber migration manhattan brooklyn generally increased yellow taxi still account june june number uber pickup brooklyn grew uber made million manhattan pickup june june taxi made million pickup github yellow taxi venture bronx popular taxi staten island long take get nyc airport power broker robert moses fall new york median taxi trip leaving midtown headed jfk airport pm take minute bryant park jfk travel time laguardia airport jfk airport newark airport selecting neighborhood dropdown could bruce willis samuel l jackson made upper west side wall street minute die hard vengeance weather affect taxi uber ridership hurricane irene north american blizzard hurricane sandy national climatic data center every single inclement weather day rain snow uber provided trip relative previous week average taxi nyc late night taxi index looking neighborhood vibrant nightlife try williamsburg greenpoint bushwick brooklyn want avoid nighttime commotion head uptown upper east upper west side bk night whither bridge tunnel crowd bridge tunnel time reported repeatedly nyt reverse geocode classic genre complex northside williamsburg williamsburg north side known nightlife northside tract larger increase total taxi pickup time period tract city wythe hotel output verboten william vale hoxton neighborhood popularity plateaued privacy concern east hampton edition foil request chris whong described vijay pandurangan discussion data privacy tlc truly wanted remove potentially personal information would remove latitude longitude coordinate dataset entirely investment banker google map greenwich st parting thought release public ride data analysis citi bike system citi bike faster taxi use satellite imagery increased tension city government constant medium speculation possible ipo post fannie mae freddie mac postgresql r github github repository update september github repo brooklyn uber bigger taxi taxi still rule manhattan airport uber overtake taxi new york city uber growth rate nyc slowing aggregate trip count update march ridehailing nyc dominance impact deleteuber monthly aggregate report protest jfk airport deleteuber social medium campaign github repository content update ridehailing apps bigger taxi new york city ridehailing apps time bigger taxi outer borough uber lyft bigger yellow green taxi combined taxi losing edge manhattan airport jfk laguardia airport proposed congestion pricing zone fix nyc plan already popular taxi deleteuber campaign probably noticeable shortlived effect called work stoppage suspended surge pricing uber denied widely reported nyt reported convinced company apology lyft saw biggest gain gentrified brooklyn liberalminded company calling woke liberal reputation section southern brooklyn staten island voting preference green party candidate jill stein taxi strike available,note post originally written november expanded update september march also dashboard available update monthly latest taxi uber lyft aggregate stats new york city taxi limousine commission released staggeringly detailed historical dataset covering billion individual taxi trip city january june taken whole detailed triplevel data vast list taxi pickup drop coordinate story new york bad rush hour traffic midtown jfk bridge tunnel crowd hang saturday night time investment banker get work uber changed landscape taxi could bruce willis samuel l jackson made broadway wall street le minute dataset address question many mapped coordinate every trip local census tract neighborhood set attempt extract story meaning data post cover lot want pursue analysis everything data software freely available full instruction download analyze data available github table content map data borough trend rise uber airport traffic realism die hard weather affect taxi uber ridership nyc late night taxi index bridge tunnel crowd northside williamsburg privacy concern investment banker parting thought update update map certainly first person use public taxi data make map previously seen map includes entire dataset pickup drop offs since yellow green taxi click map view high resolution version map show every taxi pickup drop respectively new york city map made tiny dot brighter region indicate taxi activity green tinted region represent activity green boro taxi pick passenger upper manhattan outer borough notice pickup heavily concentrated manhattan drop offs extend outer borough think pretty recommend checking high resolution image pickup drop offs nyc taxi data official tlc trip record dataset contains data billion taxi trip january june covering yellow green taxi individual trip record contains precise location coordinate trip started ended timestamps trip started ended plus variable including fare amount payment method distance traveled used postgresql store data postgis perform geographic calculation including heavy lifting mapping latitudelongitude coordinate nyc census tract neighborhood full dataset take gb disk adding index detailed information database schema geographic calculation take look github repository uber data thanks folk fivethirtyeight also publicly available data covering nearly million uber ride nyc incorporated dataset uber data detailed taxi data particular uber provides time location pickup drop offs wanted provide unified dataset including available taxi uber data trip dataset cabtypeid indicates whether trip yellow taxi green taxi uber car borough trend rise uber introduction green boro taxi program august dramatically increased amount taxi activity outer borough graph taxi pickup brooklyn populous borough split cab type period migration manhattan brooklyn generally increased yellow taxi nearly doubled number pickup made brooklyn boro taxi appeared scene though green taxi quickly overtook yellow taxi june green taxi accounted brooklyn monthly taxi pickup yellow taxi decreased brooklyn pickup back rate yellow taxi still account drop offs brooklyn since many people continue take taxi manhattan brooklyn even drop offs green taxi closing gap let add uber mix live brooklyn although sometimes take taxi anecdotal review credit card statement suggests take four time many ubers taxi turn alone june june number uber pickup brooklyn grew june recent data available wrote uber account twice many pickup brooklyn compared yellow taxi rapidly approaching popularity green taxi note uber data available apr jan hence gap graph manhattan surprisingly account far largest number taxi pickup borough given month around nyc taxi pickup occur manhattan made yellow taxi even though green taxi allowed operate upper manhattan account barely fraction yellow taxi activity uber grown dramatically manhattan well notching increase pickup june june taxi pickup declined period uber made million manhattan pickup june june taxi made million fewer pickup however even though uber picked nearly million manhattan passenger june uber still account le total manhattan pickup queen still yellow taxi pickup green taxi pickup entirely laguardia jfk airport queen heavily served yellow taxi although uber experienced nearly brooklynlike growth queen still lag behind yellow green taxi though yellow taxi heavily influenced airport pickup restrict pickup laguardia jfk airport see uber grown monthly pickup yellow cab still shuttle carhailing airport passenger back city bronx staten island significantly lower taxi volume see graph github noteworthy observation almost yellow taxi venture bronx uber already popular taxi staten island long take get nyc airport vehicle heading jfk airport would undoubtedly using van wyck expressway moses stated purpose proposing provide direct route airport midmanhattan van wyck expressway designed optimum condition good weather accident delay vehicle per hour even traffic using van wyck jfk traffic expressway capacity would sufficient handle air age beginning air traffic obviously going boom immense dimension van wyck expressway could come anywhere near handling jfk traffic traffic person per hour going happen traffic increased person per hour caro power broker robert moses fall new york subject near dear new yorkers heart far advance hail cab order make flight one three area airport course depends many factor bad rush hour traffic un session cab driver know secret shortcut avoid day inevitable bottleneck van wyck took weekday taxi trip airport calculated distribution long took travel neighborhood airport hour day case worst hour travel airport pm example median taxi trip leaving midtown headed jfk airport pm take minute trip hour take luck making flight case left midtown heading jfk face median trip time minute chance getting le minute google map estimate hour travel time public transit bryant park jfk depending time day close subway stop expected travel time might better public transit cab could save bunch money story similar traveling laguardia newark airport neighborhood see graph airport travel time neighborhood selecting dropdown pick neighborhood battery parklower manhattan central harlem north central harlem south chelseaflatironunion square chinatown clinton hell kitchen east harlem north east harlem south east village gramercy lenox hillroosevelt island lincoln square lower east side marble hillinwood midtown morningside height murray hillkips bay sohotribecalittle italy stuyvesant town turtle bayeast midtown upper east side upper west side washington height north washington height south west village yorkville bedford brooklyn heightscobble hill bushwick carroll gardensred hook clinton hill crown height north crown height south dumbodowntownboerum hill east new york east williamsburg flatbush fort greene greenpoint park slopegowanus prospect height prospect lefferts gardenswingate stuyvesant height williamsburg astoria briarwoodjamaica hill elmhurst flushing forest hill hunter pointsunnyside jackson height jamaica kew garden long island city maspeth old astoria south ozone park springfield garden southbrookville steinway woodside mott havenport morris west concourse turn javascript click r view airport graph neighborhood travel time laguardia airport jfk airport newark airport view airport graph neighborhood selecting neighborhood dropdown could bruce willis samuel l jackson made upper west side wall street minute airport destination suffer traffic congestion die hard vengeance john mcclane willis zeus carver jackson make broadway wall street subway station morning rush hour le minute else bomb go commandeer taxi drive frantically central park tailgate ambulance barely make time course bomb go thanks tlc publicly available data finally address audience concern realism sequence mcclane carver leave upper west side took taxi ride picked upper west side census tract west west street dropped downtown tract containing wall street subway stop picked weekday morning made histogram travel time taxi trip dataset mean travel time minute median minute mean half trip actually made within allotted time minute hero might need minute commandeer cab get subway platform foot allot minute task minute driving trip make minute le still movie make seem like herculean task almost zero probability success reality average seems rare action movie sequence actually easier recreate real life movie weather affect taxi uber ridership since day fewest citywide taxi trip obvious relationship weather day fewest taxi trip sunday august hurricane irene trip monday december north american blizzard trip monday october hurricane sandy trip downloaded daily central park weather data national climatic data center joined taxi data see could learn anything else relationship weather taxi ride lot confounding variable including seasonal trend annual growth due boro taxi whether weather event happen fall weekday weekend would appear snowfall significant negative impact daily taxi ridership hand rain alone seem affect total daily ridership since uber trip data available handful month difficult measure impact weather uber ridership uber wellknown surge pricing time high demand often includes inclement weather handful rainy snowy day first half uber data available rainsnow day calculated total number trip made taxi ubers compared service daily average previous week example uber ratio mean many uber trip made day compared uber daily average date snowfall inch taxi trip v prev week uber trip v prev week date precipitation inch taxi trip v prev week uber trip v prev week although data conclusively prove anything every single inclement weather day rain snow uber provided trip relative previous week average taxi part probably number uber car still growing thing held constant expect uber provide trip successive day total taxi trip stay flat uber ratio higher every single day seems unlikely random chance though justification make strong claim whether surge pricing something else uber capacity seems le negatively impacted bad weather relative taxi capacity nyc late night taxi index many real estate listing day include information neighborhood ranking local school walkability score type local business use taxi data draw inference part city popular going late night looking percentage census tract taxi pickup occur pm time period deemed late night people want live city never sleep others prefer peace quiet according late night taxi index looking neighborhood vibrant nightlife try williamsburg greenpoint bushwick brooklyn census tract highest late night taxi index east williamsburg taxi pickup occur pm insist manhattan best bet lower east side meatpacking district conversely want avoid nighttime commotion head uptown upper east upper west side already stretch east avenue park avenue lowest late night taxi index taxi pickup occurring nighttime hour map census tract least taxi pickup darker shading represents higher score late night taxi index bk night taxi pickup occur one east williamsburg census tract happen pm highest rate city paltry taxi pickup upper east side tract occur late night hour whither bridge tunnel crowd bridge tunnel moniker applies literal level anyone travel onto island manhattan via bridge tunnel often new jersey long island outer borough typically considered insult though emerging popularity outer borough well let say time order measure b destination taxi data isolated trip originating near penn station saturday evening pm midnight penn station serf point disembarkation new jersey transit long island rail road although everyone hailing taxi around penn station saturday evening took train city least decent proxy b trend map neighborhood ride dropped popular destination b trip murray hill meatpacking district chelsea midtown even drill individual trip level see exactly trip wind map murray hill popular b destination dot represents single saturday evening taxi trip originating penn station reported repeatedly nyt heart murray hill nightlife lie along avenue particular stretch street taxi data show plurality saturday evening taxi trip penn station drop area additional cluster high avenue east along street spot east street avenue bit work might able reverse geocode coordinate actual bar name perhaps putting scientific spin classic genre complex northside williamsburg according taxi activity ascendant census tract entire city since lie williamsburg north side bounded north st north berry st east north st south east river west northside neighborhood known nightlife full pickup occur late night hour difficult compare taxi growth across census tract borough introduction green boro taxi program northside tract larger increase total taxi pickup time period tract city exception airport even boro taxi program began august northside williamsburg experienced dramatic increase taxi activity growing mere monthly pickup june june june let look animated map taxi pickup see learn anything cool thing animation let u pinpoint exact location popular northside business open past year particular along wythe avenue may wythe hotel wythe n january output nightclub wythe n march verboten nightclub n wythe kent meanwhile sure developer future william vale hoxton hotel hope northside inexorable rise continues least according taxi data pickup remained stable since perhaps indicating neighborhood popularity plateaued privacy concern east hampton edition first time tlc released public taxi data following foil request chris whong included supposedly anonymized taxi medallion number every trip fact possible decode trip actual medallion number described vijay pandurangan led many discussion data privacy tlc removed information medallion number recent data release data still contains precise latitude longitude coordinate potentially used determine people live work socialize fun game looking hottest new techno club northside williamsburg people home get bit weird nyc course dense take rush hour taxi ride one populus area another say grand central terminal upper east side unlikely anything unique trip would let someone figure live work going somewhere bit beaten path taxi case trip might well unique might reveal information example know owns one thesis beautiful oceanfront home east hampton exclusive lane exact address redacted protect innocent know exact brooklyn height location time someone necessarily owner hailed cab rode mile paid fare credit card including tip tlc truly wanted remove potentially personal information would remove latitude longitude coordinate dataset entirely tension public data supposed let people know well taxi system serf different part city maybe tlc provide census tract instead coordinate perhaps coordinate within busy part manhattan providing coordinate uniquely identify rider home feel excessive investment banker topic hampton already covered hipster williamsburg b t murray hill see taxi data tell u investment banker yet another new york distinctive subculture goldman sachs lends nicely analysis headquarters west street dedicated driveway east path marked hudson river greenway google map isolate taxi trip dropped driveway get sense goldman sachs least one take morning arrive histogram weekday drop time west street cab start dropping around peak hour tapering afternoon presumably postmorning drop offs visitor opposed employee restrict drop offs median drop time drop offs happen block north citigroup headquarters greenwich st although building appear dedicated driveway way goldman still isolate taxi drop directly front building see time citigroup worker arrive morning evening drop offs near citigroup probably bar restaurant across street morning drop offs probably mostly citigroup employee citigroup morning arrival stats comparable goldman median arrival drop offs happen top neighborhood taxi pickup drop goldman sachs citigroup weekday morning west village chelseaflatironunion square sohotribeca deal banker live st maybe st anymore ala still plenty trip stodgier part uptown certainly possible people coming uptown likely take subway private car mode transport taxi data mean conclusive still cool kid living downtown banker exception parting thought mentioned introduction post cover lot even feel like barely scratch surface information available full dataset example know january taxi fare paid credit card june number grown fare expensive taxi trip rider pay via credit card time endless analysis done datasets could merged taxi data investigation citi bike program release public ride data wonder introduction bikeshare system material impact taxi ridership update analysis citi bike system also analysis citi bike faster taxi vice versa maybe could quantify fairweather fandom measuring taxi volume yankee stadium citi field fluctuates based yankee mets record investor use satellite imagery make investment decision eg lot car department store parking lot holiday season maybe time buy might able something similar taxi data airline market share shifting based traffic jetblue terminal jfk v delta terminal laguardia demand lumber correlated many people loading ikea furniture red hook imagine people continue obtain uber data via foil request interesting see unfolds amidst increased tension city government constant medium speculation possible ipo lastly mentioned medium data revolution previous post fannie mae freddie mac ethos applies long ago idea downloading processing analyzing gb raw data containing billion row commodity laptop would almost laughably naive today possible macbook air increasingly opensource software tool available aid process partial postgresql r implementation detail increasingly limiting factor data analysis computational horsepower human curiosity creativity github interested getting data analysis want read bit technical detail head github repository update september nyc taxi limousine commission released additional year data covering taxi uber forhire vehicle fhv trip june complete dataset includes billion trip github repo updated process everything including new fhv file format brooklyn uber bigger taxi october marked first day uber made pickup brooklyn yellow green taxi combined june uber make pickup per day taxi gap appears growing lyft also surpassed yellow taxi brooklyn still make fewer pickup green boro taxi taxi still rule manhattan airport manhattan taxi still make three time many pickup per day ubers taxi activity shrank june june uber grew time period million trip per month loss taxi coupled million trip per month increase uber uber also increased share pickup laguardia jfk airport uber airport pickup doubled past year taxi activity remained flat uber make many pickup nyc airport compared taxi uber overtake taxi new york city uber growth rate nyc slowing terriby surprising since intuitively harder company grow serf larger percentage population said uber nyc yearoveryear growth still june one year earlier taxi loss accelerated slightly time period yearoveryear pickup declined june compared loss year taxi trip average annual decline next two year uber would average annual growth rate order equal taxi activity june consider ridesharing service uber lyft via juno aggregate cohort would average annual growth rate next two year assuming annual taxi decline note via juno gett yet appear triplevel tlc data report aggregate trip count enough particular wonder ridesharing fare unsustainably low due intense impossible say line cross least overall trend unmistakable continue see monthly liveupdating tlc aggregate data opensource code process analyze everything update march ridehailing nyc dominance impact deleteuber month since last updated post dataset december grown billion taxi trip another million forhire vehicle trip including ridehailing apps uber lyft juno via taxi limousine commission monthly aggregate report shown time ridehailing apps surpassed taxi total popularity granular triplevel dataset paint complete picture allowing u explore geographic trend fallout january protest jfk airport ensuing deleteuber social medium campaign github repository updated process latest data including additional analysis script covering content update ridehailing apps bigger taxi new york city february marked first month ridehailing service collectively made trip yellow green taxi combined december ridehailing service made pickup taxi ridehailing cohort make pickup per month taxi month since dataset began uber alone bigger yellow green taxi combined first achieving milestone november past year ridehailing apps grown million trip per month taxi usage declined around million trip per month tlc dataset also contains information nonapp fhvs might call traditional black car whose usage declined million trip per month since end possible net increase taxifhv trip least partially offset decline private vehicle usage tlc dataset tell u anything ridehailing apps time bigger taxi outer borough ridehailing service popular taxi outer borough since beginning still impressive see dramatically gap widened outer borough uber lyft bigger yellow green taxi combined taxi losing edge manhattan airport fact good chance ridehailing apps already surpassed taxi manhattan write march month data confirm similar result hold jfk laguardia airport restrict manhattan south street proposed congestion pricing zone fix nyc plan ridehailing service already popular taxi surprised would guessed ridehailing manhattan market share would higher street turn upper east side one area highest taxi market share deleteuber campaign probably noticeable shortlived effect january new york taxi worker alliance called work stoppage jfk airport pm pm protest trump administration proposed travel ban muslimmajority country uber later suspended surge pricing jfk people perceived attempt undermine taxi claim uber denied regardless intention deleteuber hashtag trended social medium widely reported many news outlet week jfk taxi strike uber suffered largest weekoverweek market share decline since rival lyft enjoyed largest weekly market share increase period viewed longerterm trend uber declining market share biggerthannormal decline week jfk taxi strike look significant especially considering week strike uber rebounded largest weekly market share increase uber share ridehailing trip generally declined since competitor entered nyc market even total number trip increased dramatically plenty caveat apply uber dip lyft bump might due factor political protest nyt reported bout half million people requested deleting uber account course week know many trip people would typically account know switched uber ridehailing apps also possible lyft started running aggressive pricing promotion february promotion drove lyft market share increase similarly uber recovery bump week taxi strike might motivated returning user convinced company apology maybe uber ran pricing promotion form damage control clear know thing happened sound plausible lose sight fact even uber share ridehailing trip declined total number trip grown total number ridehailing trip across city lyft saw biggest gain gentrified brooklyn curious uber v lyft market share varied neighborhood immediate wake deleteuber campaign calculated lyft change market share month jfk taxi strike week strike every neighborhood city map show neighborhood lyft gained market share mostly concentrated call lack better term gentrified brooklyn gowanus greenpoint prospect height lyft doubled market share around strike maintained elevated market share throughout rest tap mobile view interactive map lyft developed bit reputation liberalminded company uber even adopting unconventional corporate tactic calling woke sure enough neighborhood northern northwestern lyft gained among liberal reputation city flip side section southern brooklyn staten island supported donald trump general election also lyft gained least market share gathered presidential election result every neighborhood city compared lyft market share gain neighborhood neighborhood voting pattern data show average lyft gained market share uber neighborhood voted heavily hillary clinton correlation terribly strong relationship say nothing causality could many confounding factor correlated political ridehailing app preference many case ridehailers local voter especially commercial area like midtown manhattan maybe damning analysis extend beyond time period surrounding jfk taxi strike consider lyft market share increase neighborhood v correlation voting pattern disappears almost entirely still given everything know would guess liberal voter fact likely switch uber lyft immediate wake incident worth lyft market share increase correlated voting preference green party candidate jill stein hillary clinton taxi strike perhaps lost commotion neither taxi strike uber surge pricing suspension look much impact number pickup jfk afternoonevening january reminder code used update available github along aggregated data
590,Lobsters,visualization,Data Visualization,The story of one latency spike,http://blog.cloudflare.com/the-story-of-one-latency-spike/,story one latency spike,following evidence blame network tcpdump rescue welcome system tap system tap flame graph script showing latency deeper rabbit hole source source let collapse tcp set receive buffer size tcp socket actually mean man page stevens receive buffer size value structure take byte tuning rmem summary simple stap script hiring,customer reported unusual problem cloudflare cdn server responding http request slowly extremely slowly second slowly happened rarely nt easily reproducible make thing worse usual monitoring nt caught problem application layer everything fine nginx server reporting long running request time send wolf video solves problem following evidence first attempted reproduce customer http response chart test http request time measured cdn ran thousand http query one server couple hour almost request finished millisecond clearly see request thousand took long finish debugging network problem delay characteristic may indicate packet loss since syn packet usually retransmitted time blame network first thought spike http load time might indicate sort network problem sure ran icmp ping two ip many hour first ping went external test machine router showed flat latency exception two peak due slowness vps used test ping statistic packet transmitted received packet loss rtt minavgmaxmdev m m decent round trip time rtt network confirms network connection fact stable second ping session launched external test machine one linux server behind router ping statistic packet transmitted received packet loss rtt minavgmaxmdev m ping output show max rtt gigantic latency spike also clearly visible graph first experiment showed network external testing server router malfunctioning second test server behind router revealed awful spike indicates problem somewhere router server inside datacenter tcpdump rescue verify problem ran tcpdump affected server trying pinpoint particular icmp packet affected spike tcpdump ttt n icmp ip xxxa xxxb icmp echo request id ip xxxb xxxa icmp echo reply id see tcpdump output one particular icmp packet indeed received network time reason operating system waited answering linux network packet handled promptly interrupt occurs delayed icmp response indicates serious kernel trouble welcome system tap understand going look internals operating system packet processing nowadays plethora debugging tool linux particular reason chose system tap stap help flame graph identified function interest netrxaction flamekernelglobalsh stackcollapsestappl outstapstacks flamegraphpl stapkernelsvg flamegraph netrxaction function responsible handling packet soft irq mode handle netdevbudget packet one go sysctl netcorenetdevbudget netcorenetdevbudget run stap script showing latency distribution function stap v histogramkernelstp kernelfunction netrxaction duration duration m value count run hit netrxaction function million time run finished outlier importantly one run took astonishing stall low level packet handling disastrous totally possible run buffer space start dropping packet couple event get accumulated wonder icmp packet nt handled time deeper rabbit hole repeated procedure couple time made flame graph source trial error figured descendant netrxaction caused latency spike source procedure pretty effective couple run identified culprit tcpcollapse function summary latency measurement stap v histogramkernelstp kernelfunction tcpcollapse duration second execution tcpcollapse function execution half finished max time let collapse tcp tcpcollapse function interesting turn deeply intermixed bsd socket api work fully understand let start pub question set receive buffer size tcp socket actually mean go read man page dust stevens wait naive answer would go something along line tcp receive buffer setting indicates maximum number byte read syscall could retrieve without blocking intention exactly work fact receive buffer size value socket hint operating system much total memory could use handle received data importantly includes payload byte could delivered application also metadata around normal circumstance tcp socket structure contains doublylinked list skbuff structure packet contains data also skbuff metadata skbuff said take byte metadata size count receive buffer size counter pessimistic packet possible receive buffer memory almost entirely used metadata using large chunk receive buffer space metadata really programmer want counter socket memory pressure complex logic run intention freeing space one operation tcpcollapse merge adjacent tcp packet one larger skbuff behavior pretty much garbage collection gc everyone know garbage collection kick latency must spike tuning rmem two way control tcp socket receive buffer linux set setsockopt sorcvbuf explicitly leave operating system allow autotune using tcprmem sysctl hint cloudflare use latter approach receive buffer size controlled sysctl sysctl setting tell linux autotune socket receive buffer allocate default start buffer since receive buffer size fairly large garbage collection could take long time test reduced max rmem size repeated latency measurement sysctl stap v histogramkernelstp kernelfunction tcpcollapse duration number much better changed setting tcpcollapse never took verified netrxaction latency also improved stap v histogramkernelstp kernelfunction netrxaction duration duration m value count rmem change max latency observed netrxaction time dropped summary setting rmem sysctl recommended could affect performance high throughput high latency connection hand reducing rmem definitely help alleviate observed latency issue settled max rmem value offer compromise reasonable gc time nt affect throughput tcp layer importantly showed use system tap debug latency issue use script measure netrxaction latency system simple stap script available github fix mentioned article already rolled customer feel tiny bit faster sound interesting work type debugging hiring london singapore san francisco
591,Lobsters,visualization,Data Visualization,The Journalist-Engineer,https://medium.com/@matthew_daniels/the-journalist-engineer-c9c1a72b993f#.3rj6iwvgw,journalistengineer,comparing historic presentday popularity older music rapper size vocabulary article rapper vocabulary tl dr passive active reader codedriven content viable printversion upshot needed pretty unique skillset came along create something best express data evolution visualization corporate tax rate evolution corporate tax chart rdataisbeautiful,couple month ago published article comparing historic presentday popularity older music used two huge datasets billboard song track spotifyif writing academic paper ton analysis regression modeling figure certain song become popular timeor could make sick article music timelessness employing ton code visualize nuance data songsinstead reporting theory wagered reader would get elegant presentation data analysis completely different approach storytellinghere approach another project rapper size vocabulary process depict system vocabulary among rapper shakespeare melville rather thesispointmy article rapper vocabulary used unconventional chart design elicit data quicklyinstead proving one rapper better another reader really good absorbing data much rather form judgementstl dra year ago bret victor wrote notion passive active reader active reader asks question considers alternative question assumption even question trustworthiness active reader passively sponge information us author argument springboard critical thought deep understanding theory sound kinda crazy imagine internet engaging intense discourse datait would represent big shift journalistic voice place enormous burden reader find story data analyst opposite role traditional medium assumes role informer knowledge authoritative source read listen watch thing researched happening active reader shocked reader response handful project worked reader feel powerful know call feel foreigni believe response long read open word article anxiously wonder whether time investment payoff maybe author point suckan experience active reader create anxiety feel burden time pace give reader right depiction avoid abstraction add narrative guide experience data science shit storywhy reason thing different organization accept codedriven content viable printversion ny time launched dataled blog upshot address tension michael bloomberg subsidizing bloomberg business engineer editorial department one else even close making headcount commitmentwe needed pretty unique skillset people could design write code talent pool arrived coder creating apps dashboard analytics tool could shift design sense user reader like traditional journalist engineer plenty empathy people consume came along visualizing million data point internet used impossible browser robust enough render also made easier creative design taking screenshots chart excel create something best express data instead limiting traditional preinternet design pattern eg bar chart scatter chart pie chart etc example process evolution mike bostock explored various bespoke design visualization corporate tax ratesthe evolution mike bostock corporate tax chart ny timesnote design would possible statistic package design program long live futurethere million people subscribed reddit rdataisbeautiful sub top subreddit internet grossly undervalued intrinsic interest visualization expect market sort content explodei psyched next wave software make journalism easier code someone write framework oculus rift someone figure mobile even desktop scrollbased event still infancyin meantime busy coding
593,Lobsters,visualization,Data Visualization,Agile Visualization,http://agilevisualization.com/,agile visualization,thanks object profile lam research rmod synectique commissariat ã l atomique et aux alternative cea komponentenwerkstatt pillar pharo,thanks agile visualization supported opensource communites research laboratory company thanks particular thanks object profile lam research rmod synectique commissariat ã l atomique et aux alternative cea komponentenwerkstatt agile visualization written using pillar thanks damien cassou damien pollet wonderful framework deeply grateful contribution particular order ch huang chris thorgrimsson tudor renato cerro ducasse yuriy tymchuk natalia tymchuk juraj kubelka juan pablo sandoval alcocer milton mamani vanessa ronie saldago alvaro jose peralta pablo estefo igor stasenko faviola molina ricardo jacas daniel aviv notario sergio maass serge stinckwich bui thi mai anh johan fabry nicolai hess miguel campusano peter martin dia jan samir saleh leonel merino volkert pierre chanson andrei chi thomas brodt mathieu dehouck miguel campusano onil goubier thierry goubier esteban maringolo alejandro infante philippe back stefan reichhart ronie salgado steffen offray vladimir luna alena beyer steven kelly opensource community behind pharo moose always great source wisdom happy see agile visualization result intense energy
594,Lobsters,visualization,Data Visualization,1 Year in #Stripe,https://mattarkin.com/1-year-in-stripe/,year stripe,year stripe email protected author number authored post number day since joining number mention post per day post mention,april year stripe author note say year throughout post data actually day worth marked year since first post stripe developer support irc room year message posted chat room thought would nice take look back fun excel elasticsearch first post stripe question stripe connect transaction fee ended answering question markin question connect transaction fee would full amount application fee go stripe connect application account standard take chunk markin nvm mind found bit hidden markin example charge amount made example transferred account cent transferred user account typical irc fashion stayed room lurked occasionally people would ask question since one else would answer answer often quick google course year authored message mentioned looking authored took average minute compose hour writing message work week hey stripe guy send invoice irc room grown quite bit last year averaging message per day though recently many day room get message number message per day total message count date average number message per date daily count post authored year worth log file bit interested see kind question asked type tech people using general headache seem come play popularity tech programming language looking back surprise php popular language referenced think largely many new beginner web developer use php also led php hardest problem solve necessarily content question hard many issue became use php opposed use stripe question fact favorite problem solve year one really try push stripe api get new business model work stripe style question ironically one involve minimal code said digging fresh unknown code finding small bug always fun scavenger hunt part php popularity irc room massive change stripe rolled adding namespaces stripephp temporarily making available via composer unfortunately nearly every stripe php tutorial used nonnamespaced version warn reader tutorial valid stripephp version mention stripephp still cause nightmare php also scared felt newer developer likely make mistake could jeopardize pci compliance thus customer credit card info part due stripe interpretation new ds rule read thought second popular language mentioned ruby rail doubt largely due pete keen book mastering modern payment focus stripe ruby rail primary language node came fourth parse technically us node express decided build stripe library update year included separately anyone reading work parse update library email surprising apple io beat android sure apple pay something interesting fact bitcoin popular ach though ach still private beta visa surprisingly popular payment card followed american express message mentioned api doc many question could answered reading doc felt message mentioned email protected guess either u referring support account support rare case people complaining long support time post authored guest nick either guest irctc percent message authored user message author number authored post number day since joining number mention post per day post mention markin koopajah rfunduk wsmoak dmj zrail henriwatson wfpkhc dqsf want give special thanks great folk irc koopajah rfunkduk dqsf stripe developer support team awesome job spending time always fun community member wsmoak zrail henriwatson awesome wendy nearly crazy spending ton time stripe room pete literally wrote book stripe henri great helpful guy around
595,Lobsters,visualization,Data Visualization,Are NFL officials biased with their ball placement?,https://gutterstats.wordpress.com/2015/11/03/are-nfl-officials-biased-with-their-ball-placement/,nfl official biased ball placement,got spreadsheet containing every single play run nfl play endzone yard line spot gridiron xy endzone touchdown field goal link sex lie selfreported count joeymfaulkner like,disclaimer british trying talk nfl pretty likely going sound like either idiot alien trying describe going request send abuse using anonymous field bottom go straight email instead comment box everyone see imagine walking street someone clipboard bored expression asks question many glass water last week probably really know answer person asking really give much crap maybe could guess number glass water equal amount belief choose number likely choose maybe nfl guy ball get tackled stopped end run official get second compromised view decide stop every yard line treated equally got spreadsheet containing every single play run nfl going show referee subconsciously change outcome play based painted line field subsequently show matter ok let go first football illiterate walkthrough word know important post skip next horizontal line need explain play american football based series play play started offense taking ball either deciding run pas another player towards opponent endzone play finish player holding ball tackled defence run field throw ball someone catch motion stopped defence next play start ball event happened however often look like see ball take time like situation usually start end within second official referee follow soccer need get ball place yard line within second spot next play also relevant discussion gridiron colloquial way refer marking required regulation official nfl field look like play start yard x go yard next play start xy yard line case start yard line even though one marked full line game football essentially slow crawl opponent end field relevant later scoring two main way score walk opponent endzone darker green end gridiron known touchdown worth point second able kick ball post end drive known field goal worth point okay breathe safe knowledge alienated vast majority people might read let move interesting part post first thing decided picked spreadsheet half million play ask question play start took every single play year dataset took starting position plotted bar graph realised explanation football incomplete realise graph important point collection play known drive start yard line offense lose ball move upfield fast enough explains large peak yard line smooth decline opponent endzone offense give ball team fact graph completely inane might expect drive start drive finish midfield yard line drive make way end tense goal line battle see peak opponent yard line le easy explain though sharp peak jut smooth curve assumed peak fault messed around age get rid shake took graph compared line gridiron like every single one staccato sharp peak occurs line drawn field small effect yard line deviation around due lack data average deviation true distribution dataset large around highly statistically significant could first thing came mind perhaps football team preferentially run play based around yard line say instead running five yard forward run next line across field chuck maybe conscious effort player reach field line see one two sound reasonable consider someone receive ball yard line going run either direction get tackled mean play based around yard line might end yard line runner reaching yard line might miss get effect graph would spread peak across yard instead see perfectly sharp peak explanation stuck official think oh damn mess seven separate six foot tall millionaire piled top ball rule try remember ball stop subconscious make grab safety blanket line drawn place known statistical heaping well known effect respondent survey act choosing number comfortable range value think might number say example take graph birth weight baby tanzania taken link see either believe baby weight reported round number save time something happening produce baby multiple gram true believe referee favouring putting ball yard line mean see peak far pronounced midfield get closer goal line almost entirely disappear make seem like referee paying closer attention near goal line know important important one yard gain one yard gain well work made graph average amount point scored based team field mean every yard line took drive least one play started yard line average point shown nb point touchdown point field goal see area peak painted field line pronounced yard extra yard average make little difference outcome drive however get close endzone difference one yard quite significant referee extra careful sum referee biased place ball yeah probably make difference football game really feel like might something missing brought knowledge know wrong please hit unbelievably complex reading statistical heaping found sex lie selfreported count follow shiny new semipro twitter joeymfaulkner like like loading
596,Lobsters,visualization,Data Visualization,JavaScript Charting Made Easy with JSCharting,http://www.joezimjs.com/javascript/javascript-charting-made-easy-with-js-charting/,javascript charting made easy jscharting,javascript charting made easy jscharting joe zim javascript corner,javascript charting made easy jscharting joe zim javascript corner
597,Lobsters,visualization,Data Visualization,Python vs R,https://www.dataquest.io/blog/python-vs-r/,python v r,comparing python v r objectively dataquest importing csv r python panda dataframes finding number row r python looking first row data r python find average statistic r python make pairwise scatterplots r python ggally matplotlib seaborn make cluster player r python cluster kmeans scikitlearn plot player cluster pca r python split training testing set overfit r python univariate linear regression r python calculate summary statistic model r python rsquared value statsmodels fit random forest model nonlinearities random forest r python calculate error mse r python download webpage r python request rcurl r python beautifulsoup python v r conclusion r functional python objectoriented r data analysis builtin python relies package python main package data analysis task r larger ecosystem small package r statistical support general usually straightforward nonstatistical task python many parallel data analysis workflow final word python v r dataquest totally reworked relaunched data analyst r path,comparing python v r objectivelythere dozen article written comparing python v r subjective standpoint article aim look language objectively analyze data set side side python r show code needed language achieve result let u understand strength weakness language without conjecture dataquest teach language think place data science toolkitwe analyzing data set nba player performance season download file step analysis show python r code along explanation discussion different approach without ado let get head head python v r matchup started importing csvrlibrary readr nba readcsv pythonimport panda nba pandasreadcsv code load csv file contains data nba player season variable nba language real difference python need import panda library get access dataframes r import data using base r function readcsv using readr library function readcsv advantage greater speed consistent interpretation data type dataframes available r python twodimensional array matrix column different datatype end step csv file loaded language dataframefinding number rowsrdim nba print number player number column row player column containing data playerslooking first row datarhead nba player po age brefteamid quincy acy sf tot output truncated pythonnbahead player po age brefteamid quincy acy sf tot output truncated pretty much identical print first row data syntax similar python objectoriented head method dataframe object r separate head function common theme see start analysis language python objectoriented r functionalfind average statisticlet find average value statistic column see name like fg field goal made ast assist season statistic player like fuller explanation stats look r library purrr library dplyr nba selectif isnumeric mapdbl mean narm true player na po na age brefteamid na output truncated pythonnbamean age g g output truncated major difference approach python v r applying function across dataframe column python mean method dataframes find mean column defaultin r use function two popular package select column want average apply mean function operator referred pipe pass output one function input next taking mean string value result na available take mean numeric column using selectifhowever need ignore na value take mean requiring u pas narmtrue mean function end na mean column like column three point percentage player take three point shot percentage missing try mean function r get na response unless specify narmtrue ignores na value taking mean mean method python already ignores value defaultmake pairwise scatterplotsone common way explore dataset see different column correlate others compare ast fg trb columnsr library ggally nba select ast fg trb ggpairs python import seaborn sn import matplotlibpyplot plt snspairplot nba ast fg trb pltshow get similar plot end show r data science ecosystem many smaller package ggally helper package mostused r plotting package many visualization package general python matplotlib primary plotting package seaborn widely used layer matplotlib visualization python usually one main way something whereas r many package supporting different method thing least half dozen package make pair plot instance make cluster playersone good way explore kind data generate cluster plot show player similarr library cluster setseed isgoodcol function col sum isna col isnumeric col goodcols sapply nba isgoodcol cluster kmeans nba goodcols label cluster cluster python sklearncluster import kmeans kmeansmodel kmeans goodcolumns nbagetnumericdata dropna kmeansmodelfit goodcolumns label kmeansmodellabels order cluster properly remove nonnumeric column column missing value na nan etc r applying function across column removing missing value numeric use cluster package perform kmeans find cluster data set random seed using setseed able reproduce resultsin python use main python machine learning package scikitlearn fit kmeans clustering model get cluster label perform similar method prepare data used r except use getnumericdata dropna method remove nonnumeric column column missing valuesplot player clusterwe plot player cluster discover pattern one way first use pca make data plot shade point according cluster associationr prcomp nba goodcols centertrue twocolumns x clusplot twocolumns label python sklearndecomposition import pca pca plotcolumns goodcolumns pltscatter xplotcolumns yplotcolumns clabels pltshow made scatter plot data shaded changed icon data according cluster r clusplot function used part cluster library performed pca via pccomp function built rwith python used pca class scikitlearn library used matplotlib create plotsplit training testing setsif want supervised machine learning good idea split data training testing set overfitr trainrowcount floor nrow nba setseed trainindex sample nrow nba trainrowcount train nba trainindex test nba trainindex python train nbasample test nbaloc nbaindexisin trainindex comparing python v r see r many dataanalysis focused builtins like floor sample setseed whereas called via package python mathfloor randomsample randomseed python recent version panda came sample method return certain proportion row randomly sampled source dataframe make code much concise r package make sampling simpler much concise using builtin sample function case set random seed make result reproducibleunivariate linear regressionlet say want predict number assist per player field goal made per playerr fit lm ast fg datatrain prediction predict fit test python sklearnlinearmodel import linearregression lr linearregression lrfit train fg train ast prediction lrpredict test fg scikitlearn linear regression model fit generate prediction r relies builtin lm predict function predict behave differently depending kind fitted model passed used variety fitted modelscalculate summary statistic modelrsummary fit call lm formula ast fg data train residual min median max output truncated pythonimport statsmodelsformulaapi sm model smols formulaast fga datatrain fitted modelfit fittedsummary dep variable ast rsquared model ols adj rsquared output truncated want get summary statistic fit like rsquared value need bit python r r use builtin summary function get information model python need use statsmodels package enables many statistical method used python get similar result although generally bit harder statistical analysis python statistical method exist r exist pythonfit random forest modelour linear regression worked well single variable case suspect may nonlinearities data thus want fit random forest modelr library randomforest predictorcolumns c age mp fg trb stl blk rf randomforest train predictorcolumns train ast prediction predict rf test predictorcolumns python sklearnensemble import randomforestregressor predictorcolumns age mp fg trb stl blk rf randomforestregressor rffit train predictorcolumns train ast prediction rfpredict test predictorcolumns main difference needed use randomforest library r use algorithm whereas built scikitlearn python scikitlearn unified interface working many different machine learning algorithm python usually one main implementation algorithm python r many smaller package containing individual algorithm often inconsistent way access result greater diversity algorithm many several implementation many fresh research lab bit usability hitcalculate errornow fit two model let calculate error use msermean test ast prediction sklearnmetrics import meansquarederror meansquarederror test ast prediction python scikitlearn library variety error metric use r likely smaller library calculate mse manually pretty easy either language small difference error almost certainly due parameter tuning big dealdownload webpagenow data nba player let scrape additional data supplement look one box score nba final save timer library rcurl url http data readlines url python import request url http data requestsget url content python request package make downloading web page easy consistent api request type r rcurl provides similarly simple way make request download webpage character datatype note step unnecessary next step r shown comparison sakenow web page need parse extract score playersrlibrary rvest page readhtml url table htmlnodes page statstable row htmlnodes table tr cell htmlnodes row td team htmltext cell extractrow function row return row row tag td tag th item htmlnodes row tag htmltext item scrapedata function team teamdata htmlnodes page paste team basic sep row htmlnodes teamdata tr lapply seqalong row extractrow rowsrows data lapply team scrapedata python import beautifulsoup import soup beautifulsoup data htmlparser boxscores tag soupfindall idrecompile az basic row row enumerate tagfindall tr continue elif tag th else tag td rowdata itemgettext item rowfindall tag rowsappend rowdata boxscoresappend row create list containing two list first box score cle second box score gsw contain header along player ingame stats turn training data could easily transformed format could added nba dataframethe r code complex python code convenient way use regular expression select item additional parsing get team name html r also discourages using loop favor applying function along vector use lapply since need treat row different depending whether header pas index item want entire row list functionwe use rvest widelyused r web scraping package extract data need note pas url directly rvest last step needed rin python use beautifulsoup commonly used web scraping package enables u loop tag construct list list straightforward waypython v r conclusionwe taken look analyze dataset r python many task dive persisting result analysis sharing result others testing making thing productionready making visualization lot discus topic based done draw meaningful conclusion r functional python objectorientedas saw function like lm predict others r let function work contrast linearregression class python sample method dataframesr data analysis builtin python relies packageswhen looked summary statistic could use summary builtin function r import statsmodels package python dataframe builtin construct r must imported via panda package pythonpython main package data analysis task r larger ecosystem small packageswith python linear regression random forest scikitlearn package offer consistent api wellmaintained r greater diversity package also greater fragmentation le consistency linear regression builtin lm randomforest separate package etc r statistical support generalr built statistical language show statsmodels python package provide decent coverage statistical method r ecosystem far largerit usually straightforward nonstatistical task pythonwith wellmaintained library like beautifulsoup request web scraping python far easier r applies task look closely like saving database deploying web server running complex workflowsthere many parallel data analysis workflow boththere clear point inspiration r python panda dataframes inspired r dataframes rvest package inspired beautifulsoup ecosystem continue grow stronger remarkable similar syntax approach many common task languagesthe final word python v rat dataquest best known python course totally reworked relaunched data analyst r path feel r another crucial language data science see language complementary language strength weakness either language could used sole data analysis tool walkthrough prof language lot similarity syntax approach go wrong either oneultimately may end wanting learn python r make use language strength choosing one perproject basis depending need course knowing also make flexible job candidate looking position data science world
598,Lobsters,visualization,Data Visualization,How to know if where you live is “up and coming”: fried chicken vs. coffee shops,https://medium.com/@Sam_Floy/how-to-know-if-where-you-live-is-up-and-coming-fried-chicken-vs-coffee-shops-546080119f98,know live coming fried chicken v coffee shop,know live coming fried chicken v coffee shop chicken nugget caffeine hit hot house calculating coming result move coming southwark woolwich isle dog collier wood willesden junction store bicycle repair shop street price coriander density shop selling quinoa,know live coming fried chicken v coffee shopswhilst searching flat london lamented hear estate agent described area coming rather believe phrase merely plucked air struck upon theory future house price could explained looking relative number coffee shop fried chicken areaenlisting help data scientist three heatmaps london created visualise coffee shop chicken shop expensive house citychicken nuggetsthis show part city highest density fried chicken shop holloway particularly flush stuff whereas canary wharf little hitswestminster hampstead evolved serve macchiatos neighbour kilburn stratfordhot housesthe brighter area correspond zero mortgage kensington beaconcalculating coming data became possible make estimate area london risewith assumption ratio coffee shop chicken shop indication future prosperity resultant uplift house price following characteristic make area legitimately coming high density coffee shopslow density chicken shopslow house pricesand result peckham data suggests one place upping stick moving good selection coffee shop many outlet selling fried fairly low house pricesthough peckham move coming displaying data slightly different way possible get bird eye view area london comingthis furnishes discernible property investor guide purchase higher yielding house also provide decent flat whitefirst area london average house price shown map quite frankly anything probably made estate agent parlancenext taking ratio coffee shop chicken shop one able visualise part city costa beating coloneland combining two purple haze appears area intense purple weighted towards coffee chicken theory would suggest aptly categorised coming well peckham area interest property buyer hunt next best thing southwark woolwich isle dog collier wood willesden junctionwith first report predict london house price complete investigation factor duly followcurrently pipeline study ratio store bicycle repair shop fluctuation street price coriander density shop selling
599,Lobsters,visualization,Data Visualization,Proportion of devices running vulnerable versions of Android,http://androidvulnerabilities.org/,proportion device running vulnerable version android,device analyzer submit contact u,able produce score due contribution made device analyzer member public device analyzer app longer available information project still available link information vulnerability listed site submit mdm data want know device used organisation vulnerable help contact u
600,Lobsters,visualization,Data Visualization,Down the Rabbit Hole of The Ol' Reddit Switcharoo,http://imgur.com/gallery/Q2seQ,rabbit hole ol reddit switcharoo,javascript disabled browser enable j,seeing message mean javascript disabled browser please enable j make imgur work
603,Lobsters,visualization,Data Visualization,Dot Plots: A Useful Alternative to Bar Charts (2006),https://www.perceptualedge.com/articles/b-eye/dot_plots.pdf,dot plot useful alternative bar chart,,obj endobj xref n n n n n n n n n n n n n n n n trailer startxref eof obj stream y sb endstream endobj obj endobj obj endobj obj colorspace font procset pdftextimagec extgstate endobj obj endobj obj endobj obj iccbased r endobj obj endobj obj endobj obj endobj obj stream ҭ h q z e g endobj obj endobj obj stream ӥ f h h
604,Lobsters,visualization,Data Visualization,Venture Dealr,https://dlopuch.github.io/venture-dealr/,venture dealr,venture dealr visualize turn knob venture financing concept dilution option pool liquidation preference downrounds alpha draft floatrock datahero,venture dealr visualize turn knob venture financing concept dilution option pool liquidation preference downrounds alpha draft yet public distribution hold share button still buggy yo dan lopuch floatrock collaboration datahero
606,Lobsters,visualization,Data Visualization,The time it takes to change the time,http://blog.poormansmath.net/the-time-it-takes-to-change-the-time/,time take change time,map showing difference solar time standard time time zone triggering event month russia change time country ukraine georgia introduction mexico could observed china australia central western time fewer resident kilometer border draw map blatantly xkcd create tool solar time v standard time repository ingredient datasets eric muller website fips esri datasets boundary writing label label line timezones data correction see also two cent daylight saving time much time wrong around world global time emotional time annoyance dst,might remember last year map showing difference solar time standard time might far shared content created somebody even uploaded wikipedia time zone article great power come great responsibility case mean keeping map date whim time regulator change would think rare event consider sovereign state world quadratic number possible conflict becomes frequent event indeed triggering event prompted draw new version bad color choice first attempt many people green red play well together neither small mistake zone division even political faux pa marking taiwan way sovereign state map drawn top existing one found wikipedia minor modification apart gradient real reason month releasing map russia decided change time country since russia extends world area emerged land area issue obvious ignore apart big change new map reflects territory ukraine georgia follow moscow time instead country timezone introduction southeast timezone permanent quintana roo mexico continental mexico degree longitude wide tijuana cancun two timezones would make sense instead four solar time v standard time overall map still skewed towards red mean solar noon later day could observed first version still valid particular joy reddit commentator china still red sadly one change happen australia still refuse make central western time aka awesome timezone official see difference western central australia whole hour half big problem people live transition zone apart narrow strip along southern coast road perth adelaide proud people live time made official would timezone fewer resident followed lord howe island chatham island apart ephemeral timezone bird inhabit two u island howland baker emerged land whopping squared kilometer since uninhabited nobody ever said time follow unofficially happen correct longitude mentioned minute unusual large difference neighboring timezones since course usual one hour many place much larger difference always involve china thanks single big timezone worst offender kilometer border afghanistan china difference three hour half draw map drawing first version map long process done le hand modifying source existing svg file definitely want go process something else change blatantly ignored xkcd proceeded create tool would create map real value tool future depends availability date data still trick thinking saved time tool mention following found solar time v standard time repository looking map people often realize many ingredient combine create take lot thing granted map probably subaverage number ingredient though see timezone boundary sea approximate territorial water boundary intricate draw landwater country boundary timezone territory different hierarchy country country might one timezone timezone might encompass country city coordinate label country city timezones luckily datasets available unique source maybe slightly date source turn choosing best term accuracy license important step creating map programmatically case timezones come eric muller website country boundary turn come fips dataset homogeneity important quality since timezone boundary rare dataset made sense take country boundary eric well coordinate major city info useful select whose show instead came esri datasets getting data first step second hard draw svg boundary involves templating create file importantly translating latitude longitude pixel coordinate choice projection constrained rectilinear projection drawing gradient much simpler sticked miller third step writing label important choice faster design algorithm try place label automatically place semimanually first option easy would frame optimization problem function optimize depends distance label refer size much overlap admit try instead semimanual approach consists placing label reasonable position centroid country anchored coordinate city tweak label need tweaking fourth step drawing label line timezones label wrote list position wanted manual line theory good approximation could drawing equispaced meridian map becomes hard read make easier job drawing lot polylines map wrote simple helper tool based map api allows draw directly map retrieve coordinate vertex json format finally last step data correction eric muller data sadly completely date fix easy changing offset timezones others simple eventually decided use gimp draw final image generated program explains gimp file repository shifting center map cut point siberia also done postprocessing theory easy projection stage source datasets already split land meridian made convenient use cut point projection see also two cent daylight saving time much time wrong around world global time emotional time annoyance dst
607,Lobsters,visualization,Data Visualization,Learning programming at scale,http://radar.oreilly.com/2015/08/learning-programming-at-scale.html?cmp=tw-prog-free-article-oseu15_learning_programming_at_scale,learning programming scale,mooc pythontutorcom visualize program execution pythontutorcom python java javascript typescript ruby opensource nodejs docker jsplumb ace research paper codechella multiuser code visualization codechella codeopticon onetomany remote tutoring codeopticon codepourri crowdsourced tutorial generation codepourri philip pgbovinenet fluent python reference,million people around world aspiring software engineer data scientist want learn programming one best way learn working sidebyside personal tutor good tutor watch code help debug explain tricky concept demand provide encouragement keep motivated however u lucky enough tutor side take class might student every teacher take mooc massive open online course might student every professor ta learning book online tutorial tutor even fellow learner sight given reality computerbased tool potentially bring benefit facetoface learning million people around world access inperson tutor begun address question building opensource tool help people overcome fundamental barrier learning programming understanding happens computer run line program source code without basic skill impossible start becoming fluent programming language example learning python might hard understand running code produce following three line output tutor explain code print drawing variable data structure pointer execution step however personal tutor pythontutorcom visualize program execution mimic human tutor would illustrate code execution developed pythontutorcom using tool choose programming language write code browser tool currently support python java javascript typescript ruby run code use slider step forward backward execution step see visualization execution state step featuring stack frame variable data structure pointer see terminal output current step tool help people build robust mental model code behind scene crucial learning programming language far million people country used visualize million piece code often supplement learning moocs digital textbook online tutorial pythontutorcom free opensource software built upon nodejs docker backend jsplumb ace frontend read research paper detail codechella multiuser code visualization visualizing execution helpful would better tutor sit side explain visualization support use case developed tool called codechella enables multiple people connect single pythontutorcom session use codechella click start shared session button top pythontutorcom interface send unique session url tutor bring session two write code together collaborative text editor also see synchronized view visualization explore together chat using embedded chat box see mouse cursor real time codechella approximates intimate experience people huddling around single computer learn together first nine month deployment people city across country participated session chatting different language session participant joined different city different country show codechella connected people otherwise unable get together learn facetoface codeopticon onetomany remote tutoring codechella work well oneonone tutoring usually far fewer tutor learner instance large university course mooc ta might responsible helping hundred even thousand learner way devote time tutoring everyone individually make scarce time developed realtime dashboard interface called codeopticon tile interface eight shown display one learner action real time writing running visualizing code pythontutorcom active learner tile always shown top tutor see learner code edits real time insertion green deletion red see code error red could reveal learner struggle use slider see history learner action could also reveal struggle start chat number learner directly tile learner see embedded chat box pythontutorcom session similar using codechella codeopticon scale single tutor scarce attention monitor help multiple learner user testing found tutor could keep eye around learner session start chat conversation concurrently help learner tutor felt surprisingly immersed experience though helping student facetoface computer lab codepourri crowdsourced tutorial generation codeopticon useful making single tutor limited time learning without tutor sight taking mooc using online resource stackoverflow pythontutorcom hundred learner website time somehow call help student mitchell built tool called codepourri explores possibility using codepourri upload code pythontutorcom let crowd people collectively create tutorial annotating execution step visualization example four step tutorial explaining simple loop work deployed codepourri live pythontutorcom recruited crowd learner volunteer annotate two piece python code textbook crowd wrote total annotation panel four python expert judged annotation correct correct one containing surprising insight even expert consider crowd voted best annotation step include final tutorial expert judged learnercreated tutorial comparable expert would create experiment show least simple code codepourri allows summon crowd fellow learner explain piece code work even expert around recap pythontutorcom three extension built upon codechella codeopticon codepourri bring benefit facetoface learning million people around world want learn programming access inperson tutor email philip pgbovinenet question project editor note learn write effective idiomatic python code leveraging best possibly neglected feature fluent python luciano ramalho reference
608,Lobsters,visualization,Data Visualization,SQL Joins,https://i.imgur.com/1m55Wqo.jpg,sql join,,c c g h p yyhh ry ރ poy
609,Lobsters,visualization,Data Visualization,A Linear Map of Lake Michigan,https://somethingaboutmaps.wordpress.com/2015/09/28/a-matter-of-perspective/,linear map lake michigan,make map penrose binning rob roth petition ojibwe chief kechewaishke geocentric directional system alasdair rae nick martinelli handdrawn example ogilby map british road design thought gill sans sort mill goudy website told evan applegate made map road u national map small scale atlas canada million national framework river natural earth lake tiger canadian census boundary file state population density handy one statistic canada census shapefiles distortion christopher alfeld wolfram alpha city label locallyenhanced hypsometric tint next step vertical horizontal welcome make donation support continued work like,today wanted share little project mine month ago may best described question happens take shoreline lake cut unfurl onceclosed shoreline lake becomes linear providing new perspective familiar feature warm scrolling finger happened linearized lake michigan click even larger version take browse around drive around lake becomes reasonably straight line map actually continuous road running bottom map coming top provides unique perspective way people arrange around lake get little bit first big question seeing map people ask actually point usually put make map like many project filed stuff spent huge amount time making know partially see could pleased technical achievement figured construct map end result idle novelty like penrose binning made map wanted show space referenced natural feature rather figuring location based cardinal direction northsouthetc think human perspective grounded relate lake rather look space rob roth wandered writing said depicted configural knowledge search term want read academic side sort thing idea took shape mind reminded couple thing heard past first petition ojibwe chief sometimes attributed kechewaishke follow link read interpretation short version map depicts relationship various natural feature northern wisconsin spatial information presented grid accustomed vast expanse lake superior compressed thick horizontal blue line true size shape relevant instead map depicts understanding relationship rather physical measurement working map also reminded slate article geocentric directional system thanks alasdair rae reminding find story bali might find direction described term northsouthetc instead whether one moving clockwise counterclockwise around island moving toward away nearest major mountain orientation reference surroundings rather superimposed grid sure either direct inspiration certainly back mind got work example uncommon way thinking depicting space besides opportunity play around fun perspective also sentimental personal project lived almost whole life map one part another lake michigan dominant feature personal geography anchor understanding homeland raised another context plain along ocean coast think would ever thought something like whether upbringing figured map make perfect sense feel right also emphasizes far apart current home madison wi seems former home kalamazoo mi path involves driving around vast expanse water certainly first something like shortly post went learned nick martinelli sketched handdrawn example linearizing idea earlier year straightened oregon imagine cool example know nick martinelli linear oregon sketch handdrawn map best plenty linear map people brought attention though comparison might sometimes inexact work like ogilby map british road start feature already linear rather straightening closed shape design thought get map made random observationsthoughts design whole concept behind map weird end product look odd wanted far possible naturalize distorted perspective make feel like perfectly normal see world way warm color meant feel organic also feel like something see runofthemill map drawing attention shouting hey look made weird distorted perspective attractive understated brownish tone population density raster included partly matter visual interest thing flat considered putting city boundary instead showing noisy distribution human way rather hard political boundary natural feeling trying make map feel organic include legend density feel like reader figure quickly browner people especially city label like distraction adding legend especially since actual density number irrelevant possibly annoying fondness really putting much explanation map decided go gill sans city highway label used much feel little older classic think fit idea attractive understated aesthetic using typeface like sell idea normal natural way see world used sort mill goudy lake website told real typography geek secret often look online see people think opinion make sense might adopt search serif pair gill sans went suggestion made sense map formatted print fabulously inconvenient size one difficult decision rotate map actually started horizontal orientation land bottom water top seemed embody feeling sitting land looking toward water however evan applegate pointed ever put website people would dislike scroll horizontally rotated relabeled surrendering tyranny modern digital device center another concern map start chicago top familiar location print probably put chicago near center someone looking whole object person think start top way forced see digital version post want chicago familiar anchor people see early begin understand happening boil digital display really limit ability appreciate map would great could go back printed map made map let get made thing began compiling data arcmap pretty much though making ordinary map road population density state boundary hydrography road u national map small scale atlas canada million national framework selected road interstate u route part transcanada highway canadian national highway system river source lot river data set thinned network heavily actually took river natural earth million scale data natural earth linework coarse guide detailed million vector use source lake plus two detailed set tiger canadian census boundary file detailed set three purpose wanted detail lake michigan coastline since lot attention would drawn generalized lake michigan polygon always line well population data using detailed coastline helped fix gap went along manually generalized linework detailed look good coarser u million scale data fine smaller lake sometimes lake weirdly wrong place occasionally use tiger data manually correct position generalized data also eliminated lake sqmi keep thing clean simple state u national map small scale population density u used census data rather join census data shapefiles found handy one already selected demographic already attribute table canada grabbed data statistic canada said wanted population density layer add visual interest wanted fairly finely textured initially used census block smallest geographic unit available way many file made illustrator unhappy stepped larger unit like block group tract little detail rural area used mix block rural area tract urban area used census shapefiles urbanized area make distinction drastically reduced polygon count keeping detail wanted rural area urban area downgrade resolution unnoticeable map scale used mixed census shapefile make sortofunclassed choropleth population density reality got class close enough unclassed tell since aware properly unclassed one arcmap however classing linear instead show square root population density big fan giving unclassed map nonlinear treatment drafted unfinished blog post year ago case using square root reveals small change lowdensity area detail would otherwise washed linear choropleth would major city visible much else density chicago milwaukee would skew color scheme much small village hamlet country would unseen taking square root data deemphasizes densest area helping fix actually tell secret showed root density square root way detail obsessive extra root made tiny difference liked never notice notice town appear freed tyranny linear color scheme finally applying classing clipped top data densest place look color change outside someplace top keep densest outlier skewing everything distortion come fun part linearizing map first drew simple polygon around lakeshore illustrator bisected angle polygon create skewed quadrilateral going inland lake drew line one going inland length created sort rough buffer around lake final map would end including place within certain distance lakeshore line going lake made long enough cover peninsulae nearby island bit land fell side original simple polygon actually make linear map needed take skewed quadrilateral unskew rectangle stack one straighten quadrilateral way drew upon expertise christopher alfeld mathematicianprogrammer friend answer lot math briefly understood knowledge since vanished ether left equation determined needed use x new coordinate transformed quadrilateral asking wolfram alpha solve variable get fortunately wolfram alpha output equation image retype unfortunately wolfram alpha output equation image retype actually wrote code make map implement wrote python script load svg applies transformation kick new svg find existing python svg parser could immediately figure biggest part script writing simple one obligatory code screenshot share real thing think need tweak first settled could make map needed go untransformed map illustrator select one skewed quadrilateral eliminate artwork outside quad save svg run script load newly generated svg illustrator stack unskewed quad together new illustrator document style everything wrinkle along way increase point density linework eg straight line two point becomes straight line point shape could warp little smoothly also equation whatever reason work right first rotated skewed quad one line horizontal would smart done javascript run script within illustrator rather sending svg back might next thing city label finally labeling city decided every one significant one problem decide significant labeling every city certain population threshold work would miss locallyimportant small town giving attention every single suburb milwaukee chicago instead needed way measure regional significance ended process fairly similar one developed locallyenhanced hypsometric tint short version used population density shapefiles make raster pixel raster checked see many standard deviation regional mean density region radius circle knew whether pixel density regionally significant whether merely dense surroundings city summed pixel get score regionally relevant labeled highestscoring city worked pretty nicely chicago suburb people make cut small town middle nowhere get labeled landmark area much like scale rank occur natural earth populated place shapefile idea next step said sure right stick couple people asked getting print also put zazzle find vertical horizontal version presenting work showing print version like great lake put onto one impractically sized poster maybe someone would want map might also make nice wallpaper border suppose went back horizontal orientation mostly though want get front people eye provide new perspective familiar feature made way end post bonus also lake superior click even larger version take browse around offer project free pdf take time effort derive value welcome make donation support continued work like like loading
610,Lobsters,visualization,Data Visualization,"MathBox² — ""PowerPoint Must Die""",http://acko.net/blog/mathbox2/,powerpoint must die,,root id scale camera id proxy true position clock id speed id bend shader id code uniform float uniform float uniform float uniform float uniform float uniform float uniform float uniform float xyzw inout stpq xyzwxy xyzwxy xyzwzw xyzwzw xyzwxz xyzwxz xyzwyw xyzwyw return xyzw mathcos mathsin mathcos mathsin mathcos mathsin mathsin mathsin mathcos mathsin mathsin mathsin vertex id area id rangex rangey τ width height expr emit θ ϕ j mathsin θ mathcos θ mathsin ϕ mathcos ϕ emit live false channel line id color area id rangex rangey τ width height expr emit θ ϕ j mathsin θ mathcos θ mathsin ϕ mathcos ϕ emit live false channel line id color area id rangex rangey τ width height expr emit θ ϕ j mathsin θ mathcos θ mathsin ϕ mathcos ϕ emit live false channel line id color vertex clock root
611,Lobsters,visualization,Data Visualization,Apparatus: A hybrid graphics editor and programming environment for creating interactive diagrams,http://aprt.us/,apparatus hybrid graphic editor programming environment creating interactive diagram,github tutorial documentation editor interface javascript expression note github issue development active development apparatus google group available github contributed code toby schachman communication design group cdg,apparatus apparatus hybrid graphic editor programming environment creating interactive diagram apparatus editor run browser interactive diagram created apparatus shared embedded web coming soon apparatus free opensource software development github tutorial make face make clock make color picker make bar chart make plot make polygon documentation editor interface javascript expression oneliners evaluated multiline expression use return end var x return x x javascript math constant method scope additionally constant tau pi scope color utility function rgba r g b scope rgba rgba use spread create spread create range spread create range increment spread turn javascript array spread spread note apparatus still early stage project likely bug please report issue github issue page thanks apparatus aim support modern browser mostly tested chrome apparatus autosave diagram crash stop working try refreshing diagram restored last working state development apparatus active development discus apparatus evolve apparatus google group source code available github mit license contribution welcome big thanks contributed code apparatus apparatus originally developed toby schachman research project within communication design group cdg sponsored sap lab thanks bret victor paula te matthias graf michael nagle chaim gingold robert ochshorn glen chiacchieri joshua horowitz ian johnson simon last ivan zhao emily eiffler vi hart monique desalvo design discussion beta testing encouragement
612,Lobsters,visualization,Data Visualization,"Years You Have Left to Live, Probably",http://flowingdata.com/2015/09/23/years-you-have-left-to-live-probably/,year left live probably,progress country wideout view social security administration die going end,life expectancy average woman united state year month men year month recent estimate center disease control prevention subtract current age number rough estimate many year left feel accurate feel precise people die various age life imprecise otherwise could plan day way last also life expectancy typically quoted birth number year baby expected live moment escape womb wondrous reality outside world good measure progress country fine wideout view soso individual range life expectancy much interesting toggle age sex see possibility graphic us data social security administration simulate possible lifetime plural line show probability live see next birthday given age sex running dot represents possibility expected probability live next year decrease age people age live see next year probability shift towards zero relatively quickly let simulation run long enough flip fast switch distribution always converges towards curve skews towards older expected individual data point much le predictable well depending age course example female year old average life expectancy year however let simulation run single average value represents wide span mostly rest year le room error centenarian said shift slider higher say older see happens life expectancy increase ball tend drop farther past overall life expectancy point shift later year life like hey pretty good aging game better probably going live longer average person pose interesting question retirement planning sustaining long life let save topic another time male distribution still open lot possibility probably look life insurance die know many year life left going end
613,Lobsters,visualization,Data Visualization,The Sonification Handbook,http://sonification.de/handbook/index.php/chapters/,sonification handbook,chapter introduction pdf theory sonification pdf psychoacoustics pdf perception cognition action auditory display pdf sonic interaction design pdf evaluation auditory display pdf sonification design aesthetic pdf statistical sonification exploratory data analysis pdf sound synthesis auditory display pdf laboratory method experimental sonification pdf interactive sonification pdf audification pdf auditory icon pdf earcons pdf parameter mapping sonification pdf modelbased sonification pdf auditory display assistive technology pdf sonification process monitoring pdf intelligent auditory alarm pdf navigation data pdf aiding movement sonification exercise play sport pdf,chapter chapter title link website medium file introduction pdf thomas hermann andy hunt john g neuhoff theory sonification pdf bruce n walker michael nees psychoacoustics pdf simon carlile perception cognition action auditory display pdf john g neuhoff sonic interaction design pdf stefania serafin karmen franinovic thomas hermann guillaume lemaitre michal rinott davide rocchesso evaluation auditory display pdf terri l bonebright john h flower sonification design aesthetic pdf stephen barrass paul vickers statistical sonification exploratory data analysis pdf sam ferguson william marten densil cabrera sound synthesis auditory display pdf perry r cook laboratory method experimental sonification pdf till bovermann julian rohrhuber alberto de campo interactive sonification pdf andy hunt thomas herman audification pdf florian dombois gerhard eckel auditory icon pdf eoin brazil mikael fernström earcons pdf david mcgookin stephen brewster parameter mapping sonification pdf florian grond jonathan berger modelbased sonification pdf thomas hermann auditory display assistive technology pdf alistair n edward sonification process monitoring pdf paul vickers intelligent auditory alarm pdf anne guillaume navigation data pdf eoin brazil mikael fernström aiding movement sonification exercise play sport pdf oliver höner ed
614,Lobsters,visualization,Data Visualization,The Sound of Code,http://www.youtube.com/watch?v=sEI0wBkgf1w,sound code,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature sound code youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature sound code youtube
615,Lobsters,visualization,Data Visualization,The Cartographer Who’s Transforming Map Design,http://www.wired.com/2014/10/cindy-brewer-map-design/,cartographer transforming map design,north american cartographic information society atlas accompanied census rookie mistake scalemaster brewer website typebrewer map symbol brewer,brewer seemed attract small crowd everywhere went recent cartography conference sat student colleague milled around waiting chance talk walked gaggle people followedbrewer chair geography program penn state popular figure part devoted much career helping people make better map bringing research visual perception bear design brewer say cartographer make map effective intuitive understand many lesson apply equally well type data visualizationbrewer bestknown invention website called color brewer help mapmakers pick color scheme wellsuited communicating particular type data mapping recently moved cartographic design dilemma picking font deciding feature change disappear scale map change zoom noncartographers would say currently helping u geological survey apply lesson learned research redesign huge collection national topographic mapsoh use rainbow color scheme sequential data color brewer prevents making cartographic blunder cynthia brewer mark harrower pennsylvania state university matching perceptual dimension data dimension brewer said managed catch annual meeting north american cartographic information societybrewer thinking issue since graduate day michigan state idea color brewer grew sabbatical u census bureau overseeing atlas accompanied census trying really systematic color throughout atlas said mapmakers liked color set developed began asking brewer set color brewer make readily availablethe site simple intuitive interface force think first foremost kind data trying map value go low high population density temperature color brewer steer towards color scheme progress light dark allow make rookie mistake picking rainbow paletteif hand interesting data deviation area unemployment brewer steer toward diverging color scheme red one end say blue mapping different category different religion ethnicity color brewer suggest mix color easy distinguish fewer usually better seven brewer say get really hard tell apartyou also toggle button eliminate color scheme ca nt read color blind people one nt photocopy well finally see choice applied sample map check color chosen easily distinguished othersa big reason people run trouble color scheme brewer say way color picking done many software program take rgb cube slider many program use display color along red green blue ax example least bit perceptually scaled brewer said part cube tiny step give huge perceptual difference part look want create series green instance vary light dark keep hue saturation happens good way represent sequential data often easy intuitive way thatbut software developer starting catch brewer nt keep track color scheme embedded several software package including statistical graphic program r arcgis pro new product professional cartographer esri dominant producer mapmaking softwarea page scalemaster tool number top indicate map scale range cindy brewercolor nt design element could benefit type standardization recently brewer turned attention scale map zoom cover larger area feature need disappear change size keep map getting cluttered brewer colleague developed tool called scalemaster help mapmakers decide feature include given scale change thing like thickness line size symbol text keep map legibleso far excel spreadsheet available brewer website much rougher tool colorbrewer multiscale mapping useful keep track feature change saidthe approach could also applied font font like hue brewer said give map different look font make map look jaunty serious example help emphasize important information bad font choice undermine map intended message one brewer phd student elaine guidero investigating essential characteristic imbue font particular tone personality speakbrewer influence cartography farranging others imitated approach developing typebrewer map symbol brewer seen color scheme everything financial chart brain imaging study pretty cool minding business reading magazine paper see one color scheme said nt collect example often colleague send one penn state colleague even used colorbrewer choose color office picked nice magenta color sequence brewer said
616,Lobsters,visualization,Data Visualization,Nuclear explosion impact shown on Google maps,http://nuclearsecrecy.com/nukemap/,nuclear explosion impact shown google map,,drag marker wherever like target select preset washington dc usa new york ny usa boston usa los angeles ca usa san francisco ca usa chicago il usa philadelphia pa usa honolulu hi usa moscow russia london england paris france berlin germany beijing china new delhi india islamabad pakistan tokyo japan pyongyang north korea seoul south korea tehran iran tel aviv israel trinity site nm usa hiroshima japan nagasaki japan elugelab enewetak marshall island namu island bikini atoll marshall island sedan crater nevada test site nv usa tsar bomba site novaya zemlya russia type name city go
617,Lobsters,visualization,Data Visualization,Plane Truth - Every single commercial plane crash of the last 20 years,http://www.informationisbeautiful.net/visualizations/plane-truth-every-single-commercial-plane-crash-visualized/,plane truth every single commercial plane crash last year,plane truth every single commercial plane crash last year every single commercial plane crash last year,plane truth every single commercial plane crash last yearsevery single commercial plane crash last year excludes small plane le passenger noncommercial cargo military private nb interactive currently workinprogress
618,Lobsters,visualization,Data Visualization,Billion Birthday,http://billionbirthday.com/,billion birthday,,number billion almost unimaginable way help imagine use nine measure time look forward back birthday mark celebrate keep counting measure billion second life
620,Lobsters,visualization,Data Visualization,Find Waldo Faster,http://blog.wolfram.com/2015/02/27/find-waldo-faster/,find waldo faster,magazine write algorithm follow randal olson getting data image processing segmentation ben blatt approach musing randy olson approach traveling salesman problem spline curve grand unification diehard shortestpath buff network approach nazca line concluding remark computable document format cdf,martin handford spend week creating single waldo puzzle hiding tiny red white striped character wearing lennon glass bobble hat among ocean cartoon figure immersed amusing activity finding waldo puzzle objective hiding well perhaps even challenging martin said work way picture add wally come feel good place hide aware ben blatt slate magazine wondered possible master waldo mapping handford pattern ben devised simple trick speed waldo search sense observation allowed jon mcloone write algorithm beat human rockpaperscissors game jon put rely fact human good random reader sharp eye see set point two image image different visualization data data show spot waldo hide special edition seven classic waldo book big thanks go ben blatt sat three hour barnes noble bookstore measuring tape painstakingly constructing fabulous dataset ben study follow randal olson michigan state university suggested different approach based density waldo spot shortest path algorithm post go approach suggest final result getting data start getting coordinate waldo hideout seven classic puzzle ben blatt indicated single image importing data see schematic dualpage open puzzle book hideout marked red spot spot text inside labeling book page puzzle belongs text important u moreover need removed order obtain coordinate wolfram language image processing tool easy find coordinate red spot spot overlap need robust segmentation account spot separately different approach code one arranged see effect stepbystep application image processing function binarize used reduce complex rgb image data simple matrix binary image colornegate followed fillingtransform heal small crack inside spot due text label erosion diskmatrix diminish separate overlapping spot finally selectcomponents pick spot filter white pixel specifying rough number pixel spot getting spot center image coordinate system done componentmeasurements also verify exactly coordinate pair precision routine illustrated placing blue circle coordinate encompass hideout pretty accurately even overlapping one note sizable textbox topleft corner always present original puzzle deforming data bit transition image coordinate system actual book one single waldo puzzle take doublepage spread measuring inch ben blatt approach quoting ben percent time waldo hiding within one two tall band one starting three inch bottom page another one starting seven inch bottom stretching across probability two band containing least percent waldo remarkably slim le percent word finding coincidence keen observation obvious looking scattered dataset illustrate defining geometric region equal single strip note handy new implicitregion function see band contain waldos scan doublepage spread vertically small step counting percentage point contained band percentage shown left plot corresponding band position shown right one clearly sharp peak inch would amount almost two identical band placed maximum widening band adding would raise percentage also add area cover search would increase search time total percentage two band maximum amount ben claimed attribute error quite approximate data acquisition musing randy olson approach randy deeper statistical algorithmic take waldo data first visualized density point smooth function higher density greater probability finding waldo surrounding area density plot quite irregular pattern different ben two simple band irregular pattern precise description harder remember strategy randy decided approach problem traveling salesman problem need check every possible location waldo could taking little time possible mean need cover much ground possible without backtracking get similar plot density point right away smoothdensityhistogram add two thing first shortest tour point ie traveling salesman problem solution found findshortesttour list order consecutive location visit length tour minimal first number tour length tour closed loop different randy open path b could remember tour exactly could always follow find waldo quickly complex better comprehend shape smooth spline curve compare visualization original plain scattered plot point may get feeling point scattered plot optical illusion suspect related different dimensionality two visualization point along curve perceived onedimensional object covering much le area scatter plot point perceived twodimensional covering almost area visualization help give first impression data overall distribution pattern background density visual guide remembering finding waldo probable line point guide optimal trajectory scan puzzle eye two must related somehow right indeed make probability density background precise local sharp sort wrap around tour see image smoothdensityhistogram based smoothkerneldistribution pretty easy grasp based formula kernel k x function choice h defines effective sharpness locality resulting density function see making distribution sharper decreasing h localize density around shortest tour also chosen different kernel cosine function changed several minor visual setting tour spline density show flexible option tuning overall appearance anyone liking getting spline tour widening could get closer pattern density region thickenough spline would overlap density higher vice versa localizing density kernel get density envelope spline tour quite marvelous see one mathematical structure mimic another well nice looking image terribly useful unless good visual memory let think potential improvement currently closed loop shortest tour mean going left right page returning back could find oneway shortest path traverse left right randy olson genetic algorithm modified findshortesttour artificially set distance start end point zero thus findshortesttour forced draw link start end traverse rest point finally fake zerolength startend link removed get disconnected starttoend point path also get rid single outlier point topleft corner sort point order increasing horizontal coordinate outlier influence much even solution easily checked area textbox small next find shortest path bottomleft bottomright corner choose different visual option provide alternative appearance randy used similar different path devise lessdetailed schematic trajectory instruction eyescanning puzzle grand unification dualpage book spread natural think term page people habitually examine page separately looking first density plot made one see big density maximum left another one stretched toward right perhaps worth looking analysis done page independently let split point two set belonging different page walk step slightly changing visual detail indeed simple pattern emerges see following two character left right page correspondingly slanted capital l math angle cyrillic и would suggest following strategy avoid top bottom page avoid topleft corner left page start left page walk capital slanted l eye starting bottom ending crossing diagonally bottom left top right continue right page walk capital cyrillic и starting top left ending bottom right via иzigzag waldo found visit area step two approach density shortest path make full turn lead back original simpler band idea prefer something simpler might notice density plot two maximum page along diagonal mirroring across vertical page split quite point along diagonal could attempt build two band following geometry compare region original slate design using regionmeasure see pattern larger area also cover waldo position blatt region provides simpler shorter oneway scanning puzzle instead walking left right twice along two band concerning strategy imagine two square inscribed page walk diagonal scanning band inch thick strategy tell look waldo first tell look failed find along two diagonal seen splitpage density plot final visualization showing diagonal band covering four maximum diehard shortestpath buff traveling salesman problem npcomplete thus possible worstcase running time algorithm solving grows superpolynomially even exponentially number point findshortesttour work large datasets way adapted findshortesttour default return loop path shortest disconnected path two given point bit dodgy force findshortesttour work properly dataset considering waldo position vertex graph general findshortesttour set point ndimensional space essentially find shortest tour completegraph want path additional constraint start end point augment graph extra vertex join given start end point question distance extra vertex really matter findshortesttour forced pas section startextraend point work connected graph necessarily complete graph shown finding tour augmented graph remove extra vertex edge shortest tour disconnect go start end point build symmetric weightedadjacencymatrix computing euclideandistance every two point simply build weightedadjacencygraph based matrix add extra vertex fake unit distance start side note show pattern data appear even abstract object weightedadjacencymatrix old new sorted order point visually drastically different matrix case property would generate graph left point unsorted right point sorted according shortest tour brighter color pair remote point let define whole function return visualize shortest tour based network approach applying waldo dataset get beautiful short path visual complete graph way latest wolfram language release stateoftheart findshortesttour algorithm illustrate remind famous art form drawing made single line interruption sculpture single wire piece oldest example know simultaneously largest nazca line peru could measure hundred foot span instance aerial image hummingbird nazca line perceived large adjacent oneline drawing pablo picasso picasso art complex pretty easy guess human harder harder time drawing subject line get longer intricate turn exactly findshortesttour excels portrait computed findshortesttour spanning single line point redraw mona lisa idea quite simple image reduced two color colorquantize findshortesttour draw single line coordinate dark pixel simply chaos line rather recognizable image shortest tour connecting closer neighbor often le costly thus mona lisa oneliner segment spanning across large white space concluding remark gratitude go martin handford ben blatt randy olson inspired explore wonderful waldo pattern also many creative people wolfram research helped along way ben randy claimed verify efficiency strategy actually solving puzzle measuring time book hope future also believe would need many people consistent benchmark especially accounting different way people perceive visually work riddle certain take seriously attest human bad random bad thing one good exhibiting pattern likely apt detecting would speculate say perhaps sense deviation randomness root intelligence perception beauty download post computable document format cdf file
623,Lobsters,visualization,Data Visualization,Inceptionism: Going Deeper into Neural Networks,http://googleresearch.blogspot.com/2015/06/inceptionism-going-deeper-into-neural.html,inceptionism going deeper neural network,,latest news google ai
625,Lobsters,visualization,Data Visualization,Legoizer,http://sailorhg.github.io/legoizer/,legoizer,upload convert build,upload convert build upload image want turn lego mural convert lego color lego brick unit tell many size color need gather right brick build mural original image
626,Lobsters,visualization,Data Visualization,Visualizing keystrokes and application usage with Elasticsearch and D3,http://ryanbrink.com/visualizing-productivity-with-elasticsearch-logstash-and-d3/,visualizing keystroke application usage elasticsearch,,reading lot book lately business management leadership great book full story incredible leader ups read half year ago knew literally nothing marketing search engine optimization involved technical side early stage company read joshuaoxj asked yesterday used testflight http ryanbrinkcomgatoday thought answer blog post case nt one looking read born twenty thing anybody know probably tell underestimating say got always got least three read hedgehog concept come old greek parable say fox know many thing hedgehog know one big thing mean despite read wanted write quick howto based something discovered today think others find useful decided monitoring ssh connection read
627,Lobsters,visualization,Data Visualization,Modelling game economy with Neo4j,http://theburningmonk.com/2015/04/modelling-game-economy-with-neo4j/,modelling game economy,monster challenge knockon effect arbitrage opportunity intrinsic value hello neo node edge arbitrary set property highly connected complex impact analysis understand impact change cypher based number required make scarcity analysis quest progression monster hierarchy even impact analysis successful catch gold maybe loot make really easy conclusion slide recording skill serverless game handson workshop handson enrol enrol save complete list post,monster mmorpg contentheavy item recipe location quest since content highly connected make balancing game rather interesting challenging problem small team behind project challenge consider simple example involving camouflage trap one first trap make made number ingredient found certain part world purchased shop awarded completing questsachievements crafted using ingredient suppose want raise price basic ingredient water increase need propagate way chain furthermore consider many item made water many item made item huge knockon effect failing address knockon effect create arbitrage opportunity economy player exploit able mine coin buying selling item therefore le need make realmoney purchase u game designer whenever want make change faced huge uncertainty hidden knockon effect see complexity manage managing complexity hand laborious involving many iteration trial error likely repeated time new content added slow error prone subjective feel right vary greatly person person instead opted automated process whereby every item intrinsic value game evaluated based value input eg bait monster ingredient crafted item etc amount time involved chance success also taken account use intrinsic value item drive quantify le tangible aspect game model come hello neo one main challenge came effort automate economic balancing understand complex relationship item quest achievement well location activity performed againstwith specific item specific location take bigfoot example almanac page game see catch bigfoot need consider location available certain part world bait lure need alluring goat give roughly chance seeing monster trap need trap strong enough hold managed lure musketteer trap chance success loot upon successful catch bigfoot occasionally drop bigfoot toenail clipping loot might need future quest ingredient make item model information see screen graph additionally node edge arbitrary set property instance bigfoot musketteer trap stats lootsrelationship exists bigfoot loot also specify chance dropping loot looking beyond immediate connection bigfoot alluring goat musketteer trap numerous connection make alluring goat need gather honey need build bee hive homestead harvest goat buy animal trader city around world aslondon nanjing golden hair loot dropped blonde mermaid dandelion pixie blonde selkie diagram illustrates highly connected complex nature data dealing result u making game everything every item find purpose used something else also mean unconnected subset overall graph simplicity sake omitted many type relationship connected node visualizing node around edge gephi colour size node represent number connection internal data model monster look like see degree connectedness varies greatly common lowlevel monster sylph spriggan sprite salamander connected le location trap item similarly common ingredient salt found many item eg fish drop seaweed salt loot catch used many recipe pastry pizza base ketchup name internal data model captured graph able ask interesting question would difficult impossible answer otherwise give example impact analysis earlier pricing example water camouflage trap key challenge able understand impact change similar problem one face derivative pricing finance take white bread example work blast radius price change let look relationship exist item recipe find item made white bread directly indirectly run following cypher builtin query language query database match wb baseitem name white bread rel craft isusedin baseitem return rel wb couple thing note query notice basically pattern matching graph using pattern node relationship node capture node relationship variable wb rel return query optionally filter node type eg baseitem match node type baseitem identify white bread also filter one node value property case node wb must name property value white bread use semantic filtering relationship type looking relationship type craft isusedin pattern work must exist instance relationship two node hence cardinality running query yield following result purple node item red node recipe graph see white bread used directly recipe indirectly virtue ingredient making sausage change price white bread item need price adjusted based number white bread required make example take piece white bread make sausage sausage make full english breakfast change white bread price would need multiplied applied full english breakfast scarcity analysis item priced derivative others need priced based scarcity world fruit forage fruit tree find travel find scarcely available durian dragonfruit use following cypher query match fruit forage tree existsin spot fruitname durian fruitname dragonfruit return fruit tree spot simply pattern matching graph using pattern node node node expressive power cypher lie ability take relationship diagram translate likeforlike executable query might also noticed filtering node type know relationship exist specified type node hence safe omit immediately see dragonfruit tree much readily available world compared durian tree however still need consider number tree location find existsin relationship number fruit get foraging tree find forage relationship taking factor account set price durian dragonfruit reflects scarcity world quest progression quest require specific item complete instance npc might ask fetch item bob cambridge find feature rock somewhere catch griffin get griffin egg loot hand completing quest sometimes award item well quest part quest line also unlock followup quest selfrecursive relationship answer question come year horse quest use simple cypher query like one match quest name year horse unlocks quest return resulting graph quickly see quest unlocked completing year horse quest fact connect quest game end following wonder game designer need hand working data able work quest connected visualize exciting useful much price model full swing able price baseline item based factor scarcity price item derived baseline item since price item reflects difficulty obtaining make use relationship quest item price quest way ie expensive item quest require difficult quest complete establish simple rule cheaper quest come expensive one ensure sense progression player quest reward item whose total price exceeds quest price monster hierarchy finally monster trapping big part game name suggests mentioned earlier catch monster need right combination bait trap catch monster sometimes first catch lower level monster get loot use loot make bait monster want catch using following relationship place monster hierarchy translated following cypher query match monster loot loot r isusedin craft bait canattract return see mirror diagram suppose quest catch bigfoot use query identify monster catch first order get ingredient make bait bigfoot query yield following result purple node monster red node middle recipe crafting alluring goat place bigfoot peak hierarchy repeat exercise every monster game compose hierarchy together end complete monster hierarchy covering monster exist game quest hierarchy monster hierarchy interesting analysis instance completing quest unlocks quest catching monster give loot need make bait monster quest ask player catch monster quest asks player catch monster ensure break sense progression player progress quest otherwise player catch monster multiple time get loot make bait monster take several attempt successfully catch monster finished cycle next quest shortly asked catch monster make satisfying playing experience remember situation might even worse first catch monster order make bait monster even impact analysis looked impact analysis applies item pricing earlier another interesting use impact analysis regard monster hierarchy successfully catch monster receive gold reward ministry monster chance get monster loot successful catch gold maybe loot therefore monster catching equation need balanced whenever change price item either bait loot profound impact monster hierarchy change one side equation item price dropattraction rate gold reward requires change side keep thing balance change input side equation requires change preceding monster hierarchy change output side requires change subsequent monster hierarchy thankfully make really easy important whenever introduce new monster happens pretty regularly impact monster region new competitor food conclusion hope given flavour use case general find graph database powerful natural way model domain especially domain complex andor highly connected datasets slide recording video skill serverless game handson workshop productionready serverless online workshop back course take building productionready serverless web application testing deployment security way observability motivation course give handson experience building something serverless technology giving broader view challenge face architecture matures expands start basic give firm introduction lambda relevant concept service feature including latest announcement gradually ramping cover wide array topic api security testing strategy cicd secret management operational best practice monitoring troubleshooting enrol also get promo code enrol save reading complete list post serverless aws lambda meantime popular blog post
628,Lobsters,visualization,Data Visualization,Will Your Job Be Done By A Machine?,http://www.npr.org/sections/money/2015/05/21/408234543/will-your-job-be-done-by-a-machine,job done machine,surprising thing already happening,machine surprising thing really want know job around future definitive guide job hardest robot mental health substance abuse social worker found community social service job percent chance automated ranked high cleverness negotiation helping others job likely done robot telemarketers surprise already happening researcher admit estimate rough likely wrong consider snapshot smart people think future might look like say job likely replaced machine warned
629,Lobsters,visualization,Data Visualization,Three Years of Logging My Inbox Count,http://warkmilson.com/2015/05/15/three-years-of-logging-my-inbox-count.html,three year logging inbox count,inbox count stress inbox blitz inbox blitz tracking inbox count simple script great tool people much better attempt describe pattern receiving sending email age nearly entire inbox consisted old email avoiding lab rat dopamine lever time spent checking email time sink sobering regularity check email inbox count stress operant conditioning acceleration addictiveness always seem eccentric trying solve problem custom yet guide,last year viewed inbox count barometer stress open inbox two scenario different effect first say least one hundred confused priority right life second say still stillness reveals secret inbox count stress item inbox represent obligation idea communication opportunity need something yet email arrives response great see dispatch minute net stress zero however email arrives implies research action even think response might look like sometimes let sit sit graph last month demonstrates spiral control figure steady unchecked rise inbox count representative month long remember managed inbox via cycle growth purge inbox blitz narrative inbox like garden regular tending brings gorgeous flower neglect brings weed pest enough neglect thing become overgrown see ground know time bring glove rake shovel whatnot commence allout inbox blitz everyone tolerance mental clutter past threshold life must put pause sake cleaning figure see tolerance hovered around message latter half march however early april wont inbox snowballed highlighted red reached message set aside couple hour dealt extreme case beginning year spent several day visiting home traveling first pas email inbox count stood message plan besides seeing family decided would use time massive blitz get inbox never attempted blitz scale inspired timelapse project others recorded video time lapse attempting get inbox reached inbox zero day later great relief washed tasted nirvana sure sound strange inbox count power make figured bad gardener sometimes may need grab lawnmower hero surely master bonsai gardener making calm regular snip tend garden tracking inbox count inbox blitz occurred discouraging regularity last three year figure three year inbox count emphasizing peak inbox blitz data come simple script running since log email end every day count number thread inbox summary email content hope uncover truth personality great tool exist people already made much better attempt data describe pattern receiving sending measure manage email snapshot magnitude burden feeling inbox day keeping something gmail way ensuring address even addressed month year later exactly sound like mark responsible adult problem blitz happen form regular purge inevitable problem relationship inbox see need go deeper email age starting massive inbox blitz began logging message count also date subject recipient thread sitting inbox data see much inbox count given day due message received v message sitting long time figure day breaking inbox count long message spent month april illustrates avoidant behavior responsible lifelong inbox struggle period pro staying top email last day dark blue recent email inbox hit low point around april inbox count still nearly entire inbox consisted old email avoiding cache older unaddressed email yellow orange remained relatively stable couple week continued address recent email backlog kept overall inbox count high almost entire month hit breaking point tackled whereas figure look backwards state inbox given day also look forward starting time receive email looking message received given day long email ultimately spend dealt answer lie depressing graph figure email received given day proportion stayed inbox hour hour etc small revelation example larger lighttodarkpurple period top graph around first week april indicates around quarter email received day dealt least day later period neglect line neatly buildup older email occurred several day later towards latter half april figure reason graph depressing day even day inbox count remained high around half incoming message dealt within hour like lab rat dopamine lever addicted possibility novelty checking email promise rush come fleeting satisfaction dispatching trivial email meanwhile repeatedly deliberately avoiding truly important obligation confront every time inbox time spent checking email would one thing bad email also great compulsively reminding bad email figure likely check email given block day data come time sink o x application run background log every time title currently active window change looking log correspond period graph see frequently checking email achieving hour latency figure graph show shape average workday month consistent block activity often followed computer usage also show sobering regularity check email given block day chance lasting whole quarterhour without reaching hit inbox pipe checking email interwoven routine realize become literal time sink time attention scarce enough need addictive deceptively antiproductive habit robbing inbox count stress started gathering data three year ago saw email neutral burden whose maintenance tell story else going life assumption inbox count represents stress may true extreme deeper discovery inbox generates far stress ever represented sure shape inbox rhythm distinctly trace particular event life satisfying relive story concrete temporal context also surprising alarming see dynamic underlying rhythm whenever stray task compulsively open inbox figure strengthening operant conditioning whenever feel momentary rush satisfaction quick pas recent junk email part want make progress actual priority dy little possible feel inbox count bearing like judgment character overdue dramatic purge grant sense relief must something wrong chasing high inbox zero maybe reason vision email nirvana enticing spend much time selfimposed email hell acceleration addictiveness paul graham suggests technology advance society experience lag new addictive power technology development custom protect rate technological progress increase must vigilance building personal defense already someone trying live well would seem eccentrically abstemious probably take rule thumb people think weird living badly people know problem internet addiction trying figure custom getting free always seem eccentric trying solve problem custom yet guide like many seemingly simple mental change becoming aware technological addiction let alone breaking take real effort achieve blend deliberate behavior environmental including thing like developing metric tell whether managing email managing
631,Lobsters,visualization,Data Visualization,TRAVIC - Transit Visualization Client,http://tracker.geops.ch/,travic transit visualization client,travic published master thesis patrick brosi blog,travic tracker provides movement visualization transit data published transit agency operator world movement mostly based static schedule data wherever realtime data available also included visualization travic based master thesis project patrick brosi background information travic done may check blog data shown may subject term others usually transport agency operator publishing data please check individual license term find link publisher website license term clicking vehicle displayed neither geops university freiburg hold liable correctness completeness data university freiburg geops reserve right modify discontinue service time get overview feed available click feed button click feed marker zoom may zoom see vehicle
634,Lobsters,visualization,Data Visualization,Traffic Signal Progression,http://midimagic.sgc-hosting.com/progreso.htm,traffic signal progression,traffic signal progression simple progression isolated oneway street progression isolated twoway street leftturn signal twoway progression yellowtrap twoway progression unequal block length progression pair oneway street progression grid street progressed route make turn intersection integrating traffic interchange progression plan trick increase progression bandwidth progression,traffic signal progression probably seen traffic signal progression known drive major street light turn green come traffic major street form platoon car pas intersection signal intersection green sound like simple task accomplish oneway street arterial crossstreets simple following complication make calculation become quite difficult twoway street arterial crossstreets close together route turn leftturn signal short block simple progression isolated oneway street isolated oneway street easiest kind street progress interaction need considered setting signal timing relation easy following factor determine necessary setting traffic cycle one complete repetition signal display intersection purpose progression traffic cycle likened rotating second hand clock except hand may take period one minute depending cycle length time taken one traffic cycle occur higher traffic demand lane longer cycle length need time always wasted end green period due startup delay variation driver reaction yellow light progression work signal must use cycle length demand traffic affect cycle length progression system distance signal affect oneway progression first signal used timing reference point offset signal delay center green period signal compared center green period reference signal isolated oneway street factor affecting offset time take vehicle travel one signal next split one street traffic signal fraction cycle signal green street split usually determined ratio traffic demand two street bandwidth oneway progression determined smallest split street parking allowed progressed street disrupt platoon vehicle example street oneway progression timespace diagram animated view street horizontal direction timespace diagram run along street show distance time flow upward timespace diagram figure oneway street notice platoon car arrive signal green file size limitation website account jerkiness animation also note spedup animation page yellow period would short visible progression isolated twoway street traffic moving direction street make progression lot complicated twoway traffic either street must progressed one direction twoway progression work must found signal must placed strategic point respect distance traveled one signal cycle signal direction travel must usually green time intersection ideal spacing signal one halfcycle travel time apart make signal alternate one signal green next signal red thus signal displaced one half cycle signal alternating plan simplest twoway progression method highest bandwidth twoway plan example twoway alternating progression figure twoway street singlealternate notice platoon car arrive signal green following factor must considered designing progression twoway street cycle length longer independent distance signal allowable cycle length depend spacing signal normal speed traffic traffic becomes heavier cycle length need longer heavier traffic usually also run slower speed allowing cycle length increased short block length make harder find optimum progression plan uneven signal spacing make job finding good twoway progression plan difficult case solution problem finding twoway progression case measure listed list trick increase progression bandwidth must used diagram point labeled ideal place street point labeled b diagram nonideal place street used existing left turn phase sequenced aid progression point labeled c place ordinary traffic signal placed signal left turn phase street poor candidate progression block length short shortened cycle length ca nt pas traffic doublealternating plan used plan pair signal show green time adjacent pair show red signal point labeled b allows twoway progression smaller bandwidth figure twoway street doublealternate note although split two street shown percent ease preparing exhibit usual case double alternate larger split progressed street following color progression diagram green path one platoon car signal red signal red cyan leading left turn phase yellow lagging left turn phase leftturn signal twoway progression reducing band leftturn signal usually hinder progression doublealternating progression used provision made prevent yellowtrap leading lagging turn make progression efficient observe figure leading lagging green allow turn period one band using intersection signal placed point labeled b place band coincide phasing design indicate splitphase operation separated phase operation phase isolate time phase one direction phase opposite direction dualgreen operation progressed street get two green light per cycle inefficient phase pattern solve otherwise unsolvable progression problem utilized follows ordinary twophase signal work best near point signal dual leading left turn also work best near point signal leadlag phasing work best near point b point b splitphase signal work best point b c dual green signal work best near point c give poor bandwidth half signal work anywhere diagram stop artery traffic one direction signal left turn signal four direction usually progressed twoway progression unequal block length unequal block length complicate calculation progression street best plan accomplished place longest block place progression plan quartercycle point halfcycle point point labeled c otherwise signal might removed replaced stop sign side street see tip listed progression pair oneway street two oneway street block apart progression street problem highvolume crossstreets factored lowvolume cross street need progressed two oneway street offset lowvolume street one oneway street need relationship offset oneway street major cross street always pose problem cross pair progressed oneway street cross street must almost always progressed doublealternate mode unless oneway street several block apart offset relationship two oneway street coupled together major cross street often oneway street must offset major street two major street close together progression calculation become difficult one closely spaced pair oneway street cross another closelyspaced pair pair reduces band pair usually must doublealternate progression intersection larger spacing eliminate problem possible progress two intersecting pair one way street signal acting unison progression grid street depending grid street progression grid easy hard street regularly spaced large enough distance signal placed halfcycle distance grid progression easy whether street oneway twoway uneven block length diagonal street short block length curve street complicate grid progression point ca nt done oneway street help make grid progression easier use halfsignals possible avoid signal left turn phase street possible oneway street evenly spaced evenly loaded even speed bandwidth le fourblockspercycle plan figure used figure grid progression oneway street progressed route make turn intersection street direction must alternate one direction red direction green fit timespace diagram place street normally placed point c work place dual green signal work larger bandwidth one direction given free right turn simplifies progression timing halfsignal direction route turn selection built progression calculator provided see integrating traffic interchange progression plan different kind interchange require different progression method roundabout must kept away signalized intersection progression survive passage roundabout diamond interchange unsaturated turn flow phasings two ramp intersection adjusted work point diagram diamond interchange saturated turn flow us quad clockwise phasing work best point c enter signal single signalized intersection route turn selection diverging diamond interchange street direction must alternate point c best since cross street phase bandwidth high use route turn selection enter signal one intersection split diamond interchange especially used pair oneway street us quad clockwise phasing work best point c low traffic used point single point urban interchange work best point leadlag phasing used point b two quadrant parclo treat diamond interchange purpose phasing used quad clockwise four quadrant parclo diamond ramp treat two intersection special channelization two half signal four quadrant parclo diamond ramp treat two half signal full cloverleaf interchange placed far away traffic signal progressed platoon cause weaving problem loop ramp echelon interchange treat two half signal allow signalized intersection close due merging interchange must analyzed individually trick increase progression bandwidth use trick increase progression bandwidth try different timing split progressed street cross street try different cycle length increase system start back time try closing street removing signal flashing peak period signal left turn phase street poor candidate progression try prohibiting andor diverting turn try leadlag splitphase separated phase dualgreen signal phasing pattern leadlag signal display green leftturn arrow one direction oncoming circular green display green leftturn arrow opposite direction oncoming circular green figure show timing leadlag signal work best near point labeled b diagram especially side splitphase signal display left turn arrow circular green one direction cut display left turn arrow circular green opposite direction work well point b c overall lower bandwidth separatedphase signal display left turn arrow circular green one direction cut display cross street phase display left turn arrow circular green opposite direction display another cross street pedestrian phase best near point labeled c dualgreen signal turn signal green twice one signal cycle includes running signal half cyclelength signal use near point c half signal used simplify progression half signal signal stop traffic one direction usually movement must prohibited make halfsignal work occasionally two halfsignals placed intersection crossing movement prohibited half signal used point diagram try splitting highvolume twoway street pair oneway street often number lane gained result allowing lower cycle length smaller split one trick often thought move traffic major cross street onto different street intersection ca nt integrated progression long variable cycle length let float establish another progression system side light progression situation avoid progression situation nt try force speed speed traffic actually moving avoid left turn phase intersecting street intersection avoid intersection approach leg progression platooning destroyed stop roundabout freeflowing interchange ramp merge avoid onstreet parking truck loading zone progressed street nt ignore highvolume special event discharge make timing plan nt let politics ruin progression plan eg favoring special minor movement city worker leaving work lane drop destroy progression platoon heavy traffic nt compromise progression system favor transit route waste fuel vehicle provide bus stop nt disturb progression progression system also run night nt flash signal red progressed street leave signal operating link
635,Lobsters,visualization,Data Visualization,A node.js kernel for jupyter/ipython,https://github.com/notablemind/jupyter-nodejs,nodejs kernel jupyteripython,jupyter nodejs jupyter example notebook prereqs installation supported feature path installation doc babeljs magic goodness hovever live binding clojurescript compilation via himera server,jupyter nodejs kernel jupyter get hot view example notebook prereqs ipython node zeromq pkgconfig installation git clone http githubcomnotablemindjupyternodejsgit cd jupyternodejs mkdir p ipythonkernelsnodejs npm install node installjs npm run build npm run buildext jupyter console kernel nodejs viola also ipython notebook supported feature tabcompletion variable path error reporting magic available extension configured via packageconfigjs installation node installjs installdir install kerneljson file ipython look default linux machine ipythonkernelsnodejs specify install dir mac window see doc info babeljs magic goodness loadext babel babel class awesome constructor consolelog yeah hovever import syntax nt work live binding foo use require normally well clojurescript compilation via himera server loadext clojurescript http himeraemhherokuappcom clojurescript clojurey goodness
636,Lobsters,visualization,Data Visualization,Realtime Visualization of Wind and Ocean Currents,http://earth.nullschool.net,realtime visualization wind ocean current,date year month apply,ie support end dec date year month apply
637,Lobsters,visualization,Data Visualization,Interactive 3D Printer Comparison Chart,http://www.productchart.com/3d_printers/,interactive printer comparison chart,elegoo mar detail elegoo mar pro detail labists detail anycubic megas detail anycubic mega zero detail longer orange detail longer detail creality ender detail qidi tech xplus detail kingroon detail longer pro detail creality detail creality detail creality detail qidi tech xmaker detail tronxy pro detail longer detail qidi tech xmax detail anycubic chiron detail labists detail tevo tornado detail creality ender detail creality crx pro detail kelant detail easythreed nano detail anycubic mega x detail creality detail sovol detail sindoh detail flsun detail sparkmaker detail detail geeetech detail creality se detail tronxy detail weedo detail geeetech detail jgaurora magic detail anycubic photon detail epax detail eryone thinker se detail eryone thinker detail jgaurora detail creality detail monoprice delta pro detail longer cube detail toauto pyramid detail geeetech detail monoprice mp mini detail anet detail flsun qqs detail epax detail anet pro detail anet detail longer orange detail sunlu detail jgmaker magic detail mingda detail anycubic mega pro detail geeetech detail detail creality detail ecubmaker toydiy detail monoprice detail anycubic photon detail tronxy pro detail sovol detail detail anet detail creality max detail detail artillery genius detail geeetech detail sindoh detail creality ender detail robo plus detail hictop detail mingda pro detail anet detail lulzbot mini detail hictop hero detail junco asmart detail mini detail malyan detail detail geeetech detail jgaurora detail detail geeetech detail lulzbot taz pro detail creality detail tronxy detail dobot mooz detail sparkmaker fhd detail lotmaxx detail ultimaker detail plus detail tiertime cetus detail geeetech pro detail yidimu falcon pro detail robo detail creality detail monoprice detail cel robox detail jgaurora detail tronxy detail ultimaker detail creality detail geeetech detail detail jgaurora detail ultimaker detail wiiboox sweetin uv detail tronxy detail junco msmart detail plus detail da vinci plus detail anet detail monoprice detail monoprice mp mini detail junco evolution detail makergear detail sindoh detail anet detail dobot mooz detail detail creality crx detail leapfrog creatr detail winice detail robo detail,elegoo mar price aug pst detail width inch height inch depth inch elegoo mar pro price aug pst detail width inch height inch depth inch labists price aug pst detail width inch height inch depth inch anycubic megas price aug pst detail width inch height inch depth inch anycubic mega zero price aug pst detail width inch height inch depth inch longer orange price aug pst detail width inch height inch depth inch longer price aug pst detail width inch height inch depth inch creality ender price aug pst detail width inch height inch depth inch qidi tech xplus price aug pst detail width inch height inch depth inch kingroon price aug pst detail width inch height inch depth inch longer pro price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch qidi tech xmaker price aug pst detail width inch height inch depth inch tronxy pro price aug pst detail width inch height inch depth inch longer price aug pst detail width inch height inch depth inch qidi tech xmax price aug pst detail width inch height inch depth inch anycubic chiron price aug pst detail width inch height inch depth inch labists price aug pst detail width inch height inch depth inch tevo tornado price aug pst detail width inch height inch depth inch creality ender price aug pst detail width inch height inch depth inch creality crx pro price aug pst detail width inch height inch depth inch kelant price aug pst detail width inch height inch depth inch easythreed nano price aug pst detail width inch height inch depth inch anycubic mega x price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch sovol price aug pst detail width inch height inch depth inch sindoh price aug pst detail width inch height inch depth inch flsun price aug pst detail width inch height inch depth inch sparkmaker price aug pst detail width inch height inch depth inch price aug pst detail width inch height inch depth inch geeetech price aug pst detail width inch height inch depth inch creality se price aug pst detail width inch height inch depth inch tronxy price aug pst detail width inch height inch depth inch weedo price aug pst detail width inch height inch depth inch geeetech price aug pst detail width inch height inch depth inch jgaurora magic price aug pst detail width inch height inch depth inch anycubic photon price aug pst detail width inch height inch depth inch epax price aug pst detail width inch height inch depth inch eryone thinker se price aug pst detail width inch height inch depth inch eryone thinker price aug pst detail width inch height inch depth inch jgaurora price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch monoprice delta pro price aug pst detail width inch height inch depth inch longer cube price aug pst detail width inch height inch depth inch toauto pyramid price aug pst detail width inch height inch depth inch geeetech price aug pst detail width inch height inch depth inch monoprice mp mini price aug pst detail width inch height inch depth inch anet price aug pst detail width inch height inch depth inch flsun qqs price aug pst detail width inch height inch depth inch epax price aug pst detail width inch height inch depth inch anet pro price aug pst detail width inch height inch depth inch anet price aug pst detail width inch height inch depth inch longer orange price aug pst detail width inch height inch depth inch sunlu price aug pst detail width inch height inch depth inch jgmaker magic price aug pst detail width inch height inch depth inch mingda price aug pst detail width inch height inch depth inch anycubic mega pro price aug pst detail width inch height inch depth inch geeetech price aug pst detail width inch height inch depth inch price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch ecubmaker toydiy price aug pst detail width inch height inch depth inch monoprice price aug pst detail width inch height inch depth inch anycubic photon price aug pst detail width inch height inch depth inch tronxy pro price aug pst detail width inch height inch depth inch sovol price aug pst detail width inch height inch depth inch price aug pst detail width inch height inch depth inch anet price aug pst detail width inch height inch depth inch creality max price aug pst detail width inch height inch depth inch price aug pst detail width inch height inch depth inch artillery genius price aug pst detail width inch height inch depth inch geeetech price aug pst detail width inch height inch depth inch sindoh price aug pst detail width inch height inch depth inch creality ender price aug pst detail width inch height inch depth inch robo plus price aug pst detail width inch height inch depth inch hictop price aug pst detail width inch height inch depth inch mingda pro price aug pst detail width inch height inch depth inch anet price aug pst detail width inch height inch depth inch lulzbot mini price aug pst detail width inch height inch depth inch hictop hero price aug pst detail width inch height inch depth inch junco asmart price aug pst detail width inch height inch depth inch mini price aug pst detail width inch height inch depth inch malyan price aug pst detail width inch height inch depth inch price aug pst detail width inch height inch depth inch geeetech price aug pst detail width inch height inch depth inch jgaurora price aug pst detail width inch height inch depth inch price aug pst detail width inch height inch depth inch geeetech price aug pst detail width inch height inch depth inch lulzbot taz pro price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch tronxy price aug pst detail width inch height inch depth inch dobot mooz price aug pst detail width inch height inch depth inch sparkmaker fhd price aug pst detail width inch height inch depth inch lotmaxx price aug pst detail width inch height inch depth inch ultimaker price aug pst detail width inch height inch depth inch plus price aug pst detail width inch height inch depth inch tiertime cetus price aug pst detail width inch height inch depth inch geeetech pro price aug pst detail width inch height inch depth inch yidimu falcon pro price aug pst detail width inch height inch depth inch robo price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch monoprice price aug pst detail width inch height inch depth inch cel robox price aug pst detail width inch height inch depth inch jgaurora price aug pst detail width inch height inch depth inch tronxy price aug pst detail width inch height inch depth inch ultimaker price aug pst detail width inch height inch depth inch creality price aug pst detail width inch height inch depth inch geeetech price aug pst detail width inch height inch depth inch price aug pst detail width inch height inch depth inch jgaurora price aug pst detail width inch height inch depth inch ultimaker price aug pst detail width inch height inch depth inch wiiboox sweetin uv price aug pst detail width inch height inch depth inch tronxy price aug pst detail width inch height inch depth inch junco msmart price aug pst detail width inch height inch depth inch plus price aug pst detail width inch height inch depth inch da vinci plus price aug pst detail width inch height inch depth inch anet price aug pst detail width inch height inch depth inch monoprice price aug pst detail width inch height inch depth inch monoprice mp mini price aug pst detail width inch height inch depth inch junco evolution price aug pst detail width inch height inch depth inch makergear price aug pst detail width inch height inch depth inch sindoh price aug pst detail width inch height inch depth inch anet price aug pst detail width inch height inch depth inch dobot mooz price aug pst detail width inch height inch depth inch price aug pst detail width inch height inch depth inch creality crx price aug pst detail width inch height inch depth inch leapfrog creatr price aug pst detail width inch height inch depth inch winice price aug pst detail width inch height inch depth inch robo price aug pst detail width inch height inch depth inch
638,Lobsters,visualization,Data Visualization,Monitoring pf logs with Gource,http://www.echothrust.com/blogs/monitoring-pf-logs-gource,monitoring pf log gource,background logging packet firewall gource awk putting together tweaking taste final word reference,ever wanted see openbsd pf log cinematic way post demonstrate use gource software version control visualization tool mean visualize pf firewall log example post carried openbsd piping output pflog linux workstation opengl extension support background organised couple capture flag ctf competition past looked way providing bystanding audience visual feed informational stream regarding competition progress player activity back preparing athcon ctf came across cool way visualise cv history gource poking around gource realized support custom log format input hit u could transform network activity data pipedelimited format create impressive visualization realtime activity wire providing incredible view ingame action today technique impressively useful pun intended monitor packet logged openbsd packet filter logging packet firewall openbsd pf provides ability log packet match certain rule firewall ruleset etcpfconf filter action block match pas accompanied log parameter generate log message addition performing action specified typically pf ruleset begin end block action block log note logging match pas rule initial packet connection logged unless log state option specified standard way monitor packet running tcpdump either log file produced pflogd usually varlogpflog directly accessing packet filter logging interface usually realtime view logged packet us demonstrated run pflog file playback tcpdump r varlogpflog run interface realtime tcpdump depending activity one decides log firewall resulting visualization gource differ significantly update tcpdump command post tcpdump utility included openbsd bear mind tcpdump different platform operate correctly pflog file gource gource openglbased visualization tool intended visualizing activity source control repository gource fed log repository cv git repository displayed tree forming branch represent directory structure leavesnodes display file usernames contributor source code appear disappear contribute specific file tool support data input custom log format timestampusernametypefilecolour idea use username file field source destination ip respectively put together quick awk script process output tcpdump transform custom log format supported gource awk output extracted tcpdump transformed gource custom log format using quickly written script usrbinawk f convert tcpdump ttnql output gource custom format timestamp sip proto dipsubstr length direction type match dip dportsubstr dip gsub timestamp gsub dip networkdip gsub network gsub sip printf sa timestamp sip dip dport proto fflush putting together initial take noticed pipe buffering affecting visuals thankfully way disable io buffering tcpdump feature command line flag make stdout linebuffered awk launched using stdbuf part coreutils package awk script pflog logfile place visualizing logged packet breeze tcpdump ttnql r pfloglog proto tcp proto udp stdbuf awk f gource multisampling novsync title activity key realtime highlightusers highlightdirs userfriction userscale logformat custom disableautorotate simplest visual get pflog activity creating tree hierarchy attacked host port host mean complete leaf lot option customization improvement tweaking taste fiddling awk script different tcpdump filter various command line option supported gource bring revelation example replacing last statement printf sa timestamp sip dip sip sip proto dport produce node structure hierarchy tree rendered gource visually grouping traffic source ip addition destination ip port attacked adapting script allows monitoring live traffic running sudo tcpdump firewall may advised sure lot fun ssh pfexamplenet sudo tcpdump ttnql proto tcp proto udp stdbuf awk f gource multisampling novsync title activity key realtime highlightusers userfriction userscale e logformat custom maxfiles short video demonstrating look notice nmap scan popping around videofinal word echothrust solution regularly come irregular idea putting thing work beautifully unexpected way far ideal tool visualizing network traffic adapting method brought good result presentation monitoring purpose caveat bulk traffic occurs gource sometimes fall behind struggling produce consistent visual representation one use speed control function gource advance real time feeding network activity gource conveniently highlight network connection constantly monitored interface irregular network activity cause new burst movement visualization making traffic easier spot visual grouping different network stream provides formidable bird eye view network activity difficult obtain tcpdump text output visualisation playback fastforwarded using speed control function keyboard yes mostly use fun also praised ctf contest participant adore watching packet projected update post received much feedback reader would like thank mike cole correction raffaelmarty remark last least bsdnow airing show reference
640,Lobsters,visualization,Data Visualization,Dear Data: By Week,http://www.dear-data.com/by-week/,dear data week,explore postcard note backstage picture week week,explore postcard note backstage picture week week
641,Lobsters,visualization,Data Visualization,FreeBSD Off-CPU Flame Graphs,http://www.brendangregg.com/blog/2015-03-12/freebsd-offcpu-flame-graphs.html,freebsd offcpu flame graph,background linux perfevents slide freebsd procstat ka svg thread svg improving procstat conclusion freebsd flame graph talk,giving talk freebsd flame graph new technique suggested audience gathering offcpu stack something like see improved included operating system involved using procstat ka gather sleeping thread stack created offcpu flame graph visualization let u browse sleeping thread call stack look anything unusual may problem normal thread usually spend time sleeping waiting work may normal source latency performance issue background cpu profiling help solve performance issue thread oncpu issue thread blocked sleeping offcpu time may spent waiting storage io network io lock contention run queue latency etc collectively call offcpu time profiled examined help solve issue recently showed linux perfevents measure offcpu time create flame graph approach capture kernel scheduler event involved sleeping switching thread trace file us userlevel program stitch together event calculating offcpu time call stack work tracing scheduler event file incur crazyhigh overhead nervous using busy production system improvement calculate offcpu time kernel context pas aggregated call stack total time userlevel need programmable tracer like systemtap linux dtrace freebsd slide talk showed dtrace command still come high overhead warning even though much better perfevents approach offcpu tracing cost overhead relative event rate system million iop million scheduler event per second compare cpu profiling wake fixed rate eg hertz cpu gather stack sample cpu system cpu profiling mean stack sample per second matter busy server million per second offcpu tracing reach profile offcpu time way cpu profiling instead tracing every scheduler event wake timed interval gather sleeping stack oncpu one would mean overhead relative thread count instead scheduler event rate eg sample say hertz system thread would mean taking stack sample per second freebsd procstat ka talk adrian chadd suggested use procstat ka dump sleeping stack thanks procstat ka pid tid comm tdname kstack kernel swapper miswitch sleepqtimedwait sleep swapper btext kernel firmware taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel kqueue taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel ffstrim taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel miswitch sleepqwait msleepspinsbt taskqueuethreadloop forkexit forktrampoline kernel miswitch sleepqwait msleepspinsbt taskqueuethreadloop forkexit forktrampoline kernel miswitch sleepqwait msleepspinsbt taskqueuethreadloop forkexit forktrampoline kernel aiodbio taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel thread taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline wow freebsd already really like linux gdb macro least kstack column show leaf origin call stack need little text processing flamegraphpl example collecting ten generating offcpu flame graph bourne shell git clone depth http githubcombrendangreggflamegraph cd flamegraph seq procstat ka sleep done sed g flamegraphpl colorio title offcpu generates offcpu flame graph demonstrated talk also top page svg click zoom thread since procstat process thread name third fourth field include get bit tricker thread name contain space switching awk awk comm thread substr gsub thread stack substr gsub stack gsub stack printf comm thread stack flamegraphpl colorio title offcpu awk getting bit long put stackcollapseprocstatawk file like profiler output example output including process thread name svg detail splitting time thread name creating many thin tower wider tower mean pool thread thread zfs metaslabgroupt truncated nginx perthread name detail might overdoing many case adjust awk include process name desired improving procstat room improvement procstat first stack kernel would helpful include userlevel frame fully explain blocked event second overhead higher would hoped procstat ka wc l time procstat ka devnull real user sys second system cpu time walk thread wo nt able take even one sample thread per second let alone taking hertz like suggested earlier higher cpu flame graph procstat system cpu time ok linkelfsearchsymbol obvious nt need visualize flame graph syskernlinkelfc static int linkelfsearchsymbol linkerfilet lf caddrt value clinkersymt sym long diffp e ef ddbsymtab ef ddbsymcnt e e stname continue stvalue e stvalue uintptrt void ef address stvalue stvalue diff diff stvalue best e diff break else stvalue diff best e sequential search list symbol also check entire list unless direct match found offset usually wo nt case usually return closest match also called another loop linkerdebugsearchsymbol visible flame graph probably due compiler optimization iterates linker symbol file case searching kernel module largest zfs symbol every frame every stack trace usually compare program counter every known kernel symbol sequentially improved eg using btree lookup least bailing early decent match found another approach could build offcpu profiler kernel sampled aggregated stack symbol lookup many approach possible suspect never reason optimize conclusion freebsd interesting way list blocked thread stack using procstat ka used generate offcpu flame graph post described worked room improvement approach would great see similar facility operating system offcpu flame graph generated cheaper fashion solving issue blocked time flame graph see previous post freebsd flame graph talk
642,Lobsters,visualization,Data Visualization,Visualizing sorting algorithms,http://sorting.at/,visualizing sorting algorithm,sorting sorting algorithm artwork analyzing sorting algorithm inversion count aknowledgments sorting algorithm animation sortvisorg visualization comparison sorting algorithm c alex conconi,sorting sorting sequence item one pillar computer science sorting algorithm algorithm organizes element sequence certain order since early day computing sorting problem one main battlefield researcher reason behind need solving common task also challenge solving complex problem efficient way sorting attempt visualize help understand famous sorting algorithm work project provides two standpoint look algorithm one artistic apology real artist analytical aiming explaining algorithm step step project want teach theory sorting algorithm amazing resource book course purpose sorting one want see algorithm different ligth hopefully appreciate processing brain power behind piece genius many way changed way live sorting algorithm artwork generative art one way represent computational process transforming data generated autonomous system feature artwork lead unexpected result sorting born create visual representation sorting algorithm hope finding visual pattern turned visual footprint algorithm unique differ look gorgeous analyzing sorting algorithm another way looking project analytical tool study sorting algorithm work beside generating visuals representation sorting provides walkthrough guide reader step step along process ordering list integer number step tracked comparison operation happening behind scene use animated indicator change position item animation arc temporary storing item sorting make possible compare different algorithm behave different initial set item inversion chart add measure distance final goal term inversion operation comparison exchange tracked execution algorithm inversion count inversion count sequence item indicates distance sequence sorted simply put sequence already sorted inversion count equal instead sequence sorted reverse order count maximum inversion pair position sequence element located natural order formally pair element j sequence called inversion j j aknowledgments many attempt visualize sorting algorithm great resource completion sorting among sorting algorithm animation r martin sortvisorg cortesi visualization comparison sorting algorithm c r kanasz huge thanks go alex conconi reviewing project giving invaluable suggestion feedback
643,Lobsters,visualization,Data Visualization,"The sound of the dialup, pictured",http://www.windytan.com/2012/11/the-sound-of-dialup-pictured.html,sound dialup pictured,william terminus redbubble hello modem suppressing echo finding suitable modulation enough small talk talking mouthpiece update redbubble selling,ever connected internet probably remember made peculiar sound despite becoming familiar remained mystery u sound mean audio inline recording beginning telephone call made modem audio recorded william terminus imac many already know hearing often called handshake start telephone conversation two modem modem trying find common language determine weakness telephone channel originally meant human speech spectrogram handshake audio labeled signal according party transmitted also put concise explanation order poster highres print via redbubble hello modem first thing hear example dial tone tone would hear picking landline phone modem know connected phone line dial number number signaled network using dualtone multifrequency signaling dtmf sound telephone make dialing number remote modem answer distinct tone calling modem recognize exchange short burst binary data ass kind protocol appropriate called bi transaction suppressing echo modem must address problem echo suppression human talk one usually talking one listens telephone network exploit fact temporarily silence return channel suppress confusing echo talker voice modem nt like well talk time called fullduplex answering modem put special answer tone disable echo suppression circuit line tone also periodic snap phase transition aim disable yet another type circuit called echo canceller finding suitable modulation modem list supported modulation mode try find one know also probe line test tone see responds tone different frequency much attenuates signal exchange test result decide speed suitable line enough small talk modem go scrambled data put data special scrambling formula transmission make power distribution even make sure pattern suboptimal transfer listen sending series binary adjust equalizer optimally shape incoming signal soon modem speaker go silent data put connection audible one could ask back day telephone line used audio first modem even used telephone receiver like human talking mouthpiece newer modem developed could directly connect phone line even idea hearing happening phone line calling quite new modem would default exposing user handshake audio case accidentally called human would still time pick telephone explain situation silence handshake send command serial line dialing update due numerous request made poster redbubble selling per poster directed poor nerd made
644,Lobsters,visualization,Data Visualization,"Seeing Circles, Sines, and Signals",https://jackschaedler.github.io/circles-sines-signals/,seeing circle sine signal,understanding digital signal processing course coursera signal processing communication julius smith iii site mathematics discrete fourier transform dan elli online book contact github site interactivity considered harmful kill math critique kill math mindstorms academic paywall,text designed accompany study introductory digital signal eccentric piece notsorigorous literature preoccupation explaining thing using interactive visualization animation goal explain discrete fourier transform using miniature curriculum leverage ability learn concept absorb information visually instead hope glyph become slightly comprehensible slightly le intimidating reading subsequent mathrm dft k sum mathrm x n cdot e varphimathrm quad varphi k frac n n equation discrete fourier transform figure visualizing composition complex signal one reason math text abstruse technical specification condition put theorem keep crevasse sense like legal document often much fun read david foster wallace everything really serious learning theory practice digital signal processing use website sole resource wherever compromise necessary erred favor simplicity completeness fun engagement rigor text piece popscience treat want solid introduction digital signal processing strongly suggest read understanding digital signal processing richard j lyon lyon writes great deal empathy reader patiently explicating concept author might deem obvious paolo prandoni martin vetterli periodically offer course digital signal processing coursera course free lecture really quite lovely martin paolo also written signal processing communication freely available julius smith iii encyclopedic catalog dsp writing freely available site smith online text mathematics discrete fourier transform particular interest dan elli post teaching material online free open access geoff martin delightful online book recommended interested le formal still thorough resource mathematics dsp contact twitter comment question complaint site encounter error mathematics technical issue presentation please file issue github site almost always referred dsp especially whole brevity thing attempted avoid gratuitous use interactivity reading section titled interactivity considered harmful bret victor magic ink essay strong feeling interactivity computercentric presentation information highly recommend essay sentiment wording might familiar read bret victor kill math already might also interested reading evan miller critique kill math see seymour papert exceptional mindstorms chapter two mathophobia writes uncommon intelligent adult turn passive observer incompetence anything elementary mathematics mathophobe like hope text feel like welcome respite mentioning dfw interesting take technical writing everything nt received particularly well mathematician see michael harris review titled sometimes funny book supposedly infinity think comment technical writing totally relevant prandoni vetterli engaged concerted effort make learning material freely available community commended effort ever hit academic paywall thank people like prandoni vetterli writing also actively distributing highquality learning material free writing lecture also incorporate philosophy art history signal processing curriculum education best sense
645,Lobsters,visualization,Data Visualization,Finding cheaters using multiple-choice comparisons,http://jd-mathbio.blogspot.ca/2015/02/finding-cheaters-using-multiple-choice.html,finding cheater using multiplechoice comparison,,summary interesting method found people cheating final exam background use different version midterm examination discourage cheating population biology class student course started used thing final exam little complicated final exam administered registrar office teaching team point somebody advised bother version registrar office supposed professional administration usually mix people taking different exam room stopped bothering different version final exam year two see incident year question exam given two separate mediumsized room class alone two room received report invigilator room suspicious behaviour warned couple student acting strangely warned nt prepared say sure student cheating wanted compare answer slate retrospect left student alone ready sign complaint cheated enough proved response final entirely multiple choice got result file scantron office figured would nt quite know comparison two kid unless test identical would easy far informative compare everybody everybody else still kind hard get used fact computer really stuff like calculated number identical right answer number identical wrong answer pair student pair plotted line corresponds forty total shared answer two student identical test paper happen four point near line looked like clear outlier follow nt sure next registrar office knew make seating map exam nt offer help allowed go examine map result amazing four identified pair seated adjacent three pair side side fourth pair one student behind probability might happened chance beyond ridiculous none four identified pair seated room alert invigilator hassled pair cheater might chance doubt likely invigilator room visibly le alert talked academic integrity office various expert figured really impossible sure cheated sidebyside pair put bit ordeal though least half deserved also unable convict person front frontback pair although hard see one would worked without collusion person back frontback pair denied knowledge received zero exam grade plus confidential temporary notation finding integrity office strongest punishment allowed give promised fight never postscript use versioning starting discover necessarily prevent cheating either may adventure report soon definitely get feeling person caught cheated way mac initial response call pretty relaxed get f class could nt give automatic f class exam zero sufficient retook class passed expunging f graduating presumably clean record heard lot anecdotal report people dealing cheating informally kind depressing impression mac cheating problem need fight back code code used produce plot r shown
646,Lobsters,visualization,Data Visualization,What Happened with LEGO Prices,https://therealityprose.wordpress.com/2013/01/17/what_happened_with_lego/,happened lego price,retail twice secondary market bricksetcom price listed almost set since retail price listed many set year set contains least piece since pirate caribbean http wwwclassiccastlecom bricklink site dedicated buying lego investment upwards close used history brickset brickset creative common attributionnoncommercial unported license like,price brick happened lego used simple oh come know know talking lego simple something happened inside harry potter lego star war lego complicated kit tiny little block mean saying bad wan na know happened prof cane community set cheap toy made highest standard price go along however past couple decade seems price lego set become outrageous new set sell retail old set sell twice secondary market child toy right way lego set always expensive molded plastic let take look history lego pricing try figure going evaluating price history lego set order come sort conclusion price lego needed get data historic retail price lego set best source information bricksetcom website data almost lego set ever made retail pricing many wrote web scraping program go brickset database make database set information order keep result relevant decided compile one set fit two basic qualification price listed almost set since retail price listed many set year way qualify price lego brick without first knowing price set brick set contains least piece arbitrary line line needed drawn many promotional set year piece carry higher price promotional status range keychains individual minifigs seasonal item representative typical price lego brick therefore included evaluation calculated price per set adjusted inflation finally calculated average year adjusted inflation put graph form figure show result price u dollar figure average price per piece lego brick since average price lego brick since data price set lacking focused data present seen figure figure average price per piece lego brick since average price lego brick since preliminary look data appears price lego actually decreased given graph show seem like price lego increased price evaluating perception price many received first lego set early adult looking forward buying lego set first child younger fully understand money work realize large lego set require hour work earn know want would wager first job fully appreciate value money wanted large set kid realize hard parent work let look example illustrate point pirate form another integral part lego since recently generic traditional pirate theme superseded pirate caribbean theme however film horizon theme sure wind seeing return beloved pirate theme near future period year quite different pirate ship let compare ship note contain junior duplo set piece priced differently would fair comparison figure table lego pirate ship price chart see real trend price per piece particular set weighted average larger set weigh heavier smaller set price cent per piece size ship seem increase last couple year however data point make trend visit idea later pirate ship growing lucky enough get skull eye schooner may realized cheap price chart take inflation account let u take another example lego castle year also many variation theme comparison set could considered castle figure table lego castle price source http wwwclassiccastlecom bricksetcom price data available castle besides inordinate number hogwarts castle draw similar conclusion chart pirate ship chart price really changed much measurable weighted average castle cent per piece pirate ship seem general increase piece count however general trend seems least last couple decade lego gotten expensive let next look little closer price brick since figure price per piece lego since adjusted inflation average real price per piece data show seems notion lego increasing price false least regard last couple decade since around average price piece lego remained relatively stable cent apiece price individual piece drastically changed must another issue hand influence perception another aspect looked size set increase set size data piece price evaluation able also evaluate average size lego set year see chart average size set released year stayed somewhat constant around set size started increase average set size seems peaked saw release taj mahal since fallen level seems found new normal around piece figure average number piece set since average piece count per set increase average piece count could factor lego perceived expensive past lego set become larger complex started market directly older crowd set modular building architecture series new set rekindled interest lego older generation time introduced generation relatively high price lego set lego ignoring lower priced market however see chart average price set lego relatively stable since even average piece count set increasing time average price remained stable show larger expensive set released also releasing plenty average priced set balance average size set increased number set released per year price u dollar figure average price set since adjusted inflation average price per set set released year last year lego renaissance obtained major license broadened appeal also change manufacturing process allows lego expand product line release set year chart number set released year figure number lego set released year since number set per year number set released increased harder store parcel shelving space order make sale decision made set carried every store carry whole product line even official lego store carry whole product line process favor set drive sale licensed set traditional box brick pushed way profitable line licensed lego set run premium many may seems advent licensed correlate perceived increase price nostalgic heyday affordable lego set quite true chart compare price per piece licensed set unlicensed set starting first year lego major licensed theme figure comparison unlicensed set licensed set since adjusted inflation comparison nonlicensed licensed set price see correlation licensing set price set least chart show licensed set carry premium since virtually difference average price per piece licensed set unlicensed set price piece lego remained stable perhaps size brick decreased average weight lego set may price individual brick gone time matter size brick decreased overtime sure average number piece set increased many piece tiny detail answer question compiled weight data bricksetcom compared set price per gram similar fashion compared price piece chart result price u dollar figure average price per gram lego set adjusted inflation average price per gram evaluation price per brick show overall increase price per gram lego last year metric recently price become stable stability price lego group trouble losing money losing market share toy entertainment order address fundamental issue business needed cut cost leading crisis lego brick adding new design color without consideration cost business lego went large reorganization cut production unique element half variety color half number supplier addition increase licensed set expansion video game saved lego company reorganizing company lego became efficient data show able standardize cost likely able hedge price plastic future price fluctuation protecting business also able normalize price customer stable price good everyone help lego ensure future production cost budgeted help consumer manage budget allows lego protect grow market share positive aspect change without drawback lego community cry foul perceived decline quality nowhere bad competitor decline quality reflects poorly company known quality control lego group expanding manufacturing base place outside denmark mexico czech republic china although far seems signature brand nonset item made china lego claim changed dedication quality standard abide however seems mold changed reduce whether affect durability brick yet seen happened lego sign lead price lego increasing overtime common belief couple hypothesis child bought lego gift old enough buy others gift surprised price advent collectible lego set internet driven secondary market lego roof buying lego set adult young know value money let alone toy play parent work tirelessly buy u newest popular toy never realize effort went earning money eventually get job kid price toy kid come shock toy toy price outrageous supposed kid toy right eye may drawn large set mean reasonably priced set nearby addition stated lego started market set older audience super star destroyer kid market exist year ago another factor come sticker shock showed lego set however recently produced set even pricy kid set pinnacle lego set aspired set went straight store course rarely ended set dream dream set closer range mean lego make sub set ever mean comparison set look lot smaller largest set lego pricing become victim expanding market secondary market internet blamed size scope secondary lego market website bricklink find almost set lego ever produced addition site keep record trend market value individual piece site invaluable lego collector given many ability grow collection advent site site like ebay collecting lego required going garage sale whole site dedicated buying lego investment topic another article creation expansion secondary market conjunction lego marketing product older audience made price old set increase exponentially extreme range ucs millennium falcon selling new upwards close used sold new even nonlicensed set run premium cafe corner one original modular building new sell old lego set fetch high price course popular one one wanted younger bit money want buy dream set childhood course discover second hand pricing perception lego lego changed lot history started wooden toy company discovered benefit molded plastic since advent brick able build everything house spaceship working robot increased detail wider product line allowed blossoming idea lego art lego brick walk line giving people piece used add detail restricting piece inspire creativity balance seen amazing work large small done bit patience eye plastic lego cheap toy never brand stood nothing highest quality hopefully issue change manufacturing result temporary growing pain next time buying lego set loved one take second thank everyone ever bought one gift andrew sielen lego enthusiast former brick specialist bachelor degree international business university southern california currently connection lego wrote personal side project footnote calculate average price per piece year took price per piece set made year multiplied number piece set averaged weighted price used weighted average looking price per piece essentially saying could buy x number piece dollar larger set tend lower price per piece effect could get piece lower price year note done using u retail price data brickset data lacking anyone contribute updating pricing data brickset help accurate evaluation know people old catalog price info please update brickset database count old vw set samsonite set licensed least way modern set information issue lego facing early take look following article article quality lego example mold change mold change image brick left old mold one right new mold wall lego store notice one right rounded stud one left may small saving add mold change image notice newer mold right indent tube example lego artwork reading andrew sielen reality prose unauthorized use andor duplication material without express written permission blog author andor owner strictly prohibited excerpt link may used provided full clear credit given andrew sielen reality prose appropriate specific direction original content trademark lego group company sponsor authorize endorse site work licensed creative common attributionnoncommercial unported license like like loading
647,Lobsters,visualization,Data Visualization,The Ghost in the MP3,http://theghostinthemp3.com/theghostinthemp3.html,ghost,ghost update follow soundcloud facebook layer iii standard commonly referred become nearly ubiquitous digital audio file format first published codec implement lossy compression algorithm based perceptual model human hearing listening test primarily designed westerneuropean men using music liked used refine encoder test determined sound perceptually important could erased altered ostensibly without noticed lost sound sound human ear hear original context due universal perceptual limitation simply encoding detritus commonly accepted create audible artifact preecho music codec deletes sound like work presented technique considered developed recover lost sound ghost reformulate sound art standard designed early moving picture expert group become interesting object critique contemporary technology study sterne standard subtly reduces audible quality soundfiles remained place despite massively increased bandwidth storage capacity impressive highlight foresight fortune format creator regardless always appropriate format given task critical evaluation technology limitation warranted many listener today listen exclusively file even setting gain higher fidelity format would clearly perceptible lossy compression codec thus come dominate unanticipated listening space despite highly touted performance listening test compression codec generate audible artifact remove perceptible sonic information especially implemented low bit rate example white pink brown noise compressed lowest possible bit rate sound different original random signal comparison lowfrequency sine tone sound quite good encoded still material left behind upon examination quite interesting using bregman pyo pydub library along lame encoder begin uncompressed wav file save file example quite well chose example highquality bit rate used original development listening test music made modernist etc using process used analyze compare take difference file two file similar information original audio largely preserved however corresponding timefrequency bin differ significantly two file betray spot information altered deleted different extraction technique possible leading slightly different output different way handling phase estimation also lead slightly different result previously stated codec refined using listening test designed european audio engineer featuring music chose sense song act resonant filter every file encoded format tom diner suzanne vega fast car tracy chapman haydn trumpet concerto song carved space sound could successfully encoded end song represent kind bestcase scenario encoding anything encoded well format file yet file leave residue behind encoded exploring sound help define boundary case salvaging preliminary foray codec ghost composition creating series piece based song used original listening test today like briefly discus treatment tom diner compressing original audio begin analyzing song structure interpreting music text attempt arrange interesting recovered material via framework case study technique used like discus two verse detail verse one find narrator bustling diner making observation environment focus text external author opposed later verse exist subjective internal space using different setting harvest lost material able isolate clear pitched content ephemeral transient signal using python library headspace reverb model small diner began construct virtual space beginning fragmenting scrambling transient material applied head related transfer function simulate background conversation one might hear diner tracking amplitude original melody verse applied loose amplitude envelope signal thus remnant original vocal line come amplitude contour constructed background prominent pitch original melody appear disappear located variously virtual space ephemeral sound hint familiar melody playing aural memory imagination flickering apparition hovering border consciousness verse find narrator noticeably different psychological state instead buoyantly attending activity room lost thought remembering accordingly given material space le fragmented constant background conversation receded virtual space drawn closer feel internal external key phrase snippet melody emerge clearly outro arrives obscuring familiar melody hinting former presence hear mostly transient internally might fill rest moving forward planning series related composition constructed first song involved listening test probing space compression different way attempting highlight even explicitly filtering effect codec song used developing codec notable music culture hiphop dance music nothing prominent low frequency nothing particularly noisy outright aggressive sound nothing lofi rather sound broadly institutionally accepted conform accepted standard production recording technique invaded contemporary listening space class privileged sound format inadvertently creates become apparent originally developed suboptimal listening environment heard everywhere home streaming store public space highfidelity car stereo system format become curator space allowing great deal wonderful sound yes exclusion vast territory available sonic terrain composing sound injecting back contemporary listening space one possible act resistance one available mode cultural critique conclusion composing file attempt derive interesting material sound rejected many contemporary listening space ghost artifact difficult predict provide externally generated material react work composer limiting freedom artist arrange alter interpret sound investigating particular format aesthetic possibility inspired music built around previous technology tape music example see format music contemporary analogue practice reading involved technology way found extremely fruitful question explore limitation technology find intertwined hope also found interest questioning limitation read full ghost conference paper sound music computing international computer music conference work referenced brandenburg karlheinz aac explained audio engineering society conference international conference highquality audio coding brandenburg karlheinz gerhard stoll audio generic standard coding highquality digital audio journal audio engineering society cascone kim aesthetic failure postdigital tendency contemporary computer music computer music journal miller vincent understanding digital culture sage publication demers joanna listening noise aesthetic experimental electronic music oxford university press usa even aden sound idea music machine experience minneapolis university minnesota press manovich lev language new medium mit press oswald john plunderphonics audio piracy compositional prerogative wired society electroacoustic conference pras amandine rachel zimmerman daniel levitin catherine guastavino subjective evaluation compression different musical genre audio engineering society convention sterne jonathan meaning format duke university press book sterne jonathan cultural artifact new medium society heartbeat,ghost update follow soundcloud facebook download uncompressed audio overview layer iii standard commonly referred become nearly ubiquitous digital audio file format first published codec implement lossy compression algorithm based perceptual model human hearing listening test primarily designed westerneuropean men using music liked used refine encoder test determined sound perceptually important could erased altered ostensibly without noticed lost sound sound human ear hear original context due universal perceptual limitation simply encoding detritus commonly accepted create audible artifact preecho music codec deletes sound like work presented technique considered developed recover lost sound ghost reformulate sound art ii compression standard designed early moving picture expert group become interesting object critique contemporary technology study sterne standard subtly reduces audible quality soundfiles remained place despite massively increased bandwidth storage capacity impressive highlight foresight fortune format creator regardless always appropriate format given task critical evaluation technology limitation warranted many listener today listen exclusively file even setting gain higher fidelity format would clearly perceptible lossy compression codec thus come dominate unanticipated listening space despite highly touted performance listening test compression codec generate audible artifact remove perceptible sonic information especially implemented low bit rate example white pink brown noise compressed lowest possible bit rate sound different original random signal example white pink brown noise uncompressed example white pink brown noise lowest possible bit rate comparison lowfrequency sine tone sound quite good encoded still material left behind upon examination quite interesting example sine tone chord uncompressed example sine tone chord example sine tone chord ghost iii finding ghost using bregman pyo pydub library along lame encoder begin uncompressed wav file save file example quite well chose example highquality bit rate used original development listening test music made modernist etc using process used example tom diner verse uncompressed example tom diner verse example analyze compare take difference file example tom diner verse ghost example two file similar information original audio largely preserved however corresponding timefrequency bin differ significantly two file betray spot information altered deleted different extraction technique possible leading slightly different output example tom diner verse ghost extracted via masking example different way handling phase estimation also lead slightly different result example tom diner verse ghost examplewith without phase estimation iv artistic overview background previously stated codec refined using listening test designed european audio engineer featuring music chose sense song act resonant filter every file encoded format tom diner suzanne vega fast car tracy chapman haydn trumpet concerto song carved space sound could successfully encoded end song represent kind bestcase scenario encoding anything encoded well format file yet file leave residue behind encoded exploring sound help define boundary case salvaging v modernist preliminary foray codec ghost composition creating series piece based song used original listening test today like briefly discus treatment tom diner compressing original audio begin analyzing song structure interpreting music text attempt arrange interesting recovered material via framework case study technique used like discus two verse detail verse one find narrator bustling diner making observation environment focus text external author opposed later verse exist subjective internal space using different setting harvest lost material able isolate clear pitched content ephemeral transient signal using python library headspace reverb model small diner began construct virtual space beginning fragmenting scrambling transient material applied head related transfer function simulate background conversation one might hear diner tracking amplitude original melody verse applied loose amplitude envelope signal thus remnant original vocal line come amplitude contour constructed background prominent pitch original melody appear disappear located variously virtual space ephemeral sound hint familiar melody playing aural memory imagination flickering apparition hovering border consciousness example modernist verse verse find narrator noticeably different psychological state instead buoyantly attending activity room lost thought remembering example tom diner verse accordingly given material space le fragmented constant background conversation receded virtual space drawn closer feel internal external key phrase snippet melody emerge clearly outro arrives obscuring familiar melody hinting former presence hear mostly transient internally might fill rest example modernist verse vi future moving forward planning series related composition constructed first song involved listening test probing space compression different way attempting highlight even explicitly filtering effect codec song used developing codec notable music culture hiphop dance music nothing prominent low frequency nothing particularly noisy outright aggressive sound nothing lofi rather sound broadly institutionally accepted conform accepted standard production recording technique invaded contemporary listening space class privileged sound format inadvertently creates become apparent originally developed suboptimal listening environment heard everywhere home streaming store public space highfidelity car stereo system format become curator space allowing great deal wonderful sound yes exclusion vast territory available sonic terrain composing sound injecting back contemporary listening space one possible act resistance one available mode cultural critique vii conclusion conclusion composing file attempt derive interesting material sound rejected many contemporary listening space ghost artifact difficult predict provide externally generated material react work composer limiting freedom artist arrange alter interpret sound investigating particular format aesthetic possibility inspired music built around previous technology tape music example see format music contemporary analogue practice reading involved technology way found extremely fruitful question explore limitation technology find intertwined hope also found interest questioning limitation special thanks tara rodgers aden even larry polansky michael casey matthew burtner many othersfor help conceiving realizing project read full ghost conference paper sound music computing international computer music conference work referenced brandenburg karlheinz aac explained audio engineering society conference international conference highquality audio coding brandenburg karlheinz gerhard stoll audio generic standard coding highquality digital audio journal audio engineering society cascone kim aesthetic failure postdigital tendency contemporary computer music computer music journal miller vincent understanding digital culture sage publication demers joanna listening noise aesthetic experimental electronic music oxford university press usa even aden sound idea music machine experience minneapolis university minnesota press manovich lev language new medium mit press oswald john plunderphonics audio piracy compositional prerogative wired society electroacoustic conference pras amandine rachel zimmerman daniel levitin catherine guastavino subjective evaluation compression different musical genre audio engineering society convention sterne jonathan meaning format duke university press book sterne jonathan cultural artifact new medium society heartbeat
648,Lobsters,visualization,Data Visualization,Bayes' Theorem with Lego,http://www.countbayesie.com/blog/2015/2/18/bayes-theorem-with-lego,bayes theorem lego,congratulation independently discovered bayes theorem working math conclusion learn today,looking picture may easily figured p text red text yellow thinking easy yellow peg red probability red block yellow one follow line thinking congratulation independently discovered bayes theorem working mathof course mathematical language extremely concise human intuition able easily jump step reasoning process getting intuition bayes theorem require bit work let begin formalizing intuition coming way calculate yellow peg mind arrive conclusion spatial reasoning need come mathematical approach solve take probability yellow peg time total number peg text numberofyellowpegs p text yellow cdot text totalpegs cdot next part red requires bit work first establish many red peg luckily calculating yellow peg text numberofredpegs p text red cdot text totalpegs cdot also already figured ratio many red peg covered yellow p yellowred make count rather probability need multiply number red peg text numberofredunderyellow p text yellow text red cdot text numberofredpegs cdot finally need get ratio red peg covered yellow number yellow get answer p text red text yellow frac text numberofredunderyellow text numberofyellowpegs still nt quite look like bayes theorem get go back expand term equation p text red text yellow frac p text yellow text red cdot text numberofredpegs p text yellow cdot text totalpegs p text red text yellow frac p text yellow text red p text red cdot text totalpegs p text yellow cdot text totalpegs finally cancelling text totalpegs equation get p text red text yellow frac p text yellow text red p text red p text yellow intuition arrived back bayes theorem conclusion learn today big takeaway experiment beconceptually bayes theorem follows intuitionthe formalization bayes theorem necessarily obviousthe benefit mathematical work extracted reason intuition confirms original intuitive belief consistent provides powerful new tool deal problem probability complicated lego bricksto learn bayes theorem bayesian reasoning checkout post
649,Lobsters,visualization,Data Visualization,54 Years of Space Exploration in one infographic,http://cosmicdiary.org/fmarchis/2014/05/19/54_years_of_exploration/,year space exploration one infographic,national geographic infographics year exploration graphic cosmic journey high resolution forty mission mar moon outer solar system juice europa clipper deep space mission national geographic,national geographic asked infographics update year exploration graphic classic use often talk illustrate space exploration program focus inner part solar system updated version renamed cosmic journey spectacular better organized easier follow predecessor updated include new mission sent past year new color code includes path failed well successful mission also nation led cosmic journey sean mcnaughton samuel velasco infographics matthew twombly jane vessel ngm staff amanda hobbs fan space exploration strongly recommend take time explore map high resolution history space exploration still infancy yet master technology many difficult moment call today failure instance almost forty mission launched explore mar fewer half succeeded reaching planet returning useful data successful one led nasa esa unfortunately statistic show mar doomed place probe sovietrussian space agency recent diversity color around moon illustrates quite well earth satellite becoming new placetobe newest spacefaring nation domination russian american red orange orbit replaced colorful set orbit includes mission lunar exploration program japan china india thanks eye distant robot also taking picture faroff body like jupiter saturn uranus neptune outer solar system quest nasa new horizon way dwarf planet pluto flyby multiple system quite soon july esa already preparing new mission called juice explore ganymede satellite jupiter patient spacecraft finally enter orbit around ganymede sake completeness mention nasa also preparing next mission explore europa eg europa clipper goal better understanding composition activity ocean bottom diagram show relative position deep space mission including voyager recently reached interstellar space pioneer far away shut voyager robot controllable humanmade spacecraft located farthest home planet downside spectacular map absence orbit around minor body samuel velasco one creator told mission asteroid comet included graphic getting difficult read tough choice made enjoy map thanks national geographic making beautiful illustration available u clear sky franck
651,Lobsters,visualization,Data Visualization,Who Owns Los Angeles?,http://robrhinehart.com/?p=1224,owns los angeles,format tool projection basic query advanced query spatial query conclusion contact reference http lalafcoorgformsapplication http assessorlacountygovextranetdefaultaspx http postgisnet http http chief database architect,call property asked massasoit leader native american wampanoag tribe earth land mother nourishing child beast bird fish men wood stream everything belongs everybody use one man say belongs good question massasoit yet due tragic combination pathogenic bacteria leptospira aggressive colonist answer became irrelevant concept land ownership proliferated majestic land new world like virus today dust settled iron horse carried white man west coast currently reside explored wonderful city los angeles began wonder exactly owe pleasure environment owns dirt stand research united state divided county county equivalent los angeles county populous million resident least populous loving county texas funny story group libertarian attempted buy land seize power loving county goal establishing ideal thwarted local sheriff group currently featured wanted poster county sole courthouse la county area divided across city parcel however much land unincorporated meaning fall within jurisdiction established city would like establish city la county apply lafco little information regarding parcel owner location assessed value collecting property tax maintained assessor format tool county use gi geographic information system maintain la office us microsoft access ownership assessed value information popular shapefile format geometry mapping esri environmental system research institute founded dominates landuse consulting popular arcgis software shapefile format developed early shapefile consists several different file mandatory shp feature geometry set either wkt well known text wkb well known binary coordinate entry one several different simple datatypes point linestring polygon multipolygon shx index positional geometry allow quickly stepping forward backward dbf old school simple database format popular store attribute shape several optional file important though prj represents projection information coordinate shape soon performed extensive cleaning simplification assessor office data part analysis bulk done postgresql fantastic postgis want follow along say instance first grab dependency sudo aptget install postgresql postgresqlcontrib postgis let create database geospatial data createdb gi psql gi c create extension postgis projection earth perfect sphere represent instead geoid mathematical object ideally represents precise shape earth influence gravitation rotation imperfect geoid combined satellite data provides somewhat close approximation actual shape earth geoid work tandem different datum coordinate system used region define coordinate system consistent geoid today improvement model coordinate system led possibility single global standard globe gaining popularity still datum typically precise defined single region datum used la assessor office naming convention originated first north american survey based ellipsoid geoid model developed system updated based survey entire continent using geoid updated using satellite remote sensing data using grs geoid model originally used popular global standard sound simple interested great reason learn spherical harmonic remember datum coordinate system defined geoid model earth geoids datum exist planet like mar reprojected assessor office data using qgis projection corresponding srid spatial reference system identifier let load shapefile postgis table making sure tell projection srid download wget http tar xvf laparcelstarxz g geom laparcelsshp laparcels psql gi importlog basic query next let get sql prompt psql gi run simple query improve performance bit vacuum analyze let fun expensive piece land la county select landvalue ownername addressnumber streetname laparcels order landvalue desc limit landvalue ownername addressnumber streetname catalina medium development ii alameda ave mobil oil corp st bh wilshire international llc wilshire blvd bp west coast product llc sepulveda blvd warner bros entertainment inc warner blvd next century associate llc avenue star universal studio llc lankershim blvd twentieth century fox film corp pico blvd universal studio llc lankershim blvd tishman speyer archstone smith barham blvd entertainment oil company dominate land though wonder expensive improvement building let use nested query select improvementvalue ownername addressnumber streetname select landvalue improvementvalue ownername addressnumber streetname laparcels order landvalue desc limit land order improvementvalue desc century fox win million exxon mobil sprawling refinery assessed million someone must trying hard keep property tax low okay expensive property overall combining land building value select landvalueimprovementvalue totalvalue ownername addressnumber streetname laparcels order totalvalue desc limit totalvalue ownername addressnumber streetname child hospital los angeles sunset blvd kaiser foundation hospital imperial hwy cedar sinai medical center alden dr trs j paul getty trust church lane trs j paul getty trust getty center dr trs j paul getty trust trs j paul getty trust century city mall llc santa monica blvd hay dorothy l decd est la cienega blvd anheuser busch inc roscoe blvd trizec la llc hope st marangi leonard etal trs lessr congress st community redevelopment agency grand ave wilshire courtyard lp wilshire blvd disney walt production inc buena vista st cedar sinai medical center san vicente blvd twentieth century fox film corp pico blvd avenue star llc avenue star star llc avenue star universal studio llc lankershim blvd hospital monopolize top spot healthcare expensive surprise see magnificent getty center either wonder multiple entry redundant worth billion surprised either way know free free unlike hospital let find another landmark dodger stadium use forgiving string compare make sure match street select landvalueimprovementvalue totalvalue ownername addressnumber streetname laparcels addressnumber streetname ilike elysian park totalvalue ownername addressnumber streetname realco intermediary llc elysian park ave dodger stadium must worth million assessed value compare real world value let use one wilshire example sold million assessed value million far let use aggregation function sum group find expensive city area la county since city column still bit messy use eliminate outlier select city priceperarea select sum area area sum landvalue landvalue count parcel city sum landvalue sum area priceperarea laparcels group city count order priceperarea desc city city priceperarea totalvalue manhattan beach beverly hill hermosa beach palos verdes est w hollywood santa monica san marino la canada flt el segundo burbank south pasadena montrose still want answer original question owns land select ownername count sum landvalue sum improvementvalue holding sum area land laparcels group ownername order land desc limit ownername parcelcount holdingvalue holdingarea u govt state calif l city santa catalina island l county tejon ranch co l city dept water power newhall land farming co mountain recreation l co flood control dist area huge swath county controlled federal state government agriculture company tejon ranch newhall land farming company sprinkled advanced query wonder percentage la county held one entity unincorporated use view allows treat query like table create view topowners select ownername select ownername count sum landvalue sum improvementvalue holding sum area land laparcels group ownername order land desc limit owner order select land guy use join statement specifying view table intersect join default inner meaning get row field match succinctly find parcel owned entity select count laparcels join topowners laparcelsownername topownersownername finally use union operation combine multiple select statement single column select sum area laparcels join topowners laparcelsownername topownersownername union select sum area laparcels finally land city la devoted public space think important metric city select sum area laparcels ownername ilike l city ownername ilike l city park union select sum area laparcels city ilike los angeles bad griffith park elysian park macarthur park runyon canyon grand park vista hermosa la fantastic public space largest green area owned federal state government outside city though terribly far due lack zoning code standardization difficult get good picture land used spatial query last unleash postgis note since using result latitude longitude rather meter first good know working select distinct geometrytype geom laparcels geom field exclusively multipolygon want work simpler shape unroll stdumps polygon type alright wonder geographic center la county use stextent roll geometry bounding box find x coordinate center stcentroid select sty stcentroid stextent geom stx stcentroid stextent geom laparcels latitude longitude result simple box around shape rigorous instead roll shape together form convex hull minimum geometry encloses find centroid let find far center malibu point use geometry constructor true stdistance function get u distance across geoid rather straight select stdistance malibucenter stmakepoint select stcentroid stconvexhull stcollect geom malibucenter laparcels city ilike malibu malibu answer quite drive especially traffic last least took liberty creating web interface dataset moving around whole dataset would inefficient use google map javascript ask minimal flask application turn asks database parcel within bounding box map current view operator find geometry inside envelope build core query simply select distinct landvalue improvementvalue totalvalue landvalue improvementvalue ownername yearbuilt addressnumber streetname city state zipcode zoningcode area perimeter stasgeojson stmakevalid geom stasgeojson stcentroid stmakevalid geom laparcels geom stmakeenvelope bounding box map passed parameter geometry invalid stmakevalid help u query amazingly fast around drawing map slow part google map gotten complicated still work pretty well long zoom far avoid residential area american dream individual home ownership slowing app hopefully speed play around click geometry see value building broken many individual parcel three dimension difference apartment condominium condo parcel county conclusion disappointed difficult obtain data initially poor quality came government constituency size stand benefit enormously investment modern software tool stronger commitment transparency building began dream parcel united state single database would fascinating study data horribly spread fragmented interested obtaining data county another structuring schema would grateful promise share collected information track completeness gathered california please contact interested contributing data nation could put entire world computer reference http lalafcoorgformsapplication http assessorlacountygovextranetdefaultaspx pedant still insist using data give rest confusing people http postgisnet http http love database soylent hiring chief database architect
652,Lobsters,visualization,Data Visualization,Build dashboards using ascii/ansi art,https://github.com/yaronn/blessed-contrib,build dashboard using asciiansi art,blessedcontrib blessed drawille check wopr contributor yaronnaveh xcezzz mvaladas demo full size source code running demo pre requisite installation build custom project usage blessed layout widget line chart bar chart stacked bar chart map gauge stacked gauge donut lcd display rolling log picture sparkline table tree markdown line chart example simple line chart multiple line color bar chart stacked bar chart map gauge stacked gauge donut lcd display exampleslcdjs rolling log picture image implementation sparkline table tree option node markdown color source layout grid carousel grid carousel sample terminal dashboard running sample installation custom dashboard simple dashboard rich dashboard source code troubleshooting license mit license information twitter blog,blessedcontrib build dashboard application using asciiansi art javascript friendly terminal ssh developer extends blessed custom drawille widget also check wopr markup creating terminal report presentation infographics contributor yaron naveh yaronnaveh chris xcezzz miguel valadas mvaladas demo full size source code running demo git clone http githubcomyaronnblessedcontribgit cd blessedcontrib npm install node examplesdashboardjs work linux o x window window follow pre requisite installation build custom project npm install blessed blessedcontrib usage use default widget blessed text list etc widget added blessedcontrib described layout optional useful dashboard widget blessedcontrib follow usage pattern var blessed require blessed contrib require blessedcontrib screen blessedscreen line contribline style line yellow text green baseline black xlabelpadding xpadding label title data x screenappend line must append setting data linesetdata data screenkey escape q cc function ch key return processexit screenrender see complete list widget widget line chart bar chart stacked bar chart map gauge stacked gauge donut lcd display rolling log picture sparkline table tree markdown line chart var line contribline style line yellow text green baseline black xlabelpadding xpadding showlegend true wholenumbersonly false truedo show fraction axis label title var title apple x var title orange x screenappend line must append setting data linesetdata example simple line chart multiple line color bar chart var bar contribbar label server utilization barwidth barspacing xoffset maxheight screenappend bar must append setting data barsetdata title data stacked bar chart bar contribstackedbar label server utilization barwidth barspacing xoffset maxvalue height width barbgcolor red blue green screenappend bar barsetdata barcategory stackedcategory u eu ap data map var map contribmap label world map mapaddmarker lon lat color red char x gauge var gauge contribgauge label progress stroke green fill white gaugesetpercent stacked gauge either specify stacked portion percent stroke var gauge contribgauge label stacked gaugesetstack percent stroke green percent stroke magenta percent stroke cyan supply array number random color chosen var gauge contribgauge label stacked progress gaugesetstack donut var donut contribdonut label test radius arcwidth remaincolor black ypadding data percent label color green data passed us percent label draw donut graph color optional default green donutsetdata percent label rcp color green percent label rcp color cyan updating donut easy passing array setdata using array format constructor pas many object array data want automatically resize try fit however please note still restricted actual screen space lcd display var lcd contriblcd segmentwidth wide segment segmentinterval spacing segment strokewidth spacing segment element many element display many character displayed display displayed first call setdisplay elementspacing spacing element elementpadding far away edge put element color white color segment label storage remaining lcdsetdisplay g display lcdsetoptions adjust option runtime please see exampleslcdjs example example provides keybindings adjust segmentwidth segmentinterval strokewidth realtime see manipulate look feel rolling log var log contriblog fg green selectedfg green label server log loglog new log line picture also check new blessed image implementation several benefit one var pic contribpicture file flowerpng col onready ready function ready screenrender note png image supported sparkline var spark contribsparkline label throughput bitssec tag true style fg blue sparklinesetdata table var table contribtable key true fg white selectedfg white selectedbg blue interactive true label active process width height border type line fg cyan columnspacing char columnwidth char allow control table keyboard tablefocus tablesetdata header data tree var tree contribtree fg green allow control table keyboard treefocus treeon select function node nodemycustomproperty consolelog nodemycustomproperty consolelog nodename specify name property root level display root treesetdata extended true child fruit child banana apple cherry exotics child mango papaya kiwi name kiwi bird mycustomproperty hairy fruit pear vegetable child pea lettuce pepper option key key expand node default enter default extended node extendedgenerated default careful setting using callback function default false template extend suffix icon closed node default retract suffix icon opened node default line show line tree default true node every node hash custom property used select event callback however several special key name type string desc node name node nt root nt specify name set hash key example name fruit child type hash function node return child desc node child function must return hash could used child property use function result stored nodechildrencontent child example hash fruit name fruit child banana cherry function see examplesexplorerjs childrencontent type hash desc child content internal usage modify nodechildren hash nodechildrennodechildrencontent nodechildren function used store nodechildren result read property never write usually used check nodechildrencontent nodechildren function generate child extended type boolean desc determine node extended effect node child default value node treeinstanceoptionsextended node extended option set example fruit name fruit extended true child banana cherry markdown var markdown contribmarkdown markdownsetmarkdown hello n blessedcontrib render markdown using markedterminal color use color source function randomcolor return mathrandom mathrandom mathrandom line contribline style line randomcolor text randomcolor baseline randomcolor layout grid carousel grid grid layout auto position element grid layout using grid create widget rather specify grid widget create params widget span multiple row column var screen blessedscreen var grid new contribgrid row col screen screen gridset row col rowspan colspan obj opts var map gridset contribmap label world map var box gridset blessedbox content box screenrender carousel carousel layout switch different view based time keyboard activity one use case office dashboard rotating view var blessed require blessed contrib require screen blessedscreen function screen var map contribmap screenappend map function screen var line contribline width height left top xpadding label title var data title useast x style line red screenappend line linesetdata data screenkey escape q cc function ch key return processexit var carousel new contribcarousel screen screen interval often switch view set never swicth automatically controlkeys true right left keyboard arrow control view rotation carouselstart sample terminal dashboard running sample git clone http githubcomyaronnblessedcontribgit cd blessedcontrib npm install node examplesdashboardjs installation custom dashboard npm install blessed npm install blessedcontrib simple dashboard var blessed require blessed contrib require blessedcontrib screen blessedscreen grid new contribgrid row col screen screen var line gridset contribline style line yellow text green baseline black xlabelpadding xpadding label stock var map gridset contribmap label server location var linedata x linesetdata linedata screenkey escape q cc function ch key return processexit screenrender rich dashboard see source code troubleshooting see question mark missign character try running env var fix encoding terminal node yourcodejs license library mit license information created yaron naveh twitter blog
653,Lobsters,visualization,Data Visualization,How Software in Half of NYC Cabs Generates $5.2 Million a Year in Extra Tips,http://iquantny.tumblr.com/post/107245431809/how-software-in-half-of-nyc-cabs-generates-5-2,software half nyc cab generates million year extra tip,software half nyc cab generates million year extra tip story explanation dirtier fixing misleading fire hydrant vending machine issue foil foiled upshot fix nyc problem brooklyn lead bronx lag green cab tipping rate quantifying best worst time day hit road nyc businessweek chris whong google big query reddit dtimesd paper haberdashersandapiarists iquantny show note,software half nyc cab generates million year extra tip story businessweek caught eye day discussed nyc taxi rider tipping habit concluded rider usually tip using histogram plot showed bump default tip option credit card reader cab made sense something else feel right plot people using default button many end tipping every rider rounding curiousas looked article thing kept unraveling bit another chart article showed people suddenly started tipping explanation evening tip uptick reporter reached bhairavi desai executive director new york taxi worker alliance explanation increased tip article said rush hour people appreciate privacy convenience taxi packed subway desai say rider take taxi hour regular tend talk driver sensitive understanding driver economics explanation felt pretty strange solid one percent gain felt large behavioral response decided dig bit first step figure calculate tip percentage tlc data many cost field fare amountsurcharge used peak timesmta tax fifty cent tax incity tripstollstipto calculate tip percentage numerator obviously going tip amount denominator tipping top fare amount fare amount plus surcharge tipping tax even toll find incab payment system calculate tip took sample taxi ride toll payment tried two different option option default tip fare surcharge option default tip fare surcharge tax toll made table two different way calculating tip also colored round number green table row one column green box always either round number tip column likely punched rider round value option column indicating choosing percent opposed dollar amount mean intaxi payment system calculating tip including tax toll pretty surprised got strangerhere another sample looked notice sample option much prevalent green option meaning rider exception two seemed given default calculated using tax toll give well notice first field table turn come calculating tip payment system provided creative mobile technology cmt programmed differently provided verifone vt since data looked recent cab ride receipt verify issue still presentthe receipt left ridlinq payment app cmt show tip amount receipt right payment app verifone base fare green different cmt calculating tip including tax giving driver default tip le mileage verifone driver mean well short cab driver driving cmt programmed car making money tip new yorkers driving verifone programmed cab half nyc cab cmt payment system estimate total size excess tip looked subset cmt processed credit card ride user used default tip excess tip amounted million tip toll million tip mta tax standard ride annual total million extra tip extra tip average unique driver cmt enabled cab per year back businessweek article redo histogram use two different tip calculation depending vendor get different picture feel lot better line intuition turn user pick default option choose option choose option ride affected programming difference exploration quote businessweek article pertaining increased tipping rush hour well surcharge exactly line increase observed businessweek article surcharge would cause default tip percentage base fare go thus cause boost tip discussed article redoing analysis corrected data yield different result bhairavi desai able explain increase evening rush hour tip exist well desai explanation story analysis example like call post rationalization time given data intelligent person come reasonable explanation data exactly scientific method supposed prevent best practice would dictate first come hypothesis look data back unfortunately lot data science follow method data scientist data journalist always hypothesis ready first look data like businessweek article sure enough work blog start hypothesis though like hypothesis combined fast food restaurant dirtier noncombined one often left post rationalizing finding see example post rationalizing need done extra care plenty caveat conclusion tlc fix incab payment system make consistent one another rider know payment system using deciding whether use precalculated tip weighing whether include tax toll calculation tip consistency clear explanation warranted fair rider driver whose income dependent company processing payment back cab truly hope fix rapidly dot set great example fixing misleading fire hydrant exposed quite quickly mta refused apply quick fix vending machine issue wrote prior post hoping tlc follows dot approach tlc release taxi data directly public foil releasing data allows tlc learn operation citizen serf unfortunately agency continues take foil approach instead open data approach particular case chris whong foiled data posted online tlc tlc released data public via open data might found corrected sooner data science look raw data one thing learned data science always look closely raw data addition aggregate statistic would possible figure without looking subset individual ride link publish data source data science fact science reproducible ability check someone else work exactly using public data important reader blog note mistake along way precisely point big kudos author businessweek article linking public data underneath work article inspired analysis helped uncover peculiarity incab taxi payment system along line news agency publishing underlying foiled data along analysis reason like new york time upshot started quant ny taxi analysis fix nyc problembrooklyn lead bronx lag green cab tipping ratesquantifying best worst time day hit road work inspired businessweekdata via chris whong google big queryquery help via eagle eyed reader dtimesd pointed case since least point page recent academic paper called default tip haggag paci two mysterious nyc taxi payment vendor called vendor competitor engage practice guess know vendor competitor thanks public data mailing list haberdashersandapiarists reblogged iquantny show notesloading
654,Lobsters,visualization,Data Visualization,Rooms and Mazes: A Procedural Dungeon Generator,http://journal.stuffwithstuff.com/2014/12/21/rooms-and-mazes/,room maze procedural dungeon generator,turnbased game loop roguelike selfpublishing book dungeon fairly efficient connected perfect open room passageway tunable room view angband dark twisty passageway description dungeon generator ufastasucan rroguelikedev karcero jamis buck dungeon generator room maze flood fill looking connection pick random room main region pick random connector touch main region open connected region part main one unify remove extraneous connector still connector left go uncarving ended right browser,several month ago promised followup previous blog post turnbased game loop roguelike got completely sidetracked selfpublishing book game programming pattern forgot totally left hanging well finally got time think roguelike today keep hanging ala mercy wandering attention span instead game loop today going talk possibly fun challenging part making roguelike generating dungeon go ahead click little box see end sorry need canvas support demo click restart pretty neat huh want skip prose code one earliest memory computing maze generator running family apple iie filled screen grid green square incrementally cut hole wall eventually every square grid connected screen filled complete perfect maze little home computer could create something deep square maze could reached yet seemed carved random every maze different enough blow tenyearold mind still kind today dungeon procedural game build stuff randomly instead using handauthored amazing work well get ton replayability game different every time person implementing game also get critical feature knowing going get even though wrote code game surprise people get procedural generation seems easier handauthoring content obviously lot work want game hundred level make hundred thing make one little random level generator hundred level thousand million free ala quite work way see defining procedure hell lot harder sitting banging content take nebulous artistic chunk brain figure precisely translate code coding simulation must balance number technical aesthetic constraint mine focused need fairly efficient generator run player enters new level super fast still want several second pause giving player time question whether playing game something productive life dungeon need connected like maze old greenscreen apple mean point dungeon point vital player complete quest like find magic chalice kill cockatrice pretty cruel dungeon drop walledoff room player get also avoids wasting time generating populating area player never see moreso want dungeon perfect perfect context maze graph synonymous mean one path two point flatten windy passage discover twisty maze really tree crumpled passageway branch never merge imperfect maze loop path b gameplay constraint technical one could make roguelike perfect dungeon many simple roguelikes generator easier design implement find le fun play hit dead end often lot backtracking get new area explore circle around avoid certain enemy sneak back passage neither bad guy matter fundamentally game making decision set alternative literal level perfect dungeon give one path choose want open room could make dungeon nothing maze narrow passage could never get surrounded horde monster would feel claustrophic kill bunch interesting combat tactic wide open area critical area effect spell big dramatic battle also provide space interesting decoration themed area vault pit trap treasure room etc room high point hero journey want passageway time want dungeon room game create level way door directly join room room work ok find bit monotonous like player feeling confined part time narrow corridor player draw monster key tactic game need tunable many roguelikes one huge multifloor dungeon depth vary difficulty much else game different number different area look feel may small cramped others spacious orderly solve partially multiple distinct dungeon generation algorithm outdoor area use entirely different process probably write sometime look another unfulfilled promise coding new dungeon generator scratch every area huge time sink instead want generator bunch knob lever tweak make number area share code feel room view working game pretty much forever gone four different implementation language tried number different dungeon generator main source inspiration game called angband thing sunk life working game playing one angband fantastically old forked moria nancy kerrigan taken round melee damage clubwielding troll machine time much harder make fast dungeon generator angband pretty simple sprinkle bunch randomly located nonoverlapping room draw random corridor connect ensure room overlap discard room collides previously placed one avoid possible infinite loop instead trying certain number room successfully placed fixed number attempt place room failure becomes common dungeon get fit many room given tuning give control room density like sorry need canvas support demo attempt dark twisty passageway dungeon generator written start hard part far making good passageway connect really post neat way solve problem angband solution brute force surprisingly effective pick pair ignoring far apart start passageway wanders randomly one hopefully got clever check keep thing overlapping much passageway cut room cross passage dead end tried implementing number time likely failure part never got something really liked corridor ended always looked straight overlapped stuff unattractive way month ago stumbled onto description dungeon generator ufastasucan rroguelikedev subreddit generator karcero based jamis buck dungeon generator ever done procedural dungeon generation buck got ton great article random maze year ago remember seeing actual dungeon generator wrote use penandpaper dungeon dragon unlike maze stuff actual room result looked great time know worked go maze open winding corridor room tucked open question away corner mind immediately forgot post fastasucan provides answer work like make perfect maze number different algorithm fairly straightforward make maze sparse find dead end passage fill back solid rock pick remaining dead end cut hole adjacent wall make maze imperfect remember good thing create room find good location place good mean overlapping maze near add door connect magic step piece missing sparseness normal maze fill every single square world leaving area fit room trick jamis fastasucan carve whole maze uncarve dead end actually pretty easy dead end tile wall three side find one fill tile back may turn make tile connects dead end keep run dead end end lot solid area room placed course starting perfect maze run completion erase whole maze perfect maze loop everything dead end follow passage long enough jamis solution erase dead end stop something like sorry need canvas support demo corridor leave start placing room process jamis us interesting pick room size try place every single location dungeon location overlap room passageway discarded remaining position ranked room near passageway better pick best position place room put door room passage rinse lather repeat got dungeon room maze went ahead coded exactly described went ok found process placing room pretty slow work well dungeon small size tabletop roleplaying game much scale computer roguelike tinkering came slight variation contribution pretty minor thought would worth writing honestly think fun watch animated dungeon generator prose pure fluff buck karcero start maze add room mine thing opposite order first place bunch random room iterates every tile dungeon find solid one open area could start running maze generator point maze generator work incrementally carving passage avoiding cutting already open area ensure maze one solution let carve existing passage get loop conveniently exactly need let maze grow fill odd shaped area surround room word maze generator randomized flood fill algorithm run every solid region room left entire dungeon packed full disconnected room maze sorry need canvas support demo color represents different region connected tile looking connection remains stitch back together single continuous dungeon fortunately pretty easy room generator chooses odd size position room aligned maze turn fill unused area assured unconnected region single tile away neighbor filling room maze find possible connector tile solid rock adjacent two region different color highlighted sorry need canvas support demo use tie region together normally think entire dungeon graph tile vertex going go level abstraction treat region tile single vertex connector edge use connector dungeon would way densely connected instead carve connector need get region connected whole fancy term finding spanning tree process pretty straightforward pick random room main region pick random connector touch main region open demo placing door open passageway locked door magical wardrobe creative note process agnostic room maze deal region mean connect room directly room sometimes avoid want find resulting dungeon fun play connected region part main one unify demo use little flood fill algorithm color newly merged region look pretty real implementation need mess tile make little data structure track region x merged remove extraneous connector likely existing connector connect two region merged since longer connect two separate region want spanning tree discard still connector left go remaining connector imply still least one disconnected region keep looping unconnected region merged main one earlier said want perfect dungeon make crappy gameplay since creates spanning tree exactly got allow single connector two region dungeon tree single path two point fixing pretty simple step cull unneeded connector give slight chance opened something like rngonein carve po celldoor occasionally carves extra opening region give u imperfect loop want make dungeon fun play note also easily tunable make chance likely get densely connected dungeon uncarving stop get dungeon packed chock full maze corridor dead end certain sadistic appeal exactly going last remaining step sparseness pas described earlier got room connected remove dead end maze maze reduced winding set passageway needed connect room every corridor guaranteed go somewhere interesting ended summary place bunch random nonoverlapping room fill remaining solid region maze connect maze room neighbor chance add extra connection remove dead end pretty happy far perfect though tends produce annoyingly windy passage room tune tweaking maze generation algorithm making passageway le windy tends make wander edge dungeon strange look fact room maze aligned odd boundary make thing simpler help fill nicely give dungeon bit artificially aligned look overall improvement dungeon make seem pretty fun play want see play game right browser code demo pretty gnarly making animated add lot complexity instead much cleaner implementation game us bonus making far super dense giant dungeon find hypnotic sorry need canvas support demo
655,Lobsters,visualization,Data Visualization,"Fundamental plot arcs, seen through multidimensional analysis of thousands of TV and movie scripts",http://sappingattention.blogspot.ca/2014/12/fundamental-plot-arcs-seen-through.html,fundamental plot arc seen multidimensional analysis thousand tv movie script,proceeding ieee international conference big data plot structure typical episode tv show derived topic model wrote earlier simpson move away school first minute example movie bookworm post ted underwood objected past deeper explanation pca dan harmon nt community dan harmon story circle damned follow standard arc geometry music using library,note somewhat complete slightly le colloquial eminently citeable version work proceeding ieee international conference big data plus came around calling whole endeavor plot arceology interesting look last post plot structure typical episode tv show derived topic model may help understanding individual tv show method also show promise ambitious goal understanding general structural element tv show movie draw tv movie script carefully crafted structure wrote earlier simpson move away school first minute example larger corpus even individual word frequently show strong bias towards front end script crafting show way language distributed time going make general observation way script shift thematically stuff pretty interesting first started analyzing set thought might end turn combining thematic script topic model possible something find really fascinating little mysterious sketch derived ten thousand hour dialogue corpus could literally call plot arc multidimensional space word screen time first let lay groundwork many many individual word show strong trend towards beginning end script fact plotting movie calling screen time usually much recognizable signature plotting thing historic time explore movie bookworm done cut every script twelfth movie tv show chart show course episode movie first minute left last one right example phrase love mostly love frequent towards end movie tv show character movie almost three time likely profess love last scene movie first including tv show unknown sanity check pattern hold television movie tend romantic love wait end declare necessarily surprising fundamental medium phenomenon well worth understanding better convention like individual tv show play shared structural element medium whole lot individual word phrase trend even one nt map firmly understanding plot point take phrase instance rare beginning script common middle rare towards end well presumably encapsulates particular type dialogue protagonist give seek advice consequence action first scene wo nt necessary exposition laid hero reach crossroad script wrap third act importance decision fade favor consequence see working result grammatically well word shown becomes common typical script proceeds interesting point share link exploring word could probably go quite right though question le individual instance generalizing pattern underlying shift one way approach overall question structure would use word script search interesting pattern actually feasible though computationally pretty difficult something keep mind later topic model described last time provide nice way understand actually going typical plot arc new nt know topic model lda digital humanist got together decided post ted underwood one read explanation topic screen time word show pattern screen time topic since topic easy search strongest pattern using linear model test fittedness straight line went data set pull nine topic show strongest directionality click enlarge topic show clear strong directionality course script character talk truth lying often narrate murder use language apology authenticity two nine topic display sorry prominently talk le hand business company job office time day using method working middle also see topic clustered middle episode movie conversely one predominantly used beginning end script curve nt quite pretty show element tend get dropped emphasized game actually afoot two topic used mostly edge grand language world government really beautiful curve show mostly middle movie two pair particular stick one pair look eye face look eye hand head cut hand suggesting focus human body human face occur mostly heart film question answer question talk people want say suggesting descriptive language narration questioning also comparatively rare first third act easy get little justso curve instance falling away later face return last scene face return way rest body nt contains grand eternal resonance nation world maybe crazy certainly major element structural similarity shown pattern one caveat get really exciting stuff way chosen arrange data creating odd artifact particular dividing three minute chunk dividing twelfth occasionally strange thing particularly true show shorter minute typically end lacking threeminute chunk assigned twelfth think later version may change could take day onagainoffagain computation interested model right nt want take time moving topic space screen time chart show distribution topic screen time think practice le susceptible embarrassing error one objected past plotting topic historical time guarantee author equally represented across time period help eliminate question linguistic drift problem though sure document say space final frontier first couple minute skewing certain element model odd way interested fundamentally topic though interested tv show move writing topic boring writing television nt answer think way individual episode tv show move space created topic one way dimensional reducing topic space using principal component analysis let ease though using topic explain suppose take think interesting linear trend shift mundane world talking time day personal world giving taking apology chart showing proportion morningtomorrow topic axis sorryreallytalk topic x axis typical script start part using apology language time language end proportion flipped script move one pole nt worry typical script though drop text want space see move tend noisier smaller sample going use part rather really wanted dazzle use moving average would artificially smooth curve totally necessary randomly picked top show sample see move chart look like law order svu follows pattern almost exactly west wing come close although mostly finished time talk end first half hour show depart significantly track double back last minute survivor move left right top bottom dr seems almost move opposite direction convention still two relatively scarce variable surprising well random sample hold probably coincidence well west wing law order show use vocabulary well using typically one fail underrepresented example doctor hardly talk time day perhaps time travel topic instead way might look chart say completely random method bunk sign left right trend individual show nt think crazy based chart least wait get higherdimensional stuff passing definitive judgment plot arc interesting even better way approach general problem plot arc chart motion two dimensional space full dimension move around one every topic principal component provides nice way plot simultaneously taking restricted set document one sixth screen time text spoken movie tv show period calculating first two component forgive linking one earliest series blog deeper explanation pca note though plotting chunk use chunk screen time rather calculate component aforementioned problem show minute arrive heart long post plotting individual trend lot way imagine curve moving combine topic present show single structure emerged quite literally plot arc reduced much complicated curve moving space saying grand corpus ten thousand hour studioapproved investorfunded unionwritten script two major trend stand one set directional trend advancing continuously course film one cyclical language return back origin tempting get mystical humanist often applying technique like pca perhaps emphasize hard imagine shape coming pca algorithm input put specifically designed destroy genre signal would ordinarily output pca even ran pretty confident sort curve would emerge reasonable possible option story structure would circle la dan harmon true circle pretty implausible know intuitively first line story wo nt exactly last although may similar way pure rainbow shape probably confirmation method work radical insight nature narration maybe part want say nt give much maybe little bit fundamental narratology nt tell anyway outside parenthesis said really interesting knowing arc knowing make look loading component overlaid particularly beautiful visualization need expand really read give better sense mean move space although dimension showing important one plot fun let put single narrative typical script start among group wisecracking teenager school making plan day come weekend office however dead body discovered wisecracking cease instead befuddled victim try describe accurately murder happened apologize mistake inspire give defeat fight victory heartfelt plea almighty help lie testimony trial carefully move future apologizing reflecting new truth learned anything jump might dominance trope detectivecrime fiction saw last post seem strongest element somewhat tempted exclude future version hand capture centrality murder mystery contemporary television fiction genre come close laying general scene whatever general principle plot learn watching tv movie almost certainly deeply inflected crime show nt place personal memory palace literary criticism believe argument detective novel central formation century novel anyone important remember general scheme every show follows point script tend start either school scene work scene discovery body many different way reach plot curve including probably nonsensical one wisecracking office nt lead trial often although could actually search corpus method find rare episode case individual show mirror general plot arc able overlay individual show toy example apology temporality example thing individual plot arc lo behold show tend follow plot arc perfect although er pretty close also certainly random general curve reflects quite well overall shape arc traced aggregate show brief note realized writing prove efficacy needed segregate training data output arc generated subcorpus full set specifically designed include csi er top show er following plot arc derived batch show nt include er csi show see eagleeyed reader might noticed x yaxes different number archetype fit got result nt expect though perhaps twenty show minute dialogue movie bookworm arranged single plot almost sweep arc roughly like er csi one although rougher others show like gilmore girl simpson seem extend action final scene rather returning home although trace arc portion plot arc space really make sense chart might click expand open separate window zoom zoom pan around truest portion plotarc space land correspond genre crime show live area something like early middle show science fiction camp end end know pca may initially seem weird method usually fairly good segregating genre remember pca space made massive document one ten minute hour tv show evenly divided across normal avenue genre signal almost entirely muted turn signal structurality also tied signal genre star trek camped together southeast entirety science fiction language endingy even final scene typical ncis episode particularly updown dimension remember tends separate mundane eternal nt many watercooler scene start trek turn conversely forensics show nt dispensing many eternal truth position tell u roughly genre signal somewhat immensely strong plot arc signal even term designed discover plot relationship clustering interesting enough omnipresence curve suggests follow path space way regardless start look one allowed expand show charmed cold case three star trek follow curve perfectly others least move left right two biggest problem survivor obviously face different narrative issue ca nt really explain away plot structure tendency show start southwest quadrant end le decisively even usually follow something like standard curve multidimensional point view tell u something really interesting future research plot motion multidimensional space position existing text analysis toolkits built around spatial probabilistic measure nt really conceive possibility motion archetypal plot arc better thought force pull given script whatever starting point different direction different force time unfolds like tide going breakpoint even point interesting question could answered tool hand typical show show inverted arc successful show follow arc better failure nt community dan harmon story circle damned follow standard arc probably best investigated particular subsection learn transatlantic genre copdetective show maybe trying filter national vocabulary might turn low hanging fruit soon ending mostly post long enough data could use cleaning next time write using slightly different topic model possibly chunking rather threeminute one could easily fill another halfdozen question vein right sure one extremely important observation noticed nt time fully plumb tv show show much greater regularity form film could data problem suspect real everything tv system enforces heavy constraint tight structure even movie easily flout particularly topic seem better capture theme interpersonal conflict individual growth getting past usually take text analysis really pushing investigation farther may require really difficult thought best capture motion along arc phenomenon could multiply multidimensional space across dimension already pushing limit data closest standard technique might transition matrix applied topic space rather word way problem resembles musicology field firm grasp structure text math reminds particular dmitri tymoczko geometry music treat chord progression path multidimensional space time span working much greater kind space want sort schenkerian analysis plot pure formulaic banality much network tv make project particularly appealing sitcom episode rondo hourlong drama sonata form cinematic drama probably closely resembles meandering idiosyncratic tone poem say nothing novel though sure way could creatively deployed white whale narrative doubt signal plot arc would anywhere near strong also danger analogy highlevel musical structure implies schenkers ursatz seem like weird cross mirage tautology said kind structure like exist math nt real meaningful sense useful curious anyone else think one particular appendix two image lot show graphically problematic might help locate favorite show find error prettiest way handle would interactive graphic using library could see curve unveil space added show got get little actual history done week maybe appendix open new window top show one giant plot show tendency southwestern show end closer middle plot arc worry bit tendency show cluster portion form sort macro version arc nt even know appendix open new window expand top show alphabetical order faceted one per frame
656,Lobsters,visualization,Data Visualization,Christmas Carol and other eigenvectors,http://evelinag.com/blog/2014/12-15-christmas-carol-and-other-eigenvectors/index.html,christmas carol eigenvectors,f advent calendar christmas carol github parsing book project gutenberg project gutenberg github representing text bigram data preprocessing principal component analysis similarity classic work literature wrote christmas carol curse dimensionality summary source xkcdcom,blog post mark day amazing f advent calendar christmas getting closer soon time relax perhaps read nice book know wrote classic christmas story christmas carol source claim charles dickens sure look book compare book wrote term language used book also analyse classic work literature victorian edwardian era look similarity language end try find really charles dickens wrote christmas carol simple data analysis project compare visualises publicly available classic english book general approach analysis complex data hard compare directly describe data using set characteristic feature literature analysis using frequency pair letter called bigram simple feature capture characteristic language different author use compute feature set classic book english use principal component analysis pca find different language different author also use pca projection visualise data visually explore similarity finally use k nearest neighbour classification method see really charles dickens wrote christmas carol using f post source code available github parsing book project gutenberg project downloaded book total classic english author jane austen charlotte bronte charles dickens arthur c doyle emily bronte thomas hardy rudyard kipling h g well book used public domain available project gutenberg book using little project also available github together source code first annoying step data analysis clean data every book project gutenberg come licence agreement beginning full licence text end structure section fairly standardised make fairly easy strip book part preamble beginning also contains book title extract f straightforward load text book separated line look specific line mark beginning end book following function identify main body text standardise lower case also find book title open system open systemio type bookpart start end function us specific format book project gutenberg let isbookpart part line string let keyword match part start start end end linecontains keyword project gutenberg ebook linecontains keyword project gutenberg ebook let bookstarted line isbookpart start line let bookfinished line isbookpart end line process line text book skip license agreement standardise letter let cleantext line string line seqskipwhile fun str bookstarted str seqtakewhile fun str bookfinished str stringconcat seqmap fun c charisletter c chartolowerinvariant c else extract title book preamble let getbooktitle line string line arraypick fun str strstartswith title str trim else none ingredient preprocess book let loadbook filename let fullcontents filereadalllines filename let title getbooktitle fullcontents let text cleantext fullcontents title text representing text bigram bigram simply pair letter used various language modelling algorithm example different language use bigram frequency characteristic language property make possible use bigram simple language identification generally symbol letter included bigram well pair letter space show common character beginning end word define possible bigram interested piece code generates simply possible pair letter let alphabet abcdefghijklmnopqrstuvwxyz let letterpairs alphabet b alphabet b finally write function turn book sequence bigram count sequence letter book easy split consequtive pair letter using seqwindowed seqpairwise count occurences pair seqcountby wanted count number trigram triple letter would need change window size seqwindowed let rawbigrams text seqwindowed seqcountby id following complete function process whole book return bigram count standard order defined letterpairs extract title bigram count specific book let bookbigrams filename let title text loadbook filename let rawbigrams text seqwindowed seqcountby id dict let bigramcountvector letterpairs arraymap fun pair rawbigramscontainskey pair rawbigrams pair else title bigramcountvector find bigram frequent book let filename c let title data bookbigrams filename common bigram arrayzip letterpairs data arraysortby fun x snd x seqtake christmas carol common bigram th followed seems frequent word book val seq char int seq h h e n following block code process book little data set book located directory named author speed run step parallel using f pseq computing bigram book still timeconsuming step analysis reason save result csv file rerun computation often find resulting csv file sourcecode r open fsharpcollectionsparallelseq let booksdir c tempbooks let authordirs directorygetdirectories booksdir compute bigram count book let authorbigrams authordirs arraymap fun directorygetfiles pseqmap fun file bookbigrams file pseqtoarray omit save computed result csv file let header author book letterpairs arraymap fun c c arraymap string stringconcat stringconcat let line arrayzip authordirs authorbigrams arraymap fun data let author pathgetfilename data arraymap fun b x author b x arraymap string stringconcat arrayconcat let file c tempbooksbigramvaluescsv filewritealllines file arrayappend header line omit data preprocessing although count bigram book still finished cleanup many bigram rarely appearing standard english text qb bg rare bigram behave like noise data might come example unusual name used one author etc graph show many time bigram appears book safely discard many bigram rarely used read csv file extract data omit read csv file extract data r r load open system open systemio open fsharpcharting load full dataset let datafile c tempbooksbigramvaluescsv let author title fulldata datafile filereadalllines arraymap fun line let fullline linesplit fullline fullline fullline arraymap fun x doubleparse x omit sort bigram frequency let sortedbigrams idx letterpairslength let sum fulldata arraysumby fun x x idx idx sum arraysortby fun idx sum sum arraymap fst many bigram keep let bigramcount let mostusedbigrams sortedbigrams set let choosebigrams bigramvalues bigramvalues arraymapi fun x mostusedbigramscontains x else none arraychoose id keeping frequent bigram last step preprocessing data normalize total count bigram relative frequency within document normalize count relative frequency let normalize x float let total arraysum x x arraymap fun x xtotal finally data prepared mathematical analysis following piece code turn data matrix open mathnetnumerics open mathnetnumericslinearalgebra open mathnetnumericslinearalgebradouble let datamatrix fulldata arraymap fun x choosebigrams x arraymap fun x normalize x densematrixofcolumnarrays principal component analysis principal component analysis pca mathematical method data transformation commonly used dimensionality reduction right dataset ie separate dimension bigram hard visualise data get overview relation individual book author pca give u method project data onto lowerdimensional hyperspace preserving difference projection data point far original data stay distant vice versa pca mathematically derived projection lowerdimensional hyperspace minimizes sum squared difference original data point lowdimensional projection simple term find direction largest variance data illustration first principal component show direction largest variance data second principal component point direction smaller variance use principal component direction new coordinate system dimensionality reduction typically discard direction dimension account small variance data dimension informative vary data point account noise data actual principal component analysis center data mean zero mean vector whole dataset let center let n datamatrixcolumncount float datamatrixrowsums n normalize data zero mean let centeredmatrix let summatrix arrayinit datamatrixcolumncount fun center densematrixofcolumnvectors datamatrix summatrix standard algorithm computing principal component analysis simple principal component eigenvectors data covariance matrix function eigenvalue decomposition mathnet numerics make straightforward compute f first need calculate covariance matrix centered data frac x xt x data matrix resulting covariance work scaled covariance matrix x xt eigenvectors matrix compute covariance matrix let covariancematrix centeredmatrix centeredmatrixtranspose eigenvalue decomposition let evd covariancematrixevd variable evd object returned mathnet contains eigenvectors eigenvalue covariance matrix direction largest variance eigenvectors correspond largest eigenvalue since eigenvalue ordered smallest largest pick eigenvectors end matrix following function return matrix formed important eigenvectors let eigenvectors let evdeigenvectors mcolumncountd eigenvectors ready compute projection data set onto specified number dimension tilde x edt x tilde x approximation original data matrix x dimension ed eigenvector matrix formed important eigenvectors following function take number dimension input return projection data specified number dimension let projection eigenvectors transpose centeredmatrix similarity classic work literature finally look classic book compare term language use plot show projection onto two significant principal component resulting image quite interesting h g well rudyard kipling well separated others might result using foreign exotic name book hand arthur conan doyle seems place perhaps sherlock holmes investigated case many different environment another interesting thing woman author jane austen bronte sister grouped together bottom half plot note visualisation simplifying summarizes vector two dimension still seems reveal interesting regularity data wrote christmas carol let turn key question blog post indeed charles dickens wrote book christmas carol use simple classification algorithm k nearest neighbour algorithm simple computes distance data point interest book data point book selects k nearest item author christmas carol book author wrote book closests classification algorithm work well combined pca standard form k nearest neighbour suffers socalled curse dimensionality computing distance highdimensional space result highly sensitive noise irrelevant dimension preprocessing data pca projecting lowerdimensional space k nearest neighbour turn much robust algorithm analysis christmas carol projected book bigram frequency dimension capture information data visualisation let projecteddata projection let christmascarol projecteddatacolumn christmascarolidx identify author look three nearest neighbour based euclidean distance let knearest k idx v projecteddataenumeratecolumnsindexed idx christmascarolidx let distance v christmascarol v christmascarol yield title idx distance seqsortby snd seqtake k arrayofseq knearest conclusion val string float oliver twist tale two city sign four well seems must charles dickens two three closest book written show simple pca analysis bigram able capture characteristic language used different author summary christmas themed blog post went task identifying author book based feature language used work although simple toy problem general principle apply problem well principal component analysis incredibly useful tool visualisation complex highdimensional data together k nearest neighbour algorithm used easy exploration supervised learning problem might even help fairy tale source xkcdcom happy holiday
657,Lobsters,visualization,Data Visualization,Phinch: framework for visualizing biological data,https://github.com/PitchInteractiveInc/Phinch,phinch framework visualizing biological data,head phinch phinch alfred p sloan foundation pitch interactive uc davis phinch biological observation matrix data biom qiime instruction biom file format biomformat run repo locally http coffeescriptorg library http http aaronpowellgithubiodbjs http githubcomeligreyfilesaverjs http momentjscom http jquerycom http jqueryuicom http larsjungdefracs http githubcomeligreyblobjs http datatablesnet http stukgithubiojszip http lodashcom http githubcompieroxylzstring http license,head phinch launching desktop app macos window linux may new feature include support json biom file retooled visualization improved image export sharing ability work offline phinch opensource framework visualizing biological data funded grant alfred p sloan foundation project represents interdisciplinary collaboration pitch interactive data visualization studio oakland ca biological researcher uc davis whether gene protein microbial specie phinch provides interactive visualization tool allows user explore manipulate large biological datasets phinch optimized use chrome browser currently support downstream analysis biom file biological observation matrix jsonformatted file type typically used represent marker gene otus metagenomic data sample metadata taxonomyontology information must embedded biom file uploaded data phinch support sparse dense biom format although sparse biom file highly recommended since file size much smaller qiime user prepare biom file executing following command makeotutablepy repsettaxassignmentstxt second add sample metadata biom file input file otu map defining cluster raw sequence read taxonomy file contains taxonomy gene ontology string correspond otu mapping file tabdelimited file containing sample metadata instruction biom addmetadata samplemetadatamappingfiletxt biom file format currently phinch work biom file type formatted json using qiime newer produce biom file type formatted following command availible biomformat package create new jsonformatted biom file biom file biom convert otutablebiom otutablejsonbiom tabletype otu table tojson run repo locally phinch written coffeescript http coffeescriptorg programming language compiles javascript install phinch locally need install coffeescript compile code follows install coffeescript sudo npm install g coffeescript cd local phinch folder coffee script cw src library http indexeddb http aaronpowellgithubiodbjs filesaver http githubcomeligreyfilesaverjs moment http momentjscom jquery http jquerycom jqueryui http jqueryuicom jqueryfracs http larsjungdefracs blob http githubcomeligreyblobjs datatable http datatablesnet jszip http stukgithubiojszip lodash http lodashcom lzstring http githubcompieroxylzstring http license bsd license
658,Lobsters,visualization,Data Visualization,Doom3 is the proof that “keep it simple” works,http://www.codergears.com/Blog/?p=1103,proof keep simple work,id software activision source code orginal source cppdepend provides common base class useful service make easy string manipulation source code highly decoupled gui framework mfc provides good utility library idlib implementation easy understand summary,search web best c source code source code mentioned many time testimonial like one spent bit time going source code probably cleanest nicest looking code ever seen doom video game developed id software published activisionthe game commercial success id software million copy game sold november id software maintained tradition released source code previous engine source code reviewed many developer example feedback fabien orginal source doom bfg written c language vast used generate great code also abomination make eye bleed fortunately id software settled c subset close c class flow brain little resistance exception reference use pointer minimal usage template const everywhere class polymorphism inheritance many c expert recommend c class approach however developed could explain use modern c mechanism let go inside source code using cppdepend discover make special modularized using project list project statistic type dependency graph show relation defines many global function however treatment implemented class data model defined using structs concrete idea using structs source code metric view show blue rectangle metric view code base represented treemap treemapping method displaying treestructured data using nested rectangle tree structure used usual code hierarchy project contains namespaces namespace contains type type contains method field observe many structs defined example doomdll type structs systematically used define data model practice adopted many project approach big drawback case multithreaded application indeed structs public field immutable one important argument favor using immutable object dramatically simplifies concurrent programming think writing proper multithreaded programming hard task hard synchronize thread access resource object others o resource hard synchronize access hard guarantee race condition multiple write access read access done multiple thread multiple object write access word state object accessed thread change need synchronization let search class least one base class almost stucts class base class generally oop one benefit inheritance polymorphism blue virtual method defined source code method virtual virtual pure list abstract class defined defined abstract class defined pure interface ie virtual method pure let search method using rtti method use rtti resume basic concept oop used advanced design pattern used overuse interface abstract class limited use rtti data defined structs nothing special differentiate code many others using c class criticized many c developer interesting choice developer help u understand secret provides common base class useful service many class inherits idclass idclass provides following service instance creation type info management event management make easy string manipulation generally string used type project many treatment done using need function manipulate defines idstr class contains almost useful method manipulate string need define method case many string class provided framework source code highly decoupled gui framework mfc many project using mfc code highly coupled type find type mfc everywhere code code highly decoupled mfc gui class direct dependency shown following cqlinq query choice big impact productivity indeed gui developer must care mfc framework developer mandatory waste time mfc provides good utility library idlib almost project used type utility class shown result following query observe used utility one c developer use good framework utility spend developement time fight technical layer idlib provides useful class needed method treat string container memory facilitate work developer let focus game logic implementation easy understand implement hard coded compiler known c developer easy task develop parser compiler however implementation easy understand code clean dependency graph class used compiler code snippet compiler source code already study code source many parser compiler first time discover compiler source code easy understood whole source code magic explore source code say wow beautiful summary even design choice basic designer make many decision let developer focus game logic facilitate technical layer stuff increase lot productivity however using c class know exactly expert like developer recommended beginner take risk ignore modern c recommendation
660,Lobsters,visualization,Data Visualization,Shadershop: An interface for programming through spatial reasoning,http://tobyschachman.com/Shadershop/,shadershop interface programming spatial reasoning,video part harmonic part noise part higher dimension create shadershop run browser keyboard command source code hosted github coming soon acknowledgement communication design group future programming workshop,shadershop december programming today exercise symbolic reasoning write sequence text editor explain idea colleague speak word draw diagram gesture hand augment symbolic channel spatial channel communicate program computer spatial channel shadershop interface programming gpu shaders mode direct manipulation image editor like photoshop experiment leveraging programmer spatial reasoning way coding today leverage programmer symbolic reasoning video part harmonic contrast symbolic spatial reasoning introduce shaders introduce interface add sine wave harmonic series part noise build noise function sum geometric series create fractal noise part higher dimension introduce color map view twodimensional function build fractal noise two dimension create shadershop run browser tested chrome keyboard command ctrlr reset shadershop autosave load example video shiftclick also work select multiple function source code source code hosted github coming soon process recording two video writing note idea shadershop documentation development process acknowledgement shadershop developed within communication design group presentation video initially prepared future programming workshop thanks jonathan edward richard gabriel participant workshop feedback thanks ryan alexander assistance webgl thanks glen chiacchieri yoshiki ohshima ken perlin bret victor idea encouragement
661,Lobsters,visualization,Data Visualization,The evolution of chess openings and why GIFs make for bad data visualizations,http://www.randalolson.com/2014/11/02/the-evolution-of-chess-openings-and-why-gifs-make-for-bad-data-visualizations/,evolution chess opening gifs make bad data visualization,evolution opening time make better data visualization show important data smoothing interactive version,earlier year went weeklong data analysis frenzy massive data set chess tournament game one better visualization came post series evolution opening time set looked popularity various chess opening however tried visualize move found difficult use area chart instead turned gif well videogif video retrospect video visualization worthless communicating chess opening changed time watching video bit information viewer possibly hope glean opening dropped popularity opening become diverse time data visualization take considerable cognitive resource comprehend critical failure visualization top typical cognitive resource required interpret also requires viewer remember graph looked like even second ago make sort meaningful comparison requirement undoubtedly lead cognitive overload viewer ultimately render visualization unusable short make better data visualization show important data require viewer remember part graph several second ago making comparison simply work illustrate concept remade graph stacked area chart use smoothing make chart look reasonably presentable click image larger fully labeled version interactive version done looking visualization go back video see trend never saw video easier compare time point area chart video keep insight mind next time consider using gif video visualize time series find entire chess analysis series
662,Lobsters,visualization,Data Visualization,Green Honey,http://muyueh.com/greenhoney/,green honey,,
663,Lobsters,visualization,Data Visualization,Node.js in Flames,http://techblog.netflix.com/2014/11/nodejs-in-flames.html,nodejs flame,dousing fire perf event excellent article nodejs jstack support nodejs flame graph linux original svg one global,graph plot request latency m region time color corresponds different aws az see latency steadily increase m hour peak around m instance rebooteddousing fireinitially hypothesized might something faulty memory leak request handler causing rising latency tested assertion loadtesting app isolation adding metric measured latency request handler total latency request well increasing nodejs heap size saw request handler latency stayed constant across lifetime process m also saw process heap size stayed fairly constant around gb however overall request latency cpu usage continued rise absolved handler blame pointed problem deeper stacksomething taking additional m service request needed way profile application cpu usage visualize spending time cpu enter cpu flame graph linux perf event rescuefor unfamiliar flame graph best read brendan gregg excellent article explaining quick summary straight article box represents function stack stack frame yaxis show stack depth number frame stack top box show function oncpu everything beneath ancestry function beneath function parent like stack trace shown earlierthe xaxis span sample population show passing time left right graph left right ordering meaning sorted alphabetically width box show total time oncpu part ancestry oncpu based sample count wider box function may slower narrow box function may simply called often call count shown known via sampling sample count exceed elapsed time multiple thread running sampled concurrentlythe color significant picked random warm color called flame graph showing hot oncpu interactive mouse svgs reveal detailspreviously nodejs flame graph used system dtrace using dave pacheco nodejs jstack support however google team recently added perfevents support allows similar stack profiling javascript symbol linux brendan written instruction use new support arrived nodejs version create nodejs flame graph linuxhere original svg flame graph immediately see incredibly high stack application yaxis also see spending quite lot time stack xaxis closer inspection seems stack frame full reference expressjs routerhandle routerhandlenext function expressjs source code reveals couple interesting handler endpoint stored one global arrayexpressjs recursively iterates invokes handler find right route handlera global array ideal data structure use case unclear expressjs chose use constant time data structure like map store handler request requires expensive n look route array order find route handler compounding matter array traversed recursively explains saw tall stack flame graph interestingly expressjs even allows set many identical route handler route unwittingly set request chain like b c c c c e f g h request route c would terminate first occurrence c handler position array however request would terminate position array needle spent time spinning b multiple instance c verified running following vanilla express appvar express require express var app express appget foo function req re ressend hi add second foo route handlerappget foo function req re ressend consolelog stack approuterstack applisten running expressjs app return route handlersstack key regexp handle function query key regexp handle function expressinit key regexp foo handle function route path foo stack object method object key regexp foo handle function route path foo stack object method object notice two identical route handler foo would nice expressjs throw error whenever one route handler chain route point leading hypothesis handler array increasing size time thus leading increase latency handler invoked likely leaking handler somewhere code possibly due duplicate handler issue added additional logging periodically dump route handler array noticed array growing element every hour handler happened identical mirroring example handle function servestatic name servestatic params undefined path undefined key regexp fastslash true route undefined handle function servestatic name servestatic params undefined path undefined key regexp fastslash true route undefined handle function servestatic name servestatic params undefined path undefined key regexp fastslash true route undefined something adding expressjs provided static route handler time hour benchmarking revealed merely iterating handler instance cost m cpu time correlate latency problem seen response latency increase m every hour turned caused periodic function code main purpose refresh route handler external source implemented deleting old handler adding new one array unfortunately also inadvertently adding static route handler path time ran since expressjs allows multiple route handler given identical path duplicate handler added array making matter worse added rest api handler meant invoked service request service fully explains request latency increasing every hour indeed fixed code stopped adding duplicate route handler latency cpu usage increase went away
664,Lobsters,visualization,Data Visualization,The reddit Front Page is Not a Meritocracy,http://toddwschneider.com/posts/the-reddit-front-page-is-not-a-meritocracy/,reddit front page meritocracy,traveling salesman animation reddit post reddit second third fourth page chance make first page one day life reddit top data http wwwredditcomjson available github reddit ranking review reddit ranking algorithm work vote age fact important factor determine rank reddit default front page initial analysis fact chance making top subreddits created equal google spreadsheet rfunny rpersonalfinance rdataisbeautiful kmeans clustering cluster red popular subreddits aka viral candy askreddit aww funny gaming gifs iama mildlyinteresting movie news pic science showerthoughts todayilearned video worldnews cluster green page two subreddits often bottom page two almost never page one documentary fitness gadget history internetisbeautiful listentothis nosleep personalfinance philosophy upliftingnews writingprompts cluster blue rest art askscience book creepy dataisbeautiful diy earthporn explainlikeimfive food futurology getmotivated joke lifeprotips music nottheonion oldschoolcool photoshopbattles space sport television tifu twoxchromosomes vote score age imgur pageviews data wait point reddit codebase code data github available github,pleasantly surprised somebody shared traveling salesman animation reddit post made way reddit default front page ie top gif racked million pageviews imgur testament reddit trafficgenerating prowess post made front page though brought attention second page reddit bit luck maybe would make front page got wondering post reddit second third fourth page chance make first page reddit show post per page default point saw post rank top second page one spot away making front page point seemed inevitable would make page course make page one peaking decided investigate see could learn reddit post chance making top top much surprise found reddit front page pure meritocracy based vote ranking depend heavily subreddits subreddits seem follow quota system allocates certain subreddits specific slot page one two also prevents front page devolving entirely animal gifs final kicker case completely obvious learned link front page reddit receive lot traffic one day life reddit top get analysis interactive visual reddit top course single day post made top series graph x axis time day axis post reddit rank ie top page one top page two etc color series determined subreddit later post hover highlight path individual post click drag zoom click view underlying thread reddit change date see ranking different day first glance pretty clear post top maintain rank longer post turn much faster visualize date data fortunately reddit make easy collect data front page always available json http wwwredditcomjson set simple rail application scrape top post page reddit every minute dump data postgresql database wrote r script analyze data code data used post available github scraper ran week time collected dataset includes post million observation post appeared default reddit top interval included reddit ranking review plenty written reddit ranking algorithm work short version post vote score submission time age important factor highest ranked post one earn disproportionate number upvotes short time period soon see though vote age fact important factor determine rank reddit default front page initial analysis first analysis graph probability post making top function current rank word take observation post meet following criterion currently ranked outside top never previously top yet decline meaning rank fallen least place yet calculate percentage post rank eventually made top graph look like graph show probability reddit post eventually reach top function current rank post ranked chance reach top post ranked chance reach top data includes observation post rank yet decline something strange low probability post ranked eh basic analysis gave first answer traveling salesman gif ranked thought inevitable would make front page fact chance making top however graph raise least many question answer particular could possibly almost half post rank eventually make top le post rank achieve result seems bizarre would expected monotonically decreasing graph started investigating looking distribution best rank post showed similar unexpected behavior especially post whose best rank page two post dataset appeared rank common best rank achieved strange result though page two time many post peaked rank low compared rank mid general seems like post achieve best rank page two relative page three four might hypothesize post peak page two many post make page two later make page one theory contradicted earlier graph showed post page two lower conditional probability making page one compared post page three four looked distribution score rank turned post range low top probability typically much lower score post neighboring rank subreddits created equal turn post score age important determinant post appears default overall ranking every post must belong subreddit choice subreddit large impact post ranking given time default subreddits feed default homepage post dataset came total subreddits though handful single post top subreddits least post top led rfunny rpics raww google spreadsheet full listing subreddits ordered number post top started looking distribution observed rank post individual subreddits revealed unexpected trend example made histogram observed rank post popular subreddit rfunny found rfunny post simply never appear bottom half page one page two caught surprise thought reddit front page determined purely based vote age clearly case made graph different subreddits pattern started emerge subreddits especially popular one tended look like rfunny subreddits completely different distribution observed rank distribution observed rank post rpersonalfinance subreddit many post rpersonalfinance appear range post made top consistent earlier graph showed le post rank eventually reach front page subreddits looked different still traveling salesman animation posted rdataisbeautiful distribution observed rank rank look like many post rdataisbeautiful made top page one bunch appeared bottom half page one page two except rank dominated subreddits like personalfinance looked subreddits became apparent three type subreddits represented rfunny rpersonalfinance rdataisbeautiful series histogram show distribution observed rank subreddit individual subreddit label important focus instead three different distribution shape used kmeans clustering based observed rank distribution assign subreddit cluster colorcoded graph cluster cluster red popular subreddits aka viral candy askreddit aww funny gaming gifs iama mildlyinteresting movie news pic science showerthoughts todayilearned video worldnews cluster green page two subreddits often bottom page two almost never page one documentary fitness gadget history internetisbeautiful listentothis nosleep personalfinance philosophy upliftingnews writingprompts cluster blue rest art askscience book creepy dataisbeautiful diy earthporn explainlikeimfive food futurology getmotivated joke lifeprotips music nottheonion oldschoolcool photoshopbattles space sport television tifu twoxchromosomes number dimension reduced subreddits cluster becomes easier look difference cluster distribution rank cluster area chart show distribution cluster rank cluster represents popular subreddits like rfunny dominate top page one almost never show page two cluster contains subreddits like rpersonalfinance dominate bottom page two rarely make page one cluster contains everything else subreddits often make top page one stuck page two purgatory either cluster subreddits typically represent majority post bottom page one top page two way earlier interactive graph post cluster colored red green blue respectively since subreddit cluster behave differently might make sense recalculate earlier graph showing conditional probability making top separately subreddit cluster traveling salesman animation posted rdataisbeautiful part cluster newest graph show post cluster reach rank eventually reach top bit higher number calculated earlier based result aggregated across subreddits new set conditional probability graph make intuitive sense single earlier graph showed large decline probability post ranked big increase post ranked low see large decline increase due shifting mixture subreddit cluster rank mid usually post cluster cluster post almost never get front page hence low aggregate conditional probability rank cluster conditional probability graph still look bit le satisfying monotonically decreasing cluster conditional probability lower conditional probability page three four obvious reason maybe subreddit cluster defined perfectly something else entirely cause cluster post ranked lower probability making front page post vote score age mentioned previously known fact reddit incorporates vote score age ranking ranking however strict meritocracy based two factor many post top relatively low score say nearly post make top despite low score come cluster suggests post cluster subreddit need fewer vote appear top compared post cluster know exact justification preference system cluster probably designed keep reddit default top page varied would due vote alone based anecdotal experience upvote system favor easily digestible content stuff like cute animal gifs sure everybody love cute animal gifs also good offer wider variety content sublime ridiculous even requires overriding direct democracy pure votebased system looking back list subreddit cluster seems like cluster fun cheap laugh cluster contains serious discussionoriented post cluster bit grab bag somewhere upper echelon post make top score le regardless subreddit cluster come post top high score regardless subreddit post need high score page two furthermore page two excludes many popular subreddits therefore often take informational le cute vibe page three four post subreddit cluster appear post cluster subreddits much higher score counterpart cluster suggests vote graded curve favor cluster included post age graph graph contain many dimension become indecipherable heat map offer another way visualize relationship score age post probability making top expected heat map show probability making front page generally highest age low score high cluster post achieve high score aggregate probability cluster post making top top slim imgur pageviews data particularly impressed salesman gif received million pageviews imgur thought cool measure pageviews function reddit rank post got rank imagine many pageviews post must receive imgur far popular domain dataset accounting post reached reddit top crucial analysis pageviews reddit provide pageview data post imgur know many view nonimgur post received least roughly observe effect reddit rank traffic grabbed pageview data every imgur post grouped best rank achieved calculated percentile look like median imgur post reach reddit million pageviews see strange result imgur post actually pageviews post probably explained subreddits popular cluster subreddits get lot direct traffic one tend dominate rank overall imgur account post cluster cluster cluster wait point always thought reddit front page operated kind direct democracy surprised learn actually case reddit codebase largely open source possible logic reserve certain rank certain subreddits completely open know neither redditors asked curious see would happen subreddits treated equally guess reddit default top would contain even higher rate funny picture know maybe unintended side effect would lead people upvote varied content code data github code data available github main component repo ruby code collect data reddit api r code analyze data postgres database dump file mb compressed fully restored take mb disk
665,Lobsters,visualization,Data Visualization,Catching Your CPUs Napping,http://www.brendangregg.com/blog/2014-10-31/cpi-flame-graphs.html,catching cpu napping,cpu flame graph svg differential flame graph freebsd pmcstat pmcstat cpi flame graph svg flame graph conclusion meetbsd,see high cpu usage may forgiven believing cpu must furiously executing software like obedient robot never rest reality nt know happening cpu utilization alone cpu might napping instruction wait resource understanding cpu really help direct performance tuning simplest way measure average cyclesperinstruction cpi ratio higher value mean take cycle complete instruction often stalled cycle waiting memory io usually studied systemwide metric following new visualization take cpu flame graph assigns color relative cpi wow first time see stall cycle providing clear visualization cpu efficiency function width frame show time function child oncpu normal cpu flame graph color show function oncpu running stalled color range example scaled color highest cpi blue slowest instruction lowest cpi red fastest instruction flame graph also click zoom thanks adrien mahieux well mouseovers direct svg link example showing freebsd kernel vm virtual memory function slowest instruction expected involve memory io walk page table may cache well workload fastest instruction mtxlocksleep also expected spin loop color saturated frame left vmpagealloc mtxlocksleep worked fellow engineer oca development team already case cpi flame graph prompted study development two part make possible differential flame graph measuring stack instruction stall cycle briefly summarize latter using pmcstat freebsd approach also possible linux provided pmc access current cloud instance nt differential flame graph new feature explain separate post also want add option first summary flamegraphpl usually take input like following funca funcb funcc single line entry semicolon delimited stack followed sample count differential flame graph generated provide following input funca funcb funcc two value column intended show count flame graph sized using second column colored using delta positive red negative blue difffoldedpl tool take two foldedstyle profile generated using stackcollapse script emits twocolumn output cpi flame graph two value column stall cycle count unhalted cycle count first scaled average second column full bluered range used otherwise always unhalted cycle differential flame graph red freebsd pmcstat data example collected using freebsd pmcstat using following intel pmcstat n resourcestallsany cpuclkunhaltedthreadp sleep pmcstat r z g conversion statistic execelf samplestotal samplesunknownfunction callchaindubiousframes l lh rwr r root wheel oct rwr r root wheel oct careful pmcstat generate lot output quickly turn perturb performance measuring measured second sleep one event every million n despite raw output file mbytes example measured kernel stack frame deep note need set bootloaderconf reboot stack first always truncated frame pmstat g used create callchain text file look like cpuclkunhaltedthreadp sample mtxlocksleep bootkernelkernel vmpagealloc vmpagegrab allocbuf getblk clusterrbuild clusterread ffsread vopreadapv vnread vniofault aiodaemon forkexit clusterread ffsread cpuclkunhaltedthreadp sample resourcestallsany sample sfbufmext bootkernelkernel mbfreeext mfreem reclaimtxdescs counter cpu sample printed call chain cpi flame graph make cpi flame graph call chain output needed separate counter separate file second using vi creating outpmcstatcycles section titled cpuclkunhaltedthreadp outpmcstatstalls section titled resourcestallsany yes write perlawk next time converted folded format using stackcollapsepmcpl ed maste cat outpmcstatcycles stackcollapsepmcpl outpmcstatcyclesfolded cat outpmcstatstalls stackcollapsepmcpl outpmcstatstallsfolded finally making cpi flame graph difffoldedpl n outpmcstatstallfolded outpmcstatcyclesfolded flamegraphpl title cpi flame graph bluestalls redinstructions cpisvg svg top page flame graph software flamegraphpl stackcollapsepmcpl difffoldedpl found flame graph collection github conclusion much either software developer system administrator know cpu either memorybound instructionbound resulting small large performance improvement cpu flame graph already great way visualize software using cpu cpi flame graph use color show cpu really efficiency function p weekend speaking meetbsd performance analysis sure mention pmcstat lot stall cycle
666,Lobsters,visualization,Data Visualization,Will It Shuffle? A visualisation of shuffling algorithms,http://bost.ocks.org/mike/shuffle/compare.html,shuffle visualisation shuffling algorithm,shuffle matrix diagram shuffle discus hn,shuffle random comparators bad addition slow matrix diagram visualizes probability element placed position j end random shuffle purple cell represent negative bias orange cell represent positive bias good shuffling algorithm unbiased see uniform grey matrix bit white noise bad algorithm show streak matrix indicating distribution detail read previous post shuffle choose algorithm write refresh autorefresh comment discus hn
667,Lobsters,visualization,Data Visualization,Maps of Street Grids Colored by Orientation,http://www.datapointed.net/2014/10/maps-of-street-grids-by-orientation/,map street grid colored orientation,schooner rodger saloon trusty mercantile irony main street depression discovered pearshaped graton street view san francisco new york washington dc los angeles tokyo mapzen migurski openstreetmap metro extract sinebow knn leaflet poskanzer ignored completely,exclaimed jebediah nosed schooner onto fan fertile loam come sundown makeshift corral encircled livestock sabbath eve crown crude barn rose neighboring hummock next spring steady procession ship yielded healthy crop farmhouse wagon wheel burned double track river landing itinerant capitalist soon repurposed cluster spartan shack dispell ill humour rodger saloon satisfy homestead need trusty mercantile every fifth horseshoe free irony forthwith straightened graded main street ran east west land astride platted tidy rectangle soon washington jefferson joined parallel crossed even interval perpendicular first second third street crystal saturated solution grid grew shooting southeast open country along telegraph road doglegging left around miller swamp crossing river monroe street bridge lensed opposite shore different time round depression town planner discovered oh golly curve george city block necessarily need rectangle right three way intersection yeah pretty darn tootin thereafter new street came pearshaped le gridlike arrangement truly nirvana sunny day strolling wellworn sidewalk past widewindowed storefront old downtown people might call main streetaholic known scour map quaintness road trip happily choose byzantine route experience charm bygone broadway thought knew every one ukiah scott valley blue friend informed moving graton california came street view west santa rosa pocketsized downtown decorated handful adorable old west style building omfg treasure missed made map help find san francisco new york washington dc los angeles tokyo five interesting metro tokyonew yorkparislos angeleswashington dcchicagoberlinbostonlondon every public street colored predominant orientation neighbor thickened layout gridlike use oldschool woodworking metaphor brushed digital lacquer raw geographic transportation network data make grain pop detailoriented algorithmic image generated mapzen migurskiinspired october openstreetmap metro extract follows first assign linear street segment compassheadingbased tone modified sinebow degree directional difference corresponds full color revolution road right angle hue render point map use proximatic custom highperformance knn engine calculate lengthweighted average color assigned nearest meter street keying render weight local degree parallelismorthogonality derived similar vector space rolloffs outlying road territory pan zoom via vladimir agafonkin excellent leaflet viewer click acme button conventional map current view kudos poskanzer lot story city waxed town waned territory absorbed terrain negotiated ala san francisco ignored completely enjoy see grid
668,Lobsters,visualization,Data Visualization,Following a Select Statement Through Postgres Internals,http://patshaughnessy.net/2014/10/13/following-a-select-statement-through-postgres-internals,following select statement postgres internals,barcelona ruby conference one two four video finding captain nemo first half presentation big picture parse bison ruby microscope hard work nothing first half presentation second post analyze rewrite plan executing limit plan node executing sort plan node quicksort executing seqscan plan node wrong next time,captain nemo take professor aronnax tourof engine room fascinating descriptionof future technology perspective third series four post based presentation barcelona ruby conference called league activerecord post one two four video preparing presentation summer decided read part postgresql c source code executed simple select statement watched postgres using lldb c debugger postgres understand query actually find data looking post informal journal trip gut postgres describe path took saw along way use series simple conceptual diagram explain postgres executed query case understand c also leave landmark signpost look ever decide hack postgres internals end postgres source code delighted clean well documented easy follow find postgres work internally following journey deep inside tool use everyday finding captain nemo example query first half presentation follow postgres search captain nemo professor aronnax captain nemoplot course nautilus finding single name string column like straightforward hold tightly onto select statement explore postgres internals like rope deep sea diver use find way back surface big picture postgres sql string understand meant know data looking postgres process sql command send using four step process first step postgres par sql statement convert series c memory structure parse tree next postgres analyzes rewrite query optimizing simplifying using series complex algorithm postgres generates plan finding data like obsessive compulsive person leave home without every suitcase packed perfectly postgres run query plan finally postgres actually executes query presentation briefly touch first three topic focus last step execute c function inside postgres implement step process called execsimplequery find link along lldb backtrace give context exactly postgres call execsimplequery parse postgres understand sql string sent make sense sql keywords expression select statement process called parsing postgres convert sql string internal data structure understands parse tree turn postgres us parsing technology ruby parser generator called bison bison run postgres c build process generates parser code based series grammar rule generated parser code run inside postgres send sql command grammar rule triggered generated parser find corresponding pattern syntax sql string insert new c memory structure parse tree data structure take time today explain parsing algorithm work detail interested sort thing suggest taking look book ruby microscope chapter one go detailed example lalr parse algorithm used bison ruby postgres par sql statement exactly way using lldb enabling c logging code observed postgres parser produce parse tree captain nemo query top node representing entire sql statement child node branch represent different portion sql statement syntax target list list column clause list table clause sort order limit count want learn postgres par sql statement follow flow control execsimplequery another c function called pgparsequery see many helpful detailed comment postgres source code explain happening also point important design decision hard work nothing parse tree look familiar almost precisely abstract syntax tree ast saw activerecord create earlier recall first half presentation activerecord generated captain nemo select statement executed ruby query saw activerecord internally created ast called method first later see second post watched arel gem converted ast example select statement using algorithm based visitor pattern thinking ironic first thing postgres sql statement convert string back ast postgres parse process revers everything activerecord earlier hard work arel gem nothing reason creating sql string communicate postgres network connection postgres string convert back ast much convenient useful way representing query learning might ask better way way conceptually specifying data want postgres without writing sql statement without learning complex sql language paying performance overhead using activerecord arel seems like waste time go length generate sql string ast convert back ast maybe using nosql database solution instead course ast postgres us much different ast used activerecord activerecord ast comprised ruby object postgres ast formed series c memory structure idea different implementation analyze rewrite postgres generated parse tree convert another tree structure using different set node known query tree returning execsimplequery c function see next call another c function pganalyzeandrewrite waving hand bit glossing many important detail analyze rewrite process applies series sophisticated algorithm heuristic try optimize simplify sql statement executed complex select statement subselects multiple inner outer join lot room optimization quite possible postgres could reduce number subselect clause join produce simpler query run faster simple select statement query tree pganalyzeandrewrite produce pretend understand detailed algorithm behind pganalyzeandrewrite simply observed example query tree largely resembled parse tree mean select statement straightforward postgres able simplify plan last step postgres take starting execute query create plan involves generating third tree node form list instruction postgres follow plan tree select statement imagine node plan tree machine worker kind plan tree resembles pipeline data conveyor belt factory simple example one branch tree node plan tree take output data node process return result input node follow postgres executes plan next section c function start query planning process called pgplanqueries note startupcost totalcost value plan node postgres us value estimate long plan take complete use c debugger see execution plan query prepend sql explain command query like powerful way understand postgres internally one query might slow inefficient despite sophisticated planning algorithm pgplanqueries executing limit plan node postgres parsed sql statement converted back ast optimized rewrote query possibly simpler way third postgres wrote plan follow find return data looking finally time postgres actually execute query follows plan course let start top plan tree move skipping root node first worker postgres us captain nemo query called limit limit node might guess implement limit sql command limit result set specified number record plan node also implement offset command start result set window specified row first time postgres call limit node calculates limit offset value might set result dynamic calculation example offset limit next limit plan node repeatedly call subplan case sort counting reach offset value example offset value zero loop load first data value stop iterating postgres return last data value loaded subplan calling upper plan u first value subplan finally postgres continues call limit node pas data value subplan one time example limit value limit immediately return null indicating upper plan data available postgres implement limit node using code file called nodelimitc see postgres source code us word tuple set value one column subplan subplan example sort node appears limit plan executing sort plan node data value limit filter come sort plan node appears limit plan tree sort load data value subplan return calling plan limit sort limit node call first time get first data value see sort function differently limit immediately load available data subplan buffer returning anything sort buffer using quicksort algorithm finally return first sorted value second subsequent call sort simply return additional value sorted buffer never need call subplan sort plan node implemented c function called execsort executing seqscan plan node execsort get value subplan seqscan node appears bottom plan tree seqscan stand sequence scan mean look value table returning value match given filter understand scan work filter let step imaginary user table filled fake name looking captain nemo postgres start first record table known relation postgres source code executes boolean expression plan tree simple term postgres asks question captain nemo laurianne goodwin captain nemo postgres step next record candace also captain nemo postgres continues eventually find captain nemo postgres implement seqscan node using c function called execseqscan wrong done followed simple select statement way gut postgres seen parsed rewritten planned finally executed executing many thousand line c code postgres found data looking postgres return captain nemo string back rail application activerecord create ruby object finally return surface application postgres stop instead simply returning postgres continues scan user table even though already found captain nemo returning south pole air supply inside nautilus began run going postgres wasting time continuing search even though already found data looking answer lie farther plan tree sort node recall order sort user execsort first load value buffer calling subplan repeatedly value left mean execseqscan continue scan end table matching user user table contained thousand even million record imagine work facebook twitter execseqscan loop every single user record execute string comparison one obviously inefficient slow get slower user record added one captain nemo record execsort sort single matching record execlimit pas single record offsetlimit execseqscan iterated name next time fix problem sql query user table take time execute answer simple create index next final post series learn create postgres index avoid use execseqscan importantly show postgres index look like work speed query like one
669,Lobsters,visualization,Data Visualization,Taiga.io Visualizing the sudden traffic surge to our servers caused by Hacker News,https://www.youtube.com/watch?v=J39QjecJ-uQ&feature=youtu.be,taigaio visualizing sudden traffic surge server caused hacker news,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature
670,Lobsters,visualization,Data Visualization,IRHydra 2: v8 and Dart VM IR visualization,http://mrale.ph/irhydra/2/,irhydra dart vm ir visualization,,deprecated supporting various related feature irhydra always race clock switched new execution pipeline turbofanignition modernizing irhydra properly work would much time investment given nt need dig javascript performance anymore ultimately irhydra always stopgap solution created wooden stick duct tape always hoped one day devtools able display information unfortunately yet happened benefited irhydra past think need similar tool modern please contact team let know need requirement tool like irhydra must deeply integrated vm target provide best experience mean preferrably maintained people work vm find backup version vyacheslav egorov email protected
671,Lobsters,visualization,Data Visualization,Visualizing Garbage Collection in Ruby and Python,http://patshaughnessy.net/2013/10/24/visualizing-garbage-collection-in-ruby-and-python,visualizing garbage collection ruby python,rupy video recording presentation similar presentation rubyconf ruby microscope blog post beating heart application simple example free list allocating object python ruby developer live messy house python developer live tidy household mike bernstein presentation garbage collection gotham ruby conference mark sweep excited garbage collection ruby mark sweep v reference counting next time rest presentation,note post based presentation rupy budapest instead posting slide thought would useful wrote blog post still fresh mind also watch video recording presentation fyi planning similar presentation rubyconf except remove python info instead compare gc work inside mri v jruby rubinius detailed explanation gc ruby ruby internals generally see upcoming book ruby microscope due soon starch press algorithm business logic brain application organ would garbage collector since ruby python conference thought would fun compare garbage collection work inside ruby python get talk garbage collection glamorous exciting topic many get excited garbage collection number rupy attendee actually raised hand recently ruby community blog post speed unit test changing ruby gc setting think great good run test faster run app fewer gc pause somehow gc really excite seems like boring dry technical topic first glance actually garbage collection fascinating topic gc algorithm important part computer science history subject cutting edge research example mark sweep algorithm used mri ruby year old one gc algorithm used inside rubinius alternative implementation ruby invented recently however name garbage collection actually misnomer beating heart application gc system much collect garbage fact perform three important task allocate memory new object identify garbage object reclaim memory garbage object imagine application human body elegant code write business logic algorithm would brain intelligence inside application following analogy part body think garbage collector would got lot fun answer rupy audience kidney white blood cell think garbage collector beating heart application heart provides blood nutrient rest body garbage collector provides memory object application use heart stopped beating would die second garbage collector stopped ran slowly clogged artery application would slow eventually die simple example always helpful work theory using example simple class written python ruby use example today way amazing similar code language ruby python really slightly different way saying thing language also implemented similar way internally free list call nodenew ruby exactly ruby go creating new object u surprisingly little fact long code start run ruby creates thousand object ahead time place linked list called free list free list might look like conceptually imagine white square unused precreated ruby object call nodenew ruby simply take one object hand u diagram gray square left represents active ruby object using code remaining white square unused object note course diagram simplified version reality fact ruby would use another object hold string abc third object hold class definition node still object hold parsed abstract syntax tree ast representation code etc call nodenew ruby hand u another object john mccarthy implementation lisp containedthe first garbage collector courtesy mit museum simple algorithm using linked list precreated object invented year ago legendary computer scientist named john mccarthy working original implementation lisp lisp one first functional programming language also contained number groundbreaking advance computer science one concept automatically managing application memory using garbage collection standard version ruby also known matz ruby interpreter mri us gc algorithm similar one used mccarthy implementation lisp better worse ruby us year old algorithm garbage collection lisp ruby creates object ahead time hand code allocate new object value allocating object python seen ruby creates object ahead time save free list python python also us free list various reason internally recycles certain object list normally allocates memory new object value differently ruby suppose create node object using python python unlike ruby ask operating system memory immediately create object python actually implement memory allocation system provides additional layer abstraction top o heap time get detail today create second object python ask o memory ruby leaf unused object lying around inmemory next gc process run seems simple enough moment create object python take time find allocate memory u ruby developer live messy house back ruby allocate object ruby continue hand u precreated object free list free list become shorter shorter notice continue assign new value ruby leaf old value behind abc jkl mno node remain memory ruby immediately clean old object code longer using working ruby developer like living messy house clothes lying floor dirty dish kitchen sink ruby developer work unused garbage object surrounding python developer live tidy household python clean garbage object immediately code done using garbage collection work quite differently python ruby let return three python node object earlier internally whenever create object python save integer inside object c structure called reference count initially python set value value indicates one pointer reference three object suppose create new node jkl python set reference count jkl however also notice since changed point jkl longer reference abc python decremented reference count point python garbage collector immediately jump action whenever object reference count reach zero python immediately free returning memory operating system python reclaims memory used abc node remember ruby simply leaf old object lying around release memory garbage collection algorithm known reference counting invented george collins coincidentally year john mccarthy invented free list algorithm mike bernstein said fantastic presentation garbage collection gotham ruby conference back june good year garbage collector working python developer like living tidy house know kind place roommate bit ocd constantly cleaning soon put dirty dish glass someone already put away dishwasher second example suppose set refer node left see python decremented reference count def immediately garbage collect def node also note jkl reference count since point mark sweep eventually messy house fill trash life continue usual ruby program run time free list eventually entirely used precreated ruby object used application gray object remain free list white square left point ruby us another algorithm invented mccarthy known mark sweep first ruby stop application ruby us stop world garbage collection ruby loop pointer variable reference code make object value ruby also iterates internal pointer used virtual machine mark object able reach using pointer indicate mark using letter three object marked live active object application still using internally ruby actually us series bit known free bitmap keep track object marked ruby save free bitmap separate memory location order take full advantage unix copyonwrite optimization information see article excited garbage collection ruby marked object live remaining unmarked object must garbage meaning longer used code show garbage object white square next ruby sweep unused garbage object back onto free list internally happens quite quickly since ruby actually copy object around one place another instead ruby place garbage object back onto free list adjusting internal pointer form new linked list ruby give garbage object back u next time create new ruby object ruby object reincarnated enjoy multiple life mark sweep v reference counting first glance python gc algorithm seems far superior ruby live messy house live tidy one ruby force application stop running periodically time clean instead using python algorithm reference counting simple seems first glance however number reason many language use reference counting gc algorithm like python first difficult implement python leave room inside object hold reference count minor space penalty worse simple operation changing variable reference becomes complex operation since python need increment one counter decrement another possibly free object second slower although python performs gc work smoothly application run cleaning dirty dish soon put sink necessarily faster python constantly updating reference count value stop using large data structure list containing many element python might free many object decrementing reference count complex recursive process finally always work see next post containing note rest presentation reference counting handle cyclic data structure data structure contain circular reference next time next week type rest presentation discus python handle cyclic data structure gc work upcoming ruby release
672,Lobsters,visualization,Data Visualization,Visualizing Garbage Collection Algorithms,http://spin.atomicobject.com/2014/09/03/visualizing-garbage-collection-algorithms/,visualizing garbage collection algorithm,githubcomkenfoxgcviz cleanup end aka gc reference counting collector marksweep collector markcompact collector copying collector,developer take automatic garbage collection granted another amazing feature provided language runtimes make job easier try peek inside modern garbage collector difficult see actually work thousand implementation detail confuse unless already good understanding trying go fantastically wrong built toy five different garbage collection algorithm small animation created runtime behavior find larger animation code create githubcomkenfoxgcviz surprised much simple animation reveals important algorithm cleanup end aka gc simplest possible way cleaning garbage wait task done dispose everything surprisingly useful technique especially way breaking task piece apache web server example creates small pool memory per request throw entire pool away request completes small animation right represents running program entire image represents program memory memory start colored black mean used area flash bright green yellow memory read writes color decay time see memory used also see current activity watch carefully see pattern emerge program begin ignore memory area become garbage used reachable program everything else garbage live program easily fit memory without needing worry cleaning garbage program running going stick simple program rest example reference counting collector another simple solution keep count many time using resource object memory case dispose count drop zero common technique developer use add garbage collection existing system garbage collector easily integrates resource manager existing code base apple learned lesson releasing marksweep collector objectivec caused many problem retracted feature replaced automated reference counting collector work much better existing code animation show program time try dispose garbage keeping reference count object memory red flash indicate reference counting activity useful property reference counting garbage detected soon possible sometimes see flash red immediately followed area turning black unfortunately reference counting lot problem worst handle cyclic structure common anything parent reverse reference creates cycle leak memory reference counting also high overhead see animation red flash constantly happening even memory use increasing arithmetic fast modern cpu memory slow counter loaded saved memory often counter update also make difficult readonly threadsafe data reference counting amortized algorithm overhead spread runtime program accidentally amortized algorithm guarantee response time example say program working large tree structure last piece program us tree trigger disposal entire tree murphy guarantee happens user least desire delay none algorithm amortized either though accidentally amortized may feature depending data algorithm concurrent partiallyconcurrent variation beyond capability toy program demonstrate marksweep collector marksweep eliminates problem reference count easily handle cyclic structure lower overhead since need maintain count give able detect garbage immediately see animation period activity without red flash suddenly bunch red flash indicate marking live object marking finished sweep memory disposes garbage see animation several area turn black instead spread time reference counting approach marksweep requires implementation consistency reference counting difficult retrofit existing system mark phase requires able traverse live data even data encapsulated within object object provide traversal probably risky attempt retrofit marksweep code weakness marksweep fact sweep phase must sweep memory find garbage system generate much garbage issue modern functional programming style generates enormous amount garbage markcompact collector one thing may noticed previous animation object never move object allocated memory stay place even memory turn fragmented sea island surrounded black next two algorithm change completely different approach markcompact disposes memory marking free moving object free space object always stay memory order object allocated another object always lower memory gap caused disposed object closed object moving crazy idea moving object mean new object always created end used memory called bump allocator cheap stack allocation without limitation stack size system using bump allocator even use call stack data storage allocate call frame heap treat like object another benefit sometimes theory practice object compacted like program better memory access pattern friendly modern hardware memory cache far certain see benefit though memory allocator used reference counting marksweep complex also well debugged efficient markcompact complex algorithm requiring several pass allocated object animation see red flash live object marking followed lot read writes destination computed object moved finally reference fixed point object moved main benefit complexity operating extremely low memory overhead oracle hotspot jvm us several different garbage collection algorithm tenured object space us markcompact copying collector last algorithm animated foundation highperformance garbage collection system moving collector like markcompact incredibly simple us two memory space simply copy live object back forth practice two space space used different generation object new object created one space get copied another space survive finally copied tenured space longlived hear garbage collector described generational ephemeral usually multispace copy collector simplicity flexibility main advantage algorithm spends time live object separate mark phase must later swept compacted object immediately copied live object traversal object reference patched following brokenheart reference object used animation see several collection almost data copied one space terrible situation algorithm show one reason people talk tuning garbage collector size memory tune allocation object dead collection begin get fantastic combination safe functional programming style high performance
673,Lobsters,visualization,Data Visualization,Gridlock vs. Bottlenecks,http://setosa.io/blog/2014/09/02/gridlock/index.html,gridlock v bottleneck,salon gridlock exit rate accumulation network exit funtion trip length ramp trip length ramp hypercongestion fast frugal yokohama geroliminis daganzo fundamental transportation traffic wave lewis lehe,email show chris cristie aide plan bridge gridlock say salon transportation engineer aide innocent bridge ca nt gridlock often say gridlock mean bad traffic technical meaning bottleneck explain standard congestion people want use facility eg bridge offramp handle car form queue line yellow zone bottleneck low speed limit queue represented red car slowed green zone queue size depends arrival rate rate car enter high medium low rate respectively grow hold shrink queue gridlock occurs queue one bottleneck make new bottleneck another direction vicious cycle see gridlock click play button push arrival rate past gridlock start queue block ramp colored block play around arrival rate trip length many ramp car travel exit system performance plot show system exit rate rate vehicle reach destination v accumulation car road different moment given trip length dot cluster around curve called network exit funtion nef made graph slowly turning arrival rate trip length ramp trip length ramp right branch nef represents hypercongestion exit rate keep falling network fill hypercongestion set delaying arrival let people exit time true bottleneck nef matter two reason first mobile data wireless link infrastructure possible gently control accumulation realtime via traffic signal ramp making temporary bottleneck solve gridlock second nt need know happening everywhere get reliable picture sort fast frugal technique theory plot yokohama right branch short gridlock nt really get bad simulation geroliminis daganzo learn traffic flow theory check wikibook fundamental transportation interactive explanation nitty gritty physicspsychology congestion traffic wave simulation based old one lehe work transportation economics transportation engineering phd student uc berkeley
674,Lobsters,visualization,Data Visualization,First-person Hyperlapse Videos,http://research.microsoft.com/en-us/um/redmond/projects/hyperlapse/,firstperson hyperlapse video,,computational photography research explores power ai computer vision pushing limit possible helping people fully easily utilize technology innovative photography apps service
675,Lobsters,visualization,Data Visualization,Rethinking the Progress Bar,http://chrisharrison.net/projects/progressbars/ProgBarHarrison.pdf,rethinking progress bar,,obj linearized h l e n endobj xref n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n n trailer size info r root r prev id startxref eof obj metadata r page r type catalog pagelabels r ficl enfocus r endobj obj l filter flatedecode length r stream ā b ק endstream endobj obj endobj obj cropbox parent r content r r r r r r r r rotate mediabox thumb r resource r type page endobj obj colorspace r font r r r r r r r r headingpaginationfont r footingpaginationfont r procset pdf text imageb imagec imagei extgstate r xobject r endobj obj subtype truetype fontdescriptor r lastchar width basefont jdikkdhelveticabold firstchar encoding winansiencoding type font endobj obj subtype truetype fontdescriptor r lastchar width basefont jdikketimesroman firstchar encoding winansiencoding type font endobj obj subtype truetype fontdescriptor r lastchar width basefont jdikkftimesitalic firstchar encoding winansiencoding type font endobj obj stemv fontname jdikkftimesitalic r flag descent fontbbox ascent capheight xheight type fontdescriptor italicangle stemh endobj obj stemv fontname jdikketimesroman r flag descent fontbbox ascent capheight xheight type fontdescriptor italicangle stemh endobj obj calrgb gamma matrix whitepoint endobj obj stemv fontname jdikibtimesnewromanpsmt r flag descent fontbbox ascent capheight xheight type fontdescriptor italicangle endobj obj stemv fontname jdikkdhelveticabold r flag descent fontbbox ascent capheight xheight type fontdescriptor italicangle stemh endobj obj subtype truetype fontdescriptor r lastchar width basefont jdikibtimesnewromanpsmt firstchar encoding winansiencoding type font endobj obj endobj obj filter flatedecode length r stream k wj e l j z c endstream endobj obj subtype truetype fontdescriptor r lastchar width basefont jdikniarialboldmt firstchar encoding winansiencoding type font endobj obj stemv fontname jdiknjarialmt r flag descent fontbbox ascent capheight type fontdescriptor italicangle endobj obj stemv fontname jdikniarialboldmt r flag descent fontbbox ascent capheight type fontdescriptor italicangle endobj obj subtype truetype fontdescriptor r lastchar width basefont jdiknktimesnewromanpsboldmt firstchar encoding winansiencoding type font endobj obj stemv fontname jdiknktimesnewromanpsboldmt r flag descent fontbbox ascent capheight type fontdescriptor italicangle endobj obj subtype truetype fontdescriptor r lastchar width basefont jdiknjarialmt firstchar encoding winansiencoding type font endobj obj endobj obj filter flatedecode length r stream
676,Lobsters,visualization,Data Visualization,Visualizing SFTMA Transit Delays,http://bdon.org/transit/,visualizing sftma transit delay,stated ontime performance,san francisco muni system stated ontime performance count vehicle run within minute schedule however otp one factor perceived transit quality visualization express many transit performance metric including frequency scheduled service maximum headway vehicle catastrophic failure delay
678,Lobsters,visualization,Data Visualization,Markov Chains,http://setosa.io/blog/2014/07/26/markov-chains/index.html,markov chain,andrey markov pagerank randomly setosaiomarkov,markov chain named andrey markov mathematical system hop one state situation set value another example made markov chain model baby behavior might include playing eating sleeping cry state together behavior could form state space list possible state addition top state space markov chain tell probabilitiy hopping transitioning one state state eg chance baby currently playing fall asleep next five minute without cry first simple twostate markov chain shown two state b state space possible transition state transition back could transition b stay b could transition stay b two state diagram probability transitioning state state course real modeler nt always draw markov chain diagram instead use transition matrix tally transition probability every state state space included row column cell matrix tell probability transitioning row state column state matrix cell job arrow diagram state space add one state add one row one column adding one cell every existing column row mean number cell grows quadratically add state markov chain thus transition matrix come handy pretty quickly unless want draw jungle gym markov chain diagram one use markov chain include realworld phenomenon computer simulation example might want check frequently new dam overflow depends number rainy day row build model start following pattern rainy r sunny day one way simulate weather would say half day rainy therefore every day simulation fifty percent chance rain rule would generate following sequence simulation notice sequence nt look quite like original second sequence seems jump around first one real data seems stickyness real data sunny one day next day also much likely sunny minic stickyness twostate markov chain markov chain state r probability staying put chance leaving state likewise state probability staying put chance transitioning r state hand metereologists ecologist computer scientist financial engineer people need model big phenomenon markov chain get quite large powerful example algorithm google us determine order search result called pagerank type markov chain included markov chain playground make markov chain messing around transition matrix work example generate one randomly transition matrix text turn red provided matrix nt valid transition matrix row transition matrix must total also number row column also access fullscreen version setosaiomarkov
679,Lobsters,visualization,Data Visualization,Build a simple chart for your website in 5 minutes,http://jocellyn.cz/2014/07/25/simple-charts-with-c3.html,build simple chart website minute,simple chart minute famous simple graph webpage minute installation minute preparing html minute setting javascript minute customization custom color chart loading data dynamically html attribute final thought book comment,simple chart minute article aim explain use cool library called building simple chart javascript library build top famous find plenty good source online printed learn make complex visualization many people would advanced often need add simple graph webpage show statistic scatter plot bar chart allows without knowing complexity wrap need simple api need handle svg element manually hover effect etc final result could look like minute installation minute set webpage need three thing javascript file javascript file stylesheets file download three source official site put file page linked would script style chose elegant solution link external service host file belongs html file want work put line head tag script type textjavascript src script script type textjavascript src script link href rel stylesheet type textcss aware though relying external service could reliable hosting file course need internet connection time work preparing html minute need choose element html page chart bind mean specify want chart displayed adding id called chart element empty well contains thing even need div however contains text visible chart render div id chart div id chart text visible setting javascript minute last important part actual code chart donut pie introduction var chart data column lulu olaf type donut donut title dog love simple first line say generating chart assigning variable later use chart consists inside inner part brace tell u detail first important data part hardcoded array array mean chart two value first element inner array label second value specifying type chart changed donut bar would get super easy course data much complex putting value inner array example mean comparing value index like data column lulu olaf mean looking first value lulu array first value olaf array putting together one column value shifting column along x axis result prepared jsbin play around try simple chart go check customization official site grap example many different style graph line chart bar chart pie chart area chart step chart scatter plot spline chart even know mean confusing beginner see customize chart based need general pattern always look feature would like add change example page put line code tricky part put sometimes go data object example setting data label var chart data column type bar label true sometimes need added separate object next data like example ax label var chart data column sample axis x label x label label label customize sort property like example order desc could asc desc null mean order based data definition legend show false hide legend type step areastep want combine multiple type chart data size height width size chart color hotpink pink let check example custom color chart like pink var chart bindto data column type area areaspline color hotpink pink also notice stated bindto would left default binding chart initial chart beginning article would rewritten one multiple element multiple binding way keep one graph one page loading data dynamically html attribute one requested feature ability load data dynamically hardcoded like example would time example want show live data statistic etc fetch actual data ajax directly javascript communicate html data attribute like div id offerneed datasource statisticsdataofferneed div worry syntax ruby programming language sure know way send data server html template like var datasource chartofferneed attr datasource var data jsonparse datasource var chart bindto chartofferneed data column data fetch data attribute using attr parse final thought great simple tool make chart literally minute forget though based much much much powerful tool like little visualization plan seriously recommend check well completely honest said hard maybe difficult compared anything horrible anyone learn make chart exactly want chart visualize almost everything check nice example official site also allows scale ax properly based data important concept often would need display value bunt slightly bit different scale proportion good quick task true power recommend book comment
680,Lobsters,visualization,Data Visualization,"Tobias Isenberg - Projects, Videos, and Demos",http://tobias.isenberg.cc/Main/VideosAndDemos,tobias isenberg project video demo,,
682,Lobsters,visualization,Data Visualization,Finding the World's Economic Center of Gravity,http://nbviewer.ipython.org/github/djv/world_economic_center/blob/master/map.ipynb,finding world economic center gravity,,coordinate gdp american samoa andorra anguilla antigua barbuda aruba ascension bahamas barbados belize bermuda bhutan bonaire bosnia herzegovina british virgin island brunei cayman island christmas island coco keeling island comoros cook island cote divoire cyprus democratic republic congo dominica eritrea ethiopia falkland island federated state micronesia fiji french guiana french polynesia gaza strip gibraltar greenland grenada guadeloupe guam guineabissau guyana haiti iceland kiribati kosovo liechtenstein luxembourg maldives malta marshall island martinique mayotte monaco montenegro montserrat nauru new caledonia niue norfolk island northern mariana island palau papua new guinea pitcairn island republic congo russia saint barthelemy saint kitts nevis saint lucia saint martin saint pierre miquelon saint vincent grenadine samoa san marino sao tome principe serbia sint maarten solomon island south sudan suriname timorleste tokelau tonga turk caicos island tuvalu u virgin island vanuatu vatican city wallis futuna west bank western sahara gdp coordinate latin american country west asian country east asian country east asian country african country latin american country bosnia comoro island congo czechoslovakia divoire eastern europe eritrea ethiopia former czechoslovakia former yugoslavia guinea bissau hong kong russian federation serbiamontenegro successor republic ussr principe total western europe total small wec total latin american country total west asian country total east asian country total small east asian country total small caribbean country total east asian country total western europe total small african country total east european country total latin american country total africa total asia total former ussr total latin america total western offshoot west bank gaza western europe western offshoot yugoslav czech successor state yugoslavia zaire
683,Lobsters,visualization,Data Visualization,Our World in Data: Visualising the Empirical Evidence on how the World is Changing,http://www.ourworldindata.org/,world data visualising empirical evidence world changing,teaching hub,teaching hubslides research visualization teaching learning global development
684,Lobsters,visualization,Data Visualization,The Sound of the Dialup: an Example Handshake,https://i.imgur.com/5Dq6K2U.png,sound dialup example handshake,,ihdr phys textsoftware b z
685,Lobsters,visualization,Data Visualization,The Informant: Learn from your users' mistakes,http://www.informantapp.com,informant learn user mistake,help user get right first time,help user get right first time informant track form error way traditional error monitoring wo nt catch user see error get frustrated informant help make user happier
687,Lobsters,visualization,Data Visualization,Stuff that every programmer should know: Data Visualization,http://c0de517e.blogspot.de/2014/06/stuff-that-every-programmer-should-know.html,stuff every programmer know data visualization,anscombe quartet structure lcg random number scientific visualization interactivity cave color dependence module tracing roll instrumentation export data live graph library instrument compiled code peek regular interval target process memory swift bret victor light table timid plugin inmemory image academia interesting conference smart people looking visual fingerprint data entropy execution anaconda matplotlib seaborn mathics,programmer nt visualization one main tool belt good news found easily improve skill set really taught programming course note post wo nt get zero visualization expert hopefully pique curiosity provide plenty reference study visualizing data two main advantage compared looking data tabular form first pack data graph get looking number screen even make visualization interactive allowing exploration inside data set visual bandwidth massive useful also mean avoid rely le summarization technique statistic always nature lossy easily hide important detail anscombe quartet usual example anscombe quartet wikipedia data statistic clearly different visualized second advantage even important reason data much better visual form long think recognize sine number might start reasoning simmetries slope bright long think would take recognize sine plotting data graph yet rarely seen people dumping data program graphing software rarely seen programmer actually know science data visualization visualizing program behaviour even important context rendering engineer code nt either fail hard work right easily implement algorithm wrong nt produce completely broken output might slower ie converge need noisy quite right cause artist try adjust mistake authoring fix art happens time even situation output completely broken obvious looking tabular output great example would structure lcg random number random number generator nt look good wo nt tell table number good visualization main objective visualization meaningful mean choosing right data study problem displaying right projection graph scale ax right data one interesting show feature problem question answering purpose data need display right projection one show feature unbiased perceptually linear way make different dimension comparable possibly orthogonal reveal knowledge data hiding x log x study ratio quantity absolute difference information data scale come first domain expertise light sound intensity probably go logarithmic scale maybe dot product displayed angle vector many quantity physical interpretation perceptual interpretation geometrical one even interestingly information data come data exploration interactive environment easy dump lot data observe notice certain pattern refine graph data acquisition zoom particular aspect interactivity key always programming tool trade delve bit visualization find two fairly distinct camp one visualization categorical data often discrete main goal finding cluster relationship scatterplot nifty understand dimension interesting manydimensional dataset camp visualization continuo data often context scientific visualization interested representing quantity without distortion way perceptually linear usually employ mostly position visual cue thus linesurface point plot become harder increase dimensionality data hard go beyond three dimension color intensity widget could used add couple dimension point space often easier add dimension interactivity ie slicing dataset intersecting projecting plane instead cave soon replaced oculus rift kind visualization application programming deterministic process like output evolution time algorithm function want monitor data represent objective undistorted manner know data mean work want check everything go according think also time nt care exact value seek insight process nt exact mental model applies nondeterministic issue networking threading also many thing deterministic nature complex behaviour like memory hierarchy access cache miss learn perception caveat whatever visualization though first thing aware visual perception visual cue useful quantitative analysis perceptual bias big problem perceptual tend see subconsciously drawn data point others metacritic homepage horrid bar graph number bright variablesize image game longer image seem lower score beware color one abused misunderstood tool quantitative data color hue extremely hard get right subjective nt express well quantity relationship color le another yet used everywhere intensity saturation great either commonly used often inferior hint like point size stroke width visualization program program incredibly complicated project manage carry forward challenging enough really love working complicated way possible course visualization really limited mainstream usage probably encountered form bad graph data static analysis dependence module relationship dependency matrix ndepend certainly see program execution text watch window memory view hex dump visual studio probably best debugger ide visual allows easy development visualization even hard grab data memory programmer huge deal dump data file peek memory article visualize output code tool made data even important tool use visualization directly behaviour code runtime really form tracing often limited known printf debugging tracing immensely powerful tell u high level code opposed detailed inspection code running get stepping debugger unfortunately today basically tool graphical representation program state time roll working sourcecode easy enough put instrumentation export data live graph experiment nt use library write simplest possible adhoc code suck data ideally though would lovely able instrument compiled code definitely possible much hassle without support debugger another alternative sometimes adopt external application peek regular interval target process memory simple enough capture data low frequency always applicable use time program running realtime live memory visualization stepping debugger apple recent swift language seems step right direction look like pulled idea bret victor light table microsoft timid plugin visualstudio basic plotting nt seem actively updated another one inmemory image would really needed ability export data easily realtime good visualization usually made adhoc specific problem want delve deeper program visualization fair bit written academia also interesting conference even interesting seeing applied one hardest coding problem reverse engineering perhaps surprising reversers hacker smart people natural use best tool job quite amazing seeing much one understand little information looking visual fingerprint data entropy code execution pattern visualization process exploration highlight pattern anomaly delve visualization using tool bonus link visualization huge topic would silly try teach everything needed post wanted give pointer hoping get programmer interested link study note find topic nowadays either infovis datadriven journalism explaining phenomenon via understandable pretty graphic bigdata analytics interesting included good example usually seek domain expert nt need focus aesthetic communication unbiased clear quantitative data visualization mindful difference post essential software processing pythonipython anaconda matplotlib seaborn mathematica mathics interesting could nifty especially already web frontend application increasingly popular nt use excel waste time cumbersome manipulate data graph actually quite bad book talk article website sure check link inside post first addendum random sampling stuff work made either mathematica processing interactive realtime shader code performance metric delta across version debugging offline backer raytracer exporting float data visualizing point cloud approximation versus ground truth brdf normalization approximation versus ground truth area light
688,Lobsters,visualization,Data Visualization,"Dr. Garbage - bytecode, source and control flow visualizers",http://www.drgarbage.com/,dr garbage bytecode source control flow visualizer,improves web presence,besides memorable com domain unique one com name kind extension usually drive traffic com counterpart learn premium com domain valuation watch video improves web presence get noticed online great domain name domain registered web coms reason simple com web traffic happens owning premium com give great benefit including better seo name recognition providing site sense authority
689,Lobsters,visualization,Data Visualization,Up and Down the Ladder of Abstraction,http://worrydream.com/LadderOfAbstraction/,ladder abstraction,trajectory,real life would never use ladder let go likewise creating abstraction stepping important stepping take abstraction previous section overlay concrete representation top draw trajectory represents time also draw car particular time select particular time show could use slider reappeared also mouse touch trajectory see car point general powerful technique every point visual abstraction typically corresponds particular concrete state pointing abstraction step concrete representation let u quickly explore region interest try cranking turning rate inspecting car behavior make first two turn almost pivot place unphysical behavior obvious trajectory possible infer trajectory know looking concrete representation jump u violates common sense case fairly easy look trajectory imagine car moving along possible step abstraction head far ground yet climb higher ladder abstraction become harder imagine concrete step beneath critical abstraction provide way interactively step concrete representation
690,Lobsters,visualization,Data Visualization,play and display audio from the terminal with javascript,https://github.com/mathisonian/boscillate,play display audio terminal javascript,boscillate baudio usage option example license,boscillate sound wave graph baudio terminal usage npm install boscillate var baudio require baudio var oscillate require boscillate var n var b baudio function return mathsin mathpi mathsin b oscillate b bplay pretty much take terminal option b oscillate b framespersecond often try refresh screen higher faster intensive find value work terminal size windowsize window size graph composed sliding window time series value eg value window size two graph would display following two point refresh etc bigger window size mean see past audio wave example license mit
691,Lobsters,visualization,Data Visualization,Re: compare memcmp with 0,http://marc.info/?l=openbsd-tech&m=140327616811443&w=2,compare memcmp,prev list next list prev thread next thread openbsdtech compare memcmp ingo schwarze schwarze usta de iris usta de message body prev list next list prev thread next thread configure news add list korelogic,prev list next list prev thread next thread list openbsdtech subject compare memcmp ingo schwarze schwarze usta de date messageid iris usta de download raw message body hi theo theo de raadt wrote thu jun could argued bcmp manual page poor job documenting use mandoc blink tag ok perfect yet nest blink tag already switch back nonblinking mode close inner block closing outer block fixed later tree using requires export lessr something equivalent depending setup course maybe make default guess need submit similar patch groff well ingo index rcs file v retrieving revision diff u p mar jun alphabetical sx bq bo bc ta enclose square bracket bq text sx brq bro brc ta enclose curly brace brq text sx aq ao ac ta enclose angle bracket aq text sx blq blo blc ta blink blq text sx eo ec ta generic enclosure el s text production pp see also sx bo s blc close sx blo block tail argument s blo begin blinking block head argument s blq make argument blink s brc close sx bro end line bl column macrox callablex parsedx offset indent em macro ta em callable ta em parsed sx aq ta yes ta yes sx blq ta yes ta yes sx bq ta yes ta yes sx brq ta yes ta yes sx ta ta yes index usrbinmandocmdocc rcs file cvssrcusrbinmandocmdocc v retrieving revision diff u p mdocc usrbinmandocmdocc apr usrbinmandocmdocc jun const char const mdocmacronames mdoc lk mt brq bro brc c e en dx q br sp u ta u ta blo blc blq const char const mdocargnames mdocargmax index usrbinmandocmdoch rcs file cvssrcusrbinmandocmdoch v retrieving revision diff u p mdoch usrbinmandocmdoch apr usrbinmandocmdoch jun enum mdoct mdocu mdocta mdocll mdocblo mdocblc mdocblq mdocmax index usrbinmandocmdocargvc rcs file cvssrcusrbinmandocmdocargvc v retrieving revision diff u p mdocargvc usrbinmandocmdocargvc apr usrbinmandocmdocargvc jun static const struct mdocarg mdocargs mdo argsflnone null u argsflnone null ta argsflnone null argsflnone null blo argsfldelim null blc argsfldelim null blq index usrbinmandocmdochtmlc rcs file cvssrcusrbinmandocmdochtmlc v retrieving revision diff u p mdochtmlc usrbinmandocmdochtmlc apr usrbinmandocmdochtmlc jun static const struct htmlmdoc mdocs mdoc mdocxpre mdocxpost u null null ta mdocllpre null mdocquotepre mdocquotepost blo null null blc mdocquotepre mdocquotepost blq static const char const list listmax mdocquotepre mdocargs case mdocaq printtext h la break case mdocblo fallthrough case mdocblq pairclassinit tag blink printotag h tagspan tag break case mdocbro fallthrough case mdocbrq mdocquotepost mdocargs fallthrough case mdocaq printtext h ra fallthrough case mdocblo fallthrough case mdocblq break case mdocbro fallthrough index usrbinmandocmdocmacroc rcs file cvssrcusrbinmandocmdocmacroc v retrieving revision diff u p mdocmacroc usrbinmandocmdocmacroc apr usrbinmandocmdocmacroc jun const struct mdocmacro mdocmacros md inlineeoln u phraseta mdoccallable mdocparsed mdocjoin ta inlineeoln blkpartexp mdoccallable mdocparsed mdocexplicit mdocjoin blo blkexpclose mdoccallable mdocparsed mdocexplicit mdocjoin blc blkpartimp mdoccallable mdocparsed mdocjoin blq const struct mdocmacro const mdocmacros mdocmacros index usrbinmandocmdocmanc rcs file cvssrcusrbinmandocmdocmanc v retrieving revision diff u p mdocmanc usrbinmandocmdocmanc apr usrbinmandocmdocmanc jun static const struct manact manacts mdoc null null postpercent null null u null null null null null ta null prell postsp null null null null null null null blo null null null null null blc null null null null null blq null null null null null root index usrbinmandocmdoctermc rcs file cvssrcusrbinmandocmdoctermc v retrieving revision diff u p mdoctermc usrbinmandocmdoctermc apr usrbinmandocmdoctermc jun static const struct termact termacts mdo null termppost u null null ta termpllpre null termpquotepre termpquotepost blo null null blc termpquotepre termpquotepost blq termpquotepre declargs case mdocaq termword p break case mdocblo fallthrough case mdocblq termword p break case mdocbro fallthrough case mdocbrq termpquotepost declargs fallthrough case mdocaq termword p break case mdocblo fallthrough case mdocblq termword p break case mdocbro fallthrough index usrbinmandocmdocvalidatec rcs file cvssrcusrbinmandocmdocvalidatec v retrieving revision diff u p mdocvalidatec usrbinmandocmdocvalidatec apr usrbinmandocmdocvalidatec jun static const struct valids mdocvalids null u null null ta null null null null blo null null blc null null blq define rsordmax number r block prev list next list prev thread next thread configure news add list sponsored korelogic
692,Lobsters,visualization,Data Visualization,Latency Tip Of The Day: Q: What's wrong with this picture? A: Everything!,http://latencytipoftheday.blogspot.com/2014/06/latencytipoftheday-q-whats-wrong-with_21.html,latency tip day q wrong picture everything,average def random number fall somewhere maximum median often used ignore reality ca nt average percentile period latencytipoftheday post measuring andor plotting max hiding measure need monitor nt monitor happen able easily measure discussion hdrhistogram,question wrong picture answer everything single chart source redacted protect guilty great depiction last four latencytipoftheday post one great visual average def random number fall somewhere maximum median often used ignore reality well one self explanatory math behind simple keep meeting people think looking average number tell something behavior system produced especially curious trying monitor health readiness responsiveness behavior chart summarizes average thing plot like everyone else hear average day tooth fairy pay ca nt average percentile period see average posted bottom chart line average number low meaning right averaging percentile silly mathematically may good way build random number generator read latencytipoftheday post explanation meaningless average percentile measuring andor plotting max hiding classic feel good chart chart pretty look informative really nt unless care thing worked well nt want show anything single thing nt work well main practical function chart distract reader make look pretty line tell story good experience wo nt ask question often bad experience happened way chart like achieves nefarious purpose simple completely ignores display information throw away indication worst server operation given interval timespan charted whole chart display best result literally server side page response time take minute pretty picture would stay exactly whenever chart show response time latency fail display maximum measurement along lower quantiles like median even fuzzy average ask hiding measure need monitor nt monitor happen able easily measure chart plot information unfortunately information important information needed monitoring server response behavior monitoring mostly supposed bad bad stuff much bad stuff since met anyone operating server cared fastest operation day best operation better half operation better operation nt care worst operation exactly lie median line chart display literally chart showing good good stuff percentile matter monitoring server response time matter several vast majority server application fact measurement data store provided common case latency yes still common case excuse may well monitoring white board see actually ask scary question like many user observe lie server side http request time day typically get scary answer make realize really want watch number closely much median ile asking question problem start example statement roughly user experience lie day true page view involves http get average average user page view refreshes day considered low number retail site social networking site online application site experience example user fail experience lie page view assumption care huge portion user based actually experiencing regularly really care iles even though yet meet ops team need monitor andor lie server response time rare meet one actually monitor level reason usually staring dashboard full sort feel good chart distract enough think fact measuring need monitor instead monitoring happen able measure know want watching measurement retention data focus start pretty picture thing usually break early process thing need monitoring simply measured eg many measurement system eg yammer metric using default reservoir configuration even attempt actually measure percentile model statistically instead one actually measure percentile data receive eg statsd sent unsummarized data every server response time percentile measurement typically done relatively short interval summarized per interval storage mean two thing measure low number produce sort percentile actually monitoring b percentile usefully aggregated across interval see discussion happens interval short individually produce useful data high number eg way report useful information lie lie second interval operation rate opssec b happens unless percentile data computed correctly across long enough period time basically useless deducing percentile across single interval collecting data producing percentile longer period relatively straightforward done interval low number storage volume speed related challenge commonly used percentile computation technique challenge hdrhistogram completely solves btw stuff lot start sitting deciding actually need monitoring without monitoring thing matter keeping operation devops folk distracted keeping developer busy feeding distracting nonsense stop looking feel good chart start asking pretty chart data actually matter operation
694,Lobsters,visualization,Data Visualization,A GPU Approach to Voronoi Diagrams,http://nullprogram.com/blog/2014/06/01/,gpu approach voronoi diagram,voronoi diagram number seed vertex hardcoded number available uniform binding constrained way bail loop early smarter approach gif resolution catch instancing rescue webgl extension instancing igloo webgl library,june recently got itch play around voronoi diagram diagram divide space region composed point closest one set seed point couple algorithm computing voronoi diagram bowyerwatson fortune complicated difficult implement however interested rendering voronoi diagram bitmap trivial brute algorithm every pixel output determine closest seed vertex color pixel appropriately slow especially number seed vertex go work perfectly dead simple strategy seem familiar sure sound lot like opengl fragment shader shader push workload gpu intended sort work basically look like voronoifrag uniform seed uniform color void main float dist distance seed glfragcoordxy color color int float current distance seed glfragcoordxy current dist color color dist current glfragcolor color webglenabled browser see result explain see really shader result look identical two different webgl implementation included smarter one active also really slow canvas fallback click drag point around diagram mouse add remove point left right click press key seed point go random walk animating whole diagram video showing unfortunately serious problem approach passing seed information uniform number seed vertex hardcoded shader language requires uniform array known length compiletime want increase number seed vertex need generate compile link new shader replace implementation actually number replaced max template fill using regular expression sending program gpu number available uniform binding constrained even highend gpus glmaxfragmentuniformvectors value allowed small typical value highend graphic card mere array element count binding shader may limited seed vertex even nice gpus absolutely limited seed vertex alternative approach might passing seed color information texture try way bail loop early least opengl e webgl shaders break sort branching loop variable even seed vertex still compare full count gpu plenty time available big issue except need skip unused seed somehow need given unreasonable position value infinity would unreasonable value infinitely far away glsl float guaranteed able represent infinity even know maximum floatingpoint value might pick something large get overflow garbage value experiment limitation good way going computing voronoi diagram gpu fortunately much much better approach smarter approach implemented playing around fragment shader going beyond solid color example changed shadecolor based distance seed vertex result blood cell image difference couple line shader hit render seed cone pointed towards camera orthographic projection coloring cone according seed color voronoi diagram would work automatically depth buffer rather distance comparison shader let opengl normal job figuring scene geometry video gif made demonstrates mean much faster also far simpler rather limited hundred seed vertex version could literally million limited available memory attribute buffer resolution catch catch though way perfectly represent cone opengl back brute force approach anyway cone must built primitive triangle sort like pizza slice using gltrianglefan mode cone made triangle unlike previous brute force approach approximation voronoi diagram triangle better approximation converging precision initial brute force approach found project triangle indistinguishable brute force instancing rescue point thing looking pretty good desktop maintain framespersecond seed vertex moving around randomly becomes drawbound seed vertex requires separate gldrawarrays call opengl workaround opengl extension called instancing webgl extension instancing angleinstancedarrays cone model already sent gpu initialization without instancing draw loop bind uniform call draw seed code us igloo webgl library simplify api var cone programsconeuse attrib cone bufferscone var seedslength coneuniform color seed color uniform position seed position draw gltrianglefan triangle verts driving pair shaders conevert attribute cone uniform position void main glposition conexy position conez conefrag uniform color void main glfragcolor color instancing work adjusting attribute stepped normally vertex shader run per element instead ask attribute step per instance even per multiple instance uniform converted vertex attribs loop run implicitly gpu instanced gldrawarrays call take one additional argument number instance draw ext glgetextension angleinstancedarrays programsconeuse attrib cone bufferscone attrib position bufferspositions attrib color bufferscolors tell opengl iterate per instance extvertexattribdivisorangle conevars position extvertexattribdivisorangle conevars color extdrawarraysinstancedangle gltrianglefan seedslength ugly angle name extension part webgl program fall back use multiple draw call extension available speed boost new shaders notice uniform gone coneinstancedvert attribute cone attribute position attribute color varying vcolor void main vcolor color glposition conexy position conez coneinstancedfrag varying vcolor void main glfragcolor vcolor machine instancing version thousand seed vertex order magnitude framespersecond becomes bandwidth saturated animation every vertex position updated gpu frame point overcrowded anyway need support
695,Lobsters,visualization,Data Visualization,Visualization of Google trending searches,https://www.google.com/trends/hottrends/visualize?nrow=5&ncol=5&pn=p1,visualization google trending search,,
696,Lobsters,visualization,Data Visualization,Microsoft Data Science and Modeling Tools Survey,https://www.surveymonkey.com/s/VSForDataScience,microsoft data science modeling tool survey,,gather opinion customer employee prospect use insight make better datadriven decision
697,Lobsters,visualization,Data Visualization,The Atlas of Economic Complexity,http://atlas.cid.harvard.edu/explore/tree_map/export/usa/all/show/1995/,atlas economic complexity,,
698,Lobsters,visualization,Data Visualization,"Pythagorean theorem from Euclid, visualized with D3.js",http://setosa.io/pythagorean/,pythagorean theorem euclid visualized,pythagorean theorem victor powell setosa euclid pythagorean theorem euclid element proposition,pythagorean theorem visual explanation victor powell setosa follows interactive walk euclid proof pythagorean theorem let abc rightangled triangle angle bac right say square bc equal sum square ba ac describe square bdec bc square gb hc ba ac draw al parallel either bd ce join ad fc since angle bac bag right follows straight line ba point two straight line ac ag lying side make adjacent angle equal two right angle therefore ca straight line ag reason ba also straight line ah since angle dbc equal angle fba right add angle abc therefore whole angle dba equal whole angle fbc since db equal bc fb equal ba two side ab bd equal two side fb bc respectively angle abd equal angle fbc therefore base ad equal base fc triangle abd equal triangle fbc parallelogram bl double triangle abd base bd parallel bd al square gb double triangle fbc base fb parallel fb gc therefore parallelogram bl also equal square gb similarly ae bk joined parallelogram cl also proved equal square hc therefore whole square bdec equal sum two square gb hc square bdec described bc square gb hc ba ac therefore square bc equal sum square ba ac therefore rightangled triangle square side opposite right angle equal sum square side containing right angle text euclid element proposition
699,Lobsters,visualization,Data Visualization,Variance Charts,https://variancecharts.com/,variance chart,product client recent blog post blog post recent talk talk,product searchbased interface unifies file editor buffer browser tab computing activity type stuff find thing result millisecond money back design tool made apps responsive layout engine reusable component system digital medium need cad photo retouching illustration tool advanced data visualization web create bespoke data graphic htmlbased grammar graphic javascript required beautiful datarich weather app iphone ipad featured new york time guardian wired magazine fast company design many others weather phone client consult technical matter client appropriate also design implement bespoke data visualization software workflow developed ipad dashboard wind farm technician webbased bioinformatics analysis tool biologist geographic display climate model verification printed vitals report diabetic many project nice thing client said u keming lab integral converting rough specification flexible visualization front end exploring new display idea rapidly evolving biological question able deliver customizable implementation integrated within existing code base resulting display fit beautifully within vision project enhanced ability communicate result researcher brad chapman harvard school public health launching myclibecom wrestling major performance stability issue system next week keming essential development team providing strong advice direction absolutely fantastic development user interface database monitoring performance delivered highly recommend keming absolutely calling adam wulf myclibecom keming lab exciting company work provided u top quality gui record time easy work especially project experienced tangent new direction highly recommend quality work rob dombek upwind solution recent blog post june finda us websockets communicate browser editor may logging error panic multithreaded rust application o x consoleapp also debugging story blog post recent talk march melbourne vic talk keming lab founded kevin lynagh spring small handful employee given plan expand need hierarchy project manager want work exploding startup look elsewhere focused team professional dedicated advancing design computing state art client keming lab based american pacific northwest visualizing data odds either drinking fine craft beer rock climbing fly fishing
700,Lobsters,visualization,Data Visualization,"Editing the Future – Light Table, and Atom, and Then What?",http://spin.atomicobject.com/2014/03/13/light-table-github-atom-ide/,editing future light table atom,recently announced great handson post showing feature chris granger announced light table atom lighttable atom lighttable atom light table comfy using editor inventing principle cite big historic landmark looking repls ci chris granger hinted shortly atom announcement editor note,github recently announced project create programming editor called atom nice logo wink seen great handson post showing feature chris granger announced project called light table think recent mile marker road atom light table share github atom offer webbased programming platform targeting customizability atom lighttable leverage modern language implement editor atom lighttable envision opensource community party plugins atom light table two recent programming environment project point line line point comfy using editor shortage editor opinion really interest new editor force bring new project surface make someone say let start scratch chris granger aspiration change way programming happens inspired bret victor talk inventing principle cite big historic landmark path spark light table smalltalk symbolics genus logo hypercard light table based exploring future building software atom lofty goal intro page building text editor always wanted tool customize anything also use productively first day without ever touching config file atom modern approachable hackable core wait see build sound like atom trying hone textmate sublime text started deliver though likely guess starting point looking considering larger list modern programming environment end post get expansive view landscape feature like see editor include let u navigate project edit source code know syntax language integrate compiler interpreter repls ci allow network collaboration easily build maintain language platform support within editor allow realtime remote collaboration integrate modern app dev environment browser source control cloud mobile deployment etc allow freeform presentation code text markup hint refactorings function flow live preview etc interpret code type showing result locally reduce cycle abstract file folder paradigm code organization navigation last three especially last two timeless goal rest seem reach beyond making kickass modern editor ask fundamental change chris granger hinted shortly atom announcement outset goal make programming better honestly come conclusion lt example showing function individually actually introduces another level cognitive load loss locality turn way organize code file end important way glean lot information stored organization purely code walking virtue way program really important notion like flow lost hidden layer upon layer indirection live limitation exist even fantastic language like clojure truth think order magnitude better evidence already going take new tool going take different way thinking problem following conversation twitter reddit got sense people important aspect atom revolve around license performance important feature move u closer getting whole list seeing next horizon sure nice fast free crossplatform editor could make look programming language new light usher need new language entirely editor could change way user able communicate code write new project move forward evolve kind question looking answer editor note let save googling new leave mature friend
701,Lobsters,visualization,Data Visualization,Collections of various data,http://blog.visual.ly/data-sources/,collection various data,government political data datagov socrata cityspecific government data san francisco data un unicef world health organization census bureau data aggregator programmable web infochimps data market google public data explorer junar buzzdata social data instagram getglue twitter peoplebrowsr gnip datasift infochimps topsy foursquare api facebook facebook graph api facecom weather data wunderground weatherbase sport data football baseball basketball espn api university research odds ucla news data new york time api guardian data blog romy misra visually,finding interesting data set story tell difficult part producing infographic data visualization data visualization end artifact involves multiple step finding reliable data getting data right format cleaning often underestimated step amount time take finding story eventually visualize following list useful resource finding data need vary one project another list great place start bookmark government political data datagov goto resource governmentrelated data claim data set raw data geo spatial variety format caveat using data set make sure clean since many missing value character socrata another good place explore governmentrelated data one great thing socrata visualization tool make exploring data easier cityspecific government data city data portal setup browse cityrelated data example san francisco data browse everything crime statistic parking spot available city un unrelated site like unicef world health organization rich kind data mortality rate world hunger statistic census bureau house ton information life around income race education population business data aggregator place house data kind source sometimes easier find something related specific category programmable web really useful resource explore api also mashups different api infochimps data marketplace offer thousand public propietary data set download api access wide range category historical twitter ok cupid data geo location data different format even upload data like data market good place explore data related economics healthcare food agriculture automotive industry google public data explorer house lot data world development indicator oecd human development indicator mostly related economics data world junar great data scraping service also house data feed buzzdata social data sharing service allows upload data connect follow others uploading data social data usually best place get social data api site instagram getglue foursquare pretty much social medium site api detail popular one twitter access twitter api historical us fairly limited tweet check peoplebrowsr gnip also offer historical access wp automattic data feed datasift infochimps topsy foursquare api get infochimps well facebook facebook graph api best resource facebook facecom great tool facial recognition data weather data wunderground detailed weather information also let search historical data zip code city give temperature wind precipitation hourly observation day weatherbase detailed weather stats temperature rain humidity nearly city sport data three site comprehensive information team player coach leader season football baseball basketball espn recently came api partner get access data university research searching work academic specialize particular area always great place find interesting data come across specific data would like use say research paper best way go contact professor directly got data odds piece one mostviewed infographics web one university make datasets used course publicly available ucla news data new york time great api really good explorer access article publication data returned json format guardian data blog regularly post visualization make data available google doc format great thing data already cleaned romy misra director analytics visually
702,Lobsters,visualization,Data Visualization,Rendering large terrains (WebGL),http://www.pheelicks.com/2014/03/rendering-large-terrains/,rendering large terrain webgl,http wwwpheelickscompostsrenderinglargeterrains,http wwwpheelickscompostsrenderinglargeterrains
705,Lobsters,visualization,Data Visualization,Stephen Wolfram's Introduction to the Wolfram Language - YouTube,https://www.youtube.com/watch?v=_P9HqHVPeik,stephen wolfram introduction wolfram language youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature stephen wolfram introduction wolfram language youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature stephen wolfram introduction wolfram language youtube
706,Lobsters,visualization,Data Visualization,Visualizing Conditional Probability,http://setosa.io/conditional/,visualizing conditional probability,conditional probability victor powell setosa,conditional probability visual explanation victor powell setosa conditional probability probability event given event already occurred example two possible event occur ball falling could either hit red shelf call event hit blue shelf call event b know statistic event across entire population given single ball told ball hit red shelf event probability also hit blue shelf event b could answer question providing conditional probability b given occurred p ba p ba pofbgivena pofbgivena ball know hit red shelf pofbgivena chance also hit blue shelf p ab pofagivenb pofagivenb ball know hit blue shelf pofagivenb chance also hit red shelf drop frequency perspective p ba p ab world actual expected count n b counta ball hit red shelf blue shelf count b n countb ball hit blue shelf red shelf count n b countab ball hit red shelf blue shelf count n b countnone ball hit red blue shelf
707,Lobsters,visualization,Data Visualization,Where people run – FlowingData,http://flowingdata.com/2014/02/05/where-people-run/,people run flowingdata,running trace r code snippet update,many exercise apps allow keep track running riding activity record speed time elevation location phone million people included however look activity log whether friend public timeline activity appear individually together fun see useful data collector plan future workout even city planner make sure citizen proper bike lane running path ever since saw nikita barsukov map running trace handful european city wondered path looked like others lot people make workout public variety service definitely accessible data use runkeeper cycling sampled map got mostly american city european city alphabetical order one quick expected takeaway people like run water park probably get away car scenery smaller inland city seem hightraffic road le running elsewhere click embiggen r code snippet case want map route like said use runkeeper let download workout one click gpx file strava mainly cycling also let wary apps let download trace without paying premium download log whatever service use stick r code directory run console get quick plot route update point map experimental certainly show running coverage city example look new york map notice running route central park make much sense fetched data runkeeper encodes look route runkeeper specific city always get route entire city example new york search yield run mostly lower manhattan might also noticed noise data sometimes look like people run water although would awesome likely due blip data collection location via phone exactly reliable take map literally simply cover tip interesting iceberg
708,Lobsters,visualization,Data Visualization,Datazenit – New perspective for your database,http://datazenit.com/,datazenit new perspective database,heroku user try new data explorer heroku modern database administration tool crossplatform mysql postgresql gui data grid schema builder interactive chart mysql postgresql gui get datazenit feature,heroku user try new data explorer heroku modern database administration tool crossplatform mysql postgresql gui data grid schema builder interactive chart mysql postgresql gui datazenit webbased database administration tool feature smart data grid query builder schema editor live chart raw query editor autocomplete goal build modern intelligent database tool would increase productivity get datazenit feature schema editor designed developer productivity mind equipped intelligent feature similar one could find ide user choose query data via graphical user interface instead classic raw query editor query builder support multiple condition sorting various chart style used create effective visualization like scatter line area bar pie chart best shared embedded enjoy advanced data grid different editor like textarea dropdown checkbox calendar easy date picking datazenit first database administration tool introduces team collaboration feature user share connection query chart user productivity one main goal datazenit quickly jump connection database different action using fuzzy search navigation datazenit easily export data sql dump csv file ability create automatic snapshot database store backup database credential encrypted aes algorithm decrypted connecting database server
709,Lobsters,visualization,Data Visualization,Watch Computers Watch Famous Movies,http://www.fastcodesign.com/3024714/infographic-of-the-day/watch-computers-watch-famous-movies,watch computer watch famous movie,computer watching movie ben grosser ongoing interest travis look mirror recognizing trend,computer watching movie new medium artist ben grosser project wrote software computer illustrate view famous movie scene real time grosser gave computer level autonomy via algorithm artificial intelligence program wrote screened clip several wellknown film result series realtime sketch allow u watch movie way computer piece artresearch right line grosser ongoing interest exploring cultural implication softwarewhat mindbending computerfiltered scene completely unrecognizable human still distinctive right even amidst appears computerized nonsense make visual signature various film example american beauty visuals clip shift back forth dark room illuminated tv scene shown tv feature slowly floating plastic bag stationary brick wall software find bag track leading light curvy sketchlike mark grosser tell codesign inception scene lot software watch face closeup walking people distance landscape etc scene shift exploding building sequence software attracted fast moving bit piece structure fly across frame ultimately grosser software lacking narrative context film film shot relatively stationary camera like taxi driver tend rich mise en scène glossed computer simplifies action single line meanwhile polar opposite moment like famous pan matrix appear total chaos even though human brain easily make association simply seeing multiple perspective stationary scene different vision find look computer grosser asks certainly narrative construction scene role within larger film play part computer watching movie show much brain fill clip mind left visual space asks construct narrative indeed without narrative context software transforms robert deniro unforgettable talkin scene disappointing oversimplification akin travis look mirror given much smarter algorithm getting much better silicon getting recognizing trend human hard imagine day computer watching movie could enlightening human critic
711,Lobsters,visualization,Data Visualization,1ucasvb's lab - Math Visualizations,http://1ucasvb.tumblr.com,lab math visualization,asked today reddit raskscience fourier transform bunch spectrogram sound file recorded punching table cochlea,http question asked today reddit raskscience decided pitch give indepth answerbelow reproduction answer figured tumblr follower might enjoy wellin order understand better got ta talk frequency spectrum soundan important result mathematics reasonable function exact detail reasonable matter case explain bit decomposed sum bunch sine cosine different frequency decomposition called fourier transform function think sine cosine wave ingredient add together make wave great result function complicated sine cosine pretty simplesound pressure wave pressure change time describe sound pressure amplitude function time p always going reasonable function pressure change smoothly go infinity etc decompose sine cosine using fourier transformadding sine cosine frequency together make another wavy function shifted around time shift called phase change phase changing much sine much cosine add togetherhere animation showing make sinusoidal wave constant amplitude different phase green adding together sine wave red cosine wave blue changing amplitude sine cosineto simplify math usually turn two complex number compact representation amplitude tall wave phase much shifted time diagram blue red line amplitude sine cosine wave previous animation yellow angle phase fourier transform pressure wave p going another function q f give u complex number given frequency f wavethis like someone gave cake ran machine told ingredient went making much ingredient used amplitude added mix phase instead talking amplitude pressure time talk amplitude phase frequency fboth complete description thing change perspectivenow hit thing create pressure wave propagates object bounce around inside material make energy go making vibrate several different frequenciesthe vibration surface object push air around make pressure wave air hear sound use fourier trick find frequency sound generated object made vibrateto better visualize create spectrogram graph tell u much frequency moment time sound work taking small slice sound running fourier transform getting amplitude complex number returned frequency squaring squaring part important related amount energy frequency bunch spectrogram sound made vertical axis frequency horizontal axis timethe first two spectrogram sound file sound violin clarinet bassoon trombone playing note recall correctly sorry already closed program linear scale spectrogram four different instrument playing notethe first graph linear scale see instrument bunch nice equally spaced horizontal stripe lowest stripe usually brightest longest meaning energy take longer decay fundamental frequency sound instrument note playing stripe called harmonic nicely spaced always integer multiple fundamental frequency sometimes also stripe exactly integer multiple called overtone create even richer sound notice line line four instrument since playing note fundamental frequency harmonic matchthis make tonal brightness change also change time move right different way different frequency dissipate faster slower different instrument unique mix frequency fast decay make sound differenttonal instrument characteristic stripey patternlogarithmic scale spectrogram four different instrument playing notethe second graph graph logarithmic scale see easily frequency make sound check scale right hand also recorded punching table thing last two graphslinear scale spectrogram sound table hityou see nice structure spectrum case stripe show spectrogram mess bunch frequency everywhere vertical line probably different stuff table bouncing back easy way pinpoint pitch one frequency stand sound along stripey harmonic make sound richer interesting single line spectrogram would sound like pure constant tone like tuning fork boring thing really noticeable pitch however important note everything like vibrate particular frequency spectrum table hit show u exactly frequency table like vibrate atbut frequency sharply defined stand spectrum sound object make neither harmonic stand relation fundamental frequency blend one big blob spectrumso sound going sound pitchless immediately apparent main frequency soundbonus stuff ear brain care frequency stuff well turn ear work pretty much fourier transform sound hear key component inner ear cochlea spiral shaped thing full liquid bunch tiny little hair inside tiny little hair like vibrate specific frequency sound come cochlea vibrate produce electric signalso cochlea little hair acting pretty much like fourier transform frequency component important way hear
712,Lobsters,visualization,Data Visualization,Graphing your Nest thermostat,http://blog.librato.com/posts/nest-thermostat-monitoring,graphing nest thermostat,,solarwinds worldwide llc right reserved
713,Lobsters,visualization,Data Visualization,Raft consensus visualized,http://thesecretlivesofdata.com/raft/,raft consensus visualized,,
714,Lobsters,visualization,Data Visualization,A Shift-And Visualization,http://videlalvaro.github.io/2014/01/shift-and-visualization.html,shiftand visualization,shiftand visualization flexible pattern matching string bitparallelism bitparallel shiftand visual simulation start flexible pattern matching string sicher,shiftand visualization january article would like describe shiftand algorithm pattern matching based book flexible pattern matching string apart actual description scroll demonstration algorithm work shiftand categorized prefixbased algorithm similar kmp shiftand keep set prefix p match suffix text read far keep mind suffix text read far suffix whole text set prefix updated using bitparallelism set prefix kept bit mask called defined dm canonical way referring pattern length example six character pattern far first character match text would every character read text updated bit dm active match possible update set constant time yes using bitparallel operation algorithm first build table b holding bit mask bm every character pattern searching word announce entry character n look like word announce n position marked bit mask right left recap algorithm scan pattern searching build table updating bit mask go code javascript init table var l b pcharat build bit mask table var l b pcharat b pcharat bit mask table word announce end looking like var b n u c e course actual number bit mask padding also added entry table whenever read character text match bit mask used table built start searching pattern text first set start reading text character character let say read search bit mask table return calculate new first shift left value get anded mask retrieved table would complete line b currentchar keep iterating text find match find match need check bit dm active run following operation create following bit mask match complete algorithm vanilla implementation using javascript string p pattern search needle string text haystack function shiftand p text var b var l plength var tl textlength init table var l b pcharat build bit mask table var l b pcharat b pcharat var var matchmask var tl b textcharat var matched matchmask matched return l return interesting part visual simulation shiftand visual simulation let briefly explain going first form enter pattern search text search easy hit start visualization display text bellow pattern searching beneath b table next result step reported example see initial value read character text get value table anding value getting result hope color pretty self explanatory colorblind trust one click start enjoy show hope post made justice think one elegant algorithm know book called algorithm book similar sure algorithm would make interested learning pattern matching string would recommend get copy book flexible pattern matching string since really worth every penny would like mention also mr sicher basically single handedly fixed mess html cs created enjoyed visual style send prop twitter
715,Lobsters,visualization,Data Visualization,Processing Hour of Code,http://hello.processing.org/,processing hour code,,browser support canvas tag javascript required view content page
716,Lobsters,visualization,Data Visualization,Impressions of InfluxDB,http://obfuscurity.com/2013/11/My-Impressions-of-InfluxDB,impression influxdb,mentioned folk influxdb leveldb open sourced backend compression open source project transparent sandbox intend sqllike query language carbonaggregator pullrequest mailing list tasseo author agree many u,mentioned last week planning look closer influxdb past weekend folk asked writeup finding influxdb timeseries metric event database based leveldb keyvalue store leveldb written open sourced google optional backend riak influxdb influx short inherits many leveldb default characteristic mean optimized writes us compression default slow read deletes influx recently released open source project mit license team errplane author transparent goal roadmap publishing project website getting started influx easy enough provide free online sandbox create user account database immediately begin writing metric via administration ui also start sending metric remotely simple enough curl bit json seq curl x post http ufoo pbar name data column foo bar point random random sleep done run query visualize metric within interface nt care choice accepting credential via url parameter look like agree intend support http basic auth soon otherwise http api largely paramdriven making straightforward easy use capable sending chunked nonchunked response influx accepts query via sqllike query language comfortable traditional relational database feel right home already support filtering using clause addition aggregate using group merge join handful mathematical function min max mean mode median percentile making suitable routine analytics task plan add feature called continuous query allow user precompute expensive query another time series realtime face value sound much like graphite carbonaggregator however would entire query language disposal potential much powerful remain question around potential scale well general benchmark paul dix founder errplane apparent influx project lead say clustering benchmark expected released december workinprogress github pullrequest open tracking ongoing clustering work paul given anecdotal number point per second project mailing list language binding already exist javascript frontend ruby python nodejs personally found interacting directly http api already simple enough managed add backend support influxdb tasseo within couple hour would nice see efficient binary wire protocol submitting metric seems author agree time tell happens someone love metric lot like influxdb easy get started external servicecomponent dependency submitting querying metric breeze errplane already us influx production something based think safe assume innovation continue healthy pace however remain important gap functionality particularly area scaling high availability complex andor userdefined function robust graphing discovery ui yet think many u want influx succeed scaling tool graphite challenge next couple month reveal whether influxdb scalable timeseries project many u believe whether fall wayside orphaned fork errplane engine
717,Lobsters,visualization,Data Visualization,Anatomy of a pseudorandom number generator – visualising Cryptocat’s buggy PRNG,http://nakedsecurity.sophos.com/2013/07/09/anatomy-of-a-pseudorandom-number-generator-visualising-cryptocats-buggy-prng/,anatomy pseudorandom number generator visualising cryptocat buggy prng,,sophos home protects every mac pc home
718,Lobsters,visualization,Data Visualization,Visualizing Hash Functions,http://gfredericks.com/gfrlog/98,visualizing hash function,spec appendix,working static visualization hash function starting image respectively two sample image show process computing respective hash function input denny ascii encoding ie input hex portion image included note two particular algorithm visualization algorithm mostly defined term operation word essentially mean integer define inputoutput conversion sequence bitsbytes word step covered diagram probably confusing thing examine detail us bigendian conversion byte word us littleendian see appendix tl dr word byte printed opposite order would expect lot similarity particular include function word varies slightly throughout computation highlighted function yellow box way evolves state similar described differently spec decided deviate spec structure diagram way highlight similarity also think bit simpler follow curious detail spec fairly readable hopefully even diagram follow along hoping sort diagram give appreciation complex hash function absolutely relative difficulty trying invert cryptographic hash function useful aid anyone trying understand detail particular algorithm fun look love thing give sense crazycomplicated computer look certain angle several thing think worth exploring well approach adapted hairier algorithm whirlpool us state rather state like esoteric algorithm could operate individual bit like branch sort computation cryptographic primitive numerical algorithm eg biginteger arithmetic implementation general feedback suggestion welcome appendix bigendian look natural display hex value word higherorder byte first eg word corresponding integer shown mean internally algorithm look particular bitrotations operate way input output word byte ordered opposite would expect input denny first word come substring denn first word first word also notice try compare output shown value given normal utility
719,Lobsters,visualization,Data Visualization,From a logfile to a histogram with a few lines of R - Andy Davies,http://andydavies.me/blog/2013/06/06/from-logfile-to-histogram-with-a-few-lines-of-r/,logfile histogram line r andy davy,time taken r r studio zedshaw programmer need learn statistic kill,helping client identify performance issue new hosting platform process commissioning new platform new relic running unfortunately provides average response time average hide manner sin prefer look distribution response time also wanted way compare existing platform monitoring method chose add time taken ii logfiles plot histogram using r time taken includes network time may issue scenario r tool statistical computing make crunching number turning graph relatively easy first started using r found bit learning curve still work anything trivial probably mixture statistical knowledge forgotten language library ii logfiles start multiline header sometimes one part way look like software microsoft internet information service version date field date time ssitename scomputername sip csmethod csuristem csuriquery sport csusername cip csversion c useragent c referer cshost scstatus scsubstatus scbytes csbytes timetaken get get get get header need stripping left tab separated set field header date time ssitename scomputername sip csmethod csuristem csuriquery sport csusername cip csversion c useragent c referer cshost scstatus scsubstatus scbytes csbytes timetaken get get get get data format use need imported r filtered plotted histogram r command shell prefer use r studio exploring data data readtable pathtologfilelogfilename headert sep including get request root took le second second skewed chart course outlier may interesting right careful removing subset subset data csmethod get csuristem timetaken hist subset timetaken xlab timetaken m col lightblue main web may simple example hopefully go way showing power r need convincing benefit learning statistic zedshaw programmer need learn statistic kill might help
723,Lobsters,visualization,Data Visualization,StoryLine - time data visualisation,http://www.hoodb.com,storyline time data visualisation,,
724,Lobsters,visualization,Data Visualization,Diff Displays: Tracking Visual Changes on Unattended Displays,http://sachi.cs.st-andrews.ac.uk/research/software/diffdisplays/,diff display tracking visual change unattended display,diff display link companion video download link diff display executable research team jakub dostal per ola kristensson aaron quigley reference click read research paper pdf,diff display diff display project sachi group help user single multiple display eg monitor quickly gauge changed since last looked display display using currently looking called unattended display using multiple display tracking change across difficult especially true trying focus getting thing done moreover many change display may simply act distraction whether popup ad twitter facebook notification new email image show diff display use monitor using freezeframe technique user looking central display two peripheral display frozen desaturated due freezeframe active diff display consists two part first includes system able track display looking using web camera also contains four different visualisation technique highlighting change technique executed look away display aim provide overview awareness change happened attention focused elsewhere download executable version diff display page along watching video visulisation method operation research project today might expect type feature every operating system year ahead visual environment becomes evermore laden display image illustrates typical use scenario person looking centre display diff display know interfere however since paying attention two display display running one four technique called pixmap notice new tweet highlighted white link companion video download link diff display executable code copyright c university st andrew please note currently documentation software provided asis without support need install camera display using camera positioned centred top display control visualisation rightclicking icon appears system tray icon red mean system detect eye may happen wear glass eye obscured research team jakub dostal per ola kristensson aaron quigley reference dostal j kristensson po quigley subtle gazedependent technique visualising display change multidisplay environment proceeding acm international conference intelligent user interface iui acm click read research paper pdf
726,Lobsters,visualization,Data Visualization,traceGL: An Oscilloscope for Code,https://trace.gl/,tracegl oscilloscope code,,
727,Lobsters,visualization,Data Visualization,Bret Victor - Inventing on Principle,https://vimeo.com/36579366,bret victor inventing principle,worrydreamcom,bio bret victor invents tool enable people understand create designed experimental ui concept apple interactive data graphic al gore musical instrument alesis bret see worrydreamcom talk given cusec
728,Lobsters,visualization,Data Visualization,Keywords in Common Vulnerabilities and Exposures CVE descriptions,http://www.foo.be/cve/,keywords common vulnerability exposure cve description,keywords common vulnerability exposure cvesearch ntlk cvesearch searchfulltext section generating json visualization json file containing cve keywords,keywords common vulnerability exposure view top keywords used common vulnerability exposure descriptionsummary today automatically generated fulltext indexing functionality cvesearch move mouse get value visualization keyword truncated fit screen move mouse node see full keywords number occurrence term word verb lemmatized wordnet lemmatizer ntlk english stopwords used remove undesired word cve term could considered kind text corpus specific term like common version number cve common wording like via kept visualization want read code used generation keywords list cvesearch searchfulltext section generating json visualization json file containing cve keywords occurences downloaded analysis
729,Lobsters,visualization,Data Visualization,Dashing - a dashboard framework,http://shopify.github.com/dashing/,dashing dashboard framework,layout widget id push data anatomy widget batman binding batman filter laying widget gridsterjs,sample dashboard widget name sampleerb becomes accessible sample widget represented div element needing dataid dataview attribute wrapping li tag used layout dataid set widget id used pushing data widget two widget widget id allowing widget multiple dashboard push data id instance updated dataview specifies type widget used widget type number however using different data attribute let customize use arbitrary attribute want one available within widget logic anatomy widget html file used layout binding sc file style coffeescript file allows handle incoming data functionality number widget html widget use batman binding order update content whenever data change dom automatically reflect change may notice piping character databind batman filter let easily format representation data number widget coffeescript default whenever widget receives json data mix received data onto mean pas data title attribute widget title variable change dom element bound need handle laying widget dashing us gridsterjs create layout widget widget part unordered list li element widget contains datarow row widget datacol column widget datasizex integer size width widget datasizey integer size height widget datarow datacol leave gridster automatically position widget want customize layout easily simply navigate running dashboard drag widget mouse prompted save layout finished follow onscreen instruction datasizex datasizey multiple widget dimension configure applicationcoffee
730,Lobsters,visualization,Data Visualization,Flame graphs in Ruby MiniProfiler,http://samsaffron.com/archive/2013/03/19/flame-graphs-in-ruby-miniprofiler,flame graph ruby miniprofiler,putting together flame graph dtrace linux added special option even production demo profiling session discourse creating slug slow active model serializers patch fair amount time spent translating object initialization slow call stack really deep rack omniauth forget gc totally invisible particular sampling profiler moment http diagnose issue expected love help miniprofiler open source already checked summary perftoolsrb rubyprof new relic production,ruby outofthedoor favorite new feature ruby new highly efficient mechanism gathering stack trace ruby would struggle really hard gather stack trace per m execution ruby able gather stack trace every millisecond using brand new callerlocations api increased efficiency make possible write sampling profilers pure ruby even run safely production putting together researching brand new dtrace support ruby noticed people mentioning concept flame graph idea quite simple lay sampled stack trace side side visually identify hot area code optimised example brendan gregg blog unfortunately getting hang together ruby using ruby stack trace fairly impractical rail stack trace massively deep code written perl appears api gather ruby call stack dtrace ruby dtrace probe even run linux ruby compile dtrace linux enabled discovered stack trace super fast ruby making work became reality quickly read excellent library got going writing something similar tailored ruby rail added special option miniprofiler generate flame graph page add ppflamegraph end url get flame graph even production demo profiling session happened ran flame graph discourse front page report informationally dense hovering area allow zero various problem let describe thing glean graph report zoomable like google map zoom enough start seeing method name creating slug slow sample collected preceding call stack trace code quite short def slug slugfor title presence topic end slug method triggering transliterate method inflector method call cheap really want get exact cost wrapping code counter def slug rack miniprofilercounter slug slugfor title presence topic end end resolve either improve performance underlying transliterator cache slug db cache lookup memory inflector overall slow preceding image describes fairly extensive area execution active model serializers turning inmemory data json surprising fact large amount time spent pluralizing add miniprofiler instrumentation see actual impact time spent pluralizing stuff ton thing improve big culprit include method serializers easily improve could look adding internal cache inside pluralizer since good citizen serializers getting lot attention moment let patch fair amount time spent translating notice sample happen originate localization gem majority originating fallback logic probably make sense adding cache top translation lookup really noop object initialization slow noticed trace page repeatedly topic page code question def addtrustlevel possiblity load trust level column skip return unless attributeskey trustlevel selftrustlevel sitesettingdefaulttrustlevel end funny thing wrote code correct serious perf originally code raising exception handling rail massive call stack exception normal operation huge pitfall however appears attribute materialized call expensive operation trivial fix def addtrustlevel possiblity load trust level column skip return unless hasattribute trustlevel selftrustlevel sitesettingdefaulttrustlevel end call stack really deep love rack however one sideeffect using call stack get really really deep fact frame deep time even start executing application code make gathering stack trace slower exception slower complicates execution frame spent inside omniauth may indicate may make sense sort router inside omniauth dispatch opposed layered rack approach handful strategy place forget gc totally invisible particular sampling profiler moment found ruby gc untuned huge performance problem discourse discussed length http miniprofiler easily add ppprofilegctimes end request noticing multiple gc single request odds gc could fair amount tuning future work may integrating gc execution time graph diagnose issue flame graph tool powerful also present information overload general recommendation would look repeated visual pattern stuff like inflector pattern repeating could indicate library inefficient call much work look area expected would short however spanned multiple frame example notice userfullname call taking frame possible inefficient algorithm generating fullname data gem spending way time expected love help code flame graph written yesterday first foray svg sure many way improve optimise miniprofiler open source would love help improving code demo already checked also possible technique used platform maybe ninja technique allow javascript grab stack trace running thread bet code could shared recent google go port miniprofiler unfortunately think gather stack trace existing running thread net short attaching icorprofiler icordebugger summary touched surface much left done rendering j engine need lot tidying refactoring always pull request welcome ruby fair amount option come profiling excellent perftoolsrb long running rubyprof project pay new relic miniprofiler adding yet another elegant way make sense ruby execution production sure try
731,Lobsters,visualization,Data Visualization,Internet Census 2012: Port scanning all IPv4 adresses using insecure embedded devices,http://internetcensus2012.bitbucket.org/paper.html,internet census port scanning adresses using insecure embedded device,built professional team,built professional team bitbucket git code management bitbucket give team one place plan project collaborate code test deploy
735,Lobsters,visualization,Data Visualization,Making Diagrams with graphviz,http://spin.atomicobject.com/2013/01/30/making-diagrams-with-graphviz/,making diagram graphviz,graphviz creating basic graph graphviz using graphiz development ragel skiplist strange loop talk,graphviz great tool creating quick diagram particularly polished wysiwyg editor omnigraffle automatically create diagram simple markup language dot reading dot markup us various layout algorithm automatically arrange diagram dot language pretty flexible formatting quite easy generate program main installation includes couple standalone program dot neato mostly used dot creates directed graph neato render undirected graph installing beyond scope post installation straightforward osx window linux bsd distribution creating basic graph graphviz create basic graph really need generates graph shown right node b created automatically directed arc created create png diagram use command dot tpng outpng indot graphviz create many format well many attribute added overall graph individual node arc example property digraph graph rankdirlr leftright layout topdown shapesquare fontcolorwhite stylefilled fillcolorblue b shapetriangle fontcolorwhite stylefilled fillcolorred c styleinvis b stylebold colorred label b b styledashed colorblue label c styledotted label digraph graph rankdirlr leftright layout topdown shapesquare fontcolorwhite stylefilled fillcolorblue b shapetriangle fontcolorwhite stylefilled fillcolorred c styleinvis b stylebold colorred label b b styledashed colorblue label c styledotted label become bit verbose formatting consistent dot code easily generated languagespecific wrapper creating object render dot code find dot language easy enough work directly using graphiz development find graphviz particularly useful visualizing interdependency task diagramming state machine debugging data structure dot code task diagram making peanut butter jelly sandwich digraph peanutbutterjellytime makesandwich makesandwich jelly makesandwich bread makesandwich plate peanutbutter openpbjar peanutbutter spreadpb spreadpb cleanknife jelly openjellyjar jelly spreadjelly bread groceryshopping groceryshopping fixbiketire spreadjelly cleanknife openjellyjar unstickjellyjar unstickjellyjar userubberbandtogrip makesandwich peanutbutter cleanknife unloaddishwasher plate unloaddishwasher digraph peanutbutterjellytime makesandwich makesandwich jelly makesandwich bread makesandwich plate peanutbutter openpbjar peanutbutter spreadpb spreadpb cleanknife jelly openjellyjar jelly spreadjelly bread groceryshopping groceryshopping fixbiketire spreadjelly cleanknife openjellyjar unstickjellyjar unstickjellyjar userubberbandtogrip makesandwich peanutbutter cleanknife unloaddishwasher plate unloaddishwasher order node arc specified affect overall arrangement graphviz placement algorithm always cause node without dependency sink bottom making clear acted immediately likewise dot code state machine diagram digraph start offline scanning joining online start offline offline scanning label scan offline offline label failed scan scanning joining label detected scanning offline label failed join joining online label handshake joining offline label failed handshake online offline label timeout digraph start offline scanning joining online start offline offline scanning label scan offline offline label failed scan scanning joining label detected scanning offline label failed join joining online label handshake joining offline label failed handshake online offline label timeout could easily generated list state transition label ragel tool generating code state machine description also us graphviz visualizing output finally graphviz helpful debugging data structure found pointer error c data structure writing code dump structs address pointer runtime making bad reference stand structs best represented record shape allows named subfields label broken character field tagged label subfields referenced independently head full example skiplist diagram made strange loop talk since dot declarative format want steer towards particular layout best work within model want series node appear line bottom skiplists node modify weight attribute edge cause layout algorithm place higher priority keeping node close overall layout allow invisible edge node styleinvis also nudge layout right direction
736,Lobsters,visualization,Data Visualization,How to Fold a Julia Fractal,http://acko.net/blog/how-to-fold-a-julia-fractal/,fold julia fractal,,start classic real number line marked integer position poke around imagine line continues left right indefinitely problem visualization picturing number point clear act upon example two adjacent number class blue class green sum class red similarly adjacent pair class blue class green class red ca nt easily spot red point going based blue green better solution represent number using arrow instead vector arrow represents number length pointing rightleft positivenegative nice thing arrow move around without changing add two arrow lay end end easily spot class blue class green class red class blue class green class red similarlyas long apply positive negative correctly everything still work let examine multiplication going start class blue multiply class green repeatedly every multiplication vector get longer percentthese vector represent number class red class red class red class red class red nice exponential sequence going multiplying negative class green repeatedly vector still grow also flip around alternating positive negativethese vector represent sequence class red class red class red class red class red another way looking instead flipping positive negative passing zero went around instead rotating vector growing get number discovered something remarkable way enter pas netherworld around number line question mathematically sound plain nonsense challenge come consistent rule applying rotation start normal arithmetic multiplying positive nt flip sign say rotated multiplying negative flip sign rotated class green length multiplied normally case suppose pick one inbetween nethernumbers say vector length angle mean trying find write class green angle degree could make sense say multiplying number rotate class green growing length creates spiral point class red angle class red angle class red angle class red angle class red angle three normal number lying neatly real number line two new number conjured void let examine rotation pick class green angle multiplying probably nt change vector length mean get pure rotation effect multiplying class green angle rotate increment take multiplication go around circle one back real number actually remarkable thing mean invented rule created square root number class green angle multiply end angle class green class green class blue class blue real line actually go class green angle multiply end angle class green class green class blue went around circle rotating class blue also equal class blue could think rotate way work quite remarkable rule consistent matter many time looped around circle either way class blue two square root separated namely class green angle class green angle analogous square root complex multiplication summarized angle add length multiply taking care preserve clockwise counterwise angle multiply two random complex number b get c start changing vector c turn along tugged b angle wrap around circle length change hence complex number like turn rule separate ordinary vector picture complex plane grid concentric circle circle one circle two circle oneandahalfs etc number come many different version flavor one positive one negative infinitely many others arbitrary angle side circle brings u reluctant elusive friend class blue proper name class blue angle way complex number normally introduced magic put complex number anywhere real number go math still work oddly enough get complex answer complex input complex number usually written sum real x coordinate imaginary coordinate much like ordinary vector misleading ugly number class red frac sqrt frac actually class green angle disguise act like frac frac sqrt knowing convert two required real calculation cheat visually looking individual vector get u far study function real number looking graph show u every output every input complex number need understand numbersthatliketoturn field vector change whole note put ie oclock position simplicity apply square root vector shift really entire fabric complex plane warping circle squeezed halfcircle angle opposite squaring ie doubling angle length normal square root applied compressing grid edge bulging middle remember every number two opposite square root come circular nature complex math take vector rotate circ end place two vector equal dividing angle half two vector separated circ lie opposite end circle complex math emerge complex operation like folding unfolding piece paper weird stretchy circular hard grasp easier see motion help see going cut disc separated positive negative angle square number undo square root angle double folding plane length also squared restoring grid spacing normal squaring square root ended top identical twin merge everything back flat plane everything match perfectly thus square root actually look like new number flow far side try shear disc apart complex plane stubborn want stay connected fold unfold ensure always case one remarkable property limit folding unfolding take every number fourth power angle multiplied four length taken fourth power result copy plane folded one however thing always neat happens take everything irrational power say frac sqrt angle get multiplied mean rotation becomes sim multiple divisible frac sqrt circular grid never match matter far extend hence operation split single unique complex number infinite amount distinct copy irrational power p infinite number solution zp c lying circle hint look taylor series arbitrary function f z written infinite sum bz z complex sum nt represent finite amount fold mindboggling infinite origami complex space
737,Lobsters,visualization,Data Visualization,Tutorial: Building 'Shiny' Web Applications with R,http://rstudio.github.com/shiny/tutorial/#,tutorial building shiny web application r,introducing shiny shiny homepage feature twitter bootstrap websockets reactive installation let go uir serverr uir serverr reactivity overview reactivity reactive programming reactive programming basic reactive value reactive expression back code uir server script serverr ui server uir serverr input output uir creating server script serverr displaying output uir run debug running separate process http live reloading debugging technique printing cat using browser browser establishing custom error handler recover article r startup customizing slider uir server script serverr tab panel uir tab reactive data serverr basic usage datatables application datatables customizing datatables example uir server script serverr important note uir serverr uir serverr dynamic ui function function use javascript showing hiding control uir serverr creating control fly uir serverr use javascript modify page defining html ui wwwindexhtml server script serverr scoping persession object object visible across session global object scope included r file getting noninput data client using session clientdata serverr viewing available value clientdata sending image renderplot using renderimage serverr uir structure returned list data uri scheme sending prerendered image renderimage serverr using clientdata value serverr reactivity overview reactive source endpoint http reactive conductor summary reactive source reactive conductor reactive endpoint invalidation arrow dependent take dependency implementation source conductor endpoint value expression observer reactive value reactive expression observer reactive value reactive expression observer difference reactive expression observer execution scheduling simple example app reactive conductor summary invalidation flag arrow creation removal flush event isolation avoiding dependency http glimmerrstudiocomwinstonactionbutton deploying web deploying shiny apps run locally selfhosted shiny server shiny server shiny server pro con rstudiohosted shiny apps register pro con sharing apps run locally deploying shiny apps web gist gistgithubcom github http pro con github repository http githubcomrstudioshinyexample pro con zip file delivered web pro con zip file copied recipient computer pro con package pro con building input design component designed used html r configurable using html attribute easily access value using jquery write input binding throttling debouncing blog post register input binding example twitter bootstrap jquery delegated event feature building output choropleth map googlevis motion chart custom input serverside output function rjsonio time series object design output component markup write output binding register output binding,introducing shiny shiny new package rstudio make incredibly easy build interactive web application r introduction live example visit shiny homepage feature build useful web application line javascript required shiny application automatically live way spreadsheet live output change instantly user modify input without requiring reload browser shiny user interface built entirely using r written directly html cs javascript flexibility work r environment console r rgui window mac es statet rstudio etc attractive default ui theme based twitter bootstrap highly customizable slider widget builtin support animation prebuilt output widget displaying plot table printed output r object fast bidirectional communication web browser r using websockets package us reactive programming model eliminates messy event handling code focus code really matter develop redistribute shiny widget developer easily drop application coming soon installation shiny available cran install usual way r console installpackages shiny let go tutorial cover basic shiny provides detailed example using much capability click next button get started say hello shiny hello shiny example simple application generates random distribution configurable number observation plot run example type library shiny runexample shiny application two component userinterface definition server script source code component listed subsequent section tutorial break code detail explain use reactive expression generating output though try playing sample application reviewing source code get initial feel thing sure read comment carefully user interface defined source file named uir uir library shiny define ui application plot random distribution shinyui pagewithsidebar application title headerpanel hello shiny sidebar slider input number observation sidebarpanel sliderinput ob number observation min max value show plot generated distribution mainpanel plotoutput distplot serverside application shown one level random distribution requested number observation generated plotted histogram however also notice function return plot wrapped call renderplot comment function explains bit find confusing cover concept much detail soon serverr library shiny define server logic required generate plot random distribution shinyserver function input output expression generates plot distribution expression wrapped call renderplot indicate reactive therefore automatically reexecuted input change output type plot output distplot renderplot generate rnorm distribution plot dist rnorm input ob hist dist next example show use input control well use reactive function generate textual output shiny text application demonstrates printing r object directly well displaying data frame using html table run example type library shiny runexample first example single numeric input specified using slider single plot output example bit going two input two type textual output try changing number observation another value see demonstration one important attribute shiny application input output connected together live change propagated immediately like spreadsheet case rather entire page reloaded table view updated number observation change user interface definition application notice particular sidebarpanel mainpanel function called two argument corresponding two input two output displayed uir library shiny define ui dataset viewer application shinyui pagewithsidebar application title headerpanel shiny text sidebar control select dataset specify number observation view sidebarpanel selectinput dataset choose dataset choice c rock pressure car numericinput ob number observation view show summary dataset html table requested number observation mainpanel verbatimtextoutput summary tableoutput view server side application also gotten bit complicated create reactive expression return dataset corresponding user choice two rendering expression renderprint rendertable return output summary output view value expression work similarly renderplot expression used first example declaring rendering expression tell shiny executed dependency change case either one user input value input dataset input n serverr library shiny library datasets define server logic required summarize view selected dataset shinyserver function input output return requested dataset datasetinput reactive switch input dataset rock rock pressure pressure car car generate summary dataset output summary renderprint dataset datasetinput summary dataset show first n observation output view rendertable head datasetinput n input ob introduced use reactive expression really explained work yet next example start one baseline expand significantly reactive expression work shiny reactivity application similar hello text go much detail reactive programming concept run example type library shiny runexample previous example given good idea code shiny application look like explained bit reactivity mostly glossed detail section explore concept deeply want dive learn detail see understanding reactivity section starting reactivity overview reactivity shiny web framework fundamentally making easy wire input value web page making easily available r result r code written output value back web page input value r code output value since shiny web apps interactive input value change time output value need updated immediately reflect change shiny come reactive programming library use structure application logic using library changing input value naturally cause right part r code reexecuted turn cause changed output updated reactive programming basic reactive programming coding style start reactive change time response build top reactive access reactive value execute reactive expression interesting reactive expression whenever execute automatically keep track reactive value read reactive expression invoked dependency become date know return value also become date dependency tracking changing reactive value automatically instruct reactive expression directly indirectly depended value reexecute common way encounter reactive value shiny using input object input object passed shinyserver function let access web page user input field using listlike syntax codewise look like grabbing value list data frame actually reading reactive value need write code monitor input write reactive expression read input need let shiny take care knowing call simple create reactive expression pas normal expression reactive application example expression return r data frame based selection user made input form datasetinput reactive switch input dataset rock rock pressure pressure car car turn reactive value output viewed web page assigned output object also passed shinyserver function example assignment output depends datasetinput reactive expression defined well input ob output view rendertable head datasetinput n input ob expression reexecuted output rerendered browser whenever either datasetinput input ob value change back code taken deeper look core concept let revisit source code try understand going depth user interface definition updated include textinput field defines caption similar previous example uir library shiny define ui dataset viewer application shinyui pagewithsidebar application title headerpanel reactivity sidebar control provide caption select dataset specify number observation view note change made caption textinput control updated output area immediately type sidebarpanel textinput caption caption data summary selectinput dataset choose dataset choice c rock pressure car numericinput ob number observation view show caption summary dataset html table requested number observation mainpanel textoutput caption verbatimtextoutput summary tableoutput view server script server script declares datasetinput reactive expression well three reactive output value detailed comment definition describe work within reactive system serverr library shiny library datasets define server logic required summarize view selected dataset shinyserver function input output declaring datasetinput reactive expression ensure called input depends change computation result shared caller executes single time datasetinput reactive switch input dataset rock rock pressure pressure car car output caption computed based reactive expression return input caption user change caption field expression automatically called recompute output new caption pushed back browser redisplay note dataoriented reactive expression nt depend input caption expression called input caption change output caption rendertext input caption output summary depends datasetinput reactive expression reexecuted whenever datasetinput invalidated ie whenever input dataset change output summary renderprint dataset datasetinput summary dataset output view depends databaseinput reactive expression input ob reexecuted whenever input dataset input ob changed output view rendertable head datasetinput n input ob reviewed lot code covered lot conceptual ground first three example next section focus mechanic building shiny application ground also cover tip run debug shiny application ui server let walk step building simple shiny application shiny application simply directory containing userinterface definition server script additional data script resource required support application get started building application create new empty directory wherever like create empty uir serverr file within purpose illustration assume chosen create application shinyapp shinyapp uir serverr add minimal code required source file first define user interface calling function pagewithsidebar passing result shinyui function uir library shiny define ui mile per gallon application shinyui pagewithsidebar application title headerpanel mile per gallon sidebarpanel mainpanel three function headerpanel sidebarpanel mainpanel define various region userinterface application called mile per gallon specify title create header panel panel empty let define skeletal server implementation call shinyserver pas function accepts two parameter input output serverr library shiny define server logic required plot various variable mpg shinyserver function input output server function empty later use define relationship input output created minimal possible shiny application run application calling runapp function follows library shiny runapp shinyapp everything working correctly see application appear browser looking something like running shiny application however much yet next section complete application specifying userinterface implementing server script input output application building us mtcars data r datasets package allows user see boxplot explores relationship milespergallon mpg three variable cylinder transmission gear want provide way select variable plot mpg well provide option include exclude outlier plot add two element sidebar selectinput specify variable checkboxinput control display outlier userinterface definition look like adding element uir library shiny define ui mile per gallon application shinyui pagewithsidebar application title headerpanel mile per gallon sidebar control select variable plot mpg specify whether outlier included sidebarpanel selectinput variable variable list cylinder cyl transmission gear gear checkboxinput outlier show outlier false mainpanel run application making change see two userinputs defined displayed within sidebar creating server script next need define serverside application accept input compute output serverr file shown illustrates important concept accessing input using slot input object generating output assigning slot output object initializing data startup accessed throughout lifetime application using reactive expression compute value shared one output basic task shiny server script define relationship input output script accessing input perform computation assigning reactive expression output slot source code full server script inline comment explain implementation technqiues detail serverr library shiny library datasets tweak field nicer factor label since nt rely user input startup use value throughout lifetime application mpgdata mtcars mpgdata factor mpgdata label c automatic manual define server logic required plot various variable mpg shinyserver function input output compute forumla text reactive expression since shared output caption output mpgplot expression formulatext reactive paste mpg input variable return formula text printing caption output caption rendertext formulatext generate plot requested variable mpg include outlier requested output mpgplot renderplot boxplot asformula formulatext data mpgdata outline input outlier use rendertext renderplot generate output rather assigning value directly make application reactive reactive wrapper return special expression reexecuted dependency change behavior enables shiny automatically update output whenever input change displaying output server script assigned two output value output caption output mpgplot update user interface display output need add element main ui panel updated userinterface definition see added caption element filled value using textoutput function also rendered plot calling plotoutput function uir library shiny define ui mile per gallon application shinyui pagewithsidebar application title headerpanel mile per gallon sidebar control select variable plot mpg specify whether outlier included sidebarpanel selectinput variable variable list cylinder cyl transmission gear gear checkboxinput outlier show outlier false show caption plot requested variable mpg mainpanel textoutput caption plotoutput mpgplot running application show final form including input dynamically updating output got simple application running probably want make change next topic cover basic cycle editing running debugging shiny application run debug throughout tutorial calling runapp run example application function start application open default web browser view call blocking meaning prevents traditional interaction console application running stop application simply interrupt r pressing escape key r front end well clicking stop button r environment provides one running separate process want block access console running shiny application also run separate process opening terminal console window executing following r e shiny runapp shinyapp default runapp start application port using default connect running application navigating browser http note discus technique debugging shiny application including ability stop execution inspect current environment order combine technique running application separate terminal session need run r interactively first type r start r session execute runapp within session live reloading make change underlying userinterface definition server script need stop restart application see change simply save change reload browser see updated application action one qualification browser reload occurs shiny explicitly check timestamps uir serverr file see need resourced script data file change shiny aware full stop restart application necessary see change reflected debugging technique printing several technique available debugging shiny application first add call cat function print diagnostics appropriate example two call cat print diagnostics standard output standard error respectively cat foon cat barn filestderr using browser second technique add explicit call browser function interrupt execution inspect environment browser called note using browser requires start application interactive session opposed using r e described example unconditionally stop execution certain point code always stop execution browser also use technique stop certain condition example stop mpg application user selects transmission variable stop execution user selects browser expr identical input variable establishing custom error handler also set r error option automatically enter browser error occurs immediately enter browser error occurs option error browser alternatively specify recover function error handler print list call stack allow browse point stack call recover function error occurs option error recover want set error option automatically every r session rprofile file described article r startup slider application demonstrates many capability slider control including ability run animation sequence run example type library shiny runexample customizing slider shiny slider control extremely capable customizable feature supported include ability input single value range custom format value display eg currency ability animate slider across range value slider control created calling sliderinput function uir file demonstrates using slider variety option uir library shiny define ui slider demo application shinyui pagewithsidebar application title headerpanel slider sidebar slider demonstrate various available option sidebarpanel simple integer interval sliderinput integer integer decimal interval step value sliderinput decimal decimal min max value step specification range within interval sliderinput range range min max value c provide custom currency format value display basic animation sliderinput format custom format min max value step format locale u animatetrue animation custom interval m control speed plus looping sliderinput animation looping animation step animateanimationoptions loopt show table summarizing value entered mainpanel tableoutput value server script server side slider application straightforward creates data frame containing input value render html table serverr library shiny define server logic slider example shinyserver function input output reactive expression compose data frame containing value slidervalues reactive compose data frame dataframe name c integer decimal range custom format animation value ascharacter c input integer input decimal paste input range collapse input format input animation stringsasfactorsfalse show value using html table output value rendertable slidervalues tabsets application demonstrates using tab organize output run example type library shiny runexample tab panel tabsets created calling tabsetpanel function list tab created tabpanel function tab panel provided list output element rendered vertically within tab example updated hello shiny application add summary table view data rendered tab revised source code userinterface uir library shiny define ui random distribution application shinyui pagewithsidebar application title headerpanel tabsets sidebar control select random distribution type number observation generate note use br element introduce extra vertical spacing sidebarpanel radiobuttons dist distribution type list normal norm uniform unif lognormal lnorm exponential exp br sliderinput n number observation value min max show tabset includes plot summary table view generated distribution mainpanel tabsetpanel tabpanel plot plotoutput plot tabpanel summary verbatimtextoutput summary tabpanel table tableoutput table tab reactive data introducing tab userinterface underline importance creating reactive expression shared data example tab provides view dataset dataset expensive compute userinterface might quite slow render server script demonstrates calculate data reactive expression result shared output tab serverr library shiny define server logic random distribution application shinyserver function input output reactive expression generate requested distribution called whenever input change renderers defined use value computed expression data reactive dist switch input dist norm rnorm unif runif lnorm rlnorm exp rexp rnorm dist input n generate plot data also us input build plot label note dependency input data reactive expression tracked expression called sequence implied dependency graph output plot renderplot dist input dist n input n hist data mainpaste r dist n sep generate summary data output summary renderprint summary data generate html table view data output table rendertable dataframe xdata basic usage datatables application demonstrates html table using jquery library datatables run example type requires shiny packageversion shiny library shiny rungithub shinyexamples rstudio subdir basic usage create output element ui using datatableoutput id foo render table using output foo renderdatatable data server script normally renderdatatable take expression return rectangular data object column name data frame matrix minimal example library shiny runapp list ui basicpage mtcars data datatableoutput mytable server function input output output mytable renderdatatable mtcars default data paginated showing row per page number row display changed drop menu topleft sort column clicking column header sort multiple column holding shift key clicking sorting direction loop ascending descending none keep clicking search globally table using text input box topright search individual column using text box bottom currently searching term treated regular expression r since searching timeconsuming large datasets delay second customizable searching really processed mean type fast enough search box searching may processed server side even typed one character customizing datatables large number option datatables customizable see website detail example show possibility first create ui display three datasets diamond mtcars iris dataset tab uir library shiny library diamond dataset shinyui pagewithsidebar headerpanel example datatables sidebarpanel checkboxgroupinput showvars column diamond show name diamond selected name diamond helptext diamond data select variable show table mtcars example use bsortclasses true sorted column colored since special cs class attached iris data customize length menu display row per page mainpanel tabsetpanel tabpanel diamond datatableoutput tabpanel mtcars datatableoutput tabpanel iris datatableoutput also added checkbox group select column show diamond data server script option argument renderdatatable take list literally r list option pas datatables table initialized example mtcars data pas bsortclasses true datatables sorted column cs class attached disabled default example see sorted column highlighted darker color iris data pas option alengthmenu idisplaylength customize drop menu item default menu three item selected default value serverr library shiny shinyserver function input output large table reative input showvars output renderdatatable library diamond input showvars drop false sorted column colored cs attached output renderdatatable mtcars option list bsortclasses true customize length dropdown menu display row per page default output renderdatatable iris option list alengthmenu c idisplaylength datatable option please refer full reference website sometimes want user able upload data application shiny make easy offer user file uploads straight browser access server logic important note feature work internet explorer earlier even shiny server default shiny limit file uploads per file modify limit using shinymaxrequestsize option example adding option top serverr would increase limit run example type library shiny runexample file upload control created using fileinput function uir file access uploaded data similarly type input referring input inputid fileinput function take multiple parameter set true allow user select multiple file accept parameter used give user clue kind file application expects uir shinyui pagewithsidebar headerpanel csv viewer sidebarpanel fileinput choose csv file acceptc textcsv textcommaseparatedvalues textplain csv tag hr checkboxinput header header true radiobuttons sep separator c comma semicolon tabt comma radiobuttons quote quote c none double quote single quote double quote mainpanel tableoutput content serverr shinyserver function input output output content rendertable input null initially user selects uploads file data frame name size type datapath column datapath column contain local filename data found infile input isnull infile return null readcsv infile datapath headerinput header sepinput sep quoteinput quote example receives file attempt read commaseparated value using readcsv display result table comment serverr indicates infile either null dataframe contains one row per uploaded file case fileinput multiple parameter assume one row file content accessed reading file named datapath column see fileinput help topic learn column available example far demonstrated output appear directly page plot table text box shiny also ability offer file downloads calculated fly make easy build data exporting feature run example type library shiny runexample define download using downloadhandler function server side either downloadbutton downloadlink ui uir shinyui pagewithsidebar headerpanel download example sidebarpanel selectinput dataset choose dataset choice c rock pressure car downloadbutton downloaddata download mainpanel tableoutput table serverr shinyserver function input output datasetinput reactive switch input dataset rock rock pressure pressure car car output table rendertable datasetinput output downloaddata downloadhandler filename function paste input dataset csv sep content function file writecsv datasetinput file see downloadhandler take filename argument tell web browser filename default saving argument either simple string function return string case content argument must function take single argument file name nonexistent temp file content function responsible writing content file download temp file filename content argument use reactive value expression although case filename sure argument actual function filename paste input dataset csv going work way want since evaluated download handler defined generally two argument need optional contenttype argument na null shiny attempt guess appropriate value based filename provide content type string eg textplain want override behavior dynamic ui shiny apps often fixed set control affect fixed set output input may need shown hidden depending state another input input control may need created onthefly response user input shiny currently three different approach use make interface dynamic easiest difficult conditionalpanel function used uir wrap set ui element need dynamically shownhidden renderui function used serverr conjunction htmloutput function uir let generate call ui function make result appear predetermined place ui use javascript modify webpage directly let take closer look approach showing hiding control conditionalpanel conditionalpanel creates panel show hide content depending value javascript expression even know javascript simple comparison equality operation extremely easy look lot like r many programming language example adding optional smoother ggplot choosing smoothing method partial example checkboxinput smooth smooth conditionalpanel condition inputsmooth true selectinput smoothmethod method list lm glm gam loess rlm example select control smoothmethod appear smooth checkbox checked condition inputsmooth true javascript expression evaluated whenever inputsoutputs change condition also use output value work way outputfoo give value output foo situation wish could use r expression condition argument create reactive expression serverr assign new output refer output condition expression example uir partial example selectinput dataset dataset c diamond rock pressure car conditionalpanel condition outputnrows checkboxinput headonly use first row serverr partial example datasetinput reactive switch input dataset rock rock pressure pressure car car output nrows reactive nrow datasetinput however since technique requires serverside calculation could take long time depending reactive expression executing recommend avoid using output condition unless absolutely necessary creating control fly renderui note feature considered experimental let u know whether find useful sometimes enough show hide fixed set control imagine prompting user latitudelongitude allowing user select checklist city within certain radius case use renderui expression dynamically create control based user input uir partial example numericinput lat latitude numericinput long longitude uioutput citycontrols serverr partial example output citycontrols renderui city getnearestcities input lat input long checkboxgroupinput city choose city city renderui work like renderplot rendertext output rendering function seen expects expression wrap return html tag list html tag using taglist tag include input output uir use uioutput tell shiny control rendered use javascript modify page note feature considered experimental let u know whether find useful use javascriptjquery modify page directly general instruction outside scope tutorial except mention important additional requirement time add new inputsoutputs dom remove existing inputsoutputs dom need tell shiny current recommendation making change dom may include adding removing shiny input output call shinyunbindall change call shinybindall adding removing many inputsoutputs fine call shinyunbindall beginning shinybindall end necessary put call around individual addition removal inputsoutputs html ui application demonstrates defining shiny userinterface using standard html page rather uir script run example type library shiny runexample defining html ui previous example tutorial used uir file build userinterfaces fast convenient way build userinterfaces appliations inevitably require flexiblity type application define userinterface directly html case uir file directory structure look like applicationdir www indexhtml serverr example rewrite frontend tabsets application using html directly source code new userinterface definition wwwindexhtml html head script src sharedjqueryjs type textjavascript script script src sharedshinyjs type textjavascript script link rel stylesheet type textcss href sharedshinycss head body html ui p label distribution type label br select name dist option value norm normal option option value unif uniform option option value lnorm lognormal option option value exp exponential option select p p label number observation label br input type number name n value min max p pre id summary class shinytextoutput pre div id plot class shinyplotoutput style width height div div id table class shinyhtmloutput div body html thing point regarding shiny bind html element back input output html form elmements case select list number input bound input slot using name attribute output rendered html element based matching id attribute output slot specifying requisite cs class element case either shinytextoutput shinyplotoutput shinyhtmloutput technique create highly customized userinterfaces using whatever html cs javascript like server script change original tabsets application userinterface server script remains serverr library shiny define server logic random distribution application shinyserver function input output reactive expression generate requested distribution called whenever input change output renderers defined used value computed expression data reactive dist switch input dist norm rnorm unif runif lnorm rlnorm exp rexp rnorm dist input n generate plot data also us input build plot label note dependency input data reactive expression tracked expression called sequence implied dependency graph output plot renderplot dist input dist n input n hist data mainpaste r dist n sep generate summary data output summary renderprint summary data generate html table view data output table rendertable dataframe xdata scoping define object determine object visible three different level visibility want aware writing shiny apps object visible within serverr code user session object visible serverr code across session multiple user could use shared variable yet others visible serverr uir code across user session persession object serverr call shinyserver pas function func take two argument input output shinyserver func function input output server code function pas shinyserver called session word func called time web browser pointed shiny application everything within function instantiated separately session includes input output object passed session input output object visible within function object inside function variable function also instantiated session example session variable named starttime record start time session shinyserver function input output starttime systime object visible across session might want object visible across session example large data structure utility function reactive one involve input output object create object share across user session placing serverr outside call shinyserver example readonly data set load shiny start available user session bigdataset readcsv bigdatacsv nonreactive function available user session utilityfunction function x function code shinyserver function input output server code could put bigdataset utilityfunction inside function passed shinyserver le efficient created time user connects object change changed object visible every user session note would need use assignment operator change bigdataset operator assigns value local environment vara varb lista list listb list shinyserver function input output create local variable vara copy shared variable vara plus local copy vara visible session vara vara modify shared variable varb visible session varb varb make local copy lista lista x modify shared copy listb listb x thing work way serverr sourced start shiny app everything script run immediately including call shinyserver function passed shinyserver called web browser connects new session started global object object defined globalr similar defined serverr outside shinyserver one important difference also visible code uir loaded global environment r session r code shiny app run global environment child practice many time necessary share variable serverr uir code uir run shiny app started generates html file cached sent web browser connects may useful setting shared configuration option scope included r file want split server ui code multiple file use source localtrue load file think putting code inline code sourced file receive scope copied pasted text right example serverr file show sourced file scoped object file shared across session source allsessionsr localtrue shinyserver function input output object file defined session source eachsessionr localtrue output text rendertext object file defined time function called source eachcallr localtrue use default value localfalse file sourced global environment getting noninput data client server side shiny application use input object receive user input client web browser value input set ui object client web page also noninput value sense user enter value ui component stored object called session clientdata value include url pixel ratio highresolution retina display hidden state output object height width plot output using session clientdata access session clientdata value need pas function shinyserver take session argument session special object used finer control user app session access session clientdata would input example client browser display component url also parse print querysearch string part url serverr shinyserver function input output session return component url string output urltext rendertext paste sep protocol session clientdata urlprotocol n hostname session clientdata urlhostname n pathname session clientdata urlpathname n port session clientdata urlport n search session clientdata urlsearch n parse get query string output querytext rendertext query parsequerystring session clientdata urlsearch return string keyvalue pair paste name query query sep collapse uir shinyui bootstrappage url component verbatimtextoutput urltext parsed query string verbatimtextoutput querytext app display following viewing available value clientdata value session clientdata depend extent output example plot output object report height width hidden status app plot output display value session clientdata shinyserver function input output session store convenience variable cdata session clientdata value cdata returned text output clientdatatext rendertext cnames name cdata allvalues lapply cnames function name paste name cdata name sep paste allvalues collapse n histogram output myplot renderplot hist rnorm input ob main generated renderplot notice input value session clientdata accessed session clientdata myvar session clientdata myvar equivalently since saved convenience variable cdata use cdata myvar cdata myvar uir shinyui pagewithsidebar headerpanel shiny client data sidebarpanel sliderinput ob number observation min max value mainpanel clientdata value verbatimtextoutput clientdatatext plotoutput myplot plot output output myplot three entry clientdata outputmyplotheight height plot web page pixel outputmyplotwidth width plot web page pixel outputmyplothidden object hidden visible true used shiny default suspend output object hidden suspended observer execute even input change view client clientdata value sending image want r generate plot send client browser renderplot function case job need finer control process might need use renderimage function instead renderplot renderplot useful time r generates image using normal graphical device system word plotgenerating code would normally go png devoff used renderplot following code work console work renderplot png plotting code devoff would go shinyserver output myplot renderplot plotting code renderplot take care number detail automatically resize image fit output window even increase resolution output image displaying highresolution retina screen limitation renderplot send image file browser image must generated code us r graphical output device system method creating image sent renderplot example following work image file generated writepng function png package image file generated rglsnapshot function creates image plot made rgl package image generated external program prerendered image solution case renderimage function using renderimage image file sent using renderimage expression pas renderimage must return list containing element named src path file basic example shiny app output generates plot sends renderimage serverr shinyserver function input output session output myimage renderimage temp file save output file removed later renderimage outfile tempfile fileextpng generate png png outfile hist rnorm input ob main generated renderimage devoff return list containing filename list src outfile contenttype imagepng width height alt alternate text deletefile true uir shinyui pagewithsidebar headerpanel renderimage example sidebarpanel sliderinput ob number observation min max value mainpanel use imageoutput place image page imageoutput myimage time output object reexecuted creates new png file save plot return list containing filename along value deletefile argument true shiny delete file specified src element sends data appropriate case like image created onthefly appropriate example app sends prerendered image particular case image file created png function well could created writepng png package method filename image send renderimage structure returned list list returned example contains following src output file path contenttype mime type file missing shiny try autodetect mime type file extension width height desired output size pixel alt alternate text image except src contenttype value passed directly img dom element web page effect similar image tag following img src width height alt alternate text note src shorthand longer url browser support data uri scheme src contenttype returned list put together create special url embeds data result would similar something like img src data imagepng width height alt alternate text browser support data uri scheme shiny sends url point file sending prerendered image renderimage shiny app prerendered image saved subdirectory send using renderimage suppose image subdirectory image named following code would send appropriate image depending value input n serverr shinyserver function input output session send prerendered image nt delete image sending output preimage renderimage input n filename filename normalizepath filepath image paste image input n jpeg sep return list containing filename alt text list src filename alt paste image number input n deletefile false example deletefile false image ephemeral want shiny delete image sending note might le efficient putting image wwwimages emitting html point image latter case image cached browser using clientdata value first example plot size fixed pixel dynamic resizing possible use value session clientdata detect output size example output object output myimage width height client browser sent via session clientdata outputmyimagewidth session clientdata outputmyimageheight example also us session clientdata pixelratio multiply resolution image appears sharp highresolution retina display serverr shinyserver function input output session dynamicallysized plot output myimage renderimage read myimage width height reactive value expression rerun whenever change width session clientdata outputmyimagewidth height session clientdata outputmyimageheight highres display greater pixelratio session clientdata pixelratio temp file save output outfile tempfile fileextpng generate image file png outfile widthwidth pixelratio heightheight pixelratio pixelratio hist rnorm input ob devoff return list containing filename list src outfile width width height height alt alternate text deletefile true code reimplements many feature renderplot effect code similar renderplot hist rnorm input ob width height value passed png specify pixel dimension saved image differ width height value returned list value pixel dimension used display image highres display pixelratio virtual pixel browser might correspond x physical pixel doubleresolution image make use physical pixel reactivity overview easy build interactive application shiny get need understand reactive programming model used shiny shiny three kind object reactive programming reactive source reactive conductor reactive endpoint represented symbol reactive source endpoint simplest structure reactive program involves source endpoint shiny application source typically user input browser interface example selects item type input click button action set value reactive source reactive endpoint usually something appears user browser window plot table value simple shiny application reactive source accessible input object reactive endpoint accessible output object actually possible kind source endpoint talk later talk input output simple structure one source one endpoint used example serverr code example look something like shinyserver function input output output distplot renderplot hist rnorm input ob see action http output distplot object reactive endpoint us reactive source input ob whenever input ob change output distplot notified need reexecute traditional program interactive user interface might involve setting event handler writing code read value transfer data shiny thing behind scene simply write code look like regular r code reactive source connected multiple endpoint vice versa slightly complex shiny application shinyserver function input output output plotout renderplot hist faithful eruption break asnumeric input nbreaks input individualobs rug faithful eruption output tableout rendertable input individualobs faithful else null shiny application need explictly describe relationship tell r input component change shiny automatically handle detail app structure whenever value input nbreaks change expression generates plot automatically reexecute whenever value input individualobs change plot table function automatically reexecute shiny application endpoint function result automatically wrapped sent web browser reactive conductor far seen reactive source reactive endpoint simple example use two component wiring source directly endpoint also possible put reactive component source endpoint component called reactive conductor conductor dependent dependent word parent child graph reactive structure source parent dependent endpoint child dependent reactive graph reactive conductor useful encapsulating slow computationally expensive operation example imagine application take value input n print nth value fibonacci sequence well inverse nth value sequence plus one note code example condensed illustrate reactive concept necessarily represent coding best practice calculate nth number fibonacci sequence fib function n ifelse n fib fib shinyserver function input output output nthvalue rendertext fib asnumeric input n output nthvalueinv rendertext fib asnumeric input n graph structure app fib algorithm inefficient want run time absolutely necessary app running twice reasonably fast modern machine setting input n take second calculate answer largely fib run twice amount computation reduced adding reactive conductor source endpoint fib function n ifelse n fib fib shinyserver function input output currentfib reactive fib asnumeric input n output nthvalue rendertext currentfib output nthvalueinv rendertext currentfib new graph structure keep mind application try access reactive value expression outside reactive context outside reactive expression observer result error think reactive world see change nonreactive world nonreactive world reactive world code like work call fib reactive world reactive renderxx call try access something reactive value input n shinyserver function input output give error currentfib fib asnumeric input n output nthvalue rendertext currentfib hand currentfib function access reactive value function called within reactive world work shinyserver function input output ok long called reactive world currentfib function fib asnumeric input n output nthvalue rendertext currentfib summary section learned reactive source signal object downstream need reexecute reactive conductor placed somewhere source endpoint reactive graph typically used encapsulating slow operation reactive endpoint told reexecute reactive environment request upstream object execute invalidation arrow diagram flow invalidation event also said child node dependent take dependency parent node implementation source conductor endpoint value expression observer discussed reactive source conductor endpoint general term part play particular role reactive program presently shiny one class object act reactive source one class object act reactive conductor one class object act reactive endpoint principle could class implement role reactive value implementation reactive source implementation role reactive expression implementation reactive conductor access reactive value reactive expression return value observer implementation reactive endpoint access reactive source reactive expression return value used side effect example use three implementation presently implementation source conductor endpoint role reactive value reactive value contain value surprisingly read reactive object input object reactivevalues object look something like list contains many individual reactive value value input set input web browser reactive expression seen reactive expression action fibonacci example cache return value make app run efficiently note abstractly speaking reactive conductor necessarily cache return value implementation reactive expression reactive expression useful caching result procedure happens response user input including accessing database reading data file downloading data network performing expensive computation observer observer similar reactive expression important difference like reactive expression access reactive value reactive expression however return value therefore cache return value instead returning value side effect typically involves sending data web browser output object look something like list contain many individual observer look code rendertext friend see return function return value typically used like output number rendertext asnumeric input n might lead think observer return value however whole story function returned rendertext actually observerendpoint assigned output x function returned rendertext get automatically wrapped another function observer wrapper function used need special thing send data browser difference reactive expression observer reactive expression observer similar store expression executed fundamental difference observer endpoint general respond reactive flush event reactive expression conductor general learn flush event next section want reactive expression execute must observer descendant reactive dependency graph reactive expression return value observer execution scheduling core shiny reactive engine shiny know reexecute component application trace example get better understanding work simple example abstract level describe example containing one source one endpoint talk concretely describe one reactive value input ob one reactive observer output distplot shinyserver function input output output distplot renderplot hist rnorm input ob shown diagram reactive value value reactive observer hand value instead contains r expression executed side effect case involves sending data web browser observer return value reactive observer another property flag indicates whether invalidated see mean shortly load application web page state shown input ob value set uir file shown arrow represents direction invalidation flow change value trigger series event result new image sent browser value input ob change two thing happen descendant graph invalidated sometimes brevity say observer dirty meaning invalidated clean meaning invalidated arrow followed removed longer considered descendant changing reactive value effect notice arrow dynamic static case descendant output distplot descendant invalidated flush occurs happens invalidated observer reexecute remember code assigned output distplot make use input ob output distplot renderplot hist rnorm input ob output distplot reexecutes access reactive value input ob becomes dependent value represented arrow input ob change invalidates child case justoutput distplot finish executing output distplot creates png image file sent browser finally marked clean invalidated cycle complete application ready accept input someone first start session shiny application endpoint start invalidated triggering series event app reactive conductor code fibonacci program fib function n ifelse n fib fib shinyserver function input output currentfib reactive fib asnumeric input n output nthvalue rendertext currentfib output nthvalueinv rendertext currentfib structure shown state initial run value invalidation flag starting value input n set uir displayed suppose user set input n new value immediately invalidates child currentfib turn invalidates child output nthvalue output nthvalueinv invalidation made invalidation arrow removed invalidation finish reactive environment flushed endpoint reexecute flush occurs multiple endpoint invalidated guaranteed order endpoint execute nthvalue may run nthvalueinv vice versa execution order endpoint affect result long modify read nonreactive variable part reactive graph suppose case nthvalue executes first next several step straightforward output nthvalueinv executes call currentfib currentfib ordinary r expression would simply reexecute taking another several second ordinary expression reactive expression happens marked clean clean shiny know currentfib reactive parent changed value since previous run currentfib mean running function would simply return value previous run shiny assumes nonreactive object used currentfib also changed example called systime second run currentfib could return different value wanted changing value systime able invalidate currentfib would wrapped object acted reactive source object would also added node reactive graph acting assumption clean reactive expression return value previous run shiny cache return value reactive expression executed subsequent call reactive expression simply return cached value without reexecuting expression long remains clean example output nthvalueinv call currentfib shiny hand cached value happens almost instantaneously instead taking several second reexecute currentfib finally output nthvalueinv take value find inverse side effect sends value browser summary section learned invalidation flag reactive expression observer invalidated marked dirty parent change invalidated marked clean reexecute arrow creation removal parent object follows invalidates child arrow removed new arrow created reactive object access another reactive object flush event trigger execution endpoint flush event occur whenever browser sends data server isolation avoiding dependency sometimes useful observerendpoint access reactive value expression take dependency example observer performs long calculation downloads large data set might want execute button clicked use actionbutton define uir slight modification one difference actionbutton labeled go see action http glimmerrstudiocomwinstonactionbutton actionbutton includes javascript code sends number server web browser first connects sends value click sends incremented value shinyui pagewithsidebar headerpanel click button sidebarpanel sliderinput ob number observation min max value actionbutton gobutton go mainpanel plotoutput distplot serverr two change note first output distplot take dependency input gobutton simply accessing button clicked value input gobutton increase output distplot reexecutes second change access input ob wrapped isolate function take r expression tell shiny calling observer reactive expression take dependency reactive object inside expression shinyserver function input output output distplot renderplot take dependency input gobutton input gobutton use isolate avoid dependency input ob dist isolate rnorm input ob hist dist resulting graph look like walkthrough process input ob set go button clicked actionbutton example might want prevent returning plot first time button clicked since starting value actionbutton zero accomplished following output distplot renderplot input gobutton return plotmaking code reactive value thing isolated reactive expression also put inside isolate building fibonacci example would calculate nth value button clicked output nthvalue rendertext input gobutton return isolate fib asnumeric input n also possible put multiple line code isolate example block code equivalent effect separate call isolate x isolate input xslider isolate input yslider z xy single call isolate isolate x input xslider input yslider z xy single call isolate use return value z isolate x input xslider input yslider xy case calling function take reactive dependency either input variable deploying web written shiny app make available anyone web browser using shiny server software either host application server let u host shiny application want simple way distribute shiny app user run computer see deploying shiny apps run locally selfhosted shiny server shiny server software deploy shiny application web user need web browser application url need linux server shiny server shiny server free open source though future offer commercially licensed edition additional feature larger organization pro easiest web browser required take advantage centralized computing resource con requires server setup maintenance linux server rstudiohosted shiny apps want deploy web prefer run server currently alpha testing shinyapps subscriptionbased hosting service apply free alpha test account register pro easiest web browser required need run server easy deployment web one line r code con code data must copied server sharing apps run locally written shiny app distribute others run download run shiny apps single r command requires r shiny installed computer want shiny app accessible web user need web browser see deploying shiny apps web way deliver shiny apps run locally gist one easy way put code gistgithubcom code pasteboard service github serverr uir must included gist must use proper filename see http example recipient must r shiny package installed running app easy entering following command shiny rungist place use gist id use entire url gist eg http pro source code easily visible recipient desired easy run r user easy post update con code published thirdparty server github repository project stored git repository github others download run app directly example repository http githubcomrstudioshinyexample following command download run application shiny rungithub shinyexample rstudio example github account rstudio repository shinyexample need replace account repository name pro source code easily visible recipient desired easy run r user easy update already use github project gitsavvy user clone fork repository con developer must know use git github code hosted thirdparty server zip file delivered web store zip tar file project web ftp server user download run command like runurl http githubcomrstudioshinyexamplearchivemasterzip url case zip file happens stored github replace url zip file pro requires web server delivery con view source recipient must first download unzip zip file copied recipient computer another way simply zip project directory send recipient unzip file run way shiny runapp pro share apps using email usb flash drive way transfer file con update app must sent manually package shiny app useful broader audience might worth effort turn r package put shiny application directory package inst directory create export function contains something like shiny runapp systemfile appdir packagepackagename appdir name app subdirectory inst packagename name package pro publishable cran easy run r user con work set source code visible recipient desired building input shiny come equipped variety useful input component build ambitious application may find needing input widget include fortunately shiny designed let create custom input component implement using html cs javascript use shiny input familiar r htmlcssjavascript likely find tough create simplest custom input component however people hopefully bundle custom shiny input component r package make available rest community design component first step creating custom input component different form web development write html markup lay component cs rule style use javascript mostly event handler give behavior necessary shiny input component try adhere following principle possible designed used html r shiny user interface either written using r code generates html writing html directly welldesigned shiny input component take style account offer r function creating component also thoughtfully designed documented html markup configurable using html attribute avoid requiring user make javascript call configure component instead better use html attribute component javascript logic easily access value using jquery simply reading dom attribute directly used shiny application component html markup repeated instance component page cs javascript generally need appear likely head rbased interface code use function singleton tag head together ensure tag appear head see full example write input binding custom input component also need input binding object create tell shiny identify instance component interact note instance input component need input binding object rather instance particular type input component share single input binding object input binding object need following method find scope given html document element scope find descendant element instance component return array arraylike object input binding method take el argument value always element returned find common implementation use jquery find method identify element specific class example exampleinputbindingfind function scope return scope find examplecomponentclass getid el return shiny input id element el null element nt id therefore ignored default implementation shinyinputbinding read datainputid attribute fall back element id present getvalue el return shiny value element el jsoncompatible value setvalue el value set element specified value currently used future anticipate adding feature require server push input value client subscribe el callback subscribe dom event element el indicate value changed dom event fire call callback function tell shiny retrieve value recommend using jquery event namespacing feature subscribing unsubscribing becomes easy see unsubscribe example examplecomponentname used namespace exampleinputbindingsubscribe function el callback el keyupexamplecomponentname function event callback true el changeexamplecomponentname function event callback later unsubscribe examplecomponentname remove handler without touching anyone else callback function optionally take argument boolean value indicates whether component rate policy apply true mean rate policy apply see getratepolicy detail unsubscribe el unsubscribe dom event listener bound subscribe example exampleinputbindingunsubscribe function el el examplecomponentname getratepolicy return object describes rate policy component null default rate policy helpful slowing rate input event get sent server example user drag slider value value b dozen change event may occur would wasteful send event server event would potentially cause expensive computation occur rate policy slows rate event using one two algorithm far throttling mean one event sent per x millisecond debouncing mean event ignored event received x millisecond time recent event sent blog post go detail difference throttle debounce rate policy object two member policy valid value string direct debounce throttle direct mean event sent immediately delay number indicating number millisecond used debouncing throttling effect policy direct rate policy applied callback function subscribe called true first parameter important input component able control event ratelimited different event may different expectation user example textbox would make sense ratelimit event user typing user hit enter focus leaf textbox input always sent immediately register input binding created input binding object need tell shiny use shinyinputbindingsregister exampleinputbinding yournameexampleinputbinding second argument name user use change priority binding chance user multiple binding want claim html element call used control priority binding shinyinputbindingssetpriority yournameexampleinputbinding higher number indicate higher priority default priority shiny builtin input component binding default priority two binding priority value recently registered binding higher priority example example create button display number whose value increase one time button clicked end result look like start let design html markup component button id inputid class increment btn type button button cs class increment differentiate button kind button btn class make button look decent twitter bootstrap write javascript drive button basic behavior document click buttonincrement function evt evttarget button clicked var el evttarget set button text current value plus eltext parseint eltext raise event signal value changed eltrigger change code us jquery delegated event feature bind increment button create shiny binding object component register var incrementbinding new shinyinputbinding extend incrementbinding find function scope return scope find increment getvalue function el return parseint el text setvalue function el value el text value subscribe function el callback el changeincrementbinding function e callback unsubscribe function el el incrementbinding shinyinputbindingsregister incrementbinding behavioral javascript code shiny binding code generally run page load important run shiny initialization occurs document ready event handler executed cleanest way put chunk javascript file case use path wwwjsincrementjs access http using indexhtml style user interface need add line head make sure come script tag load shinyjs script src jsincrementjs script hand using uir define function call shinyui incrementbutton function inputid value taglist singleton tag head tag script src jsincrementjs tag button id inputid class increment btn type button ascharacter value shinyui page definition call incrementbutton wherever want increment button rendered notice line begin singleton ensure incrementjs file included one time head matter many button insert page place building output right box shiny make easy include plot simple table text output application imagine also want display output fit category perhaps need interactive choropleth map googlevis motion chart similar custom input knowledge htmlcssjavascript also build reusable custom output component bundle output component r package shiny user use serverside output function start deciding kind value output component going receive user server side r code whatever value user r code return going need somehow turned jsoncompatible value shiny us rjsonio conversion user code naturally going return something rjsoniocompatible like character vector data frame even list contains atomic vector direct user use function server however output need undergo kind transformation need write wrapper function user use instead analogous renderplot rendertable example user want output time series object might create rendertimeseries function know translate t object simple list data frame rendertimeseries function expr envparentframe quotedfalse convert expression environment function func exprtofunction expr env quoted function val func list start tsp val end tsp val freq tsp val data asvector val would used user like output rendertimeseries t matrix rnorm startc design output component markup point ready design html markup write javascript code output component many component able extremely simple html markup something like div id class timeseriesoutput div use timeseriesoutput cs class indicator element one bind new output value come server fill div visualization using javascript write output binding custom output component need output binding object create tell shiny identify instance component interact note instance output component need output binding object rather instance particular type output component share single output binding object output binding object need following method find scope given html document element scope find descendant element instance component return array arraylike object output binding method take el argument value always element returned find common implementation use jquery find method identify element specific class example exampleoutputbindingfind function scope return scope find examplecomponentclass getid el return shiny output id element el null element nt id therefore ignored default implementation shinyoutputbinding read dataoutputid attribute fall back element id present rendervalue el data called new value match element id received server function render data element typeshape data argument depends server logic generated whatever value returned r code converted json using rjsonio package rendererror el err called server attempt update output value element error occurs function render error element err object message string property clearerror el element el currently displaying error clear register output binding created output binding object need tell shiny use shinyoutputbindingsregister exampleoutputbinding yournameexampleoutputbinding second argument string uniquely identifies output binding moment unused future feature may depend
738,Lobsters,visualization,Data Visualization,Interactive D3 Tutorial,http://vogievetsky.github.com/IntroD3/#1,interactive tutorial,,
739,Lobsters,visualization,Data Visualization,The Netflix Tech Blog: Hystrix Dashboard + Turbine Stream Aggregator,http://techblog.netflix.com/2012/12/hystrix-dashboard-and-turbine.html,netflix tech blog hystrix dashboard turbine stream aggregator,hystrix dashboard turbine stream aggregator two week ago hystrix eureka http githubcomnetflixturbine http githubcomnetflixhystrixwikidashboard jobsnetflixcom see also,hystrix dashboard turbine stream aggregatorby ben christensen puneet oberai ben schmaustwo week ago introduced hystrix library engineering resilience distributed system today open sourcing hystrix dashboard application well new companion project called turbine provides low latency event stream aggregationthe hystrix dashboard significantly improved operation reducing discovery recovery time operational event duration production incident already le frequent due hystrix far shorter diminished impact able get realtime insight second latency system behavior following snapshot show six hystrixcommands used netflix api hood example dashboard turbine aggregating data server single stream metric supporting dashboard application turn stream aggregated data browser display uiwhen circuit failing change color gradient green yellow orange red diagram show one circuit dashboard along explanation data represents purposefully tried pack lot information dashboard engineer quickly consume correlate datathe following video show dashboard operating data netflix api cluster turbine deployment netflix connects thousand hystrixenabled server aggregate realtime stream netflix us turbine eureka plugin handle instance joining leaving cluster due autoscaling redblack deployment unhealthy alerting system also started migrating turbinepowered metric stream one minute data dozen hundred point data single metric high resolution metric data make better faster alerting hystrix dashboard used either monitor individual instance without turbine conjunction turbine monitor multimachine cluster turbine found github http githubcomnetflixturbinedashboard documentation http githubcomnetflixhystrixwikidashboardwe expect people want customize ui javascript module implemented way easily used standalone existing dashboard application also expect different perspective visualize represent data look forward contribution back hystrix turbinewe always looking talented engineer interested type work contact u via jobsnetflixcomsee also
740,Lobsters,visualization,Data Visualization,Cellular automata and music,https://www.ibm.com/developerworks/java/library/j-camusic/,cellular automaton music,cellular automaton music overview cellular automaton elementary cellular automaton wolfram research cellular automaton related topic related topic class constant class repeat class pseudo random class complex ca computational power open problem musical problem using java language musical composition related topic listen automatous monk related topic representing ca java language musical representation ca evolution related topic keyboard mapping listen row binary number mapping listen cumulative row binary number mapping listen combination mapping combine rule melody rhythm section combine binary cumulative binary mapping applied rule related topic keep simple gnarl listen related topic related topic listen algorithmic music composition project camus related topic music sketcher related topic conclusion downloadable resource ibm bluemix action open problem project automatous monk source code monk web site music sketcher sound mathematics camus life,cellular automaton musicusing java language algorithmic music composition paul reinerspublished may many computer programmer accomplished musician rare software company ca nt put together decent house band however many programmermusicians might unaware interesting area vocation avocation intersect algorithmic music composition algorithmic music composition application rigid welldefined algorithm process composing music cellular automaton ca class mathematical structure evolve time present intriguing avenue algorithmic music composition computer ideal computing evolution cellular automaton ca displaying graphically also represent evolution sound including music finding technique mapping ca evolution pleasing interesting music highly nontrivial problem article present technique cabased musical composition java language explores specific mapping yield especially good resultsan overview cellular automataa ca consists matrix grid cell one finite number statesa rule defines cell state updated time matrix cell number dimension given cell state state neighbor time rule determines cell state time become clearer look concrete example elementary cellular automatai concentrate article onedimensional cellular automaton whose cell one two state ca onedimensional think row cell value cell time depend value cell immediate neighbor left right time ca called elementary cellular automataca diagram use white represent black represent top row show eight combination color cell left right neighbor bottom row show color center cell next step example consider fourth square left figure square see cell white left neighbor black right neighbor white cell black next step convention call rule think white black cell representing binary digit respectively bottom row code decimal number binary form figure visual representation rule rule generates interesting tune use sound represent ca use example throughout articlefigure rule consider rule ca start white cell except single black cell center ca evolves sequence step illustrated figure rule sequence stepsnote although automaton onedimensional show sequential step evolution successive row going page figure show first five step including initial state ca evolution see cell color determined color immediate neighbor color row according rule also note consider value cell row updated simultaneously step evolutionfigure show ca look step evolution figure rule stepsthe ca evolution figure happens symmetric ca evolution arewolfram research cellular automatacas subject research half century stanislaw ulam john von neumann invented concept ca made many important discovery john horton conway bill gosper study particular twodimensional type ca conway invented known life stephen wolfram started ca research see related topic studying elementary cellular automaton wolfram found complex behavior could arise simple mechanism example consider rule elementary cellular automaton definition illustrated figure quite simple small diagram defines completely figure rule however rule subsequent evolution quite complex figure show ca evolution step using rule figure rule stepsafter examining behavior elementary ca complex ca wolfram found ca could categorized four class mathematician author rudy rucker described four class concisely accurately presentation thing computer science tell u philosophy see related topic class constant seed dy class repeat loop stripe class nested regular fractal class pseudo random seething class complex gnarly glider universal computation wolfram made plausible claim class ca probably computationally irreducible given initial state find value particular cell step n must run computation n step starting initial configuration formula shortcut allows predict ca future statecas computational powermoreover wolfram matthew cook proven rule computationally equivalent universal turing machine conway proved earlier life use rule compute function universal turing machine compute probably true elementary ca class well ca although simple definition programmed perform desired computation open problemof course ca pure mathematical construct visual representation ca simply help u understand talk open problem project wolfram posed problem possible come audio representation ca evolution provides insight visual representation nt provide interesting problem examine image leisure linger point interest experience sound time best play wolfram think reason probably possible come audio representationa musical problemi focus slightly related problem possible come interesting pleasing music using ca pictorial representation ca quite striking beautiful beauty rendered music also would nice harness ca universal computational power compose music particular find way map ca evolution music pleasing least interestingusing java language musical compositionjmusic created andrew sorensen andrew brown open source framework writing music program java language see related topic built top java sound api allows composer think musical level without worry lowlevel audio programming detail construction musical score jmusic elegant intuitive mirror construction musical score paper note make phrase phrase make part part make score example listing illustrates simplicitylisting bicycle built two harry dacre jmusicint pitch double rhythmvalues dottedhalfnote dottedhalfnote dottedhalfnote dottedhalfnote quarternote quarternote quarternote halfnote quarternote dottedhalfnote note note new note pitcheslength int noteslength note made pitch duration note new note pitch rhythmvalues phrase made note phrase phrase new phrase note part pianopart new part piano piano part made phrase pianopartadd phrase score made part int tempo score daisy new score bicycle built two tempo pianopart key f flat daisysetkeysignature time daisysetnumerator daisysetdenominator display score standard musical notation viewnotate daisy write score midi file writemidi daisy c daisymid listen resulting midi filejmusic many nice feature addition midi functionality example display score conventional music notation also mod package let perform transformation phrase transposing invertingautomatous monk automatous monk aka monk named mighty jazz pianist composer thelonious monk opensource program written java language generates melody ca evolution see related topic monk us jmusic framework represent resulting music jmusic score save play midi file use code example monk short midi file example created monk illustrate pointsrepresenting ca java languagei wo nt go detail fully represent ca java language instructive see cell next state computed current state neighbor current state binary number seen used represent rule integer used represent state ca cell given step code listing calculates cell next state listing calculating next state cell computes next state cell param nwcellstate state cell left current cell preceding generation param ncellstate state current cell preceding generation param necellstate state cell right current cell preceding generation return next state cell int getnextstateofcell int nwcellstate int ncellstate int necellstate find index current state rule pattern int index nwcellstate ncellstate necellstate get value digit place int nextstate rule index return nextstate musical representation ca evolutionsnow come hard part construct music ca evolution one fact seems obvious visual representation ca evolution time increase go page make sense musical representation also row ca evolution represent one beat show mapping monk give good musical result nested ca tend yield pleasing music hear visual regularity reflected music nested rule good example wolfram book new kind science briefly outline way representing ca music see related topic mapping based idea keyboard mappingthis keyboard mapping probably obvious one cell column ca corresponds particular pitch think cell mapping piano key however implementation complicates computation somewhat take account type scale use example chromatic major minor interval note type scale mapping listing calculates pitch given celllisting calculating cell pitch param cellpos position cell position center cell position right positive position left negative param normalize true make sure return value valid midi pitch make sure return starting pitch cell int getstartingpitch int cellpos boolean normalize int scale scaletypegetscale int interval int scalewidth scalelength compute interval middle c pitch cellpos interval cellpos scalewidth halfstepsinoctave scale cellpos scalewidth else interval cellpos scalewidth halfstepsinoctave cellpos scalewidth interval scale scalewidth cellpos scalewidth interval add interval middle c int pitch interval normalize pitch pitch pitch return pitch listen result apply mapping rule hear result bit cacophonous although hear nested structure coarse way chord simply dense rest article show mapping produce simple melody without multiple simultaneous note type mapping combined right rule generate surprisingly appealing intriguing melody row binary number mappingthe row binary number mapping considers row binary number represents pitch encounter one subtlety though order digit usually order right left rightmost digit least significant digit however onedimensional ca rightmost leftmost cell consider ca universe infinite extent left right direction xaxis cartesian plane consider particular cell origin cell right origin numbered positively cell left origin numbered negatively example ca article start single black cell natural consider cell originin ordering binarynumber digit least mostsignificant start origin work way outward either two way depending whether favor cell left origin cell right origin favor left favor right either case code row ca binary number number specify midi pitch convert number midi pitch taking value modulo listing contains corresponding code automatous monklisting reordering row calculating pitch reorder row according significance digit param rowindex generation number row param ca ca containing row param bias left rightside bias return reordered row leastsignificant digit right int reorderrow int rowindex cellularautomaton ca horizontalbias bias int cahistory cagetgenerations int row cahistory rowindex int len rowlength int reordered new int len int mid len reordered len row mid int len note favor one side ca side seems way get around biasequals horizontalbiasleft reordered len row mid reordered len row mid else reordered len row mid reordered len row mid return reordered computes midi pitch row param rowindex generation number row param clllrautmtn ca containing row param bias left rightside bias return valid midi pitch int getpitchfromrow int rowindex infinitecellularautomaton clllrautmtn horizontalbias bias int reorderedrow reorderrow rowindex clllrautmtn bias int pitch int reorderedrowlength pitch pitch reorderedrow return pitch listen melody generated applying mapping rule note get result whether use left rightbias rule symmetric cumulative row binary number mappingthe cumulative row binary number mapping previous mapping keep cumulative sum running total row value mapping code listing keeping running total pitch successive row convert successive row ca musical phrase param ca cellular automaton param bias favor left rightside generating pitch return musical phrase corresponding ca public phrase convertcahistorytophrase cellularautomaton ca horizontalbias bias phrase phr new phrase int cumulativepitch int cagetgenerationcnt int pitch getpitchfromrow ca bias need take mod keep valid midi pitch cumulativepitch cumulativepitch pitch note n new note cumulativepitch caconstantsdefaultnote phradd n return phr listen sound likethis result melodic previous example sounded bit like rhythm sectioncombinations mappingscombining mapping lead good result example combine rule melody rhythm section also combine binary cumulative binary mapping applied rule note left rightbias version mapping different rule nt symmetric lead four voice richer soundi admit think rule rather catchy spent lot time certainly people listening ca often find rule playing head think sort hanson jackson ca worldhow convert midi file cell phone ringsit would neat generate cell phone ring ca wolfram mentioned like ring phone expert subject cell phone ring mechanism seem vary across cell phone brand however least couple open source software program clint levijoki andreas leitner transform midi file cell phone ring see related topic nt used program yet nt cell phone tempted get one try outkeep simpleas mentioned earlier found best concentrate mapping produce singlevoice melody perhaps layering melody binary cumulative binary mapping essentially ignore harmony rhythm nt big limitation might seem much baroque music j bach type even word polyphony course simplifying thing quite bit polyphony harmony emerge separate voice rhythm nt completely ignored polyphonic combination mapping good first step creating music ca also found simple mapping yield pleasing result however nt surprising even simple visual mapping map black square white square generate quite beautiful intricate pattern moreover consider fact ca rule capable universal computation assume moment musical composition purely rational activity program computer compose music possible universal ca rule generate music without code musical intelligence knowledge mapping course using extremely simple starting state perhaps rule say need complicated program input data coded starting state produce truly beautiful music point mapping ca state note fairly transparent ca compositional workanother danger trying make mapping complex tend code musical prejudice eastern western tonal atonal mapping writing computer program compose piece chopin bach style nearly well chopin bach could difficult problem admirable achievement always nice another new chopin bach piece limit think algorithmic music composition wo nt truly succeeded produce beautiful music also beautiful music wholly different type heard chopin bach nt great simply wrote great music great introduced whole new musical way thinking think best result come using simple mapping letting ca generate musical ideasthe gnarlrudy rucker defined concept call gnarl thing level chaos tuned right boundary order disorderwhen first started listening ca music produced monk bestsounding ca seemed example gnarl later read rucker thing computer science tell u philosophy considers class ca example gnarlwhat gnarly ca sound like listen rule computer music compositionsome interesting piece composed primarily computer particular john elliot transmusic project see related topic composed music astonishingly good transmusic us twodimensional ca compositionsdavid cope experiment musical intelligence emi program written impressive piece composed computer see related topic emi capable writing quite good piece style composer however emi clever producer pastiche capable extending musical structure novel wayswhen listen rule feel almost grasp structure quite make possible listen long period time without getting bored hand rule nested pattern quite enjoyable listen time time nt hold interest long rule structure easy grasp might nice chewy crunchy mindcandy example gnarl even though rule yield regular nested pattern starting state given therefore class still sound pretty gnarly ca often sound gnarly look topic whole article real class ca sound like rule class listen itit definitely sound entered lair gnarl much good music need listen time appreciate fullyother algorithmic music composition projectsa lot research going algorithmic music composition might expect basically two approach using computer music composition topdown bottomup composer use computer program aid composition mostly use topdown manner arranging musical building block larger structure automatous monk take bottomup approach creates music note levelcamuscamus written eduardo reck miranda another bottomup approach us ca generate music see related topic us life demon cyclic space generate music unlike onedimensional ca shown life demon cyclic space twodimensional ca cell arranged twodimensional grid life especially interesting fun program watch camus us life generate group note using demon cyclic space generate timbre texture individual notesmusic sketchermusic sketcher ibm alphaworks project see related topic unlike monk camus music sketcher take topdown approach let user arrange phrase riff larger musical structure especially interesting thing music sketcher let create chord progression piece program transformation necessary ensure building block conform specified chord progression way sort precursor apple new garageband application fun program encourage try outconclusionmany interesting approach algorithmic music composition using ca remain explored example provided use one simple starting state type music found seeding ca complex starting state also western piece music chord progression melody conforms would interesting devise mapping technique cause ca generate melody conform userspecified chord change ca charlie parker word although might limit ca making conform musical prejudice limitation current version monk us conventional western pitch midi tone interpret ca row binary number mod effectively looking digit cell row seven cell awfully thin vertical strip complete ca lot information lost could preserve information using microtones rather semitone used western music would lead richersounding music mere discord plan expand monk try idea automatous monk jmusic freely available sourceforgenet encourage try experiment might also want take look wolfram open problem project paper idea approach science cellular automaton come many angle involve varying degree technical sophistication high school level graduate level word rudy rucker seek ye gnarl downloadable resourceswatch ibm bluemix action demo david barnes show develop create deploy application cloud excellent work cellular automaton much stephen wolfram book new kind science wolfram medium also take look wolfram article open problem project fun thing work ca illustration article new kind scienceif want read wolfram von neumann interesting people worked princeton university institute advanced study read ed regis entertaining book got einstein office addisonwesley mathematician author rudy rucker major influence article many interesting valuable idea ca math topic check work particular automatous monk ongoing open source project download source code article us also hear extended version elementary ca rule monk web sitedownload music sketcher alphaworksfor mathematical music listen piece daniel cummerow sound mathematics web sitefind camusa good book algorithmic music composition composing music computer eduardo reck miranda focal press learn lifecheck project converting midi file cell phone ring
741,Lobsters,visualization,Data Visualization,Heard - a Mac application that locally records what you listen to in iTunes,http://macwright.org/2012/10/01/heard.html,heard mac application locally record listen itunes,update post published prepperstyle music hoarding heard lastfm json glory day audioscrobbler lastfm tinfoil hat lastfm acquired cbs music group founder left kind drama forking data riaa streaming subscription pandora audioscrobberapp released open source lastgraph made accessible oh god terrible lisp factor csv minute core data underscorem cocoapods minute automatic reference counting visualization raphael treegraph made recent recently post song chain simple forcedirected graph song duration histogram champagne real friend justin cocoa love get turn gatekeeper issue tracker tmcwheard project github,update post published heard longer developed availablei use swinsian listening music itunes music setup described prepperstyle music hoardingheard native mac application sits menu bar record listen itunesit small part lastfm want record start song long song artist et cetera antisocial nothing cloud use case le precise social sharing discovery main endproduct ability export song jsonthe glory day audioscrobbler lastfm tinfoil hatsi eager user audioscrobber became lastfm acquired cbs music group founder left kind drama possibly forking data riaa tinfoilhat wearing user itunes library entirely purchased itunes music store understandably ran away new feature tried implement like streaming subscription seemed like moneymaking proposition pandoralistening audience rather feature datahoarding programmertypes like myselfbut credit audioscrobberapp released open source provided aha moment get heard work plus lastgraph introduced world streamgraph later made accessible god terriblethis app took really long time write embarrassing amount timei really recommend writing mac apps even though possibly experience invokes unending puzzlement rage wild writing lisp factor practical mindbendy infuriating guaranteed take comfort zoneinitially heard wrote csv file like minute switched core data started without library eventually acquired underscorem attendant cocoapods dependency minute written automatic reference counting relearn property memory management something simple opening window took hour trial find threeline implementation worksa song recorded heard album water artist future island duration id minute name water rating null visualizationlike minute heard openended produce simple data easily charted raphael whatever handya example graphic would treegraph made recent recently post song chain simple forcedirected graph quick song duration histogram champagne real friendsthere turningpoint aha momentsjustin helped tremendously dumb questionscocoa love explained whole application support folder thingget itthis opensource software free signed need either rightclick controlclick click open turn gatekeeper using mountain lionit almost certainly bug could use lot refinement head issue tracker got something report file pull request got something contribute tmcwheard project github
743,Lobsters,visualization,Data Visualization,Wind Map,http://hint.fm/wind/,wind map,pointb studio wind wind power chrome national digital forecast database temperature wind,invisible ancient source energy surround powered first exploration world may key future map show delicate tracery wind flowing u wind map print available pointb studio read wind wind power wind map personal art project associated company done best make accurate possible ca nt make guarantee correctness data software please use map data fly plane sail boat fight wildfire map missing seems slow recommend latest chrome browser surface wind data come national digital forecast database nearterm forecast revised per hour seeing living portrait see ndfd site precise detail timestamp show time download chasing top wind speed note maximum speed may occur lake offshore looking weather map want detail weather today see traditional map temperature wind
744,Lobsters,visualization,Data Visualization,XKCD-style plots in Matplotlib (not Mathematica!),http://jakevdp.github.com/blog/2012/10/07/xkcd-style-plots-in-matplotlib/,xkcdstyle plot matplotlib mathematica,,xkcd plot generator author jake vanderplas script take matplotlib line diagram convert xkcdstyle plot work plot line text element including ax label title ax tick label idea come work damon mcdougall http wwwmailarchivecommatplotlibusers import numpy np import pylab pl scipy import interpolate signal import matplotlibfontmanager fm need special font code downloaded way import o import ospathexists humorsansttf fhandle http open humorsansttf wb write fhandleread def xkcdline x xlimnone ylimnone mimic handdrawn line x data parameter x arraylike array modified xlim ylim data range assumed plot range modification specified guessed data mag float magnitude distortion int float int filtering parameter give size window give highfrequency cutoff give size filter return x ndarrays modified line x npasarray x npasarray get limit rescaling xlim none xlim xmin xmax ylim none ylim ymin ymax xlim xlim xlim ylim ylim ylim ylim xlim scale data xscaled x xlim xlim xlim yscaled ylim ylim ylim compute total distance along path dx xscaled xscaled dy yscaled yscaled disttot npsum npsqrt dx dx dy dy number interpolated point proportional distance nu int disttot u nparange nu nu interpolate curve sampled point k min len x re interpolatesplprep xscaled yscaled kk xint yint interpolatesplev u re perturb perpendicular drawn line dx xint xint dy yint yint dist npsqrt dx dx dy dy create filtered perturbation coeffs mag nprandomnormal len xint b signalfirwin disttot window kaiser response signallfilter b coeffs xint response dy dist yint response dx dist unscale data xint xint xlim xlim xlim yint yint ylim ylim ylim return xint yint def xkcdify ax bgcolor w xaxislocnone yaxislocnone xaxisarrow yaxisarrow expandaxesfalse make axis look handdrawn adjusts line text legend ax figure look like xkcd plot plot element modified parameter ax ax instance ax modified mag float magnitude distortion int float int filtering parameter give size window give highfrequency cutoff give size filter xaxisloc yaxislog float location draw x ax specified drawn bottom left plot xaxisarrow yaxisarrow str draw arrow xy ax option axextend float far fractionally extend drawn ax beyond original ax limit expandaxes bool true expand ax fill figure useful single ax figure get ax aspect ext axgetwindowextent extent aspect ext ext ext ext xlim axgetxlim ylim axgetylim xspan xlim xlim yspan ylim xlim xaxlim xlim axextend xspan xlim axextend xspan yaxlim ylim axextend yspan ylim axextend yspan xaxisloc none xaxisloc ylim yaxisloc none yaxisloc xlim draw ax xaxis xaxlim xaxlim xaxisloc xaxisloc linestyle color k yaxis yaxisloc yaxisloc yaxlim yaxlim linestyle color k label hello axtext xaxlim xaxisloc yspan axgetxlabel haright vatop axtext yaxisloc xspan yaxlim axgetylabel haright vatop axsetxlabel axsetylabel add title axtext xaxlim xaxlim yaxlim axgettitle hacenter vabottom axsettitle nlines len axlines line xaxis yaxis axlinespop range nlines line line x linegetdata xint yint xkcdline x xlim ylim mag create foreground background line lw linegetlinewidth linesetlinewidth lw linesetdata xint yint nt add background line ax line xaxis line yaxis linebg xint yint colorbgcolor lw axaddline linebg axaddline line draw arrowhead end ax line nparray nparray nprandomnormal nprandomnormal x xaxisgetdata str xaxisarrow axplot x xspan aspect yspan color k str xaxisarrow axplot x xspan aspect yspan color k x yaxisgetdata str yaxisarrow axplot x xspan aspect yspan color k str yaxisarrow axplot x xspan aspect yspan color k change font humorsans prop fmfontproperties fnamehumorsansttf text axtexts textsetfontproperties prop modify legend leg axgetlegend leg none legsetframeon false child leggetchildren isinstance child x childgetdata childsetdata xkcdline x childsetlinewidth childgetlinewidth isinstance child pltext childsetfontproperties prop set axis limit axsetxlim xaxlim xspan xaxlim xspan axsetylim yaxlim yspan yaxlim yspan adjust ax axsetxticks axsetyticks expandaxes axfiguresetfacecolor bgcolor axsetaxisoff axsetposition return ax
745,Lobsters,visualization,Data Visualization,Visualising the Ruby Global VM Lock,http://johnleach.co.uk/words/1245/visualising-the-ruby-global-vm-lock,visualising ruby global vm lock,ceph rados client ensure extension release ruby global vm lock added basic read write support test script extracted blocking part github commit,working ruby binding ceph rados client library first native c ruby extension written learning lot new thing keen ensure extension release ruby global vm lock gvl wherever waiting io thread work written simple test script prove working correctly result textual visualisation releasing gvl improve behaviour thread ruby example added basic read write support library read write object stored ceph rados cluster first pas written without releasing gvl block waiting ceph completed read write test script start three thread one rados write operation loop outputting w stdout succeed one rados read operation writing r one cpu work ruby writing output script added gvl release see almost ruby switching roundrobin style thread waiting one complete one iteration case cpu worker get look several read write iteration extracted blocking part separate function called using ruby rbthreadblockingregion function release gvl reran test script see thread cpu work ruby get considerably work done gvl released networkbased io operation block quite time exactly expected neat see action clearly code library github heavy development moment way complete pushed early write blog commit showing made readwrite operation release gvl
746,Lobsters,visualization,Data Visualization,xkcd-style graphs with Mathematica,http://mathematica.stackexchange.com/questions/11350/xkcd-style-graphs,xkcdstyle graph mathematica,,another way approach xkcdification plot image processing perspective idea warp space image lie rather try warp line imagespace warp line appear vary thickness first define following function nearly line slope one important part small sinusoidal oscillation slope function f x freq str x sin freq sin pi x x str two parameter one control frequency oscillation control strengthamount warping see function applied image space start simple plot mr wizard race since line thin need widened done using erosion function f applied x direction pure function using imagetransformation plot plot x sin x x pi frame true true false false frameticks none imagetransformation erosion image plot f f thin line need erosion graphicsrow pieplot image piechart imagetransformation pieplot f f imagesize another example taken mr wizard answer image transformation graphicsrow plot sin x co x tan x x pi maxrecursion plotpoints plotrange frame true true false false frameticks none ax false imagetransformation erosion image f f imagesize using manipulate easy explore fairly wide variety handdrawn effect using plot manipulate imagetransformation erosion image plot f freq g freq freq frequency strength idea also applied text text style every font comic sans fontsize fontfamily geneva imagetransformation image rasterize text f f interesting property different occurrence letter warped differently underlying space example notice three two n c differ finally promise stop adding new example applied image pattern show underlying space warped function f graphicsrow colornegate import http imagetransformation f f imagesize full stackexchange xkcdified plot using transformation bulk code handle label coloring tooltip allows secret mouseover message best xkcd tradition f x freq str x sin freq sin pi x x str fticks hmm wow boring verynboring enough much none flabels style today stackexchangenquestions fontsize darker red rotate style today work fontsize darker blue pi style time spent mathematica stackexchange fontsize black none tip style seems complex optimization problemncan someone write code fontfamily comic sans m fontsize ftickstyle darker red darker blue black none plot exp x x ax false plot none x plotrange frame true true true none frameticks fticks frameticksstyle ftickstyle labelstyle directive fontfamily comic sans m framelabel flabels xkcdified imagetransformation erosion image f f tooltip imagecompose imageresize image imageresize xkcdified center tip
748,Lobsters,visualization,Data Visualization,Datavisualization.ch Selected Tools,http://selection.datavisualization.ch/,datavisualizationch selected tool,,
749,Lobsters,visualization,Data Visualization,"Using heatRate To Make Effective, Concise Visualizations",http://www.intridea.com/blog/2012/8/28/sparklines-and-heatmaps-using-heatrate-to-make-effective-concise-vizualizations,using heatrate make effective concise visualization,goodfilms sparklines study published ieee transaction visualization computer graphic tagcloud spatial relationship working extremely well reviewing large datasets,main function data visualization help u better understand concept data set quickly done effectively data visualization look organic beautiful primary goal help viewer consume understand gist data quicker heshe looking sum part rating system great example could better data visualization goodfilms mentioned last week post rating system rating system broken typical rating system convey information quickly user browse many entity screen rating system show mean entire dataset mean derived amazoncom breakdown rating show context relationship rating product verbose put browsing view simply take much space problem need show detailed information dataset small space way understood easily quickly plenty research gone sparklines exactly cram detailed information small space sparklines deemed pretty successful application especially surrounded lot content study published ieee transaction visualization computer graphic showed tagcloud using sparklines resulted faster task time fewer error preferred stackedbar multiline chart counterpart ok great sparkline visualization meet need space effective conduit going actually show data typically think heatmaps working really well spatial relationship also attributed working extremely well reviewing large datasets specifically heatmaps used find cluster correlation large datasets data point rating heatmaps sparklines two good solution problem displaying rating result created heatrate jquery plugin take simple array creates cs gradient heatmap display data html element like keep visualization inline element still see detail might otherwise miss standard rating visualization heatrate various option adjust change contrast overall look heatmap gradient altogether work employing hsla choose value change based hue saturation lightness heatrate would good choice use anywhere might varied value data even outside scenario rating system give try share feedback u working new feature project coming week obsessed finding better way visualize data
750,Lobsters,visualization,Data Visualization,Visualizing Device Utilization,http://dtrace.org/blogs/brendan/2011/12/18/visualizing-device-utilization/,visualizing device utilization,utilization heat map command line interface tool tabulated data highlighted data surface plot animated data instantaneous value bar graph vector graph line graph ternary plot quantized heat map definition solaris performance tool problem statement command line interface one server second metric one server second data center second tabulated data one server second data center second highlighted data one server second hsv data center second affinity limitation one server hour surface plot one server second data center second animated data instantaneous value explains heat map bar graph vector graph product server cpu line graph one server second data center second random color average one server ternary plot ternary plot data center second cpuplayer tool limitation quantized heat map sun storage analytics visualizing latency cloud analytics data center second one server second idle server light load busy server saturation hue value heatmap coloring background summary design implementation realtime cloud analytics platform acknowledgment jeff bonwick r lattice visualizing performance imagemagick screenshot gnuplot cpuplayer bryan cantrill dave pacheco robert mustacchi gimp deirdré straughan jason hoffman main page,utilization heat map device utilization key metric performance analysis capacity planning page illustrate different way visualize device utilization across multiple device utilization changing time system study examine production cloud environment contains virtual cpu physical processor show well different visualization work environment scale including cpu utilization heat map command line interface tool tabulated data highlighted data surface plot animated data instantaneous value bar graph vector graph line graph ternary plot quantized heat map originally published http definition device utilization defined time device busy processing work interval device utilization active work time device may accept work becoming system bottleneck may accept work higher latency causing poor performance utilization may imperfect metric depending defined measured listed reason page solaris performance tool still tremendously useful quickly identifying eliminating device source performance issue problem statement given device type cpu disk network interface number device single device cloud server like identify following single multiple device utilization average minimum maximum device utilization device utilization balance tight loose distribution timebased characteristic including time domain identify whether utilization steady changing various finer detail may include short burst high utilization useful know length burst interval longer pattern time may also observed load change hour weekly cycle timebased pattern may also compared metric correlation observed illuminate complex system interaction may possible studying utilization varies across timeseries example use x second value finally like observe realtime command line interface device utilization usually available via command line tool may show perdevice utilization numerically interval summary printed realtime output scroll change time identified reading comparing previous summary tool usually nt handle scale illustrate cpu utilization one server second cpu utilization unixlinux system examined mpstat tool print single line output virtual cpu various useful metric column vary different system one second summary show virtual cpu cpu utilization calculated inverting last column idle evidence software scaleability issue single hot thread one server second also like see change time x second summary mpstat sense scale highlighted second summary shown earlier amount output already difficult digest terminal would many page scroll one server data center second data center server showing second across give impression amount data involved term mpstat output output small whitespace row column creates effect appears like fabric rectangle represents amount data single server contributes server data image actually placed horizontal line one line darker others middle top darkness caused high multidigit value many mpstat column replacing whitespace number prompted investigate server issue turned misconfigured sendmail calling exec per second caused high value minf xcal migr smtx sysctl column tabulated data visualize percpu utilization value persecond table value strip mpstat output inverted idl column provides better sense volume utilization data trying understand one server second cpu x second summary utilization unlike mpstat server summary time font size almost large enough read place single cpu hit utilization visible unbroken line digit data center second server image interesting would guessed click highres faint darker pattern caused area double tripledigit utilization digit give darkness effect differs mpstat dark pattern highlight utilization highlighted data utilization value could highlighted deliberately coloring background relative value one server second distinct pattern emerge burst cpu load across many cpu cpu seems busy entire time perhaps mapped device interrupt cpu visualization thought three dimension pictured right third utilization value represented color saturation using hsv definition saturation data center second server time necessary highlight single server busier server clearly visible red rectangle observation server single hot thread appear depending well thread stay one cpu affinity skip around server like multiple hot cpu also idle cpu may sign load balanced either due thread scalability cpu resource cap server show consistent cpu load time like showing high variance one shown previous one server example idle server clearly seen often contain one two short burst single cpu usage monitoring software entire image speckled short burst also apparent server data center idle time day peak limitation server image answer tricker question problem statement identify single multiple hot device unbalanced utilization bonus utilization shift device nt good expressing exact utilization value rely well eye differentiate color average utilization across device also hard determine data center image provides great impression across server used tool number could dropped highlighting sufficient could made interactive mouse server expanded detail however scaling much difficult example little pixel per data element server virtual cpu instead number element would increase factor image look similar heat map covered later nt one reason heat map usually scalar dimension within server image xaxis scalar time yaxis set cpu id may relative meaning operating system enumerate virtual cpu odd way data center image x yaxes span repeated range server nearby image also nearby physically due way data collected way reliable scalar dimension one server hour server example full hour horizontal strip represents minute included show could happen scaling time interesting image nt cpu utilization lack cpu utilization idle time shown white patch surface plot threedimensional plot created dimension cpu id time utilization given two dimension provided data set regular step cpu id time surface plot may suitable map regular latitude longitude point utilization value becomes surface elevation one problem may already expected shown right utilization value change steeply one point next making surface difficult follow improved reducing elevation utilization dimension one server second cpu x second average time xaxis left right cpu id yaxis zaxis elevation utilization value also colorized based utilization value utilization represented elevation color saturation issue scaling plot type grid line polygon edge wireframe visualization become dense resulting black surface removed data center second server similar visualization highlighted data section server ordering aligned differently click high re zooming returning grid line line width creates extra effect highlighting subtle change elevation click full version line fine visualization approach previous version line thick appears black animated data server time utilization data second shown one frame consists cpu highlighted pixel similar digit dropped animation sped normal time show second loop click full second advantage similar highlighted data example additional disadvantage included printed text identifying timebased pattern relies memory patience memory identify difference sequence frame patience consume information rate animation may become irritating one frame sixsecond loop interesting difficult study visible every loop additional control could added slow pause animation instantaneous value highlighted table current utilization value simple visualization answer question without density including historic data current utilization across cpu actually single frame previous animation utilization digit returned click highres server appear vertical column two row server microsoft window include type visualization task manager show instantaneous utilization value system virtual cpu logical processor screenshot right msdn blog post explains move show cpu scrollbar reveal switched screenshot blue red fit better visuals click original also think red better suggests hot cpu nt include historic data worth including consideration window type visualization device utilization may become widely understood also note microsoft call heat map show different type heat map quantized heat map section bar graph bar graph used show single utilization value scale length bar mac o x activity montior provide floating cpu window bar graph placed anywhere screen example pictured laptop two cpu core bar graph click see green original advantage utilization understood glance instead reading utilization digit examining color visualization could also enhanced placing watermark recent minimum maximum value using bar graph device become difficult scaling cpu scale bar graph may better suited average utilization across device vector graph angle used visualization device example gauge similar car tachometer show server cpu utilization average cpu commercial monitoring product intended cloud environment bar graph show single utilization value value may indicated around edge example green red spectrum sure coloring mean context cpu utilization least show end range could also decorative along whitespace around round shape make visualization type one least dense may problem scaling see could scale cloud environment created couple montage example image server cpu pixel wide image include single cpu utilization another find line graph showing time xaxis allows passing time visualized intuitively left right level utilization shown yaxis understood glance compared quickly accurately one second next comparison difficult color requires reading digit one server second cpu drawn separate line server previously visualized separately shown single cpu hitting clearly seen although line multiple cpu remaining overlap comparison busier server previously visualized cpu utilization loosely grouped around cpu hitting every eight second also noticeable longer flat bottom edge idle cpu showing usually cpu work server mostly idle previously visualized look like activity two period seen large spike singlecpu utilization every second smaller burst every eight second data center second scaling cpu visualization nt really worked using full range random color nt help either pattern horizontal line utilization visible cpu drawn last top previous line see bottom data center visualization highlighted data section cpu ordering shuffled drawn line vanish average one server taking first server showing average utilization across cpu work well average change time often used capacity planning average hide presence device utilization cpu system cpu contributes average even cpu change utilized line move much smaller harder see across multiple system adding maximum line show hottest device work practice often like know many device hot disk zfs filesystem example often hit period second transaction group flush perfectly normal one two disk utilization however normal particularly difficult pathology unreported drive failure seen many time like know knowing something hit many device close ternary plot barycentric coordinate system used create ternary plot showing three component cpu utilization user system idle usertime time spent application code systemtime time spent kernel processing system call interrupt routine asynchronous kernel thread breakdown cpu utilization commonly used unix linux operating system useful better understanding cpu workload mpstat tool print default usr sys idl data center second plot right includes cpu also animated frame second first second included keep gif small advantage visualization one three dimension picked point considered based dimension plot rotated aid also three dimension read directly point another potential advantage pattern user system cpu time could identified could also identified xy plot usr sys device type breakdown utilization three component could also visualized using created using cpuplayer tool awk program reprocess previously collected mpstat data modified cpuplayer handle high cpu count made cosmetic change simplify look original includes gridlines aid reading dimension limitation one issue visualization cpu overlap especially corner making difficult know many cpu state made worse data set using integer value utilization due limitation mpstat underlying operating system statistic case high resolution cpu microstates also issue making animation memory patience discussed previously triangle shape leaf much room unused top corner may become noticeable multiple ternary plot drawn instead animation note rectangular xy plot usr sys would similar degree unused space triangular area usr sys greater quantized heat map finally device utilization heat map aka heatmap us column quantization visualize utilization three dimension time xaxis percent utilization yaxis number cpu zaxis color saturation within timelatency range perhaps useful visualization created date bryan cantrill first developed sun storage analytics worked advanced product team sun microsystems mentioned towards end acmq article visualizing latency heading application summarizes concept utilization component also visualized heat map showing percent utilization individual component instead displaying average percent utilization across component utilization shown yaxis number component utilization shown color heatmap pixel particularly useful examining disk cpu utilization check load balanced across component tight grouping darker color show load balanced evenly cloud lighter pixel show nt outlier also interesting single cpu percent utilization may shown light line top heat map typically result software scalability issue single thread execution single disk percent utilization also interesting result disk failure identified using average maximum alone maximum differentiate single disk percent utilization multiple disk percent utilization happen normal burst load developed joyent cloud analytics product used analyze performance device across multiple system cloud utilization heat map may become standard tool visualizing device utilization especially light cpu scaling cloud computing environment data center second server cpu recapping xaxis time yaxis cpu utilization percent zaxis saturation show many cpu time utilization level shown right different previous visualization color longer represents utilization used cpu count rectangle make heat map bucket spanning time utilization range colored based cpu count darker mean darker color bottom heat map show constant concentration idle cpu red line top show constant presence cpu utilization dark color line show multiple cpu one explain exact color algorithm saturation section apart identifying multiple cpu show generally cpu idle near bottom plot subtle band also seen around one server second seeing look single server selected previously cpu cpu hitting seen top plot period cpu idle also clearly visible bottom number quantize bucket yaxis high cpu appears scatter plot reducing number bucket ten well reducing height quantize range likely span multiple cpu shade chosen help create pattern server example follow include much whitespace simple border added idle server idle server shown line graph earlier light load server light load single cpu sometimes hitting busy server busier server tighter distribution cpu utilization grouped around saturation color saturation bucket reflects relative number cpu quantized timeutilization range cpu darker color actual algorithm used nonlinear help identify subtle pattern linear algorithm could used make bucket highest cpu count darkest shade available bucket lowest cpu count probably zero lightest bucket inbetween scaled linearly practice wash detail bucket case cpu utilization idle bucket representing utilization would high cpu count others use much lighter shade appear washed example linear application saturation based value right heat map bucket first sorted least cpu full spectrum shade applied sorted list ensures full spectrum shade used making best use dimension allowing subtle pattern seen would otherwise washed approach devised bryan cantrill heat map used sun storage product named rankbased coloring hue value hue used red merely stay consistent image used highlighting data section red meant hotter cpu seems intuitive red mean concentration cpu even line looking represents idle cpu probably nt good choice color easily changed sun microsystems analytics chose blue joyent cloud analytics chose orange heat map could adjusted retain intuitive nature red mean hot first example right allowed top utilization range red lower utilization range grayscale beneath different example value red hue scaled based utilization may referred saturation depending color model used another use hue reflect fourth dimension joyent cloud analytics makeup heat map investigated highlighting component different hue collected fourth dimension data data center heat map individual server could highlighted hue david pacheco wrote heatmap coloring explain also provides example rankbased v linear coloring background thought using heat map device utilization burned performance issue development sun storage appliance including sloth disk disk mysteriously begin returning slow io second yet return error count hard soft percent utilization reported operating system percent busy would stay second time disk raid stripe idle sloth disk would kill performance needed way field engineer customer could easily identify constraint could nt look max utilization zfs file system often drove disk utilization transaction group flush identify presence one two disk hot thread usually software designed scale across available cpu cpu idle others utilization could simple codepath multithreaded nt one particular issue ran zfs pipeline originally stage could processed eight thread hot stage compression could limit zfs performance eight cpu could used since fixed type issue workload become bounded performance busy device majority device idle seen type problem across device type cpu disk network interface storage controller etc device utilization heat map quickly proved excellent way identify type issue well show many useful characteristic summary visualization created illustrate different way observe device utilization large scale environment frequently need analyze urgent performance issue environment using variety tool varying degree success sometimes customer unable resolve crippling issue visualization hide important detail common problem line graph showing average device utilization making impossible identify single multiple device condensed year pain frustration problem statement top page showed various visualization satisfy need suggest using quantized heat map identify single multiple device utilization minimum maximum device utilization device utilization balance time performance analysis line graph observe average utilization across multiple device time capacity planning visualization realtime change environment analyzed immediately repaired sooner dave pacheco showed joyent cloud analytics oscon presentation design implementation realtime cloud analytics platform visualization interactive example user could click device quantized heat map shown information explain many device server also consider including visualization plus text time important verbalize state performance quickly emergency concall text could include average utilization across device different time interval previous minute hour day week maximum utilization percentile could also included convey detail upper distribution love see quantized heat map show place currently bar graph line graph used acknowledgment many tool used create image post type command line interface tool mpstat solaris originally jeff bonwick visualized data using shell scripting awk firefox screengrab plugin tabulated data tool highlighted data tool surface plot made using r lattice package inspired dominic kay visualizing performance work animated data tool imagemagick assemble animation instantaneous value includes screenshot microsoft window bar graph includes mac o x activity monitor line graph created gnuplot trying tool could nt handle line ternary plot cpu visualization type created dr neil j gunther cpuplayer written stefan parvu quantized heat map type device utilization created sun microsystems working bryan cantrill developed sun storage zfs appliance developed dave pacheco robert mustacchi others cloud analytics team joyent gimp used post processing image style inspired edward tufte including clearing chart junk line graph use high definition graphic text micro heat map like tufte recommend reading visual explanation beautiful evidence envisioning information visual display quantitative information william cleveland element graphing data visualizing data tempted reassemble blog post categorize visualization univariate bivariate multivariate type thanks deirdré straughan editing page suggestion improve content people particularly jason hoffman referring book article link read visualization heat map see main page
